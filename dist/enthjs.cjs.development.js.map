{"version":3,"file":"enthjs.cjs.development.js","sources":["../src/reactivity.ts","../src/errors.ts","../src/composables/element.ts","../src/composables/context.ts","../src/directive.ts","../src/directives/clss.ts","../src/html.ts","../src/scheduler.ts","../src/render.ts","../src/directives/sub.ts","../src/composables/sideeffects.ts","../src/component.ts","../src/composables/properties.ts","../src/composables/attributes.ts","../src/directives/text.ts","../src/directives/prop.ts","../src/directives/input.ts","../src/directives/on.ts","../src/directives/attr.ts","../src/directives/list.ts"],"sourcesContent":["const isProxyMap: WeakSet<object> = new WeakSet();\nfunction proxify(obj: any, onChange: () => void): any {\n  let initialized = false;\n  let onChangeWrapped = () => {\n    if (initialized) {\n      onChange();\n    }\n  };\n  const proxy = new Proxy(obj as any, {\n    get: (obj, prop) => {\n      if (\n        obj[prop] &&\n        typeof obj[prop] === 'object' &&\n        !isProxyMap.has(obj[prop]) &&\n        prop !== 'on' &&\n        initialized\n      ) {\n        obj[prop] = proxify(obj[prop], onChange);\n      }\n      return obj[prop];\n    },\n    set: (obj, prop, value) => {\n      if (\n        (obj[prop] !== value || !initialized) &&\n        prop !== '__$p' &&\n        prop !== 'on'\n      ) {\n        if (typeof value === 'object' && !isProxyMap.has(obj[prop])) {\n          value = proxify(value, onChangeWrapped);\n        }\n        obj[prop] = value;\n        onChangeWrapped();\n      } else if (prop === 'on') {\n        obj[prop] = value;\n      }\n      return true;\n    },\n  });\n  Object.keys(obj).forEach(key => {\n    proxy[key] = obj[key];\n  });\n  isProxyMap.add(proxy);\n  initialized = true;\n  return proxy;\n}\nexport type State<S extends {} = {}> = S & {\n  on: (listener: () => void) => () => void;\n};\n\nexport const $state = <S extends {} = {}>(\n  initialState: Partial<S> = {}\n): State<S> => {\n  const proxy = proxify(initialState, () => {\n    listeners.forEach(l => l());\n  });\n  let listeners: (() => void)[] = [];\n  proxy.on = (listener: () => void): (() => void) => {\n    listeners.push(listener);\n    return () => {\n      const index = listeners.indexOf(listener);\n      if (index > 1) {\n        listeners.splice(index, 1);\n      }\n    };\n  };\n  return proxy;\n};\n","export const getOnlySetupError = (subject: string): string =>\n  `${subject} can only be used during setup!`;\n","import { getOnlySetupError } from '../errors';\n\nconst global: { __$c: HTMLElement } = window as any;\n\nexport const setUpContext = (context: HTMLElement, cb: () => void): void => {\n  global.__$c = context;\n  cb();\n  global.__$c = undefined;\n};\n\nexport const getElement = (): HTMLElement => {\n  if (global.__$c) {\n    return global.__$c;\n  } else {\n    throw getOnlySetupError('getElement');\n  }\n};\n","import { State, $state } from '../reactivity';\nimport { getElement } from './element';\n\nconst contextMap: WeakMap<Node, { [key: string]: State<any> }> = new WeakMap();\n\nexport interface ContextAPI<Context extends {}> {\n  provide: (value: Context) => State<Context>;\n  get: () => State<Context>;\n}\nexport function createContext<Context extends {}>(\n  name: string,\n  defaulValue: Context\n): ContextAPI<Context> {\n  const $defaultContext = $state<Context>(defaulValue);\n  return {\n    provide: (value: Context) => {\n      contextMap.set(getElement(), {\n        ...(contextMap.get(getElement()) || {}),\n        [name]: $state<Context>(value),\n      });\n      return contextMap.get(getElement())[name];\n    },\n    get: () => {\n      const element = getElement();\n      let parent: Node = element;\n      while (\n        (parent = parent.parentNode || (parent as any).host) &&\n        parent !== document.body\n      ) {\n        const $context = contextMap.has(parent) && contextMap.get(parent)[name];\n        if ($context) {\n          return $context;\n        }\n      }\n      return $defaultContext;\n    },\n  };\n}\n","export interface DOMUpdate {\n  node: Node;\n  newNode?: Node;\n  type: DOMUpdateType;\n  value?: string;\n  name?: string;\n}\nexport enum DOMUpdateType {\n  TEXT,\n  REPLACE_NODE,\n  ADD_NODE,\n  INSERT_BEFORE,\n  REMOVE,\n  ADD_CLASS,\n  REMOVE_CLASS,\n  SET_ATTRIBUTE,\n}\n\nexport type DirectiveGenerator<Args extends any[] = any[]> = Generator<\n  DOMUpdate[] | Promise<DOMUpdate[]> | void,\n  void,\n  Args\n>;\n\nexport type DirectiveGeneratorFactory<\n  N extends Node = Node,\n  Args extends any[] = any[]\n> = (node: N, ...initialArgs: Args) => DirectiveGenerator<Args>;\nexport interface DirectiveResult<\n  N extends Node = Node,\n  Args extends any[] = any[]\n> {\n  factory: DirectiveGeneratorFactory<N, Args>;\n  args: Args;\n  directive: Directive;\n}\nexport type Directive<N extends Node = Node, Args extends any[] = any[]> = (\n  ...args: Args\n) => DirectiveResult<N, Args>;\nexport const IS_DIRECTIVE = Symbol('directive');\nexport function createDirective<\n  Args extends any[],\n  N extends Node = any,\n  F extends DirectiveGeneratorFactory<N, Args> = DirectiveGeneratorFactory<\n    N,\n    Args\n  >\n>(\n  factory: F\n): F extends (node: N, ...initialArgs: infer A) => DirectiveGenerator<any>\n  ? Directive<N, A>\n  : never {\n  return ((factory: F) => {\n    const directive = function(...args: Args) {\n      return {\n        is: IS_DIRECTIVE,\n        factory,\n        args,\n        directive,\n      };\n    } as any;\n    return directive;\n  })(factory);\n}\n","import { createDirective, DOMUpdate, DOMUpdateType } from '../directive';\n\nexport const clss = createDirective(function*(node: Node, classes: string) {\n  if (node instanceof HTMLElement) {\n    let oldClasses: string[] = [];\n    for (;;) {\n      const result: DOMUpdate[] = [];\n      oldClasses.forEach(oldCls => {\n        if (!!oldCls) {\n          result.push({\n            type: DOMUpdateType.REMOVE_CLASS,\n            node,\n            value: oldCls,\n          });\n        }\n      });\n      oldClasses = classes.trim().split(' ');\n      oldClasses.forEach(cls => {\n        if (!!cls) {\n          result.push({\n            type: DOMUpdateType.ADD_CLASS,\n            node,\n            value: cls,\n          });\n        }\n      });\n      classes = (yield result)[0];\n    }\n  }\n});\n","import { IS_DIRECTIVE, DirectiveResult } from './directive';\n\nconst isLetter = (c: string): boolean => {\n  return c.toLowerCase() != c.toUpperCase();\n};\n\nexport enum DirectiveType {\n  TEXT,\n  ATTRIBUTE,\n  ATTRIBUTE_VALUE,\n}\nexport interface DirectiveData {\n  d: DirectiveResult;\n  t?: DirectiveType;\n  a?: string;\n}\nconst insertAttributeMarker = (\n  marker: string,\n  si: number,\n  appendedStatic: string\n): string => {\n  while (si++) {\n    const char = appendedStatic.charAt(si);\n    if (!char) {\n      break;\n    }\n    if (char === ' ') {\n      return (\n        appendedStatic.slice(0, si) + ' ' + marker + appendedStatic.slice(si)\n      );\n    }\n  }\n  return appendedStatic;\n};\nexport const getTextMarker = (id: number): string => {\n  return `tm-${id}`;\n};\nexport const getAttributeMarker = (id: number): string => {\n  return `data-am-${id}`;\n};\nexport interface HTMLResult {\n  template: HTMLTemplateElement;\n  directives: DirectiveData[];\n  key?: string;\n}\nexport type HTML = typeof html;\nfunction isDirective(thing: any): boolean {\n  return thing.is && thing.is === IS_DIRECTIVE;\n}\nlet resultCache: WeakMap<TemplateStringsArray, HTMLResult> = new WeakMap();\nexport const html = (\n  staticParts: TemplateStringsArray,\n  ...dynamicParts: any[]\n): HTMLResult => {\n  let result: HTMLResult = resultCache.get(staticParts);\n  if (!result) {\n    let appendedStatic: string = '';\n    const directives: DirectiveData[] = [];\n    for (let i = 0; i < dynamicParts.length; i++) {\n      const dynamicPart = dynamicParts[i];\n      const staticPart = staticParts[i];\n      appendedStatic += staticPart;\n      if (!isDirective(dynamicPart)) {\n        appendedStatic += dynamicPart;\n        continue;\n      }\n      let id =\n        directives.push({\n          d: dynamicPart,\n        }) - 1;\n      let si = appendedStatic.length + 1;\n      let attributeValueMode = false;\n      let attributeMode = false;\n      let attributeNameFound = false;\n      let attributeName = '';\n      while (si--) {\n        const char = appendedStatic.charAt(si);\n        const nextChar = appendedStatic.charAt(si - 1);\n        const nextNextChar = appendedStatic.charAt(si - 2);\n        if (char === '>' || si === 0) {\n          let marker = getTextMarker(id);\n          appendedStatic += `<${marker}>&zwnj;</${marker}>`;\n          directives[id].t = DirectiveType.TEXT;\n          break;\n        }\n        if (\n          char === '\"' &&\n          nextChar === '=' &&\n          isLetter(nextNextChar) &&\n          !attributeMode\n        ) {\n          attributeValueMode = true;\n          continue;\n        }\n        if (char === '\"' && nextNextChar !== '=' && !attributeValueMode) {\n          attributeValueMode = false;\n          attributeMode = true;\n          continue;\n        }\n        if (\n          attributeValueMode &&\n          char !== '\"' &&\n          char !== '=' &&\n          !attributeNameFound\n        ) {\n          if (char !== ' ') {\n            attributeName = char + attributeName;\n          } else {\n            attributeNameFound = true;\n          }\n        }\n        if (char === '<' && attributeValueMode) {\n          appendedStatic = insertAttributeMarker(\n            getAttributeMarker(id),\n            si,\n            appendedStatic\n          );\n          directives[id].t = DirectiveType.ATTRIBUTE_VALUE;\n          directives[id].a = attributeName;\n          if (appendedStatic[appendedStatic.length - 1] === ' ') {\n            appendedStatic = appendedStatic.slice(0, appendedStatic.length - 1);\n          }\n          break;\n        }\n        if (char === '<' && !attributeValueMode) {\n          appendedStatic = insertAttributeMarker(\n            getAttributeMarker(id),\n            si,\n            appendedStatic\n          );\n          directives[id].t = DirectiveType.ATTRIBUTE;\n          break;\n        }\n      }\n    }\n    appendedStatic += staticParts[staticParts.length - 1];\n    const template = document.createElement('template');\n    template.innerHTML = appendedStatic.trim();\n    result = {\n      template,\n      directives,\n    };\n  } else {\n    let directiveIndex: number = 0;\n    result = {\n      ...result,\n      directives: result.directives.map(directive => {\n        const { a, t } = directive;\n        return {\n          a,\n          t,\n          d: undefined,\n        };\n      }),\n    };\n    dynamicParts.forEach((value: any) => {\n      if (isDirective(value)) {\n        result.directives[directiveIndex].d = value;\n        directiveIndex++;\n      }\n    });\n  }\n  resultCache.set(staticParts, result);\n  return result;\n};\n","export enum PriorityLevel {\n  IMMEDIATE = 0, //synchronous\n  USER_BLOCKING = 250, //.25s timeout\n  NORMAL = 5000, // 5s timeout\n  LOW = 10000, // 10s timeout\n  IDLE = 99999999, // no timeout (run only when nothing else is scheduled)\n}\ntype ScheduledJob = [() => void, number];\nlet scheduledJobs: ScheduledJob[] = [];\nlet schedulerRunning: boolean = false;\nconst MAX_ELAPSED: number = 17;\nconst processJobQueue = (\n  queue: ScheduledJob[],\n  now: number\n): ScheduledJob[] => {\n  let index = 0;\n  for (let length = queue.length; index < length; index++) {\n    const totalElapsed: number = Date.now() - now;\n    const [cb, latestEndTime] = queue[index];\n    if (now >= latestEndTime || totalElapsed < MAX_ELAPSED) {\n      cb();\n    } else {\n      break;\n    }\n  }\n  return queue.slice(index);\n};\nconst processScheduledJobs = () => {\n  const now: number = Date.now();\n  scheduledJobs = processJobQueue(\n    scheduledJobs.sort((a, b) => (a[1] < b[1] ? -1 : 1)),\n    now\n  );\n  if (scheduledJobs.length > 0) {\n    requestAnimationFrame(processScheduledJobs);\n  } else {\n    schedulerRunning = false;\n  }\n};\nexport const schedule = (\n  cb: () => void,\n  priority: PriorityLevel = PriorityLevel.NORMAL\n): Promise<void> => {\n  if (priority === PriorityLevel.IMMEDIATE) {\n    cb();\n  } else {\n    return new Promise(resolve => {\n      scheduledJobs.push([\n        () => {\n          cb();\n          resolve();\n        },\n        Date.now() + priority,\n      ]);\n      if (!schedulerRunning) {\n        requestAnimationFrame(processScheduledJobs);\n        schedulerRunning = true;\n      }\n    });\n  }\n  return Promise.resolve();\n};\nexport type Schedule = typeof schedule;\n","import {\n  HTMLResult,\n  DirectiveType,\n  getTextMarker,\n  getAttributeMarker,\n} from './html';\nimport { DirectiveGenerator, DOMUpdate, DOMUpdateType } from './directive';\nimport { schedule } from './scheduler';\n\nconst renderedNodesMap: WeakMap<HTMLElement, Node[]> = new WeakMap();\nexport const clear = (container: HTMLElement) => {\n  if (renderedNodesMap.has(container)) {\n    renderedNodesMap\n      .get(container)\n      .forEach(node => container.removeChild(node));\n    renderedNodesMap.delete(container);\n  }\n};\nconst generatorMap: WeakMap<HTMLElement, DirectiveGenerator[]> = new WeakMap();\nexport const render = (\n  container: HTMLElement,\n  htmlResult: HTMLResult\n): void => {\n  let fragment: DocumentFragment;\n  if (!renderedNodesMap.has(container)) {\n    const generators: DirectiveGenerator[] = [];\n    generatorMap.set(container, generators);\n    fragment = htmlResult.template.content.cloneNode(true) as DocumentFragment;\n    htmlResult.directives.forEach((directiveData, id) => {\n      switch (directiveData.t) {\n        case DirectiveType.TEXT:\n          const placeholder = fragment.querySelector(getTextMarker(id));\n          const textNode = placeholder.firstChild;\n          generators[id] = directiveData.d.factory(\n            textNode,\n            ...directiveData.d.args\n          );\n          placeholder.parentNode.replaceChild(textNode, placeholder);\n          break;\n        case DirectiveType.ATTRIBUTE:\n        case DirectiveType.ATTRIBUTE_VALUE:\n          const marker = getAttributeMarker(id);\n          const node = fragment.querySelector(`[${marker}]`);\n          generators[id] = directiveData.d.factory(\n            node,\n            ...directiveData.d.args\n          );\n          node.removeAttribute(marker);\n      }\n    });\n    renderedNodesMap.set(container, Array.from(fragment.childNodes));\n  }\n\n  const generators: DirectiveGenerator[] = generatorMap.get(container);\n  htmlResult.directives.forEach(async (directiveData, id) => {\n    const result = generators[id].next(directiveData.d.args);\n    if (result.value) {\n      const domUpdate: DOMUpdate[] = await result.value;\n      schedule(() => {\n        domUpdate.forEach(d => {\n          switch (d.type) {\n            case DOMUpdateType.TEXT:\n              d.node.textContent = d.value;\n              break;\n            case DOMUpdateType.ADD_NODE:\n              d.node.appendChild(d.newNode);\n              break;\n            case DOMUpdateType.REPLACE_NODE:\n              d.node.parentNode.replaceChild(d.newNode, d.node);\n              break;\n            case DOMUpdateType.INSERT_BEFORE:\n              d.node.parentNode.insertBefore(d.newNode, d.node);\n              break;\n            case DOMUpdateType.REMOVE:\n              d.node.parentNode.removeChild(d.node);\n              break;\n            case DOMUpdateType.ADD_CLASS:\n              (d.node as HTMLElement).classList.add(d.value);\n              break;\n            case DOMUpdateType.REMOVE_CLASS:\n              (d.node as HTMLElement).classList.remove(d.value);\n              break;\n            case DOMUpdateType.SET_ATTRIBUTE:\n              (d.node as HTMLElement).setAttribute(d.name, d.value);\n              break;\n          }\n        });\n      });\n    }\n  });\n  if (fragment) {\n    container.appendChild(fragment);\n  }\n};\n","import { createDirective, DOMUpdateType, DOMUpdate } from '../directive';\nimport { HTMLResult } from '../html';\nimport { render } from '../render';\n\nexport const sub = createDirective(function*(\n  node: Text,\n  htmlResult: HTMLResult\n) {\n  if (node.nodeType === 3) {\n    const start = document.createComment('');\n    let result: DOMUpdate[] = [\n      {\n        type: DOMUpdateType.REPLACE_NODE,\n        node,\n        newNode: start as any,\n      },\n    ];\n    let prevTemplate: HTMLTemplateElement;\n    let prevFrag: DocumentFragment;\n    let prevChildren: Node[] = [];\n    for (;;) {\n      if (prevTemplate === htmlResult.template) {\n        render(prevFrag as any, htmlResult);\n      } else {\n        const frag = document.createDocumentFragment();\n        render(frag as any, htmlResult);\n        prevChildren.forEach(child => {\n          result.push({\n            type: DOMUpdateType.REMOVE,\n            node: child,\n          });\n        });\n        prevChildren = [];\n        frag.childNodes.forEach(child => {\n          prevChildren.push(child);\n          result.push({\n            type: DOMUpdateType.INSERT_BEFORE,\n            node: start,\n            newNode: child,\n          });\n        });\n        prevTemplate = htmlResult.template;\n        prevFrag = frag;\n      }\n      htmlResult = (yield result)[0];\n      result = [];\n    }\n  }\n});\n","import { getElement } from './element';\nimport { schedule, PriorityLevel } from '../scheduler';\n\nexport type CleanUp = () => void;\nexport type SideEffect = () => void | CleanUp;\ninterface SideEffectsMapItem {\n  e: SideEffect;\n  d?: () => any[];\n  p?: any[];\n  c?: CleanUp;\n}\nconst sideEffectsMap: WeakMap<\n  HTMLElement,\n  SideEffectsMapItem[]\n> = new WeakMap();\n\nexport const sideEffect = (effect: () => void, dependencies?: () => any[]) => {\n  const element = getElement();\n  sideEffectsMap.set(\n    element,\n    (sideEffectsMap.get(element) || []).concat({\n      e: effect,\n      d: dependencies,\n    })\n  );\n};\nconst shouldEffectRun = (effectMapItem: SideEffectsMapItem): boolean => {\n  const { d, p } = effectMapItem;\n  let shouldRun: boolean = true;\n  if (d) {\n    const deps = d();\n    if (\n      p &&\n      (deps === p ||\n        (deps.length === p.length &&\n          deps.findIndex((dep, index) => p[index] !== dep))) === -1\n    ) {\n      shouldRun = false;\n    }\n  }\n  return shouldRun;\n};\nexport const runSideEffects = (element: HTMLElement): Promise<void[]> => {\n  const sideEffects = sideEffectsMap.get(element) || [];\n  if (sideEffects.length > 0) {\n    return Promise.all(\n      sideEffects\n        .map(effectMapItem => {\n          const { c } = effectMapItem;\n          if (c && shouldEffectRun(effectMapItem)) {\n            return schedule(() => {\n              c();\n              effectMapItem.c = undefined;\n            }, PriorityLevel.USER_BLOCKING);\n          }\n          return undefined;\n        })\n        .filter(p => p)\n    ).then(() =>\n      Promise.all(\n        sideEffects\n          .map(effectMapItem => {\n            const { e, d } = effectMapItem;\n            let shouldRun: boolean = shouldEffectRun(effectMapItem);\n            if (d) {\n              effectMapItem.p = d();\n            }\n            if (shouldRun) {\n              return schedule(() => {\n                const cleanUp = e();\n                if (cleanUp) {\n                  effectMapItem.c = cleanUp;\n                }\n              }, PriorityLevel.USER_BLOCKING);\n            }\n            return undefined;\n          })\n          .filter(p => p)\n      )\n    );\n  } else {\n    return Promise.resolve([]);\n  }\n};\n","import { HTMLResult } from './html';\nimport { render } from './render';\nimport { schedule, PriorityLevel } from './scheduler';\nimport { setUpContext } from './composables/element';\nimport { runSideEffects } from './composables/sideeffects';\nimport { State } from './reactivity';\n\nexport interface ComponentDefinition {\n  render: () => HTMLResult;\n  watch?: State<{}>[];\n}\nexport type Setup = () => ComponentDefinition;\nexport const component = (name: string, setup: Setup) => {\n  customElements.define(\n    name,\n    class extends HTMLElement {\n      private renderQueued: boolean = false;\n      private nextRenderQueued: boolean = false;\n      private render: () => HTMLResult;\n      private watch: State<{}>[] = [];\n      private watchOff: (() => void)[];\n      constructor() {\n        super();\n        this.attachShadow({ mode: 'open' });\n        setUpContext(this, () => {\n          const result = setup();\n          this.render = result.render;\n          this.watch = result.watch;\n        });\n      }\n\n      private wasConnected: boolean = false;\n      public connectedCallback() {\n        if (this.isConnected && !this.wasConnected) {\n          this.wasConnected = true;\n          this.performRender();\n          if (this.watch) {\n            this.watchOff = this.watch.map(s =>\n              s.on(() => {\n                this.performRender();\n              })\n            );\n          }\n        }\n      }\n\n      public disconnectedCallback() {\n        if (this.wasConnected) {\n          this.wasConnected = false;\n          if (this.watchOff) {\n            this.watchOff.forEach(s => s());\n            this.watchOff = undefined;\n          }\n        }\n      }\n\n      private performRender() {\n        if (!this.renderQueued) {\n          this.renderQueued = true;\n          schedule(() => {\n            render(this.shadowRoot as any, this.render());\n          }, PriorityLevel.USER_BLOCKING)\n            .then(async () => await runSideEffects(this))\n            .then(() => {\n              this.renderQueued = false;\n              if (this.nextRenderQueued) {\n                this.nextRenderQueued = false;\n                this.performRender();\n              }\n            });\n        } else {\n          this.nextRenderQueued = true;\n        }\n      }\n    }\n  );\n};\n","import { getElement } from './element';\nimport { $state } from '../reactivity';\n\nexport const $prop = <T>(name: string, initialValue: T): { value: T } => {\n  const element = getElement() as any;\n  const state = $state({ value: element[name] || initialValue });\n  Object.defineProperty(element, name, {\n    get: () => state.value,\n    set: (value: any) => {\n      state.value = value;\n    },\n  });\n  return state;\n};\n","import { $state } from '../reactivity';\nimport { getElement } from './element';\nimport { sideEffect } from './sideeffects';\n\nconst attributeCallbackMap: WeakMap<\n  HTMLElement,\n  { [key: string]: (() => void)[] }\n> = new Map();\nconst observerMap: WeakMap<HTMLElement, MutationObserver> = new WeakMap();\n\nconst addObserver = (element: HTMLElement): void => {\n  if (!observerMap.has(element)) {\n    const observer = new MutationObserver((mutationsList: MutationRecord[]) => {\n      for (const mutation of mutationsList) {\n        if (mutation.type === 'attributes') {\n          const callbacks =\n            (attributeCallbackMap.get(element) || {})[mutation.attributeName] ||\n            [];\n          callbacks.forEach(cb => cb());\n        }\n      }\n    });\n    observerMap.set(element, observer);\n  }\n};\n\nconst startObserving = (element: HTMLElement) => {\n  if (observerMap.has(element)) {\n    observerMap.get(element).observe(element, { attributes: true });\n  }\n};\n\nconst stopObserving = (element: HTMLElement) => {\n  if (observerMap.has(element)) {\n    observerMap.get(element).disconnect();\n  }\n};\n\nconst observeAttribute = (\n  element: HTMLElement,\n  name: string,\n  cb: () => void\n): void => {\n  if (!attributeCallbackMap.has(element)) {\n    attributeCallbackMap.set(element, {});\n  }\n  if (!attributeCallbackMap.get(element)[name]) {\n    attributeCallbackMap.get(element)[name] = [];\n  }\n  attributeCallbackMap.get(element)[name].push(cb);\n};\n\nexport const $attr = (\n  name: string,\n  initialValue: string = ''\n): { value: string } => {\n  const element = getElement();\n  addObserver(element);\n  observeAttribute(element, name, () => {\n    const value = element.getAttribute(name);\n    if (state.value !== value) {\n      state.value = element.getAttribute(name);\n    }\n  });\n\n  if (element.hasAttribute(name)) {\n    initialValue = element.getAttribute(name);\n  }\n\n  element.setAttribute(name, initialValue);\n\n  const state = $state({ value: element.getAttribute(name) });\n\n  sideEffect(\n    () => {\n      stopObserving(element);\n      element.setAttribute(name, state.value);\n      startObserving(element);\n    },\n    () => [state.value]\n  );\n\n  return state;\n};\n","import { createDirective, DOMUpdateType } from '../directive';\n\nexport const text = createDirective(function*(node: Text, value: string) {\n  for (;;) {\n    const result = yield [\n      {\n        node,\n        value,\n        type: DOMUpdateType.TEXT,\n      },\n    ];\n    value = result[0];\n  }\n});\n","import { createDirective } from '../directive';\n\nexport const prop = createDirective(function*(\n  node: Node,\n  name: string,\n  value: any\n) {\n  if (node instanceof HTMLElement) {\n    for (;;) {\n      (node as any)[name] = value;\n      const newArgs = yield;\n      name = newArgs[0];\n      value = newArgs[1];\n    }\n  }\n});\n","import { createDirective } from '../directive';\nimport { PriorityLevel, schedule } from '../scheduler';\n\nexport const input = createDirective(function*(\n  node: HTMLElement,\n  cb: (value: string) => void\n) {\n  const cbRef = {\n    cb,\n  };\n  node.addEventListener('input', e => {\n    const value: string = (e.target as HTMLInputElement).value;\n    schedule(() => cbRef.cb(value), PriorityLevel.NORMAL);\n  });\n  for (;;) {\n    cbRef.cb = (yield)[0];\n  }\n});\n","import { createDirective } from '../directive';\nimport { PriorityLevel, schedule } from '../scheduler';\n\nexport const on = createDirective(function*(\n  node: HTMLElement,\n  name: string,\n  cb: <E extends Event>(e: E) => void\n) {\n  const cbRef = {\n    cb,\n  };\n  node.addEventListener(name, e => {\n    schedule(() => cbRef.cb(e), PriorityLevel.IMMEDIATE);\n  });\n  for (;;) {\n    cbRef.cb = (yield)[1];\n  }\n});\n","import { createDirective, DOMUpdate, DOMUpdateType } from '../directive';\n\nexport const attr = createDirective(function*(\n  node: Node,\n  name: string,\n  value: string\n) {\n  if (node instanceof HTMLElement) {\n    for (;;) {\n      const result: DOMUpdate[] = [\n        {\n          type: DOMUpdateType.SET_ATTRIBUTE,\n          node,\n          value,\n          name,\n        },\n      ];\n      const newArgs = yield result;\n      name = newArgs[0];\n      value = newArgs[1];\n    }\n  }\n});\n","import { createDirective, DOMUpdateType, DOMUpdate } from '../directive';\nimport { HTMLResult, getAttributeMarker } from '../html';\nimport { render } from '../render';\n\nexport function getKey(htmlResult: HTMLResult): string {\n  let id: number = 0;\n  for (const directive of htmlResult.directives) {\n    if ((directive.d.directive as any) === key) {\n      const listNode = htmlResult.template.content.querySelector(\n        `[${getAttributeMarker(id)}]`\n      );\n      if (listNode && !listNode.parentElement) return directive.d.args[0];\n    }\n    id++;\n  }\n  return htmlResult.template.innerHTML;\n}\n\nexport const list = createDirective(function*(\n  node: Text,\n  htmlResults: HTMLResult[]\n) {\n  if (node.nodeType === 3) {\n    const root = document.createDocumentFragment();\n    const start = document.createComment('');\n    root.appendChild(start);\n    const keyToFragmentsMap: Map<\n      string,\n      (DocumentFragment | Node)[]\n    > = new Map();\n    let results: DOMUpdate[] = [\n      {\n        type: DOMUpdateType.REPLACE_NODE,\n        node,\n        newNode: root,\n      },\n    ];\n    let oldKeyOrder: string[] = [];\n    for (;;) {\n      const keyOrder: string[] = htmlResults.map(result => {\n        const key = getKey(result);\n        if (!keyToFragmentsMap.has(key)) {\n          const frag = document.createDocumentFragment();\n          render(frag as any, result);\n          keyToFragmentsMap.set(key, [frag, ...Array.from(frag.childNodes)]);\n        } else {\n          const frag = keyToFragmentsMap.get(key)[0] as DocumentFragment;\n          render(frag as any, result);\n        }\n        return key;\n      });\n      if (oldKeyOrder.join('') !== keyOrder.join('')) {\n        results = results.concat(\n          keyOrder.flatMap(newKey => {\n            const oldIndex = oldKeyOrder.indexOf(newKey);\n            if (oldIndex > -1) {\n              oldKeyOrder.splice(oldIndex, 1);\n            }\n            const [, ...children] = keyToFragmentsMap.get(newKey);\n            return children.map(child => {\n              return {\n                type: DOMUpdateType.INSERT_BEFORE,\n                node: start,\n                newNode: child,\n              } as DOMUpdate;\n            });\n          })\n        );\n        results = results.concat(\n          oldKeyOrder.flatMap(oldKey => {\n            const [, ...children] = keyToFragmentsMap.get(oldKey);\n            keyToFragmentsMap.delete(oldKey);\n            return children.map(child => {\n              return {\n                type: DOMUpdateType.REMOVE,\n                node: child,\n              } as DOMUpdate;\n            });\n          })\n        );\n        console.log(results);\n      }\n      oldKeyOrder = keyOrder;\n      htmlResults = (yield results)[0];\n      results = [];\n    }\n  }\n});\n\nexport const key = createDirective(function*(_node: Text, _keyName: string) {});\n"],"names":["isProxyMap","WeakSet","proxify","obj","onChange","initialized","onChangeWrapped","proxy","Proxy","get","prop","has","set","value","Object","keys","forEach","key","add","$state","initialState","listeners","l","on","listener","push","index","indexOf","splice","getOnlySetupError","subject","global","window","setUpContext","context","cb","__$c","undefined","getElement","contextMap","WeakMap","createContext","name","defaulValue","$defaultContext","provide","element","parent","parentNode","host","document","body","$context","DOMUpdateType","IS_DIRECTIVE","Symbol","createDirective","factory","directive","args","is","clss","node","classes","HTMLElement","oldClasses","result","oldCls","type","REMOVE_CLASS","trim","split","cls","ADD_CLASS","isLetter","c","toLowerCase","toUpperCase","DirectiveType","insertAttributeMarker","marker","si","appendedStatic","char","charAt","slice","getTextMarker","id","getAttributeMarker","isDirective","thing","resultCache","html","staticParts","dynamicParts","directives","i","length","dynamicPart","staticPart","d","attributeValueMode","attributeMode","attributeNameFound","attributeName","nextChar","nextNextChar","t","TEXT","ATTRIBUTE_VALUE","a","ATTRIBUTE","template","createElement","innerHTML","directiveIndex","map","PriorityLevel","scheduledJobs","schedulerRunning","MAX_ELAPSED","processJobQueue","queue","now","totalElapsed","Date","latestEndTime","processScheduledJobs","sort","b","requestAnimationFrame","schedule","priority","NORMAL","IMMEDIATE","Promise","resolve","renderedNodesMap","generatorMap","render","container","htmlResult","fragment","generators","content","cloneNode","directiveData","placeholder","querySelector","textNode","firstChild","replaceChild","removeAttribute","Array","from","childNodes","next","domUpdate","textContent","ADD_NODE","appendChild","newNode","REPLACE_NODE","INSERT_BEFORE","insertBefore","REMOVE","removeChild","classList","remove","SET_ATTRIBUTE","setAttribute","sub","nodeType","start","createComment","prevChildren","prevTemplate","prevFrag","frag","createDocumentFragment","child","sideEffectsMap","sideEffect","effect","dependencies","concat","e","shouldEffectRun","effectMapItem","p","shouldRun","deps","findIndex","dep","runSideEffects","sideEffects","all","USER_BLOCKING","filter","then","cleanUp","component","setup","customElements","define","attachShadow","mode","watch","connectedCallback","isConnected","wasConnected","performRender","watchOff","s","disconnectedCallback","renderQueued","shadowRoot","nextRenderQueued","$prop","initialValue","state","defineProperty","attributeCallbackMap","Map","observerMap","addObserver","observer","MutationObserver","mutationsList","mutation","callbacks","startObserving","observe","attributes","stopObserving","disconnect","observeAttribute","$attr","getAttribute","hasAttribute","text","newArgs","input","cbRef","addEventListener","target","attr","getKey","listNode","parentElement","list","htmlResults","root","keyToFragmentsMap","results","oldKeyOrder","keyOrder","join","flatMap","newKey","oldIndex","children","oldKey","console","log","_node","_keyName"],"mappings":"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"}