{"version":3,"file":"view.cjs.production.min.js","sources":["../src/html.ts","../src/scheduler.ts","../src/render.ts","../src/directive.ts","../src/directives/sub.ts","../src/reactivity.ts","../src/context.ts","../src/misc.ts","../src/sideeffects.ts","../src/attributes.ts","../src/directives/text.ts","../src/directives/on.ts","../src/directives/input.ts","../src/properties.ts","../src/component.ts"],"sourcesContent":["const isLetter = (c: string): boolean => {\n  return c.toLowerCase() != c.toUpperCase();\n};\n\nexport enum DirectiveType {\n  TEXT,\n  ATTRIBUTE,\n  ATTRIBUTE_VALUE,\n}\nexport interface DirectiveData {\n  d: Function;\n  t?: DirectiveType;\n  a?: string;\n  n?: Node;\n  c?: () => void;\n}\nconst insertAttributeMarker = (\n  marker: string,\n  si: number,\n  appendedStatic: string\n): string => {\n  while (si++) {\n    const char = appendedStatic.charAt(si);\n    if (!char) {\n      break;\n    }\n    if (char === ' ') {\n      return (\n        appendedStatic.slice(0, si) + ' ' + marker + appendedStatic.slice(si)\n      );\n    }\n  }\n  return appendedStatic;\n};\nexport const getTextMarker = (id: number): string => {\n  return `tm-${id}`;\n};\nexport const getAttributeMarker = (id: number): string => {\n  return `data-am-${id}`;\n};\nexport interface HTMLResult {\n  template: HTMLTemplateElement;\n  directives: DirectiveData[];\n}\nlet resultCache: WeakMap<TemplateStringsArray, HTMLResult> = new WeakMap();\nexport const html = (\n  staticParts: TemplateStringsArray,\n  ...dynamicParts: any[]\n): HTMLResult => {\n  let result: HTMLResult = resultCache.get(staticParts);\n  if (!result) {\n    let appendedStatic: string = '';\n    const directives: DirectiveData[] = [];\n    for (let i = 0; i < dynamicParts.length; i++) {\n      const dynamicPart = dynamicParts[i];\n      const staticPart = staticParts[i];\n      appendedStatic += staticPart;\n      if (typeof dynamicPart !== 'function') {\n        appendedStatic += dynamicPart;\n        continue;\n      }\n      let id =\n        directives.push({\n          d: dynamicPart,\n        }) - 1;\n      let si = appendedStatic.length + 1;\n      let attributeValueMode = false;\n      let attributeMode = false;\n      let attributeNameFound = false;\n      let attributeName = '';\n      while (si--) {\n        const char = appendedStatic.charAt(si);\n        const nextChar = appendedStatic.charAt(si - 1);\n        const nextNextChar = appendedStatic.charAt(si - 2);\n        if (char === '>' || si === 0) {\n          let marker = getTextMarker(id);\n          appendedStatic += `<${marker}>&zwnj;</${marker}>`;\n          directives[id].t = DirectiveType.TEXT;\n          break;\n        }\n        if (\n          char === '\"' &&\n          nextChar === '=' &&\n          isLetter(nextNextChar) &&\n          !attributeMode\n        ) {\n          attributeValueMode = true;\n          continue;\n        }\n        if (char === '\"' && nextNextChar !== '=' && !attributeValueMode) {\n          attributeValueMode = false;\n          attributeMode = true;\n          continue;\n        }\n        if (\n          attributeValueMode &&\n          char !== '\"' &&\n          char !== '=' &&\n          !attributeNameFound\n        ) {\n          if (char !== ' ') {\n            attributeName = char + attributeName;\n          } else {\n            attributeNameFound = true;\n          }\n        }\n        if (char === '<' && attributeValueMode) {\n          appendedStatic = insertAttributeMarker(\n            getAttributeMarker(id),\n            si,\n            appendedStatic\n          );\n          directives[id].t = DirectiveType.ATTRIBUTE_VALUE;\n          directives[id].a = attributeName;\n          if (appendedStatic[appendedStatic.length - 1] === ' ') {\n            appendedStatic = appendedStatic.slice(0, appendedStatic.length - 1);\n          }\n          break;\n        }\n        if (char === '<' && !attributeValueMode) {\n          appendedStatic = insertAttributeMarker(\n            getAttributeMarker(id),\n            si,\n            appendedStatic\n          );\n          directives[id].t = DirectiveType.ATTRIBUTE;\n          break;\n        }\n      }\n    }\n    appendedStatic += staticParts[staticParts.length - 1];\n    const template = document.createElement('template');\n    template.innerHTML = appendedStatic;\n    result = {\n      template,\n      directives,\n    };\n  } else {\n    let directiveIndex: number = 0;\n    dynamicParts.forEach((value: any) => {\n      if (typeof value === 'function') {\n        result.directives[directiveIndex].d = value;\n        directiveIndex++;\n      }\n    });\n  }\n  resultCache.set(staticParts, result);\n  return result;\n};\n","export enum PriorityLevel {\n  IMMEDIATE = 0, //synchronous\n  USER_BLOCKING = 250, //.25s timeout\n  NORMAL = 5000, // 5s timeout\n  LOW = 10000, // 10s timeout\n  IDLE = 99999999, // no timeout (run only when nothing else is scheduled)\n}\ntype ScheduledJob = [() => void, number];\nlet scheduledJobs: ScheduledJob[] = [];\nlet schedulerRunning: boolean = false;\nconst MAX_ELAPSED: number = 17;\nconst processJobQueue = (\n  queue: ScheduledJob[],\n  now: number\n): ScheduledJob[] => {\n  return queue.filter(([cb, latestEndTime]) => {\n    const totalElapsed: number = Date.now() - now;\n    if (now >= latestEndTime || totalElapsed < MAX_ELAPSED) {\n      cb();\n      return false;\n    } else {\n      return true;\n    }\n  });\n};\nconst processScheduledJobs = () => {\n  const now: number = Date.now();\n  const jobsToRun = scheduledJobs;\n  scheduledJobs = [];\n  const remainingJobs = processJobQueue(\n    jobsToRun.sort((a, b) => (a[1] < b[1] ? -1 : 1)),\n    now\n  );\n  scheduledJobs = remainingJobs.concat(scheduledJobs);\n  if (scheduledJobs.length > 0) {\n    requestAnimationFrame(processScheduledJobs);\n  } else {\n    schedulerRunning = false;\n  }\n};\nexport const schedule = (\n  cb: () => void,\n  priority: PriorityLevel = PriorityLevel.NORMAL\n): Promise<void> => {\n  if (priority === PriorityLevel.IMMEDIATE) {\n    cb();\n  } else {\n    return new Promise(resolve => {\n      scheduledJobs.push([\n        () => {\n          cb();\n          resolve();\n        },\n        Date.now() + priority,\n      ]);\n      if (!schedulerRunning) {\n        requestAnimationFrame(processScheduledJobs);\n        schedulerRunning = true;\n      }\n    });\n  }\n  return Promise.resolve();\n};\nexport type Schedule = typeof schedule;\n","import {\n  HTMLResult,\n  DirectiveType,\n  getTextMarker,\n  getAttributeMarker,\n} from './html';\n\nconst renderedNodesMap: WeakMap<HTMLElement, Node[]> = new WeakMap();\nexport const clear = (container: HTMLElement) => {\n  if (renderedNodesMap.has(container)) {\n    renderedNodesMap\n      .get(container)\n      .forEach(node => container.removeChild(node));\n    renderedNodesMap.delete(container);\n  }\n};\nexport const render = (\n  container: HTMLElement,\n  htmlResult: HTMLResult\n): void => {\n  let fragment: DocumentFragment;\n  if (!renderedNodesMap.has(container)) {\n    fragment = htmlResult.template.content.cloneNode(true) as DocumentFragment;\n    htmlResult.directives.forEach((directiveData, id) => {\n      switch (directiveData.t) {\n        case DirectiveType.TEXT:\n          const placeholder = fragment.querySelector(getTextMarker(id));\n          const textNode = placeholder.firstChild;\n          directiveData.n = textNode;\n          placeholder.parentElement.replaceChild(textNode, placeholder);\n          break;\n        case DirectiveType.ATTRIBUTE:\n        case DirectiveType.ATTRIBUTE_VALUE:\n          const marker = getAttributeMarker(id);\n          const node = fragment.querySelector(`[${marker}]`);\n          node.removeAttribute(marker);\n          directiveData.n = node;\n      }\n    });\n    renderedNodesMap.set(container, Array.from(fragment.childNodes));\n  }\n  htmlResult.directives.forEach(directiveData => {\n    const node = directiveData.d(directiveData.n);\n    if (node) {\n      directiveData.n = node;\n    }\n  });\n  if (fragment) {\n    container.appendChild(fragment);\n  }\n};\n","import { schedule, Schedule } from './scheduler';\n\nexport type Directive<N extends Node = Node, Args extends any[] = any[]> = (\n  ...args: Args\n) => (node: N) => void;\nexport type DirectiveHandler<\n  N extends Node = any,\n  Args extends any[] = any[]\n> = (node: N, schedule: Schedule, ...args: Args) => void | Node;\nexport function createDirective<\n  Args extends any[] = any[],\n  N extends Node = any,\n  D extends DirectiveHandler<N, Args> = DirectiveHandler<N, Args>\n>(\n  handler: D\n): D extends (node: N, schedule: Schedule, ...args: infer A) => void\n  ? Directive<N, A>\n  : never {\n  return ((...args: Args) => {\n    return (node: N) => {\n      return handler(node, schedule, ...args);\n    };\n  }) as D extends (node: N, schedule: Schedule, ...args: infer A) => void\n    ? Directive<N, A>\n    : never;\n}\n","import { createDirective } from '../directive';\nimport { Schedule, PriorityLevel } from '../scheduler';\nimport { HTMLResult } from '../html';\nimport { clear, render } from '../render';\n\nexport const sub = createDirective(\n  (node: Node, schedule: Schedule, cb: () => HTMLResult) => {\n    if (node.nodeType === 3) {\n      const span = document.createElement('span');\n      node.parentElement.insertBefore(span, node);\n      node.parentElement.removeChild(node);\n      node = span;\n    }\n    schedule(() => {\n      clear(node as HTMLElement);\n      render(node as HTMLElement, cb());\n    }, PriorityLevel.USER_BLOCKING);\n    return node;\n  }\n);\n","const IS_PROXY = Symbol('$P');\nfunction proxify(obj: any, onChange: () => void): any {\n  const proxy = new Proxy(obj, {\n    get: (obj, prop) => {\n      if (\n        obj[prop] &&\n        typeof obj[prop] === 'object' &&\n        obj[prop].__$p !== IS_PROXY\n      ) {\n        obj[prop] = proxify(obj[prop], onChange);\n      }\n      return obj[prop];\n    },\n    set: (obj, prop, value) => {\n      if (obj[prop] !== value && prop !== '__$p') {\n        obj[prop] = value;\n        onChange();\n      }\n      return true;\n    },\n  });\n  proxy.__$p = IS_PROXY;\n  return proxy;\n}\nlet onStateChanged: () => void;\nexport const setUpState = <CB extends () => any>(\n  cb: CB,\n  onChange: () => void\n): ReturnType<CB> => {\n  onStateChanged = onChange;\n  let result = cb();\n  onStateChanged = undefined;\n  return result;\n};\nexport const $state = <S extends {} = {}>(initialState: Partial<S> = {}): S => {\n  let onChange = onStateChanged;\n  return proxify(initialState, () => onChange && onChange());\n};\n","import { getOnlySetupError } from './misc';\n\nconst global: { __$c: HTMLElement } = window as any;\n\nexport const setUpContext = (context: HTMLElement, cb: () => void): void => {\n  global.__$c = context;\n  cb();\n  global.__$c = undefined;\n};\n\nexport const getElement = (): HTMLElement => {\n  if (global.__$c) {\n    return global.__$c;\n  } else {\n    throw getOnlySetupError('getElement');\n  }\n};\n","export const getOnlySetupError = (subject: string): string =>\n  `${subject} can only be used during setup!`;\n","import { getElement } from './context';\nimport { schedule, PriorityLevel } from './scheduler';\n\nexport type CleanUp = () => void;\nexport type SideEffect = () => void | CleanUp;\ninterface SideEffectsMapItem {\n  e: SideEffect;\n  d?: () => any[];\n  p?: any[];\n  c?: CleanUp;\n}\nconst sideEffectsMap: WeakMap<\n  HTMLElement,\n  SideEffectsMapItem[]\n> = new WeakMap();\n\nexport const sideEffect = (effect: () => void, dependencies?: () => any[]) => {\n  const element = getElement();\n  sideEffectsMap.set(\n    element,\n    (sideEffectsMap.get(element) || []).concat({\n      e: effect,\n      d: dependencies,\n    })\n  );\n};\nconst shouldEffectRun = (effectMapItem: SideEffectsMapItem): boolean => {\n  const { d, p } = effectMapItem;\n  let shouldRun: boolean = true;\n  if (d) {\n    const deps = d();\n    if (\n      p &&\n      (deps === p ||\n        (deps.length === p.length &&\n          deps.findIndex((dep, index) => p[index] !== dep))) === -1\n    ) {\n      shouldRun = false;\n    }\n  }\n  return shouldRun;\n};\nexport const runSideEffects = (element: HTMLElement): Promise<void[]> => {\n  const sideEffects = sideEffectsMap.get(element) || [];\n  if (sideEffects.length > 0) {\n    return Promise.all(\n      sideEffects\n        .map(effectMapItem => {\n          const { c } = effectMapItem;\n          if (c && shouldEffectRun(effectMapItem)) {\n            return schedule(() => {\n              c();\n              effectMapItem.c = undefined;\n            }, PriorityLevel.USER_BLOCKING);\n          }\n          return undefined;\n        })\n        .filter(p => p)\n    ).then(() =>\n      Promise.all(\n        sideEffects\n          .map(effectMapItem => {\n            const { e, d } = effectMapItem;\n            let shouldRun: boolean = shouldEffectRun(effectMapItem);\n            if (d) {\n              effectMapItem.p = d();\n            }\n            if (shouldRun) {\n              return schedule(() => {\n                const cleanUp = e();\n                if (cleanUp) {\n                  effectMapItem.c = cleanUp;\n                }\n              }, PriorityLevel.USER_BLOCKING);\n            }\n            return undefined;\n          })\n          .filter(p => p)\n      )\n    );\n  } else {\n    return Promise.resolve([]);\n  }\n};\n","import { $state } from './reactivity';\nimport { getElement } from './context';\nimport { sideEffect } from './sideeffects';\n\nconst attributeCallbackMap: WeakMap<\n  HTMLElement,\n  { [key: string]: (() => void)[] }\n> = new Map();\nconst observerMap: WeakMap<HTMLElement, MutationObserver> = new WeakMap();\n\nconst addObserver = (element: HTMLElement): void => {\n  if (!observerMap.has(element)) {\n    const observer = new MutationObserver((mutationsList: MutationRecord[]) => {\n      for (const mutation of mutationsList) {\n        if (mutation.type === 'attributes') {\n          const callbacks =\n            (attributeCallbackMap.get(element) || {})[mutation.attributeName] ||\n            [];\n          callbacks.forEach(cb => cb());\n        }\n      }\n    });\n    observerMap.set(element, observer);\n  }\n};\n\nconst startObserving = (element: HTMLElement) => {\n  if (observerMap.has(element)) {\n    observerMap.get(element).observe(element, { attributes: true });\n  }\n};\n\nconst stopObserving = (element: HTMLElement) => {\n  if (observerMap.has(element)) {\n    observerMap.get(element).disconnect();\n  }\n};\n\nconst observeAttribute = (\n  element: HTMLElement,\n  name: string,\n  cb: () => void\n): void => {\n  if (!attributeCallbackMap.has(element)) {\n    attributeCallbackMap.set(element, {});\n  }\n  if (!attributeCallbackMap.get(element)[name]) {\n    attributeCallbackMap.get(element)[name] = [];\n  }\n  attributeCallbackMap.get(element)[name].push(cb);\n};\n\nexport const $attr = (\n  name: string,\n  initialValue: string = ''\n): { value: string } => {\n  const element = getElement();\n  addObserver(element);\n  observeAttribute(element, name, () => {\n    const value = element.getAttribute(name);\n    if (state.value !== value) {\n      state.value = element.getAttribute(name);\n    }\n  });\n\n  element.setAttribute(name, initialValue);\n\n  const state = $state({ value: element.getAttribute(name) });\n\n  sideEffect(\n    () => {\n      stopObserving(element);\n      element.setAttribute(name, state.value);\n      startObserving(element);\n    },\n    () => [state.value]\n  );\n\n  return state;\n};\n","import { createDirective } from '../directive';\nimport { Schedule, PriorityLevel } from '../scheduler';\n\nexport const text = createDirective(\n  (node: Text, schedule: Schedule, value: string) => {\n    if (node instanceof Text) {\n      schedule(() => {\n        node.textContent = value;\n      }, PriorityLevel.IMMEDIATE);\n    }\n  }\n);\n","import { createDirective } from '../directive';\nimport { PriorityLevel, Schedule } from '../scheduler';\n\nconst handlerMap: WeakMap<HTMLInputElement, string[]> = new WeakMap();\nexport const onHandler = (\n  node: HTMLInputElement,\n  schedule: Schedule,\n  name: string,\n  cb: <E extends Event>(e: E) => void\n) => {\n  if (!handlerMap.has(node) && !(handlerMap.get(node) || []).includes(name)) {\n    handlerMap.set(\n      node,\n      [].concat(name, handlerMap.get(node)).filter(n => n)\n    );\n    node.addEventListener(name, e => {\n      schedule(() => cb(e), PriorityLevel.IMMEDIATE);\n    });\n  }\n};\nexport const on = createDirective(onHandler);\n","import { createDirective } from '../directive';\nimport { Schedule, PriorityLevel } from '../scheduler';\nimport { onHandler } from './on';\n\nexport const input = createDirective(\n  (node: HTMLInputElement, schedule: Schedule, cb: (value: string) => void) =>\n    onHandler(node, schedule, 'input', e => {\n      const value: string = (e.target as HTMLInputElement).value;\n      schedule(() => cb(value), PriorityLevel.USER_BLOCKING);\n    })\n);\n","import { getElement } from './context';\nimport { $state } from './reactivity';\n\nexport const $prop = <T>(name: string, initialValue: T): { value: T } => {\n  const element = getElement() as any;\n  const state = $state({ value: initialValue });\n  Object.defineProperty(element, name, {\n    get: () => state.value,\n    set: (value: any) => {\n      state.value = value;\n    },\n  });\n  return state;\n};\n","import { HTMLResult } from './html';\nimport { setUpState } from './reactivity';\nimport { render } from './render';\nimport { schedule, PriorityLevel } from './scheduler';\nimport { setUpContext } from './context';\nimport { runSideEffects } from './sideeffects';\nexport interface ComponentDefinition {\n  render: () => HTMLResult;\n}\nexport type Setup = () => ComponentDefinition;\nexport const component = (name: string, setup: Setup) => {\n  customElements.define(\n    name,\n    class extends HTMLElement {\n      private renderQueued: boolean = false;\n      private nextRenderQueued: boolean = false;\n      private render: () => HTMLResult;\n      constructor() {\n        super();\n        this.attachShadow({ mode: 'open' });\n\n        setUpContext(this, () =>\n          setUpState(\n            () => (this.render = setup().render),\n            () => {\n              this.performRender();\n            }\n          )\n        );\n        this.performRender();\n      }\n\n      private performRender() {\n        if (!this.renderQueued) {\n          this.renderQueued = true;\n          schedule(() => {\n            render(this.shadowRoot as any, this.render());\n          }, PriorityLevel.USER_BLOCKING)\n            .then(async () => await runSideEffects(this))\n            .then(() => {\n              this.renderQueued = false;\n              if (this.nextRenderQueued) {\n                this.nextRenderQueued = false;\n                this.performRender();\n              }\n            });\n        } else {\n          this.nextRenderQueued = true;\n        }\n      }\n    }\n  );\n};\n"],"names":["DirectiveType","isLetter","c","toLowerCase","toUpperCase","PriorityLevel","insertAttributeMarker","marker","si","appendedStatic","char","charAt","slice","getTextMarker","id","getAttributeMarker","resultCache","WeakMap","renderedNodesMap","render","container","htmlResult","fragment","has","template","content","cloneNode","directives","forEach","directiveData","t","TEXT","placeholder","querySelector","textNode","firstChild","n","parentElement","replaceChild","ATTRIBUTE","ATTRIBUTE_VALUE","node","removeAttribute","set","Array","from","childNodes","d","appendChild","scheduledJobs","schedulerRunning","processScheduledJobs","now","Date","jobsToRun","remainingJobs","queue","filter","cb","latestEndTime","totalElapsed","processJobQueue","sort","a","b","concat","length","requestAnimationFrame","schedule","priority","NORMAL","IMMEDIATE","Promise","resolve","push","createDirective","handler","args","sub","nodeType","span","document","createElement","insertBefore","removeChild","get","USER_BLOCKING","onStateChanged","IS_PROXY","Symbol","setUpState","onChange","result","undefined","$state","initialState","proxify","obj","proxy","Proxy","prop","__$p","value","global","window","setUpContext","context","__$c","getElement","subject","sideEffectsMap","sideEffect","effect","dependencies","element","e","shouldEffectRun","effectMapItem","p","shouldRun","deps","findIndex","dep","index","attributeCallbackMap","Map","observerMap","text","Text","textContent","handlerMap","onHandler","name","includes","addEventListener","on","input","target","initialValue","observer","MutationObserver","mutationsList","mutation","type","attributeName","addObserver","observeAttribute","getAttribute","state","setAttribute","disconnect","stopObserving","observe","attributes","startObserving","Object","defineProperty","setup","customElements","define","attachShadow","mode","_this","performRender","this","renderQueued","nextRenderQueued","_this2","shadowRoot","then","sideEffects","all","map","cleanUp","HTMLElement","staticParts","dynamicParts","directiveIndex","i","dynamicPart","staticPart","attributeValueMode","attributeMode","attributeNameFound","nextChar","nextNextChar","innerHTML"],"mappings":"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"}