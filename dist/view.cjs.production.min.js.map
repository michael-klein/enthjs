{"version":3,"file":"view.cjs.production.min.js","sources":["../src/html.ts","../src/render.ts","../src/reactivity.ts","../src/scheduler.ts","../src/context.ts","../src/misc.ts","../src/sideeffects.ts","../src/attributes.ts","../src/directive.ts","../src/directives/text.ts","../src/directives/on.ts","../src/directives/input.ts","../src/properties.ts","../src/component.ts"],"sourcesContent":["const isLetter = (c: string): boolean => {\n  return c.toLowerCase() != c.toUpperCase();\n};\n\nexport enum DirectiveType {\n  TEXT,\n  ATTRIBUTE,\n  ATTRIBUTE_VALUE,\n}\nexport interface DirectiveData {\n  d: Function;\n  t?: DirectiveType;\n  a?: string;\n  n?: Node;\n  c?: () => void;\n}\nconst insertAttributeMarker = (\n  marker: string,\n  si: number,\n  appendedStatic: string\n): string => {\n  while (si++) {\n    const char = appendedStatic.charAt(si);\n    if (!char) {\n      break;\n    }\n    if (char === ' ') {\n      return (\n        appendedStatic.slice(0, si) + ' ' + marker + appendedStatic.slice(si)\n      );\n    }\n  }\n  return appendedStatic;\n};\nexport const getTextMarker = (id: number): string => {\n  return `tm-${id}`;\n};\nexport const getAttributeMarker = (id: number): string => {\n  return `data-am-${id}`;\n};\nexport interface HTMLResult {\n  template: HTMLTemplateElement;\n  directives: DirectiveData[];\n}\nlet resultCache: WeakMap<TemplateStringsArray, HTMLResult> = new WeakMap();\nexport const html = (\n  staticParts: TemplateStringsArray,\n  ...dynamicParts: any[]\n): HTMLResult => {\n  let result: HTMLResult = resultCache.get(staticParts);\n  if (!result) {\n    let appendedStatic: string = '';\n    const directives: DirectiveData[] = [];\n    for (let i = 0; i < dynamicParts.length; i++) {\n      const dynamicPart = dynamicParts[i];\n      const staticPart = staticParts[i];\n      appendedStatic += staticPart;\n      if (typeof dynamicPart !== 'function') {\n        appendedStatic += dynamicPart;\n        continue;\n      }\n      let id =\n        directives.push({\n          d: dynamicPart,\n        }) - 1;\n      let si = appendedStatic.length + 1;\n      let attributeValueMode = false;\n      let attributeMode = false;\n      let attributeNameFound = false;\n      let attributeName = '';\n      while (si--) {\n        const char = appendedStatic.charAt(si);\n        const nextChar = appendedStatic.charAt(si - 1);\n        const nextNextChar = appendedStatic.charAt(si - 2);\n        if (char === '>' || si === 0) {\n          let marker = getTextMarker(id);\n          appendedStatic += `<${marker}>&zwnj;</${marker}>`;\n          directives[id].t = DirectiveType.TEXT;\n          break;\n        }\n        if (\n          char === '\"' &&\n          nextChar === '=' &&\n          isLetter(nextNextChar) &&\n          !attributeMode\n        ) {\n          attributeValueMode = true;\n          continue;\n        }\n        if (char === '\"' && nextNextChar !== '=' && !attributeValueMode) {\n          attributeValueMode = false;\n          attributeMode = true;\n          continue;\n        }\n        if (\n          attributeValueMode &&\n          char !== '\"' &&\n          char !== '=' &&\n          !attributeNameFound\n        ) {\n          if (char !== ' ') {\n            attributeName = char + attributeName;\n          } else {\n            attributeNameFound = true;\n          }\n        }\n        if (char === '<' && attributeValueMode) {\n          appendedStatic = insertAttributeMarker(\n            getAttributeMarker(id),\n            si,\n            appendedStatic\n          );\n          directives[id].t = DirectiveType.ATTRIBUTE_VALUE;\n          directives[id].a = attributeName;\n          if (appendedStatic[appendedStatic.length - 1] === ' ') {\n            appendedStatic = appendedStatic.slice(0, appendedStatic.length - 1);\n          }\n          break;\n        }\n        if (char === '<' && !attributeValueMode) {\n          appendedStatic = insertAttributeMarker(\n            getAttributeMarker(id),\n            si,\n            appendedStatic\n          );\n          directives[id].t = DirectiveType.ATTRIBUTE;\n          break;\n        }\n      }\n    }\n    appendedStatic += staticParts[staticParts.length - 1];\n    const template = document.createElement('template');\n    template.innerHTML = appendedStatic;\n    result = {\n      template,\n      directives,\n    };\n  } else {\n    let directiveIndex: number = 0;\n    dynamicParts.forEach((value: any) => {\n      if (typeof value === 'function') {\n        result.directives[directiveIndex].d = value;\n        directiveIndex++;\n      }\n    });\n  }\n  resultCache.set(staticParts, result);\n  return result;\n};\n","import {\n  HTMLResult,\n  DirectiveType,\n  getTextMarker,\n  getAttributeMarker,\n} from './html';\n\nconst childNodesMap: WeakMap<HTMLElement, NodeList> = new WeakMap();\nexport const render = (\n  container: HTMLElement,\n  htmlResult: HTMLResult\n): void => {\n  let fragment: DocumentFragment;\n  if (!childNodesMap.has(container)) {\n    fragment = htmlResult.template.content.cloneNode(true) as DocumentFragment;\n    htmlResult.directives.forEach((directiveData, id) => {\n      switch (directiveData.t) {\n        case DirectiveType.TEXT:\n          const placeholder = fragment.querySelector(getTextMarker(id));\n          const textNode = placeholder.firstChild;\n          directiveData.n = textNode;\n          placeholder.parentElement.replaceChild(textNode, placeholder);\n          break;\n        case DirectiveType.ATTRIBUTE:\n        case DirectiveType.ATTRIBUTE_VALUE:\n          const marker = getAttributeMarker(id);\n          const node = fragment.querySelector(`[${marker}]`);\n          node.removeAttribute(marker);\n          directiveData.n = node;\n      }\n    });\n    childNodesMap.set(container, fragment.childNodes);\n  }\n  htmlResult.directives.forEach(directiveData => {\n    directiveData.d(directiveData.n);\n  });\n  if (fragment) {\n    container.appendChild(fragment);\n  }\n};\n","const IS_PROXY = Symbol('$P');\nfunction proxify(obj: any, onChange: () => void): any {\n  const proxy = new Proxy(obj, {\n    get: (obj, prop) => {\n      if (\n        obj[prop] &&\n        typeof obj[prop] === 'object' &&\n        obj[prop].__$p !== IS_PROXY\n      ) {\n        obj[prop] = proxify(obj[prop], onChange);\n      }\n      return obj[prop];\n    },\n    set: (obj, prop, value) => {\n      if (obj[prop] !== value && prop !== '__$p') {\n        obj[prop] = value;\n        onChange();\n      }\n      return true;\n    },\n  });\n  proxy.__$p = IS_PROXY;\n  return proxy;\n}\nlet onStateChanged: () => void;\nexport const setUpState = <CB extends () => any>(\n  cb: CB,\n  onChange: () => void\n): ReturnType<CB> => {\n  onStateChanged = onChange;\n  let result = cb();\n  onStateChanged = undefined;\n  return result;\n};\nexport const $state = <S extends {} = {}>(initialState: Partial<S> = {}): S => {\n  let onChange = onStateChanged;\n  return proxify(initialState, () => onChange && onChange());\n};\n","export enum PriorityLevel {\n  IMMEDIATE = 0, //synchronous\n  USER_BLOCKING = 250, //.25s timeout\n  NORMAL = 5000, // 5s timeout\n  LOW = 10000, // 10s timeout\n  IDLE = 99999999, // no timeout (run only when nothing else is scheduled)\n}\ntype ScheduledJob = [() => void, number];\nlet scheduledJobs: ScheduledJob[] = [];\nlet schedulerRunning: boolean = false;\nconst MAX_ELAPSED: number = 17;\nconst processJobQueue = (\n  queue: ScheduledJob[],\n  now: number\n): ScheduledJob[] => {\n  return queue.filter(([cb, latestEndTime]) => {\n    const totalElapsed: number = Date.now() - now;\n    if (now >= latestEndTime || totalElapsed < MAX_ELAPSED) {\n      cb();\n      return false;\n    } else {\n      return true;\n    }\n  });\n};\nconst processScheduledJobs = () => {\n  const now: number = Date.now();\n  const jobsToRun = scheduledJobs;\n  scheduledJobs = [];\n  const remainingJobs = processJobQueue(\n    jobsToRun.sort((a, b) => (a[1] < b[1] ? -1 : 1)),\n    now\n  );\n  scheduledJobs = remainingJobs.concat(scheduledJobs);\n  if (scheduledJobs.length > 0) {\n    requestAnimationFrame(processScheduledJobs);\n  } else {\n    schedulerRunning = false;\n  }\n};\nexport const schedule = (\n  cb: () => void,\n  priority: PriorityLevel = PriorityLevel.NORMAL\n): Promise<void> => {\n  if (priority === PriorityLevel.IMMEDIATE) {\n    cb();\n  } else {\n    return new Promise(resolve => {\n      scheduledJobs.push([\n        () => {\n          cb();\n          resolve();\n        },\n        Date.now() + priority,\n      ]);\n      if (!schedulerRunning) {\n        requestAnimationFrame(processScheduledJobs);\n        schedulerRunning = true;\n      }\n    });\n  }\n  return Promise.resolve();\n};\nexport type Schedule = typeof schedule;\n","import { getOnlySetupError } from './misc';\n\nconst global: { __$c: HTMLElement } = window as any;\n\nexport const setUpContext = (context: HTMLElement, cb: () => void): void => {\n  global.__$c = context;\n  cb();\n  global.__$c = undefined;\n};\n\nexport const getElement = (): HTMLElement => {\n  if (global.__$c) {\n    return global.__$c;\n  } else {\n    throw getOnlySetupError('getElement');\n  }\n};\n","export const getOnlySetupError = (subject: string): string =>\n  `${subject} can only be used during setup!`;\n","import { getElement } from './context';\nimport { schedule, PriorityLevel } from './scheduler';\n\nexport type CleanUp = () => void;\nexport type SideEffect = () => void | CleanUp;\ninterface SideEffectsMapItem {\n  e: SideEffect;\n  d?: () => any[];\n  p?: any[];\n  c?: CleanUp;\n}\nconst sideEffectsMap: WeakMap<\n  HTMLElement,\n  SideEffectsMapItem[]\n> = new WeakMap();\n\nexport const sideEffect = (effect: () => void, dependencies?: () => any[]) => {\n  const element = getElement();\n  sideEffectsMap.set(\n    element,\n    (sideEffectsMap.get(element) || []).concat({\n      e: effect,\n      d: dependencies,\n    })\n  );\n};\nconst shouldEffectRun = (effectMapItem: SideEffectsMapItem): boolean => {\n  const { d, p } = effectMapItem;\n  let shouldRun: boolean = true;\n  if (d) {\n    const deps = d();\n    if (\n      p &&\n      (deps === p ||\n        (deps.length === p.length &&\n          deps.findIndex((dep, index) => p[index] !== dep))) === -1\n    ) {\n      shouldRun = false;\n    }\n  }\n  return shouldRun;\n};\nexport const runSideEffects = (element: HTMLElement): Promise<void[]> => {\n  const sideEffects = sideEffectsMap.get(element) || [];\n  if (sideEffects.length > 0) {\n    return Promise.all(\n      sideEffects\n        .map(effectMapItem => {\n          const { c } = effectMapItem;\n          if (c && shouldEffectRun(effectMapItem)) {\n            return schedule(() => {\n              c();\n              effectMapItem.c = undefined;\n            }, PriorityLevel.USER_BLOCKING);\n          }\n          return undefined;\n        })\n        .filter(p => p)\n    ).then(() =>\n      Promise.all(\n        sideEffects\n          .map(effectMapItem => {\n            const { e, d } = effectMapItem;\n            let shouldRun: boolean = shouldEffectRun(effectMapItem);\n            if (d) {\n              effectMapItem.p = d();\n            }\n            if (shouldRun) {\n              return schedule(() => {\n                const cleanUp = e();\n                if (cleanUp) {\n                  effectMapItem.c = cleanUp;\n                }\n              }, PriorityLevel.USER_BLOCKING);\n            }\n            return undefined;\n          })\n          .filter(p => p)\n      )\n    );\n  } else {\n    return Promise.resolve([]);\n  }\n};\n","import { $state } from './reactivity';\nimport { getElement } from './context';\nimport { sideEffect } from './sideeffects';\n\nconst attributeCallbackMap: WeakMap<\n  HTMLElement,\n  { [key: string]: (() => void)[] }\n> = new Map();\nconst observerMap: WeakMap<HTMLElement, MutationObserver> = new WeakMap();\n\nconst addObserver = (element: HTMLElement): void => {\n  if (!observerMap.has(element)) {\n    const observer = new MutationObserver((mutationsList: MutationRecord[]) => {\n      for (const mutation of mutationsList) {\n        if (mutation.type === 'attributes') {\n          const callbacks =\n            (attributeCallbackMap.get(element) || {})[mutation.attributeName] ||\n            [];\n          callbacks.forEach(cb => cb());\n        }\n      }\n    });\n    observerMap.set(element, observer);\n  }\n};\n\nconst startObserving = (element: HTMLElement) => {\n  if (observerMap.has(element)) {\n    observerMap.get(element).observe(element, { attributes: true });\n  }\n};\n\nconst stopObserving = (element: HTMLElement) => {\n  if (observerMap.has(element)) {\n    observerMap.get(element).disconnect();\n  }\n};\n\nconst observeAttribute = (\n  element: HTMLElement,\n  name: string,\n  cb: () => void\n): void => {\n  if (!attributeCallbackMap.has(element)) {\n    attributeCallbackMap.set(element, {});\n  }\n  if (!attributeCallbackMap.get(element)[name]) {\n    attributeCallbackMap.get(element)[name] = [];\n  }\n  attributeCallbackMap.get(element)[name].push(cb);\n};\n\nexport const $attr = (\n  name: string,\n  initialValue: string = ''\n): { value: string } => {\n  const element = getElement();\n  addObserver(element);\n  observeAttribute(element, name, () => {\n    const value = element.getAttribute(name);\n    if (state.value !== value) {\n      state.value = element.getAttribute(name);\n    }\n  });\n\n  element.setAttribute(name, initialValue);\n\n  const state = $state({ value: element.getAttribute(name) });\n\n  sideEffect(\n    () => {\n      stopObserving(element);\n      element.setAttribute(name, state.value);\n      startObserving(element);\n    },\n    () => [state.value]\n  );\n\n  return state;\n};\n","import { schedule, Schedule } from './scheduler';\n\nexport type Directive<N extends Node = Node, Args extends any[] = any[]> = (\n  ...args: Args\n) => (node: N) => void;\nexport type DirectiveHandler<\n  N extends Node = any,\n  Args extends any[] = any[]\n> = (node: N, schedule: Schedule, ...args: Args) => void;\nexport function createDirective<\n  Args extends any[] = any[],\n  N extends Node = any,\n  D extends DirectiveHandler<N, Args> = DirectiveHandler<N, Args>\n>(\n  handler: D\n): D extends (node: N, schedule: Schedule, ...args: infer A) => void\n  ? Directive<N, A>\n  : never {\n  return ((...args: Args) => {\n    return (node: N) => {\n      handler(node, schedule, ...args);\n    };\n  }) as D extends (node: N, schedule: Schedule, ...args: infer A) => void\n    ? Directive<N, A>\n    : never;\n}\n","import { createDirective } from '../directive';\nimport { Schedule, PriorityLevel } from '../scheduler';\n\nexport const text = createDirective(\n  (node: Text, schedule: Schedule, value: string) => {\n    if (node instanceof Text) {\n      schedule(() => {\n        node.textContent = value;\n      }, PriorityLevel.IMMEDIATE);\n    }\n  }\n);\n","import { createDirective } from '../directive';\nimport { PriorityLevel, Schedule } from '../scheduler';\n\nconst handlerMap: WeakMap<HTMLInputElement, string[]> = new WeakMap();\nexport const onHandler = (\n  node: HTMLInputElement,\n  schedule: Schedule,\n  name: string,\n  cb: <E extends Event>(e: E) => void\n) => {\n  if (node instanceof HTMLInputElement) {\n    if (!handlerMap.has(node) && !(handlerMap.get(node) || []).includes(name)) {\n      handlerMap.set(\n        node,\n        [].concat(name, handlerMap.get(node)).filter(n => n)\n      );\n      node.addEventListener(name, e => {\n        schedule(() => cb(e), PriorityLevel.IMMEDIATE);\n      });\n    }\n  }\n};\nexport const on = createDirective(onHandler);\n","import { createDirective } from '../directive';\nimport { Schedule, PriorityLevel } from '../scheduler';\nimport { onHandler } from './on';\n\nexport const input = createDirective(\n  (node: HTMLInputElement, schedule: Schedule, cb: (value: string) => void) =>\n    onHandler(node, schedule, 'input', e => {\n      const value: string = (e.target as HTMLInputElement).value;\n      schedule(() => cb(value), PriorityLevel.USER_BLOCKING);\n    })\n);\n","import { getElement } from './context';\nimport { $state } from './reactivity';\n\nexport const $prop = <T>(name: string, initialValue: T): { value: T } => {\n  const element = getElement() as any;\n  const state = $state({ value: initialValue });\n  Object.defineProperty(element, name, {\n    get: () => state.value,\n    set: (value: any) => {\n      state.value = value;\n    },\n  });\n  return state;\n};\n","import { HTMLResult } from './html';\nimport { setUpState } from './reactivity';\nimport { render } from './render';\nimport { schedule, PriorityLevel } from './scheduler';\nimport { setUpContext } from './context';\nimport { runSideEffects } from './sideeffects';\nexport interface ComponentDefinition {\n  render: () => HTMLResult;\n}\nexport type Setup = () => ComponentDefinition;\nexport const component = (name: string, setup: Setup) => {\n  customElements.define(\n    name,\n    class extends HTMLElement {\n      private renderQueued: boolean = false;\n      private nextRenderQueued: boolean = false;\n      private render: () => HTMLResult;\n      constructor() {\n        super();\n        this.attachShadow({ mode: 'open' });\n\n        setUpContext(this, () =>\n          setUpState(\n            () => (this.render = setup().render),\n            () => {\n              this.performRender();\n            }\n          )\n        );\n        this.performRender();\n      }\n\n      private performRender() {\n        if (!this.renderQueued) {\n          this.renderQueued = true;\n          schedule(() => {\n            render(this.shadowRoot as any, this.render());\n          }, PriorityLevel.USER_BLOCKING)\n            .then(async () => await runSideEffects(this))\n            .then(() => {\n              this.renderQueued = false;\n              if (this.nextRenderQueued) {\n                this.nextRenderQueued = false;\n                this.performRender();\n              }\n            });\n        } else {\n          this.nextRenderQueued = true;\n        }\n      }\n    }\n  );\n};\n"],"names":["DirectiveType","isLetter","c","toLowerCase","toUpperCase","insertAttributeMarker","marker","si","appendedStatic","char","charAt","slice","getTextMarker","id","getAttributeMarker","resultCache","WeakMap","childNodesMap","render","container","htmlResult","fragment","has","template","content","cloneNode","directives","forEach","directiveData","t","TEXT","placeholder","querySelector","textNode","firstChild","n","parentElement","replaceChild","ATTRIBUTE","ATTRIBUTE_VALUE","node","removeAttribute","set","childNodes","d","appendChild","onStateChanged","PriorityLevel","IS_PROXY","Symbol","setUpState","cb","onChange","result","undefined","$state","initialState","proxify","obj","proxy","Proxy","get","prop","__$p","value","scheduledJobs","schedulerRunning","processScheduledJobs","now","Date","jobsToRun","remainingJobs","queue","filter","latestEndTime","totalElapsed","processJobQueue","sort","a","b","concat","length","requestAnimationFrame","schedule","priority","NORMAL","IMMEDIATE","Promise","resolve","push","global","window","setUpContext","context","__$c","getElement","subject","sideEffectsMap","sideEffect","effect","dependencies","element","e","shouldEffectRun","effectMapItem","p","shouldRun","deps","findIndex","dep","index","attributeCallbackMap","Map","observerMap","createDirective","handler","args","text","Text","textContent","handlerMap","onHandler","name","HTMLInputElement","includes","addEventListener","on","input","target","USER_BLOCKING","initialValue","observer","MutationObserver","mutationsList","mutation","type","attributeName","addObserver","observeAttribute","getAttribute","state","setAttribute","disconnect","stopObserving","observe","attributes","startObserving","Object","defineProperty","setup","customElements","define","attachShadow","mode","_this","performRender","this","renderQueued","nextRenderQueued","_this2","shadowRoot","then","sideEffects","all","map","cleanUp","HTMLElement","staticParts","dynamicParts","directiveIndex","i","dynamicPart","staticPart","attributeValueMode","attributeMode","attributeNameFound","nextChar","nextNextChar","document","createElement","innerHTML"],"mappings":"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"}