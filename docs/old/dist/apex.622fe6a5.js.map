{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/apex/apex.js"],"names":["conf","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","folding","markers","start","RegExp","end","keywords","uppercaseFirstLetter","lowercase","charAt","toUpperCase","substr","keywordsWithCaseVariations","forEach","push","language","defaultToken","tokenPostfix","operators","symbols","escapes","digits","octaldigits","binarydigits","hexdigits","tokenizer","root","cases","token","include","whitespace","comment","apexdoc","string","next"],"mappings":"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","file":"apex.622fe6a5.js","sourceRoot":"..","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    // the default separators except `@$`\r\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n    comments: {\r\n        lineComment: '//',\r\n        blockComment: ['/*', '*/'],\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')'],\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' },\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' },\r\n        { open: '<', close: '>' },\r\n    ],\r\n    folding: {\r\n        markers: {\r\n            start: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))\"),\r\n            end: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))\")\r\n        }\r\n    }\r\n};\r\nvar keywords = [\r\n    'abstract',\r\n    'activate',\r\n    'and',\r\n    'any',\r\n    'array',\r\n    'as',\r\n    'asc',\r\n    'assert',\r\n    'autonomous',\r\n    'begin',\r\n    'bigdecimal',\r\n    'blob',\r\n    'boolean',\r\n    'break',\r\n    'bulk',\r\n    'by',\r\n    'case',\r\n    'cast',\r\n    'catch',\r\n    'char',\r\n    'class',\r\n    'collect',\r\n    'commit',\r\n    'const',\r\n    'continue',\r\n    'convertcurrency',\r\n    'decimal',\r\n    'default',\r\n    'delete',\r\n    'desc',\r\n    'do',\r\n    'double',\r\n    'else',\r\n    'end',\r\n    'enum',\r\n    'exception',\r\n    'exit',\r\n    'export',\r\n    'extends',\r\n    'false',\r\n    'final',\r\n    'finally',\r\n    'float',\r\n    'for',\r\n    'from',\r\n    'future',\r\n    'get',\r\n    'global',\r\n    'goto',\r\n    'group',\r\n    'having',\r\n    'hint',\r\n    'if',\r\n    'implements',\r\n    'import',\r\n    'in',\r\n    'inner',\r\n    'insert',\r\n    'instanceof',\r\n    'int',\r\n    'interface',\r\n    'into',\r\n    'join',\r\n    'last_90_days',\r\n    'last_month',\r\n    'last_n_days',\r\n    'last_week',\r\n    'like',\r\n    'limit',\r\n    'list',\r\n    'long',\r\n    'loop',\r\n    'map',\r\n    'merge',\r\n    'native',\r\n    'new',\r\n    'next_90_days',\r\n    'next_month',\r\n    'next_n_days',\r\n    'next_week',\r\n    'not',\r\n    'null',\r\n    'nulls',\r\n    'number',\r\n    'object',\r\n    'of',\r\n    'on',\r\n    'or',\r\n    'outer',\r\n    'override',\r\n    'package',\r\n    'parallel',\r\n    'pragma',\r\n    'private',\r\n    'protected',\r\n    'public',\r\n    'retrieve',\r\n    'return',\r\n    'returning',\r\n    'rollback',\r\n    'savepoint',\r\n    'search',\r\n    'select',\r\n    'set',\r\n    'short',\r\n    'sort',\r\n    'stat',\r\n    'static',\r\n    'strictfp',\r\n    'super',\r\n    'switch',\r\n    'synchronized',\r\n    'system',\r\n    'testmethod',\r\n    'then',\r\n    'this',\r\n    'this_month',\r\n    'this_week',\r\n    'throw',\r\n    'throws',\r\n    'today',\r\n    'tolabel',\r\n    'tomorrow',\r\n    'transaction',\r\n    'transient',\r\n    'trigger',\r\n    'true',\r\n    'try',\r\n    'type',\r\n    'undelete',\r\n    'update',\r\n    'upsert',\r\n    'using',\r\n    'virtual',\r\n    'void',\r\n    'volatile',\r\n    'webservice',\r\n    'when',\r\n    'where',\r\n    'while',\r\n    'yesterday'\r\n];\r\n// create case variations of the keywords - apex is case insensitive, but we can't make the highlighter case insensitive\r\n// because we use a heuristic to assume that identifiers starting with an upper case letter are types.\r\nvar uppercaseFirstLetter = function (lowercase) { return lowercase.charAt(0).toUpperCase() + lowercase.substr(1); };\r\nvar keywordsWithCaseVariations = [];\r\nkeywords.forEach(function (lowercase) {\r\n    keywordsWithCaseVariations.push(lowercase);\r\n    keywordsWithCaseVariations.push(lowercase.toUpperCase());\r\n    keywordsWithCaseVariations.push(uppercaseFirstLetter(lowercase));\r\n});\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.apex',\r\n    keywords: keywordsWithCaseVariations,\r\n    operators: [\r\n        '=', '>', '<', '!', '~', '?', ':',\r\n        '==', '<=', '>=', '!=', '&&', '||', '++', '--',\r\n        '+', '-', '*', '/', '&', '|', '^', '%', '<<',\r\n        '>>', '>>>', '+=', '-=', '*=', '/=', '&=', '|=',\r\n        '^=', '%=', '<<=', '>>=', '>>>='\r\n    ],\r\n    // we include these common regular expressions\r\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    digits: /\\d+(_+\\d+)*/,\r\n    octaldigits: /[0-7]+(_+[0-7]+)*/,\r\n    binarydigits: /[0-1]+(_+[0-1]+)*/,\r\n    hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            // identifiers and keywords\r\n            [/[a-z_$][\\w$]*/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n            // assume that identifiers starting with an uppercase letter are types\r\n            [/[A-Z][\\w\\$]*/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@default': 'type.identifier'\r\n                    }\r\n                }],\r\n            // whitespace\r\n            { include: '@whitespace' },\r\n            // delimiters and operators\r\n            [/[{}()\\[\\]]/, '@brackets'],\r\n            [/[<>](?!@symbols)/, '@brackets'],\r\n            [/@symbols/, {\r\n                    cases: {\r\n                        '@operators': 'delimiter',\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n            // @ annotations.\r\n            [/@\\s*[a-zA-Z_\\$][\\w\\$]*/, 'annotation'],\r\n            // numbers\r\n            [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n            [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n            [/(@digits)[fFdD]/, 'number.float'],\r\n            [/(@digits)[lL]?/, 'number'],\r\n            // delimiter: after number because of .\\d floats\r\n            [/[;,.]/, 'delimiter'],\r\n            // strings\r\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\r\n            [/'([^'\\\\]|\\\\.)*$/, 'string.invalid'],\r\n            [/\"/, 'string', '@string.\"'],\r\n            [/'/, 'string', '@string.\\''],\r\n            // characters\r\n            [/'[^\\\\']'/, 'string'],\r\n            [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\r\n            [/'/, 'string.invalid']\r\n        ],\r\n        whitespace: [\r\n            [/[ \\t\\r\\n]+/, ''],\r\n            [/\\/\\*\\*(?!\\/)/, 'comment.doc', '@apexdoc'],\r\n            [/\\/\\*/, 'comment', '@comment'],\r\n            [/\\/\\/.*$/, 'comment'],\r\n        ],\r\n        comment: [\r\n            [/[^\\/*]+/, 'comment'],\r\n            // [/\\/\\*/, 'comment', '@push' ],    // nested comment not allowed :-(\r\n            // [/\\/\\*/,    'comment.invalid' ],    // this breaks block comments in the shape of /* //*/\r\n            [/\\*\\//, 'comment', '@pop'],\r\n            [/[\\/*]/, 'comment']\r\n        ],\r\n        //Identical copy of comment above, except for the addition of .doc\r\n        apexdoc: [\r\n            [/[^\\/*]+/, 'comment.doc'],\r\n            [/\\*\\//, 'comment.doc', '@pop'],\r\n            [/[\\/*]/, 'comment.doc']\r\n        ],\r\n        string: [\r\n            [/[^\\\\\"']+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/[\"']/, { cases: { '$#==$S2': { token: 'string', next: '@pop' },\r\n                        '@default': 'string' } }]\r\n        ],\r\n    },\r\n};\r\n"]}