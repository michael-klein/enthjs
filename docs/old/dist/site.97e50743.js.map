{"version":3,"sources":["node_modules/core-js/internals/global.js","node_modules/core-js/internals/fails.js","node_modules/core-js/internals/descriptors.js","node_modules/core-js/internals/object-property-is-enumerable.js","node_modules/core-js/internals/create-property-descriptor.js","node_modules/core-js/internals/classof-raw.js","node_modules/core-js/internals/indexed-object.js","node_modules/core-js/internals/require-object-coercible.js","node_modules/core-js/internals/to-indexed-object.js","node_modules/core-js/internals/is-object.js","node_modules/core-js/internals/to-primitive.js","node_modules/core-js/internals/has.js","node_modules/core-js/internals/document-create-element.js","node_modules/core-js/internals/ie8-dom-define.js","node_modules/core-js/internals/object-get-own-property-descriptor.js","node_modules/core-js/internals/an-object.js","node_modules/core-js/internals/object-define-property.js","node_modules/core-js/internals/create-non-enumerable-property.js","node_modules/core-js/internals/set-global.js","node_modules/core-js/internals/shared-store.js","node_modules/core-js/internals/inspect-source.js","node_modules/core-js/internals/native-weak-map.js","node_modules/core-js/internals/is-pure.js","node_modules/core-js/internals/shared.js","node_modules/core-js/internals/uid.js","node_modules/core-js/internals/shared-key.js","node_modules/core-js/internals/hidden-keys.js","node_modules/core-js/internals/internal-state.js","node_modules/core-js/internals/redefine.js","node_modules/core-js/internals/path.js","node_modules/core-js/internals/get-built-in.js","node_modules/core-js/internals/to-integer.js","node_modules/core-js/internals/to-length.js","node_modules/core-js/internals/to-absolute-index.js","node_modules/core-js/internals/array-includes.js","node_modules/core-js/internals/object-keys-internal.js","node_modules/core-js/internals/enum-bug-keys.js","node_modules/core-js/internals/object-get-own-property-names.js","node_modules/core-js/internals/object-get-own-property-symbols.js","node_modules/core-js/internals/own-keys.js","node_modules/core-js/internals/copy-constructor-properties.js","node_modules/core-js/internals/is-forced.js","node_modules/core-js/internals/export.js","node_modules/core-js/internals/native-symbol.js","node_modules/core-js/internals/use-symbol-as-uid.js","node_modules/core-js/internals/is-array.js","node_modules/core-js/internals/to-object.js","node_modules/core-js/internals/object-keys.js","node_modules/core-js/internals/object-define-properties.js","node_modules/core-js/internals/html.js","node_modules/core-js/internals/object-create.js","node_modules/core-js/internals/object-get-own-property-names-external.js","node_modules/core-js/internals/well-known-symbol.js","node_modules/core-js/internals/wrapped-well-known-symbol.js","node_modules/core-js/internals/define-well-known-symbol.js","node_modules/core-js/internals/set-to-string-tag.js","node_modules/core-js/internals/a-function.js","node_modules/core-js/internals/bind-context.js","node_modules/core-js/internals/array-species-create.js","node_modules/core-js/internals/array-iteration.js","node_modules/core-js/modules/es.symbol.js","node_modules/core-js/modules/es.symbol.async-iterator.js","node_modules/core-js/modules/es.symbol.description.js","node_modules/core-js/modules/es.symbol.has-instance.js","node_modules/core-js/modules/es.symbol.is-concat-spreadable.js","node_modules/core-js/modules/es.symbol.iterator.js","node_modules/core-js/modules/es.symbol.match.js","node_modules/core-js/modules/es.symbol.match-all.js","node_modules/core-js/modules/es.symbol.replace.js","node_modules/core-js/modules/es.symbol.search.js","node_modules/core-js/modules/es.symbol.species.js","node_modules/core-js/modules/es.symbol.split.js","node_modules/core-js/modules/es.symbol.to-primitive.js","node_modules/core-js/modules/es.symbol.to-string-tag.js","node_modules/core-js/modules/es.symbol.unscopables.js","node_modules/core-js/internals/object-assign.js","node_modules/core-js/modules/es.object.assign.js","node_modules/core-js/modules/es.object.create.js","node_modules/core-js/modules/es.object.define-property.js","node_modules/core-js/modules/es.object.define-properties.js","node_modules/core-js/internals/object-to-array.js","node_modules/core-js/modules/es.object.entries.js","node_modules/core-js/internals/freezing.js","node_modules/core-js/internals/internal-metadata.js","node_modules/core-js/modules/es.object.freeze.js","node_modules/core-js/internals/iterators.js","node_modules/core-js/internals/is-array-iterator-method.js","node_modules/core-js/internals/to-string-tag-support.js","node_modules/core-js/internals/classof.js","node_modules/core-js/internals/get-iterator-method.js","node_modules/core-js/internals/call-with-safe-iteration-closing.js","node_modules/core-js/internals/iterate.js","node_modules/core-js/internals/create-property.js","node_modules/core-js/modules/es.object.from-entries.js","node_modules/core-js/modules/es.object.get-own-property-descriptor.js","node_modules/core-js/modules/es.object.get-own-property-descriptors.js","node_modules/core-js/modules/es.object.get-own-property-names.js","node_modules/core-js/internals/correct-prototype-getter.js","node_modules/core-js/internals/object-get-prototype-of.js","node_modules/core-js/modules/es.object.get-prototype-of.js","node_modules/core-js/internals/same-value.js","node_modules/core-js/modules/es.object.is.js","node_modules/core-js/modules/es.object.is-extensible.js","node_modules/core-js/modules/es.object.is-frozen.js","node_modules/core-js/modules/es.object.is-sealed.js","node_modules/core-js/modules/es.object.keys.js","node_modules/core-js/modules/es.object.prevent-extensions.js","node_modules/core-js/modules/es.object.seal.js","node_modules/core-js/internals/a-possible-prototype.js","node_modules/core-js/internals/object-set-prototype-of.js","node_modules/core-js/modules/es.object.set-prototype-of.js","node_modules/core-js/modules/es.object.values.js","node_modules/core-js/internals/object-to-string.js","node_modules/core-js/modules/es.object.to-string.js","node_modules/core-js/internals/forced-object-prototype-accessors-methods.js","node_modules/core-js/modules/es.object.define-getter.js","node_modules/core-js/modules/es.object.define-setter.js","node_modules/core-js/modules/es.object.lookup-getter.js","node_modules/core-js/modules/es.object.lookup-setter.js","node_modules/core-js/internals/function-bind.js","node_modules/core-js/modules/es.function.bind.js","node_modules/core-js/modules/es.function.name.js","node_modules/core-js/modules/es.function.has-instance.js","node_modules/core-js/modules/es.global-this.js","node_modules/core-js/internals/array-from.js","node_modules/core-js/internals/check-correctness-of-iteration.js","node_modules/core-js/modules/es.array.from.js","node_modules/core-js/modules/es.array.is-array.js","node_modules/core-js/modules/es.array.of.js","node_modules/core-js/internals/user-agent.js","node_modules/core-js/internals/v8-version.js","node_modules/core-js/internals/array-method-has-species-support.js","node_modules/core-js/modules/es.array.concat.js","node_modules/core-js/internals/array-copy-within.js","node_modules/core-js/internals/add-to-unscopables.js","node_modules/core-js/modules/es.array.copy-within.js","node_modules/core-js/internals/sloppy-array-method.js","node_modules/core-js/modules/es.array.every.js","node_modules/core-js/internals/array-fill.js","node_modules/core-js/modules/es.array.fill.js","node_modules/core-js/modules/es.array.filter.js","node_modules/core-js/modules/es.array.find.js","node_modules/core-js/modules/es.array.find-index.js","node_modules/core-js/internals/flatten-into-array.js","node_modules/core-js/modules/es.array.flat.js","node_modules/core-js/modules/es.array.flat-map.js","node_modules/core-js/internals/array-for-each.js","node_modules/core-js/modules/es.array.for-each.js","node_modules/core-js/modules/es.array.includes.js","node_modules/core-js/modules/es.array.index-of.js","node_modules/core-js/modules/es.array.join.js","node_modules/core-js/internals/array-last-index-of.js","node_modules/core-js/modules/es.array.last-index-of.js","node_modules/core-js/modules/es.array.map.js","node_modules/core-js/internals/array-reduce.js","node_modules/core-js/modules/es.array.reduce.js","node_modules/core-js/modules/es.array.reduce-right.js","node_modules/core-js/modules/es.array.reverse.js","node_modules/core-js/modules/es.array.slice.js","node_modules/core-js/modules/es.array.some.js","node_modules/core-js/modules/es.array.sort.js","node_modules/core-js/modules/es.array.splice.js","node_modules/core-js/internals/set-species.js","node_modules/core-js/modules/es.array.species.js","node_modules/core-js/modules/es.array.unscopables.flat.js","node_modules/core-js/modules/es.array.unscopables.flat-map.js","node_modules/core-js/internals/iterators-core.js","node_modules/core-js/internals/create-iterator-constructor.js","node_modules/core-js/internals/define-iterator.js","node_modules/core-js/modules/es.array.iterator.js","node_modules/core-js/modules/es.string.from-code-point.js","node_modules/core-js/modules/es.string.raw.js","node_modules/core-js/internals/string-multibyte.js","node_modules/core-js/modules/es.string.code-point-at.js","node_modules/core-js/internals/is-regexp.js","node_modules/core-js/internals/not-a-regexp.js","node_modules/core-js/internals/correct-is-regexp-logic.js","node_modules/core-js/modules/es.string.ends-with.js","node_modules/core-js/modules/es.string.includes.js","node_modules/core-js/internals/regexp-flags.js","node_modules/core-js/internals/regexp-sticky-helpers.js","node_modules/core-js/internals/regexp-exec.js","node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","node_modules/core-js/internals/advance-string-index.js","node_modules/core-js/internals/regexp-exec-abstract.js","node_modules/core-js/modules/es.string.match.js","node_modules/core-js/internals/species-constructor.js","node_modules/core-js/modules/es.string.match-all.js","node_modules/core-js/internals/string-repeat.js","node_modules/core-js/internals/string-pad.js","node_modules/core-js/internals/webkit-string-pad-bug.js","node_modules/core-js/modules/es.string.pad-end.js","node_modules/core-js/modules/es.string.pad-start.js","node_modules/core-js/modules/es.string.repeat.js","node_modules/core-js/modules/es.string.replace.js","node_modules/core-js/modules/es.string.search.js","node_modules/core-js/modules/es.string.split.js","node_modules/core-js/modules/es.string.starts-with.js","node_modules/core-js/internals/whitespaces.js","node_modules/core-js/internals/string-trim.js","node_modules/core-js/internals/forced-string-trim-method.js","node_modules/core-js/modules/es.string.trim.js","node_modules/core-js/modules/es.string.trim-start.js","node_modules/core-js/modules/es.string.trim-end.js","node_modules/core-js/modules/es.string.iterator.js","node_modules/core-js/internals/create-html.js","node_modules/core-js/internals/forced-string-html-method.js","node_modules/core-js/modules/es.string.anchor.js","node_modules/core-js/modules/es.string.big.js","node_modules/core-js/modules/es.string.blink.js","node_modules/core-js/modules/es.string.bold.js","node_modules/core-js/modules/es.string.fixed.js","node_modules/core-js/modules/es.string.fontcolor.js","node_modules/core-js/modules/es.string.fontsize.js","node_modules/core-js/modules/es.string.italics.js","node_modules/core-js/modules/es.string.link.js","node_modules/core-js/modules/es.string.small.js","node_modules/core-js/modules/es.string.strike.js","node_modules/core-js/modules/es.string.sub.js","node_modules/core-js/modules/es.string.sup.js","node_modules/core-js/internals/inherit-if-required.js","node_modules/core-js/modules/es.regexp.constructor.js","node_modules/core-js/modules/es.regexp.exec.js","node_modules/core-js/modules/es.regexp.flags.js","node_modules/core-js/modules/es.regexp.sticky.js","node_modules/core-js/modules/es.regexp.test.js","node_modules/core-js/modules/es.regexp.to-string.js","node_modules/core-js/internals/parse-int.js","node_modules/core-js/modules/es.parse-int.js","node_modules/core-js/internals/parse-float.js","node_modules/core-js/modules/es.parse-float.js","node_modules/core-js/modules/es.number.constructor.js","node_modules/core-js/modules/es.number.epsilon.js","node_modules/core-js/internals/number-is-finite.js","node_modules/core-js/modules/es.number.is-finite.js","node_modules/core-js/internals/is-integer.js","node_modules/core-js/modules/es.number.is-integer.js","node_modules/core-js/modules/es.number.is-nan.js","node_modules/core-js/modules/es.number.is-safe-integer.js","node_modules/core-js/modules/es.number.max-safe-integer.js","node_modules/core-js/modules/es.number.min-safe-integer.js","node_modules/core-js/modules/es.number.parse-float.js","node_modules/core-js/modules/es.number.parse-int.js","node_modules/core-js/internals/this-number-value.js","node_modules/core-js/modules/es.number.to-fixed.js","node_modules/core-js/modules/es.number.to-precision.js","node_modules/core-js/internals/math-log1p.js","node_modules/core-js/modules/es.math.acosh.js","node_modules/core-js/modules/es.math.asinh.js","node_modules/core-js/modules/es.math.atanh.js","node_modules/core-js/internals/math-sign.js","node_modules/core-js/modules/es.math.cbrt.js","node_modules/core-js/modules/es.math.clz32.js","node_modules/core-js/internals/math-expm1.js","node_modules/core-js/modules/es.math.cosh.js","node_modules/core-js/modules/es.math.expm1.js","node_modules/core-js/internals/math-fround.js","node_modules/core-js/modules/es.math.fround.js","node_modules/core-js/modules/es.math.hypot.js","node_modules/core-js/modules/es.math.imul.js","node_modules/core-js/modules/es.math.log10.js","node_modules/core-js/modules/es.math.log1p.js","node_modules/core-js/modules/es.math.log2.js","node_modules/core-js/modules/es.math.sign.js","node_modules/core-js/modules/es.math.sinh.js","node_modules/core-js/modules/es.math.tanh.js","node_modules/core-js/modules/es.math.to-string-tag.js","node_modules/core-js/modules/es.math.trunc.js","node_modules/core-js/modules/es.date.now.js","node_modules/core-js/modules/es.date.to-json.js","node_modules/core-js/internals/date-to-iso-string.js","node_modules/core-js/modules/es.date.to-iso-string.js","node_modules/core-js/modules/es.date.to-string.js","node_modules/core-js/internals/date-to-primitive.js","node_modules/core-js/modules/es.date.to-primitive.js","node_modules/core-js/modules/es.json.stringify.js","node_modules/core-js/modules/es.json.to-string-tag.js","node_modules/core-js/internals/native-promise-constructor.js","node_modules/core-js/internals/redefine-all.js","node_modules/core-js/internals/an-instance.js","node_modules/core-js/internals/is-ios.js","node_modules/core-js/internals/task.js","node_modules/core-js/internals/microtask.js","node_modules/core-js/internals/new-promise-capability.js","node_modules/core-js/internals/promise-resolve.js","node_modules/core-js/internals/host-report-errors.js","node_modules/core-js/internals/perform.js","node_modules/core-js/modules/es.promise.js","node_modules/core-js/modules/es.promise.all-settled.js","node_modules/core-js/modules/es.promise.finally.js","node_modules/core-js/internals/collection.js","node_modules/core-js/internals/collection-strong.js","node_modules/core-js/modules/es.map.js","node_modules/core-js/modules/es.set.js","node_modules/core-js/internals/collection-weak.js","node_modules/core-js/modules/es.weak-map.js","node_modules/core-js/modules/es.weak-set.js","node_modules/core-js/internals/array-buffer-view-core.js","node_modules/core-js/internals/to-index.js","node_modules/core-js/internals/ieee754.js","node_modules/core-js/internals/array-buffer.js","node_modules/core-js/modules/es.array-buffer.constructor.js","node_modules/core-js/modules/es.array-buffer.is-view.js","node_modules/core-js/modules/es.array-buffer.slice.js","node_modules/core-js/modules/es.data-view.js","node_modules/core-js/internals/typed-arrays-constructors-requires-wrappers.js","node_modules/core-js/internals/to-positive-integer.js","node_modules/core-js/internals/to-offset.js","node_modules/core-js/internals/typed-array-from.js","node_modules/core-js/internals/typed-array-constructor.js","node_modules/core-js/modules/es.typed-array.int8-array.js","node_modules/core-js/modules/es.typed-array.uint8-array.js","node_modules/core-js/modules/es.typed-array.uint8-clamped-array.js","node_modules/core-js/modules/es.typed-array.int16-array.js","node_modules/core-js/modules/es.typed-array.uint16-array.js","node_modules/core-js/modules/es.typed-array.int32-array.js","node_modules/core-js/modules/es.typed-array.uint32-array.js","node_modules/core-js/modules/es.typed-array.float32-array.js","node_modules/core-js/modules/es.typed-array.float64-array.js","node_modules/core-js/modules/es.typed-array.from.js","node_modules/core-js/modules/es.typed-array.of.js","node_modules/core-js/modules/es.typed-array.copy-within.js","node_modules/core-js/modules/es.typed-array.every.js","node_modules/core-js/modules/es.typed-array.fill.js","node_modules/core-js/modules/es.typed-array.filter.js","node_modules/core-js/modules/es.typed-array.find.js","node_modules/core-js/modules/es.typed-array.find-index.js","node_modules/core-js/modules/es.typed-array.for-each.js","node_modules/core-js/modules/es.typed-array.includes.js","node_modules/core-js/modules/es.typed-array.index-of.js","node_modules/core-js/modules/es.typed-array.iterator.js","node_modules/core-js/modules/es.typed-array.join.js","node_modules/core-js/modules/es.typed-array.last-index-of.js","node_modules/core-js/modules/es.typed-array.map.js","node_modules/core-js/modules/es.typed-array.reduce.js","node_modules/core-js/modules/es.typed-array.reduce-right.js","node_modules/core-js/modules/es.typed-array.reverse.js","node_modules/core-js/modules/es.typed-array.set.js","node_modules/core-js/modules/es.typed-array.slice.js","node_modules/core-js/modules/es.typed-array.some.js","node_modules/core-js/modules/es.typed-array.sort.js","node_modules/core-js/modules/es.typed-array.subarray.js","node_modules/core-js/modules/es.typed-array.to-locale-string.js","node_modules/core-js/modules/es.typed-array.to-string.js","node_modules/core-js/modules/es.reflect.apply.js","node_modules/core-js/modules/es.reflect.construct.js","node_modules/core-js/modules/es.reflect.define-property.js","node_modules/core-js/modules/es.reflect.delete-property.js","node_modules/core-js/modules/es.reflect.get.js","node_modules/core-js/modules/es.reflect.get-own-property-descriptor.js","node_modules/core-js/modules/es.reflect.get-prototype-of.js","node_modules/core-js/modules/es.reflect.has.js","node_modules/core-js/modules/es.reflect.is-extensible.js","node_modules/core-js/modules/es.reflect.own-keys.js","node_modules/core-js/modules/es.reflect.prevent-extensions.js","node_modules/core-js/modules/es.reflect.set.js","node_modules/core-js/modules/es.reflect.set-prototype-of.js","node_modules/core-js/es/index.js","node_modules/core-js/internals/dom-iterables.js","node_modules/core-js/modules/web.dom-collections.for-each.js","node_modules/core-js/modules/web.dom-collections.iterator.js","node_modules/core-js/modules/web.immediate.js","node_modules/core-js/modules/web.queue-microtask.js","node_modules/core-js/modules/web.timers.js","node_modules/core-js/internals/native-url.js","node_modules/core-js/internals/punycode-to-ascii.js","node_modules/core-js/internals/get-iterator.js","node_modules/core-js/modules/web.url-search-params.js","node_modules/core-js/modules/web.url.js","node_modules/core-js/modules/web.url.to-json.js","node_modules/core-js/web/index.js","node_modules/core-js/stable/index.js","node_modules/regenerator-runtime/runtime.js","node_modules/proxy-polyfill/src/proxy.js","node_modules/goober/dist/goober.module.js","../src/reactivity.ts","../src/errors.ts","../src/composables/element.ts","../src/composables/context.ts","../src/directive.ts","../src/directives/clss.ts","../src/html.ts","../src/scheduler.ts","../src/render.ts","../src/directives/sub.ts","../src/composables/sideeffects.ts","../src/component.ts","../src/composables/properties.ts","../src/composables/attributes.ts","../src/directives/text.ts","../src/directives/prop.ts","../src/directives/input.ts","../src/directives/on.ts","../src/directives/attr.ts","../src/directives/list.ts","../src/index.ts","utils.ts","node_modules/simple-icons/index.js","components/nav_bar.ts","components/container.ts","components/animations/computer_animation.ts","components/intro.ts","components/hello_world.ts","components/router.ts","node_modules/lottie-web/build/player/lottie.js","components/lottie.ts","components/logo.ts","index.ts"],"names":["r","data","e","t","querySelector","self","_goober","document","head","appendChild","createElement","innerHTML","id","firstChild","a","n","c","i","test","JSON","stringify","replace","o","u","s","toLowerCase","charCodeAt","f","split","reduce","indexOf","exec","shift","unshift","slice","call","props","className","p","map","arguments","target","g","l","bind","Object","assign","apply"],"mappings":"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","file":"site.97e50743.js","sourceRoot":"..","sourcesContent":["var check = function (it) {\n  return it && it.Math == Math && it;\n};\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nmodule.exports =\n  // eslint-disable-next-line no-undef\n  check(typeof globalThis == 'object' && globalThis) ||\n  check(typeof window == 'object' && window) ||\n  check(typeof self == 'object' && self) ||\n  check(typeof global == 'object' && global) ||\n  // eslint-disable-next-line no-new-func\n  Function('return this')();\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (error) {\n    return true;\n  }\n};\n","var fails = require('../internals/fails');\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !fails(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","'use strict';\nvar nativePropertyIsEnumerable = {}.propertyIsEnumerable;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Nashorn ~ JDK8 bug\nvar NASHORN_BUG = getOwnPropertyDescriptor && !nativePropertyIsEnumerable.call({ 1: 2 }, 1);\n\n// `Object.prototype.propertyIsEnumerable` method implementation\n// https://tc39.github.io/ecma262/#sec-object.prototype.propertyisenumerable\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n  var descriptor = getOwnPropertyDescriptor(this, V);\n  return !!descriptor && descriptor.enumerable;\n} : nativePropertyIsEnumerable;\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","var fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\n\nvar split = ''.split;\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nmodule.exports = fails(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins\n  return !Object('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof(it) == 'String' ? split.call(it, '') : Object(it);\n} : Object;\n","// `RequireObjectCoercible` abstract operation\n// https://tc39.github.io/ecma262/#sec-requireobjectcoercible\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on \" + it);\n  return it;\n};\n","// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject = require('../internals/indexed-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nmodule.exports = function (it) {\n  return IndexedObject(requireObjectCoercible(it));\n};\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","var isObject = require('../internals/is-object');\n\n// `ToPrimitive` abstract operation\n// https://tc39.github.io/ecma262/#sec-toprimitive\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (input, PREFERRED_STRING) {\n  if (!isObject(input)) return input;\n  var fn, val;\n  if (PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n  if (typeof (fn = input.valueOf) == 'function' && !isObject(val = fn.call(input))) return val;\n  if (!PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","var hasOwnProperty = {}.hasOwnProperty;\n\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","var global = require('../internals/global');\nvar isObject = require('../internals/is-object');\n\nvar document = global.document;\n// typeof document.createElement is 'object' in old IE\nvar EXISTS = isObject(document) && isObject(document.createElement);\n\nmodule.exports = function (it) {\n  return EXISTS ? document.createElement(it) : {};\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar createElement = require('../internals/document-create-element');\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !DESCRIPTORS && !fails(function () {\n  return Object.defineProperty(createElement('div'), 'a', {\n    get: function () { return 7; }\n  }).a != 7;\n});\n","var DESCRIPTORS = require('../internals/descriptors');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPrimitive = require('../internals/to-primitive');\nvar has = require('../internals/has');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\n\nvar nativeGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptor\nexports.f = DESCRIPTORS ? nativeGetOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n  O = toIndexedObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return nativeGetOwnPropertyDescriptor(O, P);\n  } catch (error) { /* empty */ }\n  if (has(O, P)) return createPropertyDescriptor(!propertyIsEnumerableModule.f.call(O, P), O[P]);\n};\n","var isObject = require('../internals/is-object');\n\nmodule.exports = function (it) {\n  if (!isObject(it)) {\n    throw TypeError(String(it) + ' is not an object');\n  } return it;\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\nvar anObject = require('../internals/an-object');\nvar toPrimitive = require('../internals/to-primitive');\n\nvar nativeDefineProperty = Object.defineProperty;\n\n// `Object.defineProperty` method\n// https://tc39.github.io/ecma262/#sec-object.defineproperty\nexports.f = DESCRIPTORS ? nativeDefineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return nativeDefineProperty(O, P, Attributes);\n  } catch (error) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = DESCRIPTORS ? function (object, key, value) {\n  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","var global = require('../internals/global');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nmodule.exports = function (key, value) {\n  try {\n    createNonEnumerableProperty(global, key, value);\n  } catch (error) {\n    global[key] = value;\n  } return value;\n};\n","var global = require('../internals/global');\nvar setGlobal = require('../internals/set-global');\n\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || setGlobal(SHARED, {});\n\nmodule.exports = store;\n","var store = require('../internals/shared-store');\n\nvar functionToString = Function.toString;\n\n// this helper broken in `3.4.1-3.4.4`, so we can't use `shared` helper\nif (typeof store.inspectSource != 'function') {\n  store.inspectSource = function (it) {\n    return functionToString.call(it);\n  };\n}\n\nmodule.exports = store.inspectSource;\n","var global = require('../internals/global');\nvar inspectSource = require('../internals/inspect-source');\n\nvar WeakMap = global.WeakMap;\n\nmodule.exports = typeof WeakMap === 'function' && /native code/.test(inspectSource(WeakMap));\n","module.exports = false;\n","var IS_PURE = require('../internals/is-pure');\nvar store = require('../internals/shared-store');\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: '3.6.1',\n  mode: IS_PURE ? 'pure' : 'global',\n  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'\n});\n","var id = 0;\nvar postfix = Math.random();\n\nmodule.exports = function (key) {\n  return 'Symbol(' + String(key === undefined ? '' : key) + ')_' + (++id + postfix).toString(36);\n};\n","var shared = require('../internals/shared');\nvar uid = require('../internals/uid');\n\nvar keys = shared('keys');\n\nmodule.exports = function (key) {\n  return keys[key] || (keys[key] = uid(key));\n};\n","module.exports = {};\n","var NATIVE_WEAK_MAP = require('../internals/native-weak-map');\nvar global = require('../internals/global');\nvar isObject = require('../internals/is-object');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar objectHas = require('../internals/has');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar WeakMap = global.WeakMap;\nvar set, get, has;\n\nvar enforce = function (it) {\n  return has(it) ? get(it) : set(it, {});\n};\n\nvar getterFor = function (TYPE) {\n  return function (it) {\n    var state;\n    if (!isObject(it) || (state = get(it)).type !== TYPE) {\n      throw TypeError('Incompatible receiver, ' + TYPE + ' required');\n    } return state;\n  };\n};\n\nif (NATIVE_WEAK_MAP) {\n  var store = new WeakMap();\n  var wmget = store.get;\n  var wmhas = store.has;\n  var wmset = store.set;\n  set = function (it, metadata) {\n    wmset.call(store, it, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return wmget.call(store, it) || {};\n  };\n  has = function (it) {\n    return wmhas.call(store, it);\n  };\n} else {\n  var STATE = sharedKey('state');\n  hiddenKeys[STATE] = true;\n  set = function (it, metadata) {\n    createNonEnumerableProperty(it, STATE, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return objectHas(it, STATE) ? it[STATE] : {};\n  };\n  has = function (it) {\n    return objectHas(it, STATE);\n  };\n}\n\nmodule.exports = {\n  set: set,\n  get: get,\n  has: has,\n  enforce: enforce,\n  getterFor: getterFor\n};\n","var global = require('../internals/global');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar has = require('../internals/has');\nvar setGlobal = require('../internals/set-global');\nvar inspectSource = require('../internals/inspect-source');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar getInternalState = InternalStateModule.get;\nvar enforceInternalState = InternalStateModule.enforce;\nvar TEMPLATE = String(String).split('String');\n\n(module.exports = function (O, key, value, options) {\n  var unsafe = options ? !!options.unsafe : false;\n  var simple = options ? !!options.enumerable : false;\n  var noTargetGet = options ? !!options.noTargetGet : false;\n  if (typeof value == 'function') {\n    if (typeof key == 'string' && !has(value, 'name')) createNonEnumerableProperty(value, 'name', key);\n    enforceInternalState(value).source = TEMPLATE.join(typeof key == 'string' ? key : '');\n  }\n  if (O === global) {\n    if (simple) O[key] = value;\n    else setGlobal(key, value);\n    return;\n  } else if (!unsafe) {\n    delete O[key];\n  } else if (!noTargetGet && O[key]) {\n    simple = true;\n  }\n  if (simple) O[key] = value;\n  else createNonEnumerableProperty(O, key, value);\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, 'toString', function toString() {\n  return typeof this == 'function' && getInternalState(this).source || inspectSource(this);\n});\n","var global = require('../internals/global');\n\nmodule.exports = global;\n","var path = require('../internals/path');\nvar global = require('../internals/global');\n\nvar aFunction = function (variable) {\n  return typeof variable == 'function' ? variable : undefined;\n};\n\nmodule.exports = function (namespace, method) {\n  return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global[namespace])\n    : path[namespace] && path[namespace][method] || global[namespace] && global[namespace][method];\n};\n","var ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `ToInteger` abstract operation\n// https://tc39.github.io/ecma262/#sec-tointeger\nmodule.exports = function (argument) {\n  return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);\n};\n","var toInteger = require('../internals/to-integer');\n\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.github.io/ecma262/#sec-tolength\nmodule.exports = function (argument) {\n  return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n","var toInteger = require('../internals/to-integer');\n\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\nmodule.exports = function (index, length) {\n  var integer = toInteger(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n","var toIndexedObject = require('../internals/to-indexed-object');\nvar toLength = require('../internals/to-length');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\nvar createMethod = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) {\n      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.includes` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.includes\n  includes: createMethod(true),\n  // `Array.prototype.indexOf` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.indexof\n  indexOf: createMethod(false)\n};\n","var has = require('../internals/has');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar indexOf = require('../internals/array-includes').indexOf;\nvar hiddenKeys = require('../internals/hidden-keys');\n\nmodule.exports = function (object, names) {\n  var O = toIndexedObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~indexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","// IE8- don't enum bug keys\nmodule.exports = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf'\n];\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\nvar hiddenKeys = enumBugKeys.concat('length', 'prototype');\n\n// `Object.getOwnPropertyNames` method\n// https://tc39.github.io/ecma262/#sec-object.getownpropertynames\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return internalObjectKeys(O, hiddenKeys);\n};\n","exports.f = Object.getOwnPropertySymbols;\n","var getBuiltIn = require('../internals/get-built-in');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar anObject = require('../internals/an-object');\n\n// all object keys, includes non-enumerable and symbols\nmodule.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {\n  var keys = getOwnPropertyNamesModule.f(anObject(it));\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n  return getOwnPropertySymbols ? keys.concat(getOwnPropertySymbols(it)) : keys;\n};\n","var has = require('../internals/has');\nvar ownKeys = require('../internals/own-keys');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\n\nmodule.exports = function (target, source) {\n  var keys = ownKeys(source);\n  var defineProperty = definePropertyModule.f;\n  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (!has(target, key)) defineProperty(target, key, getOwnPropertyDescriptor(source, key));\n  }\n};\n","var fails = require('../internals/fails');\n\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value == POLYFILL ? true\n    : value == NATIVE ? false\n    : typeof detection == 'function' ? fails(detection)\n    : !!detection;\n};\n\nvar normalize = isForced.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = 'N';\nvar POLYFILL = isForced.POLYFILL = 'P';\n\nmodule.exports = isForced;\n","var global = require('../internals/global');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar setGlobal = require('../internals/set-global');\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\nvar isForced = require('../internals/is-forced');\n\n/*\n  options.target      - name of the target object\n  options.global      - target is the global object\n  options.stat        - export as static methods of target\n  options.proto       - export as prototype methods of target\n  options.real        - real prototype method for the `pure` version\n  options.forced      - export even if the native feature is available\n  options.bind        - bind methods to the target, required for the `pure` version\n  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe      - use the simple assignment of property instead of delete + defineProperty\n  options.sham        - add a flag to not completely full polyfills\n  options.enumerable  - export as enumerable property\n  options.noTargetGet - prevent calling a getter on target\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var FORCED, target, key, targetProperty, sourceProperty, descriptor;\n  if (GLOBAL) {\n    target = global;\n  } else if (STATIC) {\n    target = global[TARGET] || setGlobal(TARGET, {});\n  } else {\n    target = (global[TARGET] || {}).prototype;\n  }\n  if (target) for (key in source) {\n    sourceProperty = source[key];\n    if (options.noTargetGet) {\n      descriptor = getOwnPropertyDescriptor(target, key);\n      targetProperty = descriptor && descriptor.value;\n    } else targetProperty = target[key];\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contained in target\n    if (!FORCED && targetProperty !== undefined) {\n      if (typeof sourceProperty === typeof targetProperty) continue;\n      copyConstructorProperties(sourceProperty, targetProperty);\n    }\n    // add a flag to not completely full polyfills\n    if (options.sham || (targetProperty && targetProperty.sham)) {\n      createNonEnumerableProperty(sourceProperty, 'sham', true);\n    }\n    // extend global\n    redefine(target, key, sourceProperty, options);\n  }\n};\n","var fails = require('../internals/fails');\n\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n  // Chrome 38 Symbol has incorrect toString conversion\n  // eslint-disable-next-line no-undef\n  return !String(Symbol());\n});\n","var NATIVE_SYMBOL = require('../internals/native-symbol');\n\nmodule.exports = NATIVE_SYMBOL\n  // eslint-disable-next-line no-undef\n  && !Symbol.sham\n  // eslint-disable-next-line no-undef\n  && typeof Symbol.iterator == 'symbol';\n","var classof = require('../internals/classof-raw');\n\n// `IsArray` abstract operation\n// https://tc39.github.io/ecma262/#sec-isarray\nmodule.exports = Array.isArray || function isArray(arg) {\n  return classof(arg) == 'Array';\n};\n","var requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `ToObject` abstract operation\n// https://tc39.github.io/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return Object(requireObjectCoercible(argument));\n};\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\n// `Object.keys` method\n// https://tc39.github.io/ecma262/#sec-object.keys\nmodule.exports = Object.keys || function keys(O) {\n  return internalObjectKeys(O, enumBugKeys);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar anObject = require('../internals/an-object');\nvar objectKeys = require('../internals/object-keys');\n\n// `Object.defineProperties` method\n// https://tc39.github.io/ecma262/#sec-object.defineproperties\nmodule.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = objectKeys(Properties);\n  var length = keys.length;\n  var index = 0;\n  var key;\n  while (length > index) definePropertyModule.f(O, key = keys[index++], Properties[key]);\n  return O;\n};\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('document', 'documentElement');\n","var anObject = require('../internals/an-object');\nvar defineProperties = require('../internals/object-define-properties');\nvar enumBugKeys = require('../internals/enum-bug-keys');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar html = require('../internals/html');\nvar documentCreateElement = require('../internals/document-create-element');\nvar sharedKey = require('../internals/shared-key');\n\nvar GT = '>';\nvar LT = '<';\nvar PROTOTYPE = 'prototype';\nvar SCRIPT = 'script';\nvar IE_PROTO = sharedKey('IE_PROTO');\n\nvar EmptyConstructor = function () { /* empty */ };\n\nvar scriptTag = function (content) {\n  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;\n};\n\n// Create object with fake `null` prototype: use ActiveX Object with cleared prototype\nvar NullProtoObjectViaActiveX = function (activeXDocument) {\n  activeXDocument.write(scriptTag(''));\n  activeXDocument.close();\n  var temp = activeXDocument.parentWindow.Object;\n  activeXDocument = null; // avoid memory leak\n  return temp;\n};\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar NullProtoObjectViaIFrame = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = documentCreateElement('iframe');\n  var JS = 'java' + SCRIPT + ':';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  html.appendChild(iframe);\n  // https://github.com/zloirock/core-js/issues/475\n  iframe.src = String(JS);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(scriptTag('document.F=Object'));\n  iframeDocument.close();\n  return iframeDocument.F;\n};\n\n// Check for document.domain and active x support\n// No need to use active x approach when document.domain is not set\n// see https://github.com/es-shims/es5-shim/issues/150\n// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n// avoid IE GC bug\nvar activeXDocument;\nvar NullProtoObject = function () {\n  try {\n    /* global ActiveXObject */\n    activeXDocument = document.domain && new ActiveXObject('htmlfile');\n  } catch (error) { /* ignore */ }\n  NullProtoObject = activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame();\n  var length = enumBugKeys.length;\n  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];\n  return NullProtoObject();\n};\n\nhiddenKeys[IE_PROTO] = true;\n\n// `Object.create` method\n// https://tc39.github.io/ecma262/#sec-object.create\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    EmptyConstructor[PROTOTYPE] = anObject(O);\n    result = new EmptyConstructor();\n    EmptyConstructor[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = NullProtoObject();\n  return Properties === undefined ? result : defineProperties(result, Properties);\n};\n","var toIndexedObject = require('../internals/to-indexed-object');\nvar nativeGetOwnPropertyNames = require('../internals/object-get-own-property-names').f;\n\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return nativeGetOwnPropertyNames(it);\n  } catch (error) {\n    return windowNames.slice();\n  }\n};\n\n// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]'\n    ? getWindowNames(it)\n    : nativeGetOwnPropertyNames(toIndexedObject(it));\n};\n","var global = require('../internals/global');\nvar shared = require('../internals/shared');\nvar has = require('../internals/has');\nvar uid = require('../internals/uid');\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar WellKnownSymbolsStore = shared('wks');\nvar Symbol = global.Symbol;\nvar createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;\n\nmodule.exports = function (name) {\n  if (!has(WellKnownSymbolsStore, name)) {\n    if (NATIVE_SYMBOL && has(Symbol, name)) WellKnownSymbolsStore[name] = Symbol[name];\n    else WellKnownSymbolsStore[name] = createWellKnownSymbol('Symbol.' + name);\n  } return WellKnownSymbolsStore[name];\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nexports.f = wellKnownSymbol;\n","var path = require('../internals/path');\nvar has = require('../internals/has');\nvar wrappedWellKnownSymbolModule = require('../internals/wrapped-well-known-symbol');\nvar defineProperty = require('../internals/object-define-property').f;\n\nmodule.exports = function (NAME) {\n  var Symbol = path.Symbol || (path.Symbol = {});\n  if (!has(Symbol, NAME)) defineProperty(Symbol, NAME, {\n    value: wrappedWellKnownSymbolModule.f(NAME)\n  });\n};\n","var defineProperty = require('../internals/object-define-property').f;\nvar has = require('../internals/has');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n\nmodule.exports = function (it, TAG, STATIC) {\n  if (it && !has(it = STATIC ? it : it.prototype, TO_STRING_TAG)) {\n    defineProperty(it, TO_STRING_TAG, { configurable: true, value: TAG });\n  }\n};\n","module.exports = function (it) {\n  if (typeof it != 'function') {\n    throw TypeError(String(it) + ' is not a function');\n  } return it;\n};\n","var aFunction = require('../internals/a-function');\n\n// optional / simple context binding\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 0: return function () {\n      return fn.call(that);\n    };\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","var isObject = require('../internals/is-object');\nvar isArray = require('../internals/is-array');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\n\n// `ArraySpeciesCreate` abstract operation\n// https://tc39.github.io/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray, length) {\n  var C;\n  if (isArray(originalArray)) {\n    C = originalArray.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    else if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return new (C === undefined ? Array : C)(length === 0 ? 0 : length);\n};\n","var bind = require('../internals/bind-context');\nvar IndexedObject = require('../internals/indexed-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\nvar push = [].push;\n\n// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex }` methods implementation\nvar createMethod = function (TYPE) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  return function ($this, callbackfn, that, specificCreate) {\n    var O = toObject($this);\n    var self = IndexedObject(O);\n    var boundFunction = bind(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var create = specificCreate || arraySpeciesCreate;\n    var target = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var value, result;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      value = self[index];\n      result = boundFunction(value, index, O);\n      if (TYPE) {\n        if (IS_MAP) target[index] = result; // map\n        else if (result) switch (TYPE) {\n          case 3: return true;              // some\n          case 5: return value;             // find\n          case 6: return index;             // findIndex\n          case 2: push.call(target, value); // filter\n        } else if (IS_EVERY) return false;  // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.forEach` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.foreach\n  forEach: createMethod(0),\n  // `Array.prototype.map` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.map\n  map: createMethod(1),\n  // `Array.prototype.filter` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.filter\n  filter: createMethod(2),\n  // `Array.prototype.some` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.some\n  some: createMethod(3),\n  // `Array.prototype.every` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.every\n  every: createMethod(4),\n  // `Array.prototype.find` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.find\n  find: createMethod(5),\n  // `Array.prototype.findIndex` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.findIndex\n  findIndex: createMethod(6)\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar getBuiltIn = require('../internals/get-built-in');\nvar IS_PURE = require('../internals/is-pure');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\nvar fails = require('../internals/fails');\nvar has = require('../internals/has');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar anObject = require('../internals/an-object');\nvar toObject = require('../internals/to-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPrimitive = require('../internals/to-primitive');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar nativeObjectCreate = require('../internals/object-create');\nvar objectKeys = require('../internals/object-keys');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertyNamesExternal = require('../internals/object-get-own-property-names-external');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar shared = require('../internals/shared');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar uid = require('../internals/uid');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar wrappedWellKnownSymbolModule = require('../internals/wrapped-well-known-symbol');\nvar defineWellKnownSymbol = require('../internals/define-well-known-symbol');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar InternalStateModule = require('../internals/internal-state');\nvar $forEach = require('../internals/array-iteration').forEach;\n\nvar HIDDEN = sharedKey('hidden');\nvar SYMBOL = 'Symbol';\nvar PROTOTYPE = 'prototype';\nvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(SYMBOL);\nvar ObjectPrototype = Object[PROTOTYPE];\nvar $Symbol = global.Symbol;\nvar $stringify = getBuiltIn('JSON', 'stringify');\nvar nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\nvar nativeDefineProperty = definePropertyModule.f;\nvar nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;\nvar nativePropertyIsEnumerable = propertyIsEnumerableModule.f;\nvar AllSymbols = shared('symbols');\nvar ObjectPrototypeSymbols = shared('op-symbols');\nvar StringToSymbolRegistry = shared('string-to-symbol-registry');\nvar SymbolToStringRegistry = shared('symbol-to-string-registry');\nvar WellKnownSymbolsStore = shared('wks');\nvar QObject = global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDescriptor = DESCRIPTORS && fails(function () {\n  return nativeObjectCreate(nativeDefineProperty({}, 'a', {\n    get: function () { return nativeDefineProperty(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (O, P, Attributes) {\n  var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor(ObjectPrototype, P);\n  if (ObjectPrototypeDescriptor) delete ObjectPrototype[P];\n  nativeDefineProperty(O, P, Attributes);\n  if (ObjectPrototypeDescriptor && O !== ObjectPrototype) {\n    nativeDefineProperty(ObjectPrototype, P, ObjectPrototypeDescriptor);\n  }\n} : nativeDefineProperty;\n\nvar wrap = function (tag, description) {\n  var symbol = AllSymbols[tag] = nativeObjectCreate($Symbol[PROTOTYPE]);\n  setInternalState(symbol, {\n    type: SYMBOL,\n    tag: tag,\n    description: description\n  });\n  if (!DESCRIPTORS) symbol.description = description;\n  return symbol;\n};\n\nvar isSymbol = USE_SYMBOL_AS_UID ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  return Object(it) instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(O, P, Attributes) {\n  if (O === ObjectPrototype) $defineProperty(ObjectPrototypeSymbols, P, Attributes);\n  anObject(O);\n  var key = toPrimitive(P, true);\n  anObject(Attributes);\n  if (has(AllSymbols, key)) {\n    if (!Attributes.enumerable) {\n      if (!has(O, HIDDEN)) nativeDefineProperty(O, HIDDEN, createPropertyDescriptor(1, {}));\n      O[HIDDEN][key] = true;\n    } else {\n      if (has(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;\n      Attributes = nativeObjectCreate(Attributes, { enumerable: createPropertyDescriptor(0, false) });\n    } return setSymbolDescriptor(O, key, Attributes);\n  } return nativeDefineProperty(O, key, Attributes);\n};\n\nvar $defineProperties = function defineProperties(O, Properties) {\n  anObject(O);\n  var properties = toIndexedObject(Properties);\n  var keys = objectKeys(properties).concat($getOwnPropertySymbols(properties));\n  $forEach(keys, function (key) {\n    if (!DESCRIPTORS || $propertyIsEnumerable.call(properties, key)) $defineProperty(O, key, properties[key]);\n  });\n  return O;\n};\n\nvar $create = function create(O, Properties) {\n  return Properties === undefined ? nativeObjectCreate(O) : $defineProperties(nativeObjectCreate(O), Properties);\n};\n\nvar $propertyIsEnumerable = function propertyIsEnumerable(V) {\n  var P = toPrimitive(V, true);\n  var enumerable = nativePropertyIsEnumerable.call(this, P);\n  if (this === ObjectPrototype && has(AllSymbols, P) && !has(ObjectPrototypeSymbols, P)) return false;\n  return enumerable || !has(this, P) || !has(AllSymbols, P) || has(this, HIDDEN) && this[HIDDEN][P] ? enumerable : true;\n};\n\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(O, P) {\n  var it = toIndexedObject(O);\n  var key = toPrimitive(P, true);\n  if (it === ObjectPrototype && has(AllSymbols, key) && !has(ObjectPrototypeSymbols, key)) return;\n  var descriptor = nativeGetOwnPropertyDescriptor(it, key);\n  if (descriptor && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) {\n    descriptor.enumerable = true;\n  }\n  return descriptor;\n};\n\nvar $getOwnPropertyNames = function getOwnPropertyNames(O) {\n  var names = nativeGetOwnPropertyNames(toIndexedObject(O));\n  var result = [];\n  $forEach(names, function (key) {\n    if (!has(AllSymbols, key) && !has(hiddenKeys, key)) result.push(key);\n  });\n  return result;\n};\n\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(O) {\n  var IS_OBJECT_PROTOTYPE = O === ObjectPrototype;\n  var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject(O));\n  var result = [];\n  $forEach(names, function (key) {\n    if (has(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || has(ObjectPrototype, key))) {\n      result.push(AllSymbols[key]);\n    }\n  });\n  return result;\n};\n\n// `Symbol` constructor\n// https://tc39.github.io/ecma262/#sec-symbol-constructor\nif (!NATIVE_SYMBOL) {\n  $Symbol = function Symbol() {\n    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor');\n    var description = !arguments.length || arguments[0] === undefined ? undefined : String(arguments[0]);\n    var tag = uid(description);\n    var setter = function (value) {\n      if (this === ObjectPrototype) setter.call(ObjectPrototypeSymbols, value);\n      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDescriptor(this, tag, createPropertyDescriptor(1, value));\n    };\n    if (DESCRIPTORS && USE_SETTER) setSymbolDescriptor(ObjectPrototype, tag, { configurable: true, set: setter });\n    return wrap(tag, description);\n  };\n\n  redefine($Symbol[PROTOTYPE], 'toString', function toString() {\n    return getInternalState(this).tag;\n  });\n\n  redefine($Symbol, 'withoutSetter', function (description) {\n    return wrap(uid(description), description);\n  });\n\n  propertyIsEnumerableModule.f = $propertyIsEnumerable;\n  definePropertyModule.f = $defineProperty;\n  getOwnPropertyDescriptorModule.f = $getOwnPropertyDescriptor;\n  getOwnPropertyNamesModule.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;\n  getOwnPropertySymbolsModule.f = $getOwnPropertySymbols;\n\n  wrappedWellKnownSymbolModule.f = function (name) {\n    return wrap(wellKnownSymbol(name), name);\n  };\n\n  if (DESCRIPTORS) {\n    // https://github.com/tc39/proposal-Symbol-description\n    nativeDefineProperty($Symbol[PROTOTYPE], 'description', {\n      configurable: true,\n      get: function description() {\n        return getInternalState(this).description;\n      }\n    });\n    if (!IS_PURE) {\n      redefine(ObjectPrototype, 'propertyIsEnumerable', $propertyIsEnumerable, { unsafe: true });\n    }\n  }\n}\n\n$({ global: true, wrap: true, forced: !NATIVE_SYMBOL, sham: !NATIVE_SYMBOL }, {\n  Symbol: $Symbol\n});\n\n$forEach(objectKeys(WellKnownSymbolsStore), function (name) {\n  defineWellKnownSymbol(name);\n});\n\n$({ target: SYMBOL, stat: true, forced: !NATIVE_SYMBOL }, {\n  // `Symbol.for` method\n  // https://tc39.github.io/ecma262/#sec-symbol.for\n  'for': function (key) {\n    var string = String(key);\n    if (has(StringToSymbolRegistry, string)) return StringToSymbolRegistry[string];\n    var symbol = $Symbol(string);\n    StringToSymbolRegistry[string] = symbol;\n    SymbolToStringRegistry[symbol] = string;\n    return symbol;\n  },\n  // `Symbol.keyFor` method\n  // https://tc39.github.io/ecma262/#sec-symbol.keyfor\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol');\n    if (has(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];\n  },\n  useSetter: function () { USE_SETTER = true; },\n  useSimple: function () { USE_SETTER = false; }\n});\n\n$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL, sham: !DESCRIPTORS }, {\n  // `Object.create` method\n  // https://tc39.github.io/ecma262/#sec-object.create\n  create: $create,\n  // `Object.defineProperty` method\n  // https://tc39.github.io/ecma262/#sec-object.defineproperty\n  defineProperty: $defineProperty,\n  // `Object.defineProperties` method\n  // https://tc39.github.io/ecma262/#sec-object.defineproperties\n  defineProperties: $defineProperties,\n  // `Object.getOwnPropertyDescriptor` method\n  // https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptors\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor\n});\n\n$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL }, {\n  // `Object.getOwnPropertyNames` method\n  // https://tc39.github.io/ecma262/#sec-object.getownpropertynames\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // `Object.getOwnPropertySymbols` method\n  // https://tc39.github.io/ecma262/#sec-object.getownpropertysymbols\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives\n// https://bugs.chromium.org/p/v8/issues/detail?id=3443\n$({ target: 'Object', stat: true, forced: fails(function () { getOwnPropertySymbolsModule.f(1); }) }, {\n  getOwnPropertySymbols: function getOwnPropertySymbols(it) {\n    return getOwnPropertySymbolsModule.f(toObject(it));\n  }\n});\n\n// `JSON.stringify` method behavior with symbols\n// https://tc39.github.io/ecma262/#sec-json.stringify\nif ($stringify) {\n  var FORCED_JSON_STRINGIFY = !NATIVE_SYMBOL || fails(function () {\n    var symbol = $Symbol();\n    // MS Edge converts symbol values to JSON as {}\n    return $stringify([symbol]) != '[null]'\n      // WebKit converts symbol values to JSON as null\n      || $stringify({ a: symbol }) != '{}'\n      // V8 throws on boxed symbols\n      || $stringify(Object(symbol)) != '{}';\n  });\n\n  $({ target: 'JSON', stat: true, forced: FORCED_JSON_STRINGIFY }, {\n    // eslint-disable-next-line no-unused-vars\n    stringify: function stringify(it, replacer, space) {\n      var args = [it];\n      var index = 1;\n      var $replacer;\n      while (arguments.length > index) args.push(arguments[index++]);\n      $replacer = replacer;\n      if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n      if (!isArray(replacer)) replacer = function (key, value) {\n        if (typeof $replacer == 'function') value = $replacer.call(this, key, value);\n        if (!isSymbol(value)) return value;\n      };\n      args[1] = replacer;\n      return $stringify.apply(null, args);\n    }\n  });\n}\n\n// `Symbol.prototype[@@toPrimitive]` method\n// https://tc39.github.io/ecma262/#sec-symbol.prototype-@@toprimitive\nif (!$Symbol[PROTOTYPE][TO_PRIMITIVE]) {\n  createNonEnumerableProperty($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n}\n// `Symbol.prototype[@@toStringTag]` property\n// https://tc39.github.io/ecma262/#sec-symbol.prototype-@@tostringtag\nsetToStringTag($Symbol, SYMBOL);\n\nhiddenKeys[HIDDEN] = true;\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.asyncIterator` well-known symbol\n// https://tc39.github.io/ecma262/#sec-symbol.asynciterator\ndefineWellKnownSymbol('asyncIterator');\n","// `Symbol.prototype.description` getter\n// https://tc39.github.io/ecma262/#sec-symbol.prototype.description\n'use strict';\nvar $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar has = require('../internals/has');\nvar isObject = require('../internals/is-object');\nvar defineProperty = require('../internals/object-define-property').f;\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\n\nvar NativeSymbol = global.Symbol;\n\nif (DESCRIPTORS && typeof NativeSymbol == 'function' && (!('description' in NativeSymbol.prototype) ||\n  // Safari 12 bug\n  NativeSymbol().description !== undefined\n)) {\n  var EmptyStringDescriptionStore = {};\n  // wrap Symbol constructor for correct work with undefined description\n  var SymbolWrapper = function Symbol() {\n    var description = arguments.length < 1 || arguments[0] === undefined ? undefined : String(arguments[0]);\n    var result = this instanceof SymbolWrapper\n      ? new NativeSymbol(description)\n      // in Edge 13, String(Symbol(undefined)) === 'Symbol(undefined)'\n      : description === undefined ? NativeSymbol() : NativeSymbol(description);\n    if (description === '') EmptyStringDescriptionStore[result] = true;\n    return result;\n  };\n  copyConstructorProperties(SymbolWrapper, NativeSymbol);\n  var symbolPrototype = SymbolWrapper.prototype = NativeSymbol.prototype;\n  symbolPrototype.constructor = SymbolWrapper;\n\n  var symbolToString = symbolPrototype.toString;\n  var native = String(NativeSymbol('test')) == 'Symbol(test)';\n  var regexp = /^Symbol\\((.*)\\)[^)]+$/;\n  defineProperty(symbolPrototype, 'description', {\n    configurable: true,\n    get: function description() {\n      var symbol = isObject(this) ? this.valueOf() : this;\n      var string = symbolToString.call(symbol);\n      if (has(EmptyStringDescriptionStore, symbol)) return '';\n      var desc = native ? string.slice(7, -1) : string.replace(regexp, '$1');\n      return desc === '' ? undefined : desc;\n    }\n  });\n\n  $({ global: true, forced: true }, {\n    Symbol: SymbolWrapper\n  });\n}\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.hasInstance` well-known symbol\n// https://tc39.github.io/ecma262/#sec-symbol.hasinstance\ndefineWellKnownSymbol('hasInstance');\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.isConcatSpreadable` well-known symbol\n// https://tc39.github.io/ecma262/#sec-symbol.isconcatspreadable\ndefineWellKnownSymbol('isConcatSpreadable');\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.iterator` well-known symbol\n// https://tc39.github.io/ecma262/#sec-symbol.iterator\ndefineWellKnownSymbol('iterator');\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.match` well-known symbol\n// https://tc39.github.io/ecma262/#sec-symbol.match\ndefineWellKnownSymbol('match');\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.matchAll` well-known symbol\ndefineWellKnownSymbol('matchAll');\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.replace` well-known symbol\n// https://tc39.github.io/ecma262/#sec-symbol.replace\ndefineWellKnownSymbol('replace');\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.search` well-known symbol\n// https://tc39.github.io/ecma262/#sec-symbol.search\ndefineWellKnownSymbol('search');\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.species` well-known symbol\n// https://tc39.github.io/ecma262/#sec-symbol.species\ndefineWellKnownSymbol('species');\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.split` well-known symbol\n// https://tc39.github.io/ecma262/#sec-symbol.split\ndefineWellKnownSymbol('split');\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.toPrimitive` well-known symbol\n// https://tc39.github.io/ecma262/#sec-symbol.toprimitive\ndefineWellKnownSymbol('toPrimitive');\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.toStringTag` well-known symbol\n// https://tc39.github.io/ecma262/#sec-symbol.tostringtag\ndefineWellKnownSymbol('toStringTag');\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.unscopables` well-known symbol\n// https://tc39.github.io/ecma262/#sec-symbol.unscopables\ndefineWellKnownSymbol('unscopables');\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar objectKeys = require('../internals/object-keys');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar toObject = require('../internals/to-object');\nvar IndexedObject = require('../internals/indexed-object');\n\nvar nativeAssign = Object.assign;\nvar defineProperty = Object.defineProperty;\n\n// `Object.assign` method\n// https://tc39.github.io/ecma262/#sec-object.assign\nmodule.exports = !nativeAssign || fails(function () {\n  // should have correct order of operations (Edge bug)\n  if (DESCRIPTORS && nativeAssign({ b: 1 }, nativeAssign(defineProperty({}, 'a', {\n    enumerable: true,\n    get: function () {\n      defineProperty(this, 'b', {\n        value: 3,\n        enumerable: false\n      });\n    }\n  }), { b: 2 })).b !== 1) return true;\n  // should work with symbols and should have deterministic property order (V8 bug)\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var symbol = Symbol();\n  var alphabet = 'abcdefghijklmnopqrst';\n  A[symbol] = 7;\n  alphabet.split('').forEach(function (chr) { B[chr] = chr; });\n  return nativeAssign({}, A)[symbol] != 7 || objectKeys(nativeAssign({}, B)).join('') != alphabet;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = toObject(target);\n  var argumentsLength = arguments.length;\n  var index = 1;\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n  var propertyIsEnumerable = propertyIsEnumerableModule.f;\n  while (argumentsLength > index) {\n    var S = IndexedObject(arguments[index++]);\n    var keys = getOwnPropertySymbols ? objectKeys(S).concat(getOwnPropertySymbols(S)) : objectKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) {\n      key = keys[j++];\n      if (!DESCRIPTORS || propertyIsEnumerable.call(S, key)) T[key] = S[key];\n    }\n  } return T;\n} : nativeAssign;\n","var $ = require('../internals/export');\nvar assign = require('../internals/object-assign');\n\n// `Object.assign` method\n// https://tc39.github.io/ecma262/#sec-object.assign\n$({ target: 'Object', stat: true, forced: Object.assign !== assign }, {\n  assign: assign\n});\n","var $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar create = require('../internals/object-create');\n\n// `Object.create` method\n// https://tc39.github.io/ecma262/#sec-object.create\n$({ target: 'Object', stat: true, sham: !DESCRIPTORS }, {\n  create: create\n});\n","var $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar objectDefinePropertyModile = require('../internals/object-define-property');\n\n// `Object.defineProperty` method\n// https://tc39.github.io/ecma262/#sec-object.defineproperty\n$({ target: 'Object', stat: true, forced: !DESCRIPTORS, sham: !DESCRIPTORS }, {\n  defineProperty: objectDefinePropertyModile.f\n});\n","var $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar defineProperties = require('../internals/object-define-properties');\n\n// `Object.defineProperties` method\n// https://tc39.github.io/ecma262/#sec-object.defineproperties\n$({ target: 'Object', stat: true, forced: !DESCRIPTORS, sham: !DESCRIPTORS }, {\n  defineProperties: defineProperties\n});\n","var DESCRIPTORS = require('../internals/descriptors');\nvar objectKeys = require('../internals/object-keys');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar propertyIsEnumerable = require('../internals/object-property-is-enumerable').f;\n\n// `Object.{ entries, values }` methods implementation\nvar createMethod = function (TO_ENTRIES) {\n  return function (it) {\n    var O = toIndexedObject(it);\n    var keys = objectKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || propertyIsEnumerable.call(O, key)) {\n        result.push(TO_ENTRIES ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n\nmodule.exports = {\n  // `Object.entries` method\n  // https://tc39.github.io/ecma262/#sec-object.entries\n  entries: createMethod(true),\n  // `Object.values` method\n  // https://tc39.github.io/ecma262/#sec-object.values\n  values: createMethod(false)\n};\n","var $ = require('../internals/export');\nvar $entries = require('../internals/object-to-array').entries;\n\n// `Object.entries` method\n// https://tc39.github.io/ecma262/#sec-object.entries\n$({ target: 'Object', stat: true }, {\n  entries: function entries(O) {\n    return $entries(O);\n  }\n});\n","var fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  return Object.isExtensible(Object.preventExtensions({}));\n});\n","var hiddenKeys = require('../internals/hidden-keys');\nvar isObject = require('../internals/is-object');\nvar has = require('../internals/has');\nvar defineProperty = require('../internals/object-define-property').f;\nvar uid = require('../internals/uid');\nvar FREEZING = require('../internals/freezing');\n\nvar METADATA = uid('meta');\nvar id = 0;\n\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\n\nvar setMetadata = function (it) {\n  defineProperty(it, METADATA, { value: {\n    objectID: 'O' + ++id, // object ID\n    weakData: {}          // weak collections IDs\n  } });\n};\n\nvar fastKey = function (it, create) {\n  // return a primitive with prefix\n  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, METADATA)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMetadata(it);\n  // return object ID\n  } return it[METADATA].objectID;\n};\n\nvar getWeakData = function (it, create) {\n  if (!has(it, METADATA)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMetadata(it);\n  // return the store of weak collections IDs\n  } return it[METADATA].weakData;\n};\n\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZING && meta.REQUIRED && isExtensible(it) && !has(it, METADATA)) setMetadata(it);\n  return it;\n};\n\nvar meta = module.exports = {\n  REQUIRED: false,\n  fastKey: fastKey,\n  getWeakData: getWeakData,\n  onFreeze: onFreeze\n};\n\nhiddenKeys[METADATA] = true;\n","var $ = require('../internals/export');\nvar FREEZING = require('../internals/freezing');\nvar fails = require('../internals/fails');\nvar isObject = require('../internals/is-object');\nvar onFreeze = require('../internals/internal-metadata').onFreeze;\n\nvar nativeFreeze = Object.freeze;\nvar FAILS_ON_PRIMITIVES = fails(function () { nativeFreeze(1); });\n\n// `Object.freeze` method\n// https://tc39.github.io/ecma262/#sec-object.freeze\n$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES, sham: !FREEZING }, {\n  freeze: function freeze(it) {\n    return nativeFreeze && isObject(it) ? nativeFreeze(onFreeze(it)) : it;\n  }\n});\n","module.exports = {};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\nvar Iterators = require('../internals/iterators');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar ArrayPrototype = Array.prototype;\n\n// check on default Array iterator\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar test = {};\n\ntest[TO_STRING_TAG] = 'z';\n\nmodule.exports = String(test) === '[object z]';\n","var TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar classofRaw = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n// ES3 wrong here\nvar CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (error) { /* empty */ }\n};\n\n// getting tag from ES6+ `Object.prototype.toString`\nmodule.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {\n  var O, tag, result;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == 'string' ? tag\n    // builtinTag case\n    : CORRECT_ARGUMENTS ? classofRaw(O)\n    // ES3 arguments fallback\n    : (result = classofRaw(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : result;\n};\n","var classof = require('../internals/classof');\nvar Iterators = require('../internals/iterators');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\n\nmodule.exports = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n","var anObject = require('../internals/an-object');\n\n// call something on iterator step with safe closing on error\nmodule.exports = function (iterator, fn, value, ENTRIES) {\n  try {\n    return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (error) {\n    var returnMethod = iterator['return'];\n    if (returnMethod !== undefined) anObject(returnMethod.call(iterator));\n    throw error;\n  }\n};\n","var anObject = require('../internals/an-object');\nvar isArrayIteratorMethod = require('../internals/is-array-iterator-method');\nvar toLength = require('../internals/to-length');\nvar bind = require('../internals/bind-context');\nvar getIteratorMethod = require('../internals/get-iterator-method');\nvar callWithSafeIterationClosing = require('../internals/call-with-safe-iteration-closing');\n\nvar Result = function (stopped, result) {\n  this.stopped = stopped;\n  this.result = result;\n};\n\nvar iterate = module.exports = function (iterable, fn, that, AS_ENTRIES, IS_ITERATOR) {\n  var boundFunction = bind(fn, that, AS_ENTRIES ? 2 : 1);\n  var iterator, iterFn, index, length, result, next, step;\n\n  if (IS_ITERATOR) {\n    iterator = iterable;\n  } else {\n    iterFn = getIteratorMethod(iterable);\n    if (typeof iterFn != 'function') throw TypeError('Target is not iterable');\n    // optimisation for array iterators\n    if (isArrayIteratorMethod(iterFn)) {\n      for (index = 0, length = toLength(iterable.length); length > index; index++) {\n        result = AS_ENTRIES\n          ? boundFunction(anObject(step = iterable[index])[0], step[1])\n          : boundFunction(iterable[index]);\n        if (result && result instanceof Result) return result;\n      } return new Result(false);\n    }\n    iterator = iterFn.call(iterable);\n  }\n\n  next = iterator.next;\n  while (!(step = next.call(iterator)).done) {\n    result = callWithSafeIterationClosing(iterator, boundFunction, step.value, AS_ENTRIES);\n    if (typeof result == 'object' && result && result instanceof Result) return result;\n  } return new Result(false);\n};\n\niterate.stop = function (result) {\n  return new Result(true, result);\n};\n","'use strict';\nvar toPrimitive = require('../internals/to-primitive');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = function (object, key, value) {\n  var propertyKey = toPrimitive(key);\n  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));\n  else object[propertyKey] = value;\n};\n","var $ = require('../internals/export');\nvar iterate = require('../internals/iterate');\nvar createProperty = require('../internals/create-property');\n\n// `Object.fromEntries` method\n// https://github.com/tc39/proposal-object-from-entries\n$({ target: 'Object', stat: true }, {\n  fromEntries: function fromEntries(iterable) {\n    var obj = {};\n    iterate(iterable, function (k, v) {\n      createProperty(obj, k, v);\n    }, undefined, true);\n    return obj;\n  }\n});\n","var $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar nativeGetOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar DESCRIPTORS = require('../internals/descriptors');\n\nvar FAILS_ON_PRIMITIVES = fails(function () { nativeGetOwnPropertyDescriptor(1); });\nvar FORCED = !DESCRIPTORS || FAILS_ON_PRIMITIVES;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptor\n$({ target: 'Object', stat: true, forced: FORCED, sham: !DESCRIPTORS }, {\n  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(it, key) {\n    return nativeGetOwnPropertyDescriptor(toIndexedObject(it), key);\n  }\n});\n","var $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar ownKeys = require('../internals/own-keys');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar createProperty = require('../internals/create-property');\n\n// `Object.getOwnPropertyDescriptors` method\n// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptors\n$({ target: 'Object', stat: true, sham: !DESCRIPTORS }, {\n  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {\n    var O = toIndexedObject(object);\n    var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n    var keys = ownKeys(O);\n    var result = {};\n    var index = 0;\n    var key, descriptor;\n    while (keys.length > index) {\n      descriptor = getOwnPropertyDescriptor(O, key = keys[index++]);\n      if (descriptor !== undefined) createProperty(result, key, descriptor);\n    }\n    return result;\n  }\n});\n","var $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar nativeGetOwnPropertyNames = require('../internals/object-get-own-property-names-external').f;\n\nvar FAILS_ON_PRIMITIVES = fails(function () { return !Object.getOwnPropertyNames(1); });\n\n// `Object.getOwnPropertyNames` method\n// https://tc39.github.io/ecma262/#sec-object.getownpropertynames\n$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {\n  getOwnPropertyNames: nativeGetOwnPropertyNames\n});\n","var fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  function F() { /* empty */ }\n  F.prototype.constructor = null;\n  return Object.getPrototypeOf(new F()) !== F.prototype;\n});\n","var has = require('../internals/has');\nvar toObject = require('../internals/to-object');\nvar sharedKey = require('../internals/shared-key');\nvar CORRECT_PROTOTYPE_GETTER = require('../internals/correct-prototype-getter');\n\nvar IE_PROTO = sharedKey('IE_PROTO');\nvar ObjectPrototype = Object.prototype;\n\n// `Object.getPrototypeOf` method\n// https://tc39.github.io/ecma262/#sec-object.getprototypeof\nmodule.exports = CORRECT_PROTOTYPE_GETTER ? Object.getPrototypeOf : function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectPrototype : null;\n};\n","var $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar toObject = require('../internals/to-object');\nvar nativeGetPrototypeOf = require('../internals/object-get-prototype-of');\nvar CORRECT_PROTOTYPE_GETTER = require('../internals/correct-prototype-getter');\n\nvar FAILS_ON_PRIMITIVES = fails(function () { nativeGetPrototypeOf(1); });\n\n// `Object.getPrototypeOf` method\n// https://tc39.github.io/ecma262/#sec-object.getprototypeof\n$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES, sham: !CORRECT_PROTOTYPE_GETTER }, {\n  getPrototypeOf: function getPrototypeOf(it) {\n    return nativeGetPrototypeOf(toObject(it));\n  }\n});\n\n","// `SameValue` abstract operation\n// https://tc39.github.io/ecma262/#sec-samevalue\nmodule.exports = Object.is || function is(x, y) {\n  // eslint-disable-next-line no-self-compare\n  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;\n};\n","var $ = require('../internals/export');\nvar is = require('../internals/same-value');\n\n// `Object.is` method\n// https://tc39.github.io/ecma262/#sec-object.is\n$({ target: 'Object', stat: true }, {\n  is: is\n});\n","var $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar isObject = require('../internals/is-object');\n\nvar nativeIsExtensible = Object.isExtensible;\nvar FAILS_ON_PRIMITIVES = fails(function () { nativeIsExtensible(1); });\n\n// `Object.isExtensible` method\n// https://tc39.github.io/ecma262/#sec-object.isextensible\n$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {\n  isExtensible: function isExtensible(it) {\n    return isObject(it) ? nativeIsExtensible ? nativeIsExtensible(it) : true : false;\n  }\n});\n","var $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar isObject = require('../internals/is-object');\n\nvar nativeIsFrozen = Object.isFrozen;\nvar FAILS_ON_PRIMITIVES = fails(function () { nativeIsFrozen(1); });\n\n// `Object.isFrozen` method\n// https://tc39.github.io/ecma262/#sec-object.isfrozen\n$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {\n  isFrozen: function isFrozen(it) {\n    return isObject(it) ? nativeIsFrozen ? nativeIsFrozen(it) : false : true;\n  }\n});\n","var $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar isObject = require('../internals/is-object');\n\nvar nativeIsSealed = Object.isSealed;\nvar FAILS_ON_PRIMITIVES = fails(function () { nativeIsSealed(1); });\n\n// `Object.isSealed` method\n// https://tc39.github.io/ecma262/#sec-object.issealed\n$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {\n  isSealed: function isSealed(it) {\n    return isObject(it) ? nativeIsSealed ? nativeIsSealed(it) : false : true;\n  }\n});\n","var $ = require('../internals/export');\nvar toObject = require('../internals/to-object');\nvar nativeKeys = require('../internals/object-keys');\nvar fails = require('../internals/fails');\n\nvar FAILS_ON_PRIMITIVES = fails(function () { nativeKeys(1); });\n\n// `Object.keys` method\n// https://tc39.github.io/ecma262/#sec-object.keys\n$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {\n  keys: function keys(it) {\n    return nativeKeys(toObject(it));\n  }\n});\n","var $ = require('../internals/export');\nvar isObject = require('../internals/is-object');\nvar onFreeze = require('../internals/internal-metadata').onFreeze;\nvar FREEZING = require('../internals/freezing');\nvar fails = require('../internals/fails');\n\nvar nativePreventExtensions = Object.preventExtensions;\nvar FAILS_ON_PRIMITIVES = fails(function () { nativePreventExtensions(1); });\n\n// `Object.preventExtensions` method\n// https://tc39.github.io/ecma262/#sec-object.preventextensions\n$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES, sham: !FREEZING }, {\n  preventExtensions: function preventExtensions(it) {\n    return nativePreventExtensions && isObject(it) ? nativePreventExtensions(onFreeze(it)) : it;\n  }\n});\n","var $ = require('../internals/export');\nvar isObject = require('../internals/is-object');\nvar onFreeze = require('../internals/internal-metadata').onFreeze;\nvar FREEZING = require('../internals/freezing');\nvar fails = require('../internals/fails');\n\nvar nativeSeal = Object.seal;\nvar FAILS_ON_PRIMITIVES = fails(function () { nativeSeal(1); });\n\n// `Object.seal` method\n// https://tc39.github.io/ecma262/#sec-object.seal\n$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES, sham: !FREEZING }, {\n  seal: function seal(it) {\n    return nativeSeal && isObject(it) ? nativeSeal(onFreeze(it)) : it;\n  }\n});\n","var isObject = require('../internals/is-object');\n\nmodule.exports = function (it) {\n  if (!isObject(it) && it !== null) {\n    throw TypeError(\"Can't set \" + String(it) + ' as a prototype');\n  } return it;\n};\n","var anObject = require('../internals/an-object');\nvar aPossiblePrototype = require('../internals/a-possible-prototype');\n\n// `Object.setPrototypeOf` method\n// https://tc39.github.io/ecma262/#sec-object.setprototypeof\n// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nmodule.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {\n  var CORRECT_SETTER = false;\n  var test = {};\n  var setter;\n  try {\n    setter = Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set;\n    setter.call(test, []);\n    CORRECT_SETTER = test instanceof Array;\n  } catch (error) { /* empty */ }\n  return function setPrototypeOf(O, proto) {\n    anObject(O);\n    aPossiblePrototype(proto);\n    if (CORRECT_SETTER) setter.call(O, proto);\n    else O.__proto__ = proto;\n    return O;\n  };\n}() : undefined);\n","var $ = require('../internals/export');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\n\n// `Object.setPrototypeOf` method\n// https://tc39.github.io/ecma262/#sec-object.setprototypeof\n$({ target: 'Object', stat: true }, {\n  setPrototypeOf: setPrototypeOf\n});\n","var $ = require('../internals/export');\nvar $values = require('../internals/object-to-array').values;\n\n// `Object.values` method\n// https://tc39.github.io/ecma262/#sec-object.values\n$({ target: 'Object', stat: true }, {\n  values: function values(O) {\n    return $values(O);\n  }\n});\n","'use strict';\nvar TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar classof = require('../internals/classof');\n\n// `Object.prototype.toString` method implementation\n// https://tc39.github.io/ecma262/#sec-object.prototype.tostring\nmodule.exports = TO_STRING_TAG_SUPPORT ? {}.toString : function toString() {\n  return '[object ' + classof(this) + ']';\n};\n","var TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar redefine = require('../internals/redefine');\nvar toString = require('../internals/object-to-string');\n\n// `Object.prototype.toString` method\n// https://tc39.github.io/ecma262/#sec-object.prototype.tostring\nif (!TO_STRING_TAG_SUPPORT) {\n  redefine(Object.prototype, 'toString', toString, { unsafe: true });\n}\n","'use strict';\nvar IS_PURE = require('../internals/is-pure');\nvar global = require('../internals/global');\nvar fails = require('../internals/fails');\n\n// Forced replacement object prototype accessors methods\nmodule.exports = IS_PURE || !fails(function () {\n  var key = Math.random();\n  // In FF throws only define methods\n  // eslint-disable-next-line no-undef, no-useless-call\n  __defineSetter__.call(null, key, function () { /* empty */ });\n  delete global[key];\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar FORCED = require('../internals/forced-object-prototype-accessors-methods');\nvar toObject = require('../internals/to-object');\nvar aFunction = require('../internals/a-function');\nvar definePropertyModule = require('../internals/object-define-property');\n\n// `Object.prototype.__defineGetter__` method\n// https://tc39.github.io/ecma262/#sec-object.prototype.__defineGetter__\nif (DESCRIPTORS) {\n  $({ target: 'Object', proto: true, forced: FORCED }, {\n    __defineGetter__: function __defineGetter__(P, getter) {\n      definePropertyModule.f(toObject(this), P, { get: aFunction(getter), enumerable: true, configurable: true });\n    }\n  });\n}\n","'use strict';\nvar $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar FORCED = require('../internals/forced-object-prototype-accessors-methods');\nvar toObject = require('../internals/to-object');\nvar aFunction = require('../internals/a-function');\nvar definePropertyModule = require('../internals/object-define-property');\n\n// `Object.prototype.__defineSetter__` method\n// https://tc39.github.io/ecma262/#sec-object.prototype.__defineSetter__\nif (DESCRIPTORS) {\n  $({ target: 'Object', proto: true, forced: FORCED }, {\n    __defineSetter__: function __defineSetter__(P, setter) {\n      definePropertyModule.f(toObject(this), P, { set: aFunction(setter), enumerable: true, configurable: true });\n    }\n  });\n}\n","'use strict';\nvar $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar FORCED = require('../internals/forced-object-prototype-accessors-methods');\nvar toObject = require('../internals/to-object');\nvar toPrimitive = require('../internals/to-primitive');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\n\n// `Object.prototype.__lookupGetter__` method\n// https://tc39.github.io/ecma262/#sec-object.prototype.__lookupGetter__\nif (DESCRIPTORS) {\n  $({ target: 'Object', proto: true, forced: FORCED }, {\n    __lookupGetter__: function __lookupGetter__(P) {\n      var O = toObject(this);\n      var key = toPrimitive(P, true);\n      var desc;\n      do {\n        if (desc = getOwnPropertyDescriptor(O, key)) return desc.get;\n      } while (O = getPrototypeOf(O));\n    }\n  });\n}\n","'use strict';\nvar $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar FORCED = require('../internals/forced-object-prototype-accessors-methods');\nvar toObject = require('../internals/to-object');\nvar toPrimitive = require('../internals/to-primitive');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\n\n// `Object.prototype.__lookupSetter__` method\n// https://tc39.github.io/ecma262/#sec-object.prototype.__lookupSetter__\nif (DESCRIPTORS) {\n  $({ target: 'Object', proto: true, forced: FORCED }, {\n    __lookupSetter__: function __lookupSetter__(P) {\n      var O = toObject(this);\n      var key = toPrimitive(P, true);\n      var desc;\n      do {\n        if (desc = getOwnPropertyDescriptor(O, key)) return desc.set;\n      } while (O = getPrototypeOf(O));\n    }\n  });\n}\n","'use strict';\nvar aFunction = require('../internals/a-function');\nvar isObject = require('../internals/is-object');\n\nvar slice = [].slice;\nvar factories = {};\n\nvar construct = function (C, argsLength, args) {\n  if (!(argsLength in factories)) {\n    for (var list = [], i = 0; i < argsLength; i++) list[i] = 'a[' + i + ']';\n    // eslint-disable-next-line no-new-func\n    factories[argsLength] = Function('C,a', 'return new C(' + list.join(',') + ')');\n  } return factories[argsLength](C, args);\n};\n\n// `Function.prototype.bind` method implementation\n// https://tc39.github.io/ecma262/#sec-function.prototype.bind\nmodule.exports = Function.bind || function bind(that /* , ...args */) {\n  var fn = aFunction(this);\n  var partArgs = slice.call(arguments, 1);\n  var boundFunction = function bound(/* args... */) {\n    var args = partArgs.concat(slice.call(arguments));\n    return this instanceof boundFunction ? construct(fn, args.length, args) : fn.apply(that, args);\n  };\n  if (isObject(fn.prototype)) boundFunction.prototype = fn.prototype;\n  return boundFunction;\n};\n","var $ = require('../internals/export');\nvar bind = require('../internals/function-bind');\n\n// `Function.prototype.bind` method\n// https://tc39.github.io/ecma262/#sec-function.prototype.bind\n$({ target: 'Function', proto: true }, {\n  bind: bind\n});\n","var DESCRIPTORS = require('../internals/descriptors');\nvar defineProperty = require('../internals/object-define-property').f;\n\nvar FunctionPrototype = Function.prototype;\nvar FunctionPrototypeToString = FunctionPrototype.toString;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// Function instances `.name` property\n// https://tc39.github.io/ecma262/#sec-function-instances-name\nif (DESCRIPTORS && !(NAME in FunctionPrototype)) {\n  defineProperty(FunctionPrototype, NAME, {\n    configurable: true,\n    get: function () {\n      try {\n        return FunctionPrototypeToString.call(this).match(nameRE)[1];\n      } catch (error) {\n        return '';\n      }\n    }\n  });\n}\n","'use strict';\nvar isObject = require('../internals/is-object');\nvar definePropertyModule = require('../internals/object-define-property');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar HAS_INSTANCE = wellKnownSymbol('hasInstance');\nvar FunctionPrototype = Function.prototype;\n\n// `Function.prototype[@@hasInstance]` method\n// https://tc39.github.io/ecma262/#sec-function.prototype-@@hasinstance\nif (!(HAS_INSTANCE in FunctionPrototype)) {\n  definePropertyModule.f(FunctionPrototype, HAS_INSTANCE, { value: function (O) {\n    if (typeof this != 'function' || !isObject(O)) return false;\n    if (!isObject(this.prototype)) return O instanceof this;\n    // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:\n    while (O = getPrototypeOf(O)) if (this.prototype === O) return true;\n    return false;\n  } });\n}\n","var $ = require('../internals/export');\nvar global = require('../internals/global');\n\n// `globalThis` object\n// https://github.com/tc39/proposal-global\n$({ global: true }, {\n  globalThis: global\n});\n","'use strict';\nvar bind = require('../internals/bind-context');\nvar toObject = require('../internals/to-object');\nvar callWithSafeIterationClosing = require('../internals/call-with-safe-iteration-closing');\nvar isArrayIteratorMethod = require('../internals/is-array-iterator-method');\nvar toLength = require('../internals/to-length');\nvar createProperty = require('../internals/create-property');\nvar getIteratorMethod = require('../internals/get-iterator-method');\n\n// `Array.from` method implementation\n// https://tc39.github.io/ecma262/#sec-array.from\nmodule.exports = function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n  var O = toObject(arrayLike);\n  var C = typeof this == 'function' ? this : Array;\n  var argumentsLength = arguments.length;\n  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;\n  var mapping = mapfn !== undefined;\n  var index = 0;\n  var iteratorMethod = getIteratorMethod(O);\n  var length, result, step, iterator, next;\n  if (mapping) mapfn = bind(mapfn, argumentsLength > 2 ? arguments[2] : undefined, 2);\n  // if the target is not iterable or it's an array with the default iterator - use a simple case\n  if (iteratorMethod != undefined && !(C == Array && isArrayIteratorMethod(iteratorMethod))) {\n    iterator = iteratorMethod.call(O);\n    next = iterator.next;\n    result = new C();\n    for (;!(step = next.call(iterator)).done; index++) {\n      createProperty(result, index, mapping\n        ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true)\n        : step.value\n      );\n    }\n  } else {\n    length = toLength(O.length);\n    result = new C(length);\n    for (;length > index; index++) {\n      createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n    }\n  }\n  result.length = index;\n  return result;\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var called = 0;\n  var iteratorWithReturn = {\n    next: function () {\n      return { done: !!called++ };\n    },\n    'return': function () {\n      SAFE_CLOSING = true;\n    }\n  };\n  iteratorWithReturn[ITERATOR] = function () {\n    return this;\n  };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(iteratorWithReturn, function () { throw 2; });\n} catch (error) { /* empty */ }\n\nmodule.exports = function (exec, SKIP_CLOSING) {\n  if (!SKIP_CLOSING && !SAFE_CLOSING) return false;\n  var ITERATION_SUPPORT = false;\n  try {\n    var object = {};\n    object[ITERATOR] = function () {\n      return {\n        next: function () {\n          return { done: ITERATION_SUPPORT = true };\n        }\n      };\n    };\n    exec(object);\n  } catch (error) { /* empty */ }\n  return ITERATION_SUPPORT;\n};\n","var $ = require('../internals/export');\nvar from = require('../internals/array-from');\nvar checkCorrectnessOfIteration = require('../internals/check-correctness-of-iteration');\n\nvar INCORRECT_ITERATION = !checkCorrectnessOfIteration(function (iterable) {\n  Array.from(iterable);\n});\n\n// `Array.from` method\n// https://tc39.github.io/ecma262/#sec-array.from\n$({ target: 'Array', stat: true, forced: INCORRECT_ITERATION }, {\n  from: from\n});\n","var $ = require('../internals/export');\nvar isArray = require('../internals/is-array');\n\n// `Array.isArray` method\n// https://tc39.github.io/ecma262/#sec-array.isarray\n$({ target: 'Array', stat: true }, {\n  isArray: isArray\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar createProperty = require('../internals/create-property');\n\nvar ISNT_GENERIC = fails(function () {\n  function F() { /* empty */ }\n  return !(Array.of.call(F) instanceof F);\n});\n\n// `Array.of` method\n// https://tc39.github.io/ecma262/#sec-array.of\n// WebKit Array.of isn't generic\n$({ target: 'Array', stat: true, forced: ISNT_GENERIC }, {\n  of: function of(/* ...args */) {\n    var index = 0;\n    var argumentsLength = arguments.length;\n    var result = new (typeof this == 'function' ? this : Array)(argumentsLength);\n    while (argumentsLength > index) createProperty(result, index, arguments[index++]);\n    result.length = argumentsLength;\n    return result;\n  }\n});\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('navigator', 'userAgent') || '';\n","var global = require('../internals/global');\nvar userAgent = require('../internals/user-agent');\n\nvar process = global.process;\nvar versions = process && process.versions;\nvar v8 = versions && versions.v8;\nvar match, version;\n\nif (v8) {\n  match = v8.split('.');\n  version = match[0] + match[1];\n} else if (userAgent) {\n  match = userAgent.match(/Edge\\/(\\d+)/);\n  if (!match || match[1] >= 74) {\n    match = userAgent.match(/Chrome\\/(\\d+)/);\n    if (match) version = match[1];\n  }\n}\n\nmodule.exports = version && +version;\n","var fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/v8-version');\n\nvar SPECIES = wellKnownSymbol('species');\n\nmodule.exports = function (METHOD_NAME) {\n  // We can't use this feature detection in V8 since it causes\n  // deoptimization and serious performance degradation\n  // https://github.com/zloirock/core-js/issues/677\n  return V8_VERSION >= 51 || !fails(function () {\n    var array = [];\n    var constructor = array.constructor = {};\n    constructor[SPECIES] = function () {\n      return { foo: 1 };\n    };\n    return array[METHOD_NAME](Boolean).foo !== 1;\n  });\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar createProperty = require('../internals/create-property');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/v8-version');\n\nvar IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';\n\n// We can't use this feature detection in V8 since it causes\n// deoptimization and serious performance degradation\n// https://github.com/zloirock/core-js/issues/679\nvar IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {\n  var array = [];\n  array[IS_CONCAT_SPREADABLE] = false;\n  return array.concat()[0] !== array;\n});\n\nvar SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');\n\nvar isConcatSpreadable = function (O) {\n  if (!isObject(O)) return false;\n  var spreadable = O[IS_CONCAT_SPREADABLE];\n  return spreadable !== undefined ? !!spreadable : isArray(O);\n};\n\nvar FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;\n\n// `Array.prototype.concat` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.concat\n// with adding support of @@isConcatSpreadable and @@species\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  concat: function concat(arg) { // eslint-disable-line no-unused-vars\n    var O = toObject(this);\n    var A = arraySpeciesCreate(O, 0);\n    var n = 0;\n    var i, k, length, len, E;\n    for (i = -1, length = arguments.length; i < length; i++) {\n      E = i === -1 ? O : arguments[i];\n      if (isConcatSpreadable(E)) {\n        len = toLength(E.length);\n        if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);\n      } else {\n        if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        createProperty(A, n++, E);\n      }\n    }\n    A.length = n;\n    return A;\n  }\n});\n","'use strict';\nvar toObject = require('../internals/to-object');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar toLength = require('../internals/to-length');\n\nvar min = Math.min;\n\n// `Array.prototype.copyWithin` method implementation\n// https://tc39.github.io/ecma262/#sec-array.prototype.copywithin\nmodule.exports = [].copyWithin || function copyWithin(target /* = 0 */, start /* = 0, end = @length */) {\n  var O = toObject(this);\n  var len = toLength(O.length);\n  var to = toAbsoluteIndex(target, len);\n  var from = toAbsoluteIndex(start, len);\n  var end = arguments.length > 2 ? arguments[2] : undefined;\n  var count = min((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);\n  var inc = 1;\n  if (from < to && to < from + count) {\n    inc = -1;\n    from += count - 1;\n    to += count - 1;\n  }\n  while (count-- > 0) {\n    if (from in O) O[to] = O[from];\n    else delete O[to];\n    to += inc;\n    from += inc;\n  } return O;\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\nvar create = require('../internals/object-create');\nvar definePropertyModule = require('../internals/object-define-property');\n\nvar UNSCOPABLES = wellKnownSymbol('unscopables');\nvar ArrayPrototype = Array.prototype;\n\n// Array.prototype[@@unscopables]\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\nif (ArrayPrototype[UNSCOPABLES] == undefined) {\n  definePropertyModule.f(ArrayPrototype, UNSCOPABLES, {\n    configurable: true,\n    value: create(null)\n  });\n}\n\n// add a key to Array.prototype[@@unscopables]\nmodule.exports = function (key) {\n  ArrayPrototype[UNSCOPABLES][key] = true;\n};\n","var $ = require('../internals/export');\nvar copyWithin = require('../internals/array-copy-within');\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\n// `Array.prototype.copyWithin` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.copywithin\n$({ target: 'Array', proto: true }, {\n  copyWithin: copyWithin\n});\n\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('copyWithin');\n","'use strict';\nvar fails = require('../internals/fails');\n\nmodule.exports = function (METHOD_NAME, argument) {\n  var method = [][METHOD_NAME];\n  return !method || !fails(function () {\n    // eslint-disable-next-line no-useless-call,no-throw-literal\n    method.call(null, argument || function () { throw 1; }, 1);\n  });\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $every = require('../internals/array-iteration').every;\nvar sloppyArrayMethod = require('../internals/sloppy-array-method');\n\n// `Array.prototype.every` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.every\n$({ target: 'Array', proto: true, forced: sloppyArrayMethod('every') }, {\n  every: function every(callbackfn /* , thisArg */) {\n    return $every(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","'use strict';\nvar toObject = require('../internals/to-object');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar toLength = require('../internals/to-length');\n\n// `Array.prototype.fill` method implementation\n// https://tc39.github.io/ecma262/#sec-array.prototype.fill\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var argumentsLength = arguments.length;\n  var index = toAbsoluteIndex(argumentsLength > 1 ? arguments[1] : undefined, length);\n  var end = argumentsLength > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n","var $ = require('../internals/export');\nvar fill = require('../internals/array-fill');\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\n// `Array.prototype.fill` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.fill\n$({ target: 'Array', proto: true }, {\n  fill: fill\n});\n\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('fill');\n","'use strict';\nvar $ = require('../internals/export');\nvar $filter = require('../internals/array-iteration').filter;\nvar fails = require('../internals/fails');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('filter');\n// Edge 14- issue\nvar USES_TO_LENGTH = HAS_SPECIES_SUPPORT && !fails(function () {\n  [].filter.call({ length: -1, 0: 1 }, function (it) { throw it; });\n});\n\n// `Array.prototype.filter` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.filter\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  filter: function filter(callbackfn /* , thisArg */) {\n    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar $find = require('../internals/array-iteration').find;\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\nvar FIND = 'find';\nvar SKIPS_HOLES = true;\n\n// Shouldn't skip holes\nif (FIND in []) Array(1)[FIND](function () { SKIPS_HOLES = false; });\n\n// `Array.prototype.find` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.find\n$({ target: 'Array', proto: true, forced: SKIPS_HOLES }, {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables(FIND);\n","'use strict';\nvar $ = require('../internals/export');\nvar $findIndex = require('../internals/array-iteration').findIndex;\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\nvar FIND_INDEX = 'findIndex';\nvar SKIPS_HOLES = true;\n\n// Shouldn't skip holes\nif (FIND_INDEX in []) Array(1)[FIND_INDEX](function () { SKIPS_HOLES = false; });\n\n// `Array.prototype.findIndex` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.findindex\n$({ target: 'Array', proto: true, forced: SKIPS_HOLES }, {\n  findIndex: function findIndex(callbackfn /* , that = undefined */) {\n    return $findIndex(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables(FIND_INDEX);\n","'use strict';\nvar isArray = require('../internals/is-array');\nvar toLength = require('../internals/to-length');\nvar bind = require('../internals/bind-context');\n\n// `FlattenIntoArray` abstract operation\n// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray\nvar flattenIntoArray = function (target, original, source, sourceLen, start, depth, mapper, thisArg) {\n  var targetIndex = start;\n  var sourceIndex = 0;\n  var mapFn = mapper ? bind(mapper, thisArg, 3) : false;\n  var element;\n\n  while (sourceIndex < sourceLen) {\n    if (sourceIndex in source) {\n      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];\n\n      if (depth > 0 && isArray(element)) {\n        targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;\n      } else {\n        if (targetIndex >= 0x1FFFFFFFFFFFFF) throw TypeError('Exceed the acceptable array length');\n        target[targetIndex] = element;\n      }\n\n      targetIndex++;\n    }\n    sourceIndex++;\n  }\n  return targetIndex;\n};\n\nmodule.exports = flattenIntoArray;\n","'use strict';\nvar $ = require('../internals/export');\nvar flattenIntoArray = require('../internals/flatten-into-array');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar toInteger = require('../internals/to-integer');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\n// `Array.prototype.flat` method\n// https://github.com/tc39/proposal-flatMap\n$({ target: 'Array', proto: true }, {\n  flat: function flat(/* depthArg = 1 */) {\n    var depthArg = arguments.length ? arguments[0] : undefined;\n    var O = toObject(this);\n    var sourceLen = toLength(O.length);\n    var A = arraySpeciesCreate(O, 0);\n    A.length = flattenIntoArray(A, O, O, sourceLen, 0, depthArg === undefined ? 1 : toInteger(depthArg));\n    return A;\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar flattenIntoArray = require('../internals/flatten-into-array');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar aFunction = require('../internals/a-function');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\n// `Array.prototype.flatMap` method\n// https://github.com/tc39/proposal-flatMap\n$({ target: 'Array', proto: true }, {\n  flatMap: function flatMap(callbackfn /* , thisArg */) {\n    var O = toObject(this);\n    var sourceLen = toLength(O.length);\n    var A;\n    aFunction(callbackfn);\n    A = arraySpeciesCreate(O, 0);\n    A.length = flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    return A;\n  }\n});\n","'use strict';\nvar $forEach = require('../internals/array-iteration').forEach;\nvar sloppyArrayMethod = require('../internals/sloppy-array-method');\n\n// `Array.prototype.forEach` method implementation\n// https://tc39.github.io/ecma262/#sec-array.prototype.foreach\nmodule.exports = sloppyArrayMethod('forEach') ? function forEach(callbackfn /* , thisArg */) {\n  return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n} : [].forEach;\n","'use strict';\nvar $ = require('../internals/export');\nvar forEach = require('../internals/array-for-each');\n\n// `Array.prototype.forEach` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.foreach\n$({ target: 'Array', proto: true, forced: [].forEach != forEach }, {\n  forEach: forEach\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar $includes = require('../internals/array-includes').includes;\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\n// `Array.prototype.includes` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.includes\n$({ target: 'Array', proto: true }, {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('includes');\n","'use strict';\nvar $ = require('../internals/export');\nvar $indexOf = require('../internals/array-includes').indexOf;\nvar sloppyArrayMethod = require('../internals/sloppy-array-method');\n\nvar nativeIndexOf = [].indexOf;\n\nvar NEGATIVE_ZERO = !!nativeIndexOf && 1 / [1].indexOf(1, -0) < 0;\nvar SLOPPY_METHOD = sloppyArrayMethod('indexOf');\n\n// `Array.prototype.indexOf` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.indexof\n$({ target: 'Array', proto: true, forced: NEGATIVE_ZERO || SLOPPY_METHOD }, {\n  indexOf: function indexOf(searchElement /* , fromIndex = 0 */) {\n    return NEGATIVE_ZERO\n      // convert -0 to +0\n      ? nativeIndexOf.apply(this, arguments) || 0\n      : $indexOf(this, searchElement, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar IndexedObject = require('../internals/indexed-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar sloppyArrayMethod = require('../internals/sloppy-array-method');\n\nvar nativeJoin = [].join;\n\nvar ES3_STRINGS = IndexedObject != Object;\nvar SLOPPY_METHOD = sloppyArrayMethod('join', ',');\n\n// `Array.prototype.join` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.join\n$({ target: 'Array', proto: true, forced: ES3_STRINGS || SLOPPY_METHOD }, {\n  join: function join(separator) {\n    return nativeJoin.call(toIndexedObject(this), separator === undefined ? ',' : separator);\n  }\n});\n","'use strict';\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toInteger = require('../internals/to-integer');\nvar toLength = require('../internals/to-length');\nvar sloppyArrayMethod = require('../internals/sloppy-array-method');\n\nvar min = Math.min;\nvar nativeLastIndexOf = [].lastIndexOf;\nvar NEGATIVE_ZERO = !!nativeLastIndexOf && 1 / [1].lastIndexOf(1, -0) < 0;\nvar SLOPPY_METHOD = sloppyArrayMethod('lastIndexOf');\n\n// `Array.prototype.lastIndexOf` method implementation\n// https://tc39.github.io/ecma262/#sec-array.prototype.lastindexof\nmodule.exports = (NEGATIVE_ZERO || SLOPPY_METHOD) ? function lastIndexOf(searchElement /* , fromIndex = @[*-1] */) {\n  // convert -0 to +0\n  if (NEGATIVE_ZERO) return nativeLastIndexOf.apply(this, arguments) || 0;\n  var O = toIndexedObject(this);\n  var length = toLength(O.length);\n  var index = length - 1;\n  if (arguments.length > 1) index = min(index, toInteger(arguments[1]));\n  if (index < 0) index = length + index;\n  for (;index >= 0; index--) if (index in O && O[index] === searchElement) return index || 0;\n  return -1;\n} : nativeLastIndexOf;\n","var $ = require('../internals/export');\nvar lastIndexOf = require('../internals/array-last-index-of');\n\n// `Array.prototype.lastIndexOf` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.lastindexof\n$({ target: 'Array', proto: true, forced: lastIndexOf !== [].lastIndexOf }, {\n  lastIndexOf: lastIndexOf\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar $map = require('../internals/array-iteration').map;\nvar fails = require('../internals/fails');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');\n// FF49- issue\nvar USES_TO_LENGTH = HAS_SPECIES_SUPPORT && !fails(function () {\n  [].map.call({ length: -1, 0: 1 }, function (it) { throw it; });\n});\n\n// `Array.prototype.map` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.map\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","var aFunction = require('../internals/a-function');\nvar toObject = require('../internals/to-object');\nvar IndexedObject = require('../internals/indexed-object');\nvar toLength = require('../internals/to-length');\n\n// `Array.prototype.{ reduce, reduceRight }` methods implementation\nvar createMethod = function (IS_RIGHT) {\n  return function (that, callbackfn, argumentsLength, memo) {\n    aFunction(callbackfn);\n    var O = toObject(that);\n    var self = IndexedObject(O);\n    var length = toLength(O.length);\n    var index = IS_RIGHT ? length - 1 : 0;\n    var i = IS_RIGHT ? -1 : 1;\n    if (argumentsLength < 2) while (true) {\n      if (index in self) {\n        memo = self[index];\n        index += i;\n        break;\n      }\n      index += i;\n      if (IS_RIGHT ? index < 0 : length <= index) {\n        throw TypeError('Reduce of empty array with no initial value');\n      }\n    }\n    for (;IS_RIGHT ? index >= 0 : length > index; index += i) if (index in self) {\n      memo = callbackfn(memo, self[index], index, O);\n    }\n    return memo;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.reduce` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.reduce\n  left: createMethod(false),\n  // `Array.prototype.reduceRight` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.reduceright\n  right: createMethod(true)\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $reduce = require('../internals/array-reduce').left;\nvar sloppyArrayMethod = require('../internals/sloppy-array-method');\n\n// `Array.prototype.reduce` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.reduce\n$({ target: 'Array', proto: true, forced: sloppyArrayMethod('reduce') }, {\n  reduce: function reduce(callbackfn /* , initialValue */) {\n    return $reduce(this, callbackfn, arguments.length, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar $reduceRight = require('../internals/array-reduce').right;\nvar sloppyArrayMethod = require('../internals/sloppy-array-method');\n\n// `Array.prototype.reduceRight` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.reduceright\n$({ target: 'Array', proto: true, forced: sloppyArrayMethod('reduceRight') }, {\n  reduceRight: function reduceRight(callbackfn /* , initialValue */) {\n    return $reduceRight(this, callbackfn, arguments.length, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar isArray = require('../internals/is-array');\n\nvar nativeReverse = [].reverse;\nvar test = [1, 2];\n\n// `Array.prototype.reverse` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.reverse\n// fix for Safari 12.0 bug\n// https://bugs.webkit.org/show_bug.cgi?id=188794\n$({ target: 'Array', proto: true, forced: String(test) === String(test.reverse()) }, {\n  reverse: function reverse() {\n    // eslint-disable-next-line no-self-assign\n    if (isArray(this)) this.length = this.length;\n    return nativeReverse.call(this);\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar isObject = require('../internals/is-object');\nvar isArray = require('../internals/is-array');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar toLength = require('../internals/to-length');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar createProperty = require('../internals/create-property');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\nvar nativeSlice = [].slice;\nvar max = Math.max;\n\n// `Array.prototype.slice` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.slice\n// fallback for not array-like ES3 strings and DOM objects\n$({ target: 'Array', proto: true, forced: !arrayMethodHasSpeciesSupport('slice') }, {\n  slice: function slice(start, end) {\n    var O = toIndexedObject(this);\n    var length = toLength(O.length);\n    var k = toAbsoluteIndex(start, length);\n    var fin = toAbsoluteIndex(end === undefined ? length : end, length);\n    // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible\n    var Constructor, result, n;\n    if (isArray(O)) {\n      Constructor = O.constructor;\n      // cross-realm fallback\n      if (typeof Constructor == 'function' && (Constructor === Array || isArray(Constructor.prototype))) {\n        Constructor = undefined;\n      } else if (isObject(Constructor)) {\n        Constructor = Constructor[SPECIES];\n        if (Constructor === null) Constructor = undefined;\n      }\n      if (Constructor === Array || Constructor === undefined) {\n        return nativeSlice.call(O, k, fin);\n      }\n    }\n    result = new (Constructor === undefined ? Array : Constructor)(max(fin - k, 0));\n    for (n = 0; k < fin; k++, n++) if (k in O) createProperty(result, n, O[k]);\n    result.length = n;\n    return result;\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar $some = require('../internals/array-iteration').some;\nvar sloppyArrayMethod = require('../internals/sloppy-array-method');\n\n// `Array.prototype.some` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.some\n$({ target: 'Array', proto: true, forced: sloppyArrayMethod('some') }, {\n  some: function some(callbackfn /* , thisArg */) {\n    return $some(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar aFunction = require('../internals/a-function');\nvar toObject = require('../internals/to-object');\nvar fails = require('../internals/fails');\nvar sloppyArrayMethod = require('../internals/sloppy-array-method');\n\nvar test = [];\nvar nativeSort = test.sort;\n\n// IE8-\nvar FAILS_ON_UNDEFINED = fails(function () {\n  test.sort(undefined);\n});\n// V8 bug\nvar FAILS_ON_NULL = fails(function () {\n  test.sort(null);\n});\n// Old WebKit\nvar SLOPPY_METHOD = sloppyArrayMethod('sort');\n\nvar FORCED = FAILS_ON_UNDEFINED || !FAILS_ON_NULL || SLOPPY_METHOD;\n\n// `Array.prototype.sort` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.sort\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  sort: function sort(comparefn) {\n    return comparefn === undefined\n      ? nativeSort.call(toObject(this))\n      : nativeSort.call(toObject(this), aFunction(comparefn));\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar toInteger = require('../internals/to-integer');\nvar toLength = require('../internals/to-length');\nvar toObject = require('../internals/to-object');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar createProperty = require('../internals/create-property');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar max = Math.max;\nvar min = Math.min;\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_LENGTH_EXCEEDED = 'Maximum allowed length exceeded';\n\n// `Array.prototype.splice` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.splice\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !arrayMethodHasSpeciesSupport('splice') }, {\n  splice: function splice(start, deleteCount /* , ...items */) {\n    var O = toObject(this);\n    var len = toLength(O.length);\n    var actualStart = toAbsoluteIndex(start, len);\n    var argumentsLength = arguments.length;\n    var insertCount, actualDeleteCount, A, k, from, to;\n    if (argumentsLength === 0) {\n      insertCount = actualDeleteCount = 0;\n    } else if (argumentsLength === 1) {\n      insertCount = 0;\n      actualDeleteCount = len - actualStart;\n    } else {\n      insertCount = argumentsLength - 2;\n      actualDeleteCount = min(max(toInteger(deleteCount), 0), len - actualStart);\n    }\n    if (len + insertCount - actualDeleteCount > MAX_SAFE_INTEGER) {\n      throw TypeError(MAXIMUM_ALLOWED_LENGTH_EXCEEDED);\n    }\n    A = arraySpeciesCreate(O, actualDeleteCount);\n    for (k = 0; k < actualDeleteCount; k++) {\n      from = actualStart + k;\n      if (from in O) createProperty(A, k, O[from]);\n    }\n    A.length = actualDeleteCount;\n    if (insertCount < actualDeleteCount) {\n      for (k = actualStart; k < len - actualDeleteCount; k++) {\n        from = k + actualDeleteCount;\n        to = k + insertCount;\n        if (from in O) O[to] = O[from];\n        else delete O[to];\n      }\n      for (k = len; k > len - actualDeleteCount + insertCount; k--) delete O[k - 1];\n    } else if (insertCount > actualDeleteCount) {\n      for (k = len - actualDeleteCount; k > actualStart; k--) {\n        from = k + actualDeleteCount - 1;\n        to = k + insertCount - 1;\n        if (from in O) O[to] = O[from];\n        else delete O[to];\n      }\n    }\n    for (k = 0; k < insertCount; k++) {\n      O[k + actualStart] = arguments[k + 2];\n    }\n    O.length = len - actualDeleteCount + insertCount;\n    return A;\n  }\n});\n","'use strict';\nvar getBuiltIn = require('../internals/get-built-in');\nvar definePropertyModule = require('../internals/object-define-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar DESCRIPTORS = require('../internals/descriptors');\n\nvar SPECIES = wellKnownSymbol('species');\n\nmodule.exports = function (CONSTRUCTOR_NAME) {\n  var Constructor = getBuiltIn(CONSTRUCTOR_NAME);\n  var defineProperty = definePropertyModule.f;\n\n  if (DESCRIPTORS && Constructor && !Constructor[SPECIES]) {\n    defineProperty(Constructor, SPECIES, {\n      configurable: true,\n      get: function () { return this; }\n    });\n  }\n};\n","var setSpecies = require('../internals/set-species');\n\n// `Array[@@species]` getter\n// https://tc39.github.io/ecma262/#sec-get-array-@@species\nsetSpecies('Array');\n","// this method was added to unscopables after implementation\n// in popular engines, so it's moved to a separate module\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\naddToUnscopables('flat');\n","// this method was added to unscopables after implementation\n// in popular engines, so it's moved to a separate module\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\naddToUnscopables('flatMap');\n","'use strict';\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar has = require('../internals/has');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar BUGGY_SAFARI_ITERATORS = false;\n\nvar returnThis = function () { return this; };\n\n// `%IteratorPrototype%` object\n// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object\nvar IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;\n\nif ([].keys) {\n  arrayIterator = [].keys();\n  // Safari 8 has buggy iterators w/o `next`\n  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;\n  else {\n    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));\n    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;\n  }\n}\n\nif (IteratorPrototype == undefined) IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nif (!IS_PURE && !has(IteratorPrototype, ITERATOR)) {\n  createNonEnumerableProperty(IteratorPrototype, ITERATOR, returnThis);\n}\n\nmodule.exports = {\n  IteratorPrototype: IteratorPrototype,\n  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS\n};\n","'use strict';\nvar IteratorPrototype = require('../internals/iterators-core').IteratorPrototype;\nvar create = require('../internals/object-create');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar Iterators = require('../internals/iterators');\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (IteratorConstructor, NAME, next) {\n  var TO_STRING_TAG = NAME + ' Iterator';\n  IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(1, next) });\n  setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);\n  Iterators[TO_STRING_TAG] = returnThis;\n  return IteratorConstructor;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar createIteratorConstructor = require('../internals/create-iterator-constructor');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\nvar Iterators = require('../internals/iterators');\nvar IteratorsCore = require('../internals/iterators-core');\n\nvar IteratorPrototype = IteratorsCore.IteratorPrototype;\nvar BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;\nvar ITERATOR = wellKnownSymbol('iterator');\nvar KEYS = 'keys';\nvar VALUES = 'values';\nvar ENTRIES = 'entries';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {\n  createIteratorConstructor(IteratorConstructor, NAME, next);\n\n  var getIterationMethod = function (KIND) {\n    if (KIND === DEFAULT && defaultIterator) return defaultIterator;\n    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];\n    switch (KIND) {\n      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };\n      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };\n      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };\n    } return function () { return new IteratorConstructor(this); };\n  };\n\n  var TO_STRING_TAG = NAME + ' Iterator';\n  var INCORRECT_VALUES_NAME = false;\n  var IterablePrototype = Iterable.prototype;\n  var nativeIterator = IterablePrototype[ITERATOR]\n    || IterablePrototype['@@iterator']\n    || DEFAULT && IterablePrototype[DEFAULT];\n  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);\n  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;\n  var CurrentIteratorPrototype, methods, KEY;\n\n  // fix native\n  if (anyNativeIterator) {\n    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));\n    if (IteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {\n      if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {\n        if (setPrototypeOf) {\n          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);\n        } else if (typeof CurrentIteratorPrototype[ITERATOR] != 'function') {\n          createNonEnumerableProperty(CurrentIteratorPrototype, ITERATOR, returnThis);\n        }\n      }\n      // Set @@toStringTag to native iterators\n      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);\n      if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;\n    }\n  }\n\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {\n    INCORRECT_VALUES_NAME = true;\n    defaultIterator = function values() { return nativeIterator.call(this); };\n  }\n\n  // define iterator\n  if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {\n    createNonEnumerableProperty(IterablePrototype, ITERATOR, defaultIterator);\n  }\n  Iterators[NAME] = defaultIterator;\n\n  // export additional methods\n  if (DEFAULT) {\n    methods = {\n      values: getIterationMethod(VALUES),\n      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),\n      entries: getIterationMethod(ENTRIES)\n    };\n    if (FORCED) for (KEY in methods) {\n      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {\n        redefine(IterablePrototype, KEY, methods[KEY]);\n      }\n    } else $({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);\n  }\n\n  return methods;\n};\n","'use strict';\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar addToUnscopables = require('../internals/add-to-unscopables');\nvar Iterators = require('../internals/iterators');\nvar InternalStateModule = require('../internals/internal-state');\nvar defineIterator = require('../internals/define-iterator');\n\nvar ARRAY_ITERATOR = 'Array Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);\n\n// `Array.prototype.entries` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.entries\n// `Array.prototype.keys` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.keys\n// `Array.prototype.values` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.values\n// `Array.prototype[@@iterator]` method\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@iterator\n// `CreateArrayIterator` internal method\n// https://tc39.github.io/ecma262/#sec-createarrayiterator\nmodule.exports = defineIterator(Array, 'Array', function (iterated, kind) {\n  setInternalState(this, {\n    type: ARRAY_ITERATOR,\n    target: toIndexedObject(iterated), // target\n    index: 0,                          // next index\n    kind: kind                         // kind\n  });\n// `%ArrayIteratorPrototype%.next` method\n// https://tc39.github.io/ecma262/#sec-%arrayiteratorprototype%.next\n}, function () {\n  var state = getInternalState(this);\n  var target = state.target;\n  var kind = state.kind;\n  var index = state.index++;\n  if (!target || index >= target.length) {\n    state.target = undefined;\n    return { value: undefined, done: true };\n  }\n  if (kind == 'keys') return { value: index, done: false };\n  if (kind == 'values') return { value: target[index], done: false };\n  return { value: [index, target[index]], done: false };\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values%\n// https://tc39.github.io/ecma262/#sec-createunmappedargumentsobject\n// https://tc39.github.io/ecma262/#sec-createmappedargumentsobject\nIterators.Arguments = Iterators.Array;\n\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","var $ = require('../internals/export');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\n\nvar fromCharCode = String.fromCharCode;\nvar nativeFromCodePoint = String.fromCodePoint;\n\n// length should be 1, old FF problem\nvar INCORRECT_LENGTH = !!nativeFromCodePoint && nativeFromCodePoint.length != 1;\n\n// `String.fromCodePoint` method\n// https://tc39.github.io/ecma262/#sec-string.fromcodepoint\n$({ target: 'String', stat: true, forced: INCORRECT_LENGTH }, {\n  fromCodePoint: function fromCodePoint(x) { // eslint-disable-line no-unused-vars\n    var elements = [];\n    var length = arguments.length;\n    var i = 0;\n    var code;\n    while (length > i) {\n      code = +arguments[i++];\n      if (toAbsoluteIndex(code, 0x10FFFF) !== code) throw RangeError(code + ' is not a valid code point');\n      elements.push(code < 0x10000\n        ? fromCharCode(code)\n        : fromCharCode(((code -= 0x10000) >> 10) + 0xD800, code % 0x400 + 0xDC00)\n      );\n    } return elements.join('');\n  }\n});\n","var $ = require('../internals/export');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toLength = require('../internals/to-length');\n\n// `String.raw` method\n// https://tc39.github.io/ecma262/#sec-string.raw\n$({ target: 'String', stat: true }, {\n  raw: function raw(template) {\n    var rawTemplate = toIndexedObject(template.raw);\n    var literalSegments = toLength(rawTemplate.length);\n    var argumentsLength = arguments.length;\n    var elements = [];\n    var i = 0;\n    while (literalSegments > i) {\n      elements.push(String(rawTemplate[i++]));\n      if (i < argumentsLength) elements.push(String(arguments[i]));\n    } return elements.join('');\n  }\n});\n","var toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `String.prototype.{ codePointAt, at }` methods implementation\nvar createMethod = function (CONVERT_TO_STRING) {\n  return function ($this, pos) {\n    var S = String(requireObjectCoercible($this));\n    var position = toInteger(pos);\n    var size = S.length;\n    var first, second;\n    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;\n    first = S.charCodeAt(position);\n    return first < 0xD800 || first > 0xDBFF || position + 1 === size\n      || (second = S.charCodeAt(position + 1)) < 0xDC00 || second > 0xDFFF\n        ? CONVERT_TO_STRING ? S.charAt(position) : first\n        : CONVERT_TO_STRING ? S.slice(position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.codePointAt` method\n  // https://tc39.github.io/ecma262/#sec-string.prototype.codepointat\n  codeAt: createMethod(false),\n  // `String.prototype.at` method\n  // https://github.com/mathiasbynens/String.prototype.at\n  charAt: createMethod(true)\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar codeAt = require('../internals/string-multibyte').codeAt;\n\n// `String.prototype.codePointAt` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.codepointat\n$({ target: 'String', proto: true }, {\n  codePointAt: function codePointAt(pos) {\n    return codeAt(this, pos);\n  }\n});\n","var isObject = require('../internals/is-object');\nvar classof = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\n// `IsRegExp` abstract operation\n// https://tc39.github.io/ecma262/#sec-isregexp\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) == 'RegExp');\n};\n","var isRegExp = require('../internals/is-regexp');\n\nmodule.exports = function (it) {\n  if (isRegExp(it)) {\n    throw TypeError(\"The method doesn't accept regular expressions\");\n  } return it;\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\nmodule.exports = function (METHOD_NAME) {\n  var regexp = /./;\n  try {\n    '/./'[METHOD_NAME](regexp);\n  } catch (e) {\n    try {\n      regexp[MATCH] = false;\n      return '/./'[METHOD_NAME](regexp);\n    } catch (f) { /* empty */ }\n  } return false;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar toLength = require('../internals/to-length');\nvar notARegExp = require('../internals/not-a-regexp');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar correctIsRegExpLogic = require('../internals/correct-is-regexp-logic');\nvar IS_PURE = require('../internals/is-pure');\n\nvar nativeEndsWith = ''.endsWith;\nvar min = Math.min;\n\nvar CORRECT_IS_REGEXP_LOGIC = correctIsRegExpLogic('endsWith');\n// https://github.com/zloirock/core-js/pull/702\nvar MDN_POLYFILL_BUG = !IS_PURE && !CORRECT_IS_REGEXP_LOGIC && !!function () {\n  var descriptor = getOwnPropertyDescriptor(String.prototype, 'endsWith');\n  return descriptor && !descriptor.writable;\n}();\n\n// `String.prototype.endsWith` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.endswith\n$({ target: 'String', proto: true, forced: !MDN_POLYFILL_BUG && !CORRECT_IS_REGEXP_LOGIC }, {\n  endsWith: function endsWith(searchString /* , endPosition = @length */) {\n    var that = String(requireObjectCoercible(this));\n    notARegExp(searchString);\n    var endPosition = arguments.length > 1 ? arguments[1] : undefined;\n    var len = toLength(that.length);\n    var end = endPosition === undefined ? len : min(toLength(endPosition), len);\n    var search = String(searchString);\n    return nativeEndsWith\n      ? nativeEndsWith.call(that, search, end)\n      : that.slice(end - search.length, end) === search;\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar notARegExp = require('../internals/not-a-regexp');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar correctIsRegExpLogic = require('../internals/correct-is-regexp-logic');\n\n// `String.prototype.includes` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.includes\n$({ target: 'String', proto: true, forced: !correctIsRegExpLogic('includes') }, {\n  includes: function includes(searchString /* , position = 0 */) {\n    return !!~String(requireObjectCoercible(this))\n      .indexOf(notARegExp(searchString), arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.github.io/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","'use strict';\n\nvar fails = require('./fails');\n\n// babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError,\n// so we use an intermediate function.\nfunction RE(s, f) {\n  return RegExp(s, f);\n}\n\nexports.UNSUPPORTED_Y = fails(function () {\n  // babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError\n  var re = RE('a', 'y');\n  re.lastIndex = 2;\n  return re.exec('abcd') != null;\n});\n\nexports.BROKEN_CARET = fails(function () {\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=773687\n  var re = RE('^r', 'gy');\n  re.lastIndex = 2;\n  return re.exec('str') != null;\n});\n","'use strict';\nvar regexpFlags = require('./regexp-flags');\nvar stickyHelpers = require('./regexp-sticky-helpers');\n\nvar nativeExec = RegExp.prototype.exec;\n// This always refers to the native implementation, because the\n// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,\n// which loads this file before patching the method.\nvar nativeReplace = String.prototype.replace;\n\nvar patchedExec = nativeExec;\n\nvar UPDATES_LAST_INDEX_WRONG = (function () {\n  var re1 = /a/;\n  var re2 = /b*/g;\n  nativeExec.call(re1, 'a');\n  nativeExec.call(re2, 'a');\n  return re1.lastIndex !== 0 || re2.lastIndex !== 0;\n})();\n\nvar UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y || stickyHelpers.BROKEN_CARET;\n\n// nonparticipating capturing group, copied from es5-shim's String#split patch.\nvar NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\n\nvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y;\n\nif (PATCH) {\n  patchedExec = function exec(str) {\n    var re = this;\n    var lastIndex, reCopy, match, i;\n    var sticky = UNSUPPORTED_Y && re.sticky;\n    var flags = regexpFlags.call(re);\n    var source = re.source;\n    var charsAdded = 0;\n    var strCopy = str;\n\n    if (sticky) {\n      flags = flags.replace('y', '');\n      if (flags.indexOf('g') === -1) {\n        flags += 'g';\n      }\n\n      strCopy = String(str).slice(re.lastIndex);\n      // Support anchored sticky behavior.\n      if (re.lastIndex > 0 && (!re.multiline || re.multiline && str[re.lastIndex - 1] !== '\\n')) {\n        source = '(?: ' + source + ')';\n        strCopy = ' ' + strCopy;\n        charsAdded++;\n      }\n      // ^(? + rx + ) is needed, in combination with some str slicing, to\n      // simulate the 'y' flag.\n      reCopy = new RegExp('^(?:' + source + ')', flags);\n    }\n\n    if (NPCG_INCLUDED) {\n      reCopy = new RegExp('^' + source + '$(?!\\\\s)', flags);\n    }\n    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;\n\n    match = nativeExec.call(sticky ? reCopy : re, strCopy);\n\n    if (sticky) {\n      if (match) {\n        match.input = match.input.slice(charsAdded);\n        match[0] = match[0].slice(charsAdded);\n        match.index = re.lastIndex;\n        re.lastIndex += match[0].length;\n      } else re.lastIndex = 0;\n    } else if (UPDATES_LAST_INDEX_WRONG && match) {\n      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;\n    }\n    if (NPCG_INCLUDED && match && match.length > 1) {\n      // Fix browsers whose `exec` methods don't consistently return `undefined`\n      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\n      nativeReplace.call(match[0], reCopy, function () {\n        for (i = 1; i < arguments.length - 2; i++) {\n          if (arguments[i] === undefined) match[i] = undefined;\n        }\n      });\n    }\n\n    return match;\n  };\n}\n\nmodule.exports = patchedExec;\n","'use strict';\nvar redefine = require('../internals/redefine');\nvar fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar regexpExec = require('../internals/regexp-exec');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nvar SPECIES = wellKnownSymbol('species');\n\nvar REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {\n  // #replace needs built-in support for named groups.\n  // #match works fine because it just return the exec results, even if it has\n  // a \"grops\" property.\n  var re = /./;\n  re.exec = function () {\n    var result = [];\n    result.groups = { a: '7' };\n    return result;\n  };\n  return ''.replace(re, '$<a>') !== '7';\n});\n\n// IE <= 11 replaces $0 with the whole match, as if it was $&\n// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0\nvar REPLACE_KEEPS_$0 = (function () {\n  return 'a'.replace(/./, '$0') === '$0';\n})();\n\n// Chrome 51 has a buggy \"split\" implementation when RegExp#exec !== nativeExec\n// Weex JS has frozen built-in prototypes, so use try / catch wrapper\nvar SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function () {\n  var re = /(?:)/;\n  var originalExec = re.exec;\n  re.exec = function () { return originalExec.apply(this, arguments); };\n  var result = 'ab'.split(re);\n  return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';\n});\n\nmodule.exports = function (KEY, length, exec, sham) {\n  var SYMBOL = wellKnownSymbol(KEY);\n\n  var DELEGATES_TO_SYMBOL = !fails(function () {\n    // String methods call symbol-named RegEp methods\n    var O = {};\n    O[SYMBOL] = function () { return 7; };\n    return ''[KEY](O) != 7;\n  });\n\n  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {\n    // Symbol-named RegExp methods call .exec\n    var execCalled = false;\n    var re = /a/;\n\n    if (KEY === 'split') {\n      // We can't use real regex here since it causes deoptimization\n      // and serious performance degradation in V8\n      // https://github.com/zloirock/core-js/issues/306\n      re = {};\n      // RegExp[@@split] doesn't call the regex's exec method, but first creates\n      // a new one. We need to return the patched regex when creating the new one.\n      re.constructor = {};\n      re.constructor[SPECIES] = function () { return re; };\n      re.flags = '';\n      re[SYMBOL] = /./[SYMBOL];\n    }\n\n    re.exec = function () { execCalled = true; return null; };\n\n    re[SYMBOL]('');\n    return !execCalled;\n  });\n\n  if (\n    !DELEGATES_TO_SYMBOL ||\n    !DELEGATES_TO_EXEC ||\n    (KEY === 'replace' && !(REPLACE_SUPPORTS_NAMED_GROUPS && REPLACE_KEEPS_$0)) ||\n    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)\n  ) {\n    var nativeRegExpMethod = /./[SYMBOL];\n    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {\n      if (regexp.exec === regexpExec) {\n        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {\n          // The native String method already delegates to @@method (this\n          // polyfilled function), leasing to infinite recursion.\n          // We avoid it by directly calling the native @@method method.\n          return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };\n        }\n        return { done: true, value: nativeMethod.call(str, regexp, arg2) };\n      }\n      return { done: false };\n    }, { REPLACE_KEEPS_$0: REPLACE_KEEPS_$0 });\n    var stringMethod = methods[0];\n    var regexMethod = methods[1];\n\n    redefine(String.prototype, KEY, stringMethod);\n    redefine(RegExp.prototype, SYMBOL, length == 2\n      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)\n      // 21.2.5.11 RegExp.prototype[@@split](string, limit)\n      ? function (string, arg) { return regexMethod.call(string, this, arg); }\n      // 21.2.5.6 RegExp.prototype[@@match](string)\n      // 21.2.5.9 RegExp.prototype[@@search](string)\n      : function (string) { return regexMethod.call(string, this); }\n    );\n  }\n\n  if (sham) createNonEnumerableProperty(RegExp.prototype[SYMBOL], 'sham', true);\n};\n","'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\n\n// `AdvanceStringIndex` abstract operation\n// https://tc39.github.io/ecma262/#sec-advancestringindex\nmodule.exports = function (S, index, unicode) {\n  return index + (unicode ? charAt(S, index).length : 1);\n};\n","var classof = require('./classof-raw');\nvar regexpExec = require('./regexp-exec');\n\n// `RegExpExec` abstract operation\n// https://tc39.github.io/ecma262/#sec-regexpexec\nmodule.exports = function (R, S) {\n  var exec = R.exec;\n  if (typeof exec === 'function') {\n    var result = exec.call(R, S);\n    if (typeof result !== 'object') {\n      throw TypeError('RegExp exec method returned something other than an Object or null');\n    }\n    return result;\n  }\n\n  if (classof(R) !== 'RegExp') {\n    throw TypeError('RegExp#exec called on incompatible receiver');\n  }\n\n  return regexpExec.call(R, S);\n};\n\n","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar toLength = require('../internals/to-length');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\n// @@match logic\nfixRegExpWellKnownSymbolLogic('match', 1, function (MATCH, nativeMatch, maybeCallNative) {\n  return [\n    // `String.prototype.match` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.match\n    function match(regexp) {\n      var O = requireObjectCoercible(this);\n      var matcher = regexp == undefined ? undefined : regexp[MATCH];\n      return matcher !== undefined ? matcher.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));\n    },\n    // `RegExp.prototype[@@match]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@match\n    function (regexp) {\n      var res = maybeCallNative(nativeMatch, regexp, this);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n\n      if (!rx.global) return regExpExec(rx, S);\n\n      var fullUnicode = rx.unicode;\n      rx.lastIndex = 0;\n      var A = [];\n      var n = 0;\n      var result;\n      while ((result = regExpExec(rx, S)) !== null) {\n        var matchStr = String(result[0]);\n        A[n] = matchStr;\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n        n++;\n      }\n      return n === 0 ? null : A;\n    }\n  ];\n});\n","var anObject = require('../internals/an-object');\nvar aFunction = require('../internals/a-function');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\n\n// `SpeciesConstructor` abstract operation\n// https://tc39.github.io/ecma262/#sec-speciesconstructor\nmodule.exports = function (O, defaultConstructor) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? defaultConstructor : aFunction(S);\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar createIteratorConstructor = require('../internals/create-iterator-constructor');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar toLength = require('../internals/to-length');\nvar aFunction = require('../internals/a-function');\nvar anObject = require('../internals/an-object');\nvar classof = require('../internals/classof-raw');\nvar isRegExp = require('../internals/is-regexp');\nvar getRegExpFlags = require('../internals/regexp-flags');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar speciesConstructor = require('../internals/species-constructor');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar InternalStateModule = require('../internals/internal-state');\nvar IS_PURE = require('../internals/is-pure');\n\nvar MATCH_ALL = wellKnownSymbol('matchAll');\nvar REGEXP_STRING = 'RegExp String';\nvar REGEXP_STRING_ITERATOR = REGEXP_STRING + ' Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(REGEXP_STRING_ITERATOR);\nvar RegExpPrototype = RegExp.prototype;\nvar regExpBuiltinExec = RegExpPrototype.exec;\nvar nativeMatchAll = ''.matchAll;\n\nvar WORKS_WITH_NON_GLOBAL_REGEX = !!nativeMatchAll && !fails(function () {\n  'a'.matchAll(/./);\n});\n\nvar regExpExec = function (R, S) {\n  var exec = R.exec;\n  var result;\n  if (typeof exec == 'function') {\n    result = exec.call(R, S);\n    if (typeof result != 'object') throw TypeError('Incorrect exec result');\n    return result;\n  } return regExpBuiltinExec.call(R, S);\n};\n\n// eslint-disable-next-line max-len\nvar $RegExpStringIterator = createIteratorConstructor(function RegExpStringIterator(regexp, string, global, fullUnicode) {\n  setInternalState(this, {\n    type: REGEXP_STRING_ITERATOR,\n    regexp: regexp,\n    string: string,\n    global: global,\n    unicode: fullUnicode,\n    done: false\n  });\n}, REGEXP_STRING, function next() {\n  var state = getInternalState(this);\n  if (state.done) return { value: undefined, done: true };\n  var R = state.regexp;\n  var S = state.string;\n  var match = regExpExec(R, S);\n  if (match === null) return { value: undefined, done: state.done = true };\n  if (state.global) {\n    if (String(match[0]) == '') R.lastIndex = advanceStringIndex(S, toLength(R.lastIndex), state.unicode);\n    return { value: match, done: false };\n  }\n  state.done = true;\n  return { value: match, done: false };\n});\n\nvar $matchAll = function (string) {\n  var R = anObject(this);\n  var S = String(string);\n  var C, flagsValue, flags, matcher, global, fullUnicode;\n  C = speciesConstructor(R, RegExp);\n  flagsValue = R.flags;\n  if (flagsValue === undefined && R instanceof RegExp && !('flags' in RegExpPrototype)) {\n    flagsValue = getRegExpFlags.call(R);\n  }\n  flags = flagsValue === undefined ? '' : String(flagsValue);\n  matcher = new C(C === RegExp ? R.source : R, flags);\n  global = !!~flags.indexOf('g');\n  fullUnicode = !!~flags.indexOf('u');\n  matcher.lastIndex = toLength(R.lastIndex);\n  return new $RegExpStringIterator(matcher, S, global, fullUnicode);\n};\n\n// `String.prototype.matchAll` method\n// https://github.com/tc39/proposal-string-matchall\n$({ target: 'String', proto: true, forced: WORKS_WITH_NON_GLOBAL_REGEX }, {\n  matchAll: function matchAll(regexp) {\n    var O = requireObjectCoercible(this);\n    var flags, S, matcher, rx;\n    if (regexp != null) {\n      if (isRegExp(regexp)) {\n        flags = String(requireObjectCoercible('flags' in RegExpPrototype\n          ? regexp.flags\n          : getRegExpFlags.call(regexp)\n        ));\n        if (!~flags.indexOf('g')) throw TypeError('`.matchAll` does not allow non-global regexes');\n      }\n      if (WORKS_WITH_NON_GLOBAL_REGEX) return nativeMatchAll.apply(O, arguments);\n      matcher = regexp[MATCH_ALL];\n      if (matcher === undefined && IS_PURE && classof(regexp) == 'RegExp') matcher = $matchAll;\n      if (matcher != null) return aFunction(matcher).call(regexp, O);\n    } else if (WORKS_WITH_NON_GLOBAL_REGEX) return nativeMatchAll.apply(O, arguments);\n    S = String(O);\n    rx = new RegExp(regexp, 'g');\n    return IS_PURE ? $matchAll.call(rx, S) : rx[MATCH_ALL](S);\n  }\n});\n\nIS_PURE || MATCH_ALL in RegExpPrototype || createNonEnumerableProperty(RegExpPrototype, MATCH_ALL, $matchAll);\n","'use strict';\nvar toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `String.prototype.repeat` method implementation\n// https://tc39.github.io/ecma262/#sec-string.prototype.repeat\nmodule.exports = ''.repeat || function repeat(count) {\n  var str = String(requireObjectCoercible(this));\n  var result = '';\n  var n = toInteger(count);\n  if (n < 0 || n == Infinity) throw RangeError('Wrong number of repetitions');\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) result += str;\n  return result;\n};\n","// https://github.com/tc39/proposal-string-pad-start-end\nvar toLength = require('../internals/to-length');\nvar repeat = require('../internals/string-repeat');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar ceil = Math.ceil;\n\n// `String.prototype.{ padStart, padEnd }` methods implementation\nvar createMethod = function (IS_END) {\n  return function ($this, maxLength, fillString) {\n    var S = String(requireObjectCoercible($this));\n    var stringLength = S.length;\n    var fillStr = fillString === undefined ? ' ' : String(fillString);\n    var intMaxLength = toLength(maxLength);\n    var fillLen, stringFiller;\n    if (intMaxLength <= stringLength || fillStr == '') return S;\n    fillLen = intMaxLength - stringLength;\n    stringFiller = repeat.call(fillStr, ceil(fillLen / fillStr.length));\n    if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);\n    return IS_END ? S + stringFiller : stringFiller + S;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.padStart` method\n  // https://tc39.github.io/ecma262/#sec-string.prototype.padstart\n  start: createMethod(false),\n  // `String.prototype.padEnd` method\n  // https://tc39.github.io/ecma262/#sec-string.prototype.padend\n  end: createMethod(true)\n};\n","// https://github.com/zloirock/core-js/issues/280\nvar userAgent = require('../internals/user-agent');\n\n// eslint-disable-next-line unicorn/no-unsafe-regex\nmodule.exports = /Version\\/10\\.\\d+(\\.\\d+)?( Mobile\\/\\w+)? Safari\\//.test(userAgent);\n","'use strict';\nvar $ = require('../internals/export');\nvar $padEnd = require('../internals/string-pad').end;\nvar WEBKIT_BUG = require('../internals/webkit-string-pad-bug');\n\n// `String.prototype.padEnd` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.padend\n$({ target: 'String', proto: true, forced: WEBKIT_BUG }, {\n  padEnd: function padEnd(maxLength /* , fillString = ' ' */) {\n    return $padEnd(this, maxLength, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar $padStart = require('../internals/string-pad').start;\nvar WEBKIT_BUG = require('../internals/webkit-string-pad-bug');\n\n// `String.prototype.padStart` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.padstart\n$({ target: 'String', proto: true, forced: WEBKIT_BUG }, {\n  padStart: function padStart(maxLength /* , fillString = ' ' */) {\n    return $padStart(this, maxLength, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","var $ = require('../internals/export');\nvar repeat = require('../internals/string-repeat');\n\n// `String.prototype.repeat` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.repeat\n$({ target: 'String', proto: true }, {\n  repeat: repeat\n});\n","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\nvar max = Math.max;\nvar min = Math.min;\nvar floor = Math.floor;\nvar SUBSTITUTION_SYMBOLS = /\\$([$&'`]|\\d\\d?|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&'`]|\\d\\d?)/g;\n\nvar maybeToString = function (it) {\n  return it === undefined ? it : String(it);\n};\n\n// @@replace logic\nfixRegExpWellKnownSymbolLogic('replace', 2, function (REPLACE, nativeReplace, maybeCallNative, reason) {\n  return [\n    // `String.prototype.replace` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.replace\n    function replace(searchValue, replaceValue) {\n      var O = requireObjectCoercible(this);\n      var replacer = searchValue == undefined ? undefined : searchValue[REPLACE];\n      return replacer !== undefined\n        ? replacer.call(searchValue, O, replaceValue)\n        : nativeReplace.call(String(O), searchValue, replaceValue);\n    },\n    // `RegExp.prototype[@@replace]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace\n    function (regexp, replaceValue) {\n      if (reason.REPLACE_KEEPS_$0 || (typeof replaceValue === 'string' && replaceValue.indexOf('$0') === -1)) {\n        var res = maybeCallNative(nativeReplace, regexp, this, replaceValue);\n        if (res.done) return res.value;\n      }\n\n      var rx = anObject(regexp);\n      var S = String(this);\n\n      var functionalReplace = typeof replaceValue === 'function';\n      if (!functionalReplace) replaceValue = String(replaceValue);\n\n      var global = rx.global;\n      if (global) {\n        var fullUnicode = rx.unicode;\n        rx.lastIndex = 0;\n      }\n      var results = [];\n      while (true) {\n        var result = regExpExec(rx, S);\n        if (result === null) break;\n\n        results.push(result);\n        if (!global) break;\n\n        var matchStr = String(result[0]);\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n      }\n\n      var accumulatedResult = '';\n      var nextSourcePosition = 0;\n      for (var i = 0; i < results.length; i++) {\n        result = results[i];\n\n        var matched = String(result[0]);\n        var position = max(min(toInteger(result.index), S.length), 0);\n        var captures = [];\n        // NOTE: This is equivalent to\n        //   captures = result.slice(1).map(maybeToString)\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n        // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));\n        var namedCaptures = result.groups;\n        if (functionalReplace) {\n          var replacerArgs = [matched].concat(captures, position, S);\n          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\n          var replacement = String(replaceValue.apply(undefined, replacerArgs));\n        } else {\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n        }\n        if (position >= nextSourcePosition) {\n          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\n          nextSourcePosition = position + matched.length;\n        }\n      }\n      return accumulatedResult + S.slice(nextSourcePosition);\n    }\n  ];\n\n  // https://tc39.github.io/ecma262/#sec-getsubstitution\n  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {\n    var tailPos = position + matched.length;\n    var m = captures.length;\n    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n    if (namedCaptures !== undefined) {\n      namedCaptures = toObject(namedCaptures);\n      symbols = SUBSTITUTION_SYMBOLS;\n    }\n    return nativeReplace.call(replacement, symbols, function (match, ch) {\n      var capture;\n      switch (ch.charAt(0)) {\n        case '$': return '$';\n        case '&': return matched;\n        case '`': return str.slice(0, position);\n        case \"'\": return str.slice(tailPos);\n        case '<':\n          capture = namedCaptures[ch.slice(1, -1)];\n          break;\n        default: // \\d\\d?\n          var n = +ch;\n          if (n === 0) return match;\n          if (n > m) {\n            var f = floor(n / 10);\n            if (f === 0) return match;\n            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\n            return match;\n          }\n          capture = captures[n - 1];\n      }\n      return capture === undefined ? '' : capture;\n    });\n  }\n});\n","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar sameValue = require('../internals/same-value');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\n// @@search logic\nfixRegExpWellKnownSymbolLogic('search', 1, function (SEARCH, nativeSearch, maybeCallNative) {\n  return [\n    // `String.prototype.search` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.search\n    function search(regexp) {\n      var O = requireObjectCoercible(this);\n      var searcher = regexp == undefined ? undefined : regexp[SEARCH];\n      return searcher !== undefined ? searcher.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));\n    },\n    // `RegExp.prototype[@@search]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@search\n    function (regexp) {\n      var res = maybeCallNative(nativeSearch, regexp, this);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n\n      var previousLastIndex = rx.lastIndex;\n      if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;\n      var result = regExpExec(rx, S);\n      if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;\n      return result === null ? -1 : result.index;\n    }\n  ];\n});\n","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar isRegExp = require('../internals/is-regexp');\nvar anObject = require('../internals/an-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar speciesConstructor = require('../internals/species-constructor');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar toLength = require('../internals/to-length');\nvar callRegExpExec = require('../internals/regexp-exec-abstract');\nvar regexpExec = require('../internals/regexp-exec');\nvar fails = require('../internals/fails');\n\nvar arrayPush = [].push;\nvar min = Math.min;\nvar MAX_UINT32 = 0xFFFFFFFF;\n\n// babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError\nvar SUPPORTS_Y = !fails(function () { return !RegExp(MAX_UINT32, 'y'); });\n\n// @@split logic\nfixRegExpWellKnownSymbolLogic('split', 2, function (SPLIT, nativeSplit, maybeCallNative) {\n  var internalSplit;\n  if (\n    'abbc'.split(/(b)*/)[1] == 'c' ||\n    'test'.split(/(?:)/, -1).length != 4 ||\n    'ab'.split(/(?:ab)*/).length != 2 ||\n    '.'.split(/(.?)(.?)/).length != 4 ||\n    '.'.split(/()()/).length > 1 ||\n    ''.split(/.?/).length\n  ) {\n    // based on es5-shim implementation, need to rework it\n    internalSplit = function (separator, limit) {\n      var string = String(requireObjectCoercible(this));\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (separator === undefined) return [string];\n      // If `separator` is not a regex, use native split\n      if (!isRegExp(separator)) {\n        return nativeSplit.call(string, separator, lim);\n      }\n      var output = [];\n      var flags = (separator.ignoreCase ? 'i' : '') +\n                  (separator.multiline ? 'm' : '') +\n                  (separator.unicode ? 'u' : '') +\n                  (separator.sticky ? 'y' : '');\n      var lastLastIndex = 0;\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      var separatorCopy = new RegExp(separator.source, flags + 'g');\n      var match, lastIndex, lastLength;\n      while (match = regexpExec.call(separatorCopy, string)) {\n        lastIndex = separatorCopy.lastIndex;\n        if (lastIndex > lastLastIndex) {\n          output.push(string.slice(lastLastIndex, match.index));\n          if (match.length > 1 && match.index < string.length) arrayPush.apply(output, match.slice(1));\n          lastLength = match[0].length;\n          lastLastIndex = lastIndex;\n          if (output.length >= lim) break;\n        }\n        if (separatorCopy.lastIndex === match.index) separatorCopy.lastIndex++; // Avoid an infinite loop\n      }\n      if (lastLastIndex === string.length) {\n        if (lastLength || !separatorCopy.test('')) output.push('');\n      } else output.push(string.slice(lastLastIndex));\n      return output.length > lim ? output.slice(0, lim) : output;\n    };\n  // Chakra, V8\n  } else if ('0'.split(undefined, 0).length) {\n    internalSplit = function (separator, limit) {\n      return separator === undefined && limit === 0 ? [] : nativeSplit.call(this, separator, limit);\n    };\n  } else internalSplit = nativeSplit;\n\n  return [\n    // `String.prototype.split` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.split\n    function split(separator, limit) {\n      var O = requireObjectCoercible(this);\n      var splitter = separator == undefined ? undefined : separator[SPLIT];\n      return splitter !== undefined\n        ? splitter.call(separator, O, limit)\n        : internalSplit.call(String(O), separator, limit);\n    },\n    // `RegExp.prototype[@@split]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split\n    //\n    // NOTE: This cannot be properly polyfilled in engines that don't support\n    // the 'y' flag.\n    function (regexp, limit) {\n      var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== nativeSplit);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n      var C = speciesConstructor(rx, RegExp);\n\n      var unicodeMatching = rx.unicode;\n      var flags = (rx.ignoreCase ? 'i' : '') +\n                  (rx.multiline ? 'm' : '') +\n                  (rx.unicode ? 'u' : '') +\n                  (SUPPORTS_Y ? 'y' : 'g');\n\n      // ^(? + rx + ) is needed, in combination with some S slicing, to\n      // simulate the 'y' flag.\n      var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];\n      var p = 0;\n      var q = 0;\n      var A = [];\n      while (q < S.length) {\n        splitter.lastIndex = SUPPORTS_Y ? q : 0;\n        var z = callRegExpExec(splitter, SUPPORTS_Y ? S : S.slice(q));\n        var e;\n        if (\n          z === null ||\n          (e = min(toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p\n        ) {\n          q = advanceStringIndex(S, q, unicodeMatching);\n        } else {\n          A.push(S.slice(p, q));\n          if (A.length === lim) return A;\n          for (var i = 1; i <= z.length - 1; i++) {\n            A.push(z[i]);\n            if (A.length === lim) return A;\n          }\n          q = p = e;\n        }\n      }\n      A.push(S.slice(p));\n      return A;\n    }\n  ];\n}, !SUPPORTS_Y);\n","'use strict';\nvar $ = require('../internals/export');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar toLength = require('../internals/to-length');\nvar notARegExp = require('../internals/not-a-regexp');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar correctIsRegExpLogic = require('../internals/correct-is-regexp-logic');\nvar IS_PURE = require('../internals/is-pure');\n\nvar nativeStartsWith = ''.startsWith;\nvar min = Math.min;\n\nvar CORRECT_IS_REGEXP_LOGIC = correctIsRegExpLogic('startsWith');\n// https://github.com/zloirock/core-js/pull/702\nvar MDN_POLYFILL_BUG = !IS_PURE && !CORRECT_IS_REGEXP_LOGIC && !!function () {\n  var descriptor = getOwnPropertyDescriptor(String.prototype, 'startsWith');\n  return descriptor && !descriptor.writable;\n}();\n\n// `String.prototype.startsWith` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.startswith\n$({ target: 'String', proto: true, forced: !MDN_POLYFILL_BUG && !CORRECT_IS_REGEXP_LOGIC }, {\n  startsWith: function startsWith(searchString /* , position = 0 */) {\n    var that = String(requireObjectCoercible(this));\n    notARegExp(searchString);\n    var index = toLength(min(arguments.length > 1 ? arguments[1] : undefined, that.length));\n    var search = String(searchString);\n    return nativeStartsWith\n      ? nativeStartsWith.call(that, search, index)\n      : that.slice(index, index + search.length) === search;\n  }\n});\n","// a string of all valid unicode whitespaces\n// eslint-disable-next-line max-len\nmodule.exports = '\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","var requireObjectCoercible = require('../internals/require-object-coercible');\nvar whitespaces = require('../internals/whitespaces');\n\nvar whitespace = '[' + whitespaces + ']';\nvar ltrim = RegExp('^' + whitespace + whitespace + '*');\nvar rtrim = RegExp(whitespace + whitespace + '*$');\n\n// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\nvar createMethod = function (TYPE) {\n  return function ($this) {\n    var string = String(requireObjectCoercible($this));\n    if (TYPE & 1) string = string.replace(ltrim, '');\n    if (TYPE & 2) string = string.replace(rtrim, '');\n    return string;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.{ trimLeft, trimStart }` methods\n  // https://tc39.github.io/ecma262/#sec-string.prototype.trimstart\n  start: createMethod(1),\n  // `String.prototype.{ trimRight, trimEnd }` methods\n  // https://tc39.github.io/ecma262/#sec-string.prototype.trimend\n  end: createMethod(2),\n  // `String.prototype.trim` method\n  // https://tc39.github.io/ecma262/#sec-string.prototype.trim\n  trim: createMethod(3)\n};\n","var fails = require('../internals/fails');\nvar whitespaces = require('../internals/whitespaces');\n\nvar non = '\\u200B\\u0085\\u180E';\n\n// check that a method works with the correct list\n// of whitespaces and has a correct name\nmodule.exports = function (METHOD_NAME) {\n  return fails(function () {\n    return !!whitespaces[METHOD_NAME]() || non[METHOD_NAME]() != non || whitespaces[METHOD_NAME].name !== METHOD_NAME;\n  });\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $trim = require('../internals/string-trim').trim;\nvar forcedStringTrimMethod = require('../internals/forced-string-trim-method');\n\n// `String.prototype.trim` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.trim\n$({ target: 'String', proto: true, forced: forcedStringTrimMethod('trim') }, {\n  trim: function trim() {\n    return $trim(this);\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar $trimStart = require('../internals/string-trim').start;\nvar forcedStringTrimMethod = require('../internals/forced-string-trim-method');\n\nvar FORCED = forcedStringTrimMethod('trimStart');\n\nvar trimStart = FORCED ? function trimStart() {\n  return $trimStart(this);\n} : ''.trimStart;\n\n// `String.prototype.{ trimStart, trimLeft }` methods\n// https://github.com/tc39/ecmascript-string-left-right-trim\n$({ target: 'String', proto: true, forced: FORCED }, {\n  trimStart: trimStart,\n  trimLeft: trimStart\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar $trimEnd = require('../internals/string-trim').end;\nvar forcedStringTrimMethod = require('../internals/forced-string-trim-method');\n\nvar FORCED = forcedStringTrimMethod('trimEnd');\n\nvar trimEnd = FORCED ? function trimEnd() {\n  return $trimEnd(this);\n} : ''.trimEnd;\n\n// `String.prototype.{ trimEnd, trimRight }` methods\n// https://github.com/tc39/ecmascript-string-left-right-trim\n$({ target: 'String', proto: true, forced: FORCED }, {\n  trimEnd: trimEnd,\n  trimRight: trimEnd\n});\n","'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\nvar InternalStateModule = require('../internals/internal-state');\nvar defineIterator = require('../internals/define-iterator');\n\nvar STRING_ITERATOR = 'String Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);\n\n// `String.prototype[@@iterator]` method\n// https://tc39.github.io/ecma262/#sec-string.prototype-@@iterator\ndefineIterator(String, 'String', function (iterated) {\n  setInternalState(this, {\n    type: STRING_ITERATOR,\n    string: String(iterated),\n    index: 0\n  });\n// `%StringIteratorPrototype%.next` method\n// https://tc39.github.io/ecma262/#sec-%stringiteratorprototype%.next\n}, function next() {\n  var state = getInternalState(this);\n  var string = state.string;\n  var index = state.index;\n  var point;\n  if (index >= string.length) return { value: undefined, done: true };\n  point = charAt(string, index);\n  state.index += point.length;\n  return { value: point, done: false };\n});\n","var requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar quot = /\"/g;\n\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\n// https://tc39.github.io/ecma262/#sec-createhtml\nmodule.exports = function (string, tag, attribute, value) {\n  var S = String(requireObjectCoercible(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\n","var fails = require('../internals/fails');\n\n// check the existence of a method, lowercase\n// of a tag and escaping quotes in arguments\nmodule.exports = function (METHOD_NAME) {\n  return fails(function () {\n    var test = ''[METHOD_NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  });\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar createHTML = require('../internals/create-html');\nvar forcedStringHTMLMethod = require('../internals/forced-string-html-method');\n\n// `String.prototype.anchor` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.anchor\n$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('anchor') }, {\n  anchor: function anchor(name) {\n    return createHTML(this, 'a', 'name', name);\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar createHTML = require('../internals/create-html');\nvar forcedStringHTMLMethod = require('../internals/forced-string-html-method');\n\n// `String.prototype.big` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.big\n$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('big') }, {\n  big: function big() {\n    return createHTML(this, 'big', '', '');\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar createHTML = require('../internals/create-html');\nvar forcedStringHTMLMethod = require('../internals/forced-string-html-method');\n\n// `String.prototype.blink` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.blink\n$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('blink') }, {\n  blink: function blink() {\n    return createHTML(this, 'blink', '', '');\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar createHTML = require('../internals/create-html');\nvar forcedStringHTMLMethod = require('../internals/forced-string-html-method');\n\n// `String.prototype.bold` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.bold\n$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('bold') }, {\n  bold: function bold() {\n    return createHTML(this, 'b', '', '');\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar createHTML = require('../internals/create-html');\nvar forcedStringHTMLMethod = require('../internals/forced-string-html-method');\n\n// `String.prototype.fixed` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.fixed\n$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('fixed') }, {\n  fixed: function fixed() {\n    return createHTML(this, 'tt', '', '');\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar createHTML = require('../internals/create-html');\nvar forcedStringHTMLMethod = require('../internals/forced-string-html-method');\n\n// `String.prototype.fontcolor` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.fontcolor\n$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('fontcolor') }, {\n  fontcolor: function fontcolor(color) {\n    return createHTML(this, 'font', 'color', color);\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar createHTML = require('../internals/create-html');\nvar forcedStringHTMLMethod = require('../internals/forced-string-html-method');\n\n// `String.prototype.fontsize` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.fontsize\n$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('fontsize') }, {\n  fontsize: function fontsize(size) {\n    return createHTML(this, 'font', 'size', size);\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar createHTML = require('../internals/create-html');\nvar forcedStringHTMLMethod = require('../internals/forced-string-html-method');\n\n// `String.prototype.italics` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.italics\n$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('italics') }, {\n  italics: function italics() {\n    return createHTML(this, 'i', '', '');\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar createHTML = require('../internals/create-html');\nvar forcedStringHTMLMethod = require('../internals/forced-string-html-method');\n\n// `String.prototype.link` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.link\n$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('link') }, {\n  link: function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar createHTML = require('../internals/create-html');\nvar forcedStringHTMLMethod = require('../internals/forced-string-html-method');\n\n// `String.prototype.small` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.small\n$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('small') }, {\n  small: function small() {\n    return createHTML(this, 'small', '', '');\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar createHTML = require('../internals/create-html');\nvar forcedStringHTMLMethod = require('../internals/forced-string-html-method');\n\n// `String.prototype.strike` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.strike\n$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('strike') }, {\n  strike: function strike() {\n    return createHTML(this, 'strike', '', '');\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar createHTML = require('../internals/create-html');\nvar forcedStringHTMLMethod = require('../internals/forced-string-html-method');\n\n// `String.prototype.sub` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.sub\n$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('sub') }, {\n  sub: function sub() {\n    return createHTML(this, 'sub', '', '');\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar createHTML = require('../internals/create-html');\nvar forcedStringHTMLMethod = require('../internals/forced-string-html-method');\n\n// `String.prototype.sup` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.sup\n$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('sup') }, {\n  sup: function sup() {\n    return createHTML(this, 'sup', '', '');\n  }\n});\n","var isObject = require('../internals/is-object');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\n\n// makes subclassing work correct for wrapped built-ins\nmodule.exports = function ($this, dummy, Wrapper) {\n  var NewTarget, NewTargetPrototype;\n  if (\n    // it can work only with native `setPrototypeOf`\n    setPrototypeOf &&\n    // we haven't completely correct pre-ES6 way for getting `new.target`, so use this\n    typeof (NewTarget = dummy.constructor) == 'function' &&\n    NewTarget !== Wrapper &&\n    isObject(NewTargetPrototype = NewTarget.prototype) &&\n    NewTargetPrototype !== Wrapper.prototype\n  ) setPrototypeOf($this, NewTargetPrototype);\n  return $this;\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar isForced = require('../internals/is-forced');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar defineProperty = require('../internals/object-define-property').f;\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar isRegExp = require('../internals/is-regexp');\nvar getFlags = require('../internals/regexp-flags');\nvar stickyHelpers = require('../internals/regexp-sticky-helpers');\nvar redefine = require('../internals/redefine');\nvar fails = require('../internals/fails');\nvar setInternalState = require('../internals/internal-state').set;\nvar setSpecies = require('../internals/set-species');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\nvar NativeRegExp = global.RegExp;\nvar RegExpPrototype = NativeRegExp.prototype;\nvar re1 = /a/g;\nvar re2 = /a/g;\n\n// \"new\" should create a new object, old webkit bug\nvar CORRECT_NEW = new NativeRegExp(re1) !== re1;\n\nvar UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;\n\nvar FORCED = DESCRIPTORS && isForced('RegExp', (!CORRECT_NEW || UNSUPPORTED_Y || fails(function () {\n  re2[MATCH] = false;\n  // RegExp constructor can alter flags and IsRegExp works correct with @@match\n  return NativeRegExp(re1) != re1 || NativeRegExp(re2) == re2 || NativeRegExp(re1, 'i') != '/a/i';\n})));\n\n// `RegExp` constructor\n// https://tc39.github.io/ecma262/#sec-regexp-constructor\nif (FORCED) {\n  var RegExpWrapper = function RegExp(pattern, flags) {\n    var thisIsRegExp = this instanceof RegExpWrapper;\n    var patternIsRegExp = isRegExp(pattern);\n    var flagsAreUndefined = flags === undefined;\n    var sticky;\n\n    if (!thisIsRegExp && patternIsRegExp && pattern.constructor === RegExpWrapper && flagsAreUndefined) {\n      return pattern;\n    }\n\n    if (CORRECT_NEW) {\n      if (patternIsRegExp && !flagsAreUndefined) pattern = pattern.source;\n    } else if (pattern instanceof RegExpWrapper) {\n      if (flagsAreUndefined) flags = getFlags.call(pattern);\n      pattern = pattern.source;\n    }\n\n    if (UNSUPPORTED_Y) {\n      sticky = !!flags && flags.indexOf('y') > -1;\n      if (sticky) flags = flags.replace(/y/g, '');\n    }\n\n    var result = inheritIfRequired(\n      CORRECT_NEW ? new NativeRegExp(pattern, flags) : NativeRegExp(pattern, flags),\n      thisIsRegExp ? this : RegExpPrototype,\n      RegExpWrapper\n    );\n\n    if (UNSUPPORTED_Y && sticky) setInternalState(result, { sticky: sticky });\n\n    return result;\n  };\n  var proxy = function (key) {\n    key in RegExpWrapper || defineProperty(RegExpWrapper, key, {\n      configurable: true,\n      get: function () { return NativeRegExp[key]; },\n      set: function (it) { NativeRegExp[key] = it; }\n    });\n  };\n  var keys = getOwnPropertyNames(NativeRegExp);\n  var index = 0;\n  while (keys.length > index) proxy(keys[index++]);\n  RegExpPrototype.constructor = RegExpWrapper;\n  RegExpWrapper.prototype = RegExpPrototype;\n  redefine(global, 'RegExp', RegExpWrapper);\n}\n\n// https://tc39.github.io/ecma262/#sec-get-regexp-@@species\nsetSpecies('RegExp');\n","'use strict';\nvar $ = require('../internals/export');\nvar exec = require('../internals/regexp-exec');\n\n$({ target: 'RegExp', proto: true, forced: /./.exec !== exec }, {\n  exec: exec\n});\n","var DESCRIPTORS = require('../internals/descriptors');\nvar objectDefinePropertyModule = require('../internals/object-define-property');\nvar regExpFlags = require('../internals/regexp-flags');\nvar UNSUPPORTED_Y = require('../internals/regexp-sticky-helpers').UNSUPPORTED_Y;\n\n// `RegExp.prototype.flags` getter\n// https://tc39.github.io/ecma262/#sec-get-regexp.prototype.flags\nif (DESCRIPTORS && (/./g.flags != 'g' || UNSUPPORTED_Y)) {\n  objectDefinePropertyModule.f(RegExp.prototype, 'flags', {\n    configurable: true,\n    get: regExpFlags\n  });\n}\n","var DESCRIPTORS = require('../internals/descriptors');\nvar UNSUPPORTED_Y = require('../internals/regexp-sticky-helpers').UNSUPPORTED_Y;\nvar defineProperty = require('../internals/object-define-property').f;\nvar getInternalState = require('../internals/internal-state').get;\nvar RegExpPrototype = RegExp.prototype;\n\n// `RegExp.prototype.sticky` getter\nif (DESCRIPTORS && UNSUPPORTED_Y) {\n  defineProperty(RegExp.prototype, 'sticky', {\n    configurable: true,\n    get: function () {\n      if (this === RegExpPrototype) return undefined;\n      // We can't use InternalStateModule.getterFor because\n      // we don't add metadata for regexps created by a literal.\n      if (this instanceof RegExp) {\n        return !!getInternalState(this).sticky;\n      }\n      throw TypeError('Incompatible receiver, RegExp required');\n    }\n  });\n}\n","'use strict';\nvar $ = require('../internals/export');\nvar isObject = require('../internals/is-object');\n\nvar DELEGATES_TO_EXEC = function () {\n  var execCalled = false;\n  var re = /[ac]/;\n  re.exec = function () {\n    execCalled = true;\n    return /./.exec.apply(this, arguments);\n  };\n  return re.test('abc') === true && execCalled;\n}();\n\nvar nativeTest = /./.test;\n\n$({ target: 'RegExp', proto: true, forced: !DELEGATES_TO_EXEC }, {\n  test: function (str) {\n    if (typeof this.exec !== 'function') {\n      return nativeTest.call(this, str);\n    }\n    var result = this.exec(str);\n    if (result !== null && !isObject(result)) {\n      throw new Error('RegExp exec method returned something other than an Object or null');\n    }\n    return !!result;\n  }\n});\n","'use strict';\nvar redefine = require('../internals/redefine');\nvar anObject = require('../internals/an-object');\nvar fails = require('../internals/fails');\nvar flags = require('../internals/regexp-flags');\n\nvar TO_STRING = 'toString';\nvar RegExpPrototype = RegExp.prototype;\nvar nativeToString = RegExpPrototype[TO_STRING];\n\nvar NOT_GENERIC = fails(function () { return nativeToString.call({ source: 'a', flags: 'b' }) != '/a/b'; });\n// FF44- RegExp#toString has a wrong name\nvar INCORRECT_NAME = nativeToString.name != TO_STRING;\n\n// `RegExp.prototype.toString` method\n// https://tc39.github.io/ecma262/#sec-regexp.prototype.tostring\nif (NOT_GENERIC || INCORRECT_NAME) {\n  redefine(RegExp.prototype, TO_STRING, function toString() {\n    var R = anObject(this);\n    var p = String(R.source);\n    var rf = R.flags;\n    var f = String(rf === undefined && R instanceof RegExp && !('flags' in RegExpPrototype) ? flags.call(R) : rf);\n    return '/' + p + '/' + f;\n  }, { unsafe: true });\n}\n","var global = require('../internals/global');\nvar trim = require('../internals/string-trim').trim;\nvar whitespaces = require('../internals/whitespaces');\n\nvar nativeParseInt = global.parseInt;\nvar hex = /^[+-]?0[Xx]/;\nvar FORCED = nativeParseInt(whitespaces + '08') !== 8 || nativeParseInt(whitespaces + '0x16') !== 22;\n\n// `parseInt` method\n// https://tc39.github.io/ecma262/#sec-parseint-string-radix\nmodule.exports = FORCED ? function parseInt(string, radix) {\n  var S = trim(String(string));\n  return nativeParseInt(S, (radix >>> 0) || (hex.test(S) ? 16 : 10));\n} : nativeParseInt;\n","var $ = require('../internals/export');\nvar parseIntImplementation = require('../internals/parse-int');\n\n// `parseInt` method\n// https://tc39.github.io/ecma262/#sec-parseint-string-radix\n$({ global: true, forced: parseInt != parseIntImplementation }, {\n  parseInt: parseIntImplementation\n});\n","var global = require('../internals/global');\nvar trim = require('../internals/string-trim').trim;\nvar whitespaces = require('../internals/whitespaces');\n\nvar nativeParseFloat = global.parseFloat;\nvar FORCED = 1 / nativeParseFloat(whitespaces + '-0') !== -Infinity;\n\n// `parseFloat` method\n// https://tc39.github.io/ecma262/#sec-parsefloat-string\nmodule.exports = FORCED ? function parseFloat(string) {\n  var trimmedString = trim(String(string));\n  var result = nativeParseFloat(trimmedString);\n  return result === 0 && trimmedString.charAt(0) == '-' ? -0 : result;\n} : nativeParseFloat;\n","var $ = require('../internals/export');\nvar parseFloatImplementation = require('../internals/parse-float');\n\n// `parseFloat` method\n// https://tc39.github.io/ecma262/#sec-parsefloat-string\n$({ global: true, forced: parseFloat != parseFloatImplementation }, {\n  parseFloat: parseFloatImplementation\n});\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar isForced = require('../internals/is-forced');\nvar redefine = require('../internals/redefine');\nvar has = require('../internals/has');\nvar classof = require('../internals/classof-raw');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar toPrimitive = require('../internals/to-primitive');\nvar fails = require('../internals/fails');\nvar create = require('../internals/object-create');\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar defineProperty = require('../internals/object-define-property').f;\nvar trim = require('../internals/string-trim').trim;\n\nvar NUMBER = 'Number';\nvar NativeNumber = global[NUMBER];\nvar NumberPrototype = NativeNumber.prototype;\n\n// Opera ~12 has broken Object#toString\nvar BROKEN_CLASSOF = classof(create(NumberPrototype)) == NUMBER;\n\n// `ToNumber` abstract operation\n// https://tc39.github.io/ecma262/#sec-tonumber\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  var first, third, radix, maxCode, digits, length, index, code;\n  if (typeof it == 'string' && it.length > 2) {\n    it = trim(it);\n    first = it.charCodeAt(0);\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal of /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal of /^0o[0-7]+$/i\n        default: return +it;\n      }\n      digits = it.slice(2);\n      length = digits.length;\n      for (index = 0; index < length; index++) {\n        code = digits.charCodeAt(index);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\n// `Number` constructor\n// https://tc39.github.io/ecma262/#sec-number-constructor\nif (isForced(NUMBER, !NativeNumber(' 0o1') || !NativeNumber('0b1') || NativeNumber('+0x1'))) {\n  var NumberWrapper = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var dummy = this;\n    return dummy instanceof NumberWrapper\n      // check on 1..constructor(foo) case\n      && (BROKEN_CLASSOF ? fails(function () { NumberPrototype.valueOf.call(dummy); }) : classof(dummy) != NUMBER)\n        ? inheritIfRequired(new NativeNumber(toNumber(it)), dummy, NumberWrapper) : toNumber(it);\n  };\n  for (var keys = DESCRIPTORS ? getOwnPropertyNames(NativeNumber) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES2015 (in case, if modules with ES2015 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(NativeNumber, key = keys[j]) && !has(NumberWrapper, key)) {\n      defineProperty(NumberWrapper, key, getOwnPropertyDescriptor(NativeNumber, key));\n    }\n  }\n  NumberWrapper.prototype = NumberPrototype;\n  NumberPrototype.constructor = NumberWrapper;\n  redefine(global, NUMBER, NumberWrapper);\n}\n","var $ = require('../internals/export');\n\n// `Number.EPSILON` constant\n// https://tc39.github.io/ecma262/#sec-number.epsilon\n$({ target: 'Number', stat: true }, {\n  EPSILON: Math.pow(2, -52)\n});\n","var global = require('../internals/global');\n\nvar globalIsFinite = global.isFinite;\n\n// `Number.isFinite` method\n// https://tc39.github.io/ecma262/#sec-number.isfinite\nmodule.exports = Number.isFinite || function isFinite(it) {\n  return typeof it == 'number' && globalIsFinite(it);\n};\n","var $ = require('../internals/export');\nvar numberIsFinite = require('../internals/number-is-finite');\n\n// `Number.isFinite` method\n// https://tc39.github.io/ecma262/#sec-number.isfinite\n$({ target: 'Number', stat: true }, { isFinite: numberIsFinite });\n","var isObject = require('../internals/is-object');\n\nvar floor = Math.floor;\n\n// `Number.isInteger` method implementation\n// https://tc39.github.io/ecma262/#sec-number.isinteger\nmodule.exports = function isInteger(it) {\n  return !isObject(it) && isFinite(it) && floor(it) === it;\n};\n","var $ = require('../internals/export');\nvar isInteger = require('../internals/is-integer');\n\n// `Number.isInteger` method\n// https://tc39.github.io/ecma262/#sec-number.isinteger\n$({ target: 'Number', stat: true }, {\n  isInteger: isInteger\n});\n","var $ = require('../internals/export');\n\n// `Number.isNaN` method\n// https://tc39.github.io/ecma262/#sec-number.isnan\n$({ target: 'Number', stat: true }, {\n  isNaN: function isNaN(number) {\n    // eslint-disable-next-line no-self-compare\n    return number != number;\n  }\n});\n","var $ = require('../internals/export');\nvar isInteger = require('../internals/is-integer');\n\nvar abs = Math.abs;\n\n// `Number.isSafeInteger` method\n// https://tc39.github.io/ecma262/#sec-number.issafeinteger\n$({ target: 'Number', stat: true }, {\n  isSafeInteger: function isSafeInteger(number) {\n    return isInteger(number) && abs(number) <= 0x1FFFFFFFFFFFFF;\n  }\n});\n","var $ = require('../internals/export');\n\n// `Number.MAX_SAFE_INTEGER` constant\n// https://tc39.github.io/ecma262/#sec-number.max_safe_integer\n$({ target: 'Number', stat: true }, {\n  MAX_SAFE_INTEGER: 0x1FFFFFFFFFFFFF\n});\n","var $ = require('../internals/export');\n\n// `Number.MIN_SAFE_INTEGER` constant\n// https://tc39.github.io/ecma262/#sec-number.min_safe_integer\n$({ target: 'Number', stat: true }, {\n  MIN_SAFE_INTEGER: -0x1FFFFFFFFFFFFF\n});\n","var $ = require('../internals/export');\nvar parseFloat = require('../internals/parse-float');\n\n// `Number.parseFloat` method\n// https://tc39.github.io/ecma262/#sec-number.parseFloat\n$({ target: 'Number', stat: true, forced: Number.parseFloat != parseFloat }, {\n  parseFloat: parseFloat\n});\n","var $ = require('../internals/export');\nvar parseInt = require('../internals/parse-int');\n\n// `Number.parseInt` method\n// https://tc39.github.io/ecma262/#sec-number.parseint\n$({ target: 'Number', stat: true, forced: Number.parseInt != parseInt }, {\n  parseInt: parseInt\n});\n","var classof = require('../internals/classof-raw');\n\n// `thisNumberValue` abstract operation\n// https://tc39.github.io/ecma262/#sec-thisnumbervalue\nmodule.exports = function (value) {\n  if (typeof value != 'number' && classof(value) != 'Number') {\n    throw TypeError('Incorrect invocation');\n  }\n  return +value;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar toInteger = require('../internals/to-integer');\nvar thisNumberValue = require('../internals/this-number-value');\nvar repeat = require('../internals/string-repeat');\nvar fails = require('../internals/fails');\n\nvar nativeToFixed = 1.0.toFixed;\nvar floor = Math.floor;\n\nvar pow = function (x, n, acc) {\n  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);\n};\n\nvar log = function (x) {\n  var n = 0;\n  var x2 = x;\n  while (x2 >= 4096) {\n    n += 12;\n    x2 /= 4096;\n  }\n  while (x2 >= 2) {\n    n += 1;\n    x2 /= 2;\n  } return n;\n};\n\nvar FORCED = nativeToFixed && (\n  0.00008.toFixed(3) !== '0.000' ||\n  0.9.toFixed(0) !== '1' ||\n  1.255.toFixed(2) !== '1.25' ||\n  1000000000000000128.0.toFixed(0) !== '1000000000000000128'\n) || !fails(function () {\n  // V8 ~ Android 4.3-\n  nativeToFixed.call({});\n});\n\n// `Number.prototype.toFixed` method\n// https://tc39.github.io/ecma262/#sec-number.prototype.tofixed\n$({ target: 'Number', proto: true, forced: FORCED }, {\n  // eslint-disable-next-line max-statements\n  toFixed: function toFixed(fractionDigits) {\n    var number = thisNumberValue(this);\n    var fractDigits = toInteger(fractionDigits);\n    var data = [0, 0, 0, 0, 0, 0];\n    var sign = '';\n    var result = '0';\n    var e, z, j, k;\n\n    var multiply = function (n, c) {\n      var index = -1;\n      var c2 = c;\n      while (++index < 6) {\n        c2 += n * data[index];\n        data[index] = c2 % 1e7;\n        c2 = floor(c2 / 1e7);\n      }\n    };\n\n    var divide = function (n) {\n      var index = 6;\n      var c = 0;\n      while (--index >= 0) {\n        c += data[index];\n        data[index] = floor(c / n);\n        c = (c % n) * 1e7;\n      }\n    };\n\n    var dataToString = function () {\n      var index = 6;\n      var s = '';\n      while (--index >= 0) {\n        if (s !== '' || index === 0 || data[index] !== 0) {\n          var t = String(data[index]);\n          s = s === '' ? t : s + repeat.call('0', 7 - t.length) + t;\n        }\n      } return s;\n    };\n\n    if (fractDigits < 0 || fractDigits > 20) throw RangeError('Incorrect fraction digits');\n    // eslint-disable-next-line no-self-compare\n    if (number != number) return 'NaN';\n    if (number <= -1e21 || number >= 1e21) return String(number);\n    if (number < 0) {\n      sign = '-';\n      number = -number;\n    }\n    if (number > 1e-21) {\n      e = log(number * pow(2, 69, 1)) - 69;\n      z = e < 0 ? number * pow(2, -e, 1) : number / pow(2, e, 1);\n      z *= 0x10000000000000;\n      e = 52 - e;\n      if (e > 0) {\n        multiply(0, z);\n        j = fractDigits;\n        while (j >= 7) {\n          multiply(1e7, 0);\n          j -= 7;\n        }\n        multiply(pow(10, j, 1), 0);\n        j = e - 1;\n        while (j >= 23) {\n          divide(1 << 23);\n          j -= 23;\n        }\n        divide(1 << j);\n        multiply(1, 1);\n        divide(2);\n        result = dataToString();\n      } else {\n        multiply(0, z);\n        multiply(1 << -e, 0);\n        result = dataToString() + repeat.call('0', fractDigits);\n      }\n    }\n    if (fractDigits > 0) {\n      k = result.length;\n      result = sign + (k <= fractDigits\n        ? '0.' + repeat.call('0', fractDigits - k) + result\n        : result.slice(0, k - fractDigits) + '.' + result.slice(k - fractDigits));\n    } else {\n      result = sign + result;\n    } return result;\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar thisNumberValue = require('../internals/this-number-value');\n\nvar nativeToPrecision = 1.0.toPrecision;\n\nvar FORCED = fails(function () {\n  // IE7-\n  return nativeToPrecision.call(1, undefined) !== '1';\n}) || !fails(function () {\n  // V8 ~ Android 4.3-\n  nativeToPrecision.call({});\n});\n\n// `Number.prototype.toPrecision` method\n// https://tc39.github.io/ecma262/#sec-number.prototype.toprecision\n$({ target: 'Number', proto: true, forced: FORCED }, {\n  toPrecision: function toPrecision(precision) {\n    return precision === undefined\n      ? nativeToPrecision.call(thisNumberValue(this))\n      : nativeToPrecision.call(thisNumberValue(this), precision);\n  }\n});\n","var log = Math.log;\n\n// `Math.log1p` method implementation\n// https://tc39.github.io/ecma262/#sec-math.log1p\nmodule.exports = Math.log1p || function log1p(x) {\n  return (x = +x) > -1e-8 && x < 1e-8 ? x - x * x / 2 : log(1 + x);\n};\n","var $ = require('../internals/export');\nvar log1p = require('../internals/math-log1p');\n\nvar nativeAcosh = Math.acosh;\nvar log = Math.log;\nvar sqrt = Math.sqrt;\nvar LN2 = Math.LN2;\n\nvar FORCED = !nativeAcosh\n  // V8 bug: https://code.google.com/p/v8/issues/detail?id=3509\n  || Math.floor(nativeAcosh(Number.MAX_VALUE)) != 710\n  // Tor Browser bug: Math.acosh(Infinity) -> NaN\n  || nativeAcosh(Infinity) != Infinity;\n\n// `Math.acosh` method\n// https://tc39.github.io/ecma262/#sec-math.acosh\n$({ target: 'Math', stat: true, forced: FORCED }, {\n  acosh: function acosh(x) {\n    return (x = +x) < 1 ? NaN : x > 94906265.62425156\n      ? log(x) + LN2\n      : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));\n  }\n});\n","var $ = require('../internals/export');\n\nvar nativeAsinh = Math.asinh;\nvar log = Math.log;\nvar sqrt = Math.sqrt;\n\nfunction asinh(x) {\n  return !isFinite(x = +x) || x == 0 ? x : x < 0 ? -asinh(-x) : log(x + sqrt(x * x + 1));\n}\n\n// `Math.asinh` method\n// https://tc39.github.io/ecma262/#sec-math.asinh\n// Tor Browser bug: Math.asinh(0) -> -0\n$({ target: 'Math', stat: true, forced: !(nativeAsinh && 1 / nativeAsinh(0) > 0) }, {\n  asinh: asinh\n});\n","var $ = require('../internals/export');\n\nvar nativeAtanh = Math.atanh;\nvar log = Math.log;\n\n// `Math.atanh` method\n// https://tc39.github.io/ecma262/#sec-math.atanh\n// Tor Browser bug: Math.atanh(-0) -> 0\n$({ target: 'Math', stat: true, forced: !(nativeAtanh && 1 / nativeAtanh(-0) < 0) }, {\n  atanh: function atanh(x) {\n    return (x = +x) == 0 ? x : log((1 + x) / (1 - x)) / 2;\n  }\n});\n","// `Math.sign` method implementation\n// https://tc39.github.io/ecma262/#sec-math.sign\nmodule.exports = Math.sign || function sign(x) {\n  // eslint-disable-next-line no-self-compare\n  return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;\n};\n","var $ = require('../internals/export');\nvar sign = require('../internals/math-sign');\n\nvar abs = Math.abs;\nvar pow = Math.pow;\n\n// `Math.cbrt` method\n// https://tc39.github.io/ecma262/#sec-math.cbrt\n$({ target: 'Math', stat: true }, {\n  cbrt: function cbrt(x) {\n    return sign(x = +x) * pow(abs(x), 1 / 3);\n  }\n});\n","var $ = require('../internals/export');\n\nvar floor = Math.floor;\nvar log = Math.log;\nvar LOG2E = Math.LOG2E;\n\n// `Math.clz32` method\n// https://tc39.github.io/ecma262/#sec-math.clz32\n$({ target: 'Math', stat: true }, {\n  clz32: function clz32(x) {\n    return (x >>>= 0) ? 31 - floor(log(x + 0.5) * LOG2E) : 32;\n  }\n});\n","var nativeExpm1 = Math.expm1;\nvar exp = Math.exp;\n\n// `Math.expm1` method implementation\n// https://tc39.github.io/ecma262/#sec-math.expm1\nmodule.exports = (!nativeExpm1\n  // Old FF bug\n  || nativeExpm1(10) > 22025.465794806719 || nativeExpm1(10) < 22025.4657948067165168\n  // Tor Browser bug\n  || nativeExpm1(-2e-17) != -2e-17\n) ? function expm1(x) {\n  return (x = +x) == 0 ? x : x > -1e-6 && x < 1e-6 ? x + x * x / 2 : exp(x) - 1;\n} : nativeExpm1;\n","var $ = require('../internals/export');\nvar expm1 = require('../internals/math-expm1');\n\nvar nativeCosh = Math.cosh;\nvar abs = Math.abs;\nvar E = Math.E;\n\n// `Math.cosh` method\n// https://tc39.github.io/ecma262/#sec-math.cosh\n$({ target: 'Math', stat: true, forced: !nativeCosh || nativeCosh(710) === Infinity }, {\n  cosh: function cosh(x) {\n    var t = expm1(abs(x) - 1) + 1;\n    return (t + 1 / (t * E * E)) * (E / 2);\n  }\n});\n","var $ = require('../internals/export');\nvar expm1 = require('../internals/math-expm1');\n\n// `Math.expm1` method\n// https://tc39.github.io/ecma262/#sec-math.expm1\n$({ target: 'Math', stat: true, forced: expm1 != Math.expm1 }, { expm1: expm1 });\n","var sign = require('../internals/math-sign');\n\nvar abs = Math.abs;\nvar pow = Math.pow;\nvar EPSILON = pow(2, -52);\nvar EPSILON32 = pow(2, -23);\nvar MAX32 = pow(2, 127) * (2 - EPSILON32);\nvar MIN32 = pow(2, -126);\n\nvar roundTiesToEven = function (n) {\n  return n + 1 / EPSILON - 1 / EPSILON;\n};\n\n// `Math.fround` method implementation\n// https://tc39.github.io/ecma262/#sec-math.fround\nmodule.exports = Math.fround || function fround(x) {\n  var $abs = abs(x);\n  var $sign = sign(x);\n  var a, result;\n  if ($abs < MIN32) return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;\n  a = (1 + EPSILON32 / EPSILON) * $abs;\n  result = a - (a - $abs);\n  // eslint-disable-next-line no-self-compare\n  if (result > MAX32 || result != result) return $sign * Infinity;\n  return $sign * result;\n};\n","var $ = require('../internals/export');\nvar fround = require('../internals/math-fround');\n\n// `Math.fround` method\n// https://tc39.github.io/ecma262/#sec-math.fround\n$({ target: 'Math', stat: true }, { fround: fround });\n","var $ = require('../internals/export');\n\nvar $hypot = Math.hypot;\nvar abs = Math.abs;\nvar sqrt = Math.sqrt;\n\n// Chrome 77 bug\n// https://bugs.chromium.org/p/v8/issues/detail?id=9546\nvar BUGGY = !!$hypot && $hypot(Infinity, NaN) !== Infinity;\n\n// `Math.hypot` method\n// https://tc39.github.io/ecma262/#sec-math.hypot\n$({ target: 'Math', stat: true, forced: BUGGY }, {\n  hypot: function hypot(value1, value2) { // eslint-disable-line no-unused-vars\n    var sum = 0;\n    var i = 0;\n    var aLen = arguments.length;\n    var larg = 0;\n    var arg, div;\n    while (i < aLen) {\n      arg = abs(arguments[i++]);\n      if (larg < arg) {\n        div = larg / arg;\n        sum = sum * div * div + 1;\n        larg = arg;\n      } else if (arg > 0) {\n        div = arg / larg;\n        sum += div * div;\n      } else sum += arg;\n    }\n    return larg === Infinity ? Infinity : larg * sqrt(sum);\n  }\n});\n","var $ = require('../internals/export');\nvar fails = require('../internals/fails');\n\nvar nativeImul = Math.imul;\n\nvar FORCED = fails(function () {\n  return nativeImul(0xFFFFFFFF, 5) != -5 || nativeImul.length != 2;\n});\n\n// `Math.imul` method\n// https://tc39.github.io/ecma262/#sec-math.imul\n// some WebKit versions fails with big numbers, some has wrong arity\n$({ target: 'Math', stat: true, forced: FORCED }, {\n  imul: function imul(x, y) {\n    var UINT16 = 0xFFFF;\n    var xn = +x;\n    var yn = +y;\n    var xl = UINT16 & xn;\n    var yl = UINT16 & yn;\n    return 0 | xl * yl + ((UINT16 & xn >>> 16) * yl + xl * (UINT16 & yn >>> 16) << 16 >>> 0);\n  }\n});\n","var $ = require('../internals/export');\n\nvar log = Math.log;\nvar LOG10E = Math.LOG10E;\n\n// `Math.log10` method\n// https://tc39.github.io/ecma262/#sec-math.log10\n$({ target: 'Math', stat: true }, {\n  log10: function log10(x) {\n    return log(x) * LOG10E;\n  }\n});\n","var $ = require('../internals/export');\nvar log1p = require('../internals/math-log1p');\n\n// `Math.log1p` method\n// https://tc39.github.io/ecma262/#sec-math.log1p\n$({ target: 'Math', stat: true }, { log1p: log1p });\n","var $ = require('../internals/export');\n\nvar log = Math.log;\nvar LN2 = Math.LN2;\n\n// `Math.log2` method\n// https://tc39.github.io/ecma262/#sec-math.log2\n$({ target: 'Math', stat: true }, {\n  log2: function log2(x) {\n    return log(x) / LN2;\n  }\n});\n","var $ = require('../internals/export');\nvar sign = require('../internals/math-sign');\n\n// `Math.sign` method\n// https://tc39.github.io/ecma262/#sec-math.sign\n$({ target: 'Math', stat: true }, {\n  sign: sign\n});\n","var $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar expm1 = require('../internals/math-expm1');\n\nvar abs = Math.abs;\nvar exp = Math.exp;\nvar E = Math.E;\n\nvar FORCED = fails(function () {\n  return Math.sinh(-2e-17) != -2e-17;\n});\n\n// `Math.sinh` method\n// https://tc39.github.io/ecma262/#sec-math.sinh\n// V8 near Chromium 38 has a problem with very small numbers\n$({ target: 'Math', stat: true, forced: FORCED }, {\n  sinh: function sinh(x) {\n    return abs(x = +x) < 1 ? (expm1(x) - expm1(-x)) / 2 : (exp(x - 1) - exp(-x - 1)) * (E / 2);\n  }\n});\n","var $ = require('../internals/export');\nvar expm1 = require('../internals/math-expm1');\n\nvar exp = Math.exp;\n\n// `Math.tanh` method\n// https://tc39.github.io/ecma262/#sec-math.tanh\n$({ target: 'Math', stat: true }, {\n  tanh: function tanh(x) {\n    var a = expm1(x = +x);\n    var b = expm1(-x);\n    return a == Infinity ? 1 : b == Infinity ? -1 : (a - b) / (exp(x) + exp(-x));\n  }\n});\n","var setToStringTag = require('../internals/set-to-string-tag');\n\n// Math[@@toStringTag] property\n// https://tc39.github.io/ecma262/#sec-math-@@tostringtag\nsetToStringTag(Math, 'Math', true);\n","var $ = require('../internals/export');\n\nvar ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `Math.trunc` method\n// https://tc39.github.io/ecma262/#sec-math.trunc\n$({ target: 'Math', stat: true }, {\n  trunc: function trunc(it) {\n    return (it > 0 ? floor : ceil)(it);\n  }\n});\n","var $ = require('../internals/export');\n\n// `Date.now` method\n// https://tc39.github.io/ecma262/#sec-date.now\n$({ target: 'Date', stat: true }, {\n  now: function now() {\n    return new Date().getTime();\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar toObject = require('../internals/to-object');\nvar toPrimitive = require('../internals/to-primitive');\n\nvar FORCED = fails(function () {\n  return new Date(NaN).toJSON() !== null\n    || Date.prototype.toJSON.call({ toISOString: function () { return 1; } }) !== 1;\n});\n\n// `Date.prototype.toJSON` method\n// https://tc39.github.io/ecma262/#sec-date.prototype.tojson\n$({ target: 'Date', proto: true, forced: FORCED }, {\n  // eslint-disable-next-line no-unused-vars\n  toJSON: function toJSON(key) {\n    var O = toObject(this);\n    var pv = toPrimitive(O);\n    return typeof pv == 'number' && !isFinite(pv) ? null : O.toISOString();\n  }\n});\n","'use strict';\nvar fails = require('../internals/fails');\nvar padStart = require('../internals/string-pad').start;\n\nvar abs = Math.abs;\nvar DatePrototype = Date.prototype;\nvar getTime = DatePrototype.getTime;\nvar nativeDateToISOString = DatePrototype.toISOString;\n\n// `Date.prototype.toISOString` method implementation\n// https://tc39.github.io/ecma262/#sec-date.prototype.toisostring\n// PhantomJS / old WebKit fails here:\nmodule.exports = (fails(function () {\n  return nativeDateToISOString.call(new Date(-5e13 - 1)) != '0385-07-25T07:06:39.999Z';\n}) || !fails(function () {\n  nativeDateToISOString.call(new Date(NaN));\n})) ? function toISOString() {\n  if (!isFinite(getTime.call(this))) throw RangeError('Invalid time value');\n  var date = this;\n  var year = date.getUTCFullYear();\n  var milliseconds = date.getUTCMilliseconds();\n  var sign = year < 0 ? '-' : year > 9999 ? '+' : '';\n  return sign + padStart(abs(year), sign ? 6 : 4, 0) +\n    '-' + padStart(date.getUTCMonth() + 1, 2, 0) +\n    '-' + padStart(date.getUTCDate(), 2, 0) +\n    'T' + padStart(date.getUTCHours(), 2, 0) +\n    ':' + padStart(date.getUTCMinutes(), 2, 0) +\n    ':' + padStart(date.getUTCSeconds(), 2, 0) +\n    '.' + padStart(milliseconds, 3, 0) +\n    'Z';\n} : nativeDateToISOString;\n","var $ = require('../internals/export');\nvar toISOString = require('../internals/date-to-iso-string');\n\n// `Date.prototype.toISOString` method\n// https://tc39.github.io/ecma262/#sec-date.prototype.toisostring\n// PhantomJS / old WebKit has a broken implementations\n$({ target: 'Date', proto: true, forced: Date.prototype.toISOString !== toISOString }, {\n  toISOString: toISOString\n});\n","var redefine = require('../internals/redefine');\n\nvar DatePrototype = Date.prototype;\nvar INVALID_DATE = 'Invalid Date';\nvar TO_STRING = 'toString';\nvar nativeDateToString = DatePrototype[TO_STRING];\nvar getTime = DatePrototype.getTime;\n\n// `Date.prototype.toString` method\n// https://tc39.github.io/ecma262/#sec-date.prototype.tostring\nif (new Date(NaN) + '' != INVALID_DATE) {\n  redefine(DatePrototype, TO_STRING, function toString() {\n    var value = getTime.call(this);\n    // eslint-disable-next-line no-self-compare\n    return value === value ? nativeDateToString.call(this) : INVALID_DATE;\n  });\n}\n","'use strict';\nvar anObject = require('../internals/an-object');\nvar toPrimitive = require('../internals/to-primitive');\n\nmodule.exports = function (hint) {\n  if (hint !== 'string' && hint !== 'number' && hint !== 'default') {\n    throw TypeError('Incorrect hint');\n  } return toPrimitive(anObject(this), hint !== 'number');\n};\n","var createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar dateToPrimitive = require('../internals/date-to-primitive');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\nvar DatePrototype = Date.prototype;\n\n// `Date.prototype[@@toPrimitive]` method\n// https://tc39.github.io/ecma262/#sec-date.prototype-@@toprimitive\nif (!(TO_PRIMITIVE in DatePrototype)) {\n  createNonEnumerableProperty(DatePrototype, TO_PRIMITIVE, dateToPrimitive);\n}\n","var $ = require('../internals/export');\nvar getBuiltIn = require('../internals/get-built-in');\nvar fails = require('../internals/fails');\n\nvar $stringify = getBuiltIn('JSON', 'stringify');\nvar re = /[\\uD800-\\uDFFF]/g;\nvar low = /^[\\uD800-\\uDBFF]$/;\nvar hi = /^[\\uDC00-\\uDFFF]$/;\n\nvar fix = function (match, offset, string) {\n  var prev = string.charAt(offset - 1);\n  var next = string.charAt(offset + 1);\n  if ((low.test(match) && !hi.test(next)) || (hi.test(match) && !low.test(prev))) {\n    return '\\\\u' + match.charCodeAt(0).toString(16);\n  } return match;\n};\n\nvar FORCED = fails(function () {\n  return $stringify('\\uDF06\\uD834') !== '\"\\\\udf06\\\\ud834\"'\n    || $stringify('\\uDEAD') !== '\"\\\\udead\"';\n});\n\nif ($stringify) {\n  // https://github.com/tc39/proposal-well-formed-stringify\n  $({ target: 'JSON', stat: true, forced: FORCED }, {\n    // eslint-disable-next-line no-unused-vars\n    stringify: function stringify(it, replacer, space) {\n      var result = $stringify.apply(null, arguments);\n      return typeof result == 'string' ? result.replace(re, fix) : result;\n    }\n  });\n}\n","var global = require('../internals/global');\nvar setToStringTag = require('../internals/set-to-string-tag');\n\n// JSON[@@toStringTag] property\n// https://tc39.github.io/ecma262/#sec-json-@@tostringtag\nsetToStringTag(global.JSON, 'JSON', true);\n","var global = require('../internals/global');\n\nmodule.exports = global.Promise;\n","var redefine = require('../internals/redefine');\n\nmodule.exports = function (target, src, options) {\n  for (var key in src) redefine(target, key, src[key], options);\n  return target;\n};\n","module.exports = function (it, Constructor, name) {\n  if (!(it instanceof Constructor)) {\n    throw TypeError('Incorrect ' + (name ? name + ' ' : '') + 'invocation');\n  } return it;\n};\n","var userAgent = require('../internals/user-agent');\n\nmodule.exports = /(iphone|ipod|ipad).*applewebkit/i.test(userAgent);\n","var global = require('../internals/global');\nvar fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\nvar bind = require('../internals/bind-context');\nvar html = require('../internals/html');\nvar createElement = require('../internals/document-create-element');\nvar IS_IOS = require('../internals/is-ios');\n\nvar location = global.location;\nvar set = global.setImmediate;\nvar clear = global.clearImmediate;\nvar process = global.process;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\n\nvar run = function (id) {\n  // eslint-disable-next-line no-prototype-builtins\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\n\nvar runner = function (id) {\n  return function () {\n    run(id);\n  };\n};\n\nvar listener = function (event) {\n  run(event.data);\n};\n\nvar post = function (id) {\n  // old engines have not location.origin\n  global.postMessage(id + '', location.protocol + '//' + location.host);\n};\n\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif (!set || !clear) {\n  set = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n    while (arguments.length > i) args.push(arguments[i++]);\n    queue[++counter] = function () {\n      // eslint-disable-next-line no-new-func\n      (typeof fn == 'function' ? fn : Function(fn)).apply(undefined, args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clear = function clearImmediate(id) {\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if (classof(process) == 'process') {\n    defer = function (id) {\n      process.nextTick(runner(id));\n    };\n  // Sphere (JS game engine) Dispatch API\n  } else if (Dispatch && Dispatch.now) {\n    defer = function (id) {\n      Dispatch.now(runner(id));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  // except iOS - https://github.com/zloirock/core-js/issues/624\n  } else if (MessageChannel && !IS_IOS) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = bind(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts && !fails(post)) {\n    defer = post;\n    global.addEventListener('message', listener, false);\n  // IE8-\n  } else if (ONREADYSTATECHANGE in createElement('script')) {\n    defer = function (id) {\n      html.appendChild(createElement('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function (id) {\n      setTimeout(runner(id), 0);\n    };\n  }\n}\n\nmodule.exports = {\n  set: set,\n  clear: clear\n};\n","var global = require('../internals/global');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar classof = require('../internals/classof-raw');\nvar macrotask = require('../internals/task').set;\nvar IS_IOS = require('../internals/is-ios');\n\nvar MutationObserver = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar IS_NODE = classof(process) == 'process';\n// Node.js 11 shows ExperimentalWarning on getting `queueMicrotask`\nvar queueMicrotaskDescriptor = getOwnPropertyDescriptor(global, 'queueMicrotask');\nvar queueMicrotask = queueMicrotaskDescriptor && queueMicrotaskDescriptor.value;\n\nvar flush, head, last, notify, toggle, node, promise, then;\n\n// modern engines have queueMicrotask method\nif (!queueMicrotask) {\n  flush = function () {\n    var parent, fn;\n    if (IS_NODE && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (error) {\n        if (head) notify();\n        else last = undefined;\n        throw error;\n      }\n    } last = undefined;\n    if (parent) parent.enter();\n  };\n\n  // Node.js\n  if (IS_NODE) {\n    notify = function () {\n      process.nextTick(flush);\n    };\n  // browsers with MutationObserver, except iOS - https://github.com/zloirock/core-js/issues/339\n  } else if (MutationObserver && !IS_IOS) {\n    toggle = true;\n    node = document.createTextNode('');\n    new MutationObserver(flush).observe(node, { characterData: true });\n    notify = function () {\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if (Promise && Promise.resolve) {\n    // Promise.resolve without an argument throws an error in LG WebOS 2\n    promise = Promise.resolve(undefined);\n    then = promise.then;\n    notify = function () {\n      then.call(promise, flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessag\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    notify = function () {\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n}\n\nmodule.exports = queueMicrotask || function (fn) {\n  var task = { fn: fn, next: undefined };\n  if (last) last.next = task;\n  if (!head) {\n    head = task;\n    notify();\n  } last = task;\n};\n","'use strict';\nvar aFunction = require('../internals/a-function');\n\nvar PromiseCapability = function (C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n};\n\n// 25.4.1.5 NewPromiseCapability(C)\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n","var anObject = require('../internals/an-object');\nvar isObject = require('../internals/is-object');\nvar newPromiseCapability = require('../internals/new-promise-capability');\n\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n","var global = require('../internals/global');\n\nmodule.exports = function (a, b) {\n  var console = global.console;\n  if (console && console.error) {\n    arguments.length === 1 ? console.error(a) : console.error(a, b);\n  }\n};\n","module.exports = function (exec) {\n  try {\n    return { error: false, value: exec() };\n  } catch (error) {\n    return { error: true, value: error };\n  }\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar global = require('../internals/global');\nvar getBuiltIn = require('../internals/get-built-in');\nvar NativePromise = require('../internals/native-promise-constructor');\nvar redefine = require('../internals/redefine');\nvar redefineAll = require('../internals/redefine-all');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar setSpecies = require('../internals/set-species');\nvar isObject = require('../internals/is-object');\nvar aFunction = require('../internals/a-function');\nvar anInstance = require('../internals/an-instance');\nvar classof = require('../internals/classof-raw');\nvar inspectSource = require('../internals/inspect-source');\nvar iterate = require('../internals/iterate');\nvar checkCorrectnessOfIteration = require('../internals/check-correctness-of-iteration');\nvar speciesConstructor = require('../internals/species-constructor');\nvar task = require('../internals/task').set;\nvar microtask = require('../internals/microtask');\nvar promiseResolve = require('../internals/promise-resolve');\nvar hostReportErrors = require('../internals/host-report-errors');\nvar newPromiseCapabilityModule = require('../internals/new-promise-capability');\nvar perform = require('../internals/perform');\nvar InternalStateModule = require('../internals/internal-state');\nvar isForced = require('../internals/is-forced');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/v8-version');\n\nvar SPECIES = wellKnownSymbol('species');\nvar PROMISE = 'Promise';\nvar getInternalState = InternalStateModule.get;\nvar setInternalState = InternalStateModule.set;\nvar getInternalPromiseState = InternalStateModule.getterFor(PROMISE);\nvar PromiseConstructor = NativePromise;\nvar TypeError = global.TypeError;\nvar document = global.document;\nvar process = global.process;\nvar $fetch = getBuiltIn('fetch');\nvar newPromiseCapability = newPromiseCapabilityModule.f;\nvar newGenericPromiseCapability = newPromiseCapability;\nvar IS_NODE = classof(process) == 'process';\nvar DISPATCH_EVENT = !!(document && document.createEvent && global.dispatchEvent);\nvar UNHANDLED_REJECTION = 'unhandledrejection';\nvar REJECTION_HANDLED = 'rejectionhandled';\nvar PENDING = 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\nvar HANDLED = 1;\nvar UNHANDLED = 2;\nvar Internal, OwnPromiseCapability, PromiseWrapper, nativeThen;\n\nvar FORCED = isForced(PROMISE, function () {\n  var GLOBAL_CORE_JS_PROMISE = inspectSource(PromiseConstructor) !== String(PromiseConstructor);\n  if (!GLOBAL_CORE_JS_PROMISE) {\n    // V8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=830565\n    // We can't detect it synchronously, so just check versions\n    if (V8_VERSION === 66) return true;\n    // Unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n    if (!IS_NODE && typeof PromiseRejectionEvent != 'function') return true;\n  }\n  // We need Promise#finally in the pure version for preventing prototype pollution\n  if (IS_PURE && !PromiseConstructor.prototype['finally']) return true;\n  // We can't use @@species feature detection in V8 since it causes\n  // deoptimization and performance degradation\n  // https://github.com/zloirock/core-js/issues/679\n  if (V8_VERSION >= 51 && /native code/.test(PromiseConstructor)) return false;\n  // Detect correctness of subclassing with @@species support\n  var promise = PromiseConstructor.resolve(1);\n  var FakePromise = function (exec) {\n    exec(function () { /* empty */ }, function () { /* empty */ });\n  };\n  var constructor = promise.constructor = {};\n  constructor[SPECIES] = FakePromise;\n  return !(promise.then(function () { /* empty */ }) instanceof FakePromise);\n});\n\nvar INCORRECT_ITERATION = FORCED || !checkCorrectnessOfIteration(function (iterable) {\n  PromiseConstructor.all(iterable)['catch'](function () { /* empty */ });\n});\n\n// helpers\nvar isThenable = function (it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\n\nvar notify = function (promise, state, isReject) {\n  if (state.notified) return;\n  state.notified = true;\n  var chain = state.reactions;\n  microtask(function () {\n    var value = state.value;\n    var ok = state.state == FULFILLED;\n    var index = 0;\n    // variable length - can't use forEach\n    while (chain.length > index) {\n      var reaction = chain[index++];\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then, exited;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (state.rejection === UNHANDLED) onHandleUnhandled(promise, state);\n            state.rejection = HANDLED;\n          }\n          if (handler === true) result = value;\n          else {\n            if (domain) domain.enter();\n            result = handler(value); // can throw\n            if (domain) {\n              domain.exit();\n              exited = true;\n            }\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (error) {\n        if (domain && !exited) domain.exit();\n        reject(error);\n      }\n    }\n    state.reactions = [];\n    state.notified = false;\n    if (isReject && !state.rejection) onUnhandled(promise, state);\n  });\n};\n\nvar dispatchEvent = function (name, promise, reason) {\n  var event, handler;\n  if (DISPATCH_EVENT) {\n    event = document.createEvent('Event');\n    event.promise = promise;\n    event.reason = reason;\n    event.initEvent(name, false, true);\n    global.dispatchEvent(event);\n  } else event = { promise: promise, reason: reason };\n  if (handler = global['on' + name]) handler(event);\n  else if (name === UNHANDLED_REJECTION) hostReportErrors('Unhandled promise rejection', reason);\n};\n\nvar onUnhandled = function (promise, state) {\n  task.call(global, function () {\n    var value = state.value;\n    var IS_UNHANDLED = isUnhandled(state);\n    var result;\n    if (IS_UNHANDLED) {\n      result = perform(function () {\n        if (IS_NODE) {\n          process.emit('unhandledRejection', value, promise);\n        } else dispatchEvent(UNHANDLED_REJECTION, promise, value);\n      });\n      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n      state.rejection = IS_NODE || isUnhandled(state) ? UNHANDLED : HANDLED;\n      if (result.error) throw result.value;\n    }\n  });\n};\n\nvar isUnhandled = function (state) {\n  return state.rejection !== HANDLED && !state.parent;\n};\n\nvar onHandleUnhandled = function (promise, state) {\n  task.call(global, function () {\n    if (IS_NODE) {\n      process.emit('rejectionHandled', promise);\n    } else dispatchEvent(REJECTION_HANDLED, promise, state.value);\n  });\n};\n\nvar bind = function (fn, promise, state, unwrap) {\n  return function (value) {\n    fn(promise, state, value, unwrap);\n  };\n};\n\nvar internalReject = function (promise, state, value, unwrap) {\n  if (state.done) return;\n  state.done = true;\n  if (unwrap) state = unwrap;\n  state.value = value;\n  state.state = REJECTED;\n  notify(promise, state, true);\n};\n\nvar internalResolve = function (promise, state, value, unwrap) {\n  if (state.done) return;\n  state.done = true;\n  if (unwrap) state = unwrap;\n  try {\n    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n    var then = isThenable(value);\n    if (then) {\n      microtask(function () {\n        var wrapper = { done: false };\n        try {\n          then.call(value,\n            bind(internalResolve, promise, wrapper, state),\n            bind(internalReject, promise, wrapper, state)\n          );\n        } catch (error) {\n          internalReject(promise, wrapper, error, state);\n        }\n      });\n    } else {\n      state.value = value;\n      state.state = FULFILLED;\n      notify(promise, state, false);\n    }\n  } catch (error) {\n    internalReject(promise, { done: false }, error, state);\n  }\n};\n\n// constructor polyfill\nif (FORCED) {\n  // 25.4.3.1 Promise(executor)\n  PromiseConstructor = function Promise(executor) {\n    anInstance(this, PromiseConstructor, PROMISE);\n    aFunction(executor);\n    Internal.call(this);\n    var state = getInternalState(this);\n    try {\n      executor(bind(internalResolve, this, state), bind(internalReject, this, state));\n    } catch (error) {\n      internalReject(this, state, error);\n    }\n  };\n  // eslint-disable-next-line no-unused-vars\n  Internal = function Promise(executor) {\n    setInternalState(this, {\n      type: PROMISE,\n      done: false,\n      notified: false,\n      parent: false,\n      reactions: [],\n      rejection: false,\n      state: PENDING,\n      value: undefined\n    });\n  };\n  Internal.prototype = redefineAll(PromiseConstructor.prototype, {\n    // `Promise.prototype.then` method\n    // https://tc39.github.io/ecma262/#sec-promise.prototype.then\n    then: function then(onFulfilled, onRejected) {\n      var state = getInternalPromiseState(this);\n      var reaction = newPromiseCapability(speciesConstructor(this, PromiseConstructor));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = IS_NODE ? process.domain : undefined;\n      state.parent = true;\n      state.reactions.push(reaction);\n      if (state.state != PENDING) notify(this, state, false);\n      return reaction.promise;\n    },\n    // `Promise.prototype.catch` method\n    // https://tc39.github.io/ecma262/#sec-promise.prototype.catch\n    'catch': function (onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function () {\n    var promise = new Internal();\n    var state = getInternalState(promise);\n    this.promise = promise;\n    this.resolve = bind(internalResolve, promise, state);\n    this.reject = bind(internalReject, promise, state);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {\n    return C === PromiseConstructor || C === PromiseWrapper\n      ? new OwnPromiseCapability(C)\n      : newGenericPromiseCapability(C);\n  };\n\n  if (!IS_PURE && typeof NativePromise == 'function') {\n    nativeThen = NativePromise.prototype.then;\n\n    // wrap native Promise#then for native async functions\n    redefine(NativePromise.prototype, 'then', function then(onFulfilled, onRejected) {\n      var that = this;\n      return new PromiseConstructor(function (resolve, reject) {\n        nativeThen.call(that, resolve, reject);\n      }).then(onFulfilled, onRejected);\n    // https://github.com/zloirock/core-js/issues/640\n    }, { unsafe: true });\n\n    // wrap fetch result\n    if (typeof $fetch == 'function') $({ global: true, enumerable: true, forced: true }, {\n      // eslint-disable-next-line no-unused-vars\n      fetch: function fetch(input /* , init */) {\n        return promiseResolve(PromiseConstructor, $fetch.apply(global, arguments));\n      }\n    });\n  }\n}\n\n$({ global: true, wrap: true, forced: FORCED }, {\n  Promise: PromiseConstructor\n});\n\nsetToStringTag(PromiseConstructor, PROMISE, false, true);\nsetSpecies(PROMISE);\n\nPromiseWrapper = getBuiltIn(PROMISE);\n\n// statics\n$({ target: PROMISE, stat: true, forced: FORCED }, {\n  // `Promise.reject` method\n  // https://tc39.github.io/ecma262/#sec-promise.reject\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    capability.reject.call(undefined, r);\n    return capability.promise;\n  }\n});\n\n$({ target: PROMISE, stat: true, forced: IS_PURE || FORCED }, {\n  // `Promise.resolve` method\n  // https://tc39.github.io/ecma262/#sec-promise.resolve\n  resolve: function resolve(x) {\n    return promiseResolve(IS_PURE && this === PromiseWrapper ? PromiseConstructor : this, x);\n  }\n});\n\n$({ target: PROMISE, stat: true, forced: INCORRECT_ITERATION }, {\n  // `Promise.all` method\n  // https://tc39.github.io/ecma262/#sec-promise.all\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var $promiseResolve = aFunction(C.resolve);\n      var values = [];\n      var counter = 0;\n      var remaining = 1;\n      iterate(iterable, function (promise) {\n        var index = counter++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        $promiseResolve.call(C, promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.error) reject(result.value);\n    return capability.promise;\n  },\n  // `Promise.race` method\n  // https://tc39.github.io/ecma262/#sec-promise.race\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      var $promiseResolve = aFunction(C.resolve);\n      iterate(iterable, function (promise) {\n        $promiseResolve.call(C, promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.error) reject(result.value);\n    return capability.promise;\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar aFunction = require('../internals/a-function');\nvar newPromiseCapabilityModule = require('../internals/new-promise-capability');\nvar perform = require('../internals/perform');\nvar iterate = require('../internals/iterate');\n\n// `Promise.allSettled` method\n// https://github.com/tc39/proposal-promise-allSettled\n$({ target: 'Promise', stat: true }, {\n  allSettled: function allSettled(iterable) {\n    var C = this;\n    var capability = newPromiseCapabilityModule.f(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var promiseResolve = aFunction(C.resolve);\n      var values = [];\n      var counter = 0;\n      var remaining = 1;\n      iterate(iterable, function (promise) {\n        var index = counter++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        promiseResolve.call(C, promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[index] = { status: 'fulfilled', value: value };\n          --remaining || resolve(values);\n        }, function (e) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[index] = { status: 'rejected', reason: e };\n          --remaining || resolve(values);\n        });\n      });\n      --remaining || resolve(values);\n    });\n    if (result.error) reject(result.value);\n    return capability.promise;\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar NativePromise = require('../internals/native-promise-constructor');\nvar fails = require('../internals/fails');\nvar getBuiltIn = require('../internals/get-built-in');\nvar speciesConstructor = require('../internals/species-constructor');\nvar promiseResolve = require('../internals/promise-resolve');\nvar redefine = require('../internals/redefine');\n\n// Safari bug https://bugs.webkit.org/show_bug.cgi?id=200829\nvar NON_GENERIC = !!NativePromise && fails(function () {\n  NativePromise.prototype['finally'].call({ then: function () { /* empty */ } }, function () { /* empty */ });\n});\n\n// `Promise.prototype.finally` method\n// https://tc39.github.io/ecma262/#sec-promise.prototype.finally\n$({ target: 'Promise', proto: true, real: true, forced: NON_GENERIC }, {\n  'finally': function (onFinally) {\n    var C = speciesConstructor(this, getBuiltIn('Promise'));\n    var isFunction = typeof onFinally == 'function';\n    return this.then(\n      isFunction ? function (x) {\n        return promiseResolve(C, onFinally()).then(function () { return x; });\n      } : onFinally,\n      isFunction ? function (e) {\n        return promiseResolve(C, onFinally()).then(function () { throw e; });\n      } : onFinally\n    );\n  }\n});\n\n// patch native Promise.prototype for native async functions\nif (!IS_PURE && typeof NativePromise == 'function' && !NativePromise.prototype['finally']) {\n  redefine(NativePromise.prototype, 'finally', getBuiltIn('Promise').prototype['finally']);\n}\n","'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar isForced = require('../internals/is-forced');\nvar redefine = require('../internals/redefine');\nvar InternalMetadataModule = require('../internals/internal-metadata');\nvar iterate = require('../internals/iterate');\nvar anInstance = require('../internals/an-instance');\nvar isObject = require('../internals/is-object');\nvar fails = require('../internals/fails');\nvar checkCorrectnessOfIteration = require('../internals/check-correctness-of-iteration');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar inheritIfRequired = require('../internals/inherit-if-required');\n\nmodule.exports = function (CONSTRUCTOR_NAME, wrapper, common) {\n  var IS_MAP = CONSTRUCTOR_NAME.indexOf('Map') !== -1;\n  var IS_WEAK = CONSTRUCTOR_NAME.indexOf('Weak') !== -1;\n  var ADDER = IS_MAP ? 'set' : 'add';\n  var NativeConstructor = global[CONSTRUCTOR_NAME];\n  var NativePrototype = NativeConstructor && NativeConstructor.prototype;\n  var Constructor = NativeConstructor;\n  var exported = {};\n\n  var fixMethod = function (KEY) {\n    var nativeMethod = NativePrototype[KEY];\n    redefine(NativePrototype, KEY,\n      KEY == 'add' ? function add(value) {\n        nativeMethod.call(this, value === 0 ? 0 : value);\n        return this;\n      } : KEY == 'delete' ? function (key) {\n        return IS_WEAK && !isObject(key) ? false : nativeMethod.call(this, key === 0 ? 0 : key);\n      } : KEY == 'get' ? function get(key) {\n        return IS_WEAK && !isObject(key) ? undefined : nativeMethod.call(this, key === 0 ? 0 : key);\n      } : KEY == 'has' ? function has(key) {\n        return IS_WEAK && !isObject(key) ? false : nativeMethod.call(this, key === 0 ? 0 : key);\n      } : function set(key, value) {\n        nativeMethod.call(this, key === 0 ? 0 : key, value);\n        return this;\n      }\n    );\n  };\n\n  // eslint-disable-next-line max-len\n  if (isForced(CONSTRUCTOR_NAME, typeof NativeConstructor != 'function' || !(IS_WEAK || NativePrototype.forEach && !fails(function () {\n    new NativeConstructor().entries().next();\n  })))) {\n    // create collection constructor\n    Constructor = common.getConstructor(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER);\n    InternalMetadataModule.REQUIRED = true;\n  } else if (isForced(CONSTRUCTOR_NAME, true)) {\n    var instance = new Constructor();\n    // early implementations not supports chaining\n    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;\n    // V8 ~ Chromium 40- weak-collections throws on primitives, but should return false\n    var THROWS_ON_PRIMITIVES = fails(function () { instance.has(1); });\n    // most early implementations doesn't supports iterables, most modern - not close it correctly\n    // eslint-disable-next-line no-new\n    var ACCEPT_ITERABLES = checkCorrectnessOfIteration(function (iterable) { new NativeConstructor(iterable); });\n    // for early implementations -0 and +0 not the same\n    var BUGGY_ZERO = !IS_WEAK && fails(function () {\n      // V8 ~ Chromium 42- fails only with 5+ elements\n      var $instance = new NativeConstructor();\n      var index = 5;\n      while (index--) $instance[ADDER](index, index);\n      return !$instance.has(-0);\n    });\n\n    if (!ACCEPT_ITERABLES) {\n      Constructor = wrapper(function (dummy, iterable) {\n        anInstance(dummy, Constructor, CONSTRUCTOR_NAME);\n        var that = inheritIfRequired(new NativeConstructor(), dummy, Constructor);\n        if (iterable != undefined) iterate(iterable, that[ADDER], that, IS_MAP);\n        return that;\n      });\n      Constructor.prototype = NativePrototype;\n      NativePrototype.constructor = Constructor;\n    }\n\n    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {\n      fixMethod('delete');\n      fixMethod('has');\n      IS_MAP && fixMethod('get');\n    }\n\n    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);\n\n    // weak collections should not contains .clear method\n    if (IS_WEAK && NativePrototype.clear) delete NativePrototype.clear;\n  }\n\n  exported[CONSTRUCTOR_NAME] = Constructor;\n  $({ global: true, forced: Constructor != NativeConstructor }, exported);\n\n  setToStringTag(Constructor, CONSTRUCTOR_NAME);\n\n  if (!IS_WEAK) common.setStrong(Constructor, CONSTRUCTOR_NAME, IS_MAP);\n\n  return Constructor;\n};\n","'use strict';\nvar defineProperty = require('../internals/object-define-property').f;\nvar create = require('../internals/object-create');\nvar redefineAll = require('../internals/redefine-all');\nvar bind = require('../internals/bind-context');\nvar anInstance = require('../internals/an-instance');\nvar iterate = require('../internals/iterate');\nvar defineIterator = require('../internals/define-iterator');\nvar setSpecies = require('../internals/set-species');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar fastKey = require('../internals/internal-metadata').fastKey;\nvar InternalStateModule = require('../internals/internal-state');\n\nvar setInternalState = InternalStateModule.set;\nvar internalStateGetterFor = InternalStateModule.getterFor;\n\nmodule.exports = {\n  getConstructor: function (wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      anInstance(that, C, CONSTRUCTOR_NAME);\n      setInternalState(that, {\n        type: CONSTRUCTOR_NAME,\n        index: create(null),\n        first: undefined,\n        last: undefined,\n        size: 0\n      });\n      if (!DESCRIPTORS) that.size = 0;\n      if (iterable != undefined) iterate(iterable, that[ADDER], that, IS_MAP);\n    });\n\n    var getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);\n\n    var define = function (that, key, value) {\n      var state = getInternalState(that);\n      var entry = getEntry(that, key);\n      var previous, index;\n      // change existing entry\n      if (entry) {\n        entry.value = value;\n      // create new entry\n      } else {\n        state.last = entry = {\n          index: index = fastKey(key, true),\n          key: key,\n          value: value,\n          previous: previous = state.last,\n          next: undefined,\n          removed: false\n        };\n        if (!state.first) state.first = entry;\n        if (previous) previous.next = entry;\n        if (DESCRIPTORS) state.size++;\n        else that.size++;\n        // add to index\n        if (index !== 'F') state.index[index] = entry;\n      } return that;\n    };\n\n    var getEntry = function (that, key) {\n      var state = getInternalState(that);\n      // fast case\n      var index = fastKey(key);\n      var entry;\n      if (index !== 'F') return state.index[index];\n      // frozen object case\n      for (entry = state.first; entry; entry = entry.next) {\n        if (entry.key == key) return entry;\n      }\n    };\n\n    redefineAll(C.prototype, {\n      // 23.1.3.1 Map.prototype.clear()\n      // 23.2.3.2 Set.prototype.clear()\n      clear: function clear() {\n        var that = this;\n        var state = getInternalState(that);\n        var data = state.index;\n        var entry = state.first;\n        while (entry) {\n          entry.removed = true;\n          if (entry.previous) entry.previous = entry.previous.next = undefined;\n          delete data[entry.index];\n          entry = entry.next;\n        }\n        state.first = state.last = undefined;\n        if (DESCRIPTORS) state.size = 0;\n        else that.size = 0;\n      },\n      // 23.1.3.3 Map.prototype.delete(key)\n      // 23.2.3.4 Set.prototype.delete(value)\n      'delete': function (key) {\n        var that = this;\n        var state = getInternalState(that);\n        var entry = getEntry(that, key);\n        if (entry) {\n          var next = entry.next;\n          var prev = entry.previous;\n          delete state.index[entry.index];\n          entry.removed = true;\n          if (prev) prev.next = next;\n          if (next) next.previous = prev;\n          if (state.first == entry) state.first = next;\n          if (state.last == entry) state.last = prev;\n          if (DESCRIPTORS) state.size--;\n          else that.size--;\n        } return !!entry;\n      },\n      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n      forEach: function forEach(callbackfn /* , that = undefined */) {\n        var state = getInternalState(this);\n        var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n        var entry;\n        while (entry = entry ? entry.next : state.first) {\n          boundFunction(entry.value, entry.key, this);\n          // revert to the last existing entry\n          while (entry && entry.removed) entry = entry.previous;\n        }\n      },\n      // 23.1.3.7 Map.prototype.has(key)\n      // 23.2.3.7 Set.prototype.has(value)\n      has: function has(key) {\n        return !!getEntry(this, key);\n      }\n    });\n\n    redefineAll(C.prototype, IS_MAP ? {\n      // 23.1.3.6 Map.prototype.get(key)\n      get: function get(key) {\n        var entry = getEntry(this, key);\n        return entry && entry.value;\n      },\n      // 23.1.3.9 Map.prototype.set(key, value)\n      set: function set(key, value) {\n        return define(this, key === 0 ? 0 : key, value);\n      }\n    } : {\n      // 23.2.3.1 Set.prototype.add(value)\n      add: function add(value) {\n        return define(this, value = value === 0 ? 0 : value, value);\n      }\n    });\n    if (DESCRIPTORS) defineProperty(C.prototype, 'size', {\n      get: function () {\n        return getInternalState(this).size;\n      }\n    });\n    return C;\n  },\n  setStrong: function (C, CONSTRUCTOR_NAME, IS_MAP) {\n    var ITERATOR_NAME = CONSTRUCTOR_NAME + ' Iterator';\n    var getInternalCollectionState = internalStateGetterFor(CONSTRUCTOR_NAME);\n    var getInternalIteratorState = internalStateGetterFor(ITERATOR_NAME);\n    // add .keys, .values, .entries, [@@iterator]\n    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n    defineIterator(C, CONSTRUCTOR_NAME, function (iterated, kind) {\n      setInternalState(this, {\n        type: ITERATOR_NAME,\n        target: iterated,\n        state: getInternalCollectionState(iterated),\n        kind: kind,\n        last: undefined\n      });\n    }, function () {\n      var state = getInternalIteratorState(this);\n      var kind = state.kind;\n      var entry = state.last;\n      // revert to the last existing entry\n      while (entry && entry.removed) entry = entry.previous;\n      // get next entry\n      if (!state.target || !(state.last = entry = entry ? entry.next : state.state.first)) {\n        // or finish the iteration\n        state.target = undefined;\n        return { value: undefined, done: true };\n      }\n      // return step by kind\n      if (kind == 'keys') return { value: entry.key, done: false };\n      if (kind == 'values') return { value: entry.value, done: false };\n      return { value: [entry.key, entry.value], done: false };\n    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);\n\n    // add [@@species], 23.1.2.2, 23.2.2.2\n    setSpecies(CONSTRUCTOR_NAME);\n  }\n};\n","'use strict';\nvar collection = require('../internals/collection');\nvar collectionStrong = require('../internals/collection-strong');\n\n// `Map` constructor\n// https://tc39.github.io/ecma262/#sec-map-objects\nmodule.exports = collection('Map', function (init) {\n  return function Map() { return init(this, arguments.length ? arguments[0] : undefined); };\n}, collectionStrong);\n","'use strict';\nvar collection = require('../internals/collection');\nvar collectionStrong = require('../internals/collection-strong');\n\n// `Set` constructor\n// https://tc39.github.io/ecma262/#sec-set-objects\nmodule.exports = collection('Set', function (init) {\n  return function Set() { return init(this, arguments.length ? arguments[0] : undefined); };\n}, collectionStrong);\n","'use strict';\nvar redefineAll = require('../internals/redefine-all');\nvar getWeakData = require('../internals/internal-metadata').getWeakData;\nvar anObject = require('../internals/an-object');\nvar isObject = require('../internals/is-object');\nvar anInstance = require('../internals/an-instance');\nvar iterate = require('../internals/iterate');\nvar ArrayIterationModule = require('../internals/array-iteration');\nvar $has = require('../internals/has');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar setInternalState = InternalStateModule.set;\nvar internalStateGetterFor = InternalStateModule.getterFor;\nvar find = ArrayIterationModule.find;\nvar findIndex = ArrayIterationModule.findIndex;\nvar id = 0;\n\n// fallback for uncaught frozen keys\nvar uncaughtFrozenStore = function (store) {\n  return store.frozen || (store.frozen = new UncaughtFrozenStore());\n};\n\nvar UncaughtFrozenStore = function () {\n  this.entries = [];\n};\n\nvar findUncaughtFrozen = function (store, key) {\n  return find(store.entries, function (it) {\n    return it[0] === key;\n  });\n};\n\nUncaughtFrozenStore.prototype = {\n  get: function (key) {\n    var entry = findUncaughtFrozen(this, key);\n    if (entry) return entry[1];\n  },\n  has: function (key) {\n    return !!findUncaughtFrozen(this, key);\n  },\n  set: function (key, value) {\n    var entry = findUncaughtFrozen(this, key);\n    if (entry) entry[1] = value;\n    else this.entries.push([key, value]);\n  },\n  'delete': function (key) {\n    var index = findIndex(this.entries, function (it) {\n      return it[0] === key;\n    });\n    if (~index) this.entries.splice(index, 1);\n    return !!~index;\n  }\n};\n\nmodule.exports = {\n  getConstructor: function (wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      anInstance(that, C, CONSTRUCTOR_NAME);\n      setInternalState(that, {\n        type: CONSTRUCTOR_NAME,\n        id: id++,\n        frozen: undefined\n      });\n      if (iterable != undefined) iterate(iterable, that[ADDER], that, IS_MAP);\n    });\n\n    var getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);\n\n    var define = function (that, key, value) {\n      var state = getInternalState(that);\n      var data = getWeakData(anObject(key), true);\n      if (data === true) uncaughtFrozenStore(state).set(key, value);\n      else data[state.id] = value;\n      return that;\n    };\n\n    redefineAll(C.prototype, {\n      // 23.3.3.2 WeakMap.prototype.delete(key)\n      // 23.4.3.3 WeakSet.prototype.delete(value)\n      'delete': function (key) {\n        var state = getInternalState(this);\n        if (!isObject(key)) return false;\n        var data = getWeakData(key);\n        if (data === true) return uncaughtFrozenStore(state)['delete'](key);\n        return data && $has(data, state.id) && delete data[state.id];\n      },\n      // 23.3.3.4 WeakMap.prototype.has(key)\n      // 23.4.3.4 WeakSet.prototype.has(value)\n      has: function has(key) {\n        var state = getInternalState(this);\n        if (!isObject(key)) return false;\n        var data = getWeakData(key);\n        if (data === true) return uncaughtFrozenStore(state).has(key);\n        return data && $has(data, state.id);\n      }\n    });\n\n    redefineAll(C.prototype, IS_MAP ? {\n      // 23.3.3.3 WeakMap.prototype.get(key)\n      get: function get(key) {\n        var state = getInternalState(this);\n        if (isObject(key)) {\n          var data = getWeakData(key);\n          if (data === true) return uncaughtFrozenStore(state).get(key);\n          return data ? data[state.id] : undefined;\n        }\n      },\n      // 23.3.3.5 WeakMap.prototype.set(key, value)\n      set: function set(key, value) {\n        return define(this, key, value);\n      }\n    } : {\n      // 23.4.3.1 WeakSet.prototype.add(value)\n      add: function add(value) {\n        return define(this, value, true);\n      }\n    });\n\n    return C;\n  }\n};\n","'use strict';\nvar global = require('../internals/global');\nvar redefineAll = require('../internals/redefine-all');\nvar InternalMetadataModule = require('../internals/internal-metadata');\nvar collection = require('../internals/collection');\nvar collectionWeak = require('../internals/collection-weak');\nvar isObject = require('../internals/is-object');\nvar enforceIternalState = require('../internals/internal-state').enforce;\nvar NATIVE_WEAK_MAP = require('../internals/native-weak-map');\n\nvar IS_IE11 = !global.ActiveXObject && 'ActiveXObject' in global;\nvar isExtensible = Object.isExtensible;\nvar InternalWeakMap;\n\nvar wrapper = function (init) {\n  return function WeakMap() {\n    return init(this, arguments.length ? arguments[0] : undefined);\n  };\n};\n\n// `WeakMap` constructor\n// https://tc39.github.io/ecma262/#sec-weakmap-constructor\nvar $WeakMap = module.exports = collection('WeakMap', wrapper, collectionWeak);\n\n// IE11 WeakMap frozen keys fix\n// We can't use feature detection because it crash some old IE builds\n// https://github.com/zloirock/core-js/issues/485\nif (NATIVE_WEAK_MAP && IS_IE11) {\n  InternalWeakMap = collectionWeak.getConstructor(wrapper, 'WeakMap', true);\n  InternalMetadataModule.REQUIRED = true;\n  var WeakMapPrototype = $WeakMap.prototype;\n  var nativeDelete = WeakMapPrototype['delete'];\n  var nativeHas = WeakMapPrototype.has;\n  var nativeGet = WeakMapPrototype.get;\n  var nativeSet = WeakMapPrototype.set;\n  redefineAll(WeakMapPrototype, {\n    'delete': function (key) {\n      if (isObject(key) && !isExtensible(key)) {\n        var state = enforceIternalState(this);\n        if (!state.frozen) state.frozen = new InternalWeakMap();\n        return nativeDelete.call(this, key) || state.frozen['delete'](key);\n      } return nativeDelete.call(this, key);\n    },\n    has: function has(key) {\n      if (isObject(key) && !isExtensible(key)) {\n        var state = enforceIternalState(this);\n        if (!state.frozen) state.frozen = new InternalWeakMap();\n        return nativeHas.call(this, key) || state.frozen.has(key);\n      } return nativeHas.call(this, key);\n    },\n    get: function get(key) {\n      if (isObject(key) && !isExtensible(key)) {\n        var state = enforceIternalState(this);\n        if (!state.frozen) state.frozen = new InternalWeakMap();\n        return nativeHas.call(this, key) ? nativeGet.call(this, key) : state.frozen.get(key);\n      } return nativeGet.call(this, key);\n    },\n    set: function set(key, value) {\n      if (isObject(key) && !isExtensible(key)) {\n        var state = enforceIternalState(this);\n        if (!state.frozen) state.frozen = new InternalWeakMap();\n        nativeHas.call(this, key) ? nativeSet.call(this, key, value) : state.frozen.set(key, value);\n      } else nativeSet.call(this, key, value);\n      return this;\n    }\n  });\n}\n","'use strict';\nvar collection = require('../internals/collection');\nvar collectionWeak = require('../internals/collection-weak');\n\n// `WeakSet` constructor\n// https://tc39.github.io/ecma262/#sec-weakset-constructor\ncollection('WeakSet', function (init) {\n  return function WeakSet() { return init(this, arguments.length ? arguments[0] : undefined); };\n}, collectionWeak);\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar isObject = require('../internals/is-object');\nvar has = require('../internals/has');\nvar classof = require('../internals/classof');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar defineProperty = require('../internals/object-define-property').f;\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar uid = require('../internals/uid');\n\nvar DataView = global.DataView;\nvar DataViewPrototype = DataView && DataView.prototype;\nvar Int8Array = global.Int8Array;\nvar Int8ArrayPrototype = Int8Array && Int8Array.prototype;\nvar Uint8ClampedArray = global.Uint8ClampedArray;\nvar Uint8ClampedArrayPrototype = Uint8ClampedArray && Uint8ClampedArray.prototype;\nvar TypedArray = Int8Array && getPrototypeOf(Int8Array);\nvar TypedArrayPrototype = Int8ArrayPrototype && getPrototypeOf(Int8ArrayPrototype);\nvar ObjectPrototype = Object.prototype;\nvar isPrototypeOf = ObjectPrototype.isPrototypeOf;\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar TYPED_ARRAY_TAG = uid('TYPED_ARRAY_TAG');\nvar NATIVE_ARRAY_BUFFER = !!(global.ArrayBuffer && DataView);\n// Fixing native typed arrays in Opera Presto crashes the browser, see #595\nvar NATIVE_ARRAY_BUFFER_VIEWS = NATIVE_ARRAY_BUFFER && !!setPrototypeOf && classof(global.opera) !== 'Opera';\nvar TYPED_ARRAY_TAG_REQIRED = false;\nvar NAME;\n\nvar TypedArrayConstructorsList = {\n  Int8Array: 1,\n  Uint8Array: 1,\n  Uint8ClampedArray: 1,\n  Int16Array: 2,\n  Uint16Array: 2,\n  Int32Array: 4,\n  Uint32Array: 4,\n  Float32Array: 4,\n  Float64Array: 8\n};\n\nvar isView = function isView(it) {\n  var klass = classof(it);\n  return klass === 'DataView' || has(TypedArrayConstructorsList, klass);\n};\n\nvar isTypedArray = function (it) {\n  return isObject(it) && has(TypedArrayConstructorsList, classof(it));\n};\n\nvar aTypedArray = function (it) {\n  if (isTypedArray(it)) return it;\n  throw TypeError('Target is not a typed array');\n};\n\nvar aTypedArrayConstructor = function (C) {\n  if (setPrototypeOf) {\n    if (isPrototypeOf.call(TypedArray, C)) return C;\n  } else for (var ARRAY in TypedArrayConstructorsList) if (has(TypedArrayConstructorsList, NAME)) {\n    var TypedArrayConstructor = global[ARRAY];\n    if (TypedArrayConstructor && (C === TypedArrayConstructor || isPrototypeOf.call(TypedArrayConstructor, C))) {\n      return C;\n    }\n  } throw TypeError('Target is not a typed array constructor');\n};\n\nvar exportTypedArrayMethod = function (KEY, property, forced) {\n  if (!DESCRIPTORS) return;\n  if (forced) for (var ARRAY in TypedArrayConstructorsList) {\n    var TypedArrayConstructor = global[ARRAY];\n    if (TypedArrayConstructor && has(TypedArrayConstructor.prototype, KEY)) {\n      delete TypedArrayConstructor.prototype[KEY];\n    }\n  }\n  if (!TypedArrayPrototype[KEY] || forced) {\n    redefine(TypedArrayPrototype, KEY, forced ? property\n      : NATIVE_ARRAY_BUFFER_VIEWS && Int8ArrayPrototype[KEY] || property);\n  }\n};\n\nvar exportTypedArrayStaticMethod = function (KEY, property, forced) {\n  var ARRAY, TypedArrayConstructor;\n  if (!DESCRIPTORS) return;\n  if (setPrototypeOf) {\n    if (forced) for (ARRAY in TypedArrayConstructorsList) {\n      TypedArrayConstructor = global[ARRAY];\n      if (TypedArrayConstructor && has(TypedArrayConstructor, KEY)) {\n        delete TypedArrayConstructor[KEY];\n      }\n    }\n    if (!TypedArray[KEY] || forced) {\n      // V8 ~ Chrome 49-50 `%TypedArray%` methods are non-writable non-configurable\n      try {\n        return redefine(TypedArray, KEY, forced ? property : NATIVE_ARRAY_BUFFER_VIEWS && Int8Array[KEY] || property);\n      } catch (error) { /* empty */ }\n    } else return;\n  }\n  for (ARRAY in TypedArrayConstructorsList) {\n    TypedArrayConstructor = global[ARRAY];\n    if (TypedArrayConstructor && (!TypedArrayConstructor[KEY] || forced)) {\n      redefine(TypedArrayConstructor, KEY, property);\n    }\n  }\n};\n\nfor (NAME in TypedArrayConstructorsList) {\n  if (!global[NAME]) NATIVE_ARRAY_BUFFER_VIEWS = false;\n}\n\n// WebKit bug - typed arrays constructors prototype is Object.prototype\nif (!NATIVE_ARRAY_BUFFER_VIEWS || typeof TypedArray != 'function' || TypedArray === Function.prototype) {\n  // eslint-disable-next-line no-shadow\n  TypedArray = function TypedArray() {\n    throw TypeError('Incorrect invocation');\n  };\n  if (NATIVE_ARRAY_BUFFER_VIEWS) for (NAME in TypedArrayConstructorsList) {\n    if (global[NAME]) setPrototypeOf(global[NAME], TypedArray);\n  }\n}\n\nif (!NATIVE_ARRAY_BUFFER_VIEWS || !TypedArrayPrototype || TypedArrayPrototype === ObjectPrototype) {\n  TypedArrayPrototype = TypedArray.prototype;\n  if (NATIVE_ARRAY_BUFFER_VIEWS) for (NAME in TypedArrayConstructorsList) {\n    if (global[NAME]) setPrototypeOf(global[NAME].prototype, TypedArrayPrototype);\n  }\n}\n\n// WebKit bug - one more object in Uint8ClampedArray prototype chain\nif (NATIVE_ARRAY_BUFFER_VIEWS && getPrototypeOf(Uint8ClampedArrayPrototype) !== TypedArrayPrototype) {\n  setPrototypeOf(Uint8ClampedArrayPrototype, TypedArrayPrototype);\n}\n\nif (DESCRIPTORS && !has(TypedArrayPrototype, TO_STRING_TAG)) {\n  TYPED_ARRAY_TAG_REQIRED = true;\n  defineProperty(TypedArrayPrototype, TO_STRING_TAG, { get: function () {\n    return isObject(this) ? this[TYPED_ARRAY_TAG] : undefined;\n  } });\n  for (NAME in TypedArrayConstructorsList) if (global[NAME]) {\n    createNonEnumerableProperty(global[NAME], TYPED_ARRAY_TAG, NAME);\n  }\n}\n\n// WebKit bug - the same parent prototype for typed arrays and data view\nif (NATIVE_ARRAY_BUFFER && setPrototypeOf && getPrototypeOf(DataViewPrototype) !== ObjectPrototype) {\n  setPrototypeOf(DataViewPrototype, ObjectPrototype);\n}\n\nmodule.exports = {\n  NATIVE_ARRAY_BUFFER: NATIVE_ARRAY_BUFFER,\n  NATIVE_ARRAY_BUFFER_VIEWS: NATIVE_ARRAY_BUFFER_VIEWS,\n  TYPED_ARRAY_TAG: TYPED_ARRAY_TAG_REQIRED && TYPED_ARRAY_TAG,\n  aTypedArray: aTypedArray,\n  aTypedArrayConstructor: aTypedArrayConstructor,\n  exportTypedArrayMethod: exportTypedArrayMethod,\n  exportTypedArrayStaticMethod: exportTypedArrayStaticMethod,\n  isView: isView,\n  isTypedArray: isTypedArray,\n  TypedArray: TypedArray,\n  TypedArrayPrototype: TypedArrayPrototype\n};\n","var toInteger = require('../internals/to-integer');\nvar toLength = require('../internals/to-length');\n\n// `ToIndex` abstract operation\n// https://tc39.github.io/ecma262/#sec-toindex\nmodule.exports = function (it) {\n  if (it === undefined) return 0;\n  var number = toInteger(it);\n  var length = toLength(number);\n  if (number !== length) throw RangeError('Wrong length or index');\n  return length;\n};\n","// IEEE754 conversions based on https://github.com/feross/ieee754\n// eslint-disable-next-line no-shadow-restricted-names\nvar Infinity = 1 / 0;\nvar abs = Math.abs;\nvar pow = Math.pow;\nvar floor = Math.floor;\nvar log = Math.log;\nvar LN2 = Math.LN2;\n\nvar pack = function (number, mantissaLength, bytes) {\n  var buffer = new Array(bytes);\n  var exponentLength = bytes * 8 - mantissaLength - 1;\n  var eMax = (1 << exponentLength) - 1;\n  var eBias = eMax >> 1;\n  var rt = mantissaLength === 23 ? pow(2, -24) - pow(2, -77) : 0;\n  var sign = number < 0 || number === 0 && 1 / number < 0 ? 1 : 0;\n  var index = 0;\n  var exponent, mantissa, c;\n  number = abs(number);\n  // eslint-disable-next-line no-self-compare\n  if (number != number || number === Infinity) {\n    // eslint-disable-next-line no-self-compare\n    mantissa = number != number ? 1 : 0;\n    exponent = eMax;\n  } else {\n    exponent = floor(log(number) / LN2);\n    if (number * (c = pow(2, -exponent)) < 1) {\n      exponent--;\n      c *= 2;\n    }\n    if (exponent + eBias >= 1) {\n      number += rt / c;\n    } else {\n      number += rt * pow(2, 1 - eBias);\n    }\n    if (number * c >= 2) {\n      exponent++;\n      c /= 2;\n    }\n    if (exponent + eBias >= eMax) {\n      mantissa = 0;\n      exponent = eMax;\n    } else if (exponent + eBias >= 1) {\n      mantissa = (number * c - 1) * pow(2, mantissaLength);\n      exponent = exponent + eBias;\n    } else {\n      mantissa = number * pow(2, eBias - 1) * pow(2, mantissaLength);\n      exponent = 0;\n    }\n  }\n  for (; mantissaLength >= 8; buffer[index++] = mantissa & 255, mantissa /= 256, mantissaLength -= 8);\n  exponent = exponent << mantissaLength | mantissa;\n  exponentLength += mantissaLength;\n  for (; exponentLength > 0; buffer[index++] = exponent & 255, exponent /= 256, exponentLength -= 8);\n  buffer[--index] |= sign * 128;\n  return buffer;\n};\n\nvar unpack = function (buffer, mantissaLength) {\n  var bytes = buffer.length;\n  var exponentLength = bytes * 8 - mantissaLength - 1;\n  var eMax = (1 << exponentLength) - 1;\n  var eBias = eMax >> 1;\n  var nBits = exponentLength - 7;\n  var index = bytes - 1;\n  var sign = buffer[index--];\n  var exponent = sign & 127;\n  var mantissa;\n  sign >>= 7;\n  for (; nBits > 0; exponent = exponent * 256 + buffer[index], index--, nBits -= 8);\n  mantissa = exponent & (1 << -nBits) - 1;\n  exponent >>= -nBits;\n  nBits += mantissaLength;\n  for (; nBits > 0; mantissa = mantissa * 256 + buffer[index], index--, nBits -= 8);\n  if (exponent === 0) {\n    exponent = 1 - eBias;\n  } else if (exponent === eMax) {\n    return mantissa ? NaN : sign ? -Infinity : Infinity;\n  } else {\n    mantissa = mantissa + pow(2, mantissaLength);\n    exponent = exponent - eBias;\n  } return (sign ? -1 : 1) * mantissa * pow(2, exponent - mantissaLength);\n};\n\nmodule.exports = {\n  pack: pack,\n  unpack: unpack\n};\n","'use strict';\nvar global = require('../internals/global');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar NATIVE_ARRAY_BUFFER = require('../internals/array-buffer-view-core').NATIVE_ARRAY_BUFFER;\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefineAll = require('../internals/redefine-all');\nvar fails = require('../internals/fails');\nvar anInstance = require('../internals/an-instance');\nvar toInteger = require('../internals/to-integer');\nvar toLength = require('../internals/to-length');\nvar toIndex = require('../internals/to-index');\nvar IEEE754 = require('../internals/ieee754');\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar defineProperty = require('../internals/object-define-property').f;\nvar arrayFill = require('../internals/array-fill');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar getInternalState = InternalStateModule.get;\nvar setInternalState = InternalStateModule.set;\nvar ARRAY_BUFFER = 'ArrayBuffer';\nvar DATA_VIEW = 'DataView';\nvar PROTOTYPE = 'prototype';\nvar WRONG_LENGTH = 'Wrong length';\nvar WRONG_INDEX = 'Wrong index';\nvar NativeArrayBuffer = global[ARRAY_BUFFER];\nvar $ArrayBuffer = NativeArrayBuffer;\nvar $DataView = global[DATA_VIEW];\nvar RangeError = global.RangeError;\n\nvar packIEEE754 = IEEE754.pack;\nvar unpackIEEE754 = IEEE754.unpack;\n\nvar packInt8 = function (number) {\n  return [number & 0xFF];\n};\n\nvar packInt16 = function (number) {\n  return [number & 0xFF, number >> 8 & 0xFF];\n};\n\nvar packInt32 = function (number) {\n  return [number & 0xFF, number >> 8 & 0xFF, number >> 16 & 0xFF, number >> 24 & 0xFF];\n};\n\nvar unpackInt32 = function (buffer) {\n  return buffer[3] << 24 | buffer[2] << 16 | buffer[1] << 8 | buffer[0];\n};\n\nvar packFloat32 = function (number) {\n  return packIEEE754(number, 23, 4);\n};\n\nvar packFloat64 = function (number) {\n  return packIEEE754(number, 52, 8);\n};\n\nvar addGetter = function (Constructor, key) {\n  defineProperty(Constructor[PROTOTYPE], key, { get: function () { return getInternalState(this)[key]; } });\n};\n\nvar get = function (view, count, index, isLittleEndian) {\n  var intIndex = toIndex(index);\n  var store = getInternalState(view);\n  if (intIndex + count > store.byteLength) throw RangeError(WRONG_INDEX);\n  var bytes = getInternalState(store.buffer).bytes;\n  var start = intIndex + store.byteOffset;\n  var pack = bytes.slice(start, start + count);\n  return isLittleEndian ? pack : pack.reverse();\n};\n\nvar set = function (view, count, index, conversion, value, isLittleEndian) {\n  var intIndex = toIndex(index);\n  var store = getInternalState(view);\n  if (intIndex + count > store.byteLength) throw RangeError(WRONG_INDEX);\n  var bytes = getInternalState(store.buffer).bytes;\n  var start = intIndex + store.byteOffset;\n  var pack = conversion(+value);\n  for (var i = 0; i < count; i++) bytes[start + i] = pack[isLittleEndian ? i : count - i - 1];\n};\n\nif (!NATIVE_ARRAY_BUFFER) {\n  $ArrayBuffer = function ArrayBuffer(length) {\n    anInstance(this, $ArrayBuffer, ARRAY_BUFFER);\n    var byteLength = toIndex(length);\n    setInternalState(this, {\n      bytes: arrayFill.call(new Array(byteLength), 0),\n      byteLength: byteLength\n    });\n    if (!DESCRIPTORS) this.byteLength = byteLength;\n  };\n\n  $DataView = function DataView(buffer, byteOffset, byteLength) {\n    anInstance(this, $DataView, DATA_VIEW);\n    anInstance(buffer, $ArrayBuffer, DATA_VIEW);\n    var bufferLength = getInternalState(buffer).byteLength;\n    var offset = toInteger(byteOffset);\n    if (offset < 0 || offset > bufferLength) throw RangeError('Wrong offset');\n    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);\n    if (offset + byteLength > bufferLength) throw RangeError(WRONG_LENGTH);\n    setInternalState(this, {\n      buffer: buffer,\n      byteLength: byteLength,\n      byteOffset: offset\n    });\n    if (!DESCRIPTORS) {\n      this.buffer = buffer;\n      this.byteLength = byteLength;\n      this.byteOffset = offset;\n    }\n  };\n\n  if (DESCRIPTORS) {\n    addGetter($ArrayBuffer, 'byteLength');\n    addGetter($DataView, 'buffer');\n    addGetter($DataView, 'byteLength');\n    addGetter($DataView, 'byteOffset');\n  }\n\n  redefineAll($DataView[PROTOTYPE], {\n    getInt8: function getInt8(byteOffset) {\n      return get(this, 1, byteOffset)[0] << 24 >> 24;\n    },\n    getUint8: function getUint8(byteOffset) {\n      return get(this, 1, byteOffset)[0];\n    },\n    getInt16: function getInt16(byteOffset /* , littleEndian */) {\n      var bytes = get(this, 2, byteOffset, arguments.length > 1 ? arguments[1] : undefined);\n      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;\n    },\n    getUint16: function getUint16(byteOffset /* , littleEndian */) {\n      var bytes = get(this, 2, byteOffset, arguments.length > 1 ? arguments[1] : undefined);\n      return bytes[1] << 8 | bytes[0];\n    },\n    getInt32: function getInt32(byteOffset /* , littleEndian */) {\n      return unpackInt32(get(this, 4, byteOffset, arguments.length > 1 ? arguments[1] : undefined));\n    },\n    getUint32: function getUint32(byteOffset /* , littleEndian */) {\n      return unpackInt32(get(this, 4, byteOffset, arguments.length > 1 ? arguments[1] : undefined)) >>> 0;\n    },\n    getFloat32: function getFloat32(byteOffset /* , littleEndian */) {\n      return unpackIEEE754(get(this, 4, byteOffset, arguments.length > 1 ? arguments[1] : undefined), 23);\n    },\n    getFloat64: function getFloat64(byteOffset /* , littleEndian */) {\n      return unpackIEEE754(get(this, 8, byteOffset, arguments.length > 1 ? arguments[1] : undefined), 52);\n    },\n    setInt8: function setInt8(byteOffset, value) {\n      set(this, 1, byteOffset, packInt8, value);\n    },\n    setUint8: function setUint8(byteOffset, value) {\n      set(this, 1, byteOffset, packInt8, value);\n    },\n    setInt16: function setInt16(byteOffset, value /* , littleEndian */) {\n      set(this, 2, byteOffset, packInt16, value, arguments.length > 2 ? arguments[2] : undefined);\n    },\n    setUint16: function setUint16(byteOffset, value /* , littleEndian */) {\n      set(this, 2, byteOffset, packInt16, value, arguments.length > 2 ? arguments[2] : undefined);\n    },\n    setInt32: function setInt32(byteOffset, value /* , littleEndian */) {\n      set(this, 4, byteOffset, packInt32, value, arguments.length > 2 ? arguments[2] : undefined);\n    },\n    setUint32: function setUint32(byteOffset, value /* , littleEndian */) {\n      set(this, 4, byteOffset, packInt32, value, arguments.length > 2 ? arguments[2] : undefined);\n    },\n    setFloat32: function setFloat32(byteOffset, value /* , littleEndian */) {\n      set(this, 4, byteOffset, packFloat32, value, arguments.length > 2 ? arguments[2] : undefined);\n    },\n    setFloat64: function setFloat64(byteOffset, value /* , littleEndian */) {\n      set(this, 8, byteOffset, packFloat64, value, arguments.length > 2 ? arguments[2] : undefined);\n    }\n  });\n} else {\n  if (!fails(function () {\n    NativeArrayBuffer(1);\n  }) || !fails(function () {\n    new NativeArrayBuffer(-1); // eslint-disable-line no-new\n  }) || fails(function () {\n    new NativeArrayBuffer(); // eslint-disable-line no-new\n    new NativeArrayBuffer(1.5); // eslint-disable-line no-new\n    new NativeArrayBuffer(NaN); // eslint-disable-line no-new\n    return NativeArrayBuffer.name != ARRAY_BUFFER;\n  })) {\n    $ArrayBuffer = function ArrayBuffer(length) {\n      anInstance(this, $ArrayBuffer);\n      return new NativeArrayBuffer(toIndex(length));\n    };\n    var ArrayBufferPrototype = $ArrayBuffer[PROTOTYPE] = NativeArrayBuffer[PROTOTYPE];\n    for (var keys = getOwnPropertyNames(NativeArrayBuffer), j = 0, key; keys.length > j;) {\n      if (!((key = keys[j++]) in $ArrayBuffer)) {\n        createNonEnumerableProperty($ArrayBuffer, key, NativeArrayBuffer[key]);\n      }\n    }\n    ArrayBufferPrototype.constructor = $ArrayBuffer;\n  }\n  // iOS Safari 7.x bug\n  var testView = new $DataView(new $ArrayBuffer(2));\n  var nativeSetInt8 = $DataView[PROTOTYPE].setInt8;\n  testView.setInt8(0, 2147483648);\n  testView.setInt8(1, 2147483649);\n  if (testView.getInt8(0) || !testView.getInt8(1)) redefineAll($DataView[PROTOTYPE], {\n    setInt8: function setInt8(byteOffset, value) {\n      nativeSetInt8.call(this, byteOffset, value << 24 >> 24);\n    },\n    setUint8: function setUint8(byteOffset, value) {\n      nativeSetInt8.call(this, byteOffset, value << 24 >> 24);\n    }\n  }, { unsafe: true });\n}\n\nsetToStringTag($ArrayBuffer, ARRAY_BUFFER);\nsetToStringTag($DataView, DATA_VIEW);\n\nmodule.exports = {\n  ArrayBuffer: $ArrayBuffer,\n  DataView: $DataView\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar arrayBufferModule = require('../internals/array-buffer');\nvar setSpecies = require('../internals/set-species');\n\nvar ARRAY_BUFFER = 'ArrayBuffer';\nvar ArrayBuffer = arrayBufferModule[ARRAY_BUFFER];\nvar NativeArrayBuffer = global[ARRAY_BUFFER];\n\n// `ArrayBuffer` constructor\n// https://tc39.github.io/ecma262/#sec-arraybuffer-constructor\n$({ global: true, forced: NativeArrayBuffer !== ArrayBuffer }, {\n  ArrayBuffer: ArrayBuffer\n});\n\nsetSpecies(ARRAY_BUFFER);\n","var $ = require('../internals/export');\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\n\nvar NATIVE_ARRAY_BUFFER_VIEWS = ArrayBufferViewCore.NATIVE_ARRAY_BUFFER_VIEWS;\n\n// `ArrayBuffer.isView` method\n// https://tc39.github.io/ecma262/#sec-arraybuffer.isview\n$({ target: 'ArrayBuffer', stat: true, forced: !NATIVE_ARRAY_BUFFER_VIEWS }, {\n  isView: ArrayBufferViewCore.isView\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar ArrayBufferModule = require('../internals/array-buffer');\nvar anObject = require('../internals/an-object');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar toLength = require('../internals/to-length');\nvar speciesConstructor = require('../internals/species-constructor');\n\nvar ArrayBuffer = ArrayBufferModule.ArrayBuffer;\nvar DataView = ArrayBufferModule.DataView;\nvar nativeArrayBufferSlice = ArrayBuffer.prototype.slice;\n\nvar INCORRECT_SLICE = fails(function () {\n  return !new ArrayBuffer(2).slice(1, undefined).byteLength;\n});\n\n// `ArrayBuffer.prototype.slice` method\n// https://tc39.github.io/ecma262/#sec-arraybuffer.prototype.slice\n$({ target: 'ArrayBuffer', proto: true, unsafe: true, forced: INCORRECT_SLICE }, {\n  slice: function slice(start, end) {\n    if (nativeArrayBufferSlice !== undefined && end === undefined) {\n      return nativeArrayBufferSlice.call(anObject(this), start); // FF fix\n    }\n    var length = anObject(this).byteLength;\n    var first = toAbsoluteIndex(start, length);\n    var fin = toAbsoluteIndex(end === undefined ? length : end, length);\n    var result = new (speciesConstructor(this, ArrayBuffer))(toLength(fin - first));\n    var viewSource = new DataView(this);\n    var viewTarget = new DataView(result);\n    var index = 0;\n    while (first < fin) {\n      viewTarget.setUint8(index++, viewSource.getUint8(first++));\n    } return result;\n  }\n});\n","var $ = require('../internals/export');\nvar ArrayBufferModule = require('../internals/array-buffer');\nvar NATIVE_ARRAY_BUFFER = require('../internals/array-buffer-view-core').NATIVE_ARRAY_BUFFER;\n\n// `DataView` constructor\n// https://tc39.github.io/ecma262/#sec-dataview-constructor\n$({ global: true, forced: !NATIVE_ARRAY_BUFFER }, {\n  DataView: ArrayBufferModule.DataView\n});\n","/* eslint-disable no-new */\nvar global = require('../internals/global');\nvar fails = require('../internals/fails');\nvar checkCorrectnessOfIteration = require('../internals/check-correctness-of-iteration');\nvar NATIVE_ARRAY_BUFFER_VIEWS = require('../internals/array-buffer-view-core').NATIVE_ARRAY_BUFFER_VIEWS;\n\nvar ArrayBuffer = global.ArrayBuffer;\nvar Int8Array = global.Int8Array;\n\nmodule.exports = !NATIVE_ARRAY_BUFFER_VIEWS || !fails(function () {\n  Int8Array(1);\n}) || !fails(function () {\n  new Int8Array(-1);\n}) || !checkCorrectnessOfIteration(function (iterable) {\n  new Int8Array();\n  new Int8Array(null);\n  new Int8Array(1.5);\n  new Int8Array(iterable);\n}, true) || fails(function () {\n  // Safari (11+) bug - a reason why even Safari 13 should load a typed array polyfill\n  return new Int8Array(new ArrayBuffer(2), 1, undefined).length !== 1;\n});\n","var toInteger = require('../internals/to-integer');\n\nmodule.exports = function (it) {\n  var result = toInteger(it);\n  if (result < 0) throw RangeError(\"The argument can't be less than 0\");\n  return result;\n};\n","var toPositiveInteger = require('../internals/to-positive-integer');\n\nmodule.exports = function (it, BYTES) {\n  var offset = toPositiveInteger(it);\n  if (offset % BYTES) throw RangeError('Wrong offset');\n  return offset;\n};\n","var toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar getIteratorMethod = require('../internals/get-iterator-method');\nvar isArrayIteratorMethod = require('../internals/is-array-iterator-method');\nvar bind = require('../internals/bind-context');\nvar aTypedArrayConstructor = require('../internals/array-buffer-view-core').aTypedArrayConstructor;\n\nmodule.exports = function from(source /* , mapfn, thisArg */) {\n  var O = toObject(source);\n  var argumentsLength = arguments.length;\n  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;\n  var mapping = mapfn !== undefined;\n  var iteratorMethod = getIteratorMethod(O);\n  var i, length, result, step, iterator, next;\n  if (iteratorMethod != undefined && !isArrayIteratorMethod(iteratorMethod)) {\n    iterator = iteratorMethod.call(O);\n    next = iterator.next;\n    O = [];\n    while (!(step = next.call(iterator)).done) {\n      O.push(step.value);\n    }\n  }\n  if (mapping && argumentsLength > 2) {\n    mapfn = bind(mapfn, arguments[2], 2);\n  }\n  length = toLength(O.length);\n  result = new (aTypedArrayConstructor(this))(length);\n  for (i = 0; length > i; i++) {\n    result[i] = mapping ? mapfn(O[i], i) : O[i];\n  }\n  return result;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS = require('../internals/typed-arrays-constructors-requires-wrappers');\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar ArrayBufferModule = require('../internals/array-buffer');\nvar anInstance = require('../internals/an-instance');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar toLength = require('../internals/to-length');\nvar toIndex = require('../internals/to-index');\nvar toOffset = require('../internals/to-offset');\nvar toPrimitive = require('../internals/to-primitive');\nvar has = require('../internals/has');\nvar classof = require('../internals/classof');\nvar isObject = require('../internals/is-object');\nvar create = require('../internals/object-create');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar typedArrayFrom = require('../internals/typed-array-from');\nvar forEach = require('../internals/array-iteration').forEach;\nvar setSpecies = require('../internals/set-species');\nvar definePropertyModule = require('../internals/object-define-property');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar InternalStateModule = require('../internals/internal-state');\nvar inheritIfRequired = require('../internals/inherit-if-required');\n\nvar getInternalState = InternalStateModule.get;\nvar setInternalState = InternalStateModule.set;\nvar nativeDefineProperty = definePropertyModule.f;\nvar nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\nvar round = Math.round;\nvar RangeError = global.RangeError;\nvar ArrayBuffer = ArrayBufferModule.ArrayBuffer;\nvar DataView = ArrayBufferModule.DataView;\nvar NATIVE_ARRAY_BUFFER_VIEWS = ArrayBufferViewCore.NATIVE_ARRAY_BUFFER_VIEWS;\nvar TYPED_ARRAY_TAG = ArrayBufferViewCore.TYPED_ARRAY_TAG;\nvar TypedArray = ArrayBufferViewCore.TypedArray;\nvar TypedArrayPrototype = ArrayBufferViewCore.TypedArrayPrototype;\nvar aTypedArrayConstructor = ArrayBufferViewCore.aTypedArrayConstructor;\nvar isTypedArray = ArrayBufferViewCore.isTypedArray;\nvar BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';\nvar WRONG_LENGTH = 'Wrong length';\n\nvar fromList = function (C, list) {\n  var index = 0;\n  var length = list.length;\n  var result = new (aTypedArrayConstructor(C))(length);\n  while (length > index) result[index] = list[index++];\n  return result;\n};\n\nvar addGetter = function (it, key) {\n  nativeDefineProperty(it, key, { get: function () {\n    return getInternalState(this)[key];\n  } });\n};\n\nvar isArrayBuffer = function (it) {\n  var klass;\n  return it instanceof ArrayBuffer || (klass = classof(it)) == 'ArrayBuffer' || klass == 'SharedArrayBuffer';\n};\n\nvar isTypedArrayIndex = function (target, key) {\n  return isTypedArray(target)\n    && typeof key != 'symbol'\n    && key in target\n    && String(+key) == String(key);\n};\n\nvar wrappedGetOwnPropertyDescriptor = function getOwnPropertyDescriptor(target, key) {\n  return isTypedArrayIndex(target, key = toPrimitive(key, true))\n    ? createPropertyDescriptor(2, target[key])\n    : nativeGetOwnPropertyDescriptor(target, key);\n};\n\nvar wrappedDefineProperty = function defineProperty(target, key, descriptor) {\n  if (isTypedArrayIndex(target, key = toPrimitive(key, true))\n    && isObject(descriptor)\n    && has(descriptor, 'value')\n    && !has(descriptor, 'get')\n    && !has(descriptor, 'set')\n    // TODO: add validation descriptor w/o calling accessors\n    && !descriptor.configurable\n    && (!has(descriptor, 'writable') || descriptor.writable)\n    && (!has(descriptor, 'enumerable') || descriptor.enumerable)\n  ) {\n    target[key] = descriptor.value;\n    return target;\n  } return nativeDefineProperty(target, key, descriptor);\n};\n\nif (DESCRIPTORS) {\n  if (!NATIVE_ARRAY_BUFFER_VIEWS) {\n    getOwnPropertyDescriptorModule.f = wrappedGetOwnPropertyDescriptor;\n    definePropertyModule.f = wrappedDefineProperty;\n    addGetter(TypedArrayPrototype, 'buffer');\n    addGetter(TypedArrayPrototype, 'byteOffset');\n    addGetter(TypedArrayPrototype, 'byteLength');\n    addGetter(TypedArrayPrototype, 'length');\n  }\n\n  $({ target: 'Object', stat: true, forced: !NATIVE_ARRAY_BUFFER_VIEWS }, {\n    getOwnPropertyDescriptor: wrappedGetOwnPropertyDescriptor,\n    defineProperty: wrappedDefineProperty\n  });\n\n  module.exports = function (TYPE, wrapper, CLAMPED) {\n    var BYTES = TYPE.match(/\\d+$/)[0] / 8;\n    var CONSTRUCTOR_NAME = TYPE + (CLAMPED ? 'Clamped' : '') + 'Array';\n    var GETTER = 'get' + TYPE;\n    var SETTER = 'set' + TYPE;\n    var NativeTypedArrayConstructor = global[CONSTRUCTOR_NAME];\n    var TypedArrayConstructor = NativeTypedArrayConstructor;\n    var TypedArrayConstructorPrototype = TypedArrayConstructor && TypedArrayConstructor.prototype;\n    var exported = {};\n\n    var getter = function (that, index) {\n      var data = getInternalState(that);\n      return data.view[GETTER](index * BYTES + data.byteOffset, true);\n    };\n\n    var setter = function (that, index, value) {\n      var data = getInternalState(that);\n      if (CLAMPED) value = (value = round(value)) < 0 ? 0 : value > 0xFF ? 0xFF : value & 0xFF;\n      data.view[SETTER](index * BYTES + data.byteOffset, value, true);\n    };\n\n    var addElement = function (that, index) {\n      nativeDefineProperty(that, index, {\n        get: function () {\n          return getter(this, index);\n        },\n        set: function (value) {\n          return setter(this, index, value);\n        },\n        enumerable: true\n      });\n    };\n\n    if (!NATIVE_ARRAY_BUFFER_VIEWS) {\n      TypedArrayConstructor = wrapper(function (that, data, offset, $length) {\n        anInstance(that, TypedArrayConstructor, CONSTRUCTOR_NAME);\n        var index = 0;\n        var byteOffset = 0;\n        var buffer, byteLength, length;\n        if (!isObject(data)) {\n          length = toIndex(data);\n          byteLength = length * BYTES;\n          buffer = new ArrayBuffer(byteLength);\n        } else if (isArrayBuffer(data)) {\n          buffer = data;\n          byteOffset = toOffset(offset, BYTES);\n          var $len = data.byteLength;\n          if ($length === undefined) {\n            if ($len % BYTES) throw RangeError(WRONG_LENGTH);\n            byteLength = $len - byteOffset;\n            if (byteLength < 0) throw RangeError(WRONG_LENGTH);\n          } else {\n            byteLength = toLength($length) * BYTES;\n            if (byteLength + byteOffset > $len) throw RangeError(WRONG_LENGTH);\n          }\n          length = byteLength / BYTES;\n        } else if (isTypedArray(data)) {\n          return fromList(TypedArrayConstructor, data);\n        } else {\n          return typedArrayFrom.call(TypedArrayConstructor, data);\n        }\n        setInternalState(that, {\n          buffer: buffer,\n          byteOffset: byteOffset,\n          byteLength: byteLength,\n          length: length,\n          view: new DataView(buffer)\n        });\n        while (index < length) addElement(that, index++);\n      });\n\n      if (setPrototypeOf) setPrototypeOf(TypedArrayConstructor, TypedArray);\n      TypedArrayConstructorPrototype = TypedArrayConstructor.prototype = create(TypedArrayPrototype);\n    } else if (TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS) {\n      TypedArrayConstructor = wrapper(function (dummy, data, typedArrayOffset, $length) {\n        anInstance(dummy, TypedArrayConstructor, CONSTRUCTOR_NAME);\n        return inheritIfRequired(function () {\n          if (!isObject(data)) return new NativeTypedArrayConstructor(toIndex(data));\n          if (isArrayBuffer(data)) return $length !== undefined\n            ? new NativeTypedArrayConstructor(data, toOffset(typedArrayOffset, BYTES), $length)\n            : typedArrayOffset !== undefined\n              ? new NativeTypedArrayConstructor(data, toOffset(typedArrayOffset, BYTES))\n              : new NativeTypedArrayConstructor(data);\n          if (isTypedArray(data)) return fromList(TypedArrayConstructor, data);\n          return typedArrayFrom.call(TypedArrayConstructor, data);\n        }(), dummy, TypedArrayConstructor);\n      });\n\n      if (setPrototypeOf) setPrototypeOf(TypedArrayConstructor, TypedArray);\n      forEach(getOwnPropertyNames(NativeTypedArrayConstructor), function (key) {\n        if (!(key in TypedArrayConstructor)) {\n          createNonEnumerableProperty(TypedArrayConstructor, key, NativeTypedArrayConstructor[key]);\n        }\n      });\n      TypedArrayConstructor.prototype = TypedArrayConstructorPrototype;\n    }\n\n    if (TypedArrayConstructorPrototype.constructor !== TypedArrayConstructor) {\n      createNonEnumerableProperty(TypedArrayConstructorPrototype, 'constructor', TypedArrayConstructor);\n    }\n\n    if (TYPED_ARRAY_TAG) {\n      createNonEnumerableProperty(TypedArrayConstructorPrototype, TYPED_ARRAY_TAG, CONSTRUCTOR_NAME);\n    }\n\n    exported[CONSTRUCTOR_NAME] = TypedArrayConstructor;\n\n    $({\n      global: true, forced: TypedArrayConstructor != NativeTypedArrayConstructor, sham: !NATIVE_ARRAY_BUFFER_VIEWS\n    }, exported);\n\n    if (!(BYTES_PER_ELEMENT in TypedArrayConstructor)) {\n      createNonEnumerableProperty(TypedArrayConstructor, BYTES_PER_ELEMENT, BYTES);\n    }\n\n    if (!(BYTES_PER_ELEMENT in TypedArrayConstructorPrototype)) {\n      createNonEnumerableProperty(TypedArrayConstructorPrototype, BYTES_PER_ELEMENT, BYTES);\n    }\n\n    setSpecies(CONSTRUCTOR_NAME);\n  };\n} else module.exports = function () { /* empty */ };\n","var createTypedArrayConstructor = require('../internals/typed-array-constructor');\n\n// `Int8Array` constructor\n// https://tc39.github.io/ecma262/#sec-typedarray-objects\ncreateTypedArrayConstructor('Int8', function (init) {\n  return function Int8Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","var createTypedArrayConstructor = require('../internals/typed-array-constructor');\n\n// `Uint8Array` constructor\n// https://tc39.github.io/ecma262/#sec-typedarray-objects\ncreateTypedArrayConstructor('Uint8', function (init) {\n  return function Uint8Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","var createTypedArrayConstructor = require('../internals/typed-array-constructor');\n\n// `Uint8ClampedArray` constructor\n// https://tc39.github.io/ecma262/#sec-typedarray-objects\ncreateTypedArrayConstructor('Uint8', function (init) {\n  return function Uint8ClampedArray(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n}, true);\n","var createTypedArrayConstructor = require('../internals/typed-array-constructor');\n\n// `Int16Array` constructor\n// https://tc39.github.io/ecma262/#sec-typedarray-objects\ncreateTypedArrayConstructor('Int16', function (init) {\n  return function Int16Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","var createTypedArrayConstructor = require('../internals/typed-array-constructor');\n\n// `Uint16Array` constructor\n// https://tc39.github.io/ecma262/#sec-typedarray-objects\ncreateTypedArrayConstructor('Uint16', function (init) {\n  return function Uint16Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","var createTypedArrayConstructor = require('../internals/typed-array-constructor');\n\n// `Int32Array` constructor\n// https://tc39.github.io/ecma262/#sec-typedarray-objects\ncreateTypedArrayConstructor('Int32', function (init) {\n  return function Int32Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","var createTypedArrayConstructor = require('../internals/typed-array-constructor');\n\n// `Uint32Array` constructor\n// https://tc39.github.io/ecma262/#sec-typedarray-objects\ncreateTypedArrayConstructor('Uint32', function (init) {\n  return function Uint32Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","var createTypedArrayConstructor = require('../internals/typed-array-constructor');\n\n// `Float32Array` constructor\n// https://tc39.github.io/ecma262/#sec-typedarray-objects\ncreateTypedArrayConstructor('Float32', function (init) {\n  return function Float32Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","var createTypedArrayConstructor = require('../internals/typed-array-constructor');\n\n// `Float64Array` constructor\n// https://tc39.github.io/ecma262/#sec-typedarray-objects\ncreateTypedArrayConstructor('Float64', function (init) {\n  return function Float64Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","'use strict';\nvar TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS = require('../internals/typed-arrays-constructors-requires-wrappers');\nvar exportTypedArrayStaticMethod = require('../internals/array-buffer-view-core').exportTypedArrayStaticMethod;\nvar typedArrayFrom = require('../internals/typed-array-from');\n\n// `%TypedArray%.from` method\n// https://tc39.github.io/ecma262/#sec-%typedarray%.from\nexportTypedArrayStaticMethod('from', typedArrayFrom, TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS);\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS = require('../internals/typed-arrays-constructors-requires-wrappers');\n\nvar aTypedArrayConstructor = ArrayBufferViewCore.aTypedArrayConstructor;\nvar exportTypedArrayStaticMethod = ArrayBufferViewCore.exportTypedArrayStaticMethod;\n\n// `%TypedArray%.of` method\n// https://tc39.github.io/ecma262/#sec-%typedarray%.of\nexportTypedArrayStaticMethod('of', function of(/* ...items */) {\n  var index = 0;\n  var length = arguments.length;\n  var result = new (aTypedArrayConstructor(this))(length);\n  while (length > index) result[index] = arguments[index++];\n  return result;\n}, TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS);\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar $copyWithin = require('../internals/array-copy-within');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.copyWithin` method\n// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.copywithin\nexportTypedArrayMethod('copyWithin', function copyWithin(target, start /* , end */) {\n  return $copyWithin.call(aTypedArray(this), target, start, arguments.length > 2 ? arguments[2] : undefined);\n});\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar $every = require('../internals/array-iteration').every;\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.every` method\n// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.every\nexportTypedArrayMethod('every', function every(callbackfn /* , thisArg */) {\n  return $every(aTypedArray(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n});\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar $fill = require('../internals/array-fill');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.fill` method\n// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.fill\n// eslint-disable-next-line no-unused-vars\nexportTypedArrayMethod('fill', function fill(value /* , start, end */) {\n  return $fill.apply(aTypedArray(this), arguments);\n});\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar $filter = require('../internals/array-iteration').filter;\nvar speciesConstructor = require('../internals/species-constructor');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar aTypedArrayConstructor = ArrayBufferViewCore.aTypedArrayConstructor;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.filter` method\n// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.filter\nexportTypedArrayMethod('filter', function filter(callbackfn /* , thisArg */) {\n  var list = $filter(aTypedArray(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  var C = speciesConstructor(this, this.constructor);\n  var index = 0;\n  var length = list.length;\n  var result = new (aTypedArrayConstructor(C))(length);\n  while (length > index) result[index] = list[index++];\n  return result;\n});\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar $find = require('../internals/array-iteration').find;\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.find` method\n// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.find\nexportTypedArrayMethod('find', function find(predicate /* , thisArg */) {\n  return $find(aTypedArray(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n});\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar $findIndex = require('../internals/array-iteration').findIndex;\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.findIndex` method\n// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.findindex\nexportTypedArrayMethod('findIndex', function findIndex(predicate /* , thisArg */) {\n  return $findIndex(aTypedArray(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n});\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar $forEach = require('../internals/array-iteration').forEach;\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.forEach` method\n// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.foreach\nexportTypedArrayMethod('forEach', function forEach(callbackfn /* , thisArg */) {\n  $forEach(aTypedArray(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n});\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar $includes = require('../internals/array-includes').includes;\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.includes` method\n// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.includes\nexportTypedArrayMethod('includes', function includes(searchElement /* , fromIndex */) {\n  return $includes(aTypedArray(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n});\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar $indexOf = require('../internals/array-includes').indexOf;\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.indexOf` method\n// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.indexof\nexportTypedArrayMethod('indexOf', function indexOf(searchElement /* , fromIndex */) {\n  return $indexOf(aTypedArray(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n});\n","'use strict';\nvar global = require('../internals/global');\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar ArrayIterators = require('../modules/es.array.iterator');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar Uint8Array = global.Uint8Array;\nvar arrayValues = ArrayIterators.values;\nvar arrayKeys = ArrayIterators.keys;\nvar arrayEntries = ArrayIterators.entries;\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\nvar nativeTypedArrayIterator = Uint8Array && Uint8Array.prototype[ITERATOR];\n\nvar CORRECT_ITER_NAME = !!nativeTypedArrayIterator\n  && (nativeTypedArrayIterator.name == 'values' || nativeTypedArrayIterator.name == undefined);\n\nvar typedArrayValues = function values() {\n  return arrayValues.call(aTypedArray(this));\n};\n\n// `%TypedArray%.prototype.entries` method\n// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.entries\nexportTypedArrayMethod('entries', function entries() {\n  return arrayEntries.call(aTypedArray(this));\n});\n// `%TypedArray%.prototype.keys` method\n// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.keys\nexportTypedArrayMethod('keys', function keys() {\n  return arrayKeys.call(aTypedArray(this));\n});\n// `%TypedArray%.prototype.values` method\n// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.values\nexportTypedArrayMethod('values', typedArrayValues, !CORRECT_ITER_NAME);\n// `%TypedArray%.prototype[@@iterator]` method\n// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype-@@iterator\nexportTypedArrayMethod(ITERATOR, typedArrayValues, !CORRECT_ITER_NAME);\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\nvar $join = [].join;\n\n// `%TypedArray%.prototype.join` method\n// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.join\n// eslint-disable-next-line no-unused-vars\nexportTypedArrayMethod('join', function join(separator) {\n  return $join.apply(aTypedArray(this), arguments);\n});\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar $lastIndexOf = require('../internals/array-last-index-of');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.lastIndexOf` method\n// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.lastindexof\n// eslint-disable-next-line no-unused-vars\nexportTypedArrayMethod('lastIndexOf', function lastIndexOf(searchElement /* , fromIndex */) {\n  return $lastIndexOf.apply(aTypedArray(this), arguments);\n});\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar $map = require('../internals/array-iteration').map;\nvar speciesConstructor = require('../internals/species-constructor');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar aTypedArrayConstructor = ArrayBufferViewCore.aTypedArrayConstructor;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.map` method\n// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.map\nexportTypedArrayMethod('map', function map(mapfn /* , thisArg */) {\n  return $map(aTypedArray(this), mapfn, arguments.length > 1 ? arguments[1] : undefined, function (O, length) {\n    return new (aTypedArrayConstructor(speciesConstructor(O, O.constructor)))(length);\n  });\n});\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar $reduce = require('../internals/array-reduce').left;\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.reduce` method\n// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.reduce\nexportTypedArrayMethod('reduce', function reduce(callbackfn /* , initialValue */) {\n  return $reduce(aTypedArray(this), callbackfn, arguments.length, arguments.length > 1 ? arguments[1] : undefined);\n});\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar $reduceRight = require('../internals/array-reduce').right;\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.reduceRicht` method\n// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.reduceright\nexportTypedArrayMethod('reduceRight', function reduceRight(callbackfn /* , initialValue */) {\n  return $reduceRight(aTypedArray(this), callbackfn, arguments.length, arguments.length > 1 ? arguments[1] : undefined);\n});\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\nvar floor = Math.floor;\n\n// `%TypedArray%.prototype.reverse` method\n// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.reverse\nexportTypedArrayMethod('reverse', function reverse() {\n  var that = this;\n  var length = aTypedArray(that).length;\n  var middle = floor(length / 2);\n  var index = 0;\n  var value;\n  while (index < middle) {\n    value = that[index];\n    that[index++] = that[--length];\n    that[length] = value;\n  } return that;\n});\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar toLength = require('../internals/to-length');\nvar toOffset = require('../internals/to-offset');\nvar toObject = require('../internals/to-object');\nvar fails = require('../internals/fails');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\nvar FORCED = fails(function () {\n  // eslint-disable-next-line no-undef\n  new Int8Array(1).set({});\n});\n\n// `%TypedArray%.prototype.set` method\n// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.set\nexportTypedArrayMethod('set', function set(arrayLike /* , offset */) {\n  aTypedArray(this);\n  var offset = toOffset(arguments.length > 1 ? arguments[1] : undefined, 1);\n  var length = this.length;\n  var src = toObject(arrayLike);\n  var len = toLength(src.length);\n  var index = 0;\n  if (len + offset > length) throw RangeError('Wrong length');\n  while (index < len) this[offset + index] = src[index++];\n}, FORCED);\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar speciesConstructor = require('../internals/species-constructor');\nvar fails = require('../internals/fails');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar aTypedArrayConstructor = ArrayBufferViewCore.aTypedArrayConstructor;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\nvar $slice = [].slice;\n\nvar FORCED = fails(function () {\n  // eslint-disable-next-line no-undef\n  new Int8Array(1).slice();\n});\n\n// `%TypedArray%.prototype.slice` method\n// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.slice\nexportTypedArrayMethod('slice', function slice(start, end) {\n  var list = $slice.call(aTypedArray(this), start, end);\n  var C = speciesConstructor(this, this.constructor);\n  var index = 0;\n  var length = list.length;\n  var result = new (aTypedArrayConstructor(C))(length);\n  while (length > index) result[index] = list[index++];\n  return result;\n}, FORCED);\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar $some = require('../internals/array-iteration').some;\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.some` method\n// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.some\nexportTypedArrayMethod('some', function some(callbackfn /* , thisArg */) {\n  return $some(aTypedArray(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n});\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\nvar $sort = [].sort;\n\n// `%TypedArray%.prototype.sort` method\n// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.sort\nexportTypedArrayMethod('sort', function sort(comparefn) {\n  return $sort.call(aTypedArray(this), comparefn);\n});\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar toLength = require('../internals/to-length');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar speciesConstructor = require('../internals/species-constructor');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.subarray` method\n// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.subarray\nexportTypedArrayMethod('subarray', function subarray(begin, end) {\n  var O = aTypedArray(this);\n  var length = O.length;\n  var beginIndex = toAbsoluteIndex(begin, length);\n  return new (speciesConstructor(O, O.constructor))(\n    O.buffer,\n    O.byteOffset + beginIndex * O.BYTES_PER_ELEMENT,\n    toLength((end === undefined ? length : toAbsoluteIndex(end, length)) - beginIndex)\n  );\n});\n","'use strict';\nvar global = require('../internals/global');\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar fails = require('../internals/fails');\n\nvar Int8Array = global.Int8Array;\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\nvar $toLocaleString = [].toLocaleString;\nvar $slice = [].slice;\n\n// iOS Safari 6.x fails here\nvar TO_LOCALE_STRING_BUG = !!Int8Array && fails(function () {\n  $toLocaleString.call(new Int8Array(1));\n});\n\nvar FORCED = fails(function () {\n  return [1, 2].toLocaleString() != new Int8Array([1, 2]).toLocaleString();\n}) || !fails(function () {\n  Int8Array.prototype.toLocaleString.call([1, 2]);\n});\n\n// `%TypedArray%.prototype.toLocaleString` method\n// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.tolocalestring\nexportTypedArrayMethod('toLocaleString', function toLocaleString() {\n  return $toLocaleString.apply(TO_LOCALE_STRING_BUG ? $slice.call(aTypedArray(this)) : aTypedArray(this), arguments);\n}, FORCED);\n","'use strict';\nvar exportTypedArrayMethod = require('../internals/array-buffer-view-core').exportTypedArrayMethod;\nvar fails = require('../internals/fails');\nvar global = require('../internals/global');\n\nvar Uint8Array = global.Uint8Array;\nvar Uint8ArrayPrototype = Uint8Array && Uint8Array.prototype || {};\nvar arrayToString = [].toString;\nvar arrayJoin = [].join;\n\nif (fails(function () { arrayToString.call({}); })) {\n  arrayToString = function toString() {\n    return arrayJoin.call(this);\n  };\n}\n\nvar IS_NOT_ARRAY_METHOD = Uint8ArrayPrototype.toString != arrayToString;\n\n// `%TypedArray%.prototype.toString` method\n// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.tostring\nexportTypedArrayMethod('toString', arrayToString, IS_NOT_ARRAY_METHOD);\n","var $ = require('../internals/export');\nvar getBuiltIn = require('../internals/get-built-in');\nvar aFunction = require('../internals/a-function');\nvar anObject = require('../internals/an-object');\nvar fails = require('../internals/fails');\n\nvar nativeApply = getBuiltIn('Reflect', 'apply');\nvar functionApply = Function.apply;\n\n// MS Edge argumentsList argument is optional\nvar OPTIONAL_ARGUMENTS_LIST = !fails(function () {\n  nativeApply(function () { /* empty */ });\n});\n\n// `Reflect.apply` method\n// https://tc39.github.io/ecma262/#sec-reflect.apply\n$({ target: 'Reflect', stat: true, forced: OPTIONAL_ARGUMENTS_LIST }, {\n  apply: function apply(target, thisArgument, argumentsList) {\n    aFunction(target);\n    anObject(argumentsList);\n    return nativeApply\n      ? nativeApply(target, thisArgument, argumentsList)\n      : functionApply.call(target, thisArgument, argumentsList);\n  }\n});\n","var $ = require('../internals/export');\nvar getBuiltIn = require('../internals/get-built-in');\nvar aFunction = require('../internals/a-function');\nvar anObject = require('../internals/an-object');\nvar isObject = require('../internals/is-object');\nvar create = require('../internals/object-create');\nvar bind = require('../internals/function-bind');\nvar fails = require('../internals/fails');\n\nvar nativeConstruct = getBuiltIn('Reflect', 'construct');\n\n// `Reflect.construct` method\n// https://tc39.github.io/ecma262/#sec-reflect.construct\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\nvar NEW_TARGET_BUG = fails(function () {\n  function F() { /* empty */ }\n  return !(nativeConstruct(function () { /* empty */ }, [], F) instanceof F);\n});\nvar ARGS_BUG = !fails(function () {\n  nativeConstruct(function () { /* empty */ });\n});\nvar FORCED = NEW_TARGET_BUG || ARGS_BUG;\n\n$({ target: 'Reflect', stat: true, forced: FORCED, sham: FORCED }, {\n  construct: function construct(Target, args /* , newTarget */) {\n    aFunction(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n    if (ARGS_BUG && !NEW_TARGET_BUG) return nativeConstruct(Target, args, newTarget);\n    if (Target == newTarget) {\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch (args.length) {\n        case 0: return new Target();\n        case 1: return new Target(args[0]);\n        case 2: return new Target(args[0], args[1]);\n        case 3: return new Target(args[0], args[1], args[2]);\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\n      }\n      // w/o altered newTarget, lot of arguments case\n      var $args = [null];\n      $args.push.apply($args, args);\n      return new (bind.apply(Target, $args))();\n    }\n    // with altered newTarget, not support built-in constructors\n    var proto = newTarget.prototype;\n    var instance = create(isObject(proto) ? proto : Object.prototype);\n    var result = Function.apply.call(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});\n","var $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar anObject = require('../internals/an-object');\nvar toPrimitive = require('../internals/to-primitive');\nvar definePropertyModule = require('../internals/object-define-property');\nvar fails = require('../internals/fails');\n\n// MS Edge has broken Reflect.defineProperty - throwing instead of returning false\nvar ERROR_INSTEAD_OF_FALSE = fails(function () {\n  // eslint-disable-next-line no-undef\n  Reflect.defineProperty(definePropertyModule.f({}, 1, { value: 1 }), 1, { value: 2 });\n});\n\n// `Reflect.defineProperty` method\n// https://tc39.github.io/ecma262/#sec-reflect.defineproperty\n$({ target: 'Reflect', stat: true, forced: ERROR_INSTEAD_OF_FALSE, sham: !DESCRIPTORS }, {\n  defineProperty: function defineProperty(target, propertyKey, attributes) {\n    anObject(target);\n    var key = toPrimitive(propertyKey, true);\n    anObject(attributes);\n    try {\n      definePropertyModule.f(target, key, attributes);\n      return true;\n    } catch (error) {\n      return false;\n    }\n  }\n});\n","var $ = require('../internals/export');\nvar anObject = require('../internals/an-object');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\n\n// `Reflect.deleteProperty` method\n// https://tc39.github.io/ecma262/#sec-reflect.deleteproperty\n$({ target: 'Reflect', stat: true }, {\n  deleteProperty: function deleteProperty(target, propertyKey) {\n    var descriptor = getOwnPropertyDescriptor(anObject(target), propertyKey);\n    return descriptor && !descriptor.configurable ? false : delete target[propertyKey];\n  }\n});\n","var $ = require('../internals/export');\nvar isObject = require('../internals/is-object');\nvar anObject = require('../internals/an-object');\nvar has = require('../internals/has');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\n\n// `Reflect.get` method\n// https://tc39.github.io/ecma262/#sec-reflect.get\nfunction get(target, propertyKey /* , receiver */) {\n  var receiver = arguments.length < 3 ? target : arguments[2];\n  var descriptor, prototype;\n  if (anObject(target) === receiver) return target[propertyKey];\n  if (descriptor = getOwnPropertyDescriptorModule.f(target, propertyKey)) return has(descriptor, 'value')\n    ? descriptor.value\n    : descriptor.get === undefined\n      ? undefined\n      : descriptor.get.call(receiver);\n  if (isObject(prototype = getPrototypeOf(target))) return get(prototype, propertyKey, receiver);\n}\n\n$({ target: 'Reflect', stat: true }, {\n  get: get\n});\n","var $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar anObject = require('../internals/an-object');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\n\n// `Reflect.getOwnPropertyDescriptor` method\n// https://tc39.github.io/ecma262/#sec-reflect.getownpropertydescriptor\n$({ target: 'Reflect', stat: true, sham: !DESCRIPTORS }, {\n  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey) {\n    return getOwnPropertyDescriptorModule.f(anObject(target), propertyKey);\n  }\n});\n","var $ = require('../internals/export');\nvar anObject = require('../internals/an-object');\nvar objectGetPrototypeOf = require('../internals/object-get-prototype-of');\nvar CORRECT_PROTOTYPE_GETTER = require('../internals/correct-prototype-getter');\n\n// `Reflect.getPrototypeOf` method\n// https://tc39.github.io/ecma262/#sec-reflect.getprototypeof\n$({ target: 'Reflect', stat: true, sham: !CORRECT_PROTOTYPE_GETTER }, {\n  getPrototypeOf: function getPrototypeOf(target) {\n    return objectGetPrototypeOf(anObject(target));\n  }\n});\n","var $ = require('../internals/export');\n\n// `Reflect.has` method\n// https://tc39.github.io/ecma262/#sec-reflect.has\n$({ target: 'Reflect', stat: true }, {\n  has: function has(target, propertyKey) {\n    return propertyKey in target;\n  }\n});\n","var $ = require('../internals/export');\nvar anObject = require('../internals/an-object');\n\nvar objectIsExtensible = Object.isExtensible;\n\n// `Reflect.isExtensible` method\n// https://tc39.github.io/ecma262/#sec-reflect.isextensible\n$({ target: 'Reflect', stat: true }, {\n  isExtensible: function isExtensible(target) {\n    anObject(target);\n    return objectIsExtensible ? objectIsExtensible(target) : true;\n  }\n});\n","var $ = require('../internals/export');\nvar ownKeys = require('../internals/own-keys');\n\n// `Reflect.ownKeys` method\n// https://tc39.github.io/ecma262/#sec-reflect.ownkeys\n$({ target: 'Reflect', stat: true }, {\n  ownKeys: ownKeys\n});\n","var $ = require('../internals/export');\nvar getBuiltIn = require('../internals/get-built-in');\nvar anObject = require('../internals/an-object');\nvar FREEZING = require('../internals/freezing');\n\n// `Reflect.preventExtensions` method\n// https://tc39.github.io/ecma262/#sec-reflect.preventextensions\n$({ target: 'Reflect', stat: true, sham: !FREEZING }, {\n  preventExtensions: function preventExtensions(target) {\n    anObject(target);\n    try {\n      var objectPreventExtensions = getBuiltIn('Object', 'preventExtensions');\n      if (objectPreventExtensions) objectPreventExtensions(target);\n      return true;\n    } catch (error) {\n      return false;\n    }\n  }\n});\n","var $ = require('../internals/export');\nvar anObject = require('../internals/an-object');\nvar isObject = require('../internals/is-object');\nvar has = require('../internals/has');\nvar fails = require('../internals/fails');\nvar definePropertyModule = require('../internals/object-define-property');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\n// `Reflect.set` method\n// https://tc39.github.io/ecma262/#sec-reflect.set\nfunction set(target, propertyKey, V /* , receiver */) {\n  var receiver = arguments.length < 4 ? target : arguments[3];\n  var ownDescriptor = getOwnPropertyDescriptorModule.f(anObject(target), propertyKey);\n  var existingDescriptor, prototype;\n  if (!ownDescriptor) {\n    if (isObject(prototype = getPrototypeOf(target))) {\n      return set(prototype, propertyKey, V, receiver);\n    }\n    ownDescriptor = createPropertyDescriptor(0);\n  }\n  if (has(ownDescriptor, 'value')) {\n    if (ownDescriptor.writable === false || !isObject(receiver)) return false;\n    if (existingDescriptor = getOwnPropertyDescriptorModule.f(receiver, propertyKey)) {\n      if (existingDescriptor.get || existingDescriptor.set || existingDescriptor.writable === false) return false;\n      existingDescriptor.value = V;\n      definePropertyModule.f(receiver, propertyKey, existingDescriptor);\n    } else definePropertyModule.f(receiver, propertyKey, createPropertyDescriptor(0, V));\n    return true;\n  }\n  return ownDescriptor.set === undefined ? false : (ownDescriptor.set.call(receiver, V), true);\n}\n\n// MS Edge 17-18 Reflect.set allows setting the property to object\n// with non-writable property on the prototype\nvar MS_EDGE_BUG = fails(function () {\n  var object = definePropertyModule.f({}, 'a', { configurable: true });\n  // eslint-disable-next-line no-undef\n  return Reflect.set(getPrototypeOf(object), 'a', 1, object) !== false;\n});\n\n$({ target: 'Reflect', stat: true, forced: MS_EDGE_BUG }, {\n  set: set\n});\n","var $ = require('../internals/export');\nvar anObject = require('../internals/an-object');\nvar aPossiblePrototype = require('../internals/a-possible-prototype');\nvar objectSetPrototypeOf = require('../internals/object-set-prototype-of');\n\n// `Reflect.setPrototypeOf` method\n// https://tc39.github.io/ecma262/#sec-reflect.setprototypeof\nif (objectSetPrototypeOf) $({ target: 'Reflect', stat: true }, {\n  setPrototypeOf: function setPrototypeOf(target, proto) {\n    anObject(target);\n    aPossiblePrototype(proto);\n    try {\n      objectSetPrototypeOf(target, proto);\n      return true;\n    } catch (error) {\n      return false;\n    }\n  }\n});\n","require('../modules/es.symbol');\nrequire('../modules/es.symbol.async-iterator');\nrequire('../modules/es.symbol.description');\nrequire('../modules/es.symbol.has-instance');\nrequire('../modules/es.symbol.is-concat-spreadable');\nrequire('../modules/es.symbol.iterator');\nrequire('../modules/es.symbol.match');\nrequire('../modules/es.symbol.match-all');\nrequire('../modules/es.symbol.replace');\nrequire('../modules/es.symbol.search');\nrequire('../modules/es.symbol.species');\nrequire('../modules/es.symbol.split');\nrequire('../modules/es.symbol.to-primitive');\nrequire('../modules/es.symbol.to-string-tag');\nrequire('../modules/es.symbol.unscopables');\nrequire('../modules/es.object.assign');\nrequire('../modules/es.object.create');\nrequire('../modules/es.object.define-property');\nrequire('../modules/es.object.define-properties');\nrequire('../modules/es.object.entries');\nrequire('../modules/es.object.freeze');\nrequire('../modules/es.object.from-entries');\nrequire('../modules/es.object.get-own-property-descriptor');\nrequire('../modules/es.object.get-own-property-descriptors');\nrequire('../modules/es.object.get-own-property-names');\nrequire('../modules/es.object.get-prototype-of');\nrequire('../modules/es.object.is');\nrequire('../modules/es.object.is-extensible');\nrequire('../modules/es.object.is-frozen');\nrequire('../modules/es.object.is-sealed');\nrequire('../modules/es.object.keys');\nrequire('../modules/es.object.prevent-extensions');\nrequire('../modules/es.object.seal');\nrequire('../modules/es.object.set-prototype-of');\nrequire('../modules/es.object.values');\nrequire('../modules/es.object.to-string');\nrequire('../modules/es.object.define-getter');\nrequire('../modules/es.object.define-setter');\nrequire('../modules/es.object.lookup-getter');\nrequire('../modules/es.object.lookup-setter');\nrequire('../modules/es.function.bind');\nrequire('../modules/es.function.name');\nrequire('../modules/es.function.has-instance');\nrequire('../modules/es.global-this');\nrequire('../modules/es.array.from');\nrequire('../modules/es.array.is-array');\nrequire('../modules/es.array.of');\nrequire('../modules/es.array.concat');\nrequire('../modules/es.array.copy-within');\nrequire('../modules/es.array.every');\nrequire('../modules/es.array.fill');\nrequire('../modules/es.array.filter');\nrequire('../modules/es.array.find');\nrequire('../modules/es.array.find-index');\nrequire('../modules/es.array.flat');\nrequire('../modules/es.array.flat-map');\nrequire('../modules/es.array.for-each');\nrequire('../modules/es.array.includes');\nrequire('../modules/es.array.index-of');\nrequire('../modules/es.array.join');\nrequire('../modules/es.array.last-index-of');\nrequire('../modules/es.array.map');\nrequire('../modules/es.array.reduce');\nrequire('../modules/es.array.reduce-right');\nrequire('../modules/es.array.reverse');\nrequire('../modules/es.array.slice');\nrequire('../modules/es.array.some');\nrequire('../modules/es.array.sort');\nrequire('../modules/es.array.splice');\nrequire('../modules/es.array.species');\nrequire('../modules/es.array.unscopables.flat');\nrequire('../modules/es.array.unscopables.flat-map');\nrequire('../modules/es.array.iterator');\nrequire('../modules/es.string.from-code-point');\nrequire('../modules/es.string.raw');\nrequire('../modules/es.string.code-point-at');\nrequire('../modules/es.string.ends-with');\nrequire('../modules/es.string.includes');\nrequire('../modules/es.string.match');\nrequire('../modules/es.string.match-all');\nrequire('../modules/es.string.pad-end');\nrequire('../modules/es.string.pad-start');\nrequire('../modules/es.string.repeat');\nrequire('../modules/es.string.replace');\nrequire('../modules/es.string.search');\nrequire('../modules/es.string.split');\nrequire('../modules/es.string.starts-with');\nrequire('../modules/es.string.trim');\nrequire('../modules/es.string.trim-start');\nrequire('../modules/es.string.trim-end');\nrequire('../modules/es.string.iterator');\nrequire('../modules/es.string.anchor');\nrequire('../modules/es.string.big');\nrequire('../modules/es.string.blink');\nrequire('../modules/es.string.bold');\nrequire('../modules/es.string.fixed');\nrequire('../modules/es.string.fontcolor');\nrequire('../modules/es.string.fontsize');\nrequire('../modules/es.string.italics');\nrequire('../modules/es.string.link');\nrequire('../modules/es.string.small');\nrequire('../modules/es.string.strike');\nrequire('../modules/es.string.sub');\nrequire('../modules/es.string.sup');\nrequire('../modules/es.regexp.constructor');\nrequire('../modules/es.regexp.exec');\nrequire('../modules/es.regexp.flags');\nrequire('../modules/es.regexp.sticky');\nrequire('../modules/es.regexp.test');\nrequire('../modules/es.regexp.to-string');\nrequire('../modules/es.parse-int');\nrequire('../modules/es.parse-float');\nrequire('../modules/es.number.constructor');\nrequire('../modules/es.number.epsilon');\nrequire('../modules/es.number.is-finite');\nrequire('../modules/es.number.is-integer');\nrequire('../modules/es.number.is-nan');\nrequire('../modules/es.number.is-safe-integer');\nrequire('../modules/es.number.max-safe-integer');\nrequire('../modules/es.number.min-safe-integer');\nrequire('../modules/es.number.parse-float');\nrequire('../modules/es.number.parse-int');\nrequire('../modules/es.number.to-fixed');\nrequire('../modules/es.number.to-precision');\nrequire('../modules/es.math.acosh');\nrequire('../modules/es.math.asinh');\nrequire('../modules/es.math.atanh');\nrequire('../modules/es.math.cbrt');\nrequire('../modules/es.math.clz32');\nrequire('../modules/es.math.cosh');\nrequire('../modules/es.math.expm1');\nrequire('../modules/es.math.fround');\nrequire('../modules/es.math.hypot');\nrequire('../modules/es.math.imul');\nrequire('../modules/es.math.log10');\nrequire('../modules/es.math.log1p');\nrequire('../modules/es.math.log2');\nrequire('../modules/es.math.sign');\nrequire('../modules/es.math.sinh');\nrequire('../modules/es.math.tanh');\nrequire('../modules/es.math.to-string-tag');\nrequire('../modules/es.math.trunc');\nrequire('../modules/es.date.now');\nrequire('../modules/es.date.to-json');\nrequire('../modules/es.date.to-iso-string');\nrequire('../modules/es.date.to-string');\nrequire('../modules/es.date.to-primitive');\nrequire('../modules/es.json.stringify');\nrequire('../modules/es.json.to-string-tag');\nrequire('../modules/es.promise');\nrequire('../modules/es.promise.all-settled');\nrequire('../modules/es.promise.finally');\nrequire('../modules/es.map');\nrequire('../modules/es.set');\nrequire('../modules/es.weak-map');\nrequire('../modules/es.weak-set');\nrequire('../modules/es.array-buffer.constructor');\nrequire('../modules/es.array-buffer.is-view');\nrequire('../modules/es.array-buffer.slice');\nrequire('../modules/es.data-view');\nrequire('../modules/es.typed-array.int8-array');\nrequire('../modules/es.typed-array.uint8-array');\nrequire('../modules/es.typed-array.uint8-clamped-array');\nrequire('../modules/es.typed-array.int16-array');\nrequire('../modules/es.typed-array.uint16-array');\nrequire('../modules/es.typed-array.int32-array');\nrequire('../modules/es.typed-array.uint32-array');\nrequire('../modules/es.typed-array.float32-array');\nrequire('../modules/es.typed-array.float64-array');\nrequire('../modules/es.typed-array.from');\nrequire('../modules/es.typed-array.of');\nrequire('../modules/es.typed-array.copy-within');\nrequire('../modules/es.typed-array.every');\nrequire('../modules/es.typed-array.fill');\nrequire('../modules/es.typed-array.filter');\nrequire('../modules/es.typed-array.find');\nrequire('../modules/es.typed-array.find-index');\nrequire('../modules/es.typed-array.for-each');\nrequire('../modules/es.typed-array.includes');\nrequire('../modules/es.typed-array.index-of');\nrequire('../modules/es.typed-array.iterator');\nrequire('../modules/es.typed-array.join');\nrequire('../modules/es.typed-array.last-index-of');\nrequire('../modules/es.typed-array.map');\nrequire('../modules/es.typed-array.reduce');\nrequire('../modules/es.typed-array.reduce-right');\nrequire('../modules/es.typed-array.reverse');\nrequire('../modules/es.typed-array.set');\nrequire('../modules/es.typed-array.slice');\nrequire('../modules/es.typed-array.some');\nrequire('../modules/es.typed-array.sort');\nrequire('../modules/es.typed-array.subarray');\nrequire('../modules/es.typed-array.to-locale-string');\nrequire('../modules/es.typed-array.to-string');\nrequire('../modules/es.reflect.apply');\nrequire('../modules/es.reflect.construct');\nrequire('../modules/es.reflect.define-property');\nrequire('../modules/es.reflect.delete-property');\nrequire('../modules/es.reflect.get');\nrequire('../modules/es.reflect.get-own-property-descriptor');\nrequire('../modules/es.reflect.get-prototype-of');\nrequire('../modules/es.reflect.has');\nrequire('../modules/es.reflect.is-extensible');\nrequire('../modules/es.reflect.own-keys');\nrequire('../modules/es.reflect.prevent-extensions');\nrequire('../modules/es.reflect.set');\nrequire('../modules/es.reflect.set-prototype-of');\nvar path = require('../internals/path');\n\nmodule.exports = path;\n","// iterable DOM collections\n// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods\nmodule.exports = {\n  CSSRuleList: 0,\n  CSSStyleDeclaration: 0,\n  CSSValueList: 0,\n  ClientRectList: 0,\n  DOMRectList: 0,\n  DOMStringList: 0,\n  DOMTokenList: 1,\n  DataTransferItemList: 0,\n  FileList: 0,\n  HTMLAllCollection: 0,\n  HTMLCollection: 0,\n  HTMLFormElement: 0,\n  HTMLSelectElement: 0,\n  MediaList: 0,\n  MimeTypeArray: 0,\n  NamedNodeMap: 0,\n  NodeList: 1,\n  PaintRequestList: 0,\n  Plugin: 0,\n  PluginArray: 0,\n  SVGLengthList: 0,\n  SVGNumberList: 0,\n  SVGPathSegList: 0,\n  SVGPointList: 0,\n  SVGStringList: 0,\n  SVGTransformList: 0,\n  SourceBufferList: 0,\n  StyleSheetList: 0,\n  TextTrackCueList: 0,\n  TextTrackList: 0,\n  TouchList: 0\n};\n","var global = require('../internals/global');\nvar DOMIterables = require('../internals/dom-iterables');\nvar forEach = require('../internals/array-for-each');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  var Collection = global[COLLECTION_NAME];\n  var CollectionPrototype = Collection && Collection.prototype;\n  // some Chrome versions have non-configurable methods on DOMTokenList\n  if (CollectionPrototype && CollectionPrototype.forEach !== forEach) try {\n    createNonEnumerableProperty(CollectionPrototype, 'forEach', forEach);\n  } catch (error) {\n    CollectionPrototype.forEach = forEach;\n  }\n}\n","var global = require('../internals/global');\nvar DOMIterables = require('../internals/dom-iterables');\nvar ArrayIteratorMethods = require('../modules/es.array.iterator');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar ArrayValues = ArrayIteratorMethods.values;\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  var Collection = global[COLLECTION_NAME];\n  var CollectionPrototype = Collection && Collection.prototype;\n  if (CollectionPrototype) {\n    // some Chrome versions have non-configurable methods on DOMTokenList\n    if (CollectionPrototype[ITERATOR] !== ArrayValues) try {\n      createNonEnumerableProperty(CollectionPrototype, ITERATOR, ArrayValues);\n    } catch (error) {\n      CollectionPrototype[ITERATOR] = ArrayValues;\n    }\n    if (!CollectionPrototype[TO_STRING_TAG]) {\n      createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);\n    }\n    if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {\n      // some Chrome versions have non-configurable methods on DOMTokenList\n      if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {\n        createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);\n      } catch (error) {\n        CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];\n      }\n    }\n  }\n}\n","var $ = require('../internals/export');\nvar global = require('../internals/global');\nvar task = require('../internals/task');\n\nvar FORCED = !global.setImmediate || !global.clearImmediate;\n\n// http://w3c.github.io/setImmediate/\n$({ global: true, bind: true, enumerable: true, forced: FORCED }, {\n  // `setImmediate` method\n  // http://w3c.github.io/setImmediate/#si-setImmediate\n  setImmediate: task.set,\n  // `clearImmediate` method\n  // http://w3c.github.io/setImmediate/#si-clearImmediate\n  clearImmediate: task.clear\n});\n","var $ = require('../internals/export');\nvar global = require('../internals/global');\nvar microtask = require('../internals/microtask');\nvar classof = require('../internals/classof-raw');\n\nvar process = global.process;\nvar isNode = classof(process) == 'process';\n\n// `queueMicrotask` method\n// https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#dom-queuemicrotask\n$({ global: true, enumerable: true, noTargetGet: true }, {\n  queueMicrotask: function queueMicrotask(fn) {\n    var domain = isNode && process.domain;\n    microtask(domain ? domain.bind(fn) : fn);\n  }\n});\n","var $ = require('../internals/export');\nvar global = require('../internals/global');\nvar userAgent = require('../internals/user-agent');\n\nvar slice = [].slice;\nvar MSIE = /MSIE .\\./.test(userAgent); // <- dirty ie9- check\n\nvar wrap = function (scheduler) {\n  return function (handler, timeout /* , ...arguments */) {\n    var boundArgs = arguments.length > 2;\n    var args = boundArgs ? slice.call(arguments, 2) : undefined;\n    return scheduler(boundArgs ? function () {\n      // eslint-disable-next-line no-new-func\n      (typeof handler == 'function' ? handler : Function(handler)).apply(this, args);\n    } : handler, timeout);\n  };\n};\n\n// ie9- setTimeout & setInterval additional parameters fix\n// https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#timers\n$({ global: true, bind: true, forced: MSIE }, {\n  // `setTimeout` method\n  // https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#dom-settimeout\n  setTimeout: wrap(global.setTimeout),\n  // `setInterval` method\n  // https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#dom-setinterval\n  setInterval: wrap(global.setInterval)\n});\n","var fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\n\nvar ITERATOR = wellKnownSymbol('iterator');\n\nmodule.exports = !fails(function () {\n  var url = new URL('b?a=1&b=2&c=3', 'http://a');\n  var searchParams = url.searchParams;\n  var result = '';\n  url.pathname = 'c%20d';\n  searchParams.forEach(function (value, key) {\n    searchParams['delete']('b');\n    result += key + value;\n  });\n  return (IS_PURE && !url.toJSON)\n    || !searchParams.sort\n    || url.href !== 'http://a/c%20d?a=1&c=3'\n    || searchParams.get('c') !== '3'\n    || String(new URLSearchParams('?a=1')) !== 'a=1'\n    || !searchParams[ITERATOR]\n    // throws in Edge\n    || new URL('https://a@b').username !== 'a'\n    || new URLSearchParams(new URLSearchParams('a=b')).get('a') !== 'b'\n    // not punycoded in Edge\n    || new URL('http://тест').host !== 'xn--e1aybc'\n    // not escaped in Chrome 62-\n    || new URL('http://a#б').hash !== '#%D0%B1'\n    // fails in Chrome 66-\n    || result !== 'a1c3'\n    // throws in Safari\n    || new URL('http://x', undefined).host !== 'x';\n});\n","'use strict';\n// based on https://github.com/bestiejs/punycode.js/blob/master/punycode.js\nvar maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\nvar base = 36;\nvar tMin = 1;\nvar tMax = 26;\nvar skew = 38;\nvar damp = 700;\nvar initialBias = 72;\nvar initialN = 128; // 0x80\nvar delimiter = '-'; // '\\x2D'\nvar regexNonASCII = /[^\\0-\\u007E]/; // non-ASCII chars\nvar regexSeparators = /[.\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\nvar OVERFLOW_ERROR = 'Overflow: input needs wider integers to process';\nvar baseMinusTMin = base - tMin;\nvar floor = Math.floor;\nvar stringFromCharCode = String.fromCharCode;\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n */\nvar ucs2decode = function (string) {\n  var output = [];\n  var counter = 0;\n  var length = string.length;\n  while (counter < length) {\n    var value = string.charCodeAt(counter++);\n    if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n      // It's a high surrogate, and there is a next character.\n      var extra = string.charCodeAt(counter++);\n      if ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n        output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n      } else {\n        // It's an unmatched surrogate; only append this code unit, in case the\n        // next code unit is the high surrogate of a surrogate pair.\n        output.push(value);\n        counter--;\n      }\n    } else {\n      output.push(value);\n    }\n  }\n  return output;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n */\nvar digitToBasic = function (digit) {\n  //  0..25 map to ASCII a..z or A..Z\n  // 26..35 map to ASCII 0..9\n  return digit + 22 + 75 * (digit < 26);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n */\nvar adapt = function (delta, numPoints, firstTime) {\n  var k = 0;\n  delta = firstTime ? floor(delta / damp) : delta >> 1;\n  delta += floor(delta / numPoints);\n  for (; delta > baseMinusTMin * tMax >> 1; k += base) {\n    delta = floor(delta / baseMinusTMin);\n  }\n  return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n */\n// eslint-disable-next-line  max-statements\nvar encode = function (input) {\n  var output = [];\n\n  // Convert the input in UCS-2 to an array of Unicode code points.\n  input = ucs2decode(input);\n\n  // Cache the length.\n  var inputLength = input.length;\n\n  // Initialize the state.\n  var n = initialN;\n  var delta = 0;\n  var bias = initialBias;\n  var i, currentValue;\n\n  // Handle the basic code points.\n  for (i = 0; i < input.length; i++) {\n    currentValue = input[i];\n    if (currentValue < 0x80) {\n      output.push(stringFromCharCode(currentValue));\n    }\n  }\n\n  var basicLength = output.length; // number of basic code points.\n  var handledCPCount = basicLength; // number of code points that have been handled;\n\n  // Finish the basic string with a delimiter unless it's empty.\n  if (basicLength) {\n    output.push(delimiter);\n  }\n\n  // Main encoding loop:\n  while (handledCPCount < inputLength) {\n    // All non-basic code points < n have been handled already. Find the next larger one:\n    var m = maxInt;\n    for (i = 0; i < input.length; i++) {\n      currentValue = input[i];\n      if (currentValue >= n && currentValue < m) {\n        m = currentValue;\n      }\n    }\n\n    // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>, but guard against overflow.\n    var handledCPCountPlusOne = handledCPCount + 1;\n    if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n      throw RangeError(OVERFLOW_ERROR);\n    }\n\n    delta += (m - n) * handledCPCountPlusOne;\n    n = m;\n\n    for (i = 0; i < input.length; i++) {\n      currentValue = input[i];\n      if (currentValue < n && ++delta > maxInt) {\n        throw RangeError(OVERFLOW_ERROR);\n      }\n      if (currentValue == n) {\n        // Represent delta as a generalized variable-length integer.\n        var q = delta;\n        for (var k = base; /* no condition */; k += base) {\n          var t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n          if (q < t) break;\n          var qMinusT = q - t;\n          var baseMinusT = base - t;\n          output.push(stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT)));\n          q = floor(qMinusT / baseMinusT);\n        }\n\n        output.push(stringFromCharCode(digitToBasic(q)));\n        bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n        delta = 0;\n        ++handledCPCount;\n      }\n    }\n\n    ++delta;\n    ++n;\n  }\n  return output.join('');\n};\n\nmodule.exports = function (input) {\n  var encoded = [];\n  var labels = input.toLowerCase().replace(regexSeparators, '\\u002E').split('.');\n  var i, label;\n  for (i = 0; i < labels.length; i++) {\n    label = labels[i];\n    encoded.push(regexNonASCII.test(label) ? 'xn--' + encode(label) : label);\n  }\n  return encoded.join('.');\n};\n","var anObject = require('../internals/an-object');\nvar getIteratorMethod = require('../internals/get-iterator-method');\n\nmodule.exports = function (it) {\n  var iteratorMethod = getIteratorMethod(it);\n  if (typeof iteratorMethod != 'function') {\n    throw TypeError(String(it) + ' is not iterable');\n  } return anObject(iteratorMethod.call(it));\n};\n","'use strict';\n// TODO: in core-js@4, move /modules/ dependencies to public entries for better optimization by tools like `preset-env`\nrequire('../modules/es.array.iterator');\nvar $ = require('../internals/export');\nvar getBuiltIn = require('../internals/get-built-in');\nvar USE_NATIVE_URL = require('../internals/native-url');\nvar redefine = require('../internals/redefine');\nvar redefineAll = require('../internals/redefine-all');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar createIteratorConstructor = require('../internals/create-iterator-constructor');\nvar InternalStateModule = require('../internals/internal-state');\nvar anInstance = require('../internals/an-instance');\nvar hasOwn = require('../internals/has');\nvar bind = require('../internals/bind-context');\nvar classof = require('../internals/classof');\nvar anObject = require('../internals/an-object');\nvar isObject = require('../internals/is-object');\nvar create = require('../internals/object-create');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar getIterator = require('../internals/get-iterator');\nvar getIteratorMethod = require('../internals/get-iterator-method');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar $fetch = getBuiltIn('fetch');\nvar Headers = getBuiltIn('Headers');\nvar ITERATOR = wellKnownSymbol('iterator');\nvar URL_SEARCH_PARAMS = 'URLSearchParams';\nvar URL_SEARCH_PARAMS_ITERATOR = URL_SEARCH_PARAMS + 'Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalParamsState = InternalStateModule.getterFor(URL_SEARCH_PARAMS);\nvar getInternalIteratorState = InternalStateModule.getterFor(URL_SEARCH_PARAMS_ITERATOR);\n\nvar plus = /\\+/g;\nvar sequences = Array(4);\n\nvar percentSequence = function (bytes) {\n  return sequences[bytes - 1] || (sequences[bytes - 1] = RegExp('((?:%[\\\\da-f]{2}){' + bytes + '})', 'gi'));\n};\n\nvar percentDecode = function (sequence) {\n  try {\n    return decodeURIComponent(sequence);\n  } catch (error) {\n    return sequence;\n  }\n};\n\nvar deserialize = function (it) {\n  var result = it.replace(plus, ' ');\n  var bytes = 4;\n  try {\n    return decodeURIComponent(result);\n  } catch (error) {\n    while (bytes) {\n      result = result.replace(percentSequence(bytes--), percentDecode);\n    }\n    return result;\n  }\n};\n\nvar find = /[!'()~]|%20/g;\n\nvar replace = {\n  '!': '%21',\n  \"'\": '%27',\n  '(': '%28',\n  ')': '%29',\n  '~': '%7E',\n  '%20': '+'\n};\n\nvar replacer = function (match) {\n  return replace[match];\n};\n\nvar serialize = function (it) {\n  return encodeURIComponent(it).replace(find, replacer);\n};\n\nvar parseSearchParams = function (result, query) {\n  if (query) {\n    var attributes = query.split('&');\n    var index = 0;\n    var attribute, entry;\n    while (index < attributes.length) {\n      attribute = attributes[index++];\n      if (attribute.length) {\n        entry = attribute.split('=');\n        result.push({\n          key: deserialize(entry.shift()),\n          value: deserialize(entry.join('='))\n        });\n      }\n    }\n  }\n};\n\nvar updateSearchParams = function (query) {\n  this.entries.length = 0;\n  parseSearchParams(this.entries, query);\n};\n\nvar validateArgumentsLength = function (passed, required) {\n  if (passed < required) throw TypeError('Not enough arguments');\n};\n\nvar URLSearchParamsIterator = createIteratorConstructor(function Iterator(params, kind) {\n  setInternalState(this, {\n    type: URL_SEARCH_PARAMS_ITERATOR,\n    iterator: getIterator(getInternalParamsState(params).entries),\n    kind: kind\n  });\n}, 'Iterator', function next() {\n  var state = getInternalIteratorState(this);\n  var kind = state.kind;\n  var step = state.iterator.next();\n  var entry = step.value;\n  if (!step.done) {\n    step.value = kind === 'keys' ? entry.key : kind === 'values' ? entry.value : [entry.key, entry.value];\n  } return step;\n});\n\n// `URLSearchParams` constructor\n// https://url.spec.whatwg.org/#interface-urlsearchparams\nvar URLSearchParamsConstructor = function URLSearchParams(/* init */) {\n  anInstance(this, URLSearchParamsConstructor, URL_SEARCH_PARAMS);\n  var init = arguments.length > 0 ? arguments[0] : undefined;\n  var that = this;\n  var entries = [];\n  var iteratorMethod, iterator, next, step, entryIterator, entryNext, first, second, key;\n\n  setInternalState(that, {\n    type: URL_SEARCH_PARAMS,\n    entries: entries,\n    updateURL: function () { /* empty */ },\n    updateSearchParams: updateSearchParams\n  });\n\n  if (init !== undefined) {\n    if (isObject(init)) {\n      iteratorMethod = getIteratorMethod(init);\n      if (typeof iteratorMethod === 'function') {\n        iterator = iteratorMethod.call(init);\n        next = iterator.next;\n        while (!(step = next.call(iterator)).done) {\n          entryIterator = getIterator(anObject(step.value));\n          entryNext = entryIterator.next;\n          if (\n            (first = entryNext.call(entryIterator)).done ||\n            (second = entryNext.call(entryIterator)).done ||\n            !entryNext.call(entryIterator).done\n          ) throw TypeError('Expected sequence with length 2');\n          entries.push({ key: first.value + '', value: second.value + '' });\n        }\n      } else for (key in init) if (hasOwn(init, key)) entries.push({ key: key, value: init[key] + '' });\n    } else {\n      parseSearchParams(entries, typeof init === 'string' ? init.charAt(0) === '?' ? init.slice(1) : init : init + '');\n    }\n  }\n};\n\nvar URLSearchParamsPrototype = URLSearchParamsConstructor.prototype;\n\nredefineAll(URLSearchParamsPrototype, {\n  // `URLSearchParams.prototype.appent` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-append\n  append: function append(name, value) {\n    validateArgumentsLength(arguments.length, 2);\n    var state = getInternalParamsState(this);\n    state.entries.push({ key: name + '', value: value + '' });\n    state.updateURL();\n  },\n  // `URLSearchParams.prototype.delete` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-delete\n  'delete': function (name) {\n    validateArgumentsLength(arguments.length, 1);\n    var state = getInternalParamsState(this);\n    var entries = state.entries;\n    var key = name + '';\n    var index = 0;\n    while (index < entries.length) {\n      if (entries[index].key === key) entries.splice(index, 1);\n      else index++;\n    }\n    state.updateURL();\n  },\n  // `URLSearchParams.prototype.get` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-get\n  get: function get(name) {\n    validateArgumentsLength(arguments.length, 1);\n    var entries = getInternalParamsState(this).entries;\n    var key = name + '';\n    var index = 0;\n    for (; index < entries.length; index++) {\n      if (entries[index].key === key) return entries[index].value;\n    }\n    return null;\n  },\n  // `URLSearchParams.prototype.getAll` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-getall\n  getAll: function getAll(name) {\n    validateArgumentsLength(arguments.length, 1);\n    var entries = getInternalParamsState(this).entries;\n    var key = name + '';\n    var result = [];\n    var index = 0;\n    for (; index < entries.length; index++) {\n      if (entries[index].key === key) result.push(entries[index].value);\n    }\n    return result;\n  },\n  // `URLSearchParams.prototype.has` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-has\n  has: function has(name) {\n    validateArgumentsLength(arguments.length, 1);\n    var entries = getInternalParamsState(this).entries;\n    var key = name + '';\n    var index = 0;\n    while (index < entries.length) {\n      if (entries[index++].key === key) return true;\n    }\n    return false;\n  },\n  // `URLSearchParams.prototype.set` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-set\n  set: function set(name, value) {\n    validateArgumentsLength(arguments.length, 1);\n    var state = getInternalParamsState(this);\n    var entries = state.entries;\n    var found = false;\n    var key = name + '';\n    var val = value + '';\n    var index = 0;\n    var entry;\n    for (; index < entries.length; index++) {\n      entry = entries[index];\n      if (entry.key === key) {\n        if (found) entries.splice(index--, 1);\n        else {\n          found = true;\n          entry.value = val;\n        }\n      }\n    }\n    if (!found) entries.push({ key: key, value: val });\n    state.updateURL();\n  },\n  // `URLSearchParams.prototype.sort` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-sort\n  sort: function sort() {\n    var state = getInternalParamsState(this);\n    var entries = state.entries;\n    // Array#sort is not stable in some engines\n    var slice = entries.slice();\n    var entry, entriesIndex, sliceIndex;\n    entries.length = 0;\n    for (sliceIndex = 0; sliceIndex < slice.length; sliceIndex++) {\n      entry = slice[sliceIndex];\n      for (entriesIndex = 0; entriesIndex < sliceIndex; entriesIndex++) {\n        if (entries[entriesIndex].key > entry.key) {\n          entries.splice(entriesIndex, 0, entry);\n          break;\n        }\n      }\n      if (entriesIndex === sliceIndex) entries.push(entry);\n    }\n    state.updateURL();\n  },\n  // `URLSearchParams.prototype.forEach` method\n  forEach: function forEach(callback /* , thisArg */) {\n    var entries = getInternalParamsState(this).entries;\n    var boundFunction = bind(callback, arguments.length > 1 ? arguments[1] : undefined, 3);\n    var index = 0;\n    var entry;\n    while (index < entries.length) {\n      entry = entries[index++];\n      boundFunction(entry.value, entry.key, this);\n    }\n  },\n  // `URLSearchParams.prototype.keys` method\n  keys: function keys() {\n    return new URLSearchParamsIterator(this, 'keys');\n  },\n  // `URLSearchParams.prototype.values` method\n  values: function values() {\n    return new URLSearchParamsIterator(this, 'values');\n  },\n  // `URLSearchParams.prototype.entries` method\n  entries: function entries() {\n    return new URLSearchParamsIterator(this, 'entries');\n  }\n}, { enumerable: true });\n\n// `URLSearchParams.prototype[@@iterator]` method\nredefine(URLSearchParamsPrototype, ITERATOR, URLSearchParamsPrototype.entries);\n\n// `URLSearchParams.prototype.toString` method\n// https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior\nredefine(URLSearchParamsPrototype, 'toString', function toString() {\n  var entries = getInternalParamsState(this).entries;\n  var result = [];\n  var index = 0;\n  var entry;\n  while (index < entries.length) {\n    entry = entries[index++];\n    result.push(serialize(entry.key) + '=' + serialize(entry.value));\n  } return result.join('&');\n}, { enumerable: true });\n\nsetToStringTag(URLSearchParamsConstructor, URL_SEARCH_PARAMS);\n\n$({ global: true, forced: !USE_NATIVE_URL }, {\n  URLSearchParams: URLSearchParamsConstructor\n});\n\n// Wrap `fetch` for correct work with polyfilled `URLSearchParams`\n// https://github.com/zloirock/core-js/issues/674\nif (!USE_NATIVE_URL && typeof $fetch == 'function' && typeof Headers == 'function') {\n  $({ global: true, enumerable: true, forced: true }, {\n    fetch: function fetch(input /* , init */) {\n      var args = [input];\n      var init, body, headers;\n      if (arguments.length > 1) {\n        init = arguments[1];\n        if (isObject(init)) {\n          body = init.body;\n          if (classof(body) === URL_SEARCH_PARAMS) {\n            headers = init.headers ? new Headers(init.headers) : new Headers();\n            if (!headers.has('content-type')) {\n              headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n            }\n            init = create(init, {\n              body: createPropertyDescriptor(0, String(body)),\n              headers: createPropertyDescriptor(0, headers)\n            });\n          }\n        }\n        args.push(init);\n      } return $fetch.apply(this, args);\n    }\n  });\n}\n\nmodule.exports = {\n  URLSearchParams: URLSearchParamsConstructor,\n  getState: getInternalParamsState\n};\n","'use strict';\n// TODO: in core-js@4, move /modules/ dependencies to public entries for better optimization by tools like `preset-env`\nrequire('../modules/es.string.iterator');\nvar $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar USE_NATIVE_URL = require('../internals/native-url');\nvar global = require('../internals/global');\nvar defineProperties = require('../internals/object-define-properties');\nvar redefine = require('../internals/redefine');\nvar anInstance = require('../internals/an-instance');\nvar has = require('../internals/has');\nvar assign = require('../internals/object-assign');\nvar arrayFrom = require('../internals/array-from');\nvar codeAt = require('../internals/string-multibyte').codeAt;\nvar toASCII = require('../internals/punycode-to-ascii');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar URLSearchParamsModule = require('../modules/web.url-search-params');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar NativeURL = global.URL;\nvar URLSearchParams = URLSearchParamsModule.URLSearchParams;\nvar getInternalSearchParamsState = URLSearchParamsModule.getState;\nvar setInternalState = InternalStateModule.set;\nvar getInternalURLState = InternalStateModule.getterFor('URL');\nvar floor = Math.floor;\nvar pow = Math.pow;\n\nvar INVALID_AUTHORITY = 'Invalid authority';\nvar INVALID_SCHEME = 'Invalid scheme';\nvar INVALID_HOST = 'Invalid host';\nvar INVALID_PORT = 'Invalid port';\n\nvar ALPHA = /[A-Za-z]/;\nvar ALPHANUMERIC = /[\\d+\\-.A-Za-z]/;\nvar DIGIT = /\\d/;\nvar HEX_START = /^(0x|0X)/;\nvar OCT = /^[0-7]+$/;\nvar DEC = /^\\d+$/;\nvar HEX = /^[\\dA-Fa-f]+$/;\n// eslint-disable-next-line no-control-regex\nvar FORBIDDEN_HOST_CODE_POINT = /[\\u0000\\u0009\\u000A\\u000D #%/:?@[\\\\]]/;\n// eslint-disable-next-line no-control-regex\nvar FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT = /[\\u0000\\u0009\\u000A\\u000D #/:?@[\\\\]]/;\n// eslint-disable-next-line no-control-regex\nvar LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE = /^[\\u0000-\\u001F ]+|[\\u0000-\\u001F ]+$/g;\n// eslint-disable-next-line no-control-regex\nvar TAB_AND_NEW_LINE = /[\\u0009\\u000A\\u000D]/g;\nvar EOF;\n\nvar parseHost = function (url, input) {\n  var result, codePoints, index;\n  if (input.charAt(0) == '[') {\n    if (input.charAt(input.length - 1) != ']') return INVALID_HOST;\n    result = parseIPv6(input.slice(1, -1));\n    if (!result) return INVALID_HOST;\n    url.host = result;\n  // opaque host\n  } else if (!isSpecial(url)) {\n    if (FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT.test(input)) return INVALID_HOST;\n    result = '';\n    codePoints = arrayFrom(input);\n    for (index = 0; index < codePoints.length; index++) {\n      result += percentEncode(codePoints[index], C0ControlPercentEncodeSet);\n    }\n    url.host = result;\n  } else {\n    input = toASCII(input);\n    if (FORBIDDEN_HOST_CODE_POINT.test(input)) return INVALID_HOST;\n    result = parseIPv4(input);\n    if (result === null) return INVALID_HOST;\n    url.host = result;\n  }\n};\n\nvar parseIPv4 = function (input) {\n  var parts = input.split('.');\n  var partsLength, numbers, index, part, radix, number, ipv4;\n  if (parts.length && parts[parts.length - 1] == '') {\n    parts.pop();\n  }\n  partsLength = parts.length;\n  if (partsLength > 4) return input;\n  numbers = [];\n  for (index = 0; index < partsLength; index++) {\n    part = parts[index];\n    if (part == '') return input;\n    radix = 10;\n    if (part.length > 1 && part.charAt(0) == '0') {\n      radix = HEX_START.test(part) ? 16 : 8;\n      part = part.slice(radix == 8 ? 1 : 2);\n    }\n    if (part === '') {\n      number = 0;\n    } else {\n      if (!(radix == 10 ? DEC : radix == 8 ? OCT : HEX).test(part)) return input;\n      number = parseInt(part, radix);\n    }\n    numbers.push(number);\n  }\n  for (index = 0; index < partsLength; index++) {\n    number = numbers[index];\n    if (index == partsLength - 1) {\n      if (number >= pow(256, 5 - partsLength)) return null;\n    } else if (number > 255) return null;\n  }\n  ipv4 = numbers.pop();\n  for (index = 0; index < numbers.length; index++) {\n    ipv4 += numbers[index] * pow(256, 3 - index);\n  }\n  return ipv4;\n};\n\n// eslint-disable-next-line max-statements\nvar parseIPv6 = function (input) {\n  var address = [0, 0, 0, 0, 0, 0, 0, 0];\n  var pieceIndex = 0;\n  var compress = null;\n  var pointer = 0;\n  var value, length, numbersSeen, ipv4Piece, number, swaps, swap;\n\n  var char = function () {\n    return input.charAt(pointer);\n  };\n\n  if (char() == ':') {\n    if (input.charAt(1) != ':') return;\n    pointer += 2;\n    pieceIndex++;\n    compress = pieceIndex;\n  }\n  while (char()) {\n    if (pieceIndex == 8) return;\n    if (char() == ':') {\n      if (compress !== null) return;\n      pointer++;\n      pieceIndex++;\n      compress = pieceIndex;\n      continue;\n    }\n    value = length = 0;\n    while (length < 4 && HEX.test(char())) {\n      value = value * 16 + parseInt(char(), 16);\n      pointer++;\n      length++;\n    }\n    if (char() == '.') {\n      if (length == 0) return;\n      pointer -= length;\n      if (pieceIndex > 6) return;\n      numbersSeen = 0;\n      while (char()) {\n        ipv4Piece = null;\n        if (numbersSeen > 0) {\n          if (char() == '.' && numbersSeen < 4) pointer++;\n          else return;\n        }\n        if (!DIGIT.test(char())) return;\n        while (DIGIT.test(char())) {\n          number = parseInt(char(), 10);\n          if (ipv4Piece === null) ipv4Piece = number;\n          else if (ipv4Piece == 0) return;\n          else ipv4Piece = ipv4Piece * 10 + number;\n          if (ipv4Piece > 255) return;\n          pointer++;\n        }\n        address[pieceIndex] = address[pieceIndex] * 256 + ipv4Piece;\n        numbersSeen++;\n        if (numbersSeen == 2 || numbersSeen == 4) pieceIndex++;\n      }\n      if (numbersSeen != 4) return;\n      break;\n    } else if (char() == ':') {\n      pointer++;\n      if (!char()) return;\n    } else if (char()) return;\n    address[pieceIndex++] = value;\n  }\n  if (compress !== null) {\n    swaps = pieceIndex - compress;\n    pieceIndex = 7;\n    while (pieceIndex != 0 && swaps > 0) {\n      swap = address[pieceIndex];\n      address[pieceIndex--] = address[compress + swaps - 1];\n      address[compress + --swaps] = swap;\n    }\n  } else if (pieceIndex != 8) return;\n  return address;\n};\n\nvar findLongestZeroSequence = function (ipv6) {\n  var maxIndex = null;\n  var maxLength = 1;\n  var currStart = null;\n  var currLength = 0;\n  var index = 0;\n  for (; index < 8; index++) {\n    if (ipv6[index] !== 0) {\n      if (currLength > maxLength) {\n        maxIndex = currStart;\n        maxLength = currLength;\n      }\n      currStart = null;\n      currLength = 0;\n    } else {\n      if (currStart === null) currStart = index;\n      ++currLength;\n    }\n  }\n  if (currLength > maxLength) {\n    maxIndex = currStart;\n    maxLength = currLength;\n  }\n  return maxIndex;\n};\n\nvar serializeHost = function (host) {\n  var result, index, compress, ignore0;\n  // ipv4\n  if (typeof host == 'number') {\n    result = [];\n    for (index = 0; index < 4; index++) {\n      result.unshift(host % 256);\n      host = floor(host / 256);\n    } return result.join('.');\n  // ipv6\n  } else if (typeof host == 'object') {\n    result = '';\n    compress = findLongestZeroSequence(host);\n    for (index = 0; index < 8; index++) {\n      if (ignore0 && host[index] === 0) continue;\n      if (ignore0) ignore0 = false;\n      if (compress === index) {\n        result += index ? ':' : '::';\n        ignore0 = true;\n      } else {\n        result += host[index].toString(16);\n        if (index < 7) result += ':';\n      }\n    }\n    return '[' + result + ']';\n  } return host;\n};\n\nvar C0ControlPercentEncodeSet = {};\nvar fragmentPercentEncodeSet = assign({}, C0ControlPercentEncodeSet, {\n  ' ': 1, '\"': 1, '<': 1, '>': 1, '`': 1\n});\nvar pathPercentEncodeSet = assign({}, fragmentPercentEncodeSet, {\n  '#': 1, '?': 1, '{': 1, '}': 1\n});\nvar userinfoPercentEncodeSet = assign({}, pathPercentEncodeSet, {\n  '/': 1, ':': 1, ';': 1, '=': 1, '@': 1, '[': 1, '\\\\': 1, ']': 1, '^': 1, '|': 1\n});\n\nvar percentEncode = function (char, set) {\n  var code = codeAt(char, 0);\n  return code > 0x20 && code < 0x7F && !has(set, char) ? char : encodeURIComponent(char);\n};\n\nvar specialSchemes = {\n  ftp: 21,\n  file: null,\n  http: 80,\n  https: 443,\n  ws: 80,\n  wss: 443\n};\n\nvar isSpecial = function (url) {\n  return has(specialSchemes, url.scheme);\n};\n\nvar includesCredentials = function (url) {\n  return url.username != '' || url.password != '';\n};\n\nvar cannotHaveUsernamePasswordPort = function (url) {\n  return !url.host || url.cannotBeABaseURL || url.scheme == 'file';\n};\n\nvar isWindowsDriveLetter = function (string, normalized) {\n  var second;\n  return string.length == 2 && ALPHA.test(string.charAt(0))\n    && ((second = string.charAt(1)) == ':' || (!normalized && second == '|'));\n};\n\nvar startsWithWindowsDriveLetter = function (string) {\n  var third;\n  return string.length > 1 && isWindowsDriveLetter(string.slice(0, 2)) && (\n    string.length == 2 ||\n    ((third = string.charAt(2)) === '/' || third === '\\\\' || third === '?' || third === '#')\n  );\n};\n\nvar shortenURLsPath = function (url) {\n  var path = url.path;\n  var pathSize = path.length;\n  if (pathSize && (url.scheme != 'file' || pathSize != 1 || !isWindowsDriveLetter(path[0], true))) {\n    path.pop();\n  }\n};\n\nvar isSingleDot = function (segment) {\n  return segment === '.' || segment.toLowerCase() === '%2e';\n};\n\nvar isDoubleDot = function (segment) {\n  segment = segment.toLowerCase();\n  return segment === '..' || segment === '%2e.' || segment === '.%2e' || segment === '%2e%2e';\n};\n\n// States:\nvar SCHEME_START = {};\nvar SCHEME = {};\nvar NO_SCHEME = {};\nvar SPECIAL_RELATIVE_OR_AUTHORITY = {};\nvar PATH_OR_AUTHORITY = {};\nvar RELATIVE = {};\nvar RELATIVE_SLASH = {};\nvar SPECIAL_AUTHORITY_SLASHES = {};\nvar SPECIAL_AUTHORITY_IGNORE_SLASHES = {};\nvar AUTHORITY = {};\nvar HOST = {};\nvar HOSTNAME = {};\nvar PORT = {};\nvar FILE = {};\nvar FILE_SLASH = {};\nvar FILE_HOST = {};\nvar PATH_START = {};\nvar PATH = {};\nvar CANNOT_BE_A_BASE_URL_PATH = {};\nvar QUERY = {};\nvar FRAGMENT = {};\n\n// eslint-disable-next-line max-statements\nvar parseURL = function (url, input, stateOverride, base) {\n  var state = stateOverride || SCHEME_START;\n  var pointer = 0;\n  var buffer = '';\n  var seenAt = false;\n  var seenBracket = false;\n  var seenPasswordToken = false;\n  var codePoints, char, bufferCodePoints, failure;\n\n  if (!stateOverride) {\n    url.scheme = '';\n    url.username = '';\n    url.password = '';\n    url.host = null;\n    url.port = null;\n    url.path = [];\n    url.query = null;\n    url.fragment = null;\n    url.cannotBeABaseURL = false;\n    input = input.replace(LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE, '');\n  }\n\n  input = input.replace(TAB_AND_NEW_LINE, '');\n\n  codePoints = arrayFrom(input);\n\n  while (pointer <= codePoints.length) {\n    char = codePoints[pointer];\n    switch (state) {\n      case SCHEME_START:\n        if (char && ALPHA.test(char)) {\n          buffer += char.toLowerCase();\n          state = SCHEME;\n        } else if (!stateOverride) {\n          state = NO_SCHEME;\n          continue;\n        } else return INVALID_SCHEME;\n        break;\n\n      case SCHEME:\n        if (char && (ALPHANUMERIC.test(char) || char == '+' || char == '-' || char == '.')) {\n          buffer += char.toLowerCase();\n        } else if (char == ':') {\n          if (stateOverride && (\n            (isSpecial(url) != has(specialSchemes, buffer)) ||\n            (buffer == 'file' && (includesCredentials(url) || url.port !== null)) ||\n            (url.scheme == 'file' && !url.host)\n          )) return;\n          url.scheme = buffer;\n          if (stateOverride) {\n            if (isSpecial(url) && specialSchemes[url.scheme] == url.port) url.port = null;\n            return;\n          }\n          buffer = '';\n          if (url.scheme == 'file') {\n            state = FILE;\n          } else if (isSpecial(url) && base && base.scheme == url.scheme) {\n            state = SPECIAL_RELATIVE_OR_AUTHORITY;\n          } else if (isSpecial(url)) {\n            state = SPECIAL_AUTHORITY_SLASHES;\n          } else if (codePoints[pointer + 1] == '/') {\n            state = PATH_OR_AUTHORITY;\n            pointer++;\n          } else {\n            url.cannotBeABaseURL = true;\n            url.path.push('');\n            state = CANNOT_BE_A_BASE_URL_PATH;\n          }\n        } else if (!stateOverride) {\n          buffer = '';\n          state = NO_SCHEME;\n          pointer = 0;\n          continue;\n        } else return INVALID_SCHEME;\n        break;\n\n      case NO_SCHEME:\n        if (!base || (base.cannotBeABaseURL && char != '#')) return INVALID_SCHEME;\n        if (base.cannotBeABaseURL && char == '#') {\n          url.scheme = base.scheme;\n          url.path = base.path.slice();\n          url.query = base.query;\n          url.fragment = '';\n          url.cannotBeABaseURL = true;\n          state = FRAGMENT;\n          break;\n        }\n        state = base.scheme == 'file' ? FILE : RELATIVE;\n        continue;\n\n      case SPECIAL_RELATIVE_OR_AUTHORITY:\n        if (char == '/' && codePoints[pointer + 1] == '/') {\n          state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\n          pointer++;\n        } else {\n          state = RELATIVE;\n          continue;\n        } break;\n\n      case PATH_OR_AUTHORITY:\n        if (char == '/') {\n          state = AUTHORITY;\n          break;\n        } else {\n          state = PATH;\n          continue;\n        }\n\n      case RELATIVE:\n        url.scheme = base.scheme;\n        if (char == EOF) {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          url.path = base.path.slice();\n          url.query = base.query;\n        } else if (char == '/' || (char == '\\\\' && isSpecial(url))) {\n          state = RELATIVE_SLASH;\n        } else if (char == '?') {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          url.path = base.path.slice();\n          url.query = '';\n          state = QUERY;\n        } else if (char == '#') {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          url.path = base.path.slice();\n          url.query = base.query;\n          url.fragment = '';\n          state = FRAGMENT;\n        } else {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          url.path = base.path.slice();\n          url.path.pop();\n          state = PATH;\n          continue;\n        } break;\n\n      case RELATIVE_SLASH:\n        if (isSpecial(url) && (char == '/' || char == '\\\\')) {\n          state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\n        } else if (char == '/') {\n          state = AUTHORITY;\n        } else {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          state = PATH;\n          continue;\n        } break;\n\n      case SPECIAL_AUTHORITY_SLASHES:\n        state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\n        if (char != '/' || buffer.charAt(pointer + 1) != '/') continue;\n        pointer++;\n        break;\n\n      case SPECIAL_AUTHORITY_IGNORE_SLASHES:\n        if (char != '/' && char != '\\\\') {\n          state = AUTHORITY;\n          continue;\n        } break;\n\n      case AUTHORITY:\n        if (char == '@') {\n          if (seenAt) buffer = '%40' + buffer;\n          seenAt = true;\n          bufferCodePoints = arrayFrom(buffer);\n          for (var i = 0; i < bufferCodePoints.length; i++) {\n            var codePoint = bufferCodePoints[i];\n            if (codePoint == ':' && !seenPasswordToken) {\n              seenPasswordToken = true;\n              continue;\n            }\n            var encodedCodePoints = percentEncode(codePoint, userinfoPercentEncodeSet);\n            if (seenPasswordToken) url.password += encodedCodePoints;\n            else url.username += encodedCodePoints;\n          }\n          buffer = '';\n        } else if (\n          char == EOF || char == '/' || char == '?' || char == '#' ||\n          (char == '\\\\' && isSpecial(url))\n        ) {\n          if (seenAt && buffer == '') return INVALID_AUTHORITY;\n          pointer -= arrayFrom(buffer).length + 1;\n          buffer = '';\n          state = HOST;\n        } else buffer += char;\n        break;\n\n      case HOST:\n      case HOSTNAME:\n        if (stateOverride && url.scheme == 'file') {\n          state = FILE_HOST;\n          continue;\n        } else if (char == ':' && !seenBracket) {\n          if (buffer == '') return INVALID_HOST;\n          failure = parseHost(url, buffer);\n          if (failure) return failure;\n          buffer = '';\n          state = PORT;\n          if (stateOverride == HOSTNAME) return;\n        } else if (\n          char == EOF || char == '/' || char == '?' || char == '#' ||\n          (char == '\\\\' && isSpecial(url))\n        ) {\n          if (isSpecial(url) && buffer == '') return INVALID_HOST;\n          if (stateOverride && buffer == '' && (includesCredentials(url) || url.port !== null)) return;\n          failure = parseHost(url, buffer);\n          if (failure) return failure;\n          buffer = '';\n          state = PATH_START;\n          if (stateOverride) return;\n          continue;\n        } else {\n          if (char == '[') seenBracket = true;\n          else if (char == ']') seenBracket = false;\n          buffer += char;\n        } break;\n\n      case PORT:\n        if (DIGIT.test(char)) {\n          buffer += char;\n        } else if (\n          char == EOF || char == '/' || char == '?' || char == '#' ||\n          (char == '\\\\' && isSpecial(url)) ||\n          stateOverride\n        ) {\n          if (buffer != '') {\n            var port = parseInt(buffer, 10);\n            if (port > 0xFFFF) return INVALID_PORT;\n            url.port = (isSpecial(url) && port === specialSchemes[url.scheme]) ? null : port;\n            buffer = '';\n          }\n          if (stateOverride) return;\n          state = PATH_START;\n          continue;\n        } else return INVALID_PORT;\n        break;\n\n      case FILE:\n        url.scheme = 'file';\n        if (char == '/' || char == '\\\\') state = FILE_SLASH;\n        else if (base && base.scheme == 'file') {\n          if (char == EOF) {\n            url.host = base.host;\n            url.path = base.path.slice();\n            url.query = base.query;\n          } else if (char == '?') {\n            url.host = base.host;\n            url.path = base.path.slice();\n            url.query = '';\n            state = QUERY;\n          } else if (char == '#') {\n            url.host = base.host;\n            url.path = base.path.slice();\n            url.query = base.query;\n            url.fragment = '';\n            state = FRAGMENT;\n          } else {\n            if (!startsWithWindowsDriveLetter(codePoints.slice(pointer).join(''))) {\n              url.host = base.host;\n              url.path = base.path.slice();\n              shortenURLsPath(url);\n            }\n            state = PATH;\n            continue;\n          }\n        } else {\n          state = PATH;\n          continue;\n        } break;\n\n      case FILE_SLASH:\n        if (char == '/' || char == '\\\\') {\n          state = FILE_HOST;\n          break;\n        }\n        if (base && base.scheme == 'file' && !startsWithWindowsDriveLetter(codePoints.slice(pointer).join(''))) {\n          if (isWindowsDriveLetter(base.path[0], true)) url.path.push(base.path[0]);\n          else url.host = base.host;\n        }\n        state = PATH;\n        continue;\n\n      case FILE_HOST:\n        if (char == EOF || char == '/' || char == '\\\\' || char == '?' || char == '#') {\n          if (!stateOverride && isWindowsDriveLetter(buffer)) {\n            state = PATH;\n          } else if (buffer == '') {\n            url.host = '';\n            if (stateOverride) return;\n            state = PATH_START;\n          } else {\n            failure = parseHost(url, buffer);\n            if (failure) return failure;\n            if (url.host == 'localhost') url.host = '';\n            if (stateOverride) return;\n            buffer = '';\n            state = PATH_START;\n          } continue;\n        } else buffer += char;\n        break;\n\n      case PATH_START:\n        if (isSpecial(url)) {\n          state = PATH;\n          if (char != '/' && char != '\\\\') continue;\n        } else if (!stateOverride && char == '?') {\n          url.query = '';\n          state = QUERY;\n        } else if (!stateOverride && char == '#') {\n          url.fragment = '';\n          state = FRAGMENT;\n        } else if (char != EOF) {\n          state = PATH;\n          if (char != '/') continue;\n        } break;\n\n      case PATH:\n        if (\n          char == EOF || char == '/' ||\n          (char == '\\\\' && isSpecial(url)) ||\n          (!stateOverride && (char == '?' || char == '#'))\n        ) {\n          if (isDoubleDot(buffer)) {\n            shortenURLsPath(url);\n            if (char != '/' && !(char == '\\\\' && isSpecial(url))) {\n              url.path.push('');\n            }\n          } else if (isSingleDot(buffer)) {\n            if (char != '/' && !(char == '\\\\' && isSpecial(url))) {\n              url.path.push('');\n            }\n          } else {\n            if (url.scheme == 'file' && !url.path.length && isWindowsDriveLetter(buffer)) {\n              if (url.host) url.host = '';\n              buffer = buffer.charAt(0) + ':'; // normalize windows drive letter\n            }\n            url.path.push(buffer);\n          }\n          buffer = '';\n          if (url.scheme == 'file' && (char == EOF || char == '?' || char == '#')) {\n            while (url.path.length > 1 && url.path[0] === '') {\n              url.path.shift();\n            }\n          }\n          if (char == '?') {\n            url.query = '';\n            state = QUERY;\n          } else if (char == '#') {\n            url.fragment = '';\n            state = FRAGMENT;\n          }\n        } else {\n          buffer += percentEncode(char, pathPercentEncodeSet);\n        } break;\n\n      case CANNOT_BE_A_BASE_URL_PATH:\n        if (char == '?') {\n          url.query = '';\n          state = QUERY;\n        } else if (char == '#') {\n          url.fragment = '';\n          state = FRAGMENT;\n        } else if (char != EOF) {\n          url.path[0] += percentEncode(char, C0ControlPercentEncodeSet);\n        } break;\n\n      case QUERY:\n        if (!stateOverride && char == '#') {\n          url.fragment = '';\n          state = FRAGMENT;\n        } else if (char != EOF) {\n          if (char == \"'\" && isSpecial(url)) url.query += '%27';\n          else if (char == '#') url.query += '%23';\n          else url.query += percentEncode(char, C0ControlPercentEncodeSet);\n        } break;\n\n      case FRAGMENT:\n        if (char != EOF) url.fragment += percentEncode(char, fragmentPercentEncodeSet);\n        break;\n    }\n\n    pointer++;\n  }\n};\n\n// `URL` constructor\n// https://url.spec.whatwg.org/#url-class\nvar URLConstructor = function URL(url /* , base */) {\n  var that = anInstance(this, URLConstructor, 'URL');\n  var base = arguments.length > 1 ? arguments[1] : undefined;\n  var urlString = String(url);\n  var state = setInternalState(that, { type: 'URL' });\n  var baseState, failure;\n  if (base !== undefined) {\n    if (base instanceof URLConstructor) baseState = getInternalURLState(base);\n    else {\n      failure = parseURL(baseState = {}, String(base));\n      if (failure) throw TypeError(failure);\n    }\n  }\n  failure = parseURL(state, urlString, null, baseState);\n  if (failure) throw TypeError(failure);\n  var searchParams = state.searchParams = new URLSearchParams();\n  var searchParamsState = getInternalSearchParamsState(searchParams);\n  searchParamsState.updateSearchParams(state.query);\n  searchParamsState.updateURL = function () {\n    state.query = String(searchParams) || null;\n  };\n  if (!DESCRIPTORS) {\n    that.href = serializeURL.call(that);\n    that.origin = getOrigin.call(that);\n    that.protocol = getProtocol.call(that);\n    that.username = getUsername.call(that);\n    that.password = getPassword.call(that);\n    that.host = getHost.call(that);\n    that.hostname = getHostname.call(that);\n    that.port = getPort.call(that);\n    that.pathname = getPathname.call(that);\n    that.search = getSearch.call(that);\n    that.searchParams = getSearchParams.call(that);\n    that.hash = getHash.call(that);\n  }\n};\n\nvar URLPrototype = URLConstructor.prototype;\n\nvar serializeURL = function () {\n  var url = getInternalURLState(this);\n  var scheme = url.scheme;\n  var username = url.username;\n  var password = url.password;\n  var host = url.host;\n  var port = url.port;\n  var path = url.path;\n  var query = url.query;\n  var fragment = url.fragment;\n  var output = scheme + ':';\n  if (host !== null) {\n    output += '//';\n    if (includesCredentials(url)) {\n      output += username + (password ? ':' + password : '') + '@';\n    }\n    output += serializeHost(host);\n    if (port !== null) output += ':' + port;\n  } else if (scheme == 'file') output += '//';\n  output += url.cannotBeABaseURL ? path[0] : path.length ? '/' + path.join('/') : '';\n  if (query !== null) output += '?' + query;\n  if (fragment !== null) output += '#' + fragment;\n  return output;\n};\n\nvar getOrigin = function () {\n  var url = getInternalURLState(this);\n  var scheme = url.scheme;\n  var port = url.port;\n  if (scheme == 'blob') try {\n    return new URL(scheme.path[0]).origin;\n  } catch (error) {\n    return 'null';\n  }\n  if (scheme == 'file' || !isSpecial(url)) return 'null';\n  return scheme + '://' + serializeHost(url.host) + (port !== null ? ':' + port : '');\n};\n\nvar getProtocol = function () {\n  return getInternalURLState(this).scheme + ':';\n};\n\nvar getUsername = function () {\n  return getInternalURLState(this).username;\n};\n\nvar getPassword = function () {\n  return getInternalURLState(this).password;\n};\n\nvar getHost = function () {\n  var url = getInternalURLState(this);\n  var host = url.host;\n  var port = url.port;\n  return host === null ? ''\n    : port === null ? serializeHost(host)\n    : serializeHost(host) + ':' + port;\n};\n\nvar getHostname = function () {\n  var host = getInternalURLState(this).host;\n  return host === null ? '' : serializeHost(host);\n};\n\nvar getPort = function () {\n  var port = getInternalURLState(this).port;\n  return port === null ? '' : String(port);\n};\n\nvar getPathname = function () {\n  var url = getInternalURLState(this);\n  var path = url.path;\n  return url.cannotBeABaseURL ? path[0] : path.length ? '/' + path.join('/') : '';\n};\n\nvar getSearch = function () {\n  var query = getInternalURLState(this).query;\n  return query ? '?' + query : '';\n};\n\nvar getSearchParams = function () {\n  return getInternalURLState(this).searchParams;\n};\n\nvar getHash = function () {\n  var fragment = getInternalURLState(this).fragment;\n  return fragment ? '#' + fragment : '';\n};\n\nvar accessorDescriptor = function (getter, setter) {\n  return { get: getter, set: setter, configurable: true, enumerable: true };\n};\n\nif (DESCRIPTORS) {\n  defineProperties(URLPrototype, {\n    // `URL.prototype.href` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-href\n    href: accessorDescriptor(serializeURL, function (href) {\n      var url = getInternalURLState(this);\n      var urlString = String(href);\n      var failure = parseURL(url, urlString);\n      if (failure) throw TypeError(failure);\n      getInternalSearchParamsState(url.searchParams).updateSearchParams(url.query);\n    }),\n    // `URL.prototype.origin` getter\n    // https://url.spec.whatwg.org/#dom-url-origin\n    origin: accessorDescriptor(getOrigin),\n    // `URL.prototype.protocol` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-protocol\n    protocol: accessorDescriptor(getProtocol, function (protocol) {\n      var url = getInternalURLState(this);\n      parseURL(url, String(protocol) + ':', SCHEME_START);\n    }),\n    // `URL.prototype.username` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-username\n    username: accessorDescriptor(getUsername, function (username) {\n      var url = getInternalURLState(this);\n      var codePoints = arrayFrom(String(username));\n      if (cannotHaveUsernamePasswordPort(url)) return;\n      url.username = '';\n      for (var i = 0; i < codePoints.length; i++) {\n        url.username += percentEncode(codePoints[i], userinfoPercentEncodeSet);\n      }\n    }),\n    // `URL.prototype.password` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-password\n    password: accessorDescriptor(getPassword, function (password) {\n      var url = getInternalURLState(this);\n      var codePoints = arrayFrom(String(password));\n      if (cannotHaveUsernamePasswordPort(url)) return;\n      url.password = '';\n      for (var i = 0; i < codePoints.length; i++) {\n        url.password += percentEncode(codePoints[i], userinfoPercentEncodeSet);\n      }\n    }),\n    // `URL.prototype.host` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-host\n    host: accessorDescriptor(getHost, function (host) {\n      var url = getInternalURLState(this);\n      if (url.cannotBeABaseURL) return;\n      parseURL(url, String(host), HOST);\n    }),\n    // `URL.prototype.hostname` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-hostname\n    hostname: accessorDescriptor(getHostname, function (hostname) {\n      var url = getInternalURLState(this);\n      if (url.cannotBeABaseURL) return;\n      parseURL(url, String(hostname), HOSTNAME);\n    }),\n    // `URL.prototype.port` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-port\n    port: accessorDescriptor(getPort, function (port) {\n      var url = getInternalURLState(this);\n      if (cannotHaveUsernamePasswordPort(url)) return;\n      port = String(port);\n      if (port == '') url.port = null;\n      else parseURL(url, port, PORT);\n    }),\n    // `URL.prototype.pathname` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-pathname\n    pathname: accessorDescriptor(getPathname, function (pathname) {\n      var url = getInternalURLState(this);\n      if (url.cannotBeABaseURL) return;\n      url.path = [];\n      parseURL(url, pathname + '', PATH_START);\n    }),\n    // `URL.prototype.search` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-search\n    search: accessorDescriptor(getSearch, function (search) {\n      var url = getInternalURLState(this);\n      search = String(search);\n      if (search == '') {\n        url.query = null;\n      } else {\n        if ('?' == search.charAt(0)) search = search.slice(1);\n        url.query = '';\n        parseURL(url, search, QUERY);\n      }\n      getInternalSearchParamsState(url.searchParams).updateSearchParams(url.query);\n    }),\n    // `URL.prototype.searchParams` getter\n    // https://url.spec.whatwg.org/#dom-url-searchparams\n    searchParams: accessorDescriptor(getSearchParams),\n    // `URL.prototype.hash` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-hash\n    hash: accessorDescriptor(getHash, function (hash) {\n      var url = getInternalURLState(this);\n      hash = String(hash);\n      if (hash == '') {\n        url.fragment = null;\n        return;\n      }\n      if ('#' == hash.charAt(0)) hash = hash.slice(1);\n      url.fragment = '';\n      parseURL(url, hash, FRAGMENT);\n    })\n  });\n}\n\n// `URL.prototype.toJSON` method\n// https://url.spec.whatwg.org/#dom-url-tojson\nredefine(URLPrototype, 'toJSON', function toJSON() {\n  return serializeURL.call(this);\n}, { enumerable: true });\n\n// `URL.prototype.toString` method\n// https://url.spec.whatwg.org/#URL-stringification-behavior\nredefine(URLPrototype, 'toString', function toString() {\n  return serializeURL.call(this);\n}, { enumerable: true });\n\nif (NativeURL) {\n  var nativeCreateObjectURL = NativeURL.createObjectURL;\n  var nativeRevokeObjectURL = NativeURL.revokeObjectURL;\n  // `URL.createObjectURL` method\n  // https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL\n  // eslint-disable-next-line no-unused-vars\n  if (nativeCreateObjectURL) redefine(URLConstructor, 'createObjectURL', function createObjectURL(blob) {\n    return nativeCreateObjectURL.apply(NativeURL, arguments);\n  });\n  // `URL.revokeObjectURL` method\n  // https://developer.mozilla.org/en-US/docs/Web/API/URL/revokeObjectURL\n  // eslint-disable-next-line no-unused-vars\n  if (nativeRevokeObjectURL) redefine(URLConstructor, 'revokeObjectURL', function revokeObjectURL(url) {\n    return nativeRevokeObjectURL.apply(NativeURL, arguments);\n  });\n}\n\nsetToStringTag(URLConstructor, 'URL');\n\n$({ global: true, forced: !USE_NATIVE_URL, sham: !DESCRIPTORS }, {\n  URL: URLConstructor\n});\n","'use strict';\nvar $ = require('../internals/export');\n\n// `URL.prototype.toJSON` method\n// https://url.spec.whatwg.org/#dom-url-tojson\n$({ target: 'URL', proto: true, enumerable: true }, {\n  toJSON: function toJSON() {\n    return URL.prototype.toString.call(this);\n  }\n});\n","require('../modules/web.dom-collections.for-each');\nrequire('../modules/web.dom-collections.iterator');\nrequire('../modules/web.immediate');\nrequire('../modules/web.queue-microtask');\nrequire('../modules/web.timers');\nrequire('../modules/web.url');\nrequire('../modules/web.url.to-json');\nrequire('../modules/web.url-search-params');\nvar path = require('../internals/path');\n\nmodule.exports = path;\n","require('../es');\nrequire('../web');\nvar path = require('../internals/path');\n\nmodule.exports = path;\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","/*\n * Copyright 2016 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy of\n * the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n\nmodule.exports = function proxyPolyfill() {\n  let lastRevokeFn = null;\n  let ProxyPolyfill;\n\n  /**\n   * @param {*} o\n   * @return {boolean} whether this is probably a (non-null) Object\n   */\n  function isObject(o) {\n    return o ? (typeof o === 'object' || typeof o === 'function') : false;\n  }\n\n  /**\n   * @constructor\n   * @param {!Object} target\n   * @param {{apply, construct, get, set}} handler\n   */\n  ProxyPolyfill = function(target, handler) {\n    if (!isObject(target) || !isObject(handler)) {\n      throw new TypeError('Cannot create proxy with a non-object as target or handler');\n    }\n\n    // Construct revoke function, and set lastRevokeFn so that Proxy.revocable can steal it.\n    // The caller might get the wrong revoke function if a user replaces or wraps scope.Proxy\n    // to call itself, but that seems unlikely especially when using the polyfill.\n    let throwRevoked = function() {};\n    lastRevokeFn = function() {\n      throwRevoked = function(trap) {\n        throw new TypeError(`Cannot perform '${trap}' on a proxy that has been revoked`);\n      };\n    };\n\n    // Fail on unsupported traps: Chrome doesn't do this, but ensure that users of the polyfill\n    // are a bit more careful. Copy the internal parts of handler to prevent user changes.\n    const unsafeHandler = handler;\n    handler = { 'get': null, 'set': null, 'apply': null, 'construct': null };\n    for (let k in unsafeHandler) {\n      if (!(k in handler)) {\n        throw new TypeError(`Proxy polyfill does not support trap '${k}'`);\n      }\n      handler[k] = unsafeHandler[k];\n    }\n    if (typeof unsafeHandler === 'function') {\n      // Allow handler to be a function (which has an 'apply' method). This matches what is\n      // probably a bug in native versions. It treats the apply call as a trap to be configured.\n      handler.apply = unsafeHandler.apply.bind(unsafeHandler);\n    }\n\n    // Define proxy as this, or a Function (if either it's callable, or apply is set).\n    // TODO(samthor): Closure compiler doesn't know about 'construct', attempts to rename it.\n    let proxy = this;\n    let isMethod = false;\n    let isArray = false;\n    if (typeof target === 'function') {\n      proxy = function ProxyPolyfill() {\n        const usingNew = (this && this.constructor === proxy);\n        const args = Array.prototype.slice.call(arguments);\n        throwRevoked(usingNew ? 'construct' : 'apply');\n\n        if (usingNew && handler['construct']) {\n          return handler['construct'].call(this, target, args);\n        } else if (!usingNew && handler.apply) {\n          return handler.apply(target, this, args);\n        }\n\n        // since the target was a function, fallback to calling it directly.\n        if (usingNew) {\n          // inspired by answers to https://stackoverflow.com/q/1606797\n          args.unshift(target);  // pass class as first arg to constructor, although irrelevant\n          // nb. cast to convince Closure compiler that this is a constructor\n          const f = /** @type {!Function} */ (target.bind.apply(target, args));\n          return new f();\n        }\n        return target.apply(this, args);\n      };\n      isMethod = true;\n    } else if (target instanceof Array) {\n      proxy = [];\n      isArray = true;\n    }\n\n    // Create default getters/setters. Create different code paths as handler.get/handler.set can't\n    // change after creation.\n    const getter = handler.get ? function(prop) {\n      throwRevoked('get');\n      return handler.get(this, prop, proxy);\n    } : function(prop) {\n      throwRevoked('get');\n      return this[prop];\n    };\n    const setter = handler.set ? function(prop, value) {\n      throwRevoked('set');\n      const status = handler.set(this, prop, value, proxy);\n      // TODO(samthor): If the calling code is in strict mode, throw TypeError.\n      // if (!status) {\n        // It's (sometimes) possible to work this out, if this code isn't strict- try to load the\n        // callee, and if it's available, that code is non-strict. However, this isn't exhaustive.\n      // }\n    } : function(prop, value) {\n      throwRevoked('set');\n      this[prop] = value;\n    };\n\n    // Clone direct properties (i.e., not part of a prototype).\n    const propertyNames = Object.getOwnPropertyNames(target);\n    const propertyMap = {};\n    propertyNames.forEach(function(prop) {\n      if ((isMethod || isArray) && prop in proxy) {\n        return;  // ignore properties already here, e.g. 'bind', 'prototype' etc\n      }\n      const real = Object.getOwnPropertyDescriptor(target, prop);\n      const desc = {\n        enumerable: !!real.enumerable,\n        get: getter.bind(target, prop),\n        set: setter.bind(target, prop),\n      };\n      Object.defineProperty(proxy, prop, desc);\n      propertyMap[prop] = true;\n    });\n\n    // Set the prototype, or clone all prototype methods (always required if a getter is provided).\n    // TODO(samthor): We don't allow prototype methods to be set. It's (even more) awkward.\n    // An alternative here would be to _just_ clone methods to keep behavior consistent.\n    let prototypeOk = true;\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(proxy, Object.getPrototypeOf(target));\n    } else if (proxy.__proto__) {\n      proxy.__proto__ = target.__proto__;\n    } else {\n      prototypeOk = false;\n    }\n    if (handler.get || !prototypeOk) {\n      for (let k in target) {\n        if (propertyMap[k]) {\n          continue;\n        }\n        Object.defineProperty(proxy, k, { get: getter.bind(target, k) });\n      }\n    }\n\n    // The Proxy polyfill cannot handle adding new properties. Seal the target and proxy.\n    Object.seal(target);\n    Object.seal(proxy);\n\n    return proxy;  // nb. if isMethod is true, proxy != this\n  };\n\n  ProxyPolyfill.revocable = function(target, handler) {\n    const p = new ProxyPolyfill(target, handler);\n    return { 'proxy': p, 'revoke': lastRevokeFn };\n  };\n\n  return ProxyPolyfill;\n}","var r={data:\"\"},e=function(e){try{var t=e?e.querySelector(\"#_goober\"):self._goober;return t||((t=(e||document.head).appendChild(document.createElement(\"style\"))).innerHTML=\" \",t.id=\"_goober\"),t.firstChild}catch(r){}return r},t=function(r){var t=e(r),a=t.data;return t.data=\"\",a},a=/(?:([a-z0-9-%@]+) *:? *([^{;]+?);|([^;}{]*?) +{)|(})/gi,n=/\\/\\*.*?\\*\\/|\\s{2,}|\\n/gm,c=function(r,e,t){var a=\"\",n=\"\",i=\"\";if(/^@[k|f]/.test(t))return t+JSON.stringify(r).replace(/\",\"/g,\";\").replace(/\"|,\"/g,\"\").replace(/:{/g,\"{\");for(var o in r){var u=r[o];if(\"object\"==typeof u){var s=e+\" \"+o;/&/g.test(o)&&(s=o.replace(/&/g,e)),\"@\"==o[0]&&(s=e),n+=c(u,s,s==e?o:t||\"\")}else/^@i/.test(o)?i=o+\" \"+u+\";\":a+=o.replace(/[A-Z]/g,\"-$&\").toLowerCase()+\":\"+u+\";\"}if(a.charCodeAt(0)){var f=e+\"{\"+a+\"}\";return t?n+t+\"{\"+f+\"}\":i+f+n}return i+n},i={c:0},o=function(r,e,t,o){var u=JSON.stringify(r),s=i[u]||(i[u]=t?\"\":\".go\"+u.split(\"\").reduce(function(r,e){return r+e.charCodeAt(0)|8},4));return function(r,e,t){e.data.indexOf(r)<0&&(e.data=t?r+e.data:e.data+r)}(i[s]||(i[s]=c(r[0]?function(r){for(var e,t=[{}];e=a.exec(r.replace(n,\"\"));)e[4]&&t.shift(),e[3]?t.unshift(t[0][e[3]]={}):e[4]||(t[0][e[1]]=e[2]);return t[0]}(r):r,s)),e,o),s.slice(1)},u=function(r,e,t){return r.reduce(function(r,a,n){var c=e[n];if(c&&c.call){var i=c(t),o=i&&i.props&&i.props.className||/^go/.test(i)&&i;c=o?\".\"+o:i&&i.props?\"\":i}return r+a+(c||\"\")},\"\")};function s(r){var t=this||{},a=r.call?r(t.p):r;return o(a.map?u(a,[].slice.call(arguments,1),t.p):a,e(t.target),t.g,t.o)}var f,l=s.bind({g:1}),p=function(r){return f=r};function g(r){var e=this||{};return function(){var t=arguments;return function(a){var n=e.p=Object.assign({},a),c=n.className;return e.o=/\\s*go[0-9]+/g.test(c),n.className=s.apply(e,t)+(c?\" \"+c:\"\"),f(r,n)}}}export{g as styled,p as setPragma,t as extractCss,s as css,l as glob};\n","const isProxyMap: WeakSet<object> = new WeakSet();\nfunction proxify(obj: any, onChange: () => void): any {\n  let initialized = false;\n  let onChangeWrapped = () => {\n    if (initialized) {\n      onChange();\n    }\n  };\n  const proxy = new Proxy(obj as any, {\n    get: (obj, prop) => {\n      if (\n        obj[prop] &&\n        typeof obj[prop] === 'object' &&\n        !isProxyMap.has(obj[prop]) &&\n        prop !== 'on' &&\n        initialized\n      ) {\n        obj[prop] = proxify(obj[prop], onChange);\n      }\n      return obj[prop];\n    },\n    set: (obj, prop, value) => {\n      if (\n        (obj[prop] !== value || !initialized) &&\n        prop !== '__$p' &&\n        prop !== 'on'\n      ) {\n        if (typeof value === 'object' && !isProxyMap.has(obj[prop])) {\n          value = proxify(value, onChangeWrapped);\n        }\n        obj[prop] = value;\n        onChangeWrapped();\n      } else if (prop === 'on') {\n        obj[prop] = value;\n      }\n      return true;\n    },\n  });\n  Object.keys(obj).forEach(key => {\n    proxy[key] = obj[key];\n  });\n  isProxyMap.add(proxy);\n  initialized = true;\n  return proxy;\n}\nexport type State<S extends {} = {}> = S & {\n  on: (listener: () => void) => () => void;\n};\n\nexport const $state = <S extends {} = {}>(\n  initialState: Partial<S> = {}\n): State<S> => {\n  const proxy = proxify(initialState, () => {\n    listeners.forEach(l => l());\n  });\n  let listeners: (() => void)[] = [];\n  proxy.on = (listener: () => void): (() => void) => {\n    listeners.push(listener);\n    return () => {\n      const index = listeners.indexOf(listener);\n      if (index > 1) {\n        listeners.splice(index, 1);\n      }\n    };\n  };\n  return proxy;\n};\n","export const getOnlySetupError = (subject: string): string =>\n  `${subject} can only be used during setup!`;\n","import { getOnlySetupError } from '../errors';\n\nconst global: { __$c: HTMLElement } = window as any;\n\nexport const setUpContext = (context: HTMLElement, cb: () => void): void => {\n  global.__$c = context;\n  cb();\n  global.__$c = undefined;\n};\n\nexport const getElement = (): HTMLElement => {\n  if (global.__$c) {\n    return global.__$c;\n  } else {\n    throw getOnlySetupError('getElement');\n  }\n};\n","import { State, $state } from '../reactivity';\nimport { getElement } from './element';\n\nconst contextMap: WeakMap<Node, { [key: string]: State<any> }> = new WeakMap();\n\nexport interface ContextAPI<Context extends {}> {\n  provide: (value: Context) => State<Context>;\n  get: () => State<Context>;\n}\nexport function createContext<Context extends {}>(\n  name: string,\n  defaulValue: Context\n): ContextAPI<Context> {\n  const $defaultContext = $state<Context>(defaulValue);\n  return {\n    provide: (value: Context) => {\n      contextMap.set(getElement(), {\n        ...(contextMap.get(getElement()) || {}),\n        [name]: $state<Context>(value),\n      });\n      return contextMap.get(getElement())[name];\n    },\n    get: () => {\n      const element = getElement();\n      let parent: Node = element;\n      while (\n        (parent = parent.parentNode || (parent as any).host) &&\n        parent !== document.body\n      ) {\n        const $context = contextMap.has(parent) && contextMap.get(parent)[name];\n        if ($context) {\n          return $context;\n        }\n      }\n      return $defaultContext;\n    },\n  };\n}\n","export interface DOMUpdate {\n  node: Node;\n  newNode?: Node;\n  type: DOMUpdateType;\n  value?: string;\n  name?: string;\n}\nexport enum DOMUpdateType {\n  TEXT,\n  REPLACE_NODE,\n  ADD_NODE,\n  INSERT_BEFORE,\n  REMOVE,\n  ADD_CLASS,\n  REMOVE_CLASS,\n  SET_ATTRIBUTE,\n}\n\nexport type DirectiveGenerator<Args extends any[] = any[]> = Generator<\n  DOMUpdate[] | Promise<DOMUpdate[]> | void,\n  void,\n  Args\n>;\n\nexport type DirectiveGeneratorFactory<\n  N extends Node = Node,\n  Args extends any[] = any[]\n> = (node: N, ...initialArgs: Args) => DirectiveGenerator<Args>;\nexport interface DirectiveResult<\n  N extends Node = Node,\n  Args extends any[] = any[]\n> {\n  factory: DirectiveGeneratorFactory<N, Args>;\n  args: Args;\n  directive: Directive;\n}\nexport type Directive<N extends Node = Node, Args extends any[] = any[]> = (\n  ...args: Args\n) => DirectiveResult<N, Args>;\nexport const IS_DIRECTIVE = Symbol('directive');\nexport function createDirective<\n  Args extends any[],\n  N extends Node = any,\n  F extends DirectiveGeneratorFactory<N, Args> = DirectiveGeneratorFactory<\n    N,\n    Args\n  >\n>(\n  factory: F\n): F extends (node: N, ...initialArgs: infer A) => DirectiveGenerator<any>\n  ? Directive<N, A>\n  : never {\n  return ((factory: F) => {\n    const directive = function(...args: Args) {\n      return {\n        is: IS_DIRECTIVE,\n        factory,\n        args,\n        directive,\n      };\n    } as any;\n    return directive;\n  })(factory);\n}\n","import { createDirective, DOMUpdate, DOMUpdateType } from '../directive';\n\nexport const clss = createDirective(function*(node: Node, classes: string) {\n  if (node instanceof HTMLElement) {\n    let oldClasses: string[] = [];\n    for (;;) {\n      const result: DOMUpdate[] = [];\n      oldClasses.forEach(oldCls => {\n        if (!!oldCls) {\n          result.push({\n            type: DOMUpdateType.REMOVE_CLASS,\n            node,\n            value: oldCls,\n          });\n        }\n      });\n      oldClasses = classes.trim().split(' ');\n      oldClasses.forEach(cls => {\n        if (!!cls) {\n          result.push({\n            type: DOMUpdateType.ADD_CLASS,\n            node,\n            value: cls,\n          });\n        }\n      });\n      classes = (yield result)[0];\n    }\n  }\n});\n","import { IS_DIRECTIVE, DirectiveResult } from './directive';\n\nconst isLetter = (c: string): boolean => {\n  return c.toLowerCase() != c.toUpperCase();\n};\n\nexport enum DirectiveType {\n  TEXT,\n  ATTRIBUTE,\n  ATTRIBUTE_VALUE,\n}\nexport interface DirectiveData {\n  d: DirectiveResult;\n  t?: DirectiveType;\n  a?: string;\n}\nconst insertAttributeMarker = (\n  marker: string,\n  si: number,\n  appendedStatic: string\n): string => {\n  while (si++) {\n    const char = appendedStatic.charAt(si);\n    if (!char) {\n      break;\n    }\n    if (char === ' ') {\n      return (\n        appendedStatic.slice(0, si) + ' ' + marker + appendedStatic.slice(si)\n      );\n    }\n  }\n  return appendedStatic;\n};\nexport const getTextMarker = (id: number): string => {\n  return `tm-${id}`;\n};\nexport const getAttributeMarker = (id: number): string => {\n  return `data-am-${id}`;\n};\nexport interface HTMLResult {\n  template: HTMLTemplateElement;\n  directives: DirectiveData[];\n  key?: string;\n}\nexport type HTML = typeof html;\nfunction isDirective(thing: any): boolean {\n  return thing.is && thing.is === IS_DIRECTIVE;\n}\nlet resultCache: WeakMap<TemplateStringsArray, HTMLResult> = new WeakMap();\nexport const html = (\n  staticParts: TemplateStringsArray,\n  ...dynamicParts: any[]\n): HTMLResult => {\n  let result: HTMLResult = resultCache.get(staticParts);\n  if (!result) {\n    let appendedStatic: string = '';\n    const directives: DirectiveData[] = [];\n    for (let i = 0; i < dynamicParts.length; i++) {\n      const dynamicPart = dynamicParts[i];\n      const staticPart = staticParts[i];\n      appendedStatic += staticPart;\n      if (!isDirective(dynamicPart)) {\n        appendedStatic += dynamicPart;\n        continue;\n      }\n      let id =\n        directives.push({\n          d: dynamicPart,\n        }) - 1;\n      let si = appendedStatic.length + 1;\n      let attributeValueMode = false;\n      let attributeMode = false;\n      let attributeNameFound = false;\n      let attributeName = '';\n      while (si--) {\n        const char = appendedStatic.charAt(si);\n        const nextChar = appendedStatic.charAt(si - 1);\n        const nextNextChar = appendedStatic.charAt(si - 2);\n        if (char === '>' || si === 0) {\n          let marker = getTextMarker(id);\n          appendedStatic += `<${marker}>&zwnj;</${marker}>`;\n          directives[id].t = DirectiveType.TEXT;\n          break;\n        }\n        if (\n          char === '\"' &&\n          nextChar === '=' &&\n          isLetter(nextNextChar) &&\n          !attributeMode\n        ) {\n          attributeValueMode = true;\n          continue;\n        }\n        if (char === '\"' && nextNextChar !== '=' && !attributeValueMode) {\n          attributeValueMode = false;\n          attributeMode = true;\n          continue;\n        }\n        if (\n          attributeValueMode &&\n          char !== '\"' &&\n          char !== '=' &&\n          !attributeNameFound\n        ) {\n          if (char !== ' ') {\n            attributeName = char + attributeName;\n          } else {\n            attributeNameFound = true;\n          }\n        }\n        if (char === '<' && attributeValueMode) {\n          appendedStatic = insertAttributeMarker(\n            getAttributeMarker(id),\n            si,\n            appendedStatic\n          );\n          directives[id].t = DirectiveType.ATTRIBUTE_VALUE;\n          directives[id].a = attributeName;\n          if (appendedStatic[appendedStatic.length - 1] === ' ') {\n            appendedStatic = appendedStatic.slice(0, appendedStatic.length - 1);\n          }\n          break;\n        }\n        if (char === '<' && !attributeValueMode) {\n          appendedStatic = insertAttributeMarker(\n            getAttributeMarker(id),\n            si,\n            appendedStatic\n          );\n          directives[id].t = DirectiveType.ATTRIBUTE;\n          break;\n        }\n      }\n    }\n    appendedStatic += staticParts[staticParts.length - 1];\n    const template = document.createElement('template');\n    template.innerHTML = appendedStatic.trim();\n    result = {\n      template,\n      directives,\n    };\n  } else {\n    let directiveIndex: number = 0;\n    result = {\n      ...result,\n      directives: result.directives.map(directive => {\n        const { a, t } = directive;\n        return {\n          a,\n          t,\n          d: undefined,\n        };\n      }),\n    };\n    dynamicParts.forEach((value: any) => {\n      if (isDirective(value)) {\n        result.directives[directiveIndex].d = value;\n        directiveIndex++;\n      }\n    });\n  }\n  resultCache.set(staticParts, result);\n  return result;\n};\n","export enum PriorityLevel {\n  IMMEDIATE = 0, //synchronous\n  USER_BLOCKING = 250, //.25s timeout\n  NORMAL = 5000, // 5s timeout\n  LOW = 10000, // 10s timeout\n  IDLE = 99999999, // no timeout (run only when nothing else is scheduled)\n}\ntype ScheduledJob = [() => void, number];\nlet scheduledJobs: ScheduledJob[] = [];\nlet schedulerRunning: boolean = false;\nconst MAX_ELAPSED: number = 17;\nconst processJobQueue = (\n  queue: ScheduledJob[],\n  now: number\n): ScheduledJob[] => {\n  let index = 0;\n  for (let length = queue.length; index < length; index++) {\n    const totalElapsed: number = Date.now() - now;\n    const [cb, latestEndTime] = queue[index];\n    if (now >= latestEndTime || totalElapsed < MAX_ELAPSED) {\n      cb();\n    } else {\n      break;\n    }\n  }\n  return queue.slice(index);\n};\nconst processScheduledJobs = () => {\n  const now: number = Date.now();\n  scheduledJobs = processJobQueue(\n    scheduledJobs.sort((a, b) => (a[1] < b[1] ? -1 : 1)),\n    now\n  );\n  if (scheduledJobs.length > 0) {\n    requestAnimationFrame(processScheduledJobs);\n  } else {\n    schedulerRunning = false;\n  }\n};\nexport const schedule = (\n  cb: () => void,\n  priority: PriorityLevel = PriorityLevel.NORMAL\n): Promise<void> => {\n  if (priority === PriorityLevel.IMMEDIATE) {\n    cb();\n  } else {\n    return new Promise(resolve => {\n      scheduledJobs.push([\n        () => {\n          cb();\n          resolve();\n        },\n        Date.now() + priority,\n      ]);\n      if (!schedulerRunning) {\n        requestAnimationFrame(processScheduledJobs);\n        schedulerRunning = true;\n      }\n    });\n  }\n  return Promise.resolve();\n};\nexport type Schedule = typeof schedule;\n","import {\n  HTMLResult,\n  DirectiveType,\n  getTextMarker,\n  getAttributeMarker,\n} from './html';\nimport { DirectiveGenerator, DOMUpdate, DOMUpdateType } from './directive';\nimport { schedule } from './scheduler';\n\nconst renderedNodesMap: WeakMap<HTMLElement, Node[]> = new WeakMap();\nexport const clear = (container: HTMLElement) => {\n  if (renderedNodesMap.has(container)) {\n    renderedNodesMap\n      .get(container)\n      .forEach(node => container.removeChild(node));\n    renderedNodesMap.delete(container);\n  }\n};\nconst generatorMap: WeakMap<HTMLElement, DirectiveGenerator[]> = new WeakMap();\nexport const render = (\n  container: HTMLElement,\n  htmlResult: HTMLResult\n): void => {\n  let fragment: DocumentFragment;\n  if (!renderedNodesMap.has(container)) {\n    const generators: DirectiveGenerator[] = [];\n    generatorMap.set(container, generators);\n    fragment = htmlResult.template.content.cloneNode(true) as DocumentFragment;\n    htmlResult.directives.forEach((directiveData, id) => {\n      switch (directiveData.t) {\n        case DirectiveType.TEXT:\n          const placeholder = fragment.querySelector(getTextMarker(id));\n          const textNode = placeholder.firstChild;\n          generators[id] = directiveData.d.factory(\n            textNode,\n            ...directiveData.d.args\n          );\n          placeholder.parentNode.replaceChild(textNode, placeholder);\n          break;\n        case DirectiveType.ATTRIBUTE:\n        case DirectiveType.ATTRIBUTE_VALUE:\n          const marker = getAttributeMarker(id);\n          const node = fragment.querySelector(`[${marker}]`);\n          generators[id] = directiveData.d.factory(\n            node,\n            ...directiveData.d.args\n          );\n          node.removeAttribute(marker);\n      }\n    });\n    renderedNodesMap.set(container, Array.from(fragment.childNodes));\n  }\n\n  const generators: DirectiveGenerator[] = generatorMap.get(container);\n  htmlResult.directives.forEach(async (directiveData, id) => {\n    const result = generators[id].next(directiveData.d.args);\n    if (result.value) {\n      const domUpdate: DOMUpdate[] = await result.value;\n      schedule(() => {\n        domUpdate.forEach(d => {\n          switch (d.type) {\n            case DOMUpdateType.TEXT:\n              d.node.textContent = d.value;\n              break;\n            case DOMUpdateType.ADD_NODE:\n              d.node.appendChild(d.newNode);\n              break;\n            case DOMUpdateType.REPLACE_NODE:\n              d.node.parentNode.replaceChild(d.newNode, d.node);\n              break;\n            case DOMUpdateType.INSERT_BEFORE:\n              d.node.parentNode.insertBefore(d.newNode, d.node);\n              break;\n            case DOMUpdateType.REMOVE:\n              d.node.parentNode.removeChild(d.node);\n              break;\n            case DOMUpdateType.ADD_CLASS:\n              (d.node as HTMLElement).classList.add(d.value);\n              break;\n            case DOMUpdateType.REMOVE_CLASS:\n              (d.node as HTMLElement).classList.remove(d.value);\n              break;\n            case DOMUpdateType.SET_ATTRIBUTE:\n              (d.node as HTMLElement).setAttribute(d.name, d.value);\n              break;\n          }\n        });\n      });\n    }\n  });\n  if (fragment) {\n    container.appendChild(fragment);\n  }\n};\n","import { createDirective, DOMUpdateType, DOMUpdate } from '../directive';\nimport { HTMLResult } from '../html';\nimport { render } from '../render';\n\nexport const sub = createDirective(function*(\n  node: Text,\n  htmlResult: HTMLResult\n) {\n  if (node.nodeType === 3) {\n    const start = document.createComment('');\n    let result: DOMUpdate[] = [\n      {\n        type: DOMUpdateType.REPLACE_NODE,\n        node,\n        newNode: start as any,\n      },\n    ];\n    let prevTemplate: HTMLTemplateElement;\n    let prevFrag: DocumentFragment;\n    let prevChildren: Node[] = [];\n    for (;;) {\n      if (prevTemplate === htmlResult.template) {\n        render(prevFrag as any, htmlResult);\n      } else {\n        const frag = document.createDocumentFragment();\n        render(frag as any, htmlResult);\n        prevChildren.forEach(child => {\n          result.push({\n            type: DOMUpdateType.REMOVE,\n            node: child,\n          });\n        });\n        prevChildren = [];\n        frag.childNodes.forEach(child => {\n          prevChildren.push(child);\n          result.push({\n            type: DOMUpdateType.INSERT_BEFORE,\n            node: start,\n            newNode: child,\n          });\n        });\n        prevTemplate = htmlResult.template;\n        prevFrag = frag;\n      }\n      htmlResult = (yield result)[0];\n      result = [];\n    }\n  }\n});\n","import { getElement } from './element';\nimport { schedule, PriorityLevel } from '../scheduler';\n\nexport type CleanUp = () => void;\nexport type SideEffect = () => void | CleanUp;\ninterface SideEffectsMapItem {\n  e: SideEffect;\n  d?: () => any[];\n  p?: any[];\n  c?: CleanUp;\n}\nconst sideEffectsMap: WeakMap<\n  HTMLElement,\n  SideEffectsMapItem[]\n> = new WeakMap();\n\nexport const sideEffect = (effect: () => void, dependencies?: () => any[]) => {\n  const element = getElement();\n  sideEffectsMap.set(\n    element,\n    (sideEffectsMap.get(element) || []).concat({\n      e: effect,\n      d: dependencies,\n    })\n  );\n};\nconst shouldEffectRun = (effectMapItem: SideEffectsMapItem): boolean => {\n  const { d, p } = effectMapItem;\n  let shouldRun: boolean = true;\n  if (d) {\n    const deps = d();\n    if (\n      p &&\n      (deps === p ||\n        (deps.length === p.length &&\n          deps.findIndex((dep, index) => p[index] !== dep))) === -1\n    ) {\n      shouldRun = false;\n    }\n  }\n  return shouldRun;\n};\nexport const runSideEffects = (element: HTMLElement): Promise<void[]> => {\n  const sideEffects = sideEffectsMap.get(element) || [];\n  if (sideEffects.length > 0) {\n    return Promise.all(\n      sideEffects\n        .map(effectMapItem => {\n          const { c } = effectMapItem;\n          if (c && shouldEffectRun(effectMapItem)) {\n            return schedule(() => {\n              c();\n              effectMapItem.c = undefined;\n            }, PriorityLevel.USER_BLOCKING);\n          }\n          return undefined;\n        })\n        .filter(p => p)\n    ).then(() =>\n      Promise.all(\n        sideEffects\n          .map(effectMapItem => {\n            const { e, d } = effectMapItem;\n            let shouldRun: boolean = shouldEffectRun(effectMapItem);\n            if (d) {\n              effectMapItem.p = d();\n            }\n            if (shouldRun) {\n              return schedule(() => {\n                const cleanUp = e();\n                if (cleanUp) {\n                  effectMapItem.c = cleanUp;\n                }\n              }, PriorityLevel.USER_BLOCKING);\n            }\n            return undefined;\n          })\n          .filter(p => p)\n      )\n    );\n  } else {\n    return Promise.resolve([]);\n  }\n};\n","import { HTMLResult } from './html';\nimport { render } from './render';\nimport { schedule, PriorityLevel } from './scheduler';\nimport { setUpContext } from './composables/element';\nimport { runSideEffects } from './composables/sideeffects';\nimport { State } from './reactivity';\n\nexport interface ComponentDefinition {\n  render: () => HTMLResult;\n  watch?: State<{}>[];\n}\nexport type Setup = () => ComponentDefinition;\nexport const component = (name: string, setup: Setup) => {\n  customElements.define(\n    name,\n    class extends HTMLElement {\n      private renderQueued: boolean = false;\n      private nextRenderQueued: boolean = false;\n      private render: () => HTMLResult;\n      private watch: State<{}>[] = [];\n      private watchOff: (() => void)[];\n      constructor() {\n        super();\n        this.attachShadow({ mode: 'open' });\n        setUpContext(this, () => {\n          const result = setup();\n          this.render = result.render;\n          this.watch = result.watch;\n        });\n      }\n\n      private wasConnected: boolean = false;\n      public connectedCallback() {\n        if (this.isConnected && !this.wasConnected) {\n          this.wasConnected = true;\n          this.performRender();\n          if (this.watch) {\n            this.watchOff = this.watch.map(s =>\n              s.on(() => {\n                this.performRender();\n              })\n            );\n          }\n        }\n      }\n\n      public disconnectedCallback() {\n        if (this.wasConnected) {\n          this.wasConnected = false;\n          if (this.watchOff) {\n            this.watchOff.forEach(s => s());\n            this.watchOff = undefined;\n          }\n        }\n      }\n\n      private performRender() {\n        if (!this.renderQueued) {\n          this.renderQueued = true;\n          schedule(() => {\n            render(this.shadowRoot as any, this.render());\n          }, PriorityLevel.USER_BLOCKING)\n            .then(async () => await runSideEffects(this))\n            .then(() => {\n              this.renderQueued = false;\n              if (this.nextRenderQueued) {\n                this.nextRenderQueued = false;\n                this.performRender();\n              }\n            });\n        } else {\n          this.nextRenderQueued = true;\n        }\n      }\n    }\n  );\n};\n","import { getElement } from './element';\nimport { $state } from '../reactivity';\n\nexport const $prop = <T>(name: string, initialValue: T): { value: T } => {\n  const element = getElement() as any;\n  const state = $state({ value: element[name] || initialValue });\n  Object.defineProperty(element, name, {\n    get: () => state.value,\n    set: (value: any) => {\n      state.value = value;\n    },\n  });\n  return state;\n};\n","import { $state } from '../reactivity';\nimport { getElement } from './element';\nimport { sideEffect } from './sideeffects';\n\nconst attributeCallbackMap: WeakMap<\n  HTMLElement,\n  { [key: string]: (() => void)[] }\n> = new Map();\nconst observerMap: WeakMap<HTMLElement, MutationObserver> = new WeakMap();\n\nconst addObserver = (element: HTMLElement): void => {\n  if (!observerMap.has(element)) {\n    const observer = new MutationObserver((mutationsList: MutationRecord[]) => {\n      for (const mutation of mutationsList) {\n        if (mutation.type === 'attributes') {\n          const callbacks =\n            (attributeCallbackMap.get(element) || {})[mutation.attributeName] ||\n            [];\n          callbacks.forEach(cb => cb());\n        }\n      }\n    });\n    observerMap.set(element, observer);\n  }\n};\n\nconst startObserving = (element: HTMLElement) => {\n  if (observerMap.has(element)) {\n    observerMap.get(element).observe(element, { attributes: true });\n  }\n};\n\nconst stopObserving = (element: HTMLElement) => {\n  if (observerMap.has(element)) {\n    observerMap.get(element).disconnect();\n  }\n};\n\nconst observeAttribute = (\n  element: HTMLElement,\n  name: string,\n  cb: () => void\n): void => {\n  if (!attributeCallbackMap.has(element)) {\n    attributeCallbackMap.set(element, {});\n  }\n  if (!attributeCallbackMap.get(element)[name]) {\n    attributeCallbackMap.get(element)[name] = [];\n  }\n  attributeCallbackMap.get(element)[name].push(cb);\n};\n\nexport const $attr = (\n  name: string,\n  initialValue: string = ''\n): { value: string } => {\n  const element = getElement();\n  addObserver(element);\n  observeAttribute(element, name, () => {\n    const value = element.getAttribute(name);\n    if (state.value !== value) {\n      state.value = element.getAttribute(name);\n    }\n  });\n\n  if (element.hasAttribute(name)) {\n    initialValue = element.getAttribute(name);\n  }\n\n  element.setAttribute(name, initialValue);\n\n  const state = $state({ value: element.getAttribute(name) });\n\n  sideEffect(\n    () => {\n      stopObserving(element);\n      element.setAttribute(name, state.value);\n      startObserving(element);\n    },\n    () => [state.value]\n  );\n\n  return state;\n};\n","import { createDirective, DOMUpdateType } from '../directive';\n\nexport const text = createDirective(function*(node: Text, value: string) {\n  for (;;) {\n    const result = yield [\n      {\n        node,\n        value,\n        type: DOMUpdateType.TEXT,\n      },\n    ];\n    value = result[0];\n  }\n});\n","import { createDirective } from '../directive';\n\nexport const prop = createDirective(function*(\n  node: Node,\n  name: string,\n  value: any\n) {\n  if (node instanceof HTMLElement) {\n    for (;;) {\n      (node as any)[name] = value;\n      const newArgs = yield;\n      name = newArgs[0];\n      value = newArgs[1];\n    }\n  }\n});\n","import { createDirective } from '../directive';\nimport { PriorityLevel, schedule } from '../scheduler';\n\nexport const input = createDirective(function*(\n  node: HTMLElement,\n  cb: (value: string) => void\n) {\n  const cbRef = {\n    cb,\n  };\n  node.addEventListener('input', e => {\n    const value: string = (e.target as HTMLInputElement).value;\n    schedule(() => cbRef.cb(value), PriorityLevel.NORMAL);\n  });\n  for (;;) {\n    cbRef.cb = (yield)[0];\n  }\n});\n","import { createDirective } from '../directive';\nimport { PriorityLevel, schedule } from '../scheduler';\n\nexport const on = createDirective(function*(\n  node: HTMLElement,\n  name: string,\n  cb: <E extends Event>(e: E) => void\n) {\n  const cbRef = {\n    cb,\n  };\n  node.addEventListener(name, e => {\n    schedule(() => cbRef.cb(e), PriorityLevel.IMMEDIATE);\n  });\n  for (;;) {\n    cbRef.cb = (yield)[1];\n  }\n});\n","import { createDirective, DOMUpdate, DOMUpdateType } from '../directive';\n\nexport const attr = createDirective(function*(\n  node: Node,\n  name: string,\n  value: string\n) {\n  if (node instanceof HTMLElement) {\n    for (;;) {\n      const result: DOMUpdate[] = [\n        {\n          type: DOMUpdateType.SET_ATTRIBUTE,\n          node,\n          value,\n          name,\n        },\n      ];\n      const newArgs = yield result;\n      name = newArgs[0];\n      value = newArgs[1];\n    }\n  }\n});\n","import { createDirective, DOMUpdateType, DOMUpdate } from '../directive';\nimport { HTMLResult, getAttributeMarker } from '../html';\nimport { render } from '../render';\n\nexport function getKey(htmlResult: HTMLResult): string {\n  let id: number = 0;\n  for (const directive of htmlResult.directives) {\n    if ((directive.d.directive as any) === key) {\n      const listNode = htmlResult.template.content.querySelector(\n        `[${getAttributeMarker(id)}]`\n      );\n      if (listNode && !listNode.parentElement) return directive.d.args[0];\n    }\n    id++;\n  }\n  return htmlResult.template.innerHTML;\n}\n\nexport const list = createDirective(function*(\n  node: Text,\n  htmlResults: HTMLResult[]\n) {\n  if (node.nodeType === 3) {\n    const root = document.createDocumentFragment();\n    const start = document.createComment('');\n    root.appendChild(start);\n    const keyToFragmentsMap: Map<\n      string,\n      (DocumentFragment | Node)[]\n    > = new Map();\n    let results: DOMUpdate[] = [\n      {\n        type: DOMUpdateType.REPLACE_NODE,\n        node,\n        newNode: root,\n      },\n    ];\n    let oldKeyOrder: string[] = [];\n    for (;;) {\n      const keyOrder: string[] = htmlResults.map(result => {\n        const key = getKey(result);\n        if (!keyToFragmentsMap.has(key)) {\n          const frag = document.createDocumentFragment();\n          render(frag as any, result);\n          keyToFragmentsMap.set(key, [frag, ...Array.from(frag.childNodes)]);\n        } else {\n          const frag = keyToFragmentsMap.get(key)[0] as DocumentFragment;\n          render(frag as any, result);\n        }\n        return key;\n      });\n      if (oldKeyOrder.join('') !== keyOrder.join('')) {\n        results = results.concat(\n          keyOrder.flatMap(newKey => {\n            const oldIndex = oldKeyOrder.indexOf(newKey);\n            if (oldIndex > -1) {\n              oldKeyOrder.splice(oldIndex, 1);\n            }\n            const [, ...children] = keyToFragmentsMap.get(newKey);\n            return children.map(child => {\n              return {\n                type: DOMUpdateType.INSERT_BEFORE,\n                node: start,\n                newNode: child,\n              } as DOMUpdate;\n            });\n          })\n        );\n        results = results.concat(\n          oldKeyOrder.flatMap(oldKey => {\n            const [, ...children] = keyToFragmentsMap.get(oldKey);\n            keyToFragmentsMap.delete(oldKey);\n            return children.map(child => {\n              return {\n                type: DOMUpdateType.REMOVE,\n                node: child,\n              } as DOMUpdate;\n            });\n          })\n        );\n        console.log(results);\n      }\n      oldKeyOrder = keyOrder;\n      htmlResults = (yield results)[0];\n      results = [];\n    }\n  }\n});\n\nexport const key = createDirective(function*(_node: Text, _keyName: string) {});\n","export { createContext } from './composables/context';\nexport { clss } from './directives/clss';\nexport { html, HTMLResult } from './html';\nexport { render } from './render';\nexport { sub } from './directives/sub';\nexport { component } from './component';\nexport { $prop } from './composables/properties';\nexport { $attr } from './composables/attributes';\nexport { sideEffect } from './composables/sideeffects';\nexport { $state } from './reactivity';\nexport { Directive, createDirective } from './directive';\nexport { text } from './directives/text';\nexport { prop } from './directives/prop';\nexport { input } from './directives/input';\nexport { on } from './directives/on';\nexport { attr } from './directives/attr';\nexport { list, key } from './directives/list';\nexport { getElement } from './composables/element';\n","import * as goober from 'goober';\nimport { getElement, clss, $state, sideEffect } from '../src/';\nimport { State } from '../src/reactivity';\n\nexport const getCss = () => {\n  const css = goober.css.bind({ target: getElement().shadowRoot });\n  return (...args) => {\n    return clss(css.apply(css, args));\n  };\n};\nexport function getIsInView(): State<{\n  value: boolean;\n}> {\n  const $isInView = $state({ value: false });\n  const element = getElement();\n  sideEffect(\n    () => {\n      const handleScroll = e => {\n        if (\n          !$isInView.value &&\n          window.scrollY > element.offsetTop - window.innerHeight / 1.5\n        ) {\n          $isInView.value = true;\n          window.removeEventListener('scroll', handleScroll);\n        }\n      };\n      window.addEventListener('scroll', handleScroll);\n      requestAnimationFrame(() => {\n        handleScroll();\n      });\n      return () => {\n        window.removeEventListener('scroll', handleScroll);\n      };\n    },\n    () => []\n  );\n  return $isInView;\n}\n","var icons={\".NET\":{title:\".NET\",slug:\"dot-net\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>.NET icon</title><path d=\"M3.1672 7.5655v8.749H4.19v-6.325a8.979 8.979 0 0 0-.0488-1.1998h.0384a2.9082 2.9082 0 0 0 .2784.5473l4.4973 6.9774h1.2569V7.5655H9.1904v6.1526a9.2574 9.2574 0 0 0 .0619 1.286h-.0234c-.0544-.1056-.173-.3002-.3553-.585L4.4964 7.5656zm9.315 0v8.749h4.65l.0048-.9599h-3.6087v-3.0331h3.1579V11.4h-3.1579V8.4916h3.3884v-.926zm5.4374 0v.926h2.5149v7.823h1.0216v-7.823H24v-.926zM.6534 15.067a.643.643 0 0 0-.4565.2062A.6719.6719 0 0 0 0 15.753a.6623.6623 0 0 0 .1968.4799.6479.6479 0 0 0 .4799.2015.6623.6623 0 0 0 .4799-.2015.6575.6575 0 0 0 .2015-.48.667.667 0 0 0-.2015-.4798.6575.6575 0 0 0-.4799-.2062.643.643 0 0 0-.0234 0z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://docs.microsoft.com/en-us/dotnet/images/hub/net.svg\",hex:\"5C2D91\"},\"1Password\":{title:\"1Password\",slug:\"1password\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>1Password icon</title><path d=\"M10.51,10.013V7.299c0-0.306,0.248-0.554,0.554-0.554h1.911c0.306,0,0.554,0.248,0.554,0.554v4.968 c0,0.076-0.038,0.134-0.076,0.191l-0.478,0.478c-0.115,0.115-0.115,0.287,0,0.382l0.478,0.478c0.057,0.057,0.076,0.115,0.076,0.191 v2.713c0,0.306-0.248,0.554-0.554,0.554h-1.911c-0.306,0-0.554-0.248-0.554-0.554v-4.968c0-0.076,0.038-0.134,0.076-0.191 l0.478-0.478c0.115-0.115,0.115-0.287,0-0.382l-0.478-0.478C10.529,10.146,10.51,10.089,10.51,10.013z M19.127,12 c0-3.936-3.191-7.127-7.127-7.127S4.873,8.064,4.873,12S8.064,19.127,12,19.127S19.127,15.936,19.127,12z M21.382,12 c0,5.178-4.204,9.363-9.363,9.363c-5.178,0-9.363-4.204-9.363-9.363c0-5.178,4.204-9.363,9.363-9.363 C17.178,2.637,21.382,6.822,21.382,12z M0.764,12c0,6.21,5.025,11.236,11.236,11.236S23.236,18.21,23.236,12S18.21,0.764,12,0.764 S0.764,5.79,0.764,12z M0,12C0,5.369,5.369,0,12,0c6.631,0,12,5.369,12,12s-5.369,12-12,12S0,18.631,0,12z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://1password.com/press/\",hex:\"0094F5\"},\"500px\":{title:\"500px\",slug:\"500px\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>500px icon</title><path d=\"M7.439 9.01A2.994 2.994 0 0 0 4.449 12a2.993 2.993 0 0 0 2.99 2.99 2.994 2.994 0 0 0 2.99-2.99 2.993 2.993 0 0 0-2.99-2.99m0 5.343c-1.297 0-2.354-1.056-2.354-2.353s1.057-2.353 2.354-2.353S9.792 10.703 9.792 12s-1.056 2.353-2.353 2.353m6.472-5.343a2.994 2.994 0 0 0-2.99 2.99 2.993 2.993 0 0 0 2.99 2.99 2.994 2.994 0 0 0 2.99-2.99 2.994 2.994 0 0 0-2.99-2.99m0 5.343c-1.298 0-2.353-1.056-2.353-2.353s1.055-2.353 2.353-2.353c1.297 0 2.353 1.056 2.353 2.353s-1.056 2.353-2.353 2.353m-11.612-3.55a2.1 2.1 0 0 0-1.596.423V9.641H3.39c.093 0 .16-.017.16-.292 0-.269-.108-.28-.18-.28H.396c-.174 0-.265.14-.265.294v2.602c0 .136.087.183.247.214.141.028.223.012.285-.057l.006-.01c.283-.408.9-.804 1.486-.732.699.086 1.262.644 1.34 1.327a1.512 1.512 0 0 1-1.501 1.685c-.635 0-1.19-.408-1.421-1.001-.035-.088-.092-.152-.343-.062-.229.083-.243.181-.212.268a2.11 2.11 0 0 0 1.976 1.386 2.102 2.102 0 0 0 .305-4.18m16.646-1.764c-.805.062-1.434.769-1.434 1.61v2.661c0 .154.117.186.293.186s.293-.031.293-.186v-2.668c0-.524.382-.974.868-1.024a.972.972 0 0 1 .758.247.984.984 0 0 1 .322.729c0 .08-.039.34-.217.581-.135.182-.391.399-.844.399h-.009c-.115 0-.215.005-.234.28-.013.186-.012.269.148.29.286.04.576-.016.865-.166.492-.256.822-.741.861-1.267a1.562 1.562 0 0 0-.452-1.222 1.56 1.56 0 0 0-1.218-.45m3.919 1.559l1.085-1.085c.04-.039.132-.132-.055-.324-.08-.083-.153-.125-.217-.125h-.001a.163.163 0 0 0-.121.058l-1.088 1.088-1.086-1.093c-.088-.088-.19-.067-.322.065-.135.136-.157.24-.069.328l1.086 1.092-1.064 1.064-.007.007c-.026.025-.065.063-.065.125-.001.063.042.139.126.223.07.071.138.107.2.107.069 0 .114-.045.139-.07l1.068-1.067 1.091 1.092a.162.162 0 0 0 .114.045h.002c.069 0 .142-.04.217-.118.122-.129.143-.236.061-.319l-1.094-1.093z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://about.500px.com/press\",hex:\"0099E5\"},\"About.me\":{title:\"About.me\",slug:\"about-dot-me\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>About.me icon</title><path d=\"M19.536 9.15c-1.373 0-2.133 1.014-2.294 2.116h4.608c-.125-1.05-.867-2.115-2.314-2.115m-2.26 3.617c.235 1.156 1.193 1.97 2.532 1.97.725 0 1.77-.27 2.384-.914l1.175 1.35c-1.064 1.11-2.653 1.426-3.74 1.426-2.64 0-4.697-1.906-4.697-4.606 0-2.535 1.894-4.62 4.57-4.62 2.585 0 4.5 1.98 4.5 4.604v.766h-6.723v.023zm-6.487 3.83v-5.69c0-.976-.435-1.536-1.338-1.536-.814 0-1.355.585-1.717 1.007v6.24h-2.35v-5.7c0-.976-.415-1.532-1.318-1.532-.813 0-1.375.586-1.717 1.006v6.24H0V7.508h2.35v1.15c.4-.464 1.302-1.26 2.71-1.26 1.247 0 2.096.525 2.477 1.59.524-.762 1.5-1.59 2.91-1.59 1.7 0 2.69 1.01 2.69 2.962v6.24h-2.353l.005-.006z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://about.me/assets\",hex:\"00A98F\"},\"ABB RobotStudio\":{title:\"ABB RobotStudio\",slug:\"abbrobotstudio\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>ABB RobotStudio icon</title><path d=\"M24 12.46a9.6 9.6 0 01-19.2 0h1.07a8.53 8.53 0 108.53-8.53V2.86a9.6 9.6 0 019.6 9.6zm-9.6-3.2a3.2 3.2 0 103.2 3.2 3.2 3.2 0 00-3.2-3.2zm-2 0l-.6-6.67-2.46 1.92-1.46-1.44a4.67 4.67 0 00-5.62-.37L.24 4a.54.54 0 00-.15.74.54.54 0 00.74.15l2-1.31a3.64 3.64 0 014.29.22l1.37 1.38L6.2 7z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://new.abb.com/products/robotics/en/robotstudio/downloads\",hex:\"FF9E0F\"},Abstract:{title:\"Abstract\",slug:\"abstract\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Abstract icon</title><path d=\"M12 0c9.601 0 12 2.399 12 12 0 9.601-2.399 12-12 12-9.601 0-12-2.399-12-12C0 2.399 2.399 0 12 0zm-1.969 18.564c2.524.003 4.604-2.07 4.609-4.595 0-2.521-2.074-4.595-4.595-4.595S5.45 11.449 5.45 13.969c0 2.516 2.065 4.588 4.581 4.595zm8.344-.189V5.625H5.625v2.247h10.498v10.503h2.252zm-8.344-6.748a2.343 2.343 0 11-.002 4.686 2.343 2.343 0 01.002-4.686z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.abstract.com/about/\",hex:\"191A1B\"},Academia:{title:\"Academia\",slug:\"academia\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Academia icon</title><path d=\"M22.033,21.18L13.77,0.459H7.869l1.049,2.623L1.836,21.18C1.574,22.098,0.787,22.23,0,22.361v1.18 h6.82v-1.18l0,0l0,0l0,0l0,0C4.984,22.23,3.934,21.967,4.721,20c0.131-0.131,0.656-1.574,1.311-3.41h8.393l1.18,3.016 c0.131,0.525,0.262,0.918,0.262,1.311c0,1.049-0.918,1.443-2.623,1.443v1.18H24v-1.18C23.082,22.23,22.295,21.967,22.033,21.18z M6.82,14.361c1.311-3.279,2.754-7.082,3.279-8.525l3.41,8.525H6.82z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.academia.edu/\",hex:\"41454A\"},ACM:{title:\"ACM\",slug:\"acm\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>ACM icon</title><path d=\"M7.435 12.25c-.08.025-.15.072-.202.135-.048.072-.073.158-.07.245 0 .15.038.252.12.308.077.056.194.082.352.082.087 0 .174-.02.264-.06.09-.038.174-.095.245-.165v-.66c-.168.015-.303.03-.405.045-.105.01-.207.034-.305.07zM12 0L0 12l12 12 12-12L12 0zm0 19.357C7.938 19.355 4.645 16.063 4.643 12 4.645 7.938 7.938 4.644 12 4.642c4.063.002 7.355 3.295 7.357 7.358-.002 4.063-3.294 7.355-7.357 7.357zM12 5.377v.002c-3.654 0-6.62 2.966-6.62 6.62s2.966 6.62 6.62 6.62 6.62-2.966 6.62-6.62c0-3.656-2.964-6.62-6.62-6.623zm-2.862 8.246h-.995v-.336l-.182.154c-.142.108-.304.188-.477.233-.082.02-.202.035-.352.035-.262.007-.515-.097-.698-.285-.187-.19-.277-.426-.277-.716 0-.238.046-.427.14-.574.1-.15.24-.27.405-.348.205-.09.423-.152.646-.18.25-.033.516-.06.803-.078v-.017c0-.176-.066-.297-.196-.363-.13-.07-.322-.102-.58-.102-.117 0-.254.02-.41.063-.158.044-.308.1-.458.164H6.42v-.77c.097-.03.256-.062.48-.1.217-.04.438-.06.663-.06.55 0 .95.092 1.2.276.25.183.375.462.375.837v2.168zm3.22-.167c-.07.028-.134.056-.2.086-.074.03-.15.058-.23.08-.094.024-.186.044-.27.06-.084.014-.196.022-.336.022-.263 0-.506-.033-.723-.1-.21-.062-.406-.165-.57-.307-.163-.142-.292-.32-.373-.52-.09-.21-.135-.457-.135-.738-.008-.27.042-.535.146-.78.09-.204.224-.384.392-.53.165-.134.355-.233.56-.29.22-.066.447-.096.675-.096.37 0 .732.087 1.06.255v.854h-.127c-.048-.043-.096-.085-.147-.124-.06-.048-.122-.09-.188-.126-.167-.095-.357-.144-.55-.14-.254 0-.45.086-.59.263-.138.177-.21.414-.21.714 0 .32.075.56.225.715.15.157.347.235.592.235.11 0 .222-.013.33-.042.153-.043.295-.12.415-.225.048-.04.088-.082.123-.11h.13v.843zm4.333.173v-1.597c0-.157 0-.29-.007-.397-.002-.09-.02-.18-.052-.263-.023-.066-.07-.12-.13-.15-.153-.064-.325-.063-.478.002-.086.04-.168.087-.244.14v2.263h-.993v-1.595c0-.156-.003-.286-.01-.396-.003-.09-.02-.18-.05-.264-.027-.066-.076-.12-.136-.15-.06-.033-.145-.048-.25-.048-.083 0-.165.02-.24.056-.078.04-.152.086-.228.136v2.262h-.995V10.44h.993v.356c.144-.125.296-.233.46-.323.148-.08.314-.12.484-.12.182-.004.36.045.514.14.153.1.27.244.34.414.19-.177.37-.314.54-.41.17-.096.34-.145.515-.145.136-.002.27.023.396.075.115.044.22.116.3.21.09.106.16.23.2.364.045.142.066.328.066.553v2.076h-.995z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://identitystandards.acm.org/\",hex:\"0085CA\"},Accusoft:{title:\"Accusoft\",slug:\"accusoft\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Accusoft icon</title><path d=\"M18.078,16.345c-0.209-0.261-8.709-11.13-9.005-11.496 c-0.279-0.366-0.209-0.47-0.157-0.523c0.105-0.122,0.261-0.105,0.871-0.105c0.366,0,3.989-0.017,4.372-0.017 c0.784,0,0.906,0.07,0.993,0.087c0.087,0.035,0.296,0.209,0.453,0.383c0.087,0.105,7.699,9.214,7.768,9.301 c0.087,0.105,0.209,0.279,0.314,0.435c0.087,0.157,0.105,0.366-0.035,0.453c-0.087,0.052-4.302,1.794-4.424,1.829 c-0.122,0.052-0.348,0.139-0.523,0.105C18.618,16.798,18.357,16.676,18.078,16.345 M22.38,16.136l0.314,0.052 c0,0,1.01,0.192,1.115,0.226C23.913,16.432,24,16.519,24,16.554c0,0.087-0.052,0.122-0.139,0.174 c-0.07,0.052-4.633,2.856-4.72,2.909c-0.087,0.052-0.192,0.105-0.435,0.139c-0.453,0.087-1.306-0.157-1.585-0.209 c-0.261-0.052-11.461-2.543-11.548-2.578c-0.105-0.035-0.174-0.035-0.174-0.139c-0.017-0.157,0.226-0.209,0.418-0.279 c0.192-0.07,5.452-1.968,5.643-2.055c0.192-0.087,0.418-0.105,0.54-0.105s0.853,0.105,1.184,0.157s1.271,0.192,1.271,0.192 l2.142,2.769c0.366,0.435,0.61,0.61,0.923,0.627c0.157,0.017,0.331-0.035,0.453-0.087C18.061,18.035,22.38,16.136,22.38,16.136 M10.153,9.343c0,0,1.846,2.369,1.864,2.386c0.017,0.035,0.035,0.07,0.07,0.087v0.035c-0.07,0.052-3.362,3.1-3.379,3.118 l-3.466,1.271c0,0-0.105,0.035-0.157,0.07c-0.052,0.035-0.122,0.105-0.105,0.261c0,0.052,0.017,0.853,0.035,1.045 c-0.017,0.017,0,0-0.017,0.017c0,0-4.267,1.359-4.302,1.359c-0.209,0.07-0.61,0.209-0.662,0.174 c-0.087-0.07,0.017-0.174,0.07-0.244c0.052-0.07,8.796-8.674,9.127-9.022C9.7,9.395,10.153,9.343,10.153,9.343\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://company-39138.frontify.com/d/7EKFm12NQSa8/accusoft-corporation-style-guide#/style-guide/logo\",hex:\"FF7E4A\"},AddThis:{title:\"AddThis\",slug:\"addthis\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>AddThis icon</title><path d=\"M18 13.496h-4.501v4.484h-3v-4.484H6v-2.99h4.5V6.021h3.001v4.485H18v2.99zM21 .041H3C1.348.043.008 1.379 0 3.031v17.94c.008 1.65 1.348 2.986 3 2.988h18c1.651-.002 2.991-1.338 3-2.988V3.031c-.009-1.652-1.348-2.987-3-2.99z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://www.addthis.com/\",hex:\"FF6550\"},AdGuard:{title:\"AdGuard\",slug:\"adguard\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>AdGuard icon</title><path d=\"M12 0C8.519 0 4.426.828.931 2.628l-.545.279v.616c0 3.711.071 13.613 11.101 20.169L12 24l.513-.308c11.03-6.556 11.1-16.458 11.1-20.17v-.608l-.538-.282C19.622.825 15.481 0 12 0zm0 2.012c2.978 0 6.584.763 9.576 2.197-.008 3.888-.418 11.543-9.576 17.33-9.158-5.787-9.569-13.442-9.576-17.33C5.46 2.77 9.022 2.012 12 2.012zm5.035 5.565c-.26.008-.484.173-.61.299l-5.38 5.58-2.012-2.413c-.955-1.106-2.262-.251-2.564-.05l4.677 5.43 6.385-8.648a.7.7 0 00-.496-.198z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://adguard.com/en/contribute.html\",hex:\"66B574\"},Adobe:{title:\"Adobe\",slug:\"adobe\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Adobe icon</title><path d=\"M15.1 2H24v20L15.1 2zM8.9 2H0v20L8.9 2zM12 9.4L17.6 22h-3.8l-1.6-4H8.1L12 9.4z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.adobe.com/\",hex:\"FF0000\"},\"Adobe Acrobat Reader\":{title:\"Adobe Acrobat Reader\",slug:\"adobeacrobatreader\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Adobe Acrobat Reader icon</title><path d=\"M23.598 15.368c-.71-.76-2.164-1.197-4.224-1.197-1.1 0-2.375.11-3.76.37-.782-.77-1.562-1.67-2.307-2.72-.53-.74-.993-1.52-1.42-2.29.813-2.54 1.206-4.61 1.206-6.1 0-1.672-.603-3.416-2.34-3.416-.533 0-1.066.325-1.35.8-.783 1.408-.43 4.493.917 7.54-.503 1.52-1.035 2.973-1.7 4.605-.578 1.376-1.244 2.794-1.923 4.096C2.793 18.64.267 20.49.03 21.94c-.104.547.074 1.05.457 1.45.133.11.636.545 1.48.545 2.59 0 5.32-4.28 6.707-6.86 1.065-.36 2.13-.687 3.193-1.015 1.168-.323 2.34-.583 3.405-.765 2.735 2.504 5.146 2.9 6.358 2.9 1.492 0 2.024-.617 2.203-1.122.28-.65.07-1.37-.252-1.74l.02.04zm-1.385 1.054c-.104.544-.638.906-1.386.906-.21 0-.39-.037-.603-.072-1.36-.325-2.633-1.016-3.903-2.106 1.25-.214 2.31-.25 2.98-.25.74 0 1.38.032 1.81.144.49.106 1.27.435 1.095 1.38h.02zm-7.523-1.707c-.92.19-1.914.414-2.944.693-.816.223-1.666.474-2.52.77.463-.902.854-1.774 1.208-2.603.428-1.02.78-2.07 1.135-3.046.35.61.74 1.23 1.13 1.78.64.87 1.31 1.7 1.98 2.42v-.02zM10.04 1.23c.145-.29.43-.436.678-.436.745 0 .887.868.887 1.56 0 1.168-.354 2.942-.96 4.967-1.062-2.82-1.135-5.18-.603-6.09zM6.138 18.127C4.328 21.17 2.59 23.06 1.525 23.06c-.21 0-.387-.075-.53-.183-.214-.216-.32-.472-.248-.76.213-1.09 2.236-2.613 5.392-3.99z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://wwwimages2.adobe.com/etc/clientlibs/beagle/ace/source/font/aceui-fonts.svg\",hex:\"EE3F24\"},\"Adobe After Effects\":{title:\"Adobe After Effects\",slug:\"adobeaftereffects\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Adobe After Effects icon</title><path d=\"M0 .3v23.4h24V.3H0zm1 1h22v21.4H1V1.3zm5.784 12.25l-.792 2.986c-.017.083-.05.113-.148.113H4.376c-.1 0-.116-.035-.1-.15l2.84-9.933c.05-.18.082-.325.098-.82 0-.066.033-.1.083-.1h2.096c.066 0 .1.018.116.1l3.183 10.77c.016.082 0 .13-.083.13h-1.65c-.082 0-.13-.03-.147-.096l-.825-3.002h-3.2zm2.806-1.624c-.28-1.106-.96-3.53-1.206-4.7h-.016c-.214 1.17-.756 3.148-1.17 4.7H9.59zm5.36 1.024c.017 1.353.66 2.26 2.178 2.26.594 0 1.103-.078 1.63-.31.067-.032.117-.015.117.067v1.254c0 .1-.033.15-.1.2-.527.264-1.184.38-2.01.38-2.64 0-3.63-1.947-3.63-4.125 0-2.36 1.222-4.29 3.367-4.29 2.178 0 2.937 1.833 2.937 3.317 0 .48-.035.876-.085 1.057-.017.082-.05.11-.132.127-.198.033-.792.066-1.667.066H14.95zm2.03-1.375c.512 0 .693 0 .742-.016 0-.068.017-.125.017-.174 0-.545-.266-1.544-1.306-1.544-.957 0-1.37.842-1.468 1.732h2.013z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://wwwimages2.adobe.com/etc/clientlibs/beagle/ace/source/font/aceui-fonts.svg\",hex:\"D291FF\"},\"Adobe Audition\":{title:\"Adobe Audition\",slug:\"adobeaudition\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Adobe Audition icon</title><path d=\"M0 .3v23.4h24V.3zm1 1h22v21.4H1zM6.659 13.8l-.772 2.863c-.017.081-.049.137-.145.137H4.309c-.097 0-.113-.032-.097-.145l2.769-9.641a3.091 3.091 0 0 0 .097-.817c0-.065.032-.097.08-.097h2.045c.064 0 .097.016.113.097l3.107 10.474c.016.081 0 .129-.081.129h-1.61a.147.147 0 0 1-.144-.12l-.805-2.88zm2.721-1.6c-.274-1.079-.918-3.429-1.159-4.572h-.016c-.209 1.143-.725 3.059-1.127 4.572zm10.02 3.025c0 .112.016.45.048.998 0 .064-.006.096-.07.112a8.232 8.232 0 0 1-3.012.66c-1.465 0-2.866-.563-2.866-2.817V9.029c0-.081.032-.129.113-.129h1.574c.081 0 .113.048.113.129v4.94c0 .95.415 1.465 1.413 1.465a2.724 2.724 0 0 0 .987-.177V9.029c0-.081.032-.129.113-.129h1.474c.097 0 .113.048.113.129v6.196z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://helpx.adobe.com/content/dam/help/mnemonics/au_cc_app_RGB.svg\",hex:\"00E4BB\"},\"Adobe Dreamweaver\":{title:\"Adobe Dreamweaver\",slug:\"adobedreamweaver\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Adobe Dreamweaver icon</title><path d=\"M0 .3v23.4h24V.3H0zm1 1h22v21.4H1V1.3zm2.125 4.51c0-.084.017-.117.116-.133.38-.017 1.47-.05 2.597-.05 3.35 0 5.016 2.162 5.016 5.33 0 4.405-2.89 5.74-5.115 5.74-.842 0-2.064-.016-2.51-.032-.065 0-.098-.05-.098-.132V5.808zm1.8 9.27c.28.018.528.034.842.034 1.848 0 3.217-1.304 3.234-4.108.02-2.74-1.4-3.795-3.163-3.795-.347 0-.627.02-.907.038v7.837zm12.688 1.57c-.116 0-.148-.045-.165-.143-.495-2.755-.907-4.703-1.09-6.056h-.016c-.214 1.226-.61 3.257-1.27 6.078-.033.1-.066.127-.148.127h-1.617c-.116 0-.148-.016-.18-.115L11.36 8.66c-.016-.067.018-.133.117-.133h1.617c.066 0 .116.023.132.09.627 3.546.89 5.384.99 6.11h.066c.116-.858.462-2.646 1.204-6.078.033-.1.033-.124.132-.124h1.7c.082 0 .098.04.115.123.578 3.25.957 5.3 1.056 6.126h.05c.16-1.056.38-2.48 1.084-6.144.017-.066.033-.106.116-.106h1.52c.066 0 .116.033.083.116l-1.963 7.894c-.015.083-.03.116-.146.116h-1.617z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://wwwimages2.adobe.com/etc/clientlibs/beagle/ace/source/font/aceui-fonts.svg\",hex:\"35FA00\"},\"Adobe Illustrator\":{title:\"Adobe Illustrator\",slug:\"adobeillustrator\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Adobe Illustrator icon</title><path d=\"M0 .3v23.4h24V.3H0zm1 1h22v21.4H1V1.3zm7.325 12.25l-.792 2.998c-.017.083-.05.102-.148.102H5.917c-.1 0-.115-.033-.1-.148l2.84-9.945c.05-.18.082-.338.098-.833 0-.066.033-.1.083-.1h2.096c.066 0 .1.018.116.1l3.185 10.794c.017.083 0 .132-.083.132h-1.65c-.083 0-.132-.02-.148-.086l-.825-3.015H8.322zm2.788-1.625c-.28-1.106-.94-3.528-1.188-4.7h-.017c-.214 1.17-.742 3.15-1.155 4.7h2.36zm4.5-5.558c0-.643.445-1.023 1.023-1.023.61 0 1.023.412 1.023 1.023 0 .66-.43 1.023-1.04 1.023-.6 0-1.01-.363-1.01-1.023zm.112 2.274c0-.08.033-.11.116-.11h1.57c.088 0 .12.033.12.116v7.895c0 .083-.016.116-.115.116h-1.55c-.1 0-.133-.05-.133-.13V8.64z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://wwwimages2.adobe.com/etc/clientlibs/beagle/ace/source/font/aceui-fonts.svg\",hex:\"FF7C00\"},\"Adobe InDesign\":{title:\"Adobe InDesign\",slug:\"adobeindesign\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Adobe InDesign icon</title><path d=\"M0 .3v23.4h24V.3H0zm1 1h22v21.4H1V1.3zm7.775 15.218c0 .1-.017.132-.132.132H7.107c-.1 0-.132-.05-.132-.132V5.782c0-.1.05-.132.132-.132H8.66c.082 0 .115.033.115.116v10.752zm1.77-3.872c0-2.393 1.578-4.257 4.102-4.257.214 0 .33 0 .528.015V5.75c0-.066.05-.1.1-.1H16.9c.084 0 .1.034.1.084v9.355c0 .28 0 .625.05 1.004 0 .066-.02.083-.087.116-.858.413-1.766.595-2.624.595-2.213 0-3.797-1.37-3.797-4.158zm4.63-2.624c-.148-.066-.347-.1-.594-.1-1.285 0-2.187.99-2.187 2.64 0 1.882.918 2.64 2.073 2.64.247 0 .512-.032.71-.115v-5.065z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://wwwimages2.adobe.com/etc/clientlibs/beagle/ace/source/font/aceui-fonts.svg\",hex:\"FD3F93\"},\"Adobe Lightroom CC\":{title:\"Adobe Lightroom CC\",slug:\"adobelightroomcc\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Adobe Lightroom CC icon</title><path d=\"M19.75.3H4.25C1.9.3 0 2.2 0 4.55v14.9c0 2.35 1.9 4.25 4.25 4.25h15.5c2.35 0 4.25-1.9 4.25-4.25V4.55C24 2.2 22.1.3 19.75.3zm3.24 18.76a3.623 3.623 0 0 1-3.62 3.64H4.63c-2 0-3.63-1.63-3.63-3.64V4.94C1 2.93 2.63 1.3 4.63 1.3h14.73a3.63 3.63 0 0 1 3.63 3.63v14.13zM6.65 16.63c-.12 0-.15-.05-.15-.15V5.73c0-.08.03-.13.12-.13H8.2c.08 0 .1.03.1.12v9.26h4.12c.08 0 .11.03.09.12l-.25 1.42c-.02.08-.07.12-.15.12H6.65v-.01zm7.5-6.48c0-.12 0-.41-.05-.97 0-.08.02-.1.08-.13.61-.25 2.06-.69 3.68-.69.08 0 .12.02.12.1V9.9c0 .08-.03.1-.12.1-.63-.03-1.56.05-1.91.2v6.31c0 .08-.03.12-.12.12h-1.57c-.08 0-.12-.03-.12-.12v-6.36h.01z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.adobe.com/products/photoshop-lightroom.html\",hex:\"3DF0F0\"},\"Adobe Lightroom Classic\":{title:\"Adobe Lightroom Classic\",slug:\"adobelightroomclassic\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Adobe Lightroom Classic icon</title><path d=\"M0 .3v23.4h24V.3H0zm1 1h22v21.4H1V1.3zm5.648 15.325c-.116 0-.148-.05-.148-.148V5.733c0-.083.033-.132.116-.132H8.2c.084 0 .1.037.1.12v9.26h4.125c.083 0 .106.033.09.116l-.248 1.42c-.016.082-.066.115-.148.115H6.65zm7.402-6.476c0-.12 0-.416-.05-.977 0-.083.018-.1.084-.132.61-.246 2.058-.692 3.675-.692.08 0 .112.017.112.1V9.9c0 .084-.033.1-.116.1-.628-.033-1.564.05-1.91.198v6.31c0 .082-.033.115-.116.115h-1.57c-.08 0-.114-.033-.114-.116v-6.36z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.adobe.com/products/photoshop-lightroom-classic.html\",hex:\"ADD5EC\"},\"Adobe Photoshop\":{title:\"Adobe Photoshop\",slug:\"adobephotoshop\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Adobe Photoshop icon</title><path d=\"M0 .3v23.4h24V.3H0zm1 1h22v21.4H1V1.3zm4.8 4.48c0-.067.14-.116.224-.116.644-.033 1.588-.05 2.578-.05 2.772 0 3.85 1.52 3.85 3.466 0 2.54-1.842 3.63-4.102 3.63-.38 0-.51-.017-.775-.017v3.842c0 .083-.033.116-.115.116H5.916c-.083 0-.115-.03-.115-.113V5.78zm1.775 5.312c.23.016.412.016.81.016 1.17 0 2.27-.412 2.27-1.996 0-1.27-.786-1.914-2.122-1.914-.396 0-.775.016-.957.033v3.864zm8.607-1.188c-.792 0-1.056.396-1.056.726 0 .363.18.61 1.237 1.155 1.568.76 2.062 1.485 2.062 2.557 0 1.6-1.22 2.46-2.87 2.46-.876 0-1.62-.183-2.05-.43-.065-.033-.08-.082-.08-.165V14.74c0-.1.048-.133.114-.084.624.413 1.352.594 2.012.594.792 0 1.122-.33 1.122-.776 0-.363-.23-.677-1.237-1.205-1.42-.68-2.014-1.37-2.014-2.527 0-1.287 1.006-2.36 2.755-2.36.86 0 1.464.132 1.794.28.082.05.1.132.1.198v1.37c0 .083-.05.133-.15.1-.444-.264-1.1-.43-1.743-.43z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://wwwimages2.adobe.com/etc/clientlibs/beagle/ace/source/font/aceui-fonts.svg\",hex:\"00C8FF\"},\"Adobe Premiere\":{title:\"Adobe Premiere\",slug:\"adobepremiere\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Adobe Premiere icon</title><path d=\"M0 .3v23.4h24V.3zm1 1h22v21.4H1zM6.297 5.778c0-.066.017-.116.1-.116.643-.033 1.583-.05 2.573-.05 2.772 0 3.977 1.519 3.977 3.466 0 2.54-1.839 3.63-4.099 3.63-.38 0-.512-.017-.776-.017v3.843c0 .083-.033.116-.115.116H6.413c-.083 0-.116-.033-.116-.116zm1.775 5.313c.231.016.413.016.809.016 1.171 0 2.267-.412 2.267-1.996 0-1.27-.782-1.914-2.119-1.914-.396 0-.775.016-.957.033zm6.4-.908c0-.115 0-.412-.049-.973 0-.083.011-.1.077-.132a10.42 10.42 0 0 1 3.657-.693c.082 0 .115.016.115.099v1.452c0 .082-.026.099-.109.099a5.725 5.725 0 0 0-1.89.198v6.301c0 .083-.034.116-.116.116h-1.57c-.082 0-.115-.033-.115-.116z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://helpx.adobe.com/content/dam/help/mnemonics/pr_cc_app_RGB.svg\",hex:\"EA77FF\"},\"Adobe Typekit\":{title:\"Adobe Typekit\",slug:\"adobetypekit\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Adobe Typekit icon</title><path d=\"M0 0v24h24V0H0zm1 1.026h22v21.948H1V1.026zM7.165 7.983H4.394c-.082 0-.115-.033-.099-.132l.198-1.385c.016-.083.049-.116.132-.116h6.926c.099 0 .132.033.149.132l.132 1.369c.016.099-.033.132-.116.132H8.962v9.235c0 .083-.033.132-.132.132H7.296c-.098 0-.131-.033-.131-.132V7.983zM14.718 12.749l2.523-3.414c.066-.082.082-.115.165-.115h1.682c.099 0 .132.066.066.148-.396.511-2.21 2.754-2.804 3.48a.108.108 0 0 0 0 .099l3.2 4.271c.033.066.016.132-.083.132h-1.946c-.099 0-.132-.033-.165-.099a158.661 158.661 0 0 1-2.638-3.678v3.662c0 .082-.017.115-.116.115h-1.55c-.116 0-.132-.033-.132-.132V6.449c0-.049.016-.099.115-.099h1.567c.066 0 .116.033.116.116v6.283z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://helpx.adobe.com/content/dam/help/mnemonics/tk_appicon_RGB.svg\",hex:\"87EC00\"},\"Adobe XD\":{title:\"Adobe XD\",slug:\"adobexd\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Adobe XD icon</title><path d=\"M19.75.3H4.25C1.9.3 0 2.2 0 4.55v14.9c0 2.35 1.9 4.25 4.25 4.25h15.5c2.35 0 4.25-1.9 4.25-4.25V4.55C24 2.2 22.1.3 19.75.3zm3.24 18.76a3.623 3.623 0 0 1-3.62 3.64H4.63c-2 0-3.63-1.63-3.63-3.63V4.93c0-2 1.63-3.63 3.63-3.63h14.73a3.63 3.63 0 0 1 3.63 3.63v14.13zm-13.5-7.81l2.8 5.38c.05.08.02.16-.06.16h-1.74c-.11 0-.16-.03-.21-.13-.64-1.32-1.29-2.64-1.96-4.06H8.3c-.6 1.34-1.26 2.75-1.9 4.07-.05.08-.1.11-.18.11H4.57c-.1 0-.11-.08-.06-.14l2.74-5.22L4.6 6.14c-.06-.08 0-.14.06-.14h1.72c.1 0 .14.02.18.11.63 1.32 1.27 2.68 1.87 4.01h.02c.58-1.32 1.22-2.69 1.84-4 .05-.08.08-.13.18-.13h1.61c.08 0 .11.06.06.14l-2.65 5.12zm3.29 1.63c0-2.33 1.55-4.15 4.01-4.15.21 0 .32 0 .52.02V6.1c0-.06.05-.1.1-.1h1.58c.08 0 .1.03.1.08v9.18c0 .27 0 .61.05.98 0 .06-.02.08-.08.11-.84.4-1.72.58-2.56.58-2.17.01-3.72-1.33-3.72-4.05zm4.53-2.56c-.14-.06-.34-.1-.58-.1-1.26 0-2.14.97-2.14 2.58 0 1.84.9 2.58 2.03 2.58.24 0 .5-.03.69-.11v-4.95z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.adobe.com/products/xd.html\",hex:\"FF2BC2\"},Airbnb:{title:\"Airbnb\",slug:\"airbnb\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Airbnb icon</title><path d=\"M11.998 18.267c-1.352-1.696-2.147-3.182-2.412-4.455-.263-1.026-.159-1.847.291-2.464.477-.71 1.187-1.055 2.12-1.055s1.642.345 2.119 1.062c.446.61.558 1.432.286 2.464-.291 1.298-1.085 2.784-2.411 4.456zm9.597 1.14c-.185 1.245-1.034 2.278-2.2 2.782-2.251.98-4.48-.583-6.388-2.703 3.155-3.95 3.738-7.025 2.384-9.014-.795-1.14-1.933-1.695-3.393-1.695-2.943 0-4.561 2.49-3.925 5.38.37 1.564 1.351 3.342 2.915 5.33-.98 1.084-1.909 1.855-2.73 2.332-.636.344-1.245.557-1.828.608-2.677.399-4.776-2.198-3.823-4.877.132-.345.395-.98.845-1.961l.025-.053C4.94 12.36 6.717 8.75 8.759 4.746l.053-.132.58-1.115c.45-.822.635-1.19 1.351-1.643.345-.209.769-.314 1.245-.314.954 0 1.697.557 2.015 1.006.158.239.345.557.582.953l.558 1.088.08.159c2.04 4.002 3.819 7.605 5.276 10.789l.026.025.533 1.22.318.764c.243.612.294 1.221.213 1.857zm1.219-2.389c-.186-.583-.504-1.271-.9-2.093v-.03c-1.887-4.005-3.64-7.605-5.304-10.84l-.111-.162C15.313 1.461 14.464 0 11.998 0 9.56 0 8.524 1.694 7.465 3.897l-.081.16c-1.668 3.234-3.42 6.839-5.301 10.842v.053l-.558 1.219c-.21.504-.317.768-.345.847-1.35 3.712 1.432 6.972 4.8 6.972.027 0 .132 0 .264-.027h.372c1.75-.213 3.553-1.325 5.382-3.316 1.828 1.988 3.633 3.103 5.38 3.316h.372c.132.027.238.027.264.027 3.368.003 6.15-3.26 4.8-6.972z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.airbnb.com\",hex:\"FF5A5F\"},\"AirPlay Audio\":{title:\"AirPlay Audio\",slug:\"airplayaudio\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>AirPlay Audio icon</title><path d=\"M11.9082.1836c-2.8774.0227-5.7566 1.0743-8.045 3.1719-4.8816 4.4748-5.1662 12.0812-.6913 16.9629.2034.244.4473.4473.6914.6914.122.0813.2861.083.4082-.0391l.5293-.6113c.122-.122.122-.3252 0-.4473C.5293 15.9661.2438 9.254 4.2305 4.9824 8.2172.711 14.8887.4274 19.1602 4.4141c4.2714 3.9867 4.555 10.6562.5683 14.9277-.2034.2034-.365.4076-.5683.5703-.122.122-.122.3252 0 .4473l.5293.6113c.122.122.3252.1204.4472.039 4.8817-4.5155 5.1663-12.0811.6914-16.9628-2.3989-2.5934-5.6588-3.889-8.9199-3.8633zm.3867 3.5176C10.0982 3.63 7.8715 4.3932 6.1426 6c-3.4579 3.2138-3.661 8.6242-.4473 12.082.122.122.2435.2842.4063.4063.122.122.3252.122.4472 0l.5293-.6094c.122-.122.122-.3252 0-.4473-1.4238-1.3424-2.2773-3.2547-2.2773-5.248 0-3.946 3.2122-7.1602 7.1582-7.1602 3.946 0 7.1601 3.2532 7.1601 7.1993 0 1.9526-.8144 3.8665-2.2382 5.209-.122.122-.122.3252 0 .4472l.5293.6094c.122.122.3252.163.4472.041 3.4579-3.2545 3.622-8.6652.4082-12.123-1.6069-1.729-3.774-2.634-5.9707-2.7051zm-.2656 3.3164c-1.3221-.0204-2.654.4662-3.6914 1.4629-2.0747 1.9933-2.1145 5.2475-.1211 7.3222l.121.123c.1221.1221.3253.1221.4474 0l.5293-.6112c.122-.122.122-.3253 0-.4473-.6916-.6916-1.0977-1.6666-1.0977-2.6836a3.732 3.732 0 013.7422-3.7422 3.732 3.732 0 013.7422 3.7422c0 1.017-.4064 1.9513-1.1387 2.6836-.122.122-.122.3252 0 .4473l.5293.6113c.122.122.3252.122.4473 0 2.034-1.9934 2.1164-5.2476.123-7.3223-.9967-1.0373-2.3107-1.5656-3.6328-1.586zm.0059 7.7441c-.1373-.005-.2803.0448-.4024.1465l-.039.041-7.1602 8.0547c-.1627.2034-.1624.488.041.6914.0814.0814.2019.123.2832.123h14.3613c.2441 0 .4883-.2035.4883-.4882 0-.122-.0397-.2448-.121-.3262l-7.0801-8.0547c-.1018-.122-.2338-.1824-.3711-.1875Z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://developer.apple.com/design/human-interface-guidelines/airplay/overview/icons/\",hex:\"000000\"},\"AirPlay Video\":{title:\"AirPlay Video\",slug:\"airplayvideo\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>AirPlay Video icon</title><path d=\"M3.412 1.32c-1.178 0-1.584.122-2.031.366A2.449 2.449 0 00.365 2.7C.122 3.148 0 3.553 0 4.771v9.137c0 1.178.122 1.585.365 2.031.244.447.57.772 1.016 1.016.406.244.813.365 2.031.365h2.72l1.138-1.34H3.006c-.325.041-.69-.001-1.016-.164-.203-.08-.366-.283-.488-.486-.122-.325-.203-.65-.162-1.016V4.406c-.04-.325 0-.69.162-1.015.081-.203.285-.365.488-.487.325-.122.65-.204 1.016-.164h17.867c.325-.04.69.002 1.016.164.203.082.364.284.486.487.122.324.203.65.162 1.015v9.95c.04.324 0 .69-.162 1.015-.081.203-.283.365-.486.486-.325.122-.65.203-1.016.163h-4.264l1.137 1.341 2.803-.04c1.218 0 1.623-.122 2.07-.366a2.449 2.449 0 001.016-1.016c.243-.406.365-.813.365-2.03V4.77c0-1.218-.122-1.623-.365-2.07a2.449 2.449 0 00-1.016-1.015c-.447-.244-.852-.366-2.07-.366H3.412zm8.451 12.198a.501.501 0 00-.37.187l-7.106 8.162a.465.465 0 00-.123.326.47.47 0 00.488.487h14.293c.122 0 .245-.04.326-.121.203-.163.204-.489.041-.692l-7.107-8.162-.041-.04a.594.594 0 00-.4-.147z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://developer.apple.com/design/human-interface-guidelines/airplay/overview/icons/\",hex:\"000000\"},Algolia:{title:\"Algolia\",slug:\"algolia\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Algolia icon</title><path d=\"M3.16 0A3.156 3.156 0 000 3.152v17.69A3.161 3.161 0 003.16 24h17.68c1.747 0 3.16-1.42 3.16-3.16V3.16C24 1.413 22.58 0 20.84 0H3.16zm7.87 3.494h2.429A1.04 1.04 0 0114.5 4.535v.822a.14.14 0 01-.174.14 7.679 7.647 0 00-2.043-.276 7.564 7.533 0 00-2.113.297c-.095.021-.182-.045-.182-.14v-.843a1.044 1.04 0 011.041-1.04zm-4.35 2.22a1.04 1.035 0 01.75.306l.414.416c.058.065.051.167-.022.21a7.544 7.513 0 00-.941.801 8 7.967 0 00-.793.932c-.058.065-.153.08-.219.016l-.408-.409a1.043 1.04 0 010-1.472l.496-.494a1.04 1.035 0 01.723-.305zm5.597.35a6.774 6.774 0 016.787 6.778 6.784 6.784 0 01-6.787 6.783c-3.748 0-6.789-3.028-6.789-6.777a6.786 6.786 0 016.79-6.784zm0 2.008a4.783 4.783 0 00-4.783 4.776 4.783 4.783 0 004.783 4.775 4.777 4.777 0 004.784-4.775 4.782 4.782 0 00-4.784-4.776zm.145.838a3.935 3.919 0 013.281 1.988c.036.073.015.16-.057.196l-3.166 1.638c-.093.052-.205-.023-.205-.125V9.05h.002c0-.08.072-.139.145-.139Z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.algolia.com/press/?section=brand-guidelines\",hex:\"5468FF\"},AlliedModders:{title:\"AlliedModders\",slug:\"alliedmodders\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>AlliedModders icon</title><path d=\"M.602 1.077A.615.615 0 000 1.692v20.615a.615.615 0 00.615.615h8.309a.615.615 0 00.615-.615v-1.744l.647 1.94a.615.615 0 00.584.42h6.77a.615.615 0 00.585-.427l.035-.107a.615.615 0 00.61.533h4.615a.615.615 0 00.615-.615V8.155a.615.615 0 00-.447-.592L19.246 6.33a.615.615 0 00-.744.372l-1.887 4.906V6.059a.615.615 0 00-.443-.592l-3.385-.98a.615.615 0 00-.787.59v6.15l-2.809-7.48a.615.615 0 00-.408-.377l-8-2.27a.615.615 0 00-.181-.023zm.628 1.43l6.918 1.962 3.891 10.363a.615.615 0 001.191-.216v-8.72l2.155.624v8.402a.615.615 0 001.19.223l2.874-7.475 3.32.948v13.074h-3.384v-1.23h1.23a.615.615 0 00.615-.616V12.77a.615.615 0 00-1.2-.19l-2.94 9.112h-5.877L6.738 8.266a.615.615 0 00-1.199.195v11.076a.615.615 0 00.615.618H8.31v1.537H1.23zm5.54 9.747l2.224 6.674a.615.615 0 00-.07-.006H6.77zM20 16.682v2.549h-.822z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://forums.alliedmods.net/index.php\",hex:\"1578D3\"},\"AlloCiné\":{title:\"AlloCiné\",slug:\"allocine\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>AlloCiné icon</title><path d=\"M20.447 21.162L17.207.695a.815.815 0 0 0-.926-.686h-.004l-3.42.551a2.632 2.632 0 0 1-5.199.824l-3.42.542a.815.815 0 0 0-.687.926v.003l3.244 20.458c.069.443.484.746.928.677h.001l3.421-.542a2.636 2.636 0 1 1 5.208-.815l3.42-.541a.81.81 0 0 0 .675-.925v-.005zM14.77 8.21l-1.23 1.805a.854.854 0 0 1-.433.3c-.509.12-1.249-.962-1.772 1.505-.524 2.467.592 1.784 1.004 2.106a.875.875 0 0 1 .283.436l.394 2.142h-.012a.602.602 0 0 1-.343.644c-.454.183-1.167.427-1.588.337-.903-.193-2.338-2.428-1.562-6.072.777-3.643 2.994-5.078 3.896-4.885.413.09.972.601 1.315.953a.602.602 0 0 1 .048.729z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://www.allocine.fr/favicon.ico\",hex:\"FECC00\"},Amazon:{title:\"Amazon\",slug:\"amazon\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Amazon icon</title><path d=\"M.045 18.02c.072-.116.187-.124.348-.022 3.636 2.11 7.594 3.166 11.87 3.166 2.852 0 5.668-.533 8.447-1.595l.315-.14c.138-.06.234-.1.293-.13.226-.088.39-.046.525.13.12.174.09.336-.12.48-.256.19-.6.41-1.006.654-1.244.743-2.64 1.316-4.185 1.726-1.53.406-3.045.61-4.516.61-2.265 0-4.41-.396-6.435-1.187-2.02-.794-3.82-1.91-5.43-3.35-.1-.074-.15-.15-.15-.22 0-.047.02-.09.05-.13zm6.565-6.218c0-1.005.247-1.863.743-2.577.495-.71 1.17-1.25 2.04-1.615.796-.335 1.756-.575 2.912-.72.39-.046 1.033-.103 1.92-.174v-.37c0-.93-.105-1.558-.3-1.875-.302-.43-.78-.65-1.44-.65h-.182c-.48.046-.896.196-1.246.46-.35.27-.575.63-.675 1.096-.06.3-.206.465-.435.51l-2.52-.315c-.248-.06-.372-.18-.372-.39 0-.046.007-.09.022-.15.247-1.29.855-2.25 1.82-2.88.976-.616 2.1-.975 3.39-1.05h.54c1.65 0 2.957.434 3.888 1.29.135.15.27.3.405.48.12.165.224.314.283.45.075.134.15.33.195.57.06.254.105.42.135.51.03.104.062.3.076.615.01.313.02.493.02.553v5.28c0 .376.06.72.165 1.036.105.313.21.54.315.674l.51.674c.09.136.136.256.136.36 0 .12-.06.226-.18.314-1.2 1.05-1.86 1.62-1.963 1.71-.165.135-.375.15-.63.045-.195-.166-.375-.332-.526-.496l-.31-.347c-.06-.074-.166-.21-.317-.42l-.3-.435c-.81.886-1.603 1.44-2.4 1.665-.494.15-1.093.227-1.83.227-1.11 0-2.04-.343-2.76-1.034-.72-.69-1.08-1.665-1.08-2.94l-.05-.076zm3.753-.438c0 .566.14 1.02.425 1.364.285.34.675.512 1.155.512.045 0 .106-.007.195-.02.09-.016.134-.023.166-.023.614-.16 1.08-.553 1.424-1.178.165-.28.285-.58.36-.91.09-.32.12-.59.135-.8.015-.195.015-.54.015-1.005v-.54c-.84 0-1.484.06-1.92.18-1.275.36-1.92 1.17-1.92 2.43l-.035-.02zm9.162 7.027c.03-.06.075-.11.132-.17.362-.243.714-.41 1.05-.5.55-.133 1.09-.222 1.612-.24.14-.012.28 0 .41.03.65.06 1.05.168 1.172.33.063.09.09.228.09.39v.15c0 .51-.14 1.11-.415 1.8-.278.69-.664 1.248-1.156 1.68-.073.06-.14.09-.197.09-.03 0-.06 0-.09-.012-.09-.044-.107-.12-.064-.24.54-1.26.806-2.143.806-2.64 0-.15-.03-.27-.087-.344-.145-.166-.55-.257-1.224-.257-.243 0-.533.016-.87.046-.363.045-.7.09-1 .135-.09 0-.148-.014-.18-.044-.03-.03-.036-.047-.02-.077 0-.017.006-.03.02-.063v-.06z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://worldvectorlogo.com/logo/amazon-icon\",hex:\"FF9900\"},\"Amazon Alexa\":{title:\"Amazon Alexa\",slug:\"amazonalexa\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Amazon Alexa icon</title><path d=\"M12 0C5.37 0 0 5.37 0 12C0 18.09 4.53 23.11 10.4 23.9V21.5A1.59 1.59 0 0 0 9.32 19.97A8.41 8.41 0 0 1 3.6 11.8A8.37 8.37 0 0 1 12.09 3.6A8.4 8.4 0 0 1 20.4 12.31L20.39 12.38A8.68 8.68 0 0 1 20.36 12.76C20.36 12.83 20.35 12.9 20.34 12.96C20.34 13.04 20.33 13.12 20.32 13.19L20.3 13.29C19.27 20.07 10.45 23.87 10.4 23.9C10.92 23.97 11.46 24 12 24C18.63 24 24 18.63 24 12S18.63 0 12 0Z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://developer.amazon.com/docs/alexa-voice-service/logo-and-brand.html\",hex:\"00CAFF\"},\"Amazon AWS\":{title:\"Amazon AWS\",slug:\"amazonaws\",svg:'<svg xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" viewBox=\"0 0 24 24\"><title>Amazon AWS icon</title><path d=\"M6.763 10.036c0 .296.032.535.088.71.064.176.144.368.256.576.04.063.056.127.056.183 0 .08-.048.16-.152.24l-.503.335a.383.383 0 0 1-.208.072c-.08 0-.16-.04-.239-.112a2.47 2.47 0 0 1-.287-.375 6.18 6.18 0 0 1-.248-.471c-.622.734-1.405 1.101-2.347 1.101-.67 0-1.205-.191-1.596-.574-.391-.384-.59-.894-.59-1.533 0-.678.239-1.23.726-1.644.487-.415 1.133-.623 1.955-.623.272 0 .551.024.846.064.296.04.6.104.918.176v-.583c0-.607-.127-1.03-.375-1.277-.255-.248-.686-.367-1.3-.367-.28 0-.568.031-.863.103-.295.072-.583.16-.862.272a2.287 2.287 0 0 1-.28.104.488.488 0 0 1-.127.023c-.112 0-.168-.08-.168-.247v-.391c0-.128.016-.224.056-.28a.597.597 0 0 1 .224-.167c.279-.144.614-.264 1.005-.36a4.84 4.84 0 0 1 1.246-.151c.95 0 1.644.216 2.091.647.439.43.662 1.085.662 1.963v2.586zm-3.24 1.214c.263 0 .534-.048.822-.144.287-.096.543-.271.758-.51.128-.152.224-.32.272-.512.047-.191.08-.423.08-.694v-.335a6.66 6.66 0 0 0-.735-.136 6.02 6.02 0 0 0-.75-.048c-.535 0-.926.104-1.19.32-.263.215-.39.518-.39.917 0 .375.095.655.295.846.191.2.47.296.838.296zm6.41.862c-.144 0-.24-.024-.304-.08-.064-.048-.12-.16-.168-.311L7.586 5.55a1.398 1.398 0 0 1-.072-.32c0-.128.064-.2.191-.2h.783c.151 0 .255.025.31.08.065.048.113.16.16.312l1.342 5.284 1.245-5.284c.04-.16.088-.264.151-.312a.549.549 0 0 1 .32-.08h.638c.152 0 .256.025.32.08.063.048.12.16.151.312l1.261 5.348 1.381-5.348c.048-.16.104-.264.16-.312a.52.52 0 0 1 .311-.08h.743c.127 0 .2.065.2.2 0 .04-.009.08-.017.128a1.137 1.137 0 0 1-.056.2l-1.923 6.17c-.048.16-.104.263-.168.311a.51.51 0 0 1-.303.08h-.687c-.151 0-.255-.024-.32-.08-.063-.056-.119-.16-.15-.32l-1.238-5.148-1.23 5.14c-.04.16-.087.264-.15.32-.065.056-.177.08-.32.08zm10.256.215c-.415 0-.83-.048-1.229-.143-.399-.096-.71-.2-.918-.32-.128-.071-.215-.151-.247-.223a.563.563 0 0 1-.048-.224v-.407c0-.167.064-.247.183-.247.048 0 .096.008.144.024.048.016.12.048.2.08.271.12.566.215.878.279.319.064.63.096.95.096.502 0 .894-.088 1.165-.264a.86.86 0 0 0 .415-.758.777.777 0 0 0-.215-.559c-.144-.151-.416-.287-.807-.415l-1.157-.36c-.583-.183-1.014-.454-1.277-.813a1.902 1.902 0 0 1-.4-1.158c0-.335.073-.63.216-.886.144-.255.335-.479.575-.654.24-.184.51-.32.83-.415.32-.096.655-.136 1.006-.136.175 0 .359.008.535.032.183.024.35.056.518.088.16.04.312.08.455.127.144.048.256.096.336.144a.69.69 0 0 1 .24.2.43.43 0 0 1 .071.263v.375c0 .168-.064.256-.184.256a.83.83 0 0 1-.303-.096 3.652 3.652 0 0 0-1.532-.311c-.455 0-.815.071-1.062.223-.248.152-.375.383-.375.71 0 .224.08.416.24.567.159.152.454.304.877.44l1.134.358c.574.184.99.44 1.237.767.247.327.367.702.367 1.117 0 .343-.072.655-.207.926-.144.272-.336.511-.583.703-.248.2-.543.343-.886.447-.36.111-.734.167-1.142.167zM21.698 16.207c-2.626 1.94-6.442 2.969-9.722 2.969-4.598 0-8.74-1.7-11.87-4.526-.247-.223-.024-.527.272-.351 3.384 1.963 7.559 3.153 11.877 3.153 2.914 0 6.114-.607 9.06-1.852.439-.2.814.287.383.607zM22.792 14.961c-.336-.43-2.22-.207-3.074-.103-.255.032-.295-.192-.063-.36 1.5-1.053 3.967-.75 4.254-.399.287.36-.08 2.826-1.485 4.007-.215.184-.423.088-.327-.151.32-.79 1.03-2.57.695-2.994z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://upload.wikimedia.org/wikipedia/commons/9/93/Amazon_Web_Services_Logo.svg\",hex:\"232F3E\"},AMD:{title:\"AMD\",slug:\"amd\",svg:'<svg xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" viewBox=\"0 0 24 24\"><title>AMD icon</title><path d=\"M18.324 9.137l1.559 1.56h2.556v2.557L24 14.814V9.137zM2 9.52l-2 4.96h1.309l.37-.982H3.9l.408.982h1.338L3.432 9.52zm4.209 0v4.955h1.238v-3.092l1.338 1.562h.188l1.338-1.556v3.091h1.238V9.52H10.47l-1.592 1.845L7.287 9.52zm6.283 0v4.96h2.057c1.979 0 2.88-1.046 2.88-2.472 0-1.36-.937-2.488-2.747-2.488zm1.237.91h.792c1.17 0 1.63.711 1.63 1.57 0 .728-.372 1.572-1.616 1.572h-.806zm-10.985.273l.791 1.932H2.008zm17.137.307l-1.604 1.603v2.25h2.246l1.604-1.607h-2.246z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://subscriptions.amd.com/greatpower/img/amd-logo-black.svg\",hex:\"ED1C24\"},\"American Express\":{title:\"American Express\",slug:\"americanexpress\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>American Express icon</title><path d=\"M16.015 14.378c0-.32-.135-.496-.344-.622-.21-.12-.464-.135-.81-.135h-1.543v2.82h.675v-1.027h.72c.24 0 .39.024.478.125.12.13.104.38.104.55v.35h.66v-.555c-.002-.25-.017-.376-.108-.516-.06-.08-.18-.18-.33-.234l.02-.008c.18-.072.48-.297.48-.747zm-.87.407l-.028-.002c-.09.053-.195.058-.33.058h-.81v-.63h.824c.12 0 .24 0 .33.05.098.048.156.147.15.255 0 .12-.045.215-.134.27zM20.297 15.837H19v.6h1.304c.676 0 1.05-.278 1.05-.884 0-.28-.066-.448-.187-.582-.153-.133-.392-.193-.73-.207l-.376-.015c-.104 0-.18 0-.255-.03-.09-.03-.15-.105-.15-.21 0-.09.017-.166.09-.21.083-.046.177-.066.272-.06h1.23v-.602h-1.35c-.704 0-.958.437-.958.84 0 .9.776.855 1.407.87.104 0 .18.015.225.06.046.03.082.106.082.18 0 .077-.035.15-.08.18-.06.053-.15.07-.277.07zM0 0v10.096L.81 8.22h1.75l.225.464V8.22h2.043l.45 1.02.437-1.013h6.502c.295 0 .56.057.756.236v-.23h1.787v.23c.307-.17.686-.23 1.12-.23h2.606l.24.466v-.466h1.918l.254.465v-.466h1.858v3.948H20.87l-.36-.6v.585h-2.353l-.256-.63h-.583l-.27.614h-1.213c-.48 0-.84-.104-1.08-.24v.24h-2.89v-.884c0-.12-.03-.12-.105-.135h-.105v1.036H6.067v-.48l-.21.48H4.69l-.202-.48v.465H2.235l-.256-.624H1.4l-.256.624H0V24h23.786v-7.108c-.27.135-.613.18-.973.18H21.09v-.255c-.21.165-.57.255-.914.255H14.71v-.9c0-.12-.018-.12-.12-.12h-.075v1.022h-1.8v-1.066c-.298.136-.643.15-.928.136h-.214v.915h-2.18l-.54-.617-.57.6H4.742v-3.93h3.61l.518.602.554-.6h2.412c.28 0 .74.03.942.225v-.24h2.177c.202 0 .644.045.903.225v-.24h3.265v.24c.163-.164.508-.24.803-.24h1.89v.24c.194-.15.464-.24.84-.24h1.176V0H0zM21.156 14.955c.004.005.006.012.01.016.01.01.024.01.032.02l-.042-.035zM23.828 13.082h.065v.555h-.065zM23.865 15.03v-.005c-.03-.025-.046-.048-.075-.07-.15-.153-.39-.215-.764-.225l-.36-.012c-.12 0-.194-.007-.27-.03-.09-.03-.15-.105-.15-.21 0-.09.03-.16.09-.204.076-.045.15-.05.27-.05h1.223v-.588h-1.283c-.69 0-.96.437-.96.84 0 .9.78.855 1.41.87.104 0 .18.015.224.06.046.03.076.106.076.18 0 .07-.034.138-.09.18-.045.056-.136.07-.27.07h-1.288v.605h1.287c.42 0 .734-.118.9-.36h.03c.09-.134.135-.3.135-.523 0-.24-.045-.39-.135-.526zM18.597 14.208v-.583h-2.235V16.458h2.235v-.585h-1.57v-.57h1.533v-.584h-1.532v-.51M13.51 8.787h.685V11.6h-.684zM13.126 9.543l-.007.006c0-.314-.13-.5-.34-.624-.217-.125-.47-.135-.81-.135H10.43v2.82h.674v-1.034h.72c.24 0 .39.03.487.12.122.136.107.378.107.548v.354h.677v-.553c0-.25-.016-.375-.11-.516-.09-.107-.202-.19-.33-.237.172-.07.472-.3.472-.75zm-.855.396h-.015c-.09.054-.195.056-.33.056H11.1v-.623h.825c.12 0 .24.004.33.05.09.04.15.128.15.25s-.047.22-.134.266zM15.92 9.373h.632v-.6h-.644c-.464 0-.804.105-1.02.33-.286.3-.362.69-.362 1.11 0 .512.123.833.36 1.074.232.238.645.31.97.31h.78l.255-.627h1.39l.262.627h1.36v-2.11l1.272 2.11h.95l.002.002V8.786h-.684v1.963l-1.18-1.96h-1.02V11.4L18.11 8.744h-1.004l-.943 2.22h-.3c-.177 0-.362-.03-.468-.134-.125-.15-.186-.36-.186-.662 0-.285.08-.51.194-.63.133-.135.272-.165.516-.165zm1.668-.108l.464 1.118v.002h-.93l.466-1.12zM2.38 10.97l.254.628H4V9.393l.972 2.205h.584l.973-2.202.015 2.202h.69v-2.81H6.118l-.807 1.904-.876-1.905H3.343v2.663L2.205 8.787h-.997L.01 11.597h.72l.26-.626h1.39zm-.688-1.705l.46 1.118-.003.002h-.915l.457-1.12zM11.856 13.62H9.714l-.85.923-.825-.922H5.346v2.82H8l.855-.932.824.93h1.302v-.94h.838c.6 0 1.17-.164 1.17-.945l-.006-.003c0-.78-.598-.93-1.128-.93zM7.67 15.853l-.014-.002H6.02v-.557h1.47v-.574H6.02v-.51H7.7l.733.82-.764.824zm2.642.33l-1.03-1.147 1.03-1.108v2.253zm1.553-1.258h-.885v-.717h.885c.24 0 .42.098.42.344 0 .243-.15.372-.42.372zM9.967 9.373v-.586H7.73V11.6h2.237v-.58H8.4v-.564h1.527V9.88H8.4v-.507\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://commons.wikimedia.org/wiki/File:American_Express_logo.svg\",hex:\"2E77BC\"},Anaconda:{title:\"Anaconda\",slug:\"anaconda\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Anaconda icon</title><path d=\"M4.37 18.34c-.9-.09-1.8-.26-2.68-.5l-.08-.02.02-.08c.26-.85.59-1.68.98-2.47l.04-.08.07.04c.59.33 1.22.63 1.85.89l.06.02-.01.06c-.1.67-.15 1.36-.17 2.05v.09h-.08zM6.31 6.23v-.02c-.52.01-1.04.04-1.55.1.06.53.16 1.05.27 1.56.36-.6.79-1.15 1.28-1.64zM4.46 18.95v-.07l-.07-.01c-.76-.07-1.53-.2-2.29-.38l-.2-.05.11.18c.69 1.04 1.53 1.96 2.5 2.74l.16.13-.03-.2c-.11-.8-.17-1.59-.18-2.34zM8.17.7c-.93.32-1.81.75-2.62 1.28.61.11 1.22.25 1.81.43.24-.59.51-1.15.81-1.71zm3.87-.64c-.46 0-.91.03-1.36.08.63.44 1.24.92 1.81 1.45l.48.44-.47.45c-.39.37-.76.77-1.12 1.2l-.02.02s-.07.08-.18.21c.28-.03.57-.05.86-.05 4.49 0 8.14 3.64 8.14 8.14 0 4.49-3.64 8.14-8.14 8.14-1.56 0-3.02-.44-4.25-1.2-.61.07-1.22.1-1.84.1-.29 0-.57-.01-.86-.02.02.93.11 1.88.26 2.88 1.91 1.29 4.21 2.05 6.69 2.05 6.6 0 11.94-5.35 11.94-11.94 0-6.6-5.34-11.95-11.94-11.95zm-1.58 2.82c.24-.28.48-.55.73-.82-.56-.48-1.15-.91-1.77-1.3-.38.64-.71 1.31-.99 1.99.54.2 1.06.43 1.58.68.23-.31.4-.49.45-.55zM2.35 9.7l.05.07.07-.05c.55-.4 1.13-.77 1.73-1.1l.06-.02-.02-.07c-.18-.67-.32-1.37-.41-2.08l-.01-.08-.08.02c-.88.16-1.76.4-2.6.7l-.08.03.03.08c.35.86.77 1.7 1.26 2.5zm-.14 1.15l-.07.05C1.5 11.42.89 12 .33 12.62l-.06.06.06.05c.62.54 1.29 1.04 1.99 1.48l.07.05.04-.07c.31-.56.67-1.11 1.05-1.64l.04-.05-.04-.05c-.44-.49-.85-1-1.23-1.54l-.04-.06zm4.69 7.53l.21-.01-.16-.13c-.64-.52-1.19-1.13-1.64-1.83v-.02l-.13-.06-.02.11c-.08.6-.13 1.22-.14 1.86v.08h.08c.28.02.57.02.85.02.31.01.63 0 .95-.02zM6.5 5.19c.13-.59.29-1.17.48-1.74-.75-.21-1.52-.37-2.29-.48-.07.78-.08 1.56-.03 2.33.61-.07 1.23-.1 1.84-.11zm1.15-.04c.52-.33 1.08-.61 1.67-.82-.42-.19-.84-.37-1.28-.53-.15.44-.28.9-.39 1.35zm-5.55 9.7l-.06-.04c-.62-.39-1.21-.82-1.77-1.28l-.16-.13.03.21c.15 1.15.47 2.26.94 3.32l.08.19.07-.19c.23-.68.52-1.35.84-1.99l.03-.09zM3.63 3.52c-.71.71-1.34 1.5-1.85 2.37.62-.18 1.24-.33 1.87-.44-.04-.64-.05-1.28-.02-1.93zm.36 8.38l.01-.21c.03-.73.15-1.44.37-2.13l.06-.2-.18.1c-.47.27-.93.57-1.37.89l-.07.05.05.07c.31.44.64.87.99 1.28l.14.15zm.08 1.22l-.03-.2-.12.18c-.33.47-.64.95-.92 1.45l-.04.07.07.04c.5.28 1.03.54 1.56.77l.19.08-.09-.19c-.31-.7-.52-1.44-.62-2.2zm-2.33-2.85l.06-.05-.04-.06c-.37-.6-.71-1.23-1.01-1.87l-.09-.18-.06.2C.25 9.39.06 10.52.03 11.66l-.01.21.15-.15c.49-.52 1.02-1.02 1.57-1.45z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.anaconda.com/media-kit/\",hex:\"42B029\"},Analogue:{title:\"Analogue\",slug:\"analogue\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Analogue icon</title><path d=\"M5.468 12.804a5.145 5.145 0 10-.644 10.27 5.145 5.145 0 00.644-10.27zm17.841 2.562L16.45 3.484a5.146 5.146 0 00-8.912 5.15l6.86 11.878a5.148 5.148 0 007.031 1.885 5.146 5.146 0 001.881-7.031z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.analogue.co/\",hex:\"1A1A1A\"},Anchor:{title:\"Anchor\",slug:\"anchor\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Anchor icon</title><path d=\"M12.335 12.606c-.171.682-.586 1.261-1.139 1.564l-.428.234.78 1.32.41-.226a3.743 3.743 0 001.435-1.44 4.404 4.404 0 00.565-2.1v-.016a4.403 4.403 0 00-.565-2.1 3.744 3.744 0 00-1.434-1.44l-.41-.225-.78 1.32.427.234c.571.312.995.92 1.155 1.632H7.244a1.4 1.4 0 00-1.24-.743c-.77 0-1.396.617-1.396 1.377 0 .759.626 1.377 1.396 1.377a1.4 1.4 0 001.252-.768zM12 24C6.392 24 1.846 18.627 1.846 12S6.392 0 12 0s10.154 5.373 10.154 12S17.608 24 12 24zm5.591-11.164c-.29 2.825-1.867 5.206-4.06 6.377l.829 1.368c2.846-1.526 4.83-4.767 4.896-8.538-.066-3.771-2.05-7.012-4.896-8.539l-.83 1.37c2.194 1.17 3.771 3.55 4.061 6.375l.023.794zm-4.652 5.336l.194-.107c.995-.547 1.841-1.398 2.446-2.46a7.645 7.645 0 00.98-3.648v-.008a7.645 7.645 0 00-.98-3.647c-.605-1.063-1.451-1.914-2.446-2.46l-.194-.108-.79 1.336.203.11a4.892 4.892 0 011.772 1.702c.467.744.763 1.62.856 2.535l.015.536-.015.535a5.905 5.905 0 01-.856 2.536 4.89 4.89 0 01-1.772 1.701l-.203.111z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://anchor.fm/\",hex:\"8940FA\"},Android:{title:\"Android\",slug:\"android\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Android icon</title><path d=\"M24 19H0a13.6 13.6 0 0 1 2.21-6.07A11.2 11.2 0 0 1 5.87 9.4l.41-.23-2.02-3.41a.51.51 0 0 1 .17-.7.5.5 0 0 1 .69.18l2.08 3.5a12.62 12.62 0 0 1 4.84-.9 12.2 12.2 0 0 1 4.75.9l2.07-3.5a.5.5 0 0 1 .7-.17.51.51 0 0 1 .16.7L17.7 9.19l.5.28a11.38 11.38 0 0 1 3.63 3.62A14.48 14.48 0 0 1 24 19zm-7.5-4.48a1 1 0 0 0 1 1 1 1 0 0 0 1-1 1 1 0 0 0-1-1 1 1 0 0 0-1 1zm-11 0a1 1 0 0 0 1 1 1 1 0 0 0 1-1 1 1 0 0 0-1-1 1 1 0 0 0-1 1z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://developer.android.com/distribute/marketing-tools/brand-guidelines\",hex:\"3DDC84\"},AngelList:{title:\"AngelList\",slug:\"angellist\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>AngelList icon</title><path d=\"M16.465 9.954c.735-2 1.31-3.65 1.723-4.954.41-1.3.618-2.1.618-2.4 0-.315-.07-.564-.21-.738-.135-.174-.324-.264-.567-.264-.31 0-.63.255-.94.765-.32.51-.67 1.334-1.06 2.467l-1.65 4.76 2.08.362h-.01v.002zm-2.193 4.435c-.474-.03-.923-.08-1.344-.15-.42-.08-.83-.19-1.216-.33.177.35.335.7.472 1.05.138.35.25.69.34 1.04.26-.33.54-.63.83-.9.292-.27.6-.51.915-.72zm-1.862-5l-1.78-5.14c-.464-1.31-.82-2.16-1.075-2.57-.25-.4-.525-.6-.822-.6-.23 0-.417.08-.56.26-.144.18-.214.41-.214.7 0 .5.19 1.38.57 2.64.38 1.25.96 2.89 1.73 4.93.06-.12.16-.21.28-.26.12-.05.28-.08.49-.08.06 0 .19.01.39.01.19.02.52.04.97.09zm-1.618 7.96c.188 0 .36-.09.51-.26.15-.18.234-.36.234-.55 0-.21-.15-.7-.452-1.46-.3-.76-.68-1.51-1.13-2.25-.33-.55-.655-.97-.97-1.25-.324-.28-.625-.42-.91-.42-.23 0-.484.14-.767.44-.28.29-.42.56-.42.81 0 .26.14.66.413 1.18.275.53.645 1.09 1.104 1.68.485.65.94 1.15 1.37 1.51.428.36.77.54 1.02.54h-.002zm-4.945-.4c.156.19.37.46.646.82.723 1 1.395 1.5 2.01 1.5.21 0 .397-.07.563-.2.164-.14.247-.27.247-.42 0-.17-.11-.44-.33-.83-.222-.39-.524-.82-.907-1.3-.44-.56-.805-.97-1.098-1.23-.288-.26-.525-.39-.697-.39-.38 0-.74.21-1.06.62-.32.4-.48.9-.48 1.46 0 .45.12.95.35 1.51.23.55.55 1.11.98 1.67.65.87 1.46 1.53 2.42 2 .96.46 2.03.69 3.19.69 2.14 0 3.94-.8 5.38-2.4 1.45-1.6 2.17-3.6 2.17-6.01 0-.74-.05-1.33-.16-1.76-.11-.43-.29-.75-.54-.95-.45-.38-1.33-.71-2.63-1.01-1.3-.3-2.66-.45-4.08-.45-.39 0-.68.07-.84.2-.16.13-.24.36-.24.673 0 .75.42 1.29 1.26 1.626.84.34 2.19.51 4.06.51h.676c.15 0 .28.06.37.174.09.11.15.28.18.52-.19.17-.57.37-1.154.6-.59.22-1.03.45-1.34.665-.66.484-1.19 1.06-1.59 1.724-.4.66-.6 1.29-.6 1.883 0 .36.086.8.258 1.31.17.51.26.823.26.95v.11l-.03.15c-.48-.03-.86-.313-1.14-.85-.287-.53-.42-1.24-.42-2.13v-.15c-.09.075-.176.135-.26.165-.086.034-.178.05-.27.05-.1 0-.198-.006-.29-.02-.09-.016-.18-.04-.29-.075.03.12.057.24.076.353.01.12.02.21.02.27 0 .406-.16.76-.48 1.05-.32.287-.7.43-1.14.43-.69 0-1.397-.34-2.11-1.01-.715-.674-1.07-1.34-1.07-1.985 0-.12.015-.23.04-.323s.075-.17.14-.24zm11.807-6.73c.985.18 1.685.6 2.09 1.25.41.64.61 1.66.61 3.06 0 2.77-.828 5.03-2.492 6.79-1.667 1.76-3.797 2.65-6.387 2.65-1.023 0-2.016-.19-2.976-.56-.97-.37-1.79-.89-2.49-1.54-.79-.73-1.39-1.49-1.78-2.3-.4-.81-.6-1.64-.6-2.48 0-.95.2-1.68.6-2.19.4-.52 1.05-.87 1.93-1.06-.17-.39-.29-.71-.36-.98-.08-.27-.12-.47-.12-.61 0-.5.26-1.01.78-1.52.52-.52 1.01-.78 1.47-.78.19 0 .4.03.62.11.22.07.47.19.75.35-.81-2.35-1.43-4.2-1.81-5.5-.39-1.31-.58-2.2-.58-2.7 0-.68.17-1.23.52-1.63.36-.4.84-.6 1.44-.6 1.03 0 2.34 2.31 3.93 6.923.28.79.48 1.4.63 1.83l.51-1.453c1.59-4.55 2.95-6.83 4.1-6.83.56 0 1.01.19 1.34.57.33.383.5.887.5 1.523 0 .48-.19 1.36-.56 2.65-.367 1.28-.92 2.96-1.67 5.04\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://angel.co/logo\",hex:\"000000\"},Angular:{title:\"Angular\",slug:\"angular\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Angular icon</title><path d=\"M9.93 12.645h4.134L11.996 7.74M11.996.009L.686 3.988l1.725 14.76 9.585 5.243 9.588-5.238L23.308 3.99 11.996.01zm7.058 18.297h-2.636l-1.42-3.501H8.995l-1.42 3.501H4.937l7.06-15.648 7.057 15.648z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://angular.io/assets/images/logos/angular/angular_solidBlack.svg\",hex:\"DD0031\"},\"Angular Universal\":{title:\"Angular Universal\",slug:\"angularuniversal\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Angular Universal icon</title><path d=\"M15.6 11.28v1.44a.48.48 0 0 1-.48.48H8.88a.48.48 0 0 1-.48-.48v-1.44a.48.48 0 0 1 .48-.48h6.24a.48.48 0 0 1 .48.48zM12 15.6a1.2 1.2 0 1 0 0 2.4 1.2 1.2 0 0 0 0-2.4zm3.12-8.4H8.88a.48.48 0 0 0-.48.48v1.44c0 .265.215.48.48.48h6.24a.48.48 0 0 0 .48-.48V7.68a.48.48 0 0 0-.48-.48zm8.04-3.204l-1.716 14.736L11.976 24 2.52 18.732.84 3.996 11.976 0 23.16 3.996zM16.8 6.24a1.44 1.44 0 0 0-1.44-1.44H8.64A1.44 1.44 0 0 0 7.2 6.24v11.52c0 .795.645 1.44 1.44 1.44h6.72a1.44 1.44 0 0 0 1.44-1.44V6.24z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://angular.io/presskit\",hex:\"00ACC1\"},Ansible:{title:\"Ansible\",slug:\"ansible\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Ansible icon</title><path d=\"M10.617 11.473l4.686 3.695-3.102-7.662zM12 0C5.371 0 0 5.371 0 12s5.371 12 12 12 12-5.371 12-12S18.629 0 12 0zm5.797 17.305c-.011.471-.403.842-.875.83-.236 0-.416-.09-.664-.293l-6.19-5-2.079 5.203H6.191L11.438 5.44c.124-.314.427-.52.764-.506.326-.014.63.189.742.506l4.774 11.494c.045.111.08.234.08.348-.001.009-.001.009-.001.023z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.ansible.com/logos\",hex:\"EE0000\"},Apache:{title:\"Apache\",slug:\"apache\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Apache icon</title><path d=\"M15.826 0a.776.776 0 0 0-.404.114c-.376.222-1.002.851-1.748 1.763l-.156.192c-.198.246-.403.512-.614.793a38.775 38.775 0 0 0-2.016 2.971l-.022.036-.044.072a40.932 40.932 0 0 0-1.709 3.081 25.602 25.602 0 0 0-1.1 2.557c-.091.251-.174.493-.25.726-.062.199-.122.398-.178.596-.133.467-.248.934-.342 1.398l.001.002-.013.061a14 14 0 0 0-.233 1.692l-.005.059c-.28-.449-1.029-.886-1.028-.882.537.778.944 1.55 1.004 2.308-.287.059-.681-.026-1.136-.194.474.436.83.556.969.588-.436.027-.889.327-1.346.671.668-.273 1.208-.38 1.595-.293a131.873 131.873 0 0 0-1.843 5.688.535.535 0 0 0 .364-.354c.11-.369.837-2.786 1.977-5.964l.098-.273.028-.076c.12-.333.245-.673.374-1.02l.089-.237.002-.005-.604-1.193.604 1.192c.119-.317.24-.638.365-.963l.052-.136.053-.137.041-.104-.041.105-.053.136-.052.136c-.125.325-.246.646-.365.963l.106.208.094-.01.01-.028c.153-.417.304-.824.454-1.22l.005-.014a103.604 103.604 0 0 0-.458 1.234l-.01.028-.067.183c-.118.325-.237.655-.356.993l-.005.015-.051.143c-.08.228-.15.433-.309.899.263.12.474.436.674.794a1.44 1.44 0 0 0-.466-.989c1.296.058 2.413-.269 2.991-1.217.052-.085.099-.173.141-.268-.262.333-.588.474-1.2.439.902-.404 1.354-.791 1.754-1.433a6.71 6.71 0 0 0 .281-.503c-.789.81-1.702 1.04-2.665.865h-.002l-.041-.007c.863-.107 2.01-.752 2.752-1.548.342-.367.652-.8.939-1.306.214-.377.414-.795.605-1.258.167-.404.327-.842.482-1.317a2.65 2.65 0 0 1-.81.261 4.998 4.998 0 0 1-.138.022l.002-.001.003-.001c.045-.007.089-.013.133-.021.045-.008.09-.016.134-.026l-.133.024-.132.023c.802-.31 1.308-.907 1.676-1.637a2.877 2.877 0 0 1-.968.424 3.217 3.217 0 0 1-.171.031l-.043.006.001-.001.009-.001.032-.005a2.887 2.887 0 0 0 .157-.029l.014-.003-.016.003-.194.033c.278-.117.513-.247.717-.401a2.858 2.858 0 0 0 .411-.391c.08-.095.155-.198.225-.31l.064-.104.077-.152a9.024 9.024 0 0 0 .368-.851l.031-.088c.028-.085.052-.161.07-.227.027-.099.044-.178.053-.236a.731.731 0 0 1-.094.064c-.243.145-.66.277-.996.339l-.099.011-.001.001-2.267.249-.012.024-.077.158-.235.488-.044.093.044-.093c.079-.166.157-.329.235-.488l.077-.158c.004-.009.009-.017.012-.026l-.084.009-.067-.132a54.24 54.24 0 0 0-.378.763l-.204.424a72.02 72.02 0 0 0-1.092 2.406 102.271 102.271 0 0 0-1.081 2.603l.086-.216a99.75 99.75 0 0 1 .995-2.387 73.112 73.112 0 0 1 1.092-2.407l.204-.424c.118-.244.237-.485.358-.724l.02-.038c.191-.378.384-.75.579-1.116.208-.39.42-.771.633-1.141a33.1 33.1 0 0 1 .672-1.119l.04-.064c.224-.354.45-.695.677-1.021a16.736 16.736 0 0 1 1.522-1.899l-.058.062c-.16.176-.644.741-1.375 1.863.704-.035 1.785-.179 2.667-.33.262-1.47-.257-2.142-.257-2.142S16.418.007 15.83.001zm-1.648 7.507c.66-.304.956-.579 1.242-.976.076-.11.153-.224.229-.343.233-.363.461-.764.665-1.162.197-.384.371-.765.504-1.109a5.76 5.76 0 0 0 .2-.6c.041-.157.074-.307.099-.449-.883.15-1.964.295-2.668.329a29.873 29.873 0 0 0-.696 1.122c-.204.345-.422.723-.65 1.137a50.238 50.238 0 0 0-1.193 2.299l2.267-.249zm3.628-5.309v.066h.156v.439h.072v-.439h.157v-.066h-.384zm.463 0v.506h.066v-.401l.172.348h.046l.172-.348v.401h.066v-.506h-.087l-.174.353-.175-.353h-.087zm-4.008 5.301l-.102.016.001-.001.1-.016zm-.09.012l-.005.002.005-.002zm-2.74 1.242l-.106.227-.133.287a77.678 77.678 0 0 0-.921 2.085 93.883 93.883 0 0 0-.999 2.446c-.148.378-.298.765-.449 1.163l-.005.014a77.678 77.678 0 0 1 2.374-5.709l.133-.287.106-.226z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.apache.org/foundation/press/kit/\",hex:\"D22128\"},\"Apache Airflow\":{title:\"Apache Airflow\",slug:\"apacheairflow\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Apache Airflow icon</title><path d=\"M12.033 10.713c-.691 0-1.263.564-1.263 1.255 0 .69.572 1.262 1.263 1.262a1.258 1.258 0 000-2.517zm0 .797c.258 0 .457.2.457.458s-.2.458-.457.458c-.259 0-.458-.2-.458-.458s.199-.458.458-.458zM.65.001C.577.001.544.013.3.041.053.07-.027.364.03.673c.055.31.072.205.196.384.124.18 4.228 4.144 6.352 6.216l-3.625 3.72-.133.133-.007.008c-1.25 1.282-1.91 3.251-2.296 5.433C.13 18.748.03 21.161 0 23.35a.63.63 0 00.554.62.757.757 0 00.118 0 .608.608 0 00.384-.184h.007l6.209-6.37c4.021 3.721 4.12 5.08 9.294 6.067 2.182.386 4.595.487 6.784.517a.626.626 0 00.62-.546l.008-.008a.746.746 0 00-.008-.133.621.621 0 00-.177-.37v-.008l-6.378-6.208L21.047 13c.046-.043.089-.088.133-.133l.007-.008c1.25-1.281 1.918-3.244 2.304-5.426.385-2.182.479-4.595.509-6.783a.627.627 0 00-.546-.62L23.446.02a.668.668 0 00-.133.008.608.608 0 00-.369.178h-.007l-6.209 6.37-3.72-3.624-.133-.133-.008-.008C11.586 1.562 9.617.894 7.434.509 5.18.26 2.917.034.65 0zm.48.835c2.039.038 4.213.12 6.164.465 2.105.372 3.927 1.03 5.012 2.089h.008l.103.11c.023.023.049.053.074.082.002.003.005.004.007.008l.008.008.015.015c0 .002-.002.008 0 .008.002.003.005.004.007.008.128.176.354.52.42.664.049.101.093.208.134.325.179.519.268 1.166.206 1.985v.008c-.014.181-.038.37-.066.569-.014.095-.033.2-.052.31a10.753 10.753 0 01-.14.642c-.028.115-.056.232-.089.347v.008c-.13.468-.3.976-.51 1.52-.052.138-.103.272-.161.414-.046.111-.099.225-.148.34l-.258.051c-.875-1.655-1.831-2.8-2.688-3.455-.432-.33-.837-.54-1.225-.627h-.007c-.387-.084-.8-.027-1.07.251l.038.075.32-.239zm22.036.288c-.038 2.04-.12 4.218-.465 6.17-.372 2.105-1.031 3.928-2.09 5.013l-.11.103c-.03.026-.062.059-.096.088l-.015.016h-.007c-.174.126-.527.36-.672.428-.101.047-.21.1-.325.14h-.007c-.516.177-1.166.26-1.979.2-.183-.016-.375-.031-.576-.06l-.302-.052h-.008a10.905 10.905 0 01-.642-.14h-.007c-.117-.03-.234-.065-.347-.096a16.097 16.097 0 01-1.521-.502c-.136-.052-.279-.111-.421-.17a20.905 20.905 0 01-.317-.132c.009-.063-.079.096 0 0a.666.666 0 00-.052-.288c1.638-.87 2.78-1.814 3.433-2.665.331-.433.548-.844.635-1.233.087-.386.027-.806-.251-1.077l.007.008.11.351zM13.9 4.947l2.532 2.466.015.015.015.015c.038.038.078.11.03.332-.022.095-.146.264-.207.391-.082.166-.116.3-.274.502-.546.7-1.616 1.566-3.137 2.377.046-.107.09-.213.133-.317.06-.147.115-.294.17-.436.218-.568.4-1.103.538-1.602a11.804 11.804 0 00.244-1.063V7.62c.019-.107.043-.212.059-.324a8.97 8.97 0 00.067-.628c.05-.677-.07-1.196-.185-1.72zM7.774 7.51c1.592.72 2.634 2.424 3.277 3.617-.108-.047-.217-.089-.324-.133-.147-.06-.294-.115-.436-.17a17.265 17.265 0 00-1.595-.539H8.69c-.125-.034-.244-.067-.362-.096-.24-.059-.476-.106-.701-.148-.108-.018-.22-.034-.332-.051V9.98a10.394 10.394 0 00-.628-.067c-.68-.051-1.202.069-1.727.185l2.473-2.532.03-.03c.036-.039.11-.08.332-.03zm-1.167 3.203c.18.012.368.038.569.067h.007c.096.015.194.034.303.052.205.038.418.085.642.14l.177.044c.057.015.113.027.17.044h.007c.47.13.974.299 1.521.51.137.053.28.104.42.162.12.049.24.103.363.155l.014.266c-1.64.87-2.787 1.82-3.44 2.672-.332.433-.548.837-.635 1.225v.008c-.087.387-.027.8.251 1.07H6.97l-.188-.335-5.94 6.071c.04-2.037.114-4.208.458-6.156.372-2.105 1.031-3.928 2.09-5.012v-.008c.024-.027.053-.048.08-.074l.03-.03a1.788 1.788 0 01.089-.081h.007c.006-.004.01-.012.015-.016.171-.125.533-.367.68-.435a3.658 3.658 0 01.331-.133c.519-.18 1.166-.269 1.986-.207zm5.153.2c-.415.132-.698.42-.834.834l.44-.49zm.546.03l.18.323.146.095.405.313c-.148-.348-.372-.603-.73-.73zm-.288.517c.312 0 .554.242.554.553a.547.547 0 01-.554.554.547.547 0 01-.553-.554c0-.31.242-.554.554-.554zm-1.048.863c.14.363.381.61.746.746l-.241-.276-.203-.234zm2.06.038l-.282.116-.062.178-.284.327c.29-.142.498-.324.628-.62zm-.074.51c.106.045.213.096.318.14.147.06.292.115.435.17.566.217 1.098.394 1.595.53.128.039.253.067.369.097.24.059.476.114.701.155.107.019.22.034.332.051.216.03.426.058.628.074.68.052 1.202-.068 1.727-.184l-2.473 2.532-.015.015-.014.015c-.037.038-.115.074-.325.03h-.008c-.216-.05-.531-.204-.893-.487-.7-.547-1.567-1.618-2.377-3.137zm-1.83.088l-.134.317c-.06.147-.115.294-.17.436a17.065 17.065 0 00-.531 1.594c-.036.128-.067.251-.096.37-.06.24-.114.475-.155.7a12.379 12.379 0 00-.052.333 9.86 9.86 0 00-.073.628c-.052.68.068 1.202.184 1.727L7.567 16.59l-.015-.023-.015-.008v-.008c-.04-.04-.078-.101-.03-.317.002-.004 0-.002 0-.008.05-.216.206-.532.488-.893.546-.7 1.613-1.567 3.13-2.377zm1.04.258c.866 1.626 1.81 2.776 2.658 3.426.433.332.836.548 1.225.634h.008c.387.085.799.027 1.07-.25l-.035-.071-.304.27 6.09 5.942c-2.04-.04-4.22-.122-6.172-.467-2.105-.372-3.928-1.03-5.012-2.089h-.008l-.022-.023-.03-.03c-.008-.008-.013-.019-.022-.03l-.03-.03c-.023-.027-.053-.057-.08-.089v-.008c-.003-.004-.012-.01-.015-.015a6.316 6.316 0 01-.436-.679 3.49 3.49 0 01-.133-.332c-.18-.519-.269-1.166-.206-1.986.013-.18.037-.368.066-.568v-.008c.014-.094.033-.196.052-.303.037-.205.085-.419.14-.642v-.008l.044-.17.045-.17v-.008c.13-.47.298-.973.51-1.52.052-.137.111-.28.169-.42.047-.115.097-.231.148-.348l.28-.015z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/apache/airflow/tree/master/docs/img/logos\",hex:\"007A88\"},\"Apache Cordova\":{title:\"Apache Cordova\",slug:\"apachecordova\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Apache Cordova icon</title><path d=\"M18.545,0.545H5.455L0,9.273l2.182,14.182h3.886l-0.273-3.273h1.909l0.273,3.273 h8.045l0.273-3.273h1.909l-0.273,3.273h3.886L24,9.273L18.545,0.545z M18.545,18H5.455L4.364,9.273l2.182-4.364h3.506L9.818,6.545 h4.364l-0.234-1.636h3.506l2.182,4.364L18.545,18z M15.545,11.045c0.301,0,0.545,0.908,0.545,2.029 c0,1.121-0.244,2.029-0.545,2.029c-0.301,0-0.545-0.908-0.545-2.029C15,11.954,15.244,11.045,15.545,11.045z M8.659,11.215 c0.301,0,0.545,0.908,0.545,2.029c0,1.121-0.244,2.029-0.545,2.029c-0.301,0-0.545-0.908-0.545-2.029 C8.114,12.123,8.358,11.215,8.659,11.215z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://cordova.apache.org/artwork/\",hex:\"E8E8E8\"},\"Apache Flink\":{title:\"Apache Flink\",slug:\"apacheflink\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Apache Flink icon</title><path d=\"M8.302 23.976c-.58-.044-1.34-.187-1.979-.372a9.06 9.06 0 0 1-2.944-1.511c-.368-.285-1.153-1.07-1.473-1.473C.716 19.121.11 17.49.05 15.622a8.333 8.333 0 0 1 .328-2.602c.068-.229.071-.255.057-.53a4.173 4.173 0 0 1 .1-1.116c.061-.244.23-.61.34-.742l.068-.08-.01.434c-.012.622-.011.623.187.275A8.388 8.388 0 0 1 2.84 9.11c.194-.176.369-.338.388-.359.019-.021.09-.178.159-.349.207-.514.392-.796.593-.898.175-.09.334-.044.371.104a.856.856 0 0 1-.007.217.727.727 0 0 0-.013.16c.005 0 .157-.079.339-.175.65-.347 1.115-.546 2.094-.892.323-.115.628-.225.676-.246.276-.116.425-.506.398-1.039a1.446 1.446 0 0 0-.102-.505 4.148 4.148 0 0 0-.122-.317c-.05-.098-.043-.115.038-.092.233.067.512.292.687.555.102.154.273.522.274.592 0 .056.036.03.113-.084.307-.454.309-.97.004-1.488-.111-.19-.429-.503-.645-.637-.277-.17-.444-.22-.74-.217-.229.002-.25-.002-.317-.057-.083-.07-.13-.219-.109-.343.025-.142.266-.6.431-.82.195-.26.636-.684.917-.884.912-.648 2.056-1.04 3.386-1.16.32-.03.332-.032.398-.103.062-.066.082-.073.22-.073.133 0 .17.012.319.097.157.091.173.096.239.066.05-.022.132-.027.28-.017.169.01.22.007.264-.024.077-.054.171-.047.31.024.067.033.264.093.438.13.819.182 1.477.436 2.103.815.111.067.206.122.211.122.009 0-.003-.088-.032-.246L16.39.9l.152.09c.2.12.38.307.479.496.069.133.085.15.121.127.029-.017.064-.019.11-.003.054.019.093.075.2.293.074.149.142.277.15.286.01.01.084-.058.167-.148.176-.192.337-.3.55-.373.2-.067.32-.053.41.048.09.1.09.23-.004.427-.18.38-.26.728-.23.994l.017.137.108-.076c.1-.07.122-.076.305-.076.192 0 .4.058.4.112 0 .012-.051.083-.113.159-.184.226-.23.353-.227.626.003.251.014.308.177.868.059.205.128.473.152.595a.87.87 0 0 0 .06.222c.04 0 .313-.226.478-.394.099-.1.187-.182.195-.182.033 0 .091.19.117.376.03.22.007.432-.073.692-.048.156-.049.17-.012.247.061.128.07.266.028.444-.07.302-.199.51-.533.858l-.172.18-.028.24c-.016.133-.05.332-.076.442a.9.9 0 0 0-.035.214c.007.007.029-.002.049-.019.053-.044.216-.019.378.058.333.158.972.741 1.222 1.116l.135.201.215.054c.884.224 1.572.866 1.952 1.823.12.3.204.683.264 1.186.019.154.06.29.18.589.085.213.168.447.183.519.042.193.018.442-.06.626-.037.086-.087.23-.113.32-.091.323-.239.533-.487.693-.08.051-.204.11-.277.13-.137.037-.599.25-.6.277-.001.008.032.022.073.03.22.044.509.252.582.42.015.035.073.123.129.197.213.28.265.537.188.943l-.04.213.062.076c.22.271.409.622.478.892.098.379.096.747-.005 1.303l-.044.235.08.116c.154.223.184.436.106.737-.194.752-.766 1.31-1.563 1.522l-.156.041v.208c0 .16-.012.234-.05.317a.66.66 0 0 1-.32.319c-.224.099-.558-.007-.722-.23-.082-.11-.089-.113-.208-.113a.817.817 0 0 1-.226-.037c-.248-.087-.362-.257-.368-.547l-.004-.168-.156-.094a2.384 2.384 0 0 1-.563-.457l-.15-.165.078.155c.336.667-.045 1.39-.846 1.604-.164.045-.289.053-.992.07-1.085.026-9.019.022-9.366-.005zm13.506-.401c.101-.088.143-.312.08-.433-.058-.115-.14-.15-.384-.17-.277-.02-.354-.06-.354-.178 0-.153.025-.16.64-.168.597-.008.777-.037 1.038-.17.23-.116.522-.478.549-.682l.013-.095-.165.047c-.625.175-1.467.207-2.083.079-.665-.14-1.28-.52-1.497-.926l-.054-.101-.03.07a1.26 1.26 0 0 0-.03.334c-.002.247.003.275.073.42.145.305.46.601.842.793.2.101.205.105.192.178l-.042.242c-.037.212-.016.326.081.437a.516.516 0 0 0 .404.175c.094 0 .152.014.192.045.206.16.421.202.535.103zm-5.004-.184c.464-.067.614-.069.863-.014.51.113 1.036.023 1.267-.218.152-.158.198-.41.104-.565-.116-.19-.42-.32-.756-.32-.234 0-.355.034-.764.208a3.774 3.774 0 0 1-.377.144c-.174.035-.265-.062-.265-.279 0-.232.065-.308.56-.66.427-.3.681-.647.744-1.01.028-.169-.003-.402-.061-.458a1.582 1.582 0 0 0-.295-.107c-.83-.244-1.212-.561-1.573-1.308a5.485 5.485 0 0 1-.35-.909 4.378 4.378 0 0 0-.152-.435c-.27-.595-.927-1.133-1.683-1.377-.32-.104-.523-.14-1.033-.184a14.72 14.72 0 0 1-.564-.057l-.12-.018.168-.086c.206-.104.356-.153.576-.185.314-.047.528-.055.757-.03.922.104 1.617.578 2.108 1.438.182.32.313.647.44 1.102.147.526.28.792.534 1.06.41.435.959.63 1.769.63.178 0 .4-.012.492-.025.378-.053.77-.188 1.06-.363.318-.191.614-.542.71-.84.029-.09.064-.165.078-.165.014 0 .104.018.2.04.164.039.188.039.386 0 .318-.06.403-.054.484.032.122.13.275.154.45.07a.555.555 0 0 0 .178-.15c.058-.08.07-.118.064-.207-.007-.107-.01-.11-.193-.23a1.342 1.342 0 0 1-.186-.132c0-.007.045-.043.101-.08.077-.05.125-.064.192-.058.103.009.104-.004.005-.197a.832.832 0 0 0-.402-.396c-.337-.164-.719-.164-1.145 0-.256.1-.295.101-.47.024-.231-.102-.466-.138-.785-.12-.392.024-.651-.017-.75-.118l-.073-.073.315-.029c.49-.045.632-.088 1.066-.327.268-.148.428-.188.83-.211.58-.033.855-.132 1.01-.363.055-.082.083-.106.108-.09a.636.636 0 0 0 .778-.486c.016-.084.012-.089-.238-.31a2.533 2.533 0 0 1-.255-.241c0-.01.039-.05.085-.092.143-.125.245-.104.534.108.05.037.054.037.054-.005 0-.095-.059-.25-.228-.61-.199-.42-.215-.47-.253-.804-.12-1.03-.675-1.892-1.542-2.395a2.065 2.065 0 0 0-.212-.115c-.009 0-.05.071-.093.158a1.23 1.23 0 0 1-.168.252c-.075.078-.107.095-.182.095-.106 0-.18-.055-.18-.133 0-.03.032-.123.072-.207.12-.259.155-.44.12-.645-.08-.478-.53-1.016-1.092-1.31-.22-.114-.245-.11-.259.031-.015.162.02.49.077.71.026.102.117.346.202.541.218.5.284.72.285.94a.732.732 0 0 1-.039.271.83.83 0 0 1-.282.32c-.083.043-.175.045-.157.004.127-.29.169-.431.179-.609.014-.25-.02-.365-.234-.804-.214-.439-.274-.68-.261-1.042l.01-.254-.058.115a6.699 6.699 0 0 1-.249.409c-.305.472-.403.726-.403 1.044 0 .294.114.704.278 1 .032.058.054.11.048.117a.57.57 0 0 1-.145-.116c-.134-.126-.325-.452-.325-.554 0-.068-.044-.055-.24.07-.365.235-.628.473-.975.885-.506.602-1.196 1.05-2.04 1.328-.198.065-.845.238-1.437.386-1.62.402-2.188.602-2.937 1.034-1.484.854-2.26 2-2.413 3.565-.054.56.023 1.409.184 2.017.025.091-.13-.112-.227-.3-.174-.333-.285-.744-.34-1.26-.05-.461.005-1.38.112-1.872l.015-.07-.357.015c-.886.037-1.618.288-2.217.76a2.451 2.451 0 0 0-.255.225l-.06.072.015-.07c.028-.127.17-.404.285-.555.24-.317.723-.62 1.227-.771.132-.04.537-.139.9-.22.364-.08.678-.152.7-.158.02-.006.09-.108.154-.226.064-.118.18-.303.257-.41.077-.109.136-.201.131-.206a3.854 3.854 0 0 0-.391.05c-.21.033-.674.098-1.03.145-.719.095-1.124.17-1.5.278-1.16.335-1.83.983-2.179 2.11l-.09.292.047.137c.075.223.33.72.5.972.663.99 1.704 1.793 2.981 2.299.29.114.324.135.474.283.089.087.158.162.154.166-.018.019-.754-.174-1.072-.28a6.756 6.756 0 0 1-2.114-1.146 2.898 2.898 0 0 0-.443-.284 5.35 5.35 0 0 1-1.402-1.033 2.975 2.975 0 0 1-.487-.672l-.103-.192.147.135c.32.294.783.595 1.012.659.052.014.05.005-.044-.161a5.613 5.613 0 0 1-.364-.787 1.602 1.602 0 0 0-.282-.492c-.747-.971-1.293-1.946-1.674-2.99l-.117-.323-.02.106a5.454 5.454 0 0 0-.025.539l-.004.432.14.385c.145.396.665 1.798.71 1.915.014.036.02.066.015.066-.005 0-.091-.104-.19-.23-.229-.288-.484-.67-.53-.793l-.037-.094.014.084c.074.448.273 1.12.466 1.573.586 1.376 1.55 2.583 2.722 3.407 1.142.803 2.692 1.367 4.063 1.478.132.01 2.083.021 4.335.023 3.518.002 4.13-.002 4.347-.034zm1.685-6.667a2.756 2.756 0 0 1-.76-.276c-.461-.27-.788-.742-.82-1.184-.01-.155-.01-.156.023-.073.208.529.61.955 1.163 1.233.254.128.394.18.69.257l.264.068-.216-.002c-.119-.001-.274-.011-.344-.023zm2.631-2.4c-.241-.058-.51-.273-.584-.47a.743.743 0 0 1 .02-.479l.038-.07.017.096c.044.24.214.446.457.554.072.032.256.08.41.107.229.04.376.083.465.136.007.004.014-.104.017-.239.005-.237.004-.244-.035-.186-.083.122-.2.216-.271.216-.095 0-.513-.152-.628-.228-.143-.094-.188-.186-.188-.383 0-.14-.009-.176-.054-.224l-.054-.058.114-.104c.19-.172.305-.216.57-.216.257 0 .367.04.547.193.256.22.342.757.193 1.204l-.055.164-.444.004a4.386 4.386 0 0 1-.535-.017zm.29-.85c.085-.043.135-.137.132-.248-.002-.069-.022-.105-.089-.167-.14-.129-.328-.092-.41.08-.108.228.139.454.368.336zm-2.035 8.588a2.086 2.086 0 0 1-.256-.599c-.08-.356-.008-.927.152-1.203l.06-.106-.2.015a5.06 5.06 0 0 1-.316.016H18.7v.177c0 .354-.164.786-.422 1.108l-.134.168.245.017c.134.009.316.038.405.065.18.055.404.192.529.323.1.105.118.112.051.019zm3.292-.84a.807.807 0 0 0 .417-.375c.086-.175.179-.638.196-.976.011-.215.005-.32-.027-.468-.04-.187-.184-.519-.273-.631l-.045-.057-.118.084c-.26.186-.467.215-.73.1-.128-.055-.2-.07-.398-.078l-.243-.01-.08.14a2.15 2.15 0 0 1-1.013.922l-.184.084-.017.128c-.068.525.283.887 1.052 1.084.402.103.536.118.955.111.318-.005.392-.013.508-.059zm-19.311-3.72c.22-1.066 1.028-1.779 2.4-2.12.343-.085.907-.196 1.933-.382 1.346-.243 1.761-.372 2.257-.703l.3-.2-1.266-.007c-1.552-.009-1.755.01-2.36.21-.383.128-.759.296-1.798.808-.494.244-.903.439-.908.434-.009-.01.374-.345.57-.498.642-.506 1.693-1.09 2.365-1.315 1.148-.384 2.03-.458 3.891-.325l.89.063.347-.086c.34-.085.688-.151 1.344-.257a4.31 4.31 0 0 0 .334-.061c.005-.005-.011-.016-.036-.025a1.502 1.502 0 0 1-.364-.181.996.996 0 0 1-.15-.11c0-.005.31-.006.69-.002.69.008.692.008.934-.058 1.502-.406 2.734-1.512 3.392-3.045.137-.32.376-1.003.358-1.022-.007-.007-.087.033-.178.088-.23.142-.72.384-1.005.498a7.14 7.14 0 0 1-2.207.498l-.214.016-.17.16c-.6.565-1.503 1.102-2.328 1.386-.46.158-.746.223-2.226.504-.733.139-1.565.302-1.85.361-2.068.435-3.391.979-4.106 1.689-.243.24-.374.427-.516.73-.072.154-.15.274-.263.4a2.032 2.032 0 0 0-.422.802c-.093.372-.051.916.108 1.381.056.166.203.507.218.507a.79.79 0 0 0 .036-.138zm-.82-.868l-.025-.366-.26-.39a21.757 21.757 0 0 1-.468-.737c-.19-.319-.63-1.166-.753-1.452l-.051-.12.013.096c.026.182.15.674.237.943.193.6.513 1.261.86 1.783.157.235.453.628.464.617a3.887 3.887 0 0 0-.016-.374zm-.01-1.4c-.076-.396-.04-.932.086-1.249.053-.135.163-.356.176-.356.005 0 .044.095.086.21.076.212.18.415.211.414.01 0 .059-.071.11-.158.05-.086.16-.248.244-.36l.154-.203-.095-.06c-.306-.193-.585-.636-.705-1.117-.117-.475-.153-1.2-.088-1.794.018-.162.028-.3.022-.306-.017-.016-.35.399-.558.692a7.86 7.86 0 0 0-.865 1.589l-.106.264.104.294a9.417 9.417 0 0 0 1.255 2.35 1.269 1.269 0 0 0-.03-.21zm1.469-1.875c-.07-.29-.1-.672-.1-1.351 0-.653.005-.75.056-1.033.067-.368.191-.793.304-1.038.083-.178.323-.592.337-.578.004.004-.023.237-.06.517-.108.806-.13 1.103-.113 1.568.019.533.114 1.2.172 1.2.023 0 .03-.113.028-.498a5.641 5.641 0 0 1 .24-1.76c.2-.698.622-1.618 1.01-2.196a.872.872 0 0 0 .08-.135c0-.008-.063-.005-.139.006-.922.141-1.671.76-2.045 1.69l-.093.23.01-.163c.032-.469.125-1.128.19-1.345.008-.024-.015.01-.05.074-.277.512-.54 1.976-.539 3.004 0 .753.134 1.297.406 1.658.128.17.336.271.306.15zm1.274-.919c.212-.104.503-.187 1.772-.507.555-.14 1.138-.296 1.297-.349a4.045 4.045 0 0 0 1.568-.944c.462-.444.617-.68.763-1.162.067-.223.067-.224.11-.168.185.245.182.832-.005 1.2-.026.05-.038.093-.027.093.05 0 .315-.196.426-.315.291-.311.426-.595.66-1.39a3.77 3.77 0 0 1 .12-.368c.021-.024.108.176.16.373.028.104.04.24.04.44-.003.329-.063.58-.214.879l-.086.17.128-.069c.31-.166.875-.858 1.116-1.367a1.83 1.83 0 0 0 .21-.887c.002-.425-.087-.704-.344-1.075-.336-.485-1.093-1.05-1.755-1.311-.102-.04-.168-.091-.284-.22-.083-.092-.14-.167-.126-.167.03 0 .472.12.77.209.705.21 1.258.52 1.684.942.493.488.727 1.001.724 1.586-.003.518-.185.988-.586 1.519-.078.102-.14.19-.14.197 0 .02.384-.152.624-.278.303-.16.792-.49.98-.658.261-.237.61-.82.76-1.272.145-.441.169-.936.063-1.345-.093-.361-.33-.777-.625-1.099l-.127-.138h.122c.066 0 .127-.01.134-.022.03-.048-.04-.15-.148-.219-.186-.118-.263-.128-.606-.085-.385.049-.999.05-1.296.001-.257-.042-.543-.132-.681-.214l-.094-.056.873-.012c.665-.01.921-.022 1.075-.052.223-.043.38-.103.432-.167.03-.036.023-.051-.06-.138-.268-.277-.767-.62-1.27-.875a6.067 6.067 0 0 0-2.787-.659c-.387 0-.86.04-1.068.089l-.06.014.072-.077c.094-.1.408-.254.64-.312.41-.104.979-.14 1.533-.1.774.058 1.33.2 2.077.532.158.07.308.127.333.125.06-.005.134-.074.171-.162l.031-.072.075.161c.041.09.075.173.075.188 0 .059.044-.007.072-.11a.347.347 0 0 1 .052-.121c.024-.016.087.125.166.37l.056.173.124-.123c.147-.145.151-.14.172.174l.013.208.11-.069c.062-.038.118-.06.126-.052.008.01.038.093.068.185.087.27.205.494.342.652.07.081.166.219.212.306.046.087.094.155.105.152.038-.012.204-.307.284-.502a.733.733 0 0 1 .094-.187c.033 0 .052.267.04.567a2.001 2.001 0 0 0 0 .297.97.97 0 0 0 .125-.084.692.692 0 0 1 .133-.084c.051 0-.061.75-.145.967-.032.08.035.04.191-.116.087-.086.158-.143.158-.126 0 .061-.141.586-.192.716a3.69 3.69 0 0 1-.156.324 2.98 2.98 0 0 0-.237.547l-.017.067.117-.08c.128-.088.19-.115.893-.391.621-.244.971-.413 1.112-.539.15-.134.233-.297.233-.46v-.124l-.069.094c-.132.181-.446.44-.736.61l-.096.056.075-.082c.318-.35.536-.836.537-1.202 0-.132-.034-.324-.076-.427-.031-.075-.032-.073-.21.363-.205.504-.4.908-.531 1.102-.194.286-.483.544-.658.588-.06.015-.064.012-.042-.03.041-.076.097-.321.122-.536.014-.112.03-.669.038-1.237.013-1.012.03-1.281.093-1.551.031-.133.031-.136-.072-.408a5.899 5.899 0 0 0-.168-.402c-.067-.134-.215-.34-.244-.34-.01 0-.07.12-.137.267l-.12.267-.012-.225c-.01-.18-.022-.24-.064-.298a1.697 1.697 0 0 0-.437-.385 5.05 5.05 0 0 0-.721-.36c-.057-.017-.057-.016-.04.112.009.07.023.155.03.186.014.055.01.057-.077.04a.728.728 0 0 1-.407-.234c-.061-.066-.117-.115-.124-.108a.939.939 0 0 0 .06.224c.038.117.066.218.06.224-.016.016-.182-.048-.254-.1a1.152 1.152 0 0 1-.187-.247 1.473 1.473 0 0 0-.22-.287c-.156-.133-.228-.15-.97-.227a1.392 1.392 0 0 1-.449-.11c-.036-.015-.034 0 .016.114.032.072.066.17.074.216l.016.084-.104-.02c-.16-.03-.355-.108-.534-.216-.158-.096-.169-.098-.451-.116a3.625 3.625 0 0 0-.98.065l-.18.044.18.02c.24.025.45.092.577.185.103.074.189.16.19.191 0 .008-.19.02-.425.027-.676.018-1.102.125-1.701.425-.3.15-1.124.682-1.328.856-.12.103-.339.392-.34.447 0 .03.046.054.175.09.97.279 1.577.984 1.697 1.97.087.709.074 1.148-.045 1.62-.183.725-.656 1.424-1.186 1.753-.195.121-.6.277-.721.278h-.068l.124-.136c.29-.317.5-.72.642-1.233.079-.285.087-.586.02-.812-.048-.163-.063-.165-.11-.017a2.59 2.59 0 0 1-.255.536c-.05.077-.387.432-.766.81-.862.856-1.223 1.301-1.56 1.919a5.181 5.181 0 0 0-.54 1.635c-.05.396-.037 1.068.021 1.068.01 0 .094-.037.188-.084zm11.427-3.6c.621-.209 1.103-.434 1.51-.703.294-.194.681-.575.9-.884.214-.304.525-.963.477-1.012-.027-.026-.45.134-.592.224-.153.098-.245.172-.698.561-.446.383-.535.448-.763.557-.238.115-.38.126-.532.04a.33.33 0 0 1-.098-.068c0-.007.044-.04.096-.072.104-.065.304-.258.285-.277a2.006 2.006 0 0 0-.31.158c-.812.463-1.238.85-1.308 1.192-.02.098.005.1.263.016.628-.205 1.372-.596 2.308-1.213.272-.179.406-.252.528-.287a.664.664 0 0 1 .174-.036c.03.03-.27.375-.513.592-.608.542-1.16.908-1.798 1.189-.16.07-.279.128-.265.128.014 0 .165-.046.336-.104zm.89-3.788c.256-.385.336-.674.37-1.33.032-.619.098-.988.265-1.47.04-.114.067-.21.062-.216-.025-.025-.266.291-.35.46-.24.487-.428 1.344-.517 2.36-.02.222-.036.413-.036.425 0 .042.1-.07.206-.23z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://flink.apache.org/material.html\",hex:\"E6526F\"},\"Apache Kafka\":{title:\"Apache Kafka\",slug:\"apachekafka\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Apache Kafka icon</title><path d=\"M16.262,13.293c-0.935,0-1.772,0.414-2.346,1.066l-1.47-1.041c0.156-0.43,0.246-0.891,0.246-1.374 c0-0.475-0.086-0.928-0.237-1.352l1.467-1.03c0.574,0.649,1.409,1.06,2.341,1.06c1.725,0,3.129-1.403,3.129-3.129 s-1.404-3.129-3.129-3.129s-3.129,1.403-3.129,3.129c0,0.309,0.047,0.607,0.13,0.889l-1.468,1.03 C11.183,8.653,10.3,8.121,9.294,7.959V6.19c1.417-0.298,2.485-1.557,2.485-3.061C11.779,1.403,10.375,0,8.65,0 S5.522,1.403,5.522,3.129c0,1.484,1.04,2.728,2.429,3.047v1.792c-1.895,0.333-3.341,1.987-3.341,3.976 c0,1.999,1.46,3.659,3.37,3.981v1.892c-1.403,0.308-2.457,1.56-2.457,3.054C5.522,22.597,6.925,24,8.65,24s3.129-1.403,3.129-3.129 c0-1.495-1.054-2.746-2.457-3.054v-1.892c0.966-0.163,1.84-0.671,2.46-1.431l1.48,1.048c-0.082,0.279-0.128,0.574-0.128,0.88 c0,1.725,1.404,3.129,3.129,3.129s3.129-1.403,3.129-3.129S17.987,13.293,16.262,13.293z M16.262,5.977 c0.837,0,1.517,0.681,1.517,1.517s-0.68,1.517-1.517,1.517c-0.836,0-1.517-0.681-1.517-1.517S15.426,5.977,16.262,5.977z M7.133,3.129c0-0.836,0.68-1.517,1.517-1.517s1.517,0.681,1.517,1.517S9.487,4.646,8.65,4.646S7.133,3.965,7.133,3.129z M10.167,20.871c0,0.836-0.68,1.517-1.517,1.517s-1.517-0.681-1.517-1.517s0.68-1.517,1.517-1.517S10.167,20.035,10.167,20.871z M8.65,14.06c-1.167,0-2.116-0.949-2.116-2.116c0-1.167,0.949-2.116,2.116-2.116c1.167,0,2.116,0.949,2.116,2.116 C10.766,13.111,9.817,14.06,8.65,14.06z M16.262,17.939c-0.837,0-1.517-0.681-1.517-1.517c0-0.836,0.68-1.517,1.517-1.517 s1.517,0.681,1.517,1.517C17.779,17.258,17.099,17.939,16.262,17.939z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://commons.wikimedia.org/wiki/File:Apache_kafka.svg\",hex:\"000000\"},\"Apache OpenOffice\":{title:\"Apache OpenOffice\",slug:\"apacheopenoffice\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Apache OpenOffice icon</title><path d=\"M12 0A12 12 0 000 12a12.44 12.44 0 00.25 2.46A13 13 0 013.56 14a12.45 12.45 0 015.15 1.1l.76-.5a12.64 12.64 0 0111.36-.88.19.19 0 01.11.17.16.16 0 01-.06.13.19.19 0 01-.13 0h-.25a8.7 8.7 0 00-.89 0 12.9 12.9 0 00-9.11 3.34 10.7 10.7 0 00-1.17 1.34l-.11.15a.16.16 0 01-.12 0 .17.17 0 01-.12 0A12 12 0 00.68 16 12 12 0 1012 0zm9.39 7.18h-.56a7.08 7.08 0 00-6.21 2.17c-.06.06-.12.07-.18 0a7 7 0 00-4.79-2.19 7.44 7.44 0 00-2 .09.13.13 0 01-.13-.13.14.14 0 010-.1 7.27 7.27 0 016.94.12 7.33 7.33 0 016.8-.26l.14.08a.11.11 0 01.07.11.16.16 0 010 .09.11.11 0 01-.08.02z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.openoffice.org/marketing/art/galleries/logos/index.html\",hex:\"0E85CD\"},\"Apache NetBeans IDE\":{title:\"Apache NetBeans IDE\",slug:\"apachenetbeanside\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Apache NetBeans IDE icon</title><path d=\"M11.988 0a.093.093 0 00-.004.002.093.093 0 00-.023.006.093.093 0 00-.004.002.093.093 0 00-.004.002L11.94.02 1.643 5.958a.093.093 0 00-.008.004l-.004.002a.093.093 0 00-.002.002.093.093 0 00-.004.002.093.093 0 00-.002.002.093.093 0 00-.004.002.093.093 0 00-.004.004.093.093 0 00-.003.004.093.093 0 00-.004.002.093.093 0 00-.002.004.093.093 0 00-.004.004.093.093 0 00-.002.004.093.093 0 00-.002.004.093.093 0 00-.004.004.093.093 0 00-.002.004.093.093 0 00-.002.004.093.093 0 000 .004.093.093 0 00-.002.006.093.093 0 00-.002.004.093.093 0 000 .004.093.093 0 00-.002.006.093.093 0 000 .004.093.093 0 000 .004.093.093 0 000 .006.093.093 0 000 .014v11.876a.093.093 0 000 .01v.004a.093.093 0 000 .006.093.093 0 000 .004.093.093 0 000 .004.093.093 0 00.002.004.093.093 0 000 .006.093.093 0 00.002.004.093.093 0 00.002.006.093.093 0 00.004.008.093.093 0 00.002.004.093.093 0 00.002.004.093.093 0 00.002.004.093.093 0 00.004.004.093.093 0 00.002.004.093.093 0 00.004.004.093.093 0 00.002.002.093.093 0 00.003.004.093.093 0 00.004.002.093.093 0 00.004.004.093.093 0 00.004.002.093.093 0 00.004.002.093.093 0 00.012.006l10.298 5.938.006.004a.093.093 0 00.002.002l.004.002a.093.093 0 00.014.008.093.093 0 00.003 0 .093.093 0 00.004.002.093.093 0 00.004.002.093.093 0 00.006 0 .093.093 0 00.004 0 .093.093 0 00.006.002.093.093 0 00.004 0 .093.093 0 00.017-.002.093.093 0 00.01-.002.093.093 0 00.014-.006.093.093 0 00.008-.004l.006-.004a.093.093 0 00.006-.004l10.29-5.934a.093.093 0 00.016-.008l.004-.002a.093.093 0 00.005-.002.093.093 0 00.002-.002.093.093 0 00.004-.004.093.093 0 00.004-.002.093.093 0 00.004-.004.093.093 0 00.004-.004.093.093 0 00.002-.002.093.093 0 00.004-.004.093.093 0 00.002-.004.093.093 0 00.002-.004.093.093 0 00.004-.004.093.093 0 00.002-.004.093.093 0 00.002-.006.093.093 0 000-.004.093.093 0 00.002-.004.093.093 0 00.002-.004.093.093 0 000-.006.093.093 0 00.002-.004.093.093 0 000-.004.093.093 0 000-.006.093.093 0 000-.004v-.006a.093.093 0 000-.008V6.06a.093.093 0 000-.012.093.093 0 000-.006.093.093 0 000-.004.093.093 0 000-.006.093.093 0 00-.002-.004.093.093 0 000-.004.093.093 0 00-.002-.004.093.093 0 000-.002.093.093 0 00-.002-.004.093.093 0 00-.004-.008.093.093 0 00-.002-.002.093.093 0 00-.002-.008.093.093 0 00-.002-.002.093.093 0 00-.004-.004.093.093 0 00-.002-.004.093.093 0 00-.004-.004.093.093 0 00-.002-.004.093.093 0 00-.004-.002.093.093 0 00-.004-.004.093.093 0 00-.004-.002.093.093 0 00-.003-.002.093.093 0 00-.016-.01L12.059.02a.093.093 0 00-.006-.004L12.05.014a.093.093 0 00-.008-.004.093.093 0 00-.004-.002.093.093 0 00-.01-.004.093.093 0 00-.004 0 .093.093 0 00-.004-.002.093.093 0 00-.005-.002.093.093 0 00-.004 0 .093.093 0 00-.006 0 .093.093 0 00-.004 0 .093.093 0 00-.004 0 .093.093 0 00-.01 0zm-.082.256v4.388L8.79 6.454 5.675 8.262 1.863 6.046zm.187 0l10.043 5.79-3.812 2.216-6.23-3.618zM12 4.804l6.139 3.565-6.14 3.519-6.138-3.519zM1.77 6.208l3.813 2.216V15.57L1.77 17.787zm20.46 0v11.579l-3.814-2.216V8.424zM5.769 8.53l6.137 3.519v7.084l-6.137-3.563zm12.462 0v7.04l-6.138 3.563V12.05zm-12.556 7.2l6.23 3.62v4.388l-10.044-5.79zm12.65 0l3.813 2.218-10.045 5.79V19.35l3.117-1.81z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://netbeans.apache.org/images/\",hex:\"1B6AC6\"},\"Apache RocketMQ\":{title:\"Apache RocketMQ\",slug:\"apacherocketmq\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Apache RocketMQ icon</title><path d=\"M12,24c-1.89-1.755-1.813-3.743-1.813-3.743h3.626C13.813,20.257,13.89,22.245,12,24z M12,1.988 c-1.595,2.106-4.693,6.893-4.693,12.291c0,1.562,0.293,2.87,0.589,3.793h8.208c0.296-0.923,0.589-2.231,0.589-3.793 C16.693,8.881,13.595,4.094,12,1.988z M17.95,14.279c0,3.556-1.363,5.903-1.363,5.903l-1.458-0.853H8.871l-1.458,0.853 c0,0-1.363-2.347-1.363-5.903C6.05,6.446,11.998,0.002,12,0C12.002,0.002,17.95,6.446,17.95,14.279z M18.773,16.614 c0,1.363-0.605,2.845-1.022,3.47h2.889l-0.32-1.965L18.773,16.614z M3.68,18.12l-0.32,1.965h2.889 c-0.418-0.625-1.022-2.107-1.022-3.47L3.68,18.12z M10.867,12.448c-0.154,0-0.279,0.125-0.279,0.279s0.125,0.279,0.279,0.279 s0.279-0.125,0.279-0.279S11.021,12.448,10.867,12.448z M11.762,12.448c-0.154,0-0.279,0.125-0.279,0.279s0.125,0.279,0.279,0.279 s0.279-0.125,0.279-0.279S11.916,12.448,11.762,12.448z M12.657,12.448c-0.154,0-0.279,0.125-0.279,0.279s0.125,0.279,0.279,0.279 s0.279-0.125,0.279-0.279S12.811,12.448,12.657,12.448z M15.715,15.98c0,0.799-0.647,1.446-1.446,1.446 c-0.799,0-1.446-0.647-1.446-1.446c0-0.262,0.071-0.507,0.192-0.719l-0.361-0.493c-0.273,0.12-0.575,0.187-0.892,0.187 c-0.551,0-1.054-0.201-1.443-0.532l-0.403,0.35c0.013,0.059,0.02,0.119,0.02,0.181c0,0.478-0.387,0.865-0.865,0.865 c-0.478,0-0.865-0.387-0.865-0.865s0.387-0.865,0.865-0.865c0.104,0,0.202,0.021,0.294,0.055l0.429-0.373 c-0.166-0.312-0.261-0.667-0.261-1.045c0-0.506,0.171-0.971,0.455-1.345l-0.451-0.49c-0.033,0.004-0.065,0.01-0.098,0.01 c-0.406,0-0.735-0.329-0.735-0.735c0-0.406,0.329-0.735,0.735-0.735c0.406,0,0.735,0.329,0.735,0.735 c0,0.055-0.007,0.109-0.019,0.161l0.455,0.495c0.337-0.204,0.73-0.324,1.153-0.324c0.398,0,0.771,0.106,1.094,0.288l0.385-0.385 c-0.04-0.116-0.063-0.241-0.063-0.371c0-0.632,0.512-1.144,1.144-1.144c0.632,0,1.144,0.512,1.144,1.144 c0,0.632-0.512,1.144-1.144,1.144c-0.13,0-0.255-0.023-0.371-0.063l-0.353,0.353c0.247,0.359,0.393,0.793,0.393,1.262 c0,0.551-0.201,1.054-0.531,1.442l0.329,0.449c0.151-0.053,0.312-0.084,0.481-0.084C15.068,14.534,15.715,15.182,15.715,15.98z M11.762,14.481c0.969,0,1.754-0.785,1.754-1.754c0-0.969-0.785-1.754-1.754-1.754c-0.969,0-1.754,0.785-1.754,1.754 C10.008,13.695,10.793,14.481,11.762,14.481z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://rocketmq.apache.org/\",hex:\"D77310\"},\"Apache Spark\":{title:\"Apache Spark\",slug:\"apachespark\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Apache Spark icon</title><path d=\"M10.812 0c-.425.013-.845.215-1.196.605a3.593 3.593 0 00-.493.722c-.355.667-.425 1.415-.556 2.143a551.9 551.9 0 00-.726 4.087c-.027.16-.096.227-.244.273C5.83 8.386 4.06 8.94 2.3 9.514c-.387.125-.773.289-1.114.506-1.042.665-1.196 1.753-.415 2.71.346.422.79.715 1.284.936 1.1.49 2.202.976 3.3 1.47.019.01.036.013.053.019h-.004l1.306.535c0 .023.002.045 0 .073-.2 2.03-.39 4.063-.58 6.095-.04.419-.012.831.134 1.23.317.87 1.065 1.148 1.881.701.372-.204.666-.497.937-.818 1.372-1.623 2.746-3.244 4.113-4.872.111-.133.205-.15.363-.098.349.117.697.231 1.045.347h.001c.02.012.045.02.073.03l.142.042c1.248.416 2.68.775 3.929 1.19.4.132.622.164 1.045.098.311-.048.592-.062.828-.236.602-.33.995-.957.988-1.682-.005-.427-.154-.813-.35-1.186-.82-1.556-1.637-3.113-2.461-4.666-.078-.148-.076-.243.037-.375 1.381-1.615 2.756-3.236 4.133-4.855.272-.32.513-.658.653-1.058.308-.878-.09-1.57-1-1.741a2.783 2.783 0 00-1.235.069c-1.974.521-3.947 1.041-5.918 1.57-.175.047-.26.015-.355-.144a353.08 353.08 0 00-2.421-4.018 4.61 4.61 0 00-.652-.849c-.371-.37-.802-.549-1.227-.536zm.172 3.703a.592.592 0 01.189.211c.87 1.446 1.742 2.89 2.609 4.338.07.118.135.16.277.121 1.525-.41 3.052-.813 4.579-1.217.367-.098.735-.193 1.103-.289a.399.399 0 01-.1.2c-1.259 1.48-2.516 2.962-3.779 4.438-.11.13-.12.22-.04.37.937 1.803 1.768 3.309 2.498 4.76l-3.696-1.019c-.538-.18-1.077-.358-1.615-.539-.163-.055-.25-.03-.36.1-1.248 1.488-2.504 2.97-3.759 4.454a.398.398 0 01-.18.132c.035-.378.068-.757.104-1.136.149-1.572.297-3.144.451-4.716-.03-.318.117-.405-.322-.545-1.493-.593-3.346-1.321-4.816-1.905a.595.595 0 01.24-.134c1.797-.57 3.595-1.14 5.394-1.705.127-.04.199-.092.211-.233.013-.148.05-.294.076-.441.241-1.363.483-2.726.726-4.088.068-.386.14-.771.21-1.157z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://spark.apache.org/images/\",hex:\"E25A1C\"},Apple:{title:\"Apple\",slug:\"apple\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Apple icon</title><path d=\"M7.078 23.55c-.473-.316-.893-.703-1.244-1.15-.383-.463-.738-.95-1.064-1.454-.766-1.12-1.365-2.345-1.78-3.636-.5-1.502-.743-2.94-.743-4.347 0-1.57.34-2.94 1.002-4.09.49-.9 1.22-1.653 2.1-2.182.85-.53 1.84-.82 2.84-.84.35 0 .73.05 1.13.15.29.08.64.21 1.07.37.55.21.85.34.95.37.32.12.59.17.8.17.16 0 .39-.05.645-.13.145-.05.42-.14.81-.31.386-.14.692-.26.935-.35.37-.11.728-.21 1.05-.26.39-.06.777-.08 1.148-.05.71.05 1.36.2 1.94.42 1.02.41 1.843 1.05 2.457 1.96-.26.16-.5.346-.725.55-.487.43-.9.94-1.23 1.505-.43.77-.65 1.64-.644 2.52.015 1.083.29 2.035.84 2.86.387.6.904 1.114 1.534 1.536.31.21.582.355.84.45-.12.375-.252.74-.405 1.1-.347.807-.76 1.58-1.25 2.31-.432.63-.772 1.1-1.03 1.41-.402.48-.79.84-1.18 1.097-.43.285-.935.436-1.452.436-.35.015-.7-.03-1.034-.127-.29-.095-.576-.202-.856-.323-.293-.134-.596-.248-.905-.34-.38-.1-.77-.148-1.164-.147-.4 0-.79.05-1.16.145-.31.088-.61.196-.907.325-.42.175-.695.29-.855.34-.324.096-.656.154-.99.175-.52 0-1.004-.15-1.486-.45zm6.854-18.46c-.68.34-1.326.484-1.973.436-.1-.646 0-1.31.27-2.037.24-.62.56-1.18 1-1.68.46-.52 1.01-.95 1.63-1.26.66-.34 1.29-.52 1.89-.55.08.68 0 1.35-.25 2.07-.228.64-.568 1.23-1 1.76-.435.52-.975.95-1.586 1.26z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://worldvectorlogo.com/logo/apple\",hex:\"999999\"},\"Apple Music\":{title:\"Apple Music\",slug:\"applemusic\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Apple Music icon</title><path d=\"M23.997 6.124c0-.738-.065-1.47-.24-2.19-.317-1.31-1.062-2.31-2.18-3.043C21.003.517 20.373.285 19.7.164c-.517-.093-1.038-.135-1.564-.15-.04-.003-.083-.01-.124-.013H5.988c-.152.01-.303.017-.455.026C4.786.07 4.043.15 3.34.428 2.004.958 1.04 1.88.475 3.208c-.192.448-.292.925-.363 1.408-.056.392-.088.785-.1 1.18 0 .032-.007.062-.01.093v12.223c.01.14.017.283.027.424.05.815.154 1.624.497 2.373.65 1.42 1.738 2.353 3.234 2.802.42.127.856.187 1.293.228.555.053 1.11.06 1.667.06h11.03c.525 0 1.048-.034 1.57-.1.823-.106 1.597-.35 2.296-.81.84-.553 1.472-1.287 1.88-2.208.186-.42.293-.87.37-1.324.113-.675.138-1.358.137-2.04-.002-3.8 0-7.595-.003-11.393zm-6.423 3.99v5.712c0 .417-.058.827-.244 1.206-.29.59-.76.962-1.388 1.14-.35.1-.706.157-1.07.173-.95.045-1.773-.6-1.943-1.536-.142-.773.227-1.624 1.038-2.022.323-.16.67-.25 1.018-.324.378-.082.758-.153 1.134-.24.274-.063.457-.23.51-.516.014-.063.02-.13.02-.193 0-1.815 0-3.63-.002-5.443 0-.062-.01-.125-.026-.185-.04-.15-.15-.243-.304-.234-.16.01-.318.035-.475.066-.76.15-1.52.303-2.28.456l-2.326.47-1.374.278c-.016.003-.032.01-.048.013-.277.077-.377.203-.39.49-.002.042 0 .086 0 .13-.002 2.602 0 5.204-.003 7.805 0 .42-.047.836-.215 1.227-.278.64-.77 1.04-1.434 1.233-.35.1-.71.16-1.075.172-.96.036-1.755-.6-1.92-1.544-.14-.812.23-1.685 1.154-2.075.357-.15.73-.232 1.108-.31.287-.06.575-.116.86-.177.383-.083.583-.323.6-.714v-.15c0-2.96 0-5.922.002-8.882 0-.123.013-.25.042-.37.07-.285.273-.448.546-.518.255-.066.515-.112.774-.165.733-.15 1.466-.296 2.2-.444l2.27-.46c.67-.134 1.34-.27 2.01-.403.22-.043.443-.088.664-.106.31-.025.523.17.554.482.008.073.012.148.012.223.002 1.91.002 3.822 0 5.732z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.apple.com/itunes/marketing-on-music/identity-guidelines.html#apple-music-icon\",hex:\"000000\"},\"Apple Pay\":{title:\"Apple Pay\",slug:\"applepay\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Apple Pay icon</title><path d=\"M4.388 8.284c-.282.337-.732.602-1.182.564-.056-.455.164-.938.422-1.237C3.91 7.265 4.402 7.02 4.8 7c.047.474-.136.938-.412 1.284zm.407.654c-.651-.038-1.21.375-1.518.375-.315 0-.788-.356-1.304-.346-.67.01-1.293.393-1.635 1.005C-.366 11.194.155 13.005.834 14c.333.493.732 1.033 1.257 1.014.496-.019.693-.327 1.293-.327.605 0 .778.327 1.304.318.543-.01.885-.493 1.218-.986.38-.56.535-1.104.544-1.133-.01-.01-1.05-.412-1.06-1.625-.009-1.015.82-1.498.858-1.526-.468-.702-1.2-.778-1.453-.797zM8.56 7.564v7.389h1.135v-2.526h1.57c1.434 0 2.442-.996 2.442-2.436 0-1.441-.989-2.427-2.404-2.427H8.559zm1.135.967h1.308c.984 0 1.546.53 1.546 1.464 0 .934-.562 1.47-1.551 1.47H9.694V8.53zm6.084 6.478c.713 0 1.374-.364 1.674-.943h.023v.887h1.05v-3.678c0-1.066-.844-1.754-2.142-1.754-1.205 0-2.095.697-2.128 1.654h1.022c.084-.455.501-.753 1.073-.753.694 0 1.083.327 1.083.929v.407l-1.416.086c-1.317.08-2.03.625-2.03 1.573 0 .957.736 1.592 1.791 1.592zm.305-.876c-.605 0-.99-.294-.99-.744 0-.465.371-.735 1.079-.778l1.26-.08v.417c0 .692-.58 1.185-1.35 1.185zm3.844 2.83c1.106 0 1.626-.427 2.08-1.721L24 9.592h-1.153l-1.336 4.365h-.023l-1.336-4.365h-1.186l1.921 5.38-.103.327c-.173.554-.454.767-.956.767-.089 0-.262-.01-.333-.019v.887c.066.019.347.028.432.028z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://developer.apple.com/apple-pay/marketing/\",hex:\"000000\"},\"Apple Podcasts\":{title:\"Apple Podcasts\",slug:\"applepodcasts\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Apple Podcasts icon</title><path d=\"M5.34 0A5.328 5.328 0 000 5.34v13.32A5.328 5.328 0 005.34 24h13.32A5.328 5.328 0 0024 18.66V5.34A5.328 5.328 0 0018.66 0zm6.525 2.568c2.336 0 4.448.902 6.056 2.587 1.224 1.272 1.912 2.619 2.264 4.392.12.59.12 2.2.007 2.864a8.506 8.506 0 01-3.24 5.296c-.608.46-2.096 1.261-2.336 1.261-.088 0-.096-.091-.056-.46.072-.592.144-.715.48-.856.536-.224 1.448-.874 2.008-1.435a7.644 7.644 0 002.008-3.536c.208-.824.184-2.656-.048-3.504-.728-2.696-2.928-4.792-5.624-5.352-.784-.16-2.208-.16-3 0-2.728.56-4.984 2.76-5.672 5.528-.184.752-.184 2.584 0 3.336.456 1.832 1.64 3.512 3.192 4.512.304.2.672.408.824.472.336.144.408.264.472.856.04.36.03.464-.056.464-.056 0-.464-.176-.896-.384l-.04-.03c-2.472-1.216-4.056-3.274-4.632-6.012-.144-.706-.168-2.392-.03-3.04.36-1.74 1.048-3.1 2.192-4.304 1.648-1.737 3.768-2.656 6.128-2.656zm.134 2.81c.409.004.803.04 1.106.106 2.784.62 4.76 3.408 4.376 6.174-.152 1.114-.536 2.03-1.216 2.88-.336.43-1.152 1.15-1.296 1.15-.023 0-.048-.272-.048-.603v-.605l.416-.496c1.568-1.878 1.456-4.502-.256-6.224-.664-.67-1.432-1.064-2.424-1.246-.64-.118-.776-.118-1.448-.008-1.02.167-1.81.562-2.512 1.256-1.72 1.704-1.832 4.342-.264 6.222l.413.496v.608c0 .336-.027.608-.06.608-.03 0-.264-.16-.512-.36l-.034-.011c-.832-.664-1.568-1.842-1.872-2.997-.184-.698-.184-2.024.008-2.72.504-1.878 1.888-3.335 3.808-4.019.41-.145 1.133-.22 1.814-.211zm-.13 2.99c.31 0 .62.06.844.178.488.253.888.745 1.04 1.259.464 1.578-1.208 2.96-2.72 2.254h-.015c-.712-.331-1.096-.956-1.104-1.77 0-.733.408-1.371 1.112-1.745.224-.117.534-.176.844-.176zm-.011 4.728c.988-.004 1.706.349 1.97.97.198.464.124 1.932-.218 4.302-.232 1.656-.36 2.074-.68 2.356-.44.39-1.064.498-1.656.288h-.003c-.716-.257-.87-.605-1.164-2.644-.341-2.37-.416-3.838-.218-4.302.262-.616.974-.966 1.97-.97z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.apple.com/itunes/marketing-on-podcasts/identity-guidelines.html#apple-podcasts-icon\",hex:\"9933CC\"},AppVeyor:{title:\"AppVeyor\",slug:\"appveyor\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>AppVeyor icon</title><path d=\"M 12,0 C 18.6,0 24,5.4 24,12 24,18.6 18.6,24 12,24 5.4,24 0,18.6 0,12 0,5.4 5.4,0 12,0 Z m 2.94,14.34 C 16.26,12.66 16.08,10.26 14.4,9 12.78,7.74 10.38,8.04 9,9.72 7.68,11.4 7.86,13.8 9.54,15.06 c 1.68,1.26 4.08,0.96 5.4,-0.72 z m -6.42,7.8 c 0.72,0.3 2.28,0.6 3.06,0.6 l 5.22,-7.56 c 1.68,-2.52 1.26,-5.94 -1.08,-7.8 -2.1,-1.68 -5.04,-1.62 -7.14,0 l -7.26,5.58 c 0.18,1.92 0.72,2.88 0.72,2.94 l 4.14,-4.5 c -0.3,1.98 0.42,4.02 2.1,5.28 1.44,1.14 3.18,1.44 4.86,1.08 z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://commons.wikimedia.org/wiki/File:Appveyor_logo.svg\",hex:\"00B3E0\"},ARAL:{title:\"ARAL\",slug:\"aral\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>ARAL icon</title><path d=\"M5.393 10.02l-.48 1.959.99.001-.51-1.96zm3.892.082v1.187c.549-.002.958.03 1.229-.033.27-.062.404-.217.404-.592 0-.334-.12-.469-.385-.523-.264-.055-.672-.028-1.248-.04zm5.326-.079l-.48 1.96h.99l-.51-1.96zM11.996 0L0 11.998 12.004 24 24 12.004 11.996 0zM5.393 8.896c.366 0 .606.117.775.295.169.18.267.421.35.67l1.07 3.211s.134.276.144.567c.01.29-.104.599-.6.666-.355-.054-.536-.156-.657-.35-.122-.194-.184-.482-.305-.91H4.645c-.147.468-.195.757-.295.941-.1.184-.254.263-.616.317-.508-.054-.636-.369-.636-.67 0-.301.129-.588.129-.588l1.015-3.152c.08-.246.176-.495.348-.682.172-.187.42-.315.803-.315zm9.191.002c.366 0 .607.117.775.295.17.18.267.421.35.67l1.072 3.211s.135.276.145.567c.01.29-.104.599-.6.666-.356-.054-.536-.156-.658-.35-.122-.194-.186-.482-.307-.91h-1.525c-.147.468-.193.757-.293.941-.1.184-.256.263-.617.317-.509-.054-.635-.367-.635-.668 0-.301.127-.59.127-.59l1.016-3.152c.075-.233.17-.484.343-.674.174-.19.424-.323.807-.323zm3.346.002c.308 0 .483.114.58.291.097.178.117.418.117.672v3.207c.215.005 1.23 0 1.23 0 .29 0 .53.02.694.106.164.086.252.239.244.504-.01.361-.18.517-.406.582-.226.065-.509.039-.744.039h-1.766c-.375 0-.536-.165-.604-.436-.067-.27-.04-.645-.04-1.062v-2.94c-.014-.254.02-.496.126-.674.107-.177.288-.289.569-.289zm-8.645.104h1.098c.254 0 .51-.002.767.084.259.086.52.26.786.613.28.378.35.933.222 1.414-.128.481-.456.889-.972.969.187.348.804 1.283.804 1.283s.066.11.078.266c.012.155-.03.357-.25.539-.388.147-.633.106-.78.03-.149-.078-.2-.192-.2-.192s-.562-.964-.91-1.633h-.643v1.338s.01.154-.064.305c-.075.15-.236.298-.578.285-.327 0-.488-.155-.567-.309C7.997 13.842 8 13.69 8 13.69V9.861c0-.334.006-.549.17-.68.164-.13.486-.177 1.115-.177z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://upload.wikimedia.org/wikipedia/commons/6/60/Aral_Logo.svg\",hex:\"0063CB\"},\"Arch Linux\":{title:\"Arch Linux\",slug:\"archlinux\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Arch Linux icon</title><path d=\"M11.390232.60509C10.375655 3.09168 9.764285 4.7185 8.63513 7.13162c.692712.734695 1.542857 1.589214 2.923032 2.553937-1.484256-.610496-2.49621-1.223615-3.25277-1.859475-1.444897 3.015743-3.710204 7.311953-8.30554 15.568513 3.612246-2.08513 6.411955-3.36997 9.020993-3.861516-.111954-.48105-.175802-1.003208-.17143-1.54723l.0035-.115453c.057725-2.314286 1.261224-4.09417 2.68688-3.972595 1.425656.119825 2.53382 2.095627 2.477843 4.409038-.010496.43557-.06035.85452-.146064 1.242857 2.58105.504665 5.351895 1.78688 8.914286 3.844024-.702333-1.29271-1.329447-2.4586-1.928572-3.569387-.943732-.731196-1.926822-1.6828-3.933236-2.71312 1.3793.3586 2.366764.77143 3.136443 1.23411C13.970407 7.010922 13.478862 5.503924 11.390232.60509zM22.897813 21.360193v-.623615h-.233528v-.083965h.561516v.083965h-.2344v.623615h-.093587M23.322886 21.360193v-.70758h.14169l.167056.501166c.015744.04723.027114.082215.03411.10583.007873-.025365.020118-.06385.038485-.113703l.168805-.493294h.126822v.70758h-.090962v-.593003l-.206414.593003h-.083965l-.204665-.602624v.602623h-.090962\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.archlinux.org/art/\",hex:\"1793D1\"},\"Archive of Our Own\":{title:\"Archive of Our Own\",slug:\"archiveofourown\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Archive of Our Own icon</title><path d=\"M18.417 9.883c-.687 1.116-1.823 1.722-2.99 1.855-4.227.484-6.047-4.149-3.469-6.728 2.31-2.31 7.082-.9 7.005 2.899-.011.611-.166 1.357-.546 1.974zm-6.459-2.029c.142 3.596 4.764 3.682 5.687 1.054.815-2.324-1.12-4.199-3.19-3.897-1.523.221-2.553 1.411-2.497 2.843zM23.123 6.003c.284-.131.697-.412.837-.246.211.251-.459.475-.748.664-.918.6-1.731 1.227-2.477 2.049-.959 1.059-1.944 2.376-2.55 3.818.618.032 3.021.157 3.6 1.481.464 1.062-.387 2.156-1.32 2.627.663.414 1.81.945 1.745 1.898-.158 2.343-3.696 2.241-5.178.695-.244-.289-.358-.482-.25-.578.151-.134.326.186.676.476.225.187.377.251.572.354 1.301.683 3.339.403 3.478-.792.064-.554-.664-.955-1.217-1.204-.498-.224-1.514-.386-1.494-.952.02-.554.524-.45 1.03-.65.55-.217 1.004-.901 1.003-1.116-.005-.905-2.062-.888-3.221-.92-.275.606-.471 1.226-.692 2.158-.139.583-.151 1.897-.748 2.029-.737.164-1.014-.477-1.455-.991-.594-.69-1.436-1.637-1.942-2.223-3.033 1.002-5.392 2.091-8.256 3.712-1.311.742-2.063 1.59-2.545 1.354-.396-.194-.339-.633-.147-.887.393-.521.927-1.225 1.396-1.888.6-.849 1.054-1.667 1.373-2.445.692-1.688 1.23-4.72 1.475-5.859.088-.412.309-.348.322-.148.027.419-.237 2.047-.29 2.383-.436 2.781-.772 4.41-2.009 6.349 2.196-1.358 4.805-3.019 7.592-3.955C8.846 9.936 5.847 6.85 1.676 4.905 1.037 4.542 0 4.464 0 4.22c0-.271.781-.06 1.043.007 2.383.596 4.817 2.141 6.601 3.444 2.145 1.567 4.714 3.967 5.679 5.081.657-.226 2.286-.457 3.696-.496.752-1.58 2.55-4.018 4.788-5.442.413-.263.842-.594 1.316-.811zm-8.594 8.071c.423.428.742.934 1.11 1.398.174-.59.405-1.216.643-1.758-.619.082-1.281.203-1.753.36z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://archiveofourown.org/\",hex:\"990000\"},Arduino:{title:\"Arduino\",slug:\"arduino\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Arduino icon</title><path d=\"M23.82 12a5.78 5.78 0 0 0-5.88-5.67c-.29 0-.6.02-.9.05-2.52.37-4.2 2.18-5.13 3.57-.95-1.39-2.64-3.2-5.14-3.57-.3-.03-.6-.05-.9-.05A5.78 5.78 0 0 0 0 12a5.78 5.78 0 0 0 5.87 5.67c.3 0 .6-.02.92-.06 2.52-.36 4.2-2.17 5.14-3.56.95 1.39 2.63 3.2 5.14 3.57.31.03.6.05.91.05A5.78 5.78 0 0 0 23.82 12zM6.48 15.6c-.2.04-.43.04-.63.04A3.77 3.77 0 0 1 2 11.98a3.78 3.78 0 0 1 3.86-3.66c.2 0 .42.02.63.04 2.37.35 3.82 2.67 4.31 3.62-.5.95-1.95 3.3-4.31 3.62zM13 12c.49-.93 1.94-3.27 4.31-3.62.2-.04.42-.04.62-.04A3.76 3.76 0 0 1 21.8 12a3.78 3.78 0 0 1-3.86 3.66c-.2 0-.42-.02-.62-.04-2.36-.35-3.82-2.69-4.31-3.62zm-8.79.59h3.54v-1.16H4.22v1.16zm14.13 0h1.19v-1.16h-1.2v-1.19H17.2v1.2H16v1.15h1.2v1.18h1.15V12.6zM24 7.06c0 .3-.22.51-.53.51a.51.51 0 0 1-.53-.5c0-.28.24-.52.53-.52.31 0 .53.22.53.51zm-.91 0c0 .22.16.4.4.4.22 0 .38-.18.38-.4s-.16-.4-.38-.4c-.24-.02-.4.16-.4.4zm.3.26h-.1V6.8l.2-.01c.09 0 .14.01.18.03.04.02.06.06.06.11 0 .06-.04.1-.11.11.05.02.07.06.09.13l.03.13h-.12c-.02-.02-.02-.07-.04-.13-.02-.05-.04-.07-.11-.07h-.05l-.02.22zm.02-.3h.06c.07 0 .1-.01.1-.07 0-.05-.03-.07-.1-.07h-.07v.14h.01z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://cdn.arduino.cc/projecthub/img/Arduino-logo.svg\",hex:\"00979D\"},ArtStation:{title:\"ArtStation\",slug:\"artstation\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>ArtStation icon</title><path d=\"M0 17.723l2.027 3.505h.001a2.424 2.424 0 0 0 2.164 1.333h13.457l-2.792-4.838H0zm24 .025c0-.484-.143-.935-.388-1.314L15.728 2.728a2.424 2.424 0 0 0-2.142-1.289H9.419L21.598 22.54l1.92-3.325c.378-.637.482-.919.482-1.467zm-11.129-3.462L7.428 4.858l-5.444 9.428h10.887z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.artstation.com/about/logo\",hex:\"13AFF0\"},arXiv:{title:\"arXiv\",slug:\"arxiv\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>arXiv icon</title><path d=\"M20.7 15.404l-1.894-4.967h1.411l1.39 3.582 1.379-3.582h.96l-1.92 4.967zM16.298 9.6V8.48h1.34V9.6zm0 5.808v-4.971h1.34v4.967zm-6.965-.003l2.146-3.3L9.43 8.707h1.627l1.364 2.254L13.9 8.707h1.12l-2.046 3.156 2.126 3.537h-1.622l-1.45-2.4-1.557 2.4H9.333zm-3.346 0v-4.968h1.338v.937c.344-.7.875-1.051 1.585-1.051a1.401 1.401 0 01.248.026v1.194a1.6 1.6 0 00-.53-.102c-.537 0-.968.267-1.303.8v3.164zm-3.028-.536q-.664.65-1.437.65a1.473 1.473 0 01-1.06-.398 1.376 1.376 0 01-.406-1.03 1.45 1.45 0 01.659-1.271q.657-.447 1.884-.448h.355v-.453q0-.772-.88-.772a3.305 3.305 0 00-1.587.443v-.922a5.016 5.016 0 011.808-.345q1.953 0 1.951 1.55v2.206c0 .39.123.58.376.58a.8.8 0 00.174-.02l.032.751a2.745 2.745 0 01-.751.13c-.552 0-.902-.216-1.06-.65h-.054zm0-.72v-1.01h-.32c-.866 0-1.297.274-1.297.815a.64.64 0 00.64.648c.329.004.647-.15.977-.453z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://static.arxiv.org/static/base/0.15.2/images/arxiv-logo-web.svg\",hex:\"B31B1B\"},Asana:{title:\"Asana\",slug:\"asana\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Asana icon</title><path d=\"M18.78 12.653c-2.882 0-5.22 2.336-5.22 5.22s2.338 5.22 5.22 5.22 5.22-2.34 5.22-5.22-2.336-5.22-5.22-5.22zm-13.56 0c-2.88 0-5.22 2.337-5.22 5.22s2.338 5.22 5.22 5.22 5.22-2.338 5.22-5.22-2.336-5.22-5.22-5.22zm12-6.525c0 2.883-2.337 5.22-5.22 5.22-2.882 0-5.22-2.337-5.22-5.22 0-2.88 2.338-5.22 5.22-5.22 2.883 0 5.22 2.34 5.22 5.22z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://asana.com/styles\",hex:\"273347\"},Asciidoctor:{title:\"Asciidoctor\",slug:\"asciidoctor\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Asciidoctor icon</title><path d=\"M18.07,0H5.93A5.94,5.94,0,0,0,0,5.93V18.07A5.94,5.94,0,0,0,5.93,24H18.07A5.94,5.94,0,0,0,24,18.07V5.93A5.94,5.94,0,0,0,18.07,0ZM10.71,15.4H8.81v0L7.2,19.28h0a.5.5,0,0,1-.66.27.51.51,0,0,1-.27-.67L7.72,15.4H4.85a.5.5,0,0,1-.5-.51.52.52,0,0,1,.52-.5h5.86a.5.5,0,0,1,.49.52A.49.49,0,0,1,10.71,15.4Zm7.92,4.17a.51.51,0,0,1-.66-.29l-5.35-13L10.23,12H11.8a.5.5,0,0,1,.49.52.49.49,0,0,1-.51.49H5.92a.5.5,0,0,1-.5-.51.52.52,0,0,1,.52-.5h3.2l3-7.27a.49.49,0,0,1,.45-.31.52.52,0,0,1,.48.31L18.91,18.9h0A.51.51,0,0,1,18.63,19.57Z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/asciidoctor/brand\",hex:\"E40046\"},Atlassian:{title:\"Atlassian\",slug:\"atlassian\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Atlassian icon</title><path d=\"M19.31 23.957H15.71a1.26 1.26 0 0 1-1.312-.792c-1.332-2.665-2.78-5.288-3.987-8.046a15.25 15.25 0 0 1 .885-14.47c.166-.281.52-.625.791-.625s.593.375.74.666q5.444 10.89 10.898 21.788c.542 1.041.292 1.468-.905 1.479zm-14.573 0H1.04c-1.041 0-1.27-.417-.812-1.333q2.8-5.538 5.549-11.055c.5-1.041.895-1.041 1.592-.177a12.221 12.221 0 0 1 2.51 11.17c-.344 1.322-.532 1.405-1.864 1.405z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://atlassian.design/guidelines/brand/logos-1\",hex:\"0052CC\"},Atom:{title:\"Atom\",slug:\"atom\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Atom icon</title><path d=\"M20.496 9.026c-2.183-.93-5.116-1.53-8.25-1.695-.5-.03-.987-.04-1.45-.04 2.318-2.83 4.802-4.73 6.437-4.79.322-.013.595.055.813.196.706.458.905 1.768.545 3.59-.04.25.12.493.36.54.25.05.49-.11.54-.36.45-2.28.12-3.846-.94-4.538-.38-.248-.84-.365-1.35-.346-2.05.077-4.94 2.3-7.59 5.72-1.154.035-2.24.13-3.232.287-.646-2.897-.39-4.977.594-5.477.138-.073.285-.11.457-.124.697-.054 1.66.395 2.71 1.27.194.16.486.14.646-.06.163-.195.134-.48-.06-.645C9.466 1.51 8.304 1 7.354 1.07c-.286.025-.556.098-.803.22-1.19.607-1.67 2.327-1.37 4.838.07.52.16 1.062.29 1.62C2.19 8.404.1 9.718.01 11.372c-.06 1.17.865 2.284 2.68 3.222.224.115.502.03.62-.2.114-.224.03-.5-.2-.616C1.66 13.032.88 12.19.927 11.42c.05-1.08 1.772-2.19 4.76-2.78.27.994.62 2.032 1.05 3.09-1.018 1.888-1.756 3.747-2.137 5.4-.56 2.465-.26 4.22.86 4.948.36.234.78.35 1.247.35.935 0 2.067-.46 3.347-1.372.21-.15.256-.435.11-.64-.147-.206-.433-.256-.64-.106-1.544 1.103-2.844 1.472-3.562 1.003-.76-.495-.926-1.943-.46-3.976.32-1.386.907-2.93 1.708-4.52.2.438.41.876.63 1.313 1.425 2.796 3.17 5.227 4.91 6.845 1.386 1.29 2.674 1.963 3.735 1.963.35 0 .68-.075.976-.223 1.145-.585 1.64-2.21 1.398-4.575-.224-2.213-1.06-4.91-2.354-7.6-.11-.227-.384-.323-.61-.216-.23.11-.33.385-.22.612 2.69 5.602 2.88 10.19 1.37 10.96-1.59.813-5.424-2.355-8.39-8.18-.34-.655-.637-1.3-.9-1.93.34-.608.7-1.22 1.095-1.83.395-.604.806-1.188 1.224-1.745h.394c.54 0 1.126.01 1.734.048 6.53.343 10.975 2.56 10.884 4.334-.04.765-.924 1.538-2.425 2.12-.234.096-.352.36-.26.596.07.18.24.292.426.292.058 0 .114-.01.167-.03 1.905-.74 2.95-1.756 3.01-2.93.07-1.33-1.17-2.61-3.5-3.6v-.01zM8.08 9.45c-.27.415-.52.827-.764 1.244-.292-.768-.532-1.51-.723-2.215.713-.11 1.485-.19 2.31-.24-.28.39-.554.794-.82 1.21v-.01zM12.005 10.625A1.375 1.375 0 1 0 12.005 13.375 1.375 1.375 0 1 0 12.005 10.625z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://commons.wikimedia.org/wiki/File:Atom_editor_logo.svg\",hex:\"66595C\"},\"AT&T\":{title:\"AT&T\",slug:\"at-and-t\",svg:'<svg xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" viewBox=\"0 0 24 24\"><title>AT&amp;T icon</title><path d=\"M4.633 21.429a11.967 11.967 0 0 0 7.344 2.516c3.026 0 5.785-1.123 7.89-2.968.026-.022.014-.037-.011-.022-.945.63-3.638 2.008-7.879 2.008-3.685 0-6.014-.822-7.329-1.556-.025-.013-.034.006-.015.022m8.157.612c2.948 0 6.187-.804 8.124-2.394.53-.434 1.035-1.01 1.487-1.785.26-.446.515-.976.722-1.497.01-.025-.006-.038-.025-.01-1.802 2.652-7.018 4.305-12.404 4.305-3.807 0-7.904-1.217-9.508-3.542-.016-.021-.031-.012-.022.012 1.494 3.176 6.027 4.91 11.626 4.91m-3.22-5.267c-6.13 0-9.02-2.855-9.545-4.804-.006-.028-.025-.022-.025.004 0 .655.066 1.502.179 2.064.053.273.276.702.602 1.045 1.485 1.547 5.186 3.715 11.595 3.715 8.732 0 10.729-2.909 11.136-3.866.292-.684.443-1.92.443-2.958 0-.252-.006-.452-.016-.65 0-.032-.018-.034-.025-.003-.436 2.34-7.897 5.453-14.344 5.453M1.155 6.836C.803 7.533.415 8.71.298 9.318c-.05.26-.029.386.063.58.734 1.56 4.45 4.054 13.12 4.054 5.289 0 9.397-1.3 10.063-3.67.122-.437.129-.898-.029-1.519-.176-.694-.505-1.503-.784-2.071-.01-.019-.025-.016-.022.006.103 3.11-8.569 5.114-12.945 5.114-4.74 0-8.694-1.888-8.694-4.273 0-.229.048-.458.107-.696.006-.022-.013-.026-.022-.007m18.732-3.818c.05.079.076.163.076.276 0 1.33-4.072 3.684-10.553 3.684-4.762 0-5.653-1.767-5.653-2.89 0-.402.154-.813.493-1.23.018-.025.003-.034-.019-.016a12.001 12.001 0 0 0-1.685 1.751c-.239.301-.387.568-.387.728 0 2.328 5.838 4.016 11.297 4.016 5.816 0 8.412-1.899 8.412-3.567 0-.596-.232-.945-.826-1.62-.386-.439-.75-.796-1.136-1.148-.019-.015-.032-.003-.019.016m-1.783-1.33A11.845 11.845 0 0 0 11.977 0c-2.262 0-4.41.633-6.211 1.738-.54.332-.845.599-.845.942 0 1.01 2.36 2.095 6.548 2.095 4.143 0 7.357-1.19 7.357-2.334 0-.273-.239-.464-.722-.753\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://commons.wikimedia.org/wiki/File:AT%26T_logo_2016.svg\",hex:\"00A8E0\"},Audi:{title:\"Audi\",slug:\"audi\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Audi icon</title><path d=\"M19.848,7.848c-0.992,0-1.902,0.348-2.616,0.928c-0.714-0.58-1.624-0.928-2.616-0.928 c-0.992,0-1.902,0.348-2.616,0.928c-0.714-0.58-1.624-0.928-2.616-0.928c-0.992,0-1.902,0.348-2.616,0.928 c-0.714-0.58-1.624-0.928-2.616-0.928C1.859,7.848,0,9.707,0,12s1.859,4.152,4.152,4.152c0.992,0,1.902-0.348,2.616-0.928 c0.714,0.58,1.624,0.928,2.616,0.928c0.992,0,1.902-0.348,2.616-0.928c0.714,0.58,1.624,0.928,2.616,0.928 c0.992,0,1.902-0.348,2.616-0.928c0.714,0.58,1.624,0.928,2.616,0.928C22.141,16.152,24,14.293,24,12S22.141,7.848,19.848,7.848z M17.232,13.866c-0.376-0.526-0.598-1.17-0.598-1.866c0-0.696,0.222-1.34,0.598-1.866c0.376,0.526,0.598,1.17,0.598,1.866 C17.83,12.696,17.608,13.34,17.232,13.866z M12,13.866c-0.376-0.526-0.598-1.17-0.598-1.866c0-0.696,0.222-1.34,0.598-1.866 c0.376,0.526,0.598,1.17,0.598,1.866C12.598,12.696,12.376,13.34,12,13.866z M6.768,13.866C6.392,13.34,6.17,12.696,6.17,12 c0-0.696,0.222-1.34,0.598-1.866C7.144,10.66,7.366,11.304,7.366,12C7.366,12.696,7.144,13.34,6.768,13.866z M0.938,12 c0-1.775,1.439-3.214,3.214-3.214c0.736,0,1.414,0.248,1.956,0.665C5.56,10.154,5.232,11.039,5.232,12 c0,0.961,0.328,1.846,0.876,2.549c-0.542,0.416-1.22,0.665-1.956,0.665C2.377,15.214,0.938,13.775,0.938,12z M7.428,14.549 C7.976,13.846,8.304,12.961,8.304,12c0-0.961-0.328-1.846-0.876-2.549c0.542-0.416,1.22-0.665,1.956-0.665 c0.736,0,1.414,0.248,1.956,0.665c-0.549,0.704-0.876,1.588-0.876,2.549c0,0.961,0.328,1.846,0.876,2.549 c-0.542,0.416-1.22,0.665-1.956,0.665C8.648,15.214,7.97,14.966,7.428,14.549z M12.66,14.549c0.549-0.704,0.876-1.588,0.876-2.549 c0-0.961-0.328-1.846-0.876-2.55c0.542-0.416,1.22-0.665,1.956-0.665s1.414,0.248,1.956,0.665 c-0.549,0.704-0.876,1.588-0.876,2.549c0,0.961,0.328,1.846,0.876,2.549c-0.542,0.416-1.22,0.665-1.956,0.665 C13.88,15.214,13.202,14.966,12.66,14.549z M19.848,15.214c-0.736,0-1.414-0.248-1.956-0.665c0.548-0.704,0.876-1.588,0.876-2.549 c0-0.961-0.328-1.846-0.876-2.549c0.542-0.416,1.22-0.665,1.956-0.665c1.775,0,3.214,1.439,3.214,3.214 S21.623,15.214,19.848,15.214z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.audi.com/ci/en/intro/basics/rings.html\",hex:\"BB0A30\"},Audible:{title:\"Audible\",slug:\"audible\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Audible icon</title><path d=\"M12.008 17.362L24 9.885v2.028l-11.992 7.509L0 11.912V9.886l12.008 7.477zm0-9.378c-2.709 0-5.085 1.363-6.448 3.47.111-.111.175-.175.286-.254 3.374-2.804 8.237-2.17 10.883 1.362l1.758-1.124c-1.394-2.044-3.786-3.454-6.48-3.454m0 3.47a4.392 4.392 0 0 0-3.548 1.821 3.597 3.597 0 0 1 2.139-.697c1.299 0 2.455.666 3.232 1.79l1.679-1.045c-.729-1.157-2.028-1.87-3.501-1.87M3.897 8.412c4.943-3.897 11.929-2.836 15.652 2.344l.031.032 1.822-1.125a11.214 11.214 0 0 0-9.394-5.085c-3.897 0-7.366 1.996-9.394 5.085.364-.412.824-.903 1.283-1.251\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://commons.wikimedia.org/wiki/File:Audible_logo.svg\",hex:\"F8991C\"},Aurelia:{title:\"Aurelia\",slug:\"aurelia\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Aurelia icon</title><path d=\"M15.716 4.636L13.49 6.122l-2.295-3.439 2.228-1.486zM17.527 14.967l3.806 5.703-4.533 3.025-3.806-5.703-.664-.995 4.533-3.025zM11.817 18.777l.838 1.256-3.45 2.303-1.503-2.25.754-.504 2.697-1.8zM19.413 12.27l.968-.645 1.501 2.25-2.227 1.487-.838-1.256 1.26-.84zm-.596 1.836l-.664-.995 1.26-.84.664.994zM3.792 12.593l-.753.503L.744 9.657l3.45-2.302 1.61 2.41-2.698 1.8 2.697-1.8.686 1.029zM11.513 5.954l.687 1.029-4.534 3.025L6.98 8.98 3.21 3.33 7.742.305zM14.749 5.282l-1.26.84-.686-1.028-1.609-2.41 2.228-1.487 2.295 3.439zM9.12 20.577l-.664-.995 2.697-1.8.664.995zM18.817 14.106l-.664-.995 1.26-.84.664.994zM3.792 12.593l-.686-1.028 2.697-1.8.686 1.029zM13.489 6.122l-.686-1.028 1.26-.84.686 1.028zM17.527 14.967l-4.533 3.025-.664-.995 4.533-3.025zM11.513 5.954l.687 1.029-4.534 3.025L6.98 8.98zM2.507 5.132l.855 1.283-1.282.855-.856-1.282zM7.127 20.505l.856 1.283-1.282.855-.856-1.282zM3.754 21.797L0 16.125 20.063 2.706 24 8.287z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://aurelia.io/\",hex:\"ED2B88\"},Auth0:{title:\"Auth0\",slug:\"auth0\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Auth0 icon</title><path d=\"M21.98 7.448L19.62 0H4.347L2.02 7.448c-1.352 4.312.03 9.206 3.815 12.015L12.007 24l6.157-4.552c3.755-2.81 5.182-7.688 3.815-12.015l-6.16 4.58 2.343 7.45-6.157-4.597-6.158 4.58 2.358-7.433-6.188-4.55 7.63-.045L12.008 0l2.356 7.404 7.615.044z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://styleguide.auth0.com\",hex:\"EB5424\"},Automatic:{title:\"Automatic\",slug:\"automatic\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Automatic icon</title><path d=\"M12 6.768v.002-1.237c-.485.033-.754.293-.99.71L5.87 16.72h2.464l-.753-.96.654-1.363.005.007L12 6.774v-.006zM10.526 13.123h2.946L12 10.076M8.233 14.416h.017l-.01-.013M13.473 13.123v.002M21.496 5.066L13.26.308c-.693-.4-1.827-.4-2.52 0L2.504 5.066c-.693.398-1.26 1.38-1.26 2.182v9.507c0 .802.567 1.782 1.26 2.18l8.236 4.757c.693.4 1.826.4 2.52 0l8.235-4.768c.692-.39 1.26-1.38 1.26-2.174V7.246c0-.8-.567-1.78-1.26-2.18zm-6.066 12.05l-.687-1.384h-5.5l-.673 1.384H5.287l5.396-11.033c.305-.607.777-.9 1.317-.9s1.034.328 1.316.89l5.396 11.043H15.43zM12 6.77V9.244l2.518 5.173H8.25l.758.94h5.972l.674 1.35h2.474l-1.708-.99v.04L12 6.77\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.automatic.com/press\",hex:\"7D8084\"},Autotask:{title:\"Autotask\",slug:\"autotask\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Autotask icon</title><path d=\"M17.93 11.626l2.782 6.988h-4.298l-1.825-4.736-9.885 6.667L1 12.6h.815l4.39 3.418 7.61-4.148-1.085-2.82-1.168 2.481-4.938 2.716 3.553-9.342h5.077l2.022 5.08L24 6.32V0H0v24h24V7.532z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.autotask.com/branding\",hex:\"E51937\"},Aventrix:{title:\"Aventrix\",slug:\"aventrix\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Aventrix icon</title><path d=\"M12 24C5.372 24 0 18.628 0 12S5.372 0 12 0s12 5.372 12 12-5.372 12-12 12zm5.371-8.138c-.23.161-.644.322-1.081.322-.46 0-.805-.184-.805-.851v-5.011c0-3.149-1.403-4.321-4.139-4.321-1.517 0-2.875.367-3.656.827-.322.529-.391 1.425-.23 2a6.782 6.782 0 0 1 3.518-1.012c1.793 0 2.53.805 2.53 2.713v.598c-.667-.275-1.541-.367-2.299-.367-2.599 0-4.599 1.103-4.599 3.793 0 2.506 1.724 3.448 3.702 3.448 1.518 0 2.575-.483 3.242-1.357h.092c.184.851.782 1.357 1.816 1.357h.009c.557 0 1.077-.154 1.522-.421l-.013.007c.299-.414.437-1.126.391-1.724zm-6.554.321c-1.241 0-2.207-.529-2.207-1.724 0-1.219.989-2.069 2.897-2.069a5.76 5.76 0 0 1 2 .345v2.253c-.598.874-1.702 1.195-2.69 1.195z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.aventrix.com/press\",hex:\"0099DD\"},awesomeWM:{title:\"awesomeWM\",slug:\"awesomewm\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>awesomeWM icon</title><path d=\"M0 24V8.25h16.5V7.5H0V0h24v24h-7.5v-8.25h-9v.75h8.25V24z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://awesomewm.org/\",hex:\"535D6C\"},\"Azure Artifacts\":{title:\"Azure Artifacts\",slug:\"azureartifacts\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Azure Artifacts icon</title><path d=\"M5.2 0c-.552 0-1 .43-1 .958V11.5h15.6V.958c0-.529-.448-.958-1-.958H5.2zm3.2 2.3h2.4c.331 0 .6.257.6.575a.588.588 0 0 1-.6.575H8.4a.588.588 0 0 1-.6-.575c0-.318.269-.575.6-.575zM1.064 12C.476 12 0 12.448 0 13v10c0 .552.476 1 1.064 1H8.8a1 1 0 0 1-1-1v-8h-3a.6.6 0 1 1 0-1.201h3V12H1.064z M23 12H8.299v11c0 .552.477 1 1.064 1H23a1 1 0 0 0 1-1V13a1 1 0 0 0-1-1zm-9.8 10.2H9.6V21h3.6v1.2zm2.4-1.8h-6v-1.2h6v1.2zM15 15h-2.4a.6.6 0 0 1 0-1.201H15A.602.602 0 0 1 15 15z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://azure.microsoft.com/en-us/services/devops/artifacts/\",hex:\"CB2E6D\"},\"Azure DevOps\":{title:\"Azure DevOps\",slug:\"azuredevops\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Azure DevOps icon</title><path d=\"M0 8.899l2.247-2.966 8.405-3.416V.045l7.37 5.393L2.966 8.36v8.224L0 15.73zm24-4.45v14.652L18.247 24l-9.303-3.056V24l-5.978-7.416 15.057 1.798V5.438z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://azure.com/devops\",hex:\"0078D7\"},\"Azure Pipelines\":{title:\"Azure Pipelines\",slug:\"azurepipelines\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Azure Pipelines icon</title><path d=\"M1.8 18H0v6h6v-1.8H1.8zM23 0h-8.93a2 2 0 0 0-1.67.89L9 5.99H1a1 1 0 0 0-1 1v5.5l3.5 3.61 1.2-1.29 1.5 1.5L5 17.53l1.48 1.48 1.22-1.22 1.5 1.51L8 20.5l3.5 3.5H17a1 1 0 0 0 1-1v-8l5.11-3.4A2 2 0 0 0 24 9.92V1a1 1 0 0 0-1-1zm-5 9a3 3 0 1 1 0-6 3 3 0 0 1 0 6z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/vscode-icons/vscode-icons/pull/1741\",hex:\"2560E0\"},Babel:{title:\"Babel\",slug:\"babel\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Babel icon</title><path d=\"M16.434 8.072l-.005-.051-.084.007.005.052zm.562 1.352l.002.028.058-.005a.214.214 0 0 1 .018-.082l-.005-.051c-.025.002-.05.039-.073.11zm-2.193 1.702c-.004-.048-.153-.235-.448-.564-.005-.06.096-.15.304-.27l.594-.518c.133-.169.211-.442.235-.823l-.007-.087c-.024-.263-.214-.475-.575-.637-.213-.144-.597-.224-1.152-.238-.46.039-1.058.203-1.797.492a7.376 7.376 0 0 1-.693.438l.004.044a.166.166 0 0 0 .07-.03c.03-.003.047.01.05.04l.044-.024.02-.002.003.02c.002.023-.158.15-.482.375l.025.046-.021.002-.054-.02c.002.017-.021.027-.066.03l.002.02.052.064a.195.195 0 0 1-.075-.017.36.36 0 0 0-.22.12l.03-.131c.109-.468.183-.882.222-1.241l-.005-.023a.902.902 0 0 1-.215-.201.633.633 0 0 0 0-.095l-.005-.02-.021.006c-.235.352-.687.953-1.357 1.803-.51.605-.774.941-.79 1.009-.208.215-.307.345-.297.39-.055.035-.078.07-.07.11-.015.003-.026-.002-.03-.018a.606.606 0 0 1-.396.277l-.185.043c-.025.005-.037.023-.035.053l.005.023.069-.016.005.02-.157.06-.277.064-.146.01c-.021.02.116-.003.062.01l-.181.043c-.11.025-.17.016-.181-.029l-.022.005c.004.02.005.034.002.047l-.01-.045-.146.034c-.01-.068-.208-.313-.59-.736-.008-.082.127-.201.403-.356l.779-.685c.174-.224.277-.583.311-1.077l-.01-.116c-.03-.349-.283-.63-.758-.846-.281-.19-.786-.292-1.515-.308-.605.051-1.395.267-2.366.642a9.04 9.04 0 0 1-.912.576l.005.06a.24.24 0 0 0 .09-.035c.04-.004.061.014.065.05l.06-.034.03-.002.002.029c.002.028-.21.193-.638.496l.034.053-.03.002-.066-.023c.002.018-.029.03-.09.035l.003.032.071.079a.258.258 0 0 1-.096-.02c-.139.013-.274.112-.407.3l.034.054c.115-.107.183-.16.202-.162l.007.087a.293.293 0 0 0-.09.036l.073.11a2.41 2.41 0 0 1 .464-.39c.083.022.128.049.13.077l.064-.005c.458-.34.912-.585 1.362-.736l.005.06c-.084.125-.14.189-.17.192.003.043.017.08.044.112.007.077-.198.592-.612 1.546-.94 2.216-1.73 3.855-2.373 4.915.002.022.015.05.038.086.158-.038.258-.077.3-.114l.034-.004.005.06.059-.005.06-.033c.002.017.022.026.063.023l.005.06c.005.059-.029.148-.1.27-.064.073-.133.226-.206.46l.002.028.059-.006c.256-.286.45-.567.583-.84.747-.22 1.316-.435 1.71-.646.397-.034.7-.139.906-.312l-.004-.032-.15.045-.033.004-.004-.033c.291-.044.492-.108.604-.197.568-.437.996-.747 1.286-.93.596-.438.984-.864 1.16-1.279l.1-.023c.083-.003.13-.005.142-.009-.004-.016.004-.025.02-.028.133-.014.069.009.154-.01l.224-.052c-.014.003-.02.01-.016.024l.034-.02c-.007 0-.013-.003-.018-.004l.037-.01-.017.011a.218.218 0 0 0 .081-.005l.016.066-1.019 1.62-.226.283-.11.37.021-.006.11-.046-.035.144.01.043.031.037c-.014.004-.02.013-.016.029l.005.023.046-.01c.068-.06.096-.113.086-.161a.42.42 0 0 0 .145.01l.005.024c-.044.01-.067.046-.07.107l.004.023.025-.006c.37-.403 1.277-1.785 2.005-2.722-.024-.102.355-.242 1.138-.424l.025-.005c.028.123-.032.42-.182.891-.096.285-.142.441-.135.466-.124.379-.183.583-.176.615l-.277.91c-.18.465-.317.954-.413 1.47a.18.18 0 0 1 .077.007l.039-.034c.004.016.014.021.03.018l-.016-.066.12-.003c.036-.01.067-.054.091-.136-.005-.122.02-.188.075-.202.075-.292.121-.438.137-.443.07-.29.121-.456.155-.496.105-.377.181-.571.231-.584l.01.047-.076.197c-.133.592-.268 1.06-.405 1.403l.039.17.025-.004c.33-.712.807-2.12 1.428-4.226a.552.552 0 0 1 .265-.43l-.036-.038-.005-.02c.071-.015.121-.044.15-.083-.004-.016-.066-.039-.187-.071l.31-1.327a.46.46 0 0 1 .118-.092l.005.067a.166.166 0 0 0-.069.03l.059.084c.106-.115.222-.215.348-.299.064.018.096.04.1.06l.046-.003a3.77 3.77 0 0 1 1.037-.555l.004.045c-.062.094-.105.142-.128.144a.2.2 0 0 0 .028.085c.005.059-.147.45-.46 1.176-.715 1.68-1.314 2.924-1.802 3.731a.169.169 0 0 0 .032.066c.12-.029.196-.059.226-.087l.021-.002.004.044.05-.003.045-.023c.002.012.017.017.048.016l.004.048c.004.042-.022.11-.077.202-.051.055-.105.171-.162.347l.002.023.047-.003a2.81 2.81 0 0 0 .442-.64c.568-.168 1-.33 1.299-.49.304-.026.533-.105.69-.236l-.002-.023-.116.033-.025.002-.002-.023c.22-.032.375-.082.459-.147.43-.331.756-.568.976-.706.687-.5 1.007-.98.968-1.441zm-.118.03l.016.18c-.02.044-.044.067-.065.07l-.027-.307c.05.018.075.036.076.057zM1.22 9.71l-.03.001-.005-.055.123-.01.002.028a.236.236 0 0 0-.09.036zm-.6 5.995a.38.38 0 0 0-.19-.04l-.006-.087c-.004-.033.016-.056.058-.065.04-.004.062.025.066.081.103-.126.16-.19.17-.192l.067.027c-.022.178-.077.269-.164.276zm6.405-6.7c-.03.004-.09-.09-.178-.277l-.005-.055c.057-.006.116.087.178.277zm-.085-.663l-.025.059-.87-.363c.58.02.879.12.895.304zm-3.673 3.153l-.123.01-.005-.054.123-.011zm-.1-1.894l.03-.002.008.087c-.029.002-.066.045-.112.127l-.005-.06c.055-.067.083-.116.08-.152zm-.257.608l.01.116-.03.002-.01-.116zm-.136.217l.06-.005c-.006.096-.033.148-.08.151l-.031.002c.037-.064.055-.114.052-.148zm-.1.303l.033-.004.002.028-.055.093-.059.005-.002-.028c.059-.006.086-.036.08-.094zm-.1.272l-.018.146-.03.001-.013-.144zm-.998 2.836c-.04.2-.082.3-.126.304l-.002-.028c-.011-.098.032-.19.128-.276zm-.183.397l.002.028c.004.04-.015.063-.054.064l-.002-.028c-.004-.034.015-.055.054-.064zm-.054.823l.093-.009.004.032a.24.24 0 0 0-.091.036l-.059.005c-.004-.03.016-.053.054-.064zm2.632-.812c-.519.256-.825.43-.916.52-.562.196-.84.317-.835.365-.5.198-.83.343-.987.434a.354.354 0 0 1-.162-.042c-.01-.102.037-.184.135-.25a.525.525 0 0 1 .25.04 2.44 2.44 0 0 1 .484-.159l-.005-.06-.185.016c.023-.032.201-.116.536-.25l.092-.01.002.029c-.158.014-.245.06-.265.144.004.037.025.053.064.05.12-.075.178-.12.176-.132.226-.043.85-.37 1.873-.98l.005.055c.002.027-.085.102-.261.23zm-1.568.515a.606.606 0 0 0 .384-.178c.043-.003.066.013.067.05-.072.007-.213.068-.417.185l-.03.002zm2.53-1.943l-.784.62c-.583.383-.896.575-.94.578-.929.51-1.507.776-1.731.795l-.034.004c.029-.105.441-.95 1.241-2.54.353-.03.907-.194 1.663-.493l.185-.016c.383-.033.669.041.857.22l.011.115c-.142.409-.299.647-.468.717zM3.4 11.953l.127-.01.002.028-.127.01zm1.774-.3l.092-.01c.085.041.13.077.133.109l.002.028c-.081.008-.158-.035-.227-.128zm.25-1.429c-.082.098-.306.265-.672.5-.12.01-.57.185-1.35.526a.246.246 0 0 0-.124-.02l-.005-.056c-.01-.112.04-.253.15-.423.061-.32.127-.504.2-.548l.65-1.46c-.008-.09.13-.16.415-.208l.093-.01.007.084c.28-.042.453-.067.52-.072.517-.045.785.06.807.31l.058-.004-.012-.148.064-.005c.15.083.233.185.243.304.007.082-.037.183-.131.304-.04.003-.062-.025-.066-.082l-.064.005-.014.178c-.262.391-.452.592-.57.603-.106.148-.172.22-.198.222zm.399 1.023c-.054-.036-.096-.052-.128-.05l-.007-.087.058-.005.13.076c.005.041-.012.062-.053.066zm.412.489c.057.023.091.048.098.071l-.028.007.002.002a.065.065 0 0 0-.018.004l-.043.033zm.04.245l-.006-.023.075-.017.005.023zm.179.201c.076-.012.114-.017.256-.05l.005.024-.27.062a.298.298 0 0 0 .009-.036zm.263.112c-.114.011-.089-.003-.27.038l-.005-.023.226-.073.108-.025.01.043c-.047.01-.012.01-.068.04zm.24-.056c-.026.007-.048-.006-.06-.036l.07-.016c.03-.007.049.005.056.036zm.651-.701l-.005-.023.112-.027.01.043zm.696 4.264a.169.169 0 0 0 .005-.07l.024-.006c.03-.007.048.004.056.032l.005.023zm.487-4.081l-.05-.009a1.41 1.41 0 0 1-.203.068l-.046.01c-.027.007-.048-.003-.059-.032l.326-.074.107-.05.035.04a.238.238 0 0 0-.11.047zm.25-.08l-.004-.023a.137.137 0 0 0 .06-.04l.231-.053.005.023c-.122.03-.22.06-.291.093zm.036-.468a.19.19 0 0 0-.064.04c-.004-.017-.035-.017-.096-.002-.01-.045.16-.107.514-.189l.05-.01.01.042c-.248.073-.387.114-.414.12zM9.7 10.5c-.025.283-.125.443-.3.484l-.006-.023-.156.06-.07.016a.174.174 0 0 1-.096-.002l-.014-.062c-.005-.023.22-.336.68-.937l.053.009c.02.081-.011.233-.091.455zm1.1-.943l-.02.002-.005-.044.093-.01.002.024a.3.3 0 0 0-.07.028zm-.453 4.555a.285.285 0 0 0-.142-.032l-.005-.068c-.002-.023.012-.039.042-.048.03-.003.048.018.052.064a.78.78 0 0 1 .128-.147l.048.02c-.018.135-.059.206-.123.211zm4.862-5.086c-.023.001-.067-.07-.137-.214l-.004-.044c.045-.004.091.066.137.208zm-.064-.509l-.021.046-.658-.275c.44.014.667.09.68.229zm-2.79 2.396l-.093.008-.004-.044.093-.007zm-.077-1.44l.025-.001.005.068c-.023.001-.051.033-.085.096l-.004-.045c.04-.051.06-.09.059-.117zm-.193.463l.007.087-.025.002-.007-.087zm-.105.166l.046-.004c-.005.075-.025.114-.059.117l-.025.002a.242.242 0 0 0 .038-.115zm-.075.227l.021-.002.002.024-.04.07-.047.004-.002-.023c.048-.003.07-.028.066-.073zm-.075.207l-.016.113-.021.002-.01-.112zm-.76 2.157c-.03.15-.061.226-.095.23l-.002-.02c-.005-.075.027-.146.098-.21zm-.14.3l.002.02c.004.032-.01.05-.042.051l-.002-.023c-.002-.023.012-.039.042-.048zm-.039.626l.071-.005.002.023a.206.206 0 0 0-.07.027l-.045.003c-.002-.024.012-.04.042-.048zm1.997-.617c-.39.194-.624.326-.697.393-.427.15-.638.242-.635.28-.378.15-.627.26-.745.328a.277.277 0 0 1-.123-.033c-.007-.077.029-.139.104-.185a.402.402 0 0 1 .19.028c.071-.035.194-.074.368-.119l-.004-.044-.146.01c.018-.025.155-.089.41-.192l.07-.005.002.02c-.12.01-.188.046-.202.11.002.028.02.042.05.039.088-.059.131-.093.131-.103.17-.03.644-.28 1.421-.745l.004.044c.002.02-.064.076-.197.174zm-1.191.391a.477.477 0 0 0 .295-.133c.03-.003.048.01.05.04-.053.005-.158.049-.317.134l-.025.002zm1.924-1.477l-.592.476c-.443.29-.683.436-.72.44-.705.387-1.142.588-1.315.602l-.025.002c.022-.08.337-.722.945-1.928.265-.023.685-.149 1.26-.377l.145-.012c.29-.025.507.032.649.169l.007.087c-.109.306-.226.486-.354.54zm-1.163-.655l.093-.009.002.023-.093.01zm1.346-.23l.071-.005c.066.032.1.06.102.084l.002.02c-.062.005-.121-.027-.175-.098zm.187-1.082c-.062.074-.231.202-.507.38-.092.01-.434.14-1.024.397a.234.234 0 0 0-.094-.013l-.004-.044c-.007-.085.03-.192.112-.322.046-.245.097-.382.15-.414l.497-1.11c-.005-.066.1-.12.313-.16l.071-.005.005.067c.21-.034.341-.053.395-.059.391-.033.596.045.612.237l.046-.004-.01-.106.047-.004c.114.062.174.137.181.226.005.064-.026.142-.094.233-.03.004-.048-.018-.051-.064l-.047.003-.014.134c-.197.3-.341.455-.432.462-.08.109-.13.164-.153.166zm.208.74l-.005-.068.046-.004.1.06c.002.03-.013.045-.043.049-.042-.027-.074-.04-.098-.038zm-8.278 4.32l-.047.01-.039.034c.007.028.025.039.055.032.03-.007.043-.025.036-.054zm-.177-.351l.005.023c.03-.007.043-.025.036-.053l-.005-.023c-.028.007-.04.025-.036.053zm1.252-2.979l.054-.012-.01-.047-.054.013zm16.138 1.355c-.54.121-.608.1-.722.109l.004.044.05-.003.026-.002-.007-.006.06-.023c.534-.058.597-.037.591-.097zm-2.911.386l.004.045h.007l-.004-.045zm-.335-1.172l-.048-.016a.804.804 0 0 0-.057.185l.002.02c.038-.002.072-.066.104-.189zm3.356.777l.004.045.078.014-.004-.044zm-3.68.45l-.12-.014-.022.046.002.023.72-.06-.003-.044zm-.327-1.577l-.002-.023-.024.002-.045.028.025.043c.034-.004.05-.02.046-.05zm4.349.8l.034-.003c.02-.002.028-.018.026-.047l-.02-.042a.576.576 0 0 0-.279.07l-.002-.022-.147.014c-.004-.045-.016-.068-.036-.066l-.076.007c-.09.007-.132.004-.176.038-.002-.017-.007-.024-.016-.024l-.086.007-.05.029c-.002-.016-.007-.023-.016-.023l-.03.026-.002-.023-.119-.009-.028.002.004.045.06.016.057-.004c.02.013.04.016.066.014l.05-.025.002.02c-.28.07-.278.057-.47.089-.021-.014-.037-.021-.048-.02l-.004.004c-.021-.002-.034-.016-.036-.04l.1-.012c.007 0 .012.008.068.018.08-.039.083-.055.126-.058l-.004-.045c-.274.053-.164.018-.507.048l-.016.002-.004-.045c.441-.053.294-.023.445-.065.002.016.007.023.016.023a.103.103 0 0 1 .06-.03l.03-.002c.155-.013.207.017.513-.068l.002.02.05-.025.046-.004c-.004-.044.064-.051.087-.053l-.004-.048c-.537.108-.678.078-.827.12l-.002-.019c-.14.025-.146.014-.182.016a.094.094 0 0 0-.044.029c-.002-.016-.007-.023-.018-.023l-.009.001-.455.075c-.002-.012-.007-.02-.018-.018-.237.05-.173.059-.49.087a.15.15 0 0 0-.058.025c-.002-.012-.009-.02-.025-.018l-.194.016-.13.033c-.001-.013-.008-.02-.024-.018-.073.02-.137.032-.189.035h-.004c-.032.004.016-.009-.009-.02l-.039.024c-.057.005-.027-.004-.222-.002-.343.043-.306.048-.343.05l-.129-.009c.002.012-.005.021-.02.021-.145-.02-.22-.042-.221-.07.02-.138.053-.209.1-.212l.026-.002-.022.046.025-.002c.047-.025.068-.048.066-.07l-.004-.047-.046.003-.004-.044a.158.158 0 0 1 .014-.089l.105-.169.004.045.05-.004-.004-.045-.029-.04c.038-.032.066-.05.09-.052l-.003-.023-.067.005-.005-.067c.135-.281.199-.445.195-.491l.048.02c.03-.003.045-.02.043-.052l-.046.003-.002-.02a.17.17 0 0 1 .018-.093c.073-.077.106-.153.1-.233.013-.002.02.005.022.02.063-.035.11-.129.146-.285.11-.2.267-.598.472-1.194.39-1.053.375-1.165.43-1.414l-.046.004a.16.16 0 0 1-.018.09.183.183 0 0 0-.075-.017l-.002-.02c-.007-.09.03-.199.116-.327l.021-.002.04.153.045-.003c-.002-.011.011-.072.036-.184-.002-.023-.02-.037-.055-.039l-.045.029a2.24 2.24 0 0 1 .004-.25l-.023.003c-.039-.04-.058-.072-.06-.098l-.255.025a.24.24 0 0 0-.028-.079c-.002-.023.055-.046.172-.069l.052.02.048-.029c.002.016.01.023.029.022l.048-.029c.002.016.01.023.028.021l.023-.001-.004-.052c-.035.004-.13.004-.28-.002l-.047.032-.002-.028c-1.193.098-1.871.153-2.033.169-.021.002-.105 0-.252-.004.002.02-.016.03-.052.034l-.052-.023-.174.044c-.04.004-.11.002-.206-.009a.177.177 0 0 1-.098.038c-.021.002.254-.014.51-.032a.234.234 0 0 1-.124.039.17.17 0 0 1-.101-.018 2.89 2.89 0 0 1-.377.089l-.052-.02-.832.128a.208.208 0 0 0-.112-.017c-.045.003-.12.02-.223.048l-.402.167.03.05a.222.222 0 0 0 .082-.032l.143.012-.018.134c-.132.058-.208.145-.23.256-.197.087-.295.149-.295.186l.002.023.03-.001.054-.029.062.075.009.103c.004.032-.329.731-.994 2.097-.576 1.316-.879 2.036-.907 2.166-.198.055-.311.135-.345.242.004.034.062.057.176.066l.005.051-.052.086.01.103c.004.053.149.094.431.122-.002-.017.007-.028.027-.03.005.064-.012.189-.053.374l.03-.002c.117-.16.173-.27.167-.33l.025-.003c.028-.002.059.03.094.1-.035.014-.16.297-.373.85l.03.05.03-.002c.262-.662.425-1.028.493-1.097.343-.03.937-.091 1.78-.182l.054-.032c.002.018.012.027.032.025l.055-.005.053-.032c.002.018.012.027.032.025l.638-.055c.17-.015.25-.066.242-.153-.002-.023.098-.05.299-.079a.244.244 0 0 1 .087.016c-.002-.016.1-.032.302-.05.005-.106.04-.163.1-.168l-.005-.052a.882.882 0 0 0-.196.045 1.197 1.197 0 0 1-.254-.03.235.235 0 0 1-.082.031l-.444.015-.054.028c-.002-.016-.012-.023-.032-.021l-.025.001-.056.029c-.002-.016-.048-.029-.141-.041l-.057.034-.11.009-.002-.029c.573-.062.855-.14.848-.233.038-.003.057.015.06.052l.168-.043-.005-.051-1.371.037c.002.018-.007.028-.027.03l-.167-.014a.202.202 0 0 0-.107.037l-.062-.023c-.173.014-.3.036-.386.062a2.435 2.435 0 0 0-.391.006l-.308.026-.142-.016c-.007-.09.169-.537.531-1.337.105-.27.201-.44.294-.503a.206.206 0 0 1 .087.021l.219-.075.112.018c.188-.016.407-.07.658-.162a.308.308 0 0 1 .142.013l.167-.04.498-.042c.212-.018.441-.064.69-.14l-.005-.052c-.092.009-.14-.007-.144-.045-.005-.069-.073-.097-.203-.087l-.005-.051.137-.04.36-.03-.005-.051a3.26 3.26 0 0 1-.223-.005l-.005-.056.139-.012c.037-.004.053-.021.05-.057-.187.005-.281-.004-.283-.028-1.302.064-1.954.076-1.958.035a.224.224 0 0 0-.082.036l-.034-.054c.345-.732.548-1.102.607-1.108a.305.305 0 0 1-.045.137l.002.023.055-.005c.137-.327.253-.496.349-.503.409-.036-.057-.062.818-.2.036.017.06.024.078.022.343-.07.822-.142 1.435-.217l-.004-.052-.327.03-.004-.05a.178.178 0 0 0 .098-.038l.002.028a.193.193 0 0 0 .075-.035c.057-.006.1 0 .13.016a1.89 1.89 0 0 1 .273-.055l.205-.02c.05-.032.073-.06.071-.087l-.002-.023a.646.646 0 0 1-.18-.01c-.002-.03.013-.049.047-.058l.38-.035.175-.045c.002.02.01.027.024.027a.193.193 0 0 0 .075-.036l.029.004c-.023.048-.05.117-.077.208l-.05.004a.224.224 0 0 0-.028-.091l-.025.002c-.462 1.287-.669 1.887-1.096 2.875-.078.253-.144.393-.2.424.002.028.02.042.05.039a.62.62 0 0 1-.088.368c-.197.569-.329.88-.396.937l.044.269c.002.028-.012.044-.043.048L19 12.89c-.007-.074-.034-.11-.082-.105l-.025.002c-.06.094-.106.203-.137.33l.047-.004c.062-.041.09-.09.085-.145l.093-.008.053.02c-.043.067-.062.12-.059.161l.025.043-.06.142.002.023a.29.29 0 0 1 .174.05.313.313 0 0 0 .14-.057c.054-.005.253-.007.596-.007l.173-.059c.21-.002.243.004.425-.012l.074-.007.04-.027.002.023c.19-.016.202-.004.352.014l.002.023-.105.01.004.044a.151.151 0 0 0 .083-.032c.027-.002.043.012.045.044a.629.629 0 0 0-.144.032l-.046-.016c-.073.02-.057.025-.107.029l-.073-.015c.002.013-.005.022-.018.022.002.028.018.042.045.04l.074-.006.39-.034.147-.032c.002.012.007.02.02.018l.071-.027.134-.01c.103-.01.1-.017.325-.052-.002-.015.004-.02.014-.022l.002.02c.365-.062.388-.066.447-.086l.005.011c.09-.021.039-.016.064-.034.002.016.007.023.016.023l.064-.005-.004-.048-.13-.002-.002-.003-.014.003h-.018v.004c-.087.018-.09.005-.146.01l-.326.018-.002-.023.182-.025.066-.005.037-.027.002.024c.256-.022.347.042 1.531-.21.064-.006.059-.059.1-.17a.11.11 0 0 1-.062-.013c-.098.037-.15.02-.338.05-.016.001-.029-.013-.034-.042l-.002-.02.181.006c.034-.003.1-.009.198-.064 0 .016-.036.025-.014.023zm-8.757.14l-.084.008c-.004-.034.041-.162.133-.38l.056-.006c.002.051-.032.178-.105.379zm.101-.405l-.002-.023c-.002-.028.016-.048.055-.057l.002.023c.002.034-.016.054-.055.057zm1.112.86l.002.022-.14.013-.001-.023zm-.168-.015c.002.028-.04.06-.133.092l-.17-.012-.056.005-.005-.051zm1.124-5.174l-.083.008-.002-.029c-.002-.028.014-.048.05-.057l.03-.002.057.023c.002.034-.015.054-.052.057zm1.272-.249l.027-.001.004.051-.077.007c-.002-.028.013-.048.046-.057zm-.32.112l-.126-.014-.002-.023c.165-.014.22-.032.321-.06.002.02.02.026.052.023l.004.051-.05.006a.17.17 0 0 1-.101-.018.217.217 0 0 1-.098.035zm.158.461l-.002-.023.205-.02.002.024zm.219-.178l-.002-.028.1-.01.001.03zm.023-.348l-.027.001.023-.055.228-.021.002.028a1.37 1.37 0 0 0-.226.047zm.116.49l-.004-.051.1-.009c.033-.004.05.013.052.048zm.602-.821l-.128.035-.023.002c-.06.006-.138.004-.23-.005.165-.01.323-.023.381-.032zm-.136.569l.002.023-.177.016-.002-.023zm.288.137c-.002-.021-.036-.036-.105-.043l-.176.05-.136.005c-.03-.021-.046-.035-.048-.046l.157.009.352-.057.18.007.002.029a1.008 1.008 0 0 0-.226.046zm1.812-.468l.04.002a.682.682 0 0 1 .212-.142c-.064.28-.163.489-.3.624l-.1-.06a3.25 3.25 0 0 0 .148-.424zm-.306.525l.025-.002c-.034.064-.064.098-.089.1l-.005-.068c.016 0 .04-.01.07-.03zm-.197.471c.048-.192.094-.3.137-.329l.002.023c-.025.178-.064.272-.116.28l.009.111c-.043.061-.062.107-.06.143l-.025.002-.015-.155c.029-.004.052-.029.068-.075zm-.077.256a.64.64 0 0 1-.052.185l-.024.002-.005-.068c.033-.078.062-.117.081-.119zm-1.435 4.165l-.002-.02.046-.003.005.068c-.025.002-.043-.013-.05-.045zm2.05.054c-.002-.016-.009-.023-.024-.022l-.116.011-.002-.023h.01l.274-.023.002.023c-.08.003-.128.016-.144.034zm-.137-.057c.011.005.005.01 0 .014-.005-.002-.012-.007 0-.014zm.015-.32l-.153.012-.002-.023.138-.012.121-.03c.002.014.01.019.025.017.144-.025.13-.032.2-.037.023-.002.037.012.039.04zm.535-.047c-.085-.008-.09-.016-.151-.01l-.002-.02.137-.012.002.02c-.014.001.037.005.014.022zm.01-.024l-.001-.02.074-.007.002.02zm.166-.015l-.002-.02a.13.13 0 0 0 .053-.028c.038-.003.057.022.061.05zm.212-.026l-.002-.024.09-.007.002.023zm.126-.011c-.002-.027.009-.043.032-.046l.03.039c-.002-.013.004-.02.014-.022l.023.043zm-1.343.58l-.004-.045-.014.002.004.044zm3.125-.81c.014-.008.021-.017-.013-.023-.016.018.018.024-.017.025l.002.016.02-.014-.02.016v.002l-.038.048.075-.027h.009l-.004-.044zm.13.102l-.014.002.004.044.105-.009c-.002-.028-.072-.037-.095-.037zm-.162-.078l.002-.002v-.002l-.002.004z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://babeljs.io/\",hex:\"F9DC3E\"},Baidu:{title:\"Baidu\",slug:\"baidu\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Baidu icon</title><path d=\"M4.312 12.65c2.61-.562 2.25-3.684 2.176-4.366-.128-1.05-1.366-2.888-3.044-2.74-2.11.186-2.418 3.24-2.418 3.24-.287 1.41.682 4.426 3.286 3.865m4.845-5.24c1.44 0 2.604-1.66 2.604-3.71 0-2.04-1.16-3.7-2.6-3.7S6.55 1.65 6.55 3.7c0 2.05 1.17 3.71 2.61 3.71m6.207.245c1.93.26 3.162-1.8 3.412-3.36.25-1.55-1-3.36-2.36-3.67-1.37-.316-3.06 1.874-3.23 3.3-.18 1.75.25 3.49 2.17 3.737M23 10.284c0-.746-.613-2.993-2.91-2.993-2.295 0-2.61 2.12-2.61 3.62 0 1.43.118 3.42 2.985 3.36 2.855-.07 2.543-3.24 2.543-3.99M20.1 16.82s-2.985-2.31-4.726-4.8c-2.36-3.677-5.715-2.18-6.834-.316-1.12 1.883-2.86 3.062-3.105 3.377-.25.31-3.6 2.12-2.854 5.42.75 3.3 3.36 3.24 3.36 3.24s1.92.19 4.16-.31 4.16.12 4.16.12 5.207 1.75 6.648-1.61c1.424-3.37-.81-5.11-.81-5.11\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://en.wikipedia.org/wiki/File:Baidu.svg\",hex:\"2319DC\"},Bamboo:{title:\"Bamboo\",slug:\"bamboo\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Bamboo icon</title><path d=\"M21.715 13.643h-4.989a.651.651 0 0 0-.655.555 4.114 4.114 0 0 1-4.062 3.531l1.35 6.172a10.374 10.374 0 0 0 9.007-9.545.651.651 0 0 0-.651-.713zm-8.633-.158l7.2-6.171a.645.645 0 0 0 0-.984L13.081.16a.648.648 0 0 0-1.073.483v12.343a.651.651 0 0 0 1.073.5zM1.727 14.99A10.385 10.385 0 0 0 12.012 24v-6.27a4.093 4.093 0 0 1-4.1-4.087L1.727 14.99zm-.096-1.447v.1h6.28a4.093 4.093 0 0 1 4.098-4.087l-1.348-6.17a10.37 10.37 0 0 0-9.03 10.157\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.atlassian.design/guidelines/marketing/resources/logo-files\",hex:\"0052CC\"},Bancontact:{title:\"Bancontact\",slug:\"bancontact\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Bancontact icon</title><path d=\"M21.385 9.768h-7.074l-4.293 5.022H1.557L3.84 12.1H1.122C.505 12.1 0 12.616 0 13.25v2.428c0 .633.505 1.15 1.122 1.15h12.933c.617 0 1.46-.384 1.874-.854l1.956-2.225 3.469-3.946.031-.035zm-1.123 1.279l-.751.855.75-.855zm2.616-3.875H9.982c-.617 0-1.462.384-1.876.853l-5.49 6.208h7.047l4.368-5.02h8.424l-2.263 2.689h2.686c.617 0 1.122-.518 1.122-1.151V8.323c0-.633-.505-1.15-1.122-1.15zm-1.87 3.024l-.374.427-.1.114.474-.54z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.bancontact.com/en/promotion-material/guidelines-logo\",hex:\"005498\"},Bandcamp:{title:\"Bandcamp\",slug:\"bandcamp\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Bandcamp icon</title><path d=\"M0 18.75l7.437-13.5H24l-7.438 13.5H0z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://bandcamp.com/buttons\",hex:\"408294\"},BandLab:{title:\"BandLab\",slug:\"bandlab\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>BandLab icon</title><path d=\"M12,0C5.373,0,0,5.373,0,12s5.373,12,12,12c6.627,0,12-5.373,12-12S18.627,0,12,0z M12.375,2.625 c0.5,0,0.5,0.75,0,0.75S11.875,2.625,12.375,2.625z M11.25,4.125c0,1-1.5,1-1.5,0S11.25,3.125,11.25,4.125z M17.742,17.555 c-0.391,0.551-0.822,0.82-1.707,0.82h-8.07c-0.881,0-1.316-0.27-1.707-0.818c-0.531-0.756-0.082-1.574-0.082-1.574l3.559-6.918 c0,0,0.154-0.459-0.074-0.705C9.435,8.123,8.715,7.328,8.658,7.267C8.58,7.17,8.555,7.095,8.547,7.02 C8.535,6.953,8.479,6.172,8.479,6.082S8.461,5.906,8.617,5.744c0.125-0.119,0.398-0.119,0.398-0.119h5.98 c0,0,0.273-0.004,0.398,0.119c0.156,0.162,0.138,0.248,0.138,0.338c-0.017,0.315-0.039,0.629-0.068,0.941 c-0.008,0.072-0.03,0.151-0.116,0.244l-1.013,1.092c-0.026,0.026-0.045,0.059-0.063,0.09h-3.654c-0.086,0-0.135,0.008-0.197,0.074 c-0.094,0.109-0.031,0.233-0.031,0.233l2.566,5.002c0.137,0.287-0.07,0.617-0.387,0.619c-1.227,0-1.935,0.638-1.935,1.414 c0,0.779,0.876,1.414,1.957,1.414c1.076,0,1.947-0.627,1.959-1.402c0,0,0.022-0.259-0.109-0.582l-2.588-5.031 c0,0-0.049-0.133,0.033-0.248c0.084-0.117,0.219-0.123,0.219-0.123h2.52l3.199,6.164C17.824,15.983,18.273,16.801,17.742,17.555z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://blog.bandlab.com/press/\",hex:\"DC3710\"},Basecamp:{title:\"Basecamp\",slug:\"basecamp\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Basecamp icon</title><path d=\"M12 2C5.54 2 .48 10.22 0 17.16 2.028 20.68 6.915 22 12 22s9.975-1.32 12-4.84C23.52 10.218 18.46 2 12 2zm.15 18.4c-9.54 0-10.456-4.034-10.456-4.034l.18-.976S4.5 9.72 6.15 9.72s2.34 2.34 3.69 2.34 4.274-5.19 5.324-5.19c1.047 0 2.82 1.95 4.27 3.75 1.45 1.802 2.878 4.887 2.878 4.887l-.008.034.15.886S21.688 20.4 12.148 20.4z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://basecamp.com/about/press\",hex:\"5ECC62\"},\"Bath ASU\":{title:\"Bath ASU\",slug:\"bathasu\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Bath ASU icon</title><path d=\"M20.984 22.265c-.33 0-.654-.088-.943-.256-.9-.52-1.21-1.67-.69-2.57 1.91-3.3.77-7.54-2.54-9.448-1.05-.604-2.23-.92-3.45-.92-.33 0-.66-.09-.942-.258-.9-.517-1.217-1.668-.69-2.566.33-.575.947-.93 1.622-.935 1.864 0 3.713.49 5.336 1.427 2.46 1.426 4.22 3.728 4.957 6.48.735 2.75.36 5.62-1.066 8.1-.33.57-.96.93-1.622.93l.04.006zm-11.478 1.31c-3.81 0-7.355-2.046-9.256-5.338-.518-.894-.207-2.044.69-2.56.873-.504 2.068-.176 2.565.686C4.737 18.498 7.033 19.82 9.5 19.82c1.202 0 2.397-.32 3.448-.926 1.037-.616 1.908-1.487 2.524-2.54.166-.285.392-.525.69-.69.857-.51 2.06-.18 2.555.676.332.57.332 1.293-.015 1.878-.932 1.622-2.284 2.96-3.906 3.907-1.623.932-3.47 1.428-5.335 1.428l.05.023zm.746-16.637C9.135 7.972 8.436 9.45 8.436 11.093c0 1.03.278 1.993.76 2.827.272.466.422.99.422 1.563 0 1.247-.736 2.33-1.79 2.825 1.46.45 3.08.315 4.51-.512.9-.525 1.593-1.247 2.073-2.072.27-.467.67-.872 1.16-1.144 1.08-.63 2.39-.524 3.35.136-.33-1.487-1.26-2.84-2.69-3.65-.88-.51-1.86-.752-2.82-.752-.54 0-1.08-.15-1.56-.42-1.08-.63-1.652-1.803-1.547-2.975l-.043.01zm-3.77 10.428c-.664 0-1.286-.36-1.623-.94-.94-1.62-1.43-3.465-1.43-5.334C3.43 5.21 8.21.424 14.1.424c1.03 0 1.872.842 1.872 1.88 0 1.035-.842 1.876-1.88 1.876-3.812 0-6.91 3.102-6.91 6.912 0 1.21.318 2.404.926 3.455.165.28.25.606.25.938 0 1.036-.84 1.878-1.88 1.878v.003z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://bathasu.com/press/\",hex:\"00A3E0\"},Beats:{title:\"Beats\",slug:\"beats\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Beats icon</title><path d=\"M21.55 16.77a7.14 7.14 0 0 1-7.16 7.16H2.45v-7.16h8.36a9.61 9.61 0 0 0 8.5-5.19 7.09 7.09 0 0 1 2.24 5.2zm-4.24-6.53a7.29 7.29 0 0 0 .66-3.01A7.14 7.14 0 0 0 10.8.07H2.46v14.32h8.35c2.9 0 5.37-1.7 6.5-4.15z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.elastic.co/brand\",hex:\"005571\"},\"Beats by Dre\":{title:\"Beats by Dre\",slug:\"beatsbydre\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Beats by Dre icon</title><path d=\"M12.0098 0a12 12 0 00-3.5996.5527v6.6465A6 6 0 116.0098 12V1.6016a12 12 0 106-1.6016zm.1504 8.4023A3.6 3.6 0 008.4102 12a3.6 3.6 0 003.5996 3.5996 3.6 3.6 0 00.1504-7.1973Z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.beatsbydre.com/\",hex:\"E01F3D\"},Behance:{title:\"Behance\",slug:\"behance\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Behance icon</title><path d=\"M6.938 4.503c.702 0 1.34.06 1.92.188.577.13 1.07.33 1.485.61.41.28.733.65.96 1.12.225.47.34 1.05.34 1.73 0 .74-.17 1.36-.507 1.86-.338.5-.837.9-1.502 1.22.906.26 1.576.72 2.022 1.37.448.66.665 1.45.665 2.36 0 .75-.13 1.39-.41 1.93-.28.55-.67 1-1.16 1.35-.48.348-1.05.6-1.67.767-.61.165-1.252.254-1.91.254H0V4.51h6.938v-.007zM16.94 16.665c.44.428 1.073.643 1.894.643.59 0 1.1-.148 1.53-.447.424-.29.68-.61.78-.94h2.588c-.403 1.28-1.048 2.2-1.9 2.75-.85.56-1.884.83-3.08.83-.837 0-1.584-.13-2.272-.4-.673-.27-1.24-.65-1.72-1.14-.464-.49-.823-1.08-1.077-1.77-.253-.69-.373-1.45-.373-2.27 0-.803.135-1.54.403-2.23.27-.7.644-1.28 1.12-1.79.495-.51 1.063-.895 1.736-1.194s1.4-.433 2.22-.433c.91 0 1.69.164 2.38.523.67.34 1.22.82 1.66 1.4.44.586.75 1.26.94 2.02.19.75.25 1.54.21 2.38h-7.69c0 .84.28 1.632.71 2.065l-.08.03zm-10.24.05c.317 0 .62-.03.906-.093.29-.06.548-.165.763-.3.21-.135.39-.328.52-.583.13-.24.19-.57.19-.96 0-.75-.22-1.29-.64-1.62-.43-.32-.99-.48-1.69-.48H3.24v4.05H6.7v-.03zm13.607-5.65c-.352-.385-.94-.592-1.657-.592-.468 0-.855.074-1.166.238-.302.15-.55.35-.74.59-.19.24-.317.48-.392.75-.075.26-.12.5-.135.71h4.762c-.07-.75-.33-1.3-.68-1.69v.01zM6.52 10.45c.574 0 1.05-.134 1.425-.412.374-.27.554-.72.554-1.338 0-.344-.07-.625-.18-.846-.13-.22-.3-.39-.5-.512-.21-.124-.45-.21-.72-.257-.27-.053-.56-.074-.84-.074H3.23v3.44h3.29zm9.098-4.958h5.968v1.454h-5.968V5.48v.01z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.behance.net/dev/api/brand\",hex:\"1769FF\"},\"Big Cartel\":{title:\"Big Cartel\",slug:\"bigcartel\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Big Cartel icon</title><path d=\"M12 13.068v-1.006c0-.63.252-1.256.88-1.508l7.79-4.9c.503-.252.755-.88.755-1.51V0L12 6.03 2.575 0v12.69c0 3.394 1.51 6.284 4.02 7.917L11.875 24l5.28-3.393c2.513-1.51 4.02-4.398 4.02-7.916V7.036L12 13.068z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.bigcartel.com\",hex:\"222222\"},Bing:{title:\"Bing\",slug:\"bing\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Bing icon</title><path d=\"M3.605 0L8.4 1.686V18.56l6.753-3.895-3.31-1.555-2.09-5.2 10.64 3.738v5.435L8.403 24l-4.797-2.67V0z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://commons.wikimedia.org/wiki/File:Bing_logo_(2016).svg\",hex:\"008373\"},Bit:{title:\"Bit\",slug:\"bit\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Bit icon</title><path d=\"M12 24C5.373 24 0 18.627 0 12S5.373 0 12 0s12 5.373 12 12-5.373 12-12 12zm-1.144-10.93c0-1.292-.763-2.019-1.858-2.019-.341 0-.637.072-.862.224V9.552c0-.323-.197-.485-.601-.485s-.601.162-.601.485v4.533c0 .305 0 .601.413.835.359.206.826.305 1.328.305 1.4 0 2.181-.844 2.181-2.154zm-2.72 1.05v-1.921a.923.923 0 0 1 .565-.18c.556 0 .924.413.924 1.131 0 .709-.359 1.104-.942 1.104-.206 0-.395-.045-.548-.135zm4.968-4.254c0-.413-.296-.691-.709-.691s-.709.278-.709.691c0 .413.296.7.709.7s.709-.287.709-.7zm-.108 1.669c0-.323-.197-.485-.601-.485s-.601.162-.601.485v3.186c0 .323.197.485.601.485s.601-.162.601-.485v-3.186zm3.64 2.594c-.072 0-.135.018-.206.036-.081.018-.18.045-.278.045-.153 0-.269-.054-.332-.18-.081-.153-.081-.386-.081-.548v-1.346h.754c.323 0 .485-.162.485-.503s-.162-.503-.485-.503h-.754v-.79c0-.323-.197-.485-.601-.485s-.601.162-.601.485v.79h-.314c-.323 0-.485.162-.485.503s.162.503.485.503h.314v1.346c0 .413.018.799.197 1.122.197.359.583.619 1.23.619.35 0 .691-.081.889-.197.171-.099.215-.224.215-.35 0-.197-.099-.548-.431-.548z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://bit.dev\",hex:\"73398D\"},Bitbucket:{title:\"Bitbucket\",slug:\"bitbucket\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Bitbucket icon</title><path d=\"M.778 1.211c-.424-.006-.772.334-.778.758 0 .045.002.09.01.134l3.263 19.811c.084.499.515.867 1.022.872H19.95c.382.004.708-.271.77-.646l3.27-20.03c.068-.418-.216-.813-.635-.881-.045-.008-.089-.011-.133-.01L.778 1.211zM14.52 15.528H9.522L8.17 8.464h7.561l-1.211 7.064z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.atlassian.com/company/news/press-kit\",hex:\"0052CC\"},Bitcoin:{title:\"Bitcoin\",slug:\"bitcoin\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Bitcoin icon</title><path d=\"M23.638 14.904c-1.602 6.43-8.113 10.34-14.542 8.736C2.67 22.05-1.244 15.525.362 9.105 1.962 2.67 8.475-1.243 14.9.358c6.43 1.605 10.342 8.115 8.738 14.548v-.002zm-6.35-4.613c.24-1.59-.974-2.45-2.64-3.03l.54-2.153-1.315-.33-.525 2.107c-.345-.087-.705-.167-1.064-.25l.526-2.127-1.32-.33-.54 2.165c-.285-.067-.565-.132-.84-.2l-1.815-.45-.35 1.407s.975.225.955.236c.535.136.63.486.615.766l-1.477 5.92c-.075.166-.24.406-.614.314.015.02-.96-.24-.96-.24l-.66 1.51 1.71.426.93.242-.54 2.19 1.32.327.54-2.17c.36.1.705.19 1.05.273l-.51 2.154 1.32.33.545-2.19c2.24.427 3.93.257 4.64-1.774.57-1.637-.03-2.58-1.217-3.196.854-.193 1.5-.76 1.68-1.93h.01zm-3.01 4.22c-.404 1.64-3.157.75-4.05.53l.72-2.9c.896.23 3.757.67 3.33 2.37zm.41-4.24c-.37 1.49-2.662.735-3.405.55l.654-2.64c.744.18 3.137.524 2.75 2.084v.006z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://bitcoin.org/en\",hex:\"F7931A\"},Bitdefender:{title:\"Bitdefender\",slug:\"bitdefender\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Bitdefender icon</title><path d=\"M1.685 0v.357l1.232 1.046c1.477 1.204 1.67 1.439 1.67 2.526V24h8.646c4.537 0 9.083-1.629 9.083-6.849 0-3.082-2.174-5.458-5.186-5.797v-.067c2.475-.745 4.169-2.54 4.169-5.253 0-4.372-3.73-6.032-7.349-6.032L1.686 0zm7.176 3.664h3.524c2.383 0 3.121.327 3.844 1.013.548.521.799 1.237.801 2.07 0 .775-.267 1.466-.831 2.004-.705.676-1.674 1.011-3.443 1.011H8.862V3.664zm0 9.758h4.099c3.456 0 5.085.881 5.085 3.39 0 3.153-3.055 3.526-5.256 3.526H8.86v-6.916z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.bitdefender.com/funzone/logos.html\",hex:\"ED1C24\"},Bitly:{title:\"Bitly\",slug:\"bitly\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Bitly icon</title><path d=\"M13.055 21.26c-1.345.022-2.325-.41-2.386-1.585-.025-.44-.018-.91.002-1.192.137-1.716 1.333-2.95 2.53-3.19 1.482-.294 2.455.38 2.455 2.31 0 1.303-.36 3.618-2.59 3.657h-.016zM11.923 0C5.32 0 0 5.297 0 12.224c0 3.594 1.92 7.062 4.623 9.147.52.4 1.138.367 1.497.02.297-.285.272-.984-.285-1.475-2.16-1.886-3.652-4.76-3.652-7.635 0-5.15 4.58-9.49 9.74-9.49 6.28 0 9.636 5.102 9.636 9.43 0 2.65-1.29 5.84-3.626 7.874.015 0 .493-.942.493-2.784 0-3.13-1.976-4.836-4.28-4.836-1.663 0-2.667.598-3.34 1.152 0-1.272.045-3.652.045-3.652 0-1.572-.54-2.83-2.47-2.86-1.11-.015-1.932.493-2.44 1.647-.18.436-.12.916.254 1.125.3.18.81.046 1.046-.284.165-.21.254-.254.404-.24.24.03.257.405.257.66.014.193.193 2.903.088 9.865C7.98 21.798 9.493 24 13.1 24c1.56 0 2.756-.435 4.493-1.422C20.243 21.08 24 17.758 24 12.128 23.953 5.045 18.265 0 11.933 0\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://bitly.com/pages/press\",hex:\"EE6123\"},Bitrise:{title:\"Bitrise\",slug:\"bitrise\",svg:'<svg xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" viewBox=\"0 0 24 24\"><title>Bitrise icon</title><path d=\"M12 17.9c1.5 0 2.7-1.2 2.7-2.7H9.3C9.3 16.7 10.5 17.9 12 17.9zM6 12c-0.9 0-1.6 0.7-1.6 1.6h3.3C7.7 12.7 6.9 12 6 12zM12 4.1c0.6 0 1-0.5 1-1 0-0.6-0.5-1-1-1 -0.6 0-1 0.5-1 1C11 3.7 11.4 4.1 12 4.1zM23.5 13.4c-0.3-1.9-0.7-3.8-1-5 -0.4-1.5-1.6-2.6-3.2-2.7 -1.5-0.1-4-0.2-7.4-0.2 -3.3 0-5.8 0.1-7.4 0.2 -1.4 0.1-2.7 1.2-3 2.7 -0.3 1.3-0.7 3.2-1 5 -0.2 1.3-0.3 2.8-0.5 4.5 -0.1 0.9 0.2 1.9 0.9 2.6 0.6 0.7 1.5 1.1 2.4 1.2 2.1 0.1 5.3 0.2 8.7 0.2s6.6-0.1 8.7-0.2c0.9 0 1.8-0.5 2.4-1.2s0.9-1.6 0.9-2.6C23.9 16.2 23.7 14.7 23.5 13.4zM21.9 19.3c-0.3 0.4-0.8 0.6-1.3 0.6 -2.1 0.1-5.2 0.2-8.6 0.2S5.5 20 3.4 19.9c-0.5 0-1-0.2-1.3-0.6 -0.3-0.4-0.5-0.8-0.5-1.3 0.1-1.6 0.2-3.1 0.4-4.3 0.3-1.8 0.7-3.7 1-4.9C3.2 8 3.9 7.4 4.7 7.4c1.5-0.2 4-0.3 7.3-0.3s5.8 0.1 7.3 0.2c0.8 0 1.5 0.6 1.7 1.4 0.3 1.2 0.7 3.1 1 4.9 0.2 1.2 0.3 2.7 0.4 4.3C22.4 18.5 22.2 18.9 21.9 19.3zM18 12c-0.9 0-1.6 0.7-1.6 1.6h3.3C19.6 12.7 18.9 12 18 12z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.bitrise.io/presskit\",hex:\"683D87\"},Blackberry:{title:\"Blackberry\",slug:\"blackberry\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Blackberry icon</title><path d=\"M2.05 3.54L1.17 7.7H4.45C6.97 7.7 7.73 6.47 7.73 5.36C7.73 4.54 7.26 3.54 5.21 3.54H2.05M10.54 3.54L9.66 7.7H12.94C15.5 7.7 16.22 6.47 16.22 5.36C16.22 4.54 15.75 3.54 13.7 3.54H10.54M18.32 7.23L17.39 11.39H20.67C23.24 11.39 24 10.22 24 9.05C24 8.23 23.53 7.23 21.5 7.23H18.32M.88 9.8L0 13.96H3.28C5.85 13.96 6.56 12.73 6.56 11.62C6.56 10.8 6.09 9.8 4.04 9.8H.88M9.43 9.8L8.5 13.96H11.77C14.34 13.96 15.11 12.73 15.11 11.62C15.11 10.8 14.64 9.8 12.59 9.8H9.42M17.09 13.73L16.22 17.88H19.5C22 17.88 22.77 16.71 22.77 15.54C22.77 14.72 22.3 13.73 20.26 13.73H17.09M8.2 16.3L7.32 20.46H10.6C13.11 20.46 13.87 19.23 13.87 18.12C13.87 17.3 13.41 16.3 11.36 16.3H8.2Z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.blackberry.com/\",hex:\"000000\"},Blender:{title:\"Blender\",slug:\"blender\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Blender icon</title><path d=\"M12.51 13.214c.046-.8.438-1.506 1.03-2.006a3.424 3.424 0 0 1 2.212-.79c.85 0 1.631.3 2.211.79.592.5.983 1.206 1.028 2.005.045.823-.285 1.586-.865 2.153a3.389 3.389 0 0 1-2.374.938 3.393 3.393 0 0 1-2.376-.938c-.58-.567-.91-1.33-.865-2.152M7.35 14.831c.006.314.106.922.256 1.398a7.372 7.372 0 0 0 1.593 2.757 8.227 8.227 0 0 0 2.787 2.001 8.947 8.947 0 0 0 3.66.76 8.964 8.964 0 0 0 3.657-.772 8.285 8.285 0 0 0 2.785-2.01 7.428 7.428 0 0 0 1.592-2.762 6.964 6.964 0 0 0 .25-3.074 7.123 7.123 0 0 0-1.016-2.779 7.764 7.764 0 0 0-1.852-2.043h.002L13.566 2.55l-.02-.015c-.492-.378-1.319-.376-1.86.002-.547.382-.609 1.015-.123 1.415l-.001.001 3.126 2.543-9.53.01h-.013c-.788.001-1.545.518-1.695 1.172-.154.665.38 1.217 1.2 1.22V8.9l4.83-.01-8.62 6.617-.034.025c-.813.622-1.075 1.658-.563 2.313.52.667 1.625.668 2.447.004L7.414 14s-.069.52-.063.831zm12.09 1.741c-.97.988-2.326 1.548-3.795 1.55-1.47.004-2.827-.552-3.797-1.538a4.51 4.51 0 0 1-1.036-1.622 4.282 4.282 0 0 1 .282-3.519 4.702 4.702 0 0 1 1.153-1.371c.942-.768 2.141-1.183 3.396-1.185 1.256-.002 2.455.41 3.398 1.175.48.391.87.854 1.152 1.367a4.28 4.28 0 0 1 .522 1.706 4.236 4.236 0 0 1-.239 1.811 4.54 4.54 0 0 1-1.035 1.626\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.blender.org/about/logo/\",hex:\"F5792A\"},Blogger:{title:\"Blogger\",slug:\"blogger\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Blogger icon</title><path d=\"M21.976 24H2.026C.9 24 0 23.1 0 21.976V2.026C0 .9.9 0 2.025 0H22.05C23.1 0 24 .9 24 2.025v19.95C24 23.1 23.1 24 21.976 24zM12 3.975H9c-2.775 0-5.025 2.25-5.025 5.025v6c0 2.774 2.25 5.024 5.025 5.024h6c2.774 0 5.024-2.25 5.024-5.024v-3.975c0-.6-.45-1.05-1.05-1.05H18c-.524 0-.976-.45-.976-.976 0-2.776-2.25-5.026-5.024-5.026zm3.074 12H9c-.525 0-.975-.45-.975-.975s.45-.976.975-.976h6.074c.526 0 .977.45.977.976s-.45.976-.975.976zm-2.55-7.95c.527 0 .976.45.976.975s-.45.975-.975.975h-3.6c-.525 0-.976-.45-.976-.975s.45-.975.975-.975h3.6z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.blogger.com\",hex:\"FF5722\"},\"BMC Software\":{title:\"BMC Software\",slug:\"bmcsoftware\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>BMC Software icon</title><path d=\"M6.389 23.97c-.948 0-1.946-.747-1.946-2.194v-3.392c0-1.346.848-2.892 2.045-3.54l4.739-2.794-4.739-2.793c-1.147-.749-2.045-2.245-2.045-3.592V2.224C4.443.777 5.441.029 6.44.029c.399 0 .847.1 1.246.35L18.36 6.712c.748.449 1.147 1.147 1.147 1.845 0 .749-.45 1.447-1.147 1.846L15.816 11.9l2.544 1.497c.748.449 1.197 1.147 1.197 1.845 0 .748-.45 1.447-1.197 1.846L7.685 23.622c-.448.25-.847.349-1.296.349zm7.132-10.573l-5.836 3.441c-.448.25-.897 1.048-.897 1.546v3.043l10.125-5.985zM6.788 2.623v3.042c0 .5.449 1.297.897 1.547l5.836 3.441 3.442-2.045z\"/></svg> ',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.bmc.com/\",hex:\"FE5000\"},Boeing:{title:\"Boeing\",slug:\"boeing\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Boeing icon</title><path d=\"M6.905 17.353a6.051 6.051 0 0 1-3.759-1.301C4.35 13.337 6.8 9.694 10.143 6.136a6.07 6.07 0 0 1 2.262 7.728c-1.06-.49-2.05-1.105-2.888-1.88l1.831 3.438a6.058 6.058 0 0 1-4.443 1.931M.83 11.278a6.075 6.075 0 0 1 6.076-6.077c.9 0 1.752.196 2.522.546-3.293 2.91-5.843 6.293-7.352 9.217A6.051 6.051 0 0 1 .83 11.278m12.34 2.912a6.862 6.862 0 0 0 .642-2.912c0-2.4-1.225-4.515-3.085-5.753a49.606 49.606 0 0 1 3.583-3.342 31.172 31.172 0 0 0-4.2 2.975 6.907 6.907 0 0 0-8.436 10.625C.35 18.646.12 20.944 1.286 21.72c1.248.832 3.962-.677 5.59-3.134 0 0-2.518 2.273-3.902 1.751-.851-.322-.854-1.624-.152-3.492a6.871 6.871 0 0 0 4.084 1.338c1.893 0 3.606-.76 4.853-1.992l.245.462C15.013 16.408 24 16.17 24 16.17c0-.431-5.95-.04-10.832-1.98\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://upload.wikimedia.org/wikipedia/commons/4/4f/Boeing_full_logo.svg\",hex:\"1D439C\"},Boost:{title:\"Boost\",slug:\"boost\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Boost icon</title><path d=\"M15.818 18.157c.058-.045.112-.099.163-.15a2.28 2.28 0 0 0 0-3.169l-7.802-8c-.054.05-.109.099-.16.152a2.278 2.278 0 0 0 0 3.17l7.799 7.997zm5.727-11.399a2.957 2.957 0 0 1 1.573.873c1.176 1.24 1.176 3.25 0 4.49l-5.557 5.847a2.145 2.145 0 0 1-1.298.637L19.567 22l-17.11-3.758a2.998 2.998 0 0 1-1.572-.878c-1.18-1.237-1.18-3.248 0-4.494l5.552-5.838a2.129 2.129 0 0 1 1.303-.643L4.434 3l17.11 3.758z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.boostmobile.com/\",hex:\"F69220\"},Bootstrap:{title:\"Bootstrap\",slug:\"bootstrap\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Bootstrap icon</title><path d=\"M20 0H4C1.793.006.006 1.793 0 4v16c0 2.2 1.8 4 4 4h16c2.2 0 4-1.8 4-4V4c0-2.2-1.8-4-4-4zm-2.187 16.855c-.2.482-.517.907-.923 1.234-.42.34-.952.62-1.607.82-.654.203-1.432.305-2.333.305H6.518v-14h6.802c1.258 0 2.266.283 3.02.86.76.58 1.138 1.444 1.138 2.61 0 .705-.172 1.31-.518 1.81-.344.497-.84.886-1.48 1.156v.046c.854.18 1.515.585 1.95 1.215s.658 1.426.658 2.387c0 .538-.104 1.05-.3 1.528l.025.027zm-2.776-3.45c-.41-.375-.986-.558-1.73-.558H8.985v4.368h4.334c.74 0 1.32-.192 1.73-.58.41-.385.62-.934.62-1.64-.007-.69-.21-1.224-.62-1.59h-.017zm-.6-2.823c.396-.336.59-.817.59-1.444 0-.704-.175-1.204-.53-1.49-.352-.285-.86-.433-1.528-.433h-4v3.863h4c.583 0 1.08-.17 1.464-.496z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://getbootstrap.com/about\",hex:\"563D7C\"},Bower:{title:\"Bower\",slug:\"bower\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Bower icon</title><path d=\"M23.54157 11.3053c-1.2341-1.18676-7.40717-1.92715-9.35444-2.14222.0943-.22248.1748-.45344.24155-.69076.26593-.11654.55198-.2246.84863-.31466.03603.107.2066.5149.303.70878 3.9168.10806 4.1181-2.91032 4.27702-3.73775.15574-.80837.14832-1.59025 1.4917-3.0184-2.0013-.58375-4.87983.90372-5.84393 3.11798-.36234-.1356-.72574-.23626-1.0849-.2977C14.16277 3.8923 12.82257 1 9.30624 1c-2.27782 0-4.5747.9408-6.30162 2.58083-.9302.88358-1.6612 1.93244-2.17293 3.11903C.2797 7.98073 0 9.39086 0 10.8921c0 5.22735 3.56824 9.80736 5.58437 9.80736.8804 0 1.63792-.65898 1.8159-1.25015.1494.40578.606 1.66547.75645 1.98542.2225.47464 1.2491.88465 1.6983.392.5774.32102 1.63792.51384 2.21532-.3422 1.11243.2352 2.09666-.42802 2.11785-1.2205.5456-.0286.81365-.79564.695-1.40588-.08794-.4492-1.02662-2.06276-1.3932-2.61897.72468.5901 2.56177.75645 2.78425 0 1.16858.91748 2.99084.4365 3.13492-.31042 1.42073.3687 3.0491-.4418 2.78213-1.42285 2.28206-.15785 1.99026-2.58515 1.35027-3.2006zM17.5991 7.2815c-.6007-.23626-1.363-.38565-1.89696-.38565-.7575 0-1.21943.42908-1.93244.42908-.14938 0-.50642.00106-.79353-.1017.1886.1981.42273.30512.87723.30512.27122 0 .80942-.1388 1.24486-.2691.00635.09217.0159.18222.0286.27334-.81578.19493-1.6718.71406-1.91973.8486-.5509-1.2173-.07734-2.36787.36022-2.89865 1.9621.00423 3.54757 1.35186 4.03174 1.79895zm.84915-.09112l-.29983-.28075c-.3083-.28923-.6293-.54986-.95986-.78188.4916-.9747 1.10925-2.03945 1.889-2.69842-.85815.34644-1.70678 1.38046-2.2079 2.48547-.25532-.1621-.5149-.30724-.77658-.43332.69924-1.49276 2.32338-2.73868 4.11386-2.83615-1.1993 1.08806-.74903 3.25782-1.75975 4.544l.00105.00105zM15.9845 8.20693c-.13244-.2871-.2654-.76228-.2495-1.04197.22247-.0053.6505.0784.7183.0943-.0265.13136-.04026.41953-.04026.4566.04238-.0731.15997-.32418.20765-.42377.428.08157.99058.21824 1.32007.37186-.38776.2511-1.04515.5239-1.95628.54297zm-7.07214-1.9516c-.48483-.1739-.48483-.61095 0-.78484.48484-.1739 1.09417.04464 1.09417.3924 0 .34777-.60933.5663-1.09417.39242zm1.61647.1622c0-.96003-1.04643-1.5633-1.87905-1.0833-.83262.48002-.83262 1.68657 0 2.16658.83262.48003 1.87905-.12325 1.87905-1.08328zm2.7832-1.5749c-1.56482 1.586-.94716 3.5926-.37718 4.49844-.81048 1.3487-2.4039 2.2704-4.25476 2.68995 2.07758 0 3.3002-.53502 4.01108-1.0584.45345-.33478.69924-.66427.8253-.84755 3.0809.19917 7.95862 1.19188 8.43432 1.5129.1907.12925.38776.41424.41742.68758-2.3149-.3242-6.4881-.66534-7.58038-.72255.77552.1102 6.433 1.1813 7.41405 1.43238-.29878.4863-.97895.8306-2.00344.59118.5541.75433-.52125 1.6591-2.01932 1.16116.3295.74056-1.0033 1.40695-2.51938.63567.01907.74055-1.88052.82636-2.63062.0074.01484.09748.10383.28394.14197.36658-.24155 2.1634-2.014 3.50573-3.82885 3.50573-4.44335 0-8.3146-3.60955-8.3146-8.411 0-5.07582 3.75154-8.86443 8.27858-8.86443 2.59354 0 3.7653 2.04157 4.0058 2.81497z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://bower.io/docs/about/#brand\",hex:\"EF5734\"},Box:{title:\"Box\",slug:\"box\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Box icon</title><path d=\"M.959 5.523c-.54 0-.959.42-.959.899v7.549a4.59 4.59 0 004.613 4.494 4.717 4.717 0 004.135-2.457c.779 1.438 2.337 2.457 4.074 2.457 2.577 0 4.674-2.037 4.674-4.613.06-2.457-2.037-4.495-4.613-4.495-1.738 0-3.295.959-4.074 2.397-.78-1.438-2.338-2.397-4.135-2.397-1.079 0-2.038.36-2.817.899V6.422a.92.92 0 00-.898-.899zM17.602 9.26a.95.95 0 00-.704.158c-.36.3-.479.899-.18 1.318l2.397 3.116-2.396 3.115c-.3.42-.24.96.18 1.26.419.3 1.016.298 1.316-.122l2.039-2.636 2.096 2.697c.3.36.899.419 1.318.12.36-.3.42-.84.121-1.259l-2.338-3.115 2.338-3.057c.3-.419.298-1.018-.121-1.318-.48-.3-1.019-.24-1.318.18l-2.096 2.576-2.04-2.695c-.149-.18-.373-.3-.612-.338zM4.613 11.154c1.558 0 2.817 1.26 2.817 2.758 0 1.558-1.259 2.756-2.817 2.756-1.558 0-2.816-1.198-2.816-2.756 0-1.498 1.258-2.758 2.816-2.758zm8.27 0c1.558 0 2.816 1.26 2.816 2.758-.06 1.558-1.318 2.756-2.816 2.756-1.558 0-2.817-1.198-2.817-2.756 0-1.498 1.259-2.758 2.817-2.758Z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.box.com/en-gb/about-us/press\",hex:\"0061D5\"},\"Brand.ai\":{title:\"Brand.ai\",slug:\"brand-dot-ai\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Brand.ai icon</title><path d=\"M23.958 11.26C23.58 5.004 18.404.045 12.062.006h-.142C9.68.022 7.584.646 5.795 1.73c-1.652.998-3.043 2.384-4.048 4.033C.76 7.378.15 9.25.023 11.253.008 11.5 0 11.747 0 12c0 .25.01.5.025.746.123 2.003.734 3.873 1.723 5.49 1 1.648 2.384 3.03 4.024 4.033 1.798 1.074 3.897 1.705 6.13 1.72h.18c6.343-.043 11.498-4.99 11.89-11.24.014-.24.03-.496.03-.735s0-.495-.016-.734l-.027-.022zm-11.956 4.38v3.83c.096 2.34-.57 2.73-1.37 2.766-.034 0-.066.003-.1.004-4.556-.645-8.158-4.257-8.784-8.823-.066-.464-.1-.938-.1-1.42 0-.48.034-.953.1-1.418.625-4.56 4.218-8.17 8.77-8.82l.115.01c.8.043 1.465.43 1.37 2.764v3.828c-.01 1.573.895 3.072 1.857 3.64-.962.56-1.868 1.875-1.858 3.634z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://brand.ai/brand-ai/style\",hex:\"0AA0FF\"},Brandfolder:{title:\"Brandfolder\",slug:\"brandfolder\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Brandfolder icon</title><path d=\"M0,23.291h19.601v-2.978H2.98V3.689h16.626v10.911h-1.422l2.908,2.909L24,14.599 h-1.417V0.709H0V23.291z M16.148,13.356c-0.191-0.406-0.432-0.739-0.72-0.997c-0.287-0.258-0.599-0.454-0.933-0.583 c-0.337-0.132-0.641-0.217-0.916-0.254c0.251-0.034,0.496-0.134,0.735-0.296c0.241-0.161,0.455-0.364,0.647-0.609 c0.192-0.247,0.345-0.535,0.458-0.863c0.115-0.33,0.171-0.686,0.171-1.069c0-0.648-0.126-1.186-0.377-1.617 c-0.252-0.432-0.597-0.775-1.033-1.033c-0.436-0.258-0.948-0.44-1.536-0.547c-0.586-0.108-1.21-0.162-1.868-0.162 c-0.754,0-1.382,0.018-1.887,0.054C8.387,5.417,7.944,5.463,7.56,5.525v12.933c0.684,0.083,1.293,0.141,1.834,0.171 c0.539,0.03,1.082,0.044,1.634,0.044c0.718,0,1.404-0.054,2.057-0.162c0.652-0.107,1.227-0.304,1.723-0.592 c0.499-0.288,0.893-0.68,1.187-1.177c0.294-0.498,0.441-1.135,0.441-1.914C16.436,14.253,16.34,13.763,16.148,13.356z M10.165,7.321c0.91-0.111,1.873-0.054,2.301,0.304c0.38,0.317,0.607,0.599,0.607,1.42c0,0.751-0.357,1.195-0.608,1.356 c-0.251,0.161-0.59,0.368-1.403,0.368s-0.897,0-0.897,0V7.321z M13.194,16.001c-0.449,0.39-1.114,0.552-1.816,0.552 c-0.79,0-1.213-0.072-1.213-0.072v-3.737h1.132c0.711,0,1.438,0.126,1.832,0.464c0.509,0.437,0.611,0.895,0.611,1.505 C13.741,15.322,13.528,15.711,13.194,16.001z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://brandfolder.com/brandfolder\",hex:\"40D1F5\"},Brave:{title:\"Brave\",slug:\"brave\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Brave icon</title><path d=\"M21.618 6.028l.623 1.786a.5.5 0 0 1 .011.289l-.025.097-.072.274-.257.979-.781 2.972c-.613 2.337-1.015 3.876-1.112 4.259-.527 2.087-.945 2.812-2.296 3.766-1.184.836-3.653 2.514-4.128 2.811a4.76 4.76 0 0 0-.162.107l-.187.128a4.07 4.07 0 0 1-.573.34c-.225.105-.44.164-.659.164s-.434-.059-.659-.164a4.07 4.07 0 0 1-.573-.34l-.187-.128a6.998 6.998 0 0 0-.162-.107c-.475-.298-2.944-1.975-4.128-2.811-1.351-.954-1.769-1.679-2.296-3.766-.097-.383-.499-1.922-1.107-4.242l-.785-2.99-.257-.979-.072-.274-.025-.097a.5.5 0 0 1 .011-.289l.623-1.786-.467-1.152a.495.495 0 0 1 .096-.523l.122-.13c.097-.103.207-.22.329-.347.346-.363.71-.738 1.077-1.105.351-.352.823-.542 1.374-.607a4.566 4.566 0 0 1 1.388.067L8.113.167a.491.491 0 0 1 .37-.168h7.038c.142 0 .276.061.37.168l1.811 2.063a4.565 4.565 0 0 1 1.388-.067c.552.065 1.023.254 1.374.607a78.307 78.307 0 0 1 1.495 1.548c.163.175.2.379.128.557l-.467 1.152zm-.992.149a.494.494 0 0 1 .009-.349l.418-1.031-.226-.238a66.931 66.931 0 0 0-1.062-1.09c-.174-.174-.442-.282-.791-.323a3.626 3.626 0 0 0-1.033.046c-.08.014-.153.029-.216.044l-.069.017a.49.49 0 0 1-.502-.15L15.297.988H8.704L6.847 3.103a.494.494 0 0 1-.502.15 3.871 3.871 0 0 0-.285-.061 3.663 3.663 0 0 0-1.033-.046c-.349.041-.618.149-.791.323a71.363 71.363 0 0 0-1.288 1.328l.418 1.031a.5.5 0 0 1 .009.349l-.634 1.82.059.225.257.979.781 2.973a879.38 879.38 0 0 1 1.114 4.268c.474 1.878.776 2.401 1.908 3.201 1.17.827 3.627 2.495 4.083 2.782.057.036.117.075.192.127l.187.128c.191.129.318.207.436.262.105.049.187.071.243.071s.137-.022.243-.071c.118-.055.246-.133.436-.262l.187-.128c.076-.051.135-.091.192-.127.456-.286 2.913-1.955 4.083-2.782 1.132-.8 1.434-1.323 1.908-3.201.098-.388.499-1.925 1.11-4.251l.785-2.99.257-.979.059-.225-.634-1.82zm-3.665-1.953s2.578 3.128 2.578 3.796-.324.845-.65 1.192l-1.933 2.06c-.183.195-.563.49-.34 1.022s.554 1.209.187 1.895c-.367.686-.997 1.145-1.4 1.069s-1.35-.573-1.698-.799-1.452-1.141-1.452-1.49c0-.35 1.141-.977 1.352-1.12s1.172-.695 1.192-.911c.02-.217.012-.28-.272-.816s-.795-1.25-.71-1.725c.085-.475.909-.722 1.497-.945s1.72-.644 1.862-.709c.141-.066.105-.128-.324-.169s-1.644-.203-2.192-.049-1.485.387-1.56.51c-.076.124-.143.128-.065.555s.479 2.475.518 2.839c.039.364.115.604-.276.694s-1.049.245-1.275.245-.884-.156-1.275-.245c-.391-.09-.315-.33-.276-.694s.44-2.412.518-2.839c.078-.427.011-.431-.065-.555s-1.012-.357-1.56-.51-1.764.009-2.192.049c-.428.041-.465.103-.324.169s1.274.486 1.862.709c.588.223 1.412.47 1.497.945s-.426 1.19-.71 1.725c-.284.535-.291.599-.272.816s.981.769 1.192.911c.211.143 1.352.77 1.352 1.12s-1.104 1.263-1.452 1.49-1.295.724-1.698.799c-.403.076-1.033-.382-1.4-1.069s-.037-1.363.187-1.895-.157-.827-.34-1.022l-1.933-2.06c-.326-.347-.65-.524-.65-1.192 0-.668 2.578-3.796 2.578-3.796s2.175.417 2.468.417c.293 0 .929-.245 1.515-.442S12 4.001 12 4.001s.391.001.978.198 1.222.442 1.515.442c.293 0 2.468-.417 2.468-.417zm-1.932 11.964c.16.1.062.289-.083.392s-2.098 1.621-2.288 1.789c-.19.168-.468.445-.658.445s-.468-.277-.658-.445c-.19-.168-2.143-1.686-2.288-1.789s-.243-.292-.083-.392c.16-.1.659-.353 1.348-.711s1.547-.662 1.681-.662.992.304 1.681.662c.689.358 1.188.611 1.347.711z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://brave.com/brave-branding-assets/\",hex:\"FB542B\"},Breaker:{title:\"Breaker\",slug:\"breaker\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Breaker icon</title><path d=\"M13.556,12.924c0.21,0,0.386,0.017,0.585,0.056c1.043,0.206,1.898,0.964,2.246,1.956 c0.101,0.319,0.234,0.797,0.319,1.125l0.111,0.433l0.446-0.009c3.552-0.075,6.456-2.965,6.456-6.546C23.72,4.513,19.195,0,12.281,0 C9.429,0.009,6.725,1.046,4.678,2.715c-2.683,2.2-4.397,5.543-4.397,9.286c0.002,0.96,0.118,1.926,0.334,2.818 c0.788,3.268,2.91,6.015,5.759,7.628c1.723,0.971,3.784,1.547,5.909,1.553c0.521,0,1.052-0.036,1.554-0.099 c3.126-0.405,5.873-2.012,7.765-4.339l0.124-0.152l-0.24-0.868l-0.463,0.122c-1.436,0.381-2.908,0.578-4.463,0.576 c-1.243,0-2.428-0.128-3.598-0.375c-1.054-0.212-1.911-0.979-2.248-1.98c-0.109-0.315-0.158-0.608-0.156-0.958 c-0.011-0.782,0.257-1.425,0.741-1.975C11.848,13.321,12.656,12.924,13.556,12.924z M12.281,1.125 c6.398,0,10.313,4.11,10.313,8.813c0,2.811-2.168,5.119-4.919,5.397c-0.073-0.261-0.152-0.536-0.219-0.746 C15.715,9.132,11.567,4.907,6.23,2.957C7.965,1.78,10.01,1.118,12.281,1.125z M1.405,12.001c0-3.283,1.455-6.227,3.756-8.223 c4.377,1.403,7.964,4.397,10.058,8.371c-0.272-0.12-0.559-0.212-0.859-0.272c-1.219-0.253-2.511-0.394-3.807-0.394 c-3.24,0.006-6.345,0.859-9.001,2.325C1.454,13.222,1.405,12.625,1.405,12.001z M12.729,19.967 c1.224,0.257,2.526,0.398,3.829,0.398c0.996,0,1.986-0.083,2.948-0.234c-1.519,1.352-3.418,2.282-5.519,2.614 c-0.799-0.938-1.493-1.95-2.072-3.032C12.174,19.822,12.446,19.908,12.729,19.967z M12.645,22.871 c-0.12,0.004-0.242,0.006-0.364,0.006c-1.825,0.006-3.486-0.424-4.994-1.209c0.433-1.907,1.172-3.675,2.171-5.277 c0.034,0.294,0.099,0.587,0.186,0.848C10.314,19.28,11.347,21.202,12.645,22.871z M10.453,13.207 c-1.954,2.19-3.43,4.913-4.176,7.864c-2.143-1.421-3.752-3.582-4.467-6.117c2.586-1.508,5.532-2.351,8.744-2.346 c0.18,0,0.358,0.002,0.536,0.008C10.858,12.79,10.644,12.987,10.453,13.207z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.breaker.audio/i/brand\",hex:\"003DAD\"},Broadcom:{title:\"Broadcom\",slug:\"broadcom\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Broadcom icon</title><path d=\"M12 0C5.37 0 0 5.37 0 12A12 12 0 0 0 .574 15.62C.848 15.5 1.14 15.36 1.43 15.24C2.8 14.7 4.06 14.88 5.31 15.64C5.31 15.64 5.77 15.92 5.91 16C6.5 16.38 7.05 16.73 7.58 16.73C8.09 16.73 8.59 16.59 8.8 15.61C9.13 14.08 9.94 10.31 10.29 8.45C10.5 7.35 10.61 6.76 10.73 6.36C10.93 5.65 11.31 5.27 11.84 5.21C11.84 5.21 11.93 5.2 12 5.2C12.07 5.2 12.15 5.21 12.15 5.21C12.69 5.27 13.07 5.65 13.28 6.36C13.39 6.76 13.5 7.35 13.71 8.45C14.06 10.31 14.87 14.08 15.2 15.61C15.41 16.59 15.91 16.73 16.42 16.73C16.95 16.73 17.5 16.38 18.09 16C18.23 15.92 18.69 15.64 18.69 15.64C19.95 14.88 21.2 14.7 22.57 15.24C22.87 15.36 23.16 15.5 23.44 15.63A12 12 0 0 0 24 12C24 5.37 18.63 0 12 0M12 9.79C11.6 11.8 11 14.71 10.7 16C10.34 17.7 9.2 18.66 7.58 18.66C6.5 18.66 5.64 18.12 4.88 17.65C4.5 17.4 4.08 17.13 3.63 17A2.32 2.32 0 0 0 2.21 16.97A6.11 6.11 0 0 0 1.27 17.36A12 12 0 0 0 12 24A12 12 0 0 0 22.73 17.35A6.08 6.08 0 0 0 21.79 16.96A2.32 2.32 0 0 0 20.38 16.97C19.92 17.13 19.5 17.4 19.12 17.65C18.36 18.12 17.5 18.66 16.42 18.66C14.8 18.66 13.67 17.7 13.3 16C13 14.71 12 9.79 12 9.79Z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://en.wikipedia.org/wiki/Broadcom_Inc\",hex:\"CC092F\"},Buddy:{title:\"Buddy\",slug:\"buddy\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Buddy icon</title><path d=\"M21.7 5.307L12.947.253a1.892 1.892 0 0 0-1.891 0L2.3 5.306a1.892 1.892 0 0 0-.945 1.638v10.109c0 .675.36 1.3.945 1.637l8.756 5.056a1.892 1.892 0 0 0 1.89 0l8.756-5.055c.585-.338.945-.962.945-1.638V6.945c0-.675-.36-1.3-.945-1.638zm-7.45 7.752l-3.804 3.804-1.351-1.351 3.804-3.805-3.804-3.805 1.351-1.35 3.804 3.804 1.351 1.351-1.35 1.352z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://buddy.works/about\",hex:\"1A86FD\"},Buffer:{title:\"Buffer\",slug:\"buffer\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Buffer icon</title><path d=\"M23.784 18.24c.287.142.287.267 0 .374l-11.357 5.223c-.287.145-.57.145-.854 0L.213 18.614c-.284-.107-.284-.232 0-.375l2.722-1.23c.284-.14.57-.14.852 0l7.787 3.573c.285.14.57.14.854 0l7.787-3.574c.283-.14.568-.14.852 0l2.717 1.23zm0-6.454c.287.143.287.285 0 .426L12.427 17.44c-.287.104-.57.104-.854 0L.213 12.21c-.284-.143-.284-.284 0-.426l2.722-1.227c.284-.144.57-.144.852 0l7.787 3.57c.285.144.57.144.854 0l7.787-3.57c.283-.144.568-.144.852 0l2.717 1.226zM.214 5.76c-.285-.143-.285-.267 0-.375L11.574.16c.283-.14.57-.14.852 0l11.358 5.23c.287.107.287.232 0 .375l-11.357 5.223c-.287.143-.57.143-.854 0L.213 5.76z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://buffer.com/press\",hex:\"168EEA\"},\"Buy Me A Coffee\":{title:\"Buy Me A Coffee\",slug:\"buymeacoffee\",svg:'<svg xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" viewBox=\"0 0 24 24\"><title>Buy Me A Coffee icon</title><path d=\"M6.898 0L5.682 2.799H3.877v2.523h.695L5.277 9.8H4.172l1.46 8.23.938-.01L7.512 24h8.918l.062-.4.88-5.58.888.01 1.46-8.231h-1.056l.705-4.477h.756V2.8h-1.918L16.99 0H6.898zm.528.805h9.043l.771 1.78H6.652l.774-1.78zm-2.75 2.797H19.32v.92H4.676v-.92zm.453 6.998h13.635l-1.176 6.62-5.649-.06-5.636.06-1.174-6.62z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.buymeacoffee.com/brand\",hex:\"FF813F\"},BuzzFeed:{title:\"BuzzFeed\",slug:\"buzzfeed\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>BuzzFeed icon</title><path d=\"M24 12c0 6.627-5.373 12-12 12S0 18.627 0 12 5.373 0 12 0s12 5.373 12 12zm-4.148-.273l-.977-6.94-6.5 2.624 2.575 1.487-2.435 4.215L8.3 10.68l-4.153 7.19 2.327 1.346 2.812-4.868L13.5 16.78l3.777-6.54 2.575 1.487z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://www.buzzfeed.com/press/downloads\",hex:\"EE3322\"},C:{title:\"C\",slug:\"c\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>C icon</title><path d=\"M17.023 9.216s-.386-3.293-3.955-3.385c-3.57-.091-5.402 2.47-5.402 6.13 0 3.66 2.026 6.588 5.498 6.588 3.473 0 3.86-3.66 3.86-3.66l6.656.366s.391 3.306-2.394 5.828C18.5 23.605 15.082 24.017 12.694 24c-2.388-.018-5.698.034-8.9-2.969C.595 18.03.05 15.113.05 12.248c0-2.866.607-6.661 4.414-9.54C7.05.754 9.673.033 12.296.033 23.246.032 23.98 9.28 23.98 9.28z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://commons.wikimedia.org/wiki/File:The_C_Programming_Language_logo.svg\",hex:\"A8B9CC\"},CakePHP:{title:\"CakePHP\",slug:\"cakephp\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>CakePHP icon</title><path d=\"M0 13.875v3.745c0 2.067 5.37 3.743 12 3.743V17.62c-6.63 0-12-1.68-12-3.743v-.002zm21.384 2.333L12 13.875v3.745l9.384 2.333C23.02 19.313 24 18.503 24 17.62v-3.745c0 .882-.98 1.692-2.616 2.333zM12 10.133v3.742c-6.627 0-12-1.677-12-3.744V6.38c0-2.064 5.37-3.743 12-3.743 6.625 0 12 1.68 12 3.744v3.75c0 .883-.98 1.69-2.616 2.334L12 10.13v.003z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://cakephp.org/logos\",hex:\"D33C43\"},\"Campaign Monitor\":{title:\"Campaign Monitor\",slug:\"campaignmonitor\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Campaign Monitor icon</title><path d=\"M23.836 4.27c-.29-.413-.86-.515-1.273-.226L.163 19.73c.167.235.437.39.747.39h22.18c.503 0 .91-.41.91-.914V4.78c-.004-.176-.058-.352-.164-.51zm-22.4-.226c-.413-.29-.982-.19-1.272.226-.107.154-.162.332-.164.51v14.45l10.664-8.736-9.227-6.45v-.002z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.campaignmonitor.com/brand\",hex:\"509CF6\"},Canva:{title:\"Canva\",slug:\"canva\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Canva icon</title><path d=\"M12 0C5.373 0 0 5.373 0 12s5.373 12 12 12 12-5.373 12-12S18.627 0 12 0zM6.962 7.68c.754 0 1.337.549 1.405 1.2.069.583-.171 1.097-.822 1.406-.343.171-.48.172-.549.069-.034-.069 0-.137.069-.206.617-.514.617-.926.548-1.508-.034-.378-.308-.618-.583-.618-1.2 0-2.914 2.674-2.674 4.629.103.754.549 1.646 1.509 1.646.308 0 .65-.103.96-.24.5-.264.799-.47 1.097-.8-.073-.885.704-2.046 1.851-2.046.515 0 .926.205.96.583.068.514-.377.582-.514.582s-.378-.034-.378-.17c-.034-.138.309-.07.275-.378-.035-.206-.24-.274-.446-.274-.72 0-1.131.994-1.029 1.611.035.275.172.549.447.549.205 0 .514-.31.617-.755.068-.308.343-.514.583-.514.102 0 .17.034.205.171v.138c-.034.137-.137.548-.102.651 0 .069.034.171.17.171.092 0 .436-.18.777-.459.117-.59.253-1.298.253-1.357.034-.24.137-.48.617-.48.103 0 .171.034.205.171v.138l-.136.617c.445-.583 1.097-.994 1.508-.994.172 0 .309.102.309.274 0 .103 0 .274-.069.446-.137.377-.309.96-.412 1.474 0 .137.035.274.207.274.171 0 .685-.206 1.096-.754l.007-.004c-.002-.068-.007-.134-.007-.202 0-.411.035-.754.104-.994.068-.274.411-.514.617-.514.103 0 .205.069.205.171 0 .035 0 .103-.034.137-.137.446-.24.857-.24 1.269 0 .24.034.582.102.788 0 .034.035.069.07.069.068 0 .548-.445.89-1.028-.308-.206-.48-.549-.48-.96 0-.72.446-1.097.858-1.097.343 0 .617.24.617.72 0 .308-.103.65-.274.96h.102a.77.77 0 0 0 .584-.24.293.293 0 0 1 .134-.117c.335-.425.83-.74 1.41-.74.48 0 .924.205.959.582.068.515-.378.618-.515.618l-.002-.002c-.138 0-.377-.035-.377-.172 0-.137.309-.068.274-.376-.034-.206-.24-.275-.446-.275-.686 0-1.13.891-1.028 1.611.034.275.171.583.445.583.206 0 .515-.308.652-.754.068-.274.343-.514.583-.514.103 0 .17.034.205.171 0 .069 0 .206-.137.652-.17.308-.171.48-.137.617.034.274.171.48.309.583.034.034.068.102.068.102 0 .069-.034.138-.137.138-.034 0-.068 0-.103-.035-.514-.205-.72-.548-.789-.891-.205.24-.445.377-.72.377-.445 0-.89-.411-.96-.926a1.609 1.609 0 0 1 .075-.649c-.203.13-.422.203-.623.203h-.17c-.447.652-.927 1.098-1.27 1.303a.896.896 0 0 1-.377.104c-.068 0-.171-.035-.205-.104-.095-.152-.156-.392-.193-.667-.481.527-1.145.805-1.453.805-.343 0-.548-.206-.582-.55v-.376c.102-.754.377-1.2.377-1.337a.074.074 0 0 0-.069-.07c-.24 0-1.028.824-1.166 1.373l-.103.445c-.068.309-.377.515-.582.515-.103 0-.172-.035-.206-.172v-.137l.046-.233c-.435.31-.87.508-1.075.508-.308 0-.48-.172-.514-.412-.206.274-.445.412-.754.412-.352 0-.696-.24-.862-.593-.244.275-.523.553-.852.764-.48.309-1.028.549-1.68.549-.582 0-1.097-.309-1.371-.583-.412-.377-.651-.96-.686-1.509-.205-1.68.823-3.84 2.4-4.8.378-.205.755-.343 1.132-.343zm9.77 3.291c-.104 0-.172.172-.172.343 0 .274.137.583.309.755a1.74 1.74 0 0 0 .102-.583c0-.343-.137-.515-.24-.515z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.canva.com/\",hex:\"00C4CC\"},\"Cash App\":{title:\"Cash App\",slug:\"cashapp\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Cash App icon</title><path d=\"M23.59 3.47A5.1 5.1 0 0 0 20.54.42C19.23 0 18.04 0 15.62 0H8.36c-2.4 0-3.61 0-4.9.4A5.1 5.1 0 0 0 .41 3.46C0 4.76 0 5.96 0 8.36v7.27c0 2.41 0 3.6.4 4.9a5.1 5.1 0 0 0 3.05 3.05c1.3.41 2.5.41 4.9.41h7.28c2.41 0 3.61 0 4.9-.4a5.1 5.1 0 0 0 3.06-3.06c.41-1.3.41-2.5.41-4.9V8.38c0-2.41 0-3.61-.41-4.91zM17.42 8.1l-.93.93a.5.5 0 0 1-.67.01 5 5 0 0 0-3.22-1.18c-.97 0-1.94.32-1.94 1.21 0 .9 1.04 1.2 2.24 1.65 2.1.7 3.84 1.58 3.84 3.64 0 2.24-1.74 3.78-4.58 3.95l-.26 1.2a.49.49 0 0 1-.48.39H9.63l-.09-.01a.5.5 0 0 1-.38-.59l.28-1.27a6.54 6.54 0 0 1-2.88-1.57v-.01a.48.48 0 0 1 0-.68l1-.97a.49.49 0 0 1 .67 0c.91.86 2.13 1.34 3.39 1.32 1.3 0 2.17-.55 2.17-1.42 0-.87-.88-1.1-2.54-1.72-1.76-.63-3.43-1.52-3.43-3.6 0-2.42 2.01-3.6 4.39-3.71l.25-1.23a.48.48 0 0 1 .48-.38h1.78l.1.01c.26.06.43.31.37.57l-.27 1.37c.9.3 1.75.77 2.48 1.39l.02.02c.19.2.19.5 0 .68z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://cash.app/press\",hex:\"00C244\"},Castorama:{title:\"Castorama\",slug:\"castorama\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Castorama icon</title><path d=\"M8.91 16.106c-2.129 0-3.659-1.794-3.659-4.266 0-2.148 1.468-4.095 3.488-4.095 2.275 0 3.545 1.857 3.545 1.857l2.939-3.298c-.91-1.062-2.598-2.882-6.503-2.882-4.388 0-8.209 3.489-8.209 8.456 0 4.766 3.475 8.532 8.266 8.532 3.855 0 5.572-2.017 6.54-3.129l-2.831-2.969c0 .001-1.415 1.794-3.576 1.794zM18.283 0v9.988h-2.064a1.92 1.92 0 1 0 0 3.84h2.064V24h5.205V0h-5.205z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.castorama.fr/\",hex:\"0078D7\"},Castro:{title:\"Castro\",slug:\"castro\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Castro icon</title><path d=\"M12 0C5.372 0 0 5.373 0 12s5.372 12 12 12c6.627 0 12-5.373 12-12S18.627 0 12 0zm-.002 13.991a2.052 2.052 0 1 1 0-4.105 2.052 2.052 0 0 1 0 4.105zm4.995 4.853l-2.012-2.791a5.084 5.084 0 1 0-5.982.012l-2.014 2.793A8.526 8.526 0 0 1 11.979 3.42a8.526 8.526 0 0 1 8.526 8.526 8.511 8.511 0 0 1-3.512 6.898z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://supertop.co/castro/press/\",hex:\"00B265\"},Cassandra:{title:\"Cassandra\",slug:\"cassandra\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Cassandra icon</title><path d=\"M17.51 6.535c-.002.003-.247.256-.387.408-.366.397-.92.975-1.312 1.12h-.004c-.052-.018-.103-.035-.159-.05l.704-1.425-.008.012c-.022.043-.719 1.415-1.666 1.218l-.002.002c-.014-.003-.026.002-.04-.002.455-.58.63-1.113.63-1.113s-.756 1.213-1.69.885a.075.075 0 0 1-.049-.047.153.153 0 0 1 0-.08c.01-.041.04-.092.067-.14.095-.176.256-.368.256-.368s-.156.152-.366.295l-.002.002c-.157.107-.345.208-.52.236a.512.512 0 0 1-.167 0c-.214-.037-.208-.25-.149-.455v-.002c.06-.204.174-.4.174-.4s-.19.298-.398.588c-.16.223-.311.396-.416.474l-.12.004c-.063-.176.1-.756.1-.76a4.983 4.983 0 0 1-.314.446 1.73 1.73 0 0 1-.34.336h-.027c-.082.007-.16.02-.239.031a.208.208 0 0 1-.064-.125c-.042-.268.123-.756.125-.762-.002.006-.09.26-.21.502v.004c-.032.067-.07.12-.107.178-.086.136-.176.244-.261.219-.127-.038-.202-.202-.246-.356-.044-.154-.057-.299-.057-.299s-.031.251-.117.485a.799.799 0 0 1-.145.265c-.024.027-.057.036-.086.055a12.55 12.55 0 0 0-2.617.764c-.223.082-.446.158-.674.256-.75.32-1.529.726-2.343 1.248a21.33 21.33 0 0 0-2.56 1.945c-.448.393-.906.82-1.376 1.29 3.558-1.917 4.97-4.743 11.633-4.995 5.044-.191 7.4 2.137 8.178 2.17 1.956.083 3.257-1.4 3.672-1.946.112-.142.179-.237.183-.244-.01.011-.328.373-.781.721l-.006.004c-.46.351-1.05.68-1.576.6h-.002c-.068-.01-.138-.007-.203-.032.743-.434 1.236-1.19 1.482-1.595.076-.125.233-.36.233-.36S21.395 9.53 20.094 9.41l-.002.002c-.051-.005-.105.007-.155-.004.567-.446.985-1.044 1.278-1.55v-.003h.002c.317-.548.482-.985.484-.992-.005.008-.326.498-.766 1.037l-.01.01c-.44.54-.998 1.121-1.464 1.299-.07.026-.14.066-.205.072 1.085-.959 1.539-2.322 1.539-2.322s-1.097 1.595-2.026 1.889c-.056.017-.114.047-.17.054.568-.512.869-.92 1.057-1.24V7.66c.238-.404.281-.65.281-.65l-.004.004a9.379 9.379 0 0 1-.271.334l-.016.017c-.255.3-.645.733-1.045 1.078l-.005.004a4.147 4.147 0 0 1-.32.248c-.03.021-.06.046-.089.065a1.7 1.7 0 0 1-.273.138c-.022.01-.044.022-.065.03-.068-.045-.132-.092-.205-.135-.046.06-.096.117-.142.176H17.5c-.02-.006-.044-.006-.063-.016.858-.934 1.44-2.119 1.44-2.119l-.004.004c-.008.01-1.193 1.61-1.73 1.71-.07-.035-.14-.07-.215-.103a.5.5 0 0 1 .044-.162c.122-.284.465-.717.465-.717s-.093.07-.123.096a4.25 4.25 0 0 1-.304.238c-.056.04-.114.072-.172.108-.064.04-.127.076-.188.105a.71.71 0 0 1-.263.086c-.043 0-.082-.005-.11-.027.453-.277 1.228-1.628 1.233-1.637zm-4.79 2.166a15.081 15.081 0 0 0-.913.006c-.286.01-.55.033-.817.053l-.002.002c-.28.123-.547.268-.783.459a.427.427 0 0 1 .035.168.431.431 0 0 1-.047.19l.885.642.022-.014-.36-1.264.623 1.114c.02-.008.042-.014.063-.02l-.02-1.236.397 1.162.476-1.149.018 1.268c.004.002.007.006.012.008l.712-1.006-.363 1.219.008.01 1.041-.692-.758 1.05v.007l.95-.34c.013-.017.03-.03.042-.047a.394.394 0 0 1 .395-.63c.119-.245.209-.504.268-.77a13.15 13.15 0 0 0-1.883-.19zm-2.507.133l-.02.002c-.308.036-.606.078-.892.125-.287.047-.562.1-.824.16l-.014.002c.115.388.294.756.531 1.08.108-.239.244-.461.402-.662a.436.436 0 0 1 .569-.557c.077-.058.166-.099.248-.15zm4.46.092a3.183 3.183 0 0 1-.163.826.394.394 0 0 1-.328.68 3.171 3.171 0 0 1-.55.63l.661.034-.994.236c-.026.018-.046.042-.072.059a3.194 3.194 0 0 1 1.537.691c.32-.574.504-1.235.504-1.94 0-.535-.237-.928-.594-1.216zm-6.318.226c-.296.07-.58.147-.85.23a1.462 1.462 0 0 0-.212.76c0 1.622.968 3.016 2.357 3.64l.002-.012a3.197 3.197 0 0 1-.58-.79.572.572 0 0 1-.336-1.078 3.18 3.18 0 0 1 .139-1.39 3.16 3.16 0 0 1-.52-1.36zm7.631.026c.14.41.225.842.225 1.293 0 2.44-2.203 4.418-4.92 4.418s-4.92-1.979-4.92-4.418c0-.236.023-.468.063-.694-.777.327-1.45.706-2.075 1.112-.214.388-.318.793-.283 1.2.085.985.951 1.807 2.274 2.364l-.256-.068c-2.29-.646-4.107.503-6.094-.494.46.364.984.717 2.498.722.513.002 2.158-.08 2.461.186.303.265-1.021 1.514-1.021 1.514s2.24-1.897 2.458-1.25c.137.402-.642 1.476-.642 1.476s.783-1.06 1.363-1.287c.4-.156.735-.136 1.022.266.19.265-.909 1.552-.909 1.552s1.476-1.439 1.74-1.363c.266.076 0 1.363 0 1.363s.545-1.306.835-1.402c.397-.133-.909 3.03-.909 3.03s1.595-2.925 1.893-2.991c.51-.114.852 2.043.852 2.043s-.249-1.885.02-2.006c1.694-.767.718 3.256.718 3.256s1.109-2.73.428-3.336C14.605 16.856 14.385 19 14.385 19s.472-1.02-.854-3.53c.72-.037 1.8 1.864 1.8 1.864s-1.173-2.081-.378-2.12c1.58-.074 1.74 2.765 1.74 2.765s.474-.398-.795-3.18c.808-.518 2.764 2.574 2.764 2.574s-1.804-3.017-1.514-3.219c.29-.202 1.35.96 1.35.96s-.808-1.11-.594-1.223c.215-.114 2.362 2.207 2.362 2.207s-1.895-2.271-1.567-2.55c.328-.277 1.717.784 1.717.784s-2.134-1.4-1.717-1.617c.58-.301 2.235.72 2.235.72s-.996-.82-.832-1.02c.164-.203 2.119 1.286 2.119 1.286s-1.728-1.364-1.817-1.705c-.088-.34 1.362.115 1.362.115s-1.602-.744-1.627-.959c-.026-.214 1.06.239 1.06.239s-1.49-1.224-1.855-.227c-.084.159-.187.3-.283.45.093-.27.135-.543.11-.82a1.87 1.87 0 0 0-.052-.28c-.683-.367-1.701-.933-3.133-1.336zm-5.83.455a.427.427 0 0 1-.508.164c-.054.073-.1.152-.148.23l1.277.471c.011-.014.02-.03.032-.043zm-.658.396c-.094.155-.18.316-.244.489.12.128.26.235.396.343l.922-.029.002-.004zm4.186.541l-.606.463.053.002c.201-.132.383-.29.553-.465zm-4.534.291c-.002.012-.007.023-.01.035a2.88 2.88 0 0 0-.048.958.567.567 0 0 1 .451.474l.937-.601c-.085-.03-.17-.06-.251-.096l-1.051-.076.638-.139a3.198 3.198 0 0 1-.666-.555zm.793.211c.138.086.28.16.43.223l.115-.024c0-.019.005-.037.006-.056zm3.12.68l.916.9-1.198-.466.703 1.078-1.072-.832-.012.006.346 1.279-.596-1.135-.097 1.33-.403-1.326-.47 1.262.113-1.36-.016-.007-.812 1.152.297-1.11a3.298 3.298 0 0 0-.793 1.19c.095.102.196.198.302.289a3.984 3.984 0 0 0 4.352-1.688 3.398 3.398 0 0 0-1.26-.539zm-2.436.223l-1.078.39c.001.018.01.033.01.051a.57.57 0 0 1-.184.42c.102.217.228.423.375.615a3.2 3.2 0 0 1 .32-.635l-.295.239zm3.633 2.79c-.186.049-.37.097-.56.137.192-.04.374-.09.56-.136zM13.172 15c-.114.02-.225.046-.34.063-.202.029-.391.042-.586.062.315-.033.624-.074.926-.125zm-1.35.17c-.11.008-.215.007-.324.012.11-.007.214-.003.324-.012z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://upload.wikimedia.org/wikipedia/commons/5/5e/Cassandra_logo.svg\",hex:\"1287B1\"},CentOS:{title:\"CentOS\",slug:\"centos\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" ><title>CentOS icon</title><path d=\"M12.076.066L8.883 3.28H3.348v5.434L0 12.01l3.349 3.298v5.39h5.374l3.285 3.236 3.285-3.236h5.43v-5.374L24 12.026l-3.232-3.252V3.321H15.31zm0 .749l2.49 2.506h-1.69v6.441l-.8.805-.81-.815V3.28H9.627zm-8.2 2.991h4.483L6.485 5.692l4.253 4.279v.654H9.94L5.674 6.423l-1.798 1.77zm5.227 0h1.635v5.415l-3.509-3.53zm4.302.043h1.687l1.83 1.842-3.517 3.539zm2.431 0h4.404v4.394l-1.83-1.842-4.241 4.267h-.764v-.69l4.261-4.287zm2.574 3.3l1.83 1.843v1.676h-5.327zm-12.735.013l3.515 3.462H3.876v-1.69zM3.348 9.454v1.697h6.377l.871.858-.782.77H3.35v1.786L.753 12.01zm17.42.068l2.488 2.503-2.533 2.55v-1.796h-6.41l-.75-.754.825-.83h6.38zm-9.502.978l.81.815.186-.188.614-.618v.686h.768l-.825.83.75.754h-.719v.808l-.842-.83-.741.73v-.707h-.7l.781-.77-.188-.186-.682-.672h.788zm-7.39 2.807h5.402l-3.603 3.55-1.798-1.772zm6.154 0h.708v.7l-4.404 4.338 1.852 1.824h-4.31v-4.342l1.798 1.77zm3.348 0h.715l4.317 4.343.186-.187 1.599-1.61v4.316h-4.366l1.853-1.825-.188-.185-4.116-4.054zm1.46 0h5.357v1.798l-1.785 1.796zm-2.83.191l.842.829v6.37h1.691l-2.532 2.495-2.533-2.495h1.79V14.23zm-1.27 1.251v5.42H8.939l-1.852-1.823zm2.64.097l3.552 3.499-1.853 1.825h-1.7z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://wiki.centos.org/ArtWork/Brand/Logo\",hex:\"262577\"},CEVO:{title:\"CEVO\",slug:\"cevo\",svg:'<svg xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" viewBox=\"0 0 24 24\"><title>CEVO icon</title><path d=\"M3.5 6h12l6 10.3L24 12 18 1.6H6L3.5 6zm-.9 1.5L0 12l6 10.4h12l2.6-4.5-2.5-4.3-2.6 4.5h-7L5 12l2.6-4.5h-5z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://cevo.com/\",hex:\"1EABE2\"},Chase:{title:\"Chase\",slug:\"chase\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Chase icon</title><path d=\"m8.5903 23.974q-0.18502 0-0.3304-0.0661-0.14538-0.0661-0.27753-0.17181-0.13216-0.10572-0.18502-0.26431-0.05286-0.15859-0.0793-0.34361l0.02643-5.9207h15.648l-7.1101 6.7665h-7.7181zm15.41-8.5639q-0.02643 0.18503-0.0793 0.3304-0.05286 0.14537-0.18502 0.26432-0.13216 0.11894-0.27753 0.18502-0.14538 0.0661-0.3304 0.0661h-5.9207l-0.02643-15.674 6.793 7.1366v7.6916zm-8.5903-15.383q0.15859 0 0.3304 0.0661t0.26432 0.17181q0.09251 0.10573 0.17181 0.26432 0.0793 0.15859 0.05286 0.34361l0.02643 5.9207h-15.7l7.163-6.7665h7.6652zm-15.383 8.5639q-0.02643-0.18502 0.05286-0.3304 0.0793-0.14537 0.18502-0.26431 0.10573-0.11895 0.26432-0.18503 0.15859-0.0661 0.31718-0.0661h5.9471l-0.02643 15.674-6.7401-7.1366-0.026431-7.6916z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://commons.wikimedia.org/wiki/File:Chase_logo_2007.svg\",hex:\"117ACA\"},Chef:{title:\"Chef\",slug:\"chef\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Chef icon</title><path d=\"M12.03 0C6.94 0 2.57 3.17.82 7.65l1.91.77a10 10 0 0 1 9.3-6.4c2.24 0 4.32.77 5.96 1.97l1.2-1.64A11.96 11.96 0 0 0 12.03 0zm0 2.3a9.76 9.76 0 0 0-9.08 6.23l1.91.7a7.62 7.62 0 0 1 7.17-4.91zm3.55.7l-.76 1.92a7.47 7.47 0 0 1 4.75 5.63h2.08a9.7 9.7 0 0 0-6.07-7.54zm-3.55 1.6a7.44 7.44 0 1 0 7.32 8.9h-2.08a5.5 5.5 0 0 1-5.24 3.94 5.39 5.39 0 0 1-5.42-5.41 5.39 5.39 0 0 1 5.42-5.41 5.4 5.4 0 0 1 5.2 3.93h2.07a7.35 7.35 0 0 0-7.27-5.96zm10.22 1.09L20.5 6.78a9.5 9.5 0 0 1 1.42 3.77H24a11.56 11.56 0 0 0-1.75-4.86zM11.97 6.83a5.22 5.22 0 0 0-4.7 7.27l1.97-.87a2.97 2.97 0 0 1-.27-1.2c0-1.64 1.36-3.01 3-3.01zm1.92.39l-.77 2.02c.66.27 1.15.7 1.53 1.31h2.3a5.04 5.04 0 0 0-3.06-3.33zM0 12.02c0 1.65.33 3.29 1.04 4.87l1.8-.82a10.49 10.49 0 0 1-.82-4.04zm2.3 0c0 4.1 2.51 7.6 6.12 9.03l.76-1.92a7.63 7.63 0 0 1-4.86-7.1zm12.3 1.48c-.33.6-.82 1.1-1.48 1.31l.77 2.03a5.04 5.04 0 0 0 3.06-3.34zm4.97 0a7.73 7.73 0 0 1-7.54 6.24v2.02a9.71 9.71 0 0 0 9.62-8.26zm2.35 0a10.1 10.1 0 0 1-9.9 8.53c-2.73 0-5.24-1.15-7.04-2.95L3.55 20.5c2.19 2.19 5.2 3.5 8.53 3.5A12 12 0 0 0 24 13.5zm-12.02.66l-1.53 1.53a5.21 5.21 0 0 0 3.66 1.53v-2.19a3.02 3.02 0 0 1-2.13-.87z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.chef.io/\",hex:\"F09820\"},Circle:{title:\"Circle\",slug:\"circle\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Circle icon</title><path d=\"M20.788 3.832c-.101-.105-.197-.213-.301-.317-.103-.103-.211-.202-.32-.302A11.903 11.903 0 0 0 12 0a11.926 11.926 0 0 0-8.486 3.514C-1.062 8.09-1.16 15.47 3.213 20.168c.099.108.197.214.3.32.104.103.21.2.317.3A11.92 11.92 0 0 0 12 24c3.206 0 6.22-1.247 8.487-3.512 4.576-4.576 4.673-11.956.301-16.656zm-16.655.301A11.057 11.057 0 0 1 12 .874c2.825 0 5.49 1.048 7.55 2.958l-1.001 1.002A9.646 9.646 0 0 0 12 2.292a9.644 9.644 0 0 0-6.865 2.844A9.644 9.644 0 0 0 2.292 12c0 2.448.9 4.753 2.542 6.549L3.831 19.55C-.201 15.191-.101 8.367 4.133 4.133zm13.798 1.318v.002l-1.015 1.014A7.346 7.346 0 0 0 12 4.589 7.357 7.357 0 0 0 6.761 6.76 7.362 7.362 0 0 0 4.589 12a7.34 7.34 0 0 0 1.877 4.913l-1.014 1.016A8.77 8.77 0 0 1 3.167 12a8.77 8.77 0 0 1 2.588-6.245A8.771 8.771 0 0 1 12 3.167c2.213 0 4.301.809 5.931 2.284zM18.537 12c0 1.745-.681 3.387-1.916 4.622S13.746 18.538 12 18.538a6.491 6.491 0 0 1-4.296-1.621l-.001-.004c-.11-.094-.22-.188-.324-.291a6.027 6.027 0 0 1-.293-.326A6.47 6.47 0 0 1 5.466 12c0-1.746.679-3.387 1.914-4.621A6.488 6.488 0 0 1 12 5.465c1.599 0 3.105.576 4.295 1.62.111.096.224.19.326.295.104.104.2.214.295.324A6.482 6.482 0 0 1 18.537 12zM7.084 17.534h.001A7.349 7.349 0 0 0 12 19.413a7.35 7.35 0 0 0 5.239-2.174A7.354 7.354 0 0 0 19.412 12a7.364 7.364 0 0 0-1.876-4.916l1.013-1.012A8.777 8.777 0 0 1 20.834 12a8.765 8.765 0 0 1-2.589 6.246A8.764 8.764 0 0 1 12 20.834a8.782 8.782 0 0 1-5.93-2.285l1.014-1.015zm12.783 2.333A11.046 11.046 0 0 1 12 23.125a11.042 11.042 0 0 1-7.551-2.957l1.004-1.001a9.64 9.64 0 0 0 6.549 2.542 9.639 9.639 0 0 0 6.865-2.846A9.642 9.642 0 0 0 21.71 12a9.64 9.64 0 0 0-2.543-6.548l1.001-1.002c4.031 4.359 3.935 11.182-.301 15.417z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.circle.com/\",hex:\"8669AE\"},CircleCI:{title:\"CircleCI\",slug:\"circleci\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>CircleCI icon</title><path d=\"M8.963 12c0-1.584 1.284-2.855 2.855-2.855 1.572 0 2.856 1.284 2.856 2.855 0 1.572-1.284 2.856-2.856 2.856-1.57 0-2.855-1.284-2.855-2.856zm2.855-12C6.215 0 1.522 3.84.19 9.025c-.01.036-.01.07-.01.12 0 .313.252.576.575.576H5.59c.23 0 .433-.13.517-.333.997-2.16 3.18-3.672 5.712-3.672 3.466 0 6.286 2.82 6.286 6.287 0 3.47-2.82 6.29-6.29 6.29-2.53 0-4.714-1.5-5.71-3.673-.097-.19-.29-.336-.517-.336H.755c-.312 0-.575.253-.575.576 0 .037.014.072.014.12C1.514 20.16 6.214 24 11.818 24c6.624 0 12-5.375 12-12 0-6.623-5.376-12-12-12z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://circleci.com/press\",hex:\"343434\"},\"Cirrus CI\":{title:\"Cirrus CI\",slug:\"cirrusci\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Cirrus CI icon</title><path d=\"M22.406 15.477A4.587 4.587 0 0 1 24 18.955c0 2.531-2.053 4.59-4.577 4.59H1.113a1.113 1.113 0 0 1 0-2.226h18.31a2.36 2.36 0 0 0 2.35-2.364 2.36 2.36 0 0 0-2.35-2.364H1.113a1.113 1.113 0 0 1 0-2.227h18.31A2.36 2.36 0 0 0 21.773 12a2.36 2.36 0 0 0-2.35-2.364H1.113a1.113 1.113 0 1 1 0-2.227h18.31c1.296 0 2.35-1.06 2.35-2.364s-1.054-2.364-2.35-2.364a1.113 1.113 0 0 1 0-2.227C21.947.454 24 2.514 24 5.045c0 1.389-.62 2.635-1.594 3.477A4.587 4.587 0 0 1 24 12c0 1.389-.62 2.635-1.594 3.477z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://cirrus-ci.org\",hex:\"212121\"},Cisco:{title:\"Cisco\",slug:\"cisco\",svg:'<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" role=\"img\"><title>Cisco icon</title><path d=\"M16.331 18.171V17.06l-.022.01c-.25.121-.522.19-.801.203a1.186 1.186 0 01-.806-.237 1.038 1.038 0 01-.352-.498 1.21 1.21 0 01-.023-.667c.052-.225.178-.426.357-.569.16-.134.355-.218.562-.242a1.85 1.85 0 011.061.198l.024.013v-1.117l-.051-.014a2.862 2.862 0 00-1.011-.132 2.34 2.34 0 00-.903.206c-.287.132-.54.327-.739.571a2.221 2.221 0 00-.04 2.705c.295.378.709.645 1.175.756.491.12 1.006.102 1.487-.052l.082-.023M5.336 18.171V17.06l-.022.01c-.25.121-.522.19-.801.203a1.183 1.183 0 01-.806-.237 1.03 1.03 0 01-.351-.498 1.202 1.202 0 01-.024-.667c.052-.225.177-.426.357-.569.16-.134.355-.218.562-.242a1.85 1.85 0 011.061.198l.024.013v-1.117l-.051-.014a2.862 2.862 0 00-1.011-.132 2.344 2.344 0 00-.903.206 2.08 2.08 0 00-.74.571 2.224 2.224 0 00-.041 2.705 2.11 2.11 0 001.176.756c.491.12 1.005.102 1.487-.052l.083-.023M9.26 17.249l-.004.957.07.012c.22.041.441.069.664.085.195.019.391.022.587.012.187-.014.372-.049.551-.104.21-.06.405-.163.571-.305a1.16 1.16 0 00.333-.478 1.31 1.31 0 00-.007-.96 1.068 1.068 0 00-.298-.414 1.261 1.261 0 00-.438-.255l-.722-.268a.388.388 0 01-.197-.188.245.245 0 01.008-.219.382.382 0 01.154-.142.798.798 0 01.257-.074c.153-.022.308-.021.46.005.18.02.358.051.533.096l.038.008v-.883l-.069-.015a4.749 4.749 0 00-.543-.097 2.844 2.844 0 00-.714-.003c-.3.027-.585.143-.821.33-.16.126-.281.293-.351.484-.104.29-.105.608 0 .899.054.145.14.274.252.381.097.093.207.173.327.236.157.084.324.149.497.195.057.017.114.035.17.054l.085.031.024.01c.084.03.162.078.226.14.045.042.08.094.101.151a.325.325 0 01.001.161.339.339 0 01-.166.198.856.856 0 01-.275.086 2.032 2.032 0 01-.427.021 5.208 5.208 0 01-.557-.074 9.195 9.195 0 01-.287-.067l-.033-.006zm-2.475.995h1.05v-4.167h-1.05v4.167zm12.162-2.936a1.095 1.095 0 011.541.158 1.094 1.094 0 01-.157 1.541l-.017.014a1.096 1.096 0 01-1.367-1.713m-1.525.854a2.193 2.193 0 002.666 2.107 2.139 2.139 0 00.701-3.937 2.207 2.207 0 00-3.367 1.83M22.961 10.728a.52.52 0 001.039 0V9.573a.52.52 0 00-1.039 0v1.155M20.117 10.728a.522.522 0 001.041 0V8.139a.521.521 0 00-1.04 0v2.589M17.231 11.771a.521.521 0 001.039 0V6.17a.52.52 0 00-1.039 0v5.601M14.393 10.728a.521.521 0 001.04 0V8.139a.52.52 0 00-1.039 0v2.589M11.494 10.728a.522.522 0 001.039 0V9.573a.52.52 0 00-1.039 0v1.155M8.624 10.728a.52.52 0 001.039 0V8.139a.52.52 0 00-1.039 0v2.589M5.737 11.771a.52.52 0 001.039 0V6.17a.52.52 0 00-1.039 0v5.601M2.876 10.728a.522.522 0 001.04 0V8.139a.52.52 0 00-1.039 0v2.589M0 10.728a.521.521 0 001.039 0V9.573a.52.52 0 00-1.039 0v1.155\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.cisco.com/\",hex:\"1BA0D7\"},CiviCRM:{title:\"CiviCRM\",slug:\"civicrm\",svg:'<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" role=\"img\"><title>CiviCRM icon</title><path d=\"M22.565 9.054c.248-.477.45-1.125.235-1.786-.25-.766-.939-1.275-2.051-1.511l-7.052-1.5L6.496.405C6.418.363 5.717 0 4.951 0 4.38 0 3.888.198 3.527.571c-.337.349-.539.834-.603 1.444a3.184 3.184 0 0 0-.199-.006c-1.089 0-1.648.456-1.926.839C.369 3.44.315 4.241.638 5.23l2.649 8.118.251 7.033c.044 1.222.719 2.536 2.098 2.537.264 0 .537-.051.82-.15.328.556.92 1.232 1.864 1.232.666 0 1.324-.357 1.956-1.063l5.11-5.697 6.783-4.283c.147-.094 1.444-.95 1.398-2.229-.022-.642-.362-1.202-1.002-1.674zM7.396 20.166l-2.328-7.134-.316-8.847 8.326 1.771 6.771 3.622-5.63 6.279-6.823 4.309zM20.377 7.51c.545.116.709.279.72.313.021.063-.017.196-.087.344l-1.623-.868.99.211zM4.951 1.792c.269 0 .607.145.7.193l1.738.929-2.693-.573c.013-.323.08-.484.12-.526.012-.011.062-.023.135-.023zm-2.61 2.882c-.195-.595-.093-.773-.092-.774.019-.026.167-.099.476-.099.083 0 .159.005.221.011l.109 3.05-.714-2.188zm2.988 15.642l-.029-.798.514 1.574a.68.68 0 0 1-.178.034c-.146 0-.293-.5-.307-.81zm3.614 1.424c-.414.463-.62.468-.622.468-.058 0-.185-.132-.301-.317l1.818-1.148-.895.997zm12.27-10.299l-1.445.913 1.695-1.89c.249.174.313.298.314.329.006.133-.287.468-.564.648z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://civicrm.org/trademark\",hex:\"81C459\"},Clockify:{title:\"Clockify\",slug:\"clockify\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Clockify icon</title><path d=\"M14.979 8.248l5.438-5.514 1.557 1.577-5.438 5.514-1.558-1.577zm-2.203 5.635a1.911 1.911 0 0 1-1.364-.577 1.987 1.987 0 0 1-.562-1.385c0-1.082.862-1.96 1.925-1.96 1.064 0 1.928.878 1.928 1.96 0 .516-.201 1.012-.563 1.385a1.913 1.913 0 0 1-1.364.577zm9.222 5.695l-1.556 1.579-5.438-5.515 1.558-1.577 5.436 5.513zM12.834 20.403a8.12 8.12 0 0 0 3.097-.615l2.656 2.695A11.643 11.643 0 0 1 12.834 24C6.298 24 1 18.627 1 12S6.299 0 12.834 0c2.068 0 4.012.54 5.703 1.486l-2.611 2.65a8.127 8.127 0 0 0-3.092-.613c-4.577 0-8.287 3.78-8.287 8.44 0 4.661 3.71 8.44 8.287 8.44z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://clockify.me/\",hex:\"03A9F4\"},Clojure:{title:\"Clojure\",slug:\"clojure\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Clojure icon</title><path d=\"M11.503 12.216c-.119.259-.251.549-.387.858-.482 1.092-1.016 2.42-1.21 3.271a4.91 4.91 0 0 0-.112 1.096c0 .164.009.337.022.514.682.25 1.417.388 2.186.39a6.39 6.39 0 0 0 2.001-.326 3.808 3.808 0 0 1-.418-.441c-.854-1.089-1.329-2.682-2.082-5.362M8.355 6.813A6.347 6.347 0 0 0 5.657 12a6.347 6.347 0 0 0 2.625 5.134c.39-1.622 1.366-3.107 2.83-6.084-.087-.239-.186-.5-.297-.775-.406-1.018-.991-2.198-1.513-2.733a4.272 4.272 0 0 0-.947-.729M17.527 19.277c-.84-.105-1.533-.232-2.141-.446A7.625 7.625 0 0 1 4.376 12a7.6 7.6 0 0 1 2.6-5.73 5.582 5.582 0 0 0-1.324-.162c-2.236.02-4.597 1.258-5.58 4.602-.092.486-.07.854-.07 1.29 0 6.627 5.373 12 12 12 4.059 0 7.643-2.017 9.815-5.101-1.174.293-2.305.433-3.271.436-.362 0-.702-.02-1.019-.058M15.273 16.952c.074.036.242.097.475.163a6.354 6.354 0 0 0 2.6-5.115h-.002a6.354 6.354 0 0 0-6.345-6.345 6.338 6.338 0 0 0-1.992.324c1.289 1.468 1.908 3.566 2.507 5.862l.001.003c.001.002.192.637.518 1.48.326.842.789 1.885 1.293 2.645.332.51.697.876.945.983M12.001 0a11.98 11.98 0 0 0-9.752 5.013c1.134-.71 2.291-.967 3.301-.957 1.394.004 2.491.436 3.017.732.127.073.248.152.366.233A7.625 7.625 0 0 1 19.625 12a7.605 7.605 0 0 1-2.268 5.425c.344.038.709.063 1.084.061 1.328 0 2.766-.293 3.842-1.198.703-.592 1.291-1.458 1.617-2.757.065-.502.1-1.012.1-1.531 0-6.627-5.371-12-11.999-12\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://commons.wikimedia.org/wiki/File:Clojure_logo.svg\",hex:\"5881D8\"},CloudBees:{title:\"CloudBees\",slug:\"cloudbees\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>CloudBees icon</title><path d=\"M3.55 6.41c0-1.2.73-2.28 1.88-2.8A3.51 3.51 0 0 1 8.94 4l2.52-2.35A7.25 7.25 0 0 0 3.22.98a6.22 6.22 0 0 0-2.95 7.2 6.82 6.82 0 0 0 6.6 4.64h2.58v-3.3H6.87C5.04 9.5 3.55 8.11 3.55 6.4zm13.51 4.73h-2.58v3.3h2.58c1.83 0 3.32 1.4 3.32 3.1 0 1.72-1.49 3.1-3.32 3.1s-3.32-1.37-3.32-3.08V6.4c0-1.58-.63-3.11-1.76-4.29L9.46 4.48c.47.53.73 1.22.73 1.93v11.14c0 3.54 3.08 6.41 6.87 6.41 3.8 0 6.87-2.87 6.87-6.41s-3.07-6.41-6.87-6.41z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.cloudbees.com/\",hex:\"1997B5\"},Cloudflare:{title:\"Cloudflare\",slug:\"cloudflare\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Cloudflare icon</title><path d=\"M16.5088 16.8447c.1475-.5068.0908-.9707-.1553-1.3154-.2246-.3164-.6045-.499-1.0615-.5205l-8.6592-.1123a.1559.1559 0 0 1-.1333-.0713c-.0283-.042-.0351-.0986-.021-.1553.0278-.084.1123-.1484.2036-.1562l8.7359-.1123c1.0351-.0489 2.1601-.8868 2.5537-1.9136l.499-1.3013c.0215-.0561.0293-.1128.0147-.168-.5625-2.5463-2.835-4.4453-5.5499-4.4453-2.5039 0-4.6284 1.6177-5.3876 3.8614-.4927-.3658-1.1187-.5625-1.794-.499-1.2026.119-2.1665 1.083-2.2861 2.2856-.0283.31-.0069.6128.0635.894C1.5683 13.171 0 14.7754 0 16.752c0 .1748.0142.3515.0352.5273.0141.083.0844.1475.1689.1475h15.9814c.0909 0 .1758-.0645.2032-.1553l.12-.4268zm2.7568-5.5634c-.0771 0-.1611 0-.2383.0112-.0566 0-.1054.0415-.127.0976l-.3378 1.1744c-.1475.5068-.0918.9707.1543 1.3164.2256.3164.6055.498 1.0625.5195l1.8437.1133c.0557 0 .1055.0263.1329.0703.0283.043.0351.1074.0214.1562-.0283.084-.1132.1485-.204.1553l-1.921.1123c-1.041.0488-2.1582.8867-2.5527 1.914l-.1406.3585c-.0283.0713.0215.1416.0986.1416h6.5977c.0771 0 .1474-.0489.169-.126.1122-.4082.1757-.837.1757-1.2803 0-2.6025-2.125-4.727-4.7344-4.727\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.cloudflare.com/logo/\",hex:\"F38020\"},CMake:{title:\"CMake\",slug:\"cmake\",svg:'<svg xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" viewBox=\"0 0 24 24\"><title>CMake icon</title><path d=\"M11.769.066L.067 23.206l12.76-10.843zM23.207 23.934L7.471 17.587 0 23.934zM24 23.736L12.298.463l1.719 19.24zM12.893 12.959l-5.025 4.298 5.62 2.248z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.kitware.com/platforms/\",hex:\"064F8C\"},Codacy:{title:\"Codacy\",slug:\"codacy\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Codacy icon</title><path d=\"M3.883 9.825a8.46 8.46 0 0 1 3.875-5.07l.04-.021-1.803-3.113C3.276 3.212 1.268 5.769.427 8.81l-.02.084zM9.824 3.894a8.246 8.246 0 0 1 2.164-.283h.005V.016h-.019a12.05 12.05 0 0 0-3.165.421l.084-.02zM14.178 3.897a8.449 8.449 0 0 1 5.063 3.875l.021.04 3.117-1.799c-1.591-2.718-4.146-4.726-7.186-5.568l-.084-.02zM0 12v.006c0 1.1.148 2.165.425 3.177l-.02-.084 3.476-.929a8.14 8.14 0 0 1-.284-2.161v-.008zM1.605 17.995c.55.941 1.18 1.754 1.901 2.475l2.553-2.54a8.56 8.56 0 0 1-1.313-1.695l-.022-.04zM5.995 22.38a11.77 11.77 0 0 0 5.967 1.604h.021-.001v-3.595h-.004a8.308 8.308 0 0 1-4.223-1.145l.039.021zM19.259 16.205a8.44 8.44 0 0 1-5.034 3.884l-.059.014.931 3.476c3.124-.86 5.681-2.863 7.246-5.52l.031-.056zM23.577 15.221c.268-.947.423-2.035.423-3.159 0-1.087-.144-2.14-.415-3.142l.019.084-3.486.931c.175.64.275 1.374.275 2.132 0 .79-.109 1.555-.313 2.28l.014-.059z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.codacy.com/blog/\",hex:\"222F29\"},Codecademy:{title:\"Codecademy\",slug:\"codecademy\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Codecademy icon</title><path d=\"M23.827 19.73h-5.595c-.094 0-.17.058-.17.172v1.515c0 .094.058.17.172.17h5.594c.096 0 .172-.044.172-.164v-1.515c0-.105-.057-.166-.173-.166v-.014.002zM16.463 2.465c.016.035.03.068.047.12v18.79c0 .061-.02.096-.037.114a.168.168 0 0 1-.135.06H.153c-.038 0-.075 0-.097-.02A.181.181 0 0 1 0 21.395V2.566c0-.076.04-.134.096-.15h16.242c.04 0 .096.017.115.034v.016l.01-.001zM1.818 19.575c0 .073.038.136.096.153h12.643c.058-.019.096-.076.096-.154V4.404c0-.073-.039-.134-.098-.15H1.915c-.056.02-.096.073-.096.15l-.003 15.17.002.001zm5.174-8.374c.65 0 1.014.177 1.396.619.058.075.153.094.23.035l1.034-.92c.075-.044.058-.164.02-.224-.635-.764-1.554-1.244-2.74-1.244-1.59 0-2.79.795-3.255 2.206-.165.495-.24 1.126-.24 1.979 0 .855.075 1.484.255 1.98.465 1.426 1.665 2.205 3.255 2.205 1.2 0 2.115-.48 2.745-1.216.045-.074.06-.165-.015-.226L8.64 15.48c-.073-.047-.163-.047-.224.027-.39.45-.795.69-1.454.69-.706 0-1.245-.345-1.47-1.035-.136-.39-.166-.87-.166-1.483 0-.615.045-1.068.18-1.471.24-.659.766-1.007 1.486-1.007z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.codecademy.com/\",hex:\"1F4056\"},CodeChef:{title:\"CodeChef\",slug:\"codechef\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>CodeChef icon</title><path d=\"M11.007 0c-.787.031-1.515.37-2.222.685a12.27 12.27 0 01-1.864.703c-.635.176-1.3.354-1.814.788-.222.18-.356.439-.529.662-.309.486-.448 1.067-.457 1.638.036.61.216 1.2.376 1.786.368 1.262.807 2.503 1.197 3.759.366 1.161.703 2.344 1.294 3.416.197.394.35.808.535 1.206.027.067.052.158.142.149.136-.012.243-.115.368-.164.828-.414 1.74-.642 2.655-.749.708-.074 1.43-.078 2.131.054.72.163 1.417.426 2.092.724.36.172.719.348 1.088.498.048.04.135.058.16-.016.219-.327.469-.635.667-.976.495-1.061.522-2.279 1.038-3.331.358-.721.892-1.337 1.266-2.048.175-.266.431-.467.588-.747.437-.669.78-1.398 1.05-2.15.102-.293.172-.612.09-.919-.06-.299-.202-.57-.318-.848a2.481 2.481 0 00-.278-.66c-.407-.676-1.07-1.149-1.743-1.536-1.045-.59-2.196-.969-3.351-1.28A20.733 20.733 0 0011.426.01a5.005 5.005 0 00-.42-.01zm-.889.606c-.261.223-.363.569-.468.883-.168.568-.263 1.163-.207 1.756.064 1.062.197 2.12.33 3.175.18 1.352.387 2.7.677 4.034.026.165.064.347.05.51-.115-.175-.182-.383-.258-.58-.25-.765-.432-1.549-.604-2.334a26.008 26.008 0 01-.562-4.317c-.025-.843-.004-1.726.37-2.501.118-.226.259-.46.48-.597a.411.411 0 01.218-.049l-.026.02zM6.516 1.77c.128 0 .139.159.168.252.266.798.422 1.628.679 2.428.174.649.238 1.323.308 1.991.097 1.039.108 2.085.246 3.12.026.199.082.393.119.59.01.067-.059.049-.083.014-.148-.161-.183-.391-.246-.592-.16-.645-.242-1.305-.334-1.962-.174-1.316-.287-2.64-.529-3.945-.158-.612-.356-1.215-.46-1.838.006-.051.093-.048.132-.058zM4.589 3.607c.229.056.365.268.512.434.4.535.54 1.204.695 1.843.283 1.265.446 2.553.725 3.82.131.666.293 1.326.507 1.971.014.051.035.133.038.17-.233-.43-.393-.896-.565-1.353-.598-1.698-.823-3.496-1.3-5.228-.133-.478-.308-.95-.596-1.358-.047-.088-.08-.204-.037-.297.006-.004.014-.003.02-.002zm12.646 13.196c-.136.007-.31.11-.276.267.094.218.334.308.526.416.441.216.938.29 1.358.546.092.06.149.197.064.287-.18.266-.47.44-.723.634-.372.266-.777.51-1.057.879-.066.107-.041.267.082.32.109.079.243.018.338-.051.518-.294.995-.654 1.478-1.002.32-.239.644-.477.926-.76.085-.135-.03-.274-.118-.371-.273-.285-.62-.487-.965-.67a4.959 4.959 0 00-1.458-.495 1.251 1.251 0 00-.175 0zM5.96 16.83c-.527.134-.997.42-1.474.673-.425.243-.854.496-1.205.841a.699.699 0 00-.172.488c.065.108.2.14.301.206.852.442 1.735.822 2.63 1.168.132.042.265.113.406.107.158-.02.309-.204.213-.356-.146-.243-.42-.361-.65-.506-.547-.303-1.154-.512-1.636-.918-.046-.091.094-.128.142-.18.549-.395 1.229-.593 1.713-1.077.089-.09.164-.259.048-.358-.086-.073-.206-.087-.316-.088zm8.115.793c-.43.027-.835.431-.774.876.032.259.089.525.228.749.12.18.33.286.546.287.273.031.59-.059.726-.318.137-.237.212-.514.205-.787-.038-.46-.466-.845-.93-.807zm-4.49.01c-.464.028-.807.505-.77.953.011.444.315.902.765.994.352.06.71-.19.803-.53.125-.35.132-.761-.044-1.095-.157-.25-.478-.327-.754-.322zm.112.653c.241.064.294.47.045.558-.141.034-.239-.12-.234-.244-.008-.127.05-.287.189-.314zm4.437.143c.097 0 .226.071.19.187-.013.171-.215.333-.377.226-.132-.07-.172-.296-.02-.368a.418.418 0 01.207-.045zm-3.518 2.977c-.553.051-1.044.335-1.542.559-.304.156-.662.312-1.005.187-.377-.12-.707-.35-1.059-.52-.075-.013-.061.077-.047.122.081.53.129 1.102.454 1.55.338.437.902.618 1.433.667.797.072 1.642-.118 2.271-.629.309-.262.571-.631.585-1.049-.006-.324-.244-.596-.524-.734a1.085 1.085 0 00-.566-.153zm2.58.008c-.396.052-.815.262-.972.65-.129.358.034.748.272 1.02.426.509 1.07.793 1.718.884.577.078 1.186.014 1.714-.24.438-.225.767-.655.85-1.142.064-.291.081-.59.124-.884-.066-.078-.148.038-.218.052-.337.142-.647.367-1.01.435-.363.024-.687-.172-1.015-.293-.43-.178-.851-.403-1.315-.478a1.21 1.21 0 00-.147-.004zm-2.881-5.091c-.07 0-.143.014-.216.03a2.93 2.93 0 00-.454.152c-.15.061-.292.127-.407.18a4.07 4.07 0 01-.218.092.277.277 0 01-.182-.034c-.062-.037-.12-.101-.141-.255l-.27.038c.031.218.14.37.27.45.13.079.268.09.378.067.085-.018.16-.058.276-.111.116-.053.255-.118.397-.176.143-.058.288-.11.41-.138a.52.52 0 01.252-.009c.14.06.19.13.215.179.025.05.03.067.03.067l.263-.06s.002-.024-.05-.128a.678.678 0 00-.35-.307.482.482 0 00-.204-.037zm2.744 3.937a.136.136 0 00-.102.05s-.122.148-.286.295c-.165.148-.38.28-.493.283-.112.003-.314-.118-.47-.26-.155-.14-.267-.284-.267-.284a.136.136 0 10-.214.167s.124.16.299.319c.175.16.397.337.66.33.259-.008.484-.19.666-.352.182-.163.315-.325.315-.325a.136.136 0 00-.108-.223zM11.007.001c-.787.03-1.515.368-2.222.684a12.27 12.27 0 01-1.864.703c-.635.176-1.3.354-1.814.788-.222.18-.356.44-.529.663-.309.485-.448 1.066-.457 1.637.036.61.216 1.2.376 1.786.368 1.263.807 2.503 1.197 3.759.366 1.161.703 2.344 1.294 3.417.197.393.35.807.535 1.205.027.067.052.158.142.15.136-.013.243-.116.368-.165.828-.414 1.74-.641 2.655-.749.708-.074 1.43-.078 2.131.055.72.163 1.417.425 2.092.723.36.172.719.348 1.088.498.048.04.135.058.16-.016.219-.327.469-.635.667-.975.495-1.062.522-2.28 1.038-3.332.358-.721.892-1.336 1.266-2.047.175-.266.431-.468.588-.747.437-.67.78-1.4 1.05-2.151.102-.293.172-.612.09-.919-.06-.298-.202-.57-.318-.848a2.481 2.481 0 00-.278-.659c-.407-.676-1.07-1.15-1.743-1.536-1.045-.591-2.196-.97-3.351-1.281A20.733 20.733 0 0011.426.01a5.005 5.005 0 00-.42-.01zm-.889.606c-.261.222-.363.568-.468.883-.168.567-.263 1.163-.207 1.755.064 1.062.197 2.12.33 3.175.18 1.352.387 2.701.677 4.034.026.165.064.347.05.51-.115-.175-.182-.383-.258-.58-.25-.765-.432-1.549-.604-2.334a26.008 26.008 0 01-.562-4.316c-.025-.844-.004-1.727.37-2.502.118-.225.259-.46.48-.597a.411.411 0 01.218-.049l-.026.02zM6.516 1.77c.128 0 .139.16.168.252.266.798.422 1.628.679 2.429.174.648.238 1.322.308 1.99.097 1.04.108 2.086.246 3.12.026.199.082.394.119.59.01.068-.059.05-.083.014-.148-.16-.183-.39-.246-.592-.16-.645-.242-1.304-.334-1.962-.174-1.315-.287-2.64-.529-3.945-.158-.612-.356-1.215-.46-1.838.006-.051.093-.048.132-.058zM4.589 3.608c.229.055.365.267.512.433.4.535.54 1.204.695 1.843.283 1.265.446 2.554.725 3.82.131.666.293 1.327.507 1.971.014.051.035.133.038.17-.233-.43-.393-.896-.565-1.352-.598-1.7-.823-3.497-1.3-5.23-.133-.477-.308-.95-.596-1.357-.047-.087-.08-.204-.037-.296.006-.004.014-.003.02-.002zm12.646 13.195c-.136.007-.31.11-.276.268.094.217.334.307.526.416.441.215.938.289 1.358.545.092.06.149.197.064.287-.18.267-.47.44-.723.634-.372.266-.777.51-1.057.879-.066.107-.041.267.082.32.109.079.243.019.338-.05.518-.295.995-.655 1.478-1.002.32-.24.644-.478.926-.761.085-.135-.03-.274-.118-.37-.273-.286-.62-.488-.965-.672a4.959 4.959 0 00-1.458-.493 1.251 1.251 0 00-.175-.001zm-11.276.029c-.527.133-.997.42-1.474.672-.425.243-.854.497-1.205.842a.699.699 0 00-.172.487c.065.109.2.14.301.206.852.442 1.735.823 2.63 1.168.132.042.265.113.406.108.158-.02.309-.205.213-.357-.146-.243-.42-.361-.65-.506-.547-.303-1.154-.512-1.636-.918-.046-.09.094-.128.142-.18.549-.394 1.229-.592 1.713-1.077.089-.09.164-.258.048-.357-.086-.074-.206-.088-.316-.088zm8.115.792c-.43.028-.835.432-.774.876.032.26.089.526.228.75.12.179.33.285.546.287.273.03.59-.06.726-.319.137-.236.212-.514.205-.787-.038-.46-.466-.844-.93-.807zm-4.49.01c-.464.028-.807.505-.77.953.011.444.315.902.765.995.352.059.71-.19.803-.53.125-.35.132-.762-.044-1.096-.157-.249-.478-.327-.754-.322zm.112.654c.241.063.294.47.045.557-.141.034-.239-.12-.234-.244-.008-.127.05-.287.189-.313zm4.437.142c.097 0 .226.072.19.187-.013.172-.215.333-.377.227-.132-.071-.172-.297-.02-.369a.418.418 0 01.207-.045zm-3.518 2.977c-.553.052-1.044.336-1.542.56-.304.155-.662.311-1.005.186-.377-.119-.707-.35-1.059-.52-.075-.012-.061.078-.047.122.081.53.129 1.102.454 1.55.338.438.902.619 1.433.667.797.072 1.642-.118 2.271-.629.309-.262.571-.63.585-1.049-.006-.324-.244-.596-.524-.734a1.085 1.085 0 00-.566-.153zm2.58.008c-.396.052-.815.262-.972.65-.129.359.034.748.272 1.021.426.508 1.07.792 1.718.883.577.078 1.186.015 1.714-.24.438-.225.767-.655.85-1.142.064-.29.081-.59.124-.884-.066-.077-.148.039-.218.052-.337.143-.647.367-1.01.436-.363.024-.687-.172-1.015-.294-.43-.178-.851-.402-1.315-.477a1.21 1.21 0 00-.147-.004z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.codechef.com/\",hex:\"5B4638\"},\"Code Climate\":{title:\"Code Climate\",slug:\"codeclimate\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Code Climate icon</title><path d=\"M 16.046875 5.039062 L 24 12.992188 L 21.292969 15.703125 L 16.046875 10.457031 L 14.203125 12.308594 L 11.488281 9.597656 Z M 10.652344 10.4375 L 13.359375 13.152344 L 15.90625 15.691406 L 13.191406 18.398438 L 7.953125 13.160156 L 3.777344 17.335938 L 2.707031 18.398438 L 0 15.691406 L 7.953125 7.738281 Z M 10.652344 10.4375\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://codeclimate.com/\",hex:\"000000\"},Codecov:{title:\"Codecov\",slug:\"codecov\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Codecov icon</title><path d=\"M12.007.48C5.391.485.005 5.831 0 12.399v.03l2.042 1.191.028-.019a5.821 5.821 0 0 1 3.308-1.02c.371 0 .734.034 1.086.1l-.036-.006a5.69 5.69 0 0 1 2.874 1.431l-.004-.003.35.326.198-.434c.192-.42.414-.814.66-1.173.099-.144.208-.29.332-.446l.205-.257-.252-.211a8.33 8.33 0 0 0-3.836-1.807l-.052-.008a8.566 8.566 0 0 0-4.081.251l.061-.016c.971-4.257 4.714-7.224 9.133-7.227a9.31 9.31 0 0 1 6.601 2.713 9.197 9.197 0 0 1 2.508 4.499 8.386 8.386 0 0 0-2.498-.379h-.154c-.356.006-.7.033-1.037.078l.045-.005-.042.006a8.104 8.104 0 0 0-.39.06c-.057.01-.114.022-.17.033a8.103 8.103 0 0 0-.392.089l-.138.035a9.21 9.21 0 0 0-.483.144l-.029.01c-.355.12-.709.268-1.051.439l-.027.014c-.152.076-.305.16-.469.256l-.036.022a8.217 8.217 0 0 0-2.108 1.801l-.011.013-.075.092a8.346 8.346 0 0 0-.378.503c-.088.13-.177.269-.288.452l-.06.104a8.986 8.986 0 0 0-.234.432l-.016.029c-.17.341-.317.698-.44 1.063l-.017.053a8.053 8.053 0 0 0-.411 2.717v-.007l.001.112c.006.158.013.295.023.431l-.002-.037a11.677 11.677 0 0 0 .042.412l.005.042.013.103c.018.127.038.252.062.378.241 1.266.845 2.532 1.745 3.66l.041.051.042-.05c.359-.424 1.249-1.77 1.325-2.577l.001-.015-.007-.013a5.56 5.56 0 0 1-.64-2.595v-.001c0-3.016 2.371-5.521 5.397-5.702l.199-.007a5.93 5.93 0 0 1 3.47 1.025l.028.019 2.041-1.187v-.03a11.771 11.771 0 0 0-3.511-8.424A11.963 11.963 0 0 0 12.008.48z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://codecov.io/\",hex:\"F01F7A\"},CodeFactor:{title:\"CodeFactor\",slug:\"codefactor\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>CodeFactor icon</title><path d=\"M5.37 2.65A2.64 2.64 0 0 1 2.75 5.3 2.64 2.64 0 0 1 .12 2.65 2.64 2.64 0 0 1 2.75 0a2.64 2.64 0 0 1 2.62 2.65zm0 9.35a2.64 2.64 0 0 1-2.62 2.65A2.64 2.64 0 0 1 .12 12a2.64 2.64 0 0 1 2.63-2.65A2.64 2.64 0 0 1 5.37 12zm0 9.35A2.64 2.64 0 0 1 2.75 24a2.64 2.64 0 0 1-2.63-2.65 2.64 2.64 0 0 1 2.63-2.65 2.64 2.64 0 0 1 2.62 2.65zM11.31 0A2.64 2.64 0 0 0 8.7 2.65 2.64 2.64 0 0 0 11.3 5.3h9.94a2.64 2.64 0 0 0 2.63-2.65A2.64 2.64 0 0 0 21.25 0h-9.94zM8.7 12a2.64 2.64 0 0 1 2.62-2.65H17A2.64 2.64 0 0 1 19.6 12 2.64 2.64 0 0 1 17 14.65H11.3A2.64 2.64 0 0 1 8.7 12z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.codefactor.io/\",hex:\"F44A6A\"},Codeforces:{title:\"Codeforces\",slug:\"codeforces\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Codeforces icon</title><path d=\"M4.5 7.5C5.328 7.5 6 8.172 6 9v10.5c0 .828-.672 1.5-1.5 1.5h-3C.673 21 0 20.328 0 19.5V9c0-.828.673-1.5 1.5-1.5h3zm9-4.5c.828 0 1.5.672 1.5 1.5v15c0 .828-.672 1.5-1.5 1.5h-3c-.827 0-1.5-.672-1.5-1.5v-15c0-.828.673-1.5 1.5-1.5h3zm9 7.5c.828 0 1.5.672 1.5 1.5v7.5c0 .828-.672 1.5-1.5 1.5h-3c-.828 0-1.5-.672-1.5-1.5V12c0-.828.672-1.5 1.5-1.5h3z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://codeforces.com/\",hex:\"1F8ACB\"},CodeIgniter:{title:\"CodeIgniter\",slug:\"codeigniter\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>CodeIgniter icon</title><path d=\"M8.49 24c-1.54-.68-2.586-2.146-2.723-3.824.09-1.727 1.002-3.305 2.45-4.246-.238.58-.18 1.24.15 1.77.376.525 1.022.777 1.655.646.902-.254 1.43-1.19 1.176-2.092-.09-.316-.27-.602-.516-.818-1.02-.83-1.532-2.133-1.35-3.436.175-.69.557-1.314 1.096-1.785-.405 1.08.737 2.146 1.504 2.67 1.36.816 2.67 1.713 3.924 2.686 1.37 1.08 2.117 2.77 2 4.5-.308 1.84-1.61 3.36-3.385 3.93 3.55-.79 7.21-3.61 7.28-7.61-.07-3.2-1.98-6.072-4.9-7.38h-.13c.065.157.096.326.09.496.01-.11.01-.22 0-.33.016.13.016.26 0 .39-.222.91-1.14 1.47-2.052 1.248-.364-.09-.69-.295-.924-.59-1.17-1.5 0-3.207.196-4.857.12-2.11-.844-4.127-2.554-5.36.856 1.427-.284 3.3-1.113 4.366-.83 1.066-2.03 1.86-3.008 2.79-1.054.98-2.02 2.058-2.887 3.21-1.874 2.29-2.61 5.31-2 8.205.836 2.79 3.155 4.886 6.015 5.43H8.5z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.codeigniter.com/help/legal\",hex:\"EE4623\"},CodePen:{title:\"CodePen\",slug:\"codepen\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>CodePen icon</title><path d=\"M24 8.182l-.018-.087-.017-.05c-.01-.024-.018-.05-.03-.075-.003-.018-.015-.034-.02-.05l-.035-.067-.03-.05-.044-.06-.046-.045-.06-.045-.046-.03-.06-.044-.044-.04-.015-.02L12.58.19c-.347-.232-.796-.232-1.142 0L.453 7.502l-.015.015-.044.035-.06.05-.038.04-.05.056-.037.045-.05.06c-.02.017-.03.03-.03.046l-.05.06-.02.06c-.02.01-.02.04-.03.07l-.01.05C0 8.12 0 8.15 0 8.18v7.497c0 .044.003.09.01.135l.01.046c.005.03.01.06.02.086l.015.05c.01.027.016.053.027.075l.022.05c0 .01.015.04.03.06l.03.04c.015.01.03.04.045.06l.03.04.04.04c.01.013.01.03.03.03l.06.042.04.03.01.014 10.97 7.33c.164.12.375.163.57.163s.39-.06.57-.18l10.99-7.28.014-.01.046-.037.06-.043.048-.036.052-.058.033-.045.04-.06.03-.05.03-.07.016-.052.03-.077.015-.045.03-.08v-7.5c0-.05 0-.095-.016-.14l-.014-.045.044.003zm-11.99 6.28l-3.65-2.44 3.65-2.442 3.65 2.44-3.65 2.44zm-1.034-6.674l-4.473 2.99L2.89 8.362l8.086-5.39V7.79zm-6.33 4.233l-2.582 1.73V10.3l2.582 1.726zm1.857 1.25l4.473 2.99v4.82L2.89 15.69l3.618-2.417v-.004zm6.537 2.99l4.474-2.98 3.613 2.42-8.087 5.39v-4.82zm6.33-4.23l2.583-1.72v3.456l-2.583-1.73zm-1.855-1.24L13.042 7.8V2.97l8.085 5.39-3.612 2.415v.003z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://codepen.io\",hex:\"000000\"},Coderwall:{title:\"Coderwall\",slug:\"coderwall\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Coderwall icon</title><path d=\"M21.354 18.708c1.46 0 2.646 1.185 2.646 2.646C24 22.814 22.814 24 21.354 24s-2.646-1.186-2.646-2.646c0-1.458 1.185-2.646 2.646-2.646zM12 9.354c1.46 0 2.646 1.186 2.646 2.646S13.46 14.646 12 14.646 9.354 13.46 9.354 12 10.54 9.354 12 9.354zm9.354 0C22.814 9.354 24 10.54 24 12s-1.186 2.646-2.646 2.646S18.708 13.46 18.708 12s1.185-2.646 2.646-2.646zM12 0c1.46 0 2.646 1.185 2.646 2.646 0 1.46-1.186 2.646-2.646 2.646S9.354 4.106 9.354 2.646 10.54 0 12 0zM2.646 0c1.46 0 2.646 1.185 2.646 2.646 0 1.46-1.186 2.646-2.646 2.646S0 4.106 0 2.646 1.186 0 2.646 0zm18.708 0C22.814 0 24 1.185 24 2.646c0 1.46-1.186 2.646-2.646 2.646s-2.646-1.186-2.646-2.646S19.893 0 21.354 0z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/twolfson/coderwall-svg\",hex:\"3E8DCC\"},CodeSandbox:{title:\"CodeSandbox\",slug:\"codesandbox\",svg:'<svg viewBox=\"0 0 24 24\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\"><title>CodeSandbox icon</title><path d=\"M2 6l10.455-6L22.91 6 23 17.95 12.455 24 2 18V6zm2.088 2.481v4.757l3.345 1.86v3.516l3.972 2.296v-8.272L4.088 8.481zm16.739 0l-7.317 4.157v8.272l3.972-2.296V15.1l3.345-1.861V8.48zM5.134 6.601l7.303 4.144 7.32-4.18-3.871-2.197-3.41 1.945-3.43-1.968L5.133 6.6z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://codesandbox.io\",hex:\"000000\"},Codeship:{title:\"Codeship\",slug:\"codeship\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Codeship icon</title><path d=\"M12.053 0c-.972 0-2.398.405-2.398.762v2.117a13.032 13.032 0 0 1 2.42-.272 14.387 14.387 0 0 1 2.423.26V.773c0-.367-1.475-.774-2.445-.774zm.022 3.787c-2.042 0-5.068.837-5.068 1.193v2.595a18.793 18.793 0 0 1 5.02-2.473c.012-.013 2.803.749 5.212 2.495l.003.003V4.98c0-.37-3.126-1.193-5.167-1.193zM12.1 6.37c-.763.197-1.514.555-2.214.887a17.585 17.585 0 0 0-4.19 2.767c1.352 1.378 2.161 3.11 2.654 4.72l.037.113.04.037-.052-.037c-.013-.013-1.623-1.661-3.972-1.661-1.242 0-2.68.456-4.193 1.833.147.516.32 1.006.528 1.498v.016l.025.047c2.004 4.575 6.7 7.553 11.693 7.406 4.895-.147 9.348-3.311 11.13-7.859.098-.246.184-.506.272-.752-1.686-1.254-4.332-2.814-5.351-2.617v-.003c-.776.149-1.686 1.266-2.854 2.385.468-1.66 1.307-3.515 2.832-5.114a15.58 15.58 0 0 0-1.243-1.021v-.012C15.717 7.87 13.944 6.899 12.1 6.369zm-.01.897l.612 3.05-.147 2.67-.443 3.959v.018l-.05-.006c-.006-.001-.015-.008-.022-.01v-.027l-.493-3.947-.122-2.654zm.9 9.825l.021.004a7.135 7.135 0 0 1-.143.056c.04-.023.08-.036.121-.06z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://app.codeship.com/\",hex:\"3C4858\"},Codewars:{title:\"Codewars\",slug:\"codewars\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Codewars icon</title><path d=\"M.76 12.2l-.08-.04c-.18-.1-.32-.25-.42-.44-.14-.26-.2-.5-.2-.75l.02-.13c0-.2.05-.38.14-.55l.08-.15c.04-.08.1-.15.15-.22.06-.07.07-.16.05-.24l-.05-.16c-.06-.2-.1-.4-.1-.6L.32 8.8c0-.22.06-.44.2-.6l.1-.13c.07-.1.18-.16.3-.2.1-.03.17-.13.18-.25l.02-.34c0-.27.13-.52.33-.7l.24-.18c.05-.05.1-.1.14-.18.05-.06.06-.14.05-.2-.02-.1 0-.13.05-.14.16.06.26.04.33-.04l.13-.17.36-.4c.1-.1.14-.28.08-.42l-.12-.26c-.02-.06 0-.13.05-.15.13 0 .22.05.26.13l.04.07c.06.12.2.18.3.13.22-.08.4-.1.57-.1h.32c.22 0 .4-.15.44-.38.04-.28.14-.5.28-.65.15-.17.32-.3.52-.4.26-.14.42-.34.47-.6.07-.32.24-.55.47-.7l.76-.43.22-.13c.13-.08.25-.18.35-.3l.2-.24c.1-.1.2-.17.32-.2.1-.03.24-.05.36-.04l.4.03c.2 0 .36.05.52.12l.1.05c.1.04.2.02.25-.05L10 .7l.43-.45c.1-.1.22-.14.35-.12.13.02.26.07.38.13.18.1.33.14.5.14h.1c.22 0 .44.03.66.08l.15.04c.15.04.3-.02.4-.14.03-.05.1-.06.14-.02.03.02.04.04.05.07.02.2.14.35.3.4l.16.05c.17.05.32.16.42.3.1.15.22.3.36.4l.1.1c.1.1.24.14.38.13h.59c.24 0 .47.04.7.14.22.1.45.12.66.04.22-.07.45-.1.68-.07l.43.07c.2.02.4.12.52.27l.05.05c.1.1.2.23.3.37.06.13.2.2.34.2h.62c.15 0 .3.03.42.1.13.1.24.2.34.3l.1.13c.12.14.18.33.17.53 0 .16.12.3.28.3l.2.02c.14 0 .26.1.33.23l.1.2.26.58c.04.1.05.2.04.28 0 .1.03.18.1.22l.1.07c.13.1.2.25.18.42l-.07.47-.02.2c-.02.1.03.23.12.3.15.1.22.23.23.38v.2c0 .1-.02.22-.1.3-.06.08-.1.18-.1.3l.03.23c0 .16.1.3.2.4.14.1.22.26.24.42.04.25.05.45.05.65v.23c0 .08 0 .16.03.24.02.07.07.14.13.18l.2.15c.2.13.34.3.42.53.1.22.13.45.13.68v.08c0 .18-.02.37-.08.54-.05.18-.04.35.03.5.08.14.13.3.15.47.04.2.02.4-.05.56l-.02.07c-.05.12-.13.23-.23.32-.1.1-.2.16-.26.23-.06.06-.1.16-.07.25l.03.14c.05.2.05.4 0 .58v.08c-.04.15-.1.28-.16.4-.07.13-.17.23-.3.3l-.15.1c-.07.04-.12.13-.12.22 0 .1-.04.2-.1.26l-.15.2c-.1.13-.23.24-.37.3-.14.1-.26.2-.35.3-.1.12-.18.26-.22.4-.04.18-.18.28-.33.28h-.54c-.14 0-.27.1-.33.22-.07.16-.14.27-.23.37-.1.1-.16.22-.2.36-.02.12-.12.2-.22.16-.13-.06-.26 0-.32.1-.12.2-.24.35-.37.48l-.07.06c-.13.1-.3.18-.45.18-.18 0-.27.08-.3.2-.03.1-.05.23-.06.34-.02.12-.06.23-.1.33l-.05.06c-.1.15-.18.3-.28.43l-.04.06c-.13.17-.3.3-.5.35-.24.08-.45.1-.66.1h-.14c-.1 0-.2.06-.27.16l-.06.1-.06.12-.13.22c-.1.18-.25.3-.45.36-.2.05-.43.07-.64.06l-.16-.02c-.14 0-.27-.04-.4-.1-.1-.04-.24 0-.3.1-.1.14-.22.22-.35.26l-.3.1c-.2.05-.42.05-.63 0l-.16-.05c-.1 0-.2-.05-.28-.1-.1-.05-.2-.07-.3-.06l-.13.02c-.2.02-.38 0-.56-.05l-.27-.06c-.12-.04-.23-.12-.3-.23-.05-.1-.16-.18-.3-.2H9.9c-.2-.03-.38-.1-.5-.25L9 22.5l-.14-.12-.22-.16-.13-.1c-.15-.1-.33-.18-.52-.2l-.6-.1c-.06 0-.1-.02-.16-.03L7 21.74c-.1-.02-.2-.1-.27-.2-.06-.1-.17-.14-.27-.1-.2.08-.36.1-.52.13H5.8c-.26.02-.5-.02-.74-.13-.24-.1-.4-.25-.55-.44-.12-.17-.3-.3-.52-.34l-.28-.06c-.2-.04-.4-.12-.58-.24-.2-.14-.3-.27-.38-.43-.08-.15-.13-.32-.14-.5v-.08c-.02-.2-.16-.38-.35-.43-.23-.07-.4-.17-.55-.3-.14-.13-.22-.32-.22-.52l.02-.44c0-.17-.05-.32-.17-.43-.12-.12-.2-.27-.2-.43l-.03-.36c-.02-.26-.07-.52-.13-.78-.06-.23.03-.46.22-.57l.07-.05c.1-.07.14-.2.08-.32l-.08-.1c-.1-.1-.2-.17-.3-.2-.08-.02-.1-.1-.1-.15l.1-.12c.06-.07.05-.18 0-.24-.08-.08-.12-.18-.13-.28l-.02-.7c0-.14.02-.28.06-.42.04-.12 0-.26-.12-.32zm9.9-1.32c.07-.07.06-.2 0-.25-.1-.08-.17-.17-.23-.27l-.1-.16c-.07-.13-.16-.24-.26-.34l-.02-.02c-.1-.08-.17-.18-.23-.3-.05-.1-.05-.2 0-.3l.06-.1c.06-.1.1-.24.1-.36v-.04c0-.1-.04-.2-.1-.3-.04-.08-.08-.18-.1-.28V8.1c-.03-.12 0-.25.08-.35.08-.13.14-.25.17-.4v-.02c.04-.1.02-.23-.04-.33s-.08-.2-.04-.32l.07-.2c.06-.18.15-.34.27-.48l.14-.15.1-.12.06-.06c.06-.06.07-.16.02-.24-.05-.1-.08-.2-.06-.3l.02-.14c.03-.2.1-.4.23-.56l.04-.04c.15-.2.34-.33.56-.4l.27-.1c.12-.04.2-.17.2-.3 0-.16.05-.3.14-.43l.05-.05c.1-.17.22-.34.3-.52l.07-.13c.02-.03.03-.07.03-.1 0-.17-.1-.32-.26-.33L11.76 2c-.25-.02-.5 0-.74 0l-.85.1c-.13 0-.23.1-.24.24 0 .14-.1.26-.22.3l-.36.1-.1.03-.3.1c-.22.07-.4.23-.5.45l-.08.13c-.1.22-.27.4-.48.53-.2.13-.3.34-.32.58v.1c-.02.2-.08.4-.2.54l-.05.08c-.08.1-.1.23-.05.34.05.12.08.25.07.38v.53c0 .14-.1.26-.2.3-.14.05-.23.16-.27.3l-.05.2c-.04.2.03.4.2.52.16.12.26.3.3.52v.18c.03.2.14.4.32.5.18.12.32.3.4.5l.05.16c.08.22.26.35.46.37h.06c.18 0 .34.1.44.26.1.16.26.27.44.3l.28.08c.17.05.33.14.46.27l.02.02c.1.08.26.07.35-.04l.07-.08zm1.14-.92c.1.06.2.03.24-.06l.03-.05c.07-.14.16-.28.26-.4l.2-.3c.03 0 .04-.02.05-.04l.24-.32c.1-.1.22-.17.36-.17.13 0 .24-.07.3-.2.04-.14.1-.27.22-.38l.05-.06c.1-.1.2-.15.3-.2.13-.02.25-.04.37-.04h.3c.12 0 .22-.05.28-.15.06-.1.15-.17.25-.22l.1-.04c.16-.07.34-.12.52-.14l.2-.02c.12 0 .25 0 .37.07.1.07.23.06.33-.02l.07-.04c.15-.1.32-.18.5-.2h.02c.2-.04.38-.04.58-.03h.1c.2.03.37.1.5.25l.03.04c.1.1.26.18.4.18h.17c.05 0 .1-.02.13-.07.03-.03.08-.06.13-.06h.1c.14 0 .27.04.4.08l.17.07c.16.05.33.1.5.12h.12c.08 0 .13-.05.13-.12 0-.1-.02-.2-.07-.28L20.68 7c-.08-.13-.14-.27-.2-.4l-.02-.05c-.05-.1-.05-.2 0-.3V6.2c.02-.08-.02-.17-.1-.2L20.28 6c-.16-.05-.3-.14-.4-.27l-.1-.1c-.1-.1-.16-.25-.2-.4-.05-.13-.16-.23-.3-.23h-.42c-.15-.02-.28-.1-.37-.22l-.04-.05c-.07-.1-.13-.22-.17-.34-.05-.1-.16-.16-.26-.13l-.12.04c-.2.07-.4.1-.6.08l-.16-.02c-.17 0-.33-.07-.46-.17l-.1-.07c-.08-.06-.16-.1-.25-.14-.1-.04-.18-.02-.24.05l-.05.06c-.1.1-.24.18-.38.2l-.54.03c-.1 0-.2.05-.27.12-.08.07-.17.12-.27.14h-.02c-.1 0-.2.07-.3.14v.02c-.1.1-.23.15-.36.15l-.04.02c-.12 0-.24 0-.36.03h-.12c-.17.03-.3.17-.34.35l-.04.23c-.03.16-.1.3-.2.43-.1.12-.22.2-.37.2h-.15-.02c-.1.02-.2.13-.18.25.02.17 0 .32-.03.47l-.04.17c-.04.15-.14.27-.27.32l-.06.03h-.02c-.06.04-.1.13-.05.2.06.1.08.2.07.3l-.03.32c0 .12-.05.23-.1.33-.06.1-.06.2-.02.3l.1.22c.05.1.06.2.03.32-.03.1-.05.2-.04.3 0 .1.06.2.14.24l.02.02zm7.9 7.23c.1.1.25.14.37.06l.2-.13c.1-.07.18-.17.22-.3v-.02l.1-.3.06-.1.04-.1.04-.07c.04-.08.1-.14.2-.17l.04-.02c.08-.02.13-.1.13-.18 0-.1.05-.18.1-.25l.08-.07.2-.26v-.02c.06-.08.1-.17.12-.27.02-.1 0-.2-.04-.3l-.02-.04c-.04-.1-.06-.17-.07-.26l-.03-.28-.03-.3c0-.1.04-.2.1-.3.07-.08.12-.18.16-.28v-.04l.02-.02c.02-.1-.03-.2-.12-.2-.1-.05-.2-.13-.23-.25l-.03-.06c-.05-.18-.08-.36-.08-.54l.02-.5v-.03c0-.17-.14-.3-.3-.3h-.02c-.2 0-.36-.06-.5-.2l-.08-.1-.2-.23-.26-.3c-.1-.14-.2-.26-.33-.38-.1-.1-.25-.2-.4-.22l-.2-.03c-.1-.02-.23-.07-.34-.14-.08-.06-.2-.04-.28.04l-.13.14-.06.04c-.07.02-.14-.02-.17-.1-.04-.12-.04-.26.02-.38v-.06c0-.07-.06-.12-.12-.1h-.16c-.18 0-.36-.02-.53-.1l-.1-.04c-.1-.05-.22-.08-.33-.08-.1 0-.2.02-.3.08l-.04.03c-.12.08-.26.12-.4.13h-.33c-.15 0-.3.05-.4.13-.13.08-.27.13-.42.16l-.27.04c-.12.03-.25.08-.36.17-.1.1-.24.16-.37.2l-.05.02c-.16.05-.3.15-.4.3l-.12.12c-.07.1-.07.22 0 .32.06.1.18.13.3.1l.15-.06c.08-.03.17 0 .24.04.06.05.15.08.24.07l.25-.03c.14 0 .28 0 .42.04.15.05.28.1.4.2s.25.14.4.16c.15.02.3.05.44.1l.1.02c.1.03.18.1.24.2.05.08.1.2.1.3v.03c0 .12.1.2.2.2h.06c.16 0 .33.02.5.07l.07.03c.1.04.2.1.27.2.08.1.13.2.16.3l.03.14c.03.15.04.3.04.46v.05c0 .1.07.2.18.24.1.02.22.06.33.12l.05.02c.13.08.26.18.36.3l.05.07c.13.15.2.34.2.53v.07c0 .15-.03.3-.08.44-.04.12 0 .26.13.3l.07.05c.15.06.28.17.38.3.1.15.14.32.14.5v.3c-.02.1-.05.18-.1.25s-.05.17 0 .24l.06.1zm-6.4-5.12h-.02c-.04 0-.06.05-.05.1l.04.2c.04.16.06.32.08.48.02.16.1.3.22.4h.04c.15.12.24.3.25.48v.5c-.02.1 0 .2.06.28l.05.05c.1.12.14.26.15.4l.03.55c0 .13-.08.24-.2.26l-.1.02c-.07 0-.1.08-.1.15 0 .08.03.17.06.25v.02c.03.1.04.2.03.3l-.04.27c-.04.2-.1.38-.2.56l-.07.12c-.05.1-.12.16-.2.2-.1.04-.17.12-.2.22l-.08.36c-.05.2-.14.4-.26.6h-.02c-.12.16-.27.3-.45.4l-.12.08-.3.15c-.1.04-.16.13-.18.24l-.05.33c-.03.2-.1.37-.24.5l-.13.15-.15.15L11 21c-.12.14-.3.2-.5.17l-.36-.07-.33-.04h-.09c-.04.04-.05.1-.02.16.07.12.18.2.3.2l.22.04c.1 0 .22.05.32.1.1.07.2.12.32.15h.02c.13.05.27.06.4.05l.15-.02c.17-.02.33 0 .47.06l.12.04c.05.02.13 0 .18-.05.06-.06.12-.1.2-.13l.08-.02c.13-.04.26-.06.4-.06h.08c.12 0 .23.02.33.08l.04.02c.07.03.15 0 .2-.06.03-.07.1-.14.17-.2l.25-.17.16-.1.08-.05c.1-.07.24-.1.36-.1l.36-.03c.14-.02.26-.12.3-.26.04-.15.1-.3.2-.43s.2-.24.3-.34c.13-.1.26-.15.4-.16h.08c.16-.03.28-.18.27-.34v-.02V18.77c.02-.1.06-.23.12-.33l.2-.3.08-.1c.06-.05.1-.12.17-.2l.1-.13c.06-.1.06-.23-.02-.32-.1-.1-.15-.24-.17-.38v-.04c-.02-.16-.02-.33.03-.5v-.05c.05-.13.12-.26.2-.38.08-.1.07-.24-.03-.32l-.17-.15c-.14-.12-.22-.3-.24-.48l-.02-.2c0-.06 0-.13-.02-.2l-.02-.15c-.02-.17-.12-.3-.26-.4l-.07-.02c-.1-.06-.2-.15-.28-.27-.08-.1-.12-.24-.15-.38l-.03-.17c0-.06-.04-.1-.1-.13l-.16-.05-.32-.1c-.1-.02-.2-.1-.27-.17h-.02c-.06-.08-.16-.08-.22-.02l-.1.1c-.02.03-.04.04-.07.03-.06 0-.1-.05-.08-.1.02-.16-.04-.32-.17-.42l-.13-.1-.3-.2c-.08-.03-.2 0-.24.1l-.04.06c0 .02-.03.03-.04.04-.04 0-.1 0-.1-.05l-.03-.05c-.03-.06-.1-.1-.16-.12zm-1.2 1l-.05-.05c-.05-.04-.1-.03-.15.02-.07.12-.13.25-.16.38v.02c-.03.13-.15.22-.27.2h-.1-.02c-.14 0-.25.12-.25.26 0 .18-.06.36-.17.5l-.06.06c-.1.13-.25.22-.4.27l-.08.02c-.1.03-.18.1-.2.22 0 .1-.06.2-.14.28l-.1.08c-.12.13-.3.2-.48.22l-.5.05c-.16 0-.3.1-.4.25-.1.15-.25.25-.4.27l-.22.02c-.16.02-.33.02-.5-.02l-.1-.02-.27-.07c-.1-.03-.18 0-.24.07l-.1.13c-.13.15-.32.22-.5.2l-.65-.08c-.1 0-.18-.05-.27-.1-.1-.06-.17-.13-.24-.2l-.25-.3c-.03-.02-.08-.03-.13-.02l-.14.06-.56.14c-.1.03-.23 0-.33-.06-.1-.08-.22-.1-.34-.1H3.2c-.12.03-.2.16-.16.28l.04.2c.03.1.02.22-.03.32s-.04.2.03.3l.06.08c.08.12.2.22.3.32.1.1.2.2.28.33l.15.27c.08.14.2.22.36.22.15 0 .3.05.42.15l.3.28c.08.07.2.08.28.02l.05-.02c.06 0 .1.04.1.1v.05c0 .13.1.25.23.3l.45.1c.16.05.32.1.47.2h.08c.08 0 .15-.07.14-.16v-.35c0-.1.04-.2.12-.24l.05-.02c.05.02.1.06.08.1v.17c0 .13.04.25.13.34.1.1.23.12.34.08.12-.05.24-.06.37-.05l.37.02c.18.02.35 0 .5-.07.18-.06.33-.14.47-.25l.06-.04.3-.27c.1-.1.23-.15.35-.15h.4c.2-.02.38-.2.4-.4l.04-.2c0-.13.06-.25.15-.35.1-.1.2-.16.3-.2l.12-.05c.17-.07.3-.22.36-.4l.06-.24c.05-.2.15-.4.3-.53l.02-.02c.12-.1.14-.3.06-.44l-.03-.07c-.07-.1-.08-.25-.03-.38.05-.14.1-.26.18-.38l.1-.14c.04-.08.04-.2-.02-.27-.06-.08-.1-.18-.1-.28l-.02-.14v-.34c.02-.1 0-.23-.03-.33l-.04-.12zm-1.43-.76v-.03c0-.1-.06-.16-.14-.16h-.26c-.1.02-.2.02-.28 0h-.45c-.23 0-.45-.04-.67-.1l-.24-.06-.2-.06-.45-.15c-.24-.07-.42-.23-.53-.45l-.05-.1c-.07-.15-.22-.23-.37-.2-.17 0-.34 0-.5-.08l-.12-.05c-.23-.1-.4-.3-.4-.57l-.04-.27c-.03-.14-.12-.27-.24-.32-.14-.06-.27-.14-.4-.23l-.05-.03c-.15-.12-.28-.28-.35-.47l-.02-.06c-.05-.16-.06-.33-.02-.5l.02-.06c.04-.13.05-.26.05-.4 0-.12-.05-.24-.14-.33l-.14-.13c-.16-.13-.26-.32-.27-.53-.02-.22-.02-.43.02-.64V6.3v-.03c0-.12-.1-.2-.2-.2H4.2c-.13 0-.24.08-.3.2-.05.14-.13.25-.22.36l-.04.05-.2.2-.1.1c-.1.1-.16.25-.18.4-.02.15-.06.3-.12.44l-.02.05c-.05.12-.13.23-.23.3-.1.08-.17.2-.17.32l-.02.46c0 .2-.03.4-.1.6l-.02.08c-.05.13 0 .27.12.33l.42.18.04.02c.03 0 .04.02.05.05.03.04 0 .1-.03.1l-.1.05c-.06.02-.1.08-.12.15l-.02.1v.02l-.1.56c-.02.08-.02.17-.02.26 0 .08.05.15.12.18l.22.1c.1.06.22.13.3.2l.1.08c.03.04.08.08.12.1l.04.04c.07.06.12.14.14.23l.1.45c0 .12.1.22.2.25l.16.05s.03 0 .05.02l.2.06c.16.05.3.14.42.26.12.1.24.23.34.37l.04.04c.08.1.2.15.32.12s.25-.04.38-.04h.15c.1 0 .23.03.34.1.1.06.23.1.35.15h.03c.12.05.25.03.35-.04.1-.08.23-.12.36-.12l.47.03c.1 0 .2-.02.25-.1h.02l.17-.16.05-.05c.08-.1.2-.14.32-.15h.45c.12 0 .23-.1.28-.2.05-.1.15-.18.27-.2l.2-.04c.08 0 .15-.07.18-.16.03-.1.08-.18.15-.24l.16-.16c.1-.1.15-.2.17-.32z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.codewars.com\",hex:\"AD2C27\"},Codio:{title:\"Codio\",slug:\"codio\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Codio icon</title><path d=\"M11.997 24L1.605 17.997v-12L12 0l10.396 5.997L16.5 9.402 12 6.8 7.496 9.4v5.2l4.502 2.6 4.5-2.6 5.895 3.397L12.003 24h-.006z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://codio.com\",hex:\"4574E0\"},CoffeeScript:{title:\"CoffeeScript\",slug:\"coffeescript\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>CoffeeScript icon</title><path d=\"M4.64 7.47c2.1.53 4.78.8 8.01.8 3.3 0 5.92-.27 8.01-.8 2.23-.52 3.3-1.22 3.3-1.88 0-.47-.48-.93-1.35-1.28.2.13.35.35.35.59 0 .67-1.01 1.22-3.04 1.68-1.88.41-4.28.7-7.2.7-2.82 0-5.33-.29-7.14-.68-1.95-.48-2.97-1-2.97-1.68 0-.28.13-.52.52-.8-1.22.47-1.88.87-1.88 1.47.07.68 1.16 1.36 3.39 1.88zM9.33 5.31c2.27-.2 2.93-1.66 5.59-1.9 1.31-.1 2.14.16 2.23.62.08.43-.57.72-1.36.78-1.09.11-1.54-.28-1.63-.65-.81.09-.94.43-.9.67.09.46 1.07.92 2.75.76 1.9-.15 2.54-.9 2.38-1.65-.2-.98-1.66-1.8-4.28-1.55-3.36.3-3.34 1.86-5.63 2.05-.94.09-1.46-.13-1.55-.5-.06-.37.4-.55.94-.59.5-.05 1.11.04 1.4.2.21-.11.28-.22.26-.35-.1-.35-.79-.5-1.66-.44-1.7.15-1.7.91-1.64 1.25.17.87 1.48 1.45 3.1 1.3zM20.75 9.15c-2.1.49-4.78.81-8.01.81-3.3 0-5.99-.34-8.08-.8-1.88-.48-2.88-1.01-3.23-1.56.18 1.23.49 2.42.89 3.55-.48.3-.91.67-1.3 1.17A4.52 4.52 0 0 0 0 15.42a3.6 3.6 0 0 0 1.42 2.62c.87.68 1.81.88 2.88.68.41-.07.87-.28 1.29-.42-.88 0-1.62-.28-2.36-.87a3.55 3.55 0 0 1-1.49-2.42c-.2-.94 0-1.81.53-2.58.12-.15.25-.28.39-.4.3.73.62 1.45.98 2.12.81 1.23 1.62 2.3 2.43 3.46.35.68.58 1.35.74 2.02a3.9 3.9 0 0 0 2.23 1.5c1.15.4 2.35.58 3.58.51h.13a10.2 10.2 0 0 0 3.69-.52 4.18 4.18 0 0 0 2.16-1.49h.07c.13-.67.35-1.34.67-2.02.8-1.17 1.62-2.23 2.42-3.46A21 21 0 0 0 24 7.61c-.43.6-1.44 1.13-3.25 1.54z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://coffeescript.org/\",hex:\"2F2625\"},Coinbase:{title:\"Coinbase\",slug:\"coinbase\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Coinbase icon</title><path d=\"M2.391 13.861c.089.195.204.37.341.524a1.975 1.975 0 0 1-.963.235C.744 14.62 0 13.944 0 12.866c0-1.086.782-1.762 1.769-1.762.351 0 .628.076.908.225-.131.16-.238.342-.32.541a1.388 1.388 0 0 0-.52-.098c-.607 0-1.078.388-1.078 1.094 0 .668.456 1.094 1.109 1.094.187 0 .36-.034.523-.099zm2.062-2.757c1.01 0 1.739.714 1.739 1.762 0 1.04-.729 1.754-1.739 1.754-1.002 0-1.731-.714-1.731-1.754 0-1.048.729-1.762 1.731-1.762zm0 .645c-.562 0-.972.433-.972 1.117 0 .676.41 1.109.972 1.109.577 0 .98-.433.98-1.109 0-.684-.403-1.117-.98-1.117zm2.217 2.795V11.18h.751v3.364H6.67zm-.099-4.397a.472.472 0 0 1 .942 0 .48.48 0 0 1-.471.478.48.48 0 0 1-.471-.478zm1.506 1.246a4.49 4.49 0 0 1 1.541-.289c.858 0 1.405.326 1.405 1.276v2.164h-.744v-2.096c0-.486-.304-.661-.721-.661a2.59 2.59 0 0 0-.729.099v2.658h-.752v-3.151zm3.575-2.013h.752v1.891c.159-.084.471-.167.766-.167.972 0 1.701.623 1.701 1.701 0 1.086-.721 1.815-1.966 1.815-.486 0-.911-.098-1.253-.22V9.38zm.752 4.527c.144.045.334.068.524.068.69 0 1.184-.38 1.184-1.155 0-.653-.463-1.04-1.032-1.04a1.41 1.41 0 0 0-.676.159v1.968zm4.638-1.618c0-.365-.273-.532-.645-.532a1.9 1.9 0 0 0-.972.273v-.653a2.241 2.241 0 0 1 1.093-.273c.737 0 1.26.304 1.26 1.147v2.225a5.026 5.026 0 0 1-1.153.137c-.873 0-1.511-.266-1.511-1.026 0-.683.584-1.017 1.556-1.017h.372v-.281zm0 .782h-.319c-.524 0-.865.152-.865.494 0 .349.319.486.774.486.114 0 .274-.016.41-.038v-.942zm1.283.562c.311.235.683.38 1.025.38.334 0 .554-.114.554-.38 0-.274-.197-.372-.63-.486-.698-.16-.995-.441-.995-1.025 0-.684.517-1.018 1.2-1.018.38 0 .683.083.964.258v.691c-.296-.212-.584-.342-.941-.342-.327 0-.501.16-.501.38s.144.334.531.441c.767.167 1.101.455 1.101 1.063 0 .706-.539 1.025-1.268 1.025-.395 0-.789-.106-1.04-.273v-.714zm3.337-.6v.015c.045.6.562.927 1.085.927.463 0 .798-.107 1.131-.327v.661c-.303.213-.751.311-1.184.311-1.047 0-1.761-.668-1.761-1.731 0-1.071.698-1.785 1.625-1.785.979 0 1.442.63 1.442 1.549v.38h-2.338zm1.632-.486c-.015-.524-.273-.813-.759-.813-.433 0-.752.304-.85.813h1.609z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.coinbase.com/press\",hex:\"0667D0\"},Composer:{title:\"Composer\",slug:\"composer\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Composer icon</title><path d=\"M16.661 0c-.07 0-.115.034-.165.095a.416.416 0 0 0-.07.43c.19.41.363.83.528 1.25.01.02.022.04.039.068-.039-.002-.05-.022-.063-.043-.297-.31-.648-.557-.998-.804-.473-.337-.99-.603-1.503-.872a.578.578 0 0 0-.214-.065l-.384-.04c-.202-.025-.355.09-.355.292 0 .108-.046.132-.135.14-.079.004-.187.115-.196.192a.694.694 0 0 0 .228.619c.444.415.873.845 1.303 1.275l.015.007a.1.1 0 0 1 .028.038c-.007.003-.014.003-.019.003a.057.057 0 0 1-.036-.022c-.002-.002-.005-.005-.005-.007-.062-.036-.127-.07-.187-.11-.3-.2-.595-.404-.895-.598a.943.943 0 0 0-.461-.17.453.453 0 0 0-.392.143.28.28 0 0 0-.088.253c.016.146.115.237.223.312.502.338.95.734 1.366 1.174.036.038.074.079.115.112.118.096.19.224.262.356.033.06.021.074-.043.074-.428 0-.836.118-1.246.204-.168.036-.334.094-.394.28-.065.21-.096.328.16.392a9.57 9.57 0 0 1 1.49.516.55.55 0 0 1 .117.077c.12.104.23.219.362.303.38.247.77.478 1.22.583.053.012.1.039.151.05.05.015.084.044.094.094.029.178.139.279.305.33.021.006.038.02.06.028.052.017.076.055.093.108.067.24.137.478.212.715.026.08.002.101-.07.123-.372.108-.742.22-1.112.334-.132.04-.134.043-.067.163l.908 1.635c.127.23.132.23.365.11.024-.012.057-.053.079-.014.021.036.06.089.024.13-.113.129-.19.28-.286.42-.031.045-.031.074-.005.117.101.166.202.334.3.502.012.019.034.043.03.058l-.123.367a2.538 2.538 0 0 0-.317-.716c-.18-.288-.41-.542-.62-.811-.033-.04-.072-.077-.11-.115-.2-.207-.456-.332-.699-.478a1.026 1.026 0 0 0-.34-.127c-.375-.08-.747-.11-1.12.004-.076.024-.117.005-.162-.06-.092-.127-.166-.273-.289-.372-.3-.24-.617-.458-.986-.583a2.95 2.95 0 0 0-.865-.168 4.267 4.267 0 0 0-.463.017c-.396.03-.79.074-1.14.293-.07.043-.15.067-.221.108-.36.194-.716.386-1.016.679a13.1 13.1 0 0 0-.897.944c-.322.384-.565.818-.783 1.267-.015.031-.022.07-.07.096l-.12-.744c-.007-.046.022-.043.053-.038.089.01.175.014.264.026.067.01.103-.005.12-.08.022-.102.046-.206.067-.311.082-.397.2-.78.303-1.17.02-.074.007-.1-.07-.12-.381-.09-.763-.192-1.145-.283-.072-.017-.106-.043-.084-.12.087-.298.125-.61.242-.9a.178.178 0 0 1 .056-.087c.098-.076.17-.165.16-.302-.007-.103.041-.168.14-.214.182-.086.358-.187.53-.288a.84.84 0 0 0 .327-.333c.322-.605.59-1.242.98-1.81.033-.051.06-.106.1-.15.252-.264.488-.544.771-.78.089-.074.113-.175.115-.285 0-.128-.074-.217-.151-.305-.075-.087-.151-.161-.279-.147-.028.003-.057-.01-.088-.014.019-.039.05-.048.076-.065.339-.218.677-.437 1.016-.658.41-.264.819-.53 1.232-.794.052-.034.076-.06.019-.11-.015-.013-.024-.03-.036-.044-.084-.099-.084-.099-.2-.029L8.084 3.692c-.101.062-.101.062-.152-.05-.112-.263-.177-.539-.261-.81-.02-.062-.003-.098.045-.137.289-.23.553-.49.82-.742a.604.604 0 0 0 .186-.37c.022-.17-.09-.259-.244-.196a1.707 1.707 0 0 0-.221.105c-.68.375-1.405.632-2.149.848-.043.012-.082.026-.118-.02-.074-.09-.185-.14-.278-.208a.073.073 0 0 0-.063-.015c-.1.027-.204.056-.266.147-.159.233-.358.44-.507.682-.17.28-.333.562-.525.828-.036.05-.05.058-.084-.002L3.63 2.635a2.837 2.837 0 0 0-.223-.338c-.094-.118-.209-.176-.358-.159-.026.003-.06-.005-.07.036-.02.11-.071.226-.057.332.034.27.082.542.15.806.114.459.244.912.38 1.364.133.444.282.88.426 1.323.012.038.033.072-.02.103-.067.038-.175.058-.187.125-.012.07.05.15.08.225l.007.017c.024.058.036.144.079.166.058.029.11-.05.163-.082.048-.029.065-.021.087.029.124.293.252.583.379.876a.18.18 0 0 1 .007.137 4.138 4.138 0 0 0-.192.72c-.012.07-.038.07-.091.055a107.64 107.64 0 0 0-.833-.21c-.123-.032-.123-.032-.137.093v.01c-.06.665-.12 1.33-.183 1.994-.004.06.003.085.068.092.194.024.386.055.578.084.036.005.067.007.058.06-.043.225-.077.453-.125.677a.178.178 0 0 0 .034.163c.067.087.132.175.199.264.046.063.08.144.038.209a.201.201 0 0 0-.033.118c.007.415.007.83.026 1.246.01.201.007.403.012.605.01.535.04 1.068.06 1.603.01.262-.036.521-.024.783.002.065.017.1.084.122.159.05.312.116.473.166a.28.28 0 0 1 .185.156.436.436 0 0 1 .038.219c-.002.072.024.115.082.156.247.177.492.36.74.542.65.48 1.3.963 1.954 1.44.06.046.074.082.038.147-.034.062-.055.135-.089.197-.029.058-.024.094.031.134.082.058.161.123.236.188.065.055.067.141.048.208-.015.049-.087.005-.132 0-.032-.002-.063-.01-.094-.014-.31-.05-.617-.13-.932-.156-.501-.04-1.003-.084-1.51-.07-.026 0-.067-.024-.074.03-.007.042-.017.088.031.117.024.014.05.026.077.036.283.098.547.24.807.389.168.096.333.204.518.269.034.012.068.038.108.002-.278-.22-.554-.442-.833-.665.039-.029.07-.017.099-.014.333.026.665.072.989.149.713.17 1.421.362 2.122.573.23.07.475.104.682.243.05.033.08.067.074.13.012.014.027.033.01.045-.02.012-.036-.012-.05-.024-.164-.014-.327-.026-.488-.043-.463-.046-.924-.11-1.392-.096-.35.01-.701-.015-1.05.01-.494.033-.989.098-1.48.15-.025.003-.063-.002-.063.027 0 .036.014.077.06.087a.58.58 0 0 0 .113.012c.25.01.497.007.746.011.62.015 1.242-.012 1.86.041.224.02.45.01.668.05 1.03.193 2.055.394 3.078.618.12.026.243.045.36.103-.055.05-.127.065-.158.137-.219.506-.363 1.04-.53 1.563-.03.089.03.192.12.216a.278.278 0 0 0 .352-.221c.02-.108.039-.216.053-.327.005-.036.017-.055.053-.067.132-.053.261-.108.393-.16a1.63 1.63 0 0 0 .529-.325c.134-.127.247-.274.25-.47 0-.06.014-.099.062-.135.22-.17.418-.365.61-.564a6.03 6.03 0 0 1 .6-.533c.024-.02.043-.048.081-.034l.56.221c-.375.228-.73.447-1.083.66-.017.01-.036.015-.053.02a.813.813 0 0 0-.338.201c-.375.372-.567.814-.545 1.35.014.36.22.53.571.449.615-.144 1.14-.733 1.232-1.379.024-.18.052-.357-.077-.513a2.251 2.251 0 0 0-.178-.195c.02-.012.029-.019.039-.026.777-.463 1.625-.778 2.475-1.07 1.04-.359 2.1-.644 3.164-.918l-.075-.017c-.07.007-.136.015-.206.02a5.097 5.097 0 0 0-.872.134l-.016.007a.226.226 0 0 1-.094.015c-.014 0-.029 0-.048.002.065-.062.252-.264.303-.25l.002-.005h.005c0-.007.019-.021.019-.021.017-.029.04-.048.074-.05a.694.694 0 0 1 .197-.188c.05-.031.103-.062.161-.086h-.002c.16 0 .319-.194.486-.262-.001-.006-.01-.01-.013-.017-.24.034-.476.072-.706.159-.492.182-1.001.324-1.481.535-.742.324-1.482.648-2.195 1.035a.818.818 0 0 1-.077.036l-.055-.504c-.005-.034.012-.048.041-.063.631-.334 1.265-.665 1.925-.938.543-.226 1.08-.471 1.626-.692.002-.005.005-.01.01-.01h.004c.003 0 .003.003.005.003.007.012.002.02-.005.026-.002.003-.005.003-.01.005h-.002a3.358 3.358 0 0 0-.372.66c.038.01.053-.002.067-.017.113-.12.226-.237.336-.357.214-.235.44-.459.704-.641.017-.012.045-.022.033-.048-.014-.03-.045-.015-.067-.01-.247.05-.494.096-.74.154-.081.019-.076-.01-.079-.067-.002-.197.027-.39.034-.586a.63.63 0 0 1 .058-.247c.098-.226.197-.45.297-.675.05-.113.08-.233.099-.353.031-.192.055-.386.074-.58.031-.299.137-.58.187-.875.065-.374.118-.751.257-1.109.125-.317.245-.634.372-.948.176-.428.399-.833.505-1.29.036-.158.076-.302.004-.458-.04-.084-.052-.18-.081-.271a.392.392 0 0 1-.012-.204c.048-.245.07-.488-.063-.716-.036-.062.008-.1.044-.139.088-.091.093-.132.016-.23-.088-.11-.175-.224-.27-.327-.08-.084-.154-.175-.234-.262-.055-.033-.05-.055.012-.076.14-.048.276-.108.418-.152.08-.024.1-.07.106-.141.045-.605.09-1.213.139-1.818.007-.084-.007-.1-.094-.074-.454.144-.907.28-1.363.422-.14.044-.142.044-.204-.093-.231-.519-.411-1.057-.6-1.59a.392.392 0 0 1 .007-.316c.067-.188.024-.377.019-.567a.104.104 0 0 1-.005-.029 9.16 9.16 0 0 0-.254-1.548 6.02 6.02 0 0 0-.5-1.27c-.228-.432-.473-.86-.737-1.275-.113-.178-.233-.339-.434-.427A.702.702 0 0 0 16.66 0zm-2.643.26a.364.364 0 0 1 .2.051 19.042 19.042 0 0 1 1.469.805c.247.158.482.338.715.52.11.087.192.217.284.33.038.047.012.09-.024.124-.024.024-.058.039-.087.055-.031.022-.072.041-.06.087.01.04.055.05.091.058a.27.27 0 0 0 .159-.015c.168-.07.31.048.418.166.028.03.04.093.093.074.055-.021.063-.081.058-.137-.012-.15-.05-.297-.084-.444-.09-.377-.27-.718-.418-1.073-.053-.127-.11-.254-.163-.382-.029-.07.01-.132.048-.182.031-.04.081-.005.122.014.152.068.238.19.312.332.08.15.178.29.262.436.144.255.322.495.437.762.168.388.382.758.483 1.176.086.37.208.732.252 1.114.016.144-.01.283.007.422.033.279-.008.543-.123.798-.03.07-.021.136.012.208.252.533.461 1.083.67 1.635.027.072.015.101-.06.123-.482.141-.965.288-1.447.434-.07.022-.092.003-.113-.06-.123-.326-.24-.646-.353-.967-.024-.068-.053-.104-.128-.087-.088.022-.136-.017-.175-.096-.062-.127-.113-.28-.216-.36-.103-.08-.266-.082-.403-.115-.103-.027-.207-.058-.312-.075a1.428 1.428 0 0 1-.612-.273c-.303-.224-.615-.43-.934-.627-.104-.007-.202-.036-.303-.06-.278-.057-.554-.117-.833-.17-.067-.012-.08-.063-.084-.108-.007-.056.007-.11.065-.144.089-.053.19-.063.29-.08a9.69 9.69 0 0 1 1.345-.13c.11-.002.209.04.312.066a.18.18 0 0 0 .166-.03c.216-.143.434-.28.65-.422.034-.021.096-.036.07-.093a.083.083 0 0 0-.015-.022c-.012-.01-.026-.012-.043-.012l-.05.002h-.007a1.159 1.159 0 0 0-.668.2c-.079.05-.259.019-.31-.056-.34-.516-.823-.888-1.282-1.289-.204-.177-.403-.362-.619-.526-.055-.04-.08-.144-.043-.196.048-.072.11-.041.168-.015.185.082.362.175.528.293.564.403 1.17.744 1.772 1.085a.51.51 0 0 0 .05.027c.092.03.14-.01.125-.106a.267.267 0 0 0-.062-.134c-.488-.574-1.001-1.124-1.506-1.683-.105-.116-.23-.216-.348-.32a.854.854 0 0 1-.22-.278.16.16 0 0 1 .023-.19c.041-.045.077-.055.137-.024.17.082.332.178.483.293.266.202.535.403.804.605l.807.603c.021.017.043.033.062.05.05.046.094.094.142.142l.029.029c.019.019.036.045.06.06.055.033.112.062.17.004.02-.019.029-.036.031-.055 0-.007.003-.014 0-.021 0-.003 0-.008-.002-.01a.171.171 0 0 0-.043-.072l-.18-.187a4.537 4.537 0 0 0-.312-.298c-.349-.29-.706-.571-1.066-.845-.183-.14-.397-.233-.596-.348-.072-.041-.12-.101-.173-.159a.144.144 0 0 1-.024-.15c.022-.054.075-.051.12-.056zM8.252 1.649a.045.045 0 0 1 .029.005c.048.027.03.077.03.135.013.06-.026.11-.08.16-.346.322-.707.627-1.076.922-.147.118-.327.173-.49.262-.034.017-.053 0-.072-.024-.12-.154-.238-.31-.358-.463-.045-.055.017-.053.046-.065.254-.091.504-.195.756-.295.365-.144.696-.35 1.04-.533.036-.02.07-.043.105-.063.024-.01.044-.037.07-.041zm-2.619.83a.223.223 0 0 1 .134.064c.072.067.13.144.18.228.173.28.413.506.646.737.163.163.329.321.502.47.057.05.067.127.098.192.012.024.002.043-.02.055-.011.008-.023.013-.03.02-.142.12-.276.103-.442.019a3.182 3.182 0 0 1-.864-.646c-.01-.01-.02-.017-.03-.024-.114-.086-.12-.082-.17.05-.052.135-.086.274-.146.404-.022.045.012.094.046.127.038.039.064.099.134.089.031-.005.048-.022.055-.055.017-.08.039-.159.06-.257.262.22.553.391.84.583l-.278.159c-.713.4-1.428.801-2.139 1.205-.058.031-.082.038-.106-.034-.273-.847-.561-1.69-.79-2.552-.052-.2-.074-.408-.112-.612-.012-.06.028-.091.067-.113.053-.026.055.036.074.06.377.521.634 1.11.941 1.669.092.168.195.331.293.497.02.03.034.057.082.04.053-.019.043-.052.034-.09-.039-.174-.128-.33-.193-.493a.18.18 0 0 1 .003-.16c.137-.284.329-.531.48-.803.14-.247.317-.468.451-.717a.205.205 0 0 1 .2-.111zm1.774.492c.014.003.024.016.036.042.12.27.201.555.302.83.01.027.012.049-.017.066l-.256.158c-.008.005-.017.007-.046.02-.007-.013-.017-.034-.031-.051l-.54-.62c-.024-.028-.048-.055 0-.081.177-.101.312-.264.499-.35.024-.011.04-.017.053-.014zm1.929.486a.204.204 0 0 1 .14.046.21.21 0 0 1 .08.218.556.556 0 0 1-.161.29 5.528 5.528 0 0 0-.882 1.093c-.228.36-.453.718-.624 1.11a.768.768 0 0 1-.146.206c-.24.273-.526.485-.855.638a.17.17 0 0 0-.108.159c-.005.06-.024.118-.029.178a.48.48 0 0 1-.19.381c-.04.031-.045.082-.06.125l-.273.915c0 .007 0 .014-.002.019 0 .014.002.031-.017.038-.041.01-.077-.002-.113-.021a41.398 41.398 0 0 1-1.33-.334c-.055-.012-.108-.029-.166-.036-.088-.012-.096-.053-.055-.12.058-.281.125-.56.298-.797.038-.053.036-.096.002-.154-.19-.317-.334-.658-.492-.989-.026-.055-.017-.08.034-.11A574.27 574.27 0 0 0 6.97 4.705c.045-.03.089-.012.132-.022.151-.034.298-.08.43-.163.01-.007.026-.012.03-.022.097-.213.31-.286.49-.37.411-.187.826-.36 1.189-.633a.18.18 0 0 1 .095-.04zm11.443 3.772v.005l.002-.001c-.021.256-.043.498-.062.74l-.043.535c-.005.065-.024.106-.094.13a561.29 561.29 0 0 0-3.37 1.17l-.039.009c-.036.005-.055-.012-.08-.055-.218-.394-.439-.785-.662-1.177-.029-.05-.038-.077.034-.096l4.254-1.246c.014-.005.031-.007.06-.014zm-.41.386c-.154.003-.293.147-.286.293.007.137.124.257.254.252.137-.002.27-.153.267-.302-.005-.166-.082-.245-.236-.243zm-16.83.87c.01 0 .024.002.039.007L5.513 9c.645.171 1.291.34 1.937.51.062.017.082.036.06.1l-.278.913c-.01.036-.017.074-.058.074a.06.06 0 0 1-.02-.002l-1.036-.142c-.226-.03-.45-.062-.675-.093a255.003 255.003 0 0 0-2.055-.286c-.043-.012-.058-.038-.05-.098.052-.476.103-.951.153-1.429.003-.012.002-.021.005-.031a.035.035 0 0 0 .005-.015c.007-.014.021-.019.038-.019zm8.136.103l.113.002c.197.01.389.086.569.166.08.036.159.07.238.108l.057.029c.058.028.118.057.173.09l.113.065c.036.025.075.046.108.073.072.05.142.105.207.165.218.202.372.44.463.72.065.202.113.409.13.617.016.202-.044.399-.096.593-.008.03-.02.036-.03.034-.014-.005-.021-.022-.033-.036l-.216-.25a2.105 2.105 0 0 0-1.042-.684 4.159 4.159 0 0 0-.994-.154 3.799 3.799 0 0 0-.804.092c-.211.04-.423.074-.631.113-.137.024-.262.086-.387.141-.06.027-.12.053-.18.076l-.02.004c-.376.132-.695.36-1.024.57-.09.06-.165.14-.243.218l-.01.008-.064.065c-.152.147-.3.296-.464.43-.074.103-.175.175-.268.266.024-.17.07-.328.146-.472a4.6 4.6 0 0 1 .262-.435c.048-.07.096-.14.146-.206a7.17 7.17 0 0 1 .315-.396c.081-.097.163-.193.247-.289.084-.096.168-.19.25-.285a.917.917 0 0 1 .115-.099l.026-.03c.078-.067.147-.137.238-.21l.012-.01.067-.062c.24-.228.519-.406.797-.583.028-.019.057-.035.086-.051l.111-.048c.01-.004.02-.01.029-.012a2.78 2.78 0 0 1 .173-.065l.117-.036c.14-.04.279-.074.416-.117a2.45 2.45 0 0 1 .782-.115zm-7.57.449c-.071.004-.153-.003-.215.057a.462.462 0 0 0 .012.665.286.286 0 0 0 .379 0c.146-.127.183-.314.096-.535-.053-.137-.125-.187-.271-.187zm15.846.062c.087-.001.163.053.23.146.014.01.029.02.043.032.022.019.03.04.053.064.099.113.207.224.31.334a.064.064 0 0 1 .014.024.023.023 0 0 1-.002.022.04.04 0 0 1-.015.014l-.01.015-.002.002c-.002.002-.002.005-.004.01 0 .002-.003.004-.003.004h.003v.008c-.145.146-.106.283.01.415.006.012.014.024.014.036.096.127.016.254 0 .382-.003.012-.005.016-.015.021l-.007.003a.116.116 0 0 1-.029-.005l-.01-.003a9.772 9.772 0 0 1-.252-.077c-.007 0-.012-.004-.019-.007-.007 0-.012-.007-.019-.007a.284.284 0 0 1-.118-.019.252.252 0 0 0-.292.05.054.054 0 0 1-.005.02c.04.06.108.074.168.093.245.08.453.23.68.348.052.03.062.092.057.152-.003.033-.012.067-.02.103l-.072.31a.127.127 0 0 1-.019.076c.003.168-.115.293-.17.437-.007.012-.012.017-.02.041a3.223 3.223 0 0 1-.129.298c0 .007-.01.017-.012.024v-.005c0 .002-.002.002-.002.005l-.005.01c-.003.002-.003.004-.005.007-.012.045-.02.093-.058.132a1.913 1.913 0 0 1-.187.432c-.007.012-.012.012-.017.036-.062.144-.127.317-.19.475-.014.058-.026.115-.04.17l-.008.015c0 .002-.002.002-.002.005 0 .005-.005.01-.007.014a.45.45 0 0 1-.036.192c-.012.039-.022.082-.034.12a.074.074 0 0 1-.005.02l-.201.912c-.055.25-.077.504-.118.754-.038.235-.048.477-.106.708-.04.168-.136.324-.213.48-.072.146-.118.302-.207.444l-.007.015a.169.169 0 0 0-.012.03c-.002.006-.002.013-.005.018l-.007.033a.182.182 0 0 0-.002.036c0 .012 0 .024-.003.036v.036a.71.71 0 0 1-.002.072c-.02.257-.053.514-.041.773.002.048-.012.075-.058.091l-.057.022a1.598 1.598 0 0 0-.113.048l-.06.024c-.031.012-.05.022-.099.034v-.005s-.007.005-.011.005l-.133.055-.093.038a.635.635 0 0 1-.211.092l-.036.021a25.182 25.182 0 0 0-.474.211c-.081.024-.165.072-.247.11-.089.04-.175.075-.264.114-.139.062-.278.12-.418.182-.004.002-.012 0-.016 0-.128.048-.26.118-.38.173-.048.026-.117.053-.177.077-.11.043-.135.038-.159-.075-.072-.052-.079-.141-.105-.216-.027-.072-.048-.15-.072-.223-.005-.024-.017-.02-.017-.034-.024-.033-.024-.064-.036-.098l-.003-.017c-.007-.005-.007-.012-.01-.019l-.006-.017h.004c-.033-.1-.07-.199-.093-.3-.024-.067-.067-.132-.08-.202a.17.17 0 0 1 0-.07l.008-.033.004-.017c.02-.047.051-.093.075-.139.017-.038.031-.077.048-.115.017-.038.031-.067.048-.115.038-.072.062-.156.11-.24 0-.02.015-.039.02-.058.043-.146.09-.295.149-.437 0-.005-.005-.012-.003-.017.017-.086.098-.117.146-.168v.003c.024-.008.037-.022.049-.022.014-.024.028-.034.043-.048a1.518 1.518 0 0 0 .108-.149c.045-.067.086-.137.137-.204.016-.021.03-.055.057-.055.005 0 .007 0 .012.002.039.01.027.055.022.084a.88.88 0 0 0 0 .327c.012.084.026.168.033.252l-.002.038a.578.578 0 0 1 .036.19c.02.082.036.16.06.242.072.15.125.3.173.454l.005-.002c.081.12.163.26.245.391.024.031.05.065.074.089h.005v.02c.024 0 .036.052.072.004-.007-.024-.012-.024-.02-.024a.448.448 0 0 1-.03-.08c-.005-.016-.013-.035-.015-.05a.387.387 0 0 1-.012-.05c-.002-.007-.002-.017-.005-.024a.282.282 0 0 0-.01-.048l-.011-.075-.013-.074c-.007-.007-.007-.017-.007-.026-.002-.01-.004-.02-.01-.03-.002-.028-.007-.057-.011-.086l-.022-.172c-.002-.03-.012-.058-.014-.087a3.634 3.634 0 0 1 .036-.941h.014c.029-.144.058-.31.086-.466.008 0 .015.003.024.003-.01.261.017.52.075.775.002.005.002.012.002.017.036.098.075.197.106.298.007.021.014.043.022.062a.338.338 0 0 0 .055.094c.007.012.021.024.021.036.024.019.036.04.056.06.014.016.026.036.04.053.05.048.104.093.166.156a3.667 3.667 0 0 1-.017-.14c-.004-.043-.012-.086-.016-.134 0 0-.013-.007-.013-.012a.82.82 0 0 0-.01-.108l-.04-.33c0-.009 0-.016.002-.025 0-.01.003-.027.003-.027a2.705 2.705 0 0 1-.02-.415l-.002-.017a1.122 1.122 0 0 1-.002-.37c.005-.033.002-.07.005-.103 0-.007-.003-.012-.003-.02 0-.158.007-.319.055-.472l.003-.017c.012-.072.024-.158.036-.238.012-.079.024-.16.033-.24.005-.033.015-.05.034-.05.01 0 .024.005.04.017l.051.03.075.049c.024.017.048.033.07.055.002.002.004.005.009.007a.116.116 0 0 0 .017.012h.005v-.002c.168.084.261.226.374.358a.31.31 0 0 1 .11.151c.075.098.13.204.169.322.002.01.007.021.01.03.002.01.007.006.009.03.02.024.031.055.043.084l.034.084.019.04c.005.01.01.017.017.024a.07.07 0 0 0 .04.024c.027-.088-.035-.172-.011-.256h.007c0-.024-.007-.025-.007-.037-.024-.156-.044-.31-.109-.453-.002-.012-.002-.039-.002-.039-.058-.144-.086-.29-.17-.417a.103.103 0 0 1-.037-.063c-.026-.024-.04-.053-.055-.081a4.135 4.135 0 0 1-.038-.063v.017c0-.002-.005-.005-.005-.007v-.003a2.828 2.828 0 0 0-.22-.278l-.01-.01c-.01-.01-.02-.01-.03-.033-.057-.024-.112-.096-.17-.147-.007-.007-.014-.01-.019-.017-.005-.004 0-.01-.024-.016-.12-.082-.209-.183-.314-.255-.02-.024-.044-.01-.053-.048.31-.019.61.017.922.036v-.012h.002c.154.024.298.053.437.113.005 0 .01.007.017.007v.005c.096.022.187.065.278.108.02.01.044.04.065.012.017-.024-.01-.046-.024-.065-.036-.05-.07-.1-.108-.151-.007-.012-.019-.024-.019-.036-.072-.07-.127-.149-.19-.219a.953.953 0 0 1-.06-.064 1.162 1.162 0 0 1-.209-.17c-.012-.008-.024-.022-.036-.022-.03 0-.064-.034-.096-.056-.03-.021-.064-.04-.096-.062-.012-.007-.024-.012-.036-.02-.146-.055-.293-.105-.44-.16-.004 0-.013-.003-.013-.005 0 0-.013 0-.017-.002a.11.11 0 0 1-.072-.03.079.079 0 0 1-.027-.035l-.005-.012c-.007-.02-.01-.041-.007-.063a.968.968 0 0 0-.012-.22c-.002-.022-.007-.041-.012-.063a2.158 2.158 0 0 0-.014-.06l-.015-.062a2.29 2.29 0 0 0-.024-.09s-.01-.002-.01-.009c-.023-.146-.08-.293-.124-.437-.007-.019-.01-.033-.017-.057a.369.369 0 0 1-.057-.168c0-.02 0-.036.002-.056l.002-.026c.005-.027.01-.055.02-.082l.033-.108c0-.005 0-.017.003-.017h-.003c.031-.17.099-.314.147-.468 0-.002.005-.002.005-.005l.01-.01c.002-.002.004-.002.004-.004a.265.265 0 0 0 .053-.185.326.326 0 0 0-.027-.103c-.016-.043-.038-.084-.06-.127-.002-.005-.01-.01-.014-.012-.002-.003-.005-.005-.005-.008a1.196 1.196 0 0 1-.209-.355l-.016-.038c-.005-.005-.005-.01-.008-.017l-.002-.007a.12.12 0 0 1-.007-.017l.002.002-.002-.005a.276.276 0 0 1 .012-.043c.004-.01.01-.017.014-.026.005-.007.012-.014.02-.022l.009-.007c.065-.094.125-.192.197-.283a.26.26 0 0 0 .05-.252c-.04-.137-.036-.14.101-.19.024-.01.315-.12.432-.156l.075-.029.019-.007a41.645 41.645 0 0 1 .509-.19c.005-.002.012-.002.017-.002.141-.072.293-.118.441-.168.02-.007.036-.015.06-.02.024-.019.096-.035.12-.055.12-.038.216-.093.324-.117a.287.287 0 0 1 .167-.067zm-5.432.603a.82.82 0 0 1 .23.036l.014.004c.259.08.523.142.77.26.041.019.084.038.113.077.16.115.307.247.43.405.19.245.38.492.557.773-.011-.003-.022-.008-.034-.013v-.001a1.018 1.018 0 0 1-.185-.103 6.452 6.452 0 0 0-.674-.356 1.467 1.467 0 0 0-.331-.1 3.307 3.307 0 0 0-.91-.041c-.084.007-.17 0-.255 0-.062 0-.091-.03-.091-.092 0-.235.012-.472-.06-.7-.015-.048.014-.068.055-.082a1.12 1.12 0 0 1 .372-.067zm-2.75.773c.423-.015.812.105 1.167.324.132.08.253.176.363.284l.014.013c.122.123.23.26.321.41.08.13.058.272.031.414-.072.406-.316.706-.592.987-.265.269-.596.444-.903.648-.435.29-.932.403-1.438.478-.632.093-1.273.103-1.906.187-.23.029-.464.048-.694.089a1.07 1.07 0 0 0-.68.41c-.062.084-.1.187-.16.303a.527.527 0 0 1 .026-.394 1.12 1.12 0 0 1 .533-.54c.415-.219.879-.262 1.323-.375.36-.091.73-.144 1.087-.242a7.234 7.234 0 0 0 1.426-.55c.24-.125.49-.252.656-.485a.73.73 0 0 0 .12-.557c-.005-.034-.015-.05-.027-.053-.012-.002-.029.007-.05.027-.18.16-.367.314-.571.449-.32.206-.673.33-1.038.42-.58.144-1.166.266-1.764.31a4.84 4.84 0 0 0-1.239.242c-.34.118-.687.235-.96.49-.034.03-.075.057-.13.098l.007-.038-.026.019v-.005c.009-.006.016-.013.024-.017a.599.599 0 0 1 .084-.2l.646-1.022a.285.285 0 0 1 .041-.053c.334-.329.653-.677 1.023-.965.614-.48 1.284-.855 2.055-1.02.187-.041.377-.07.571-.07.22-.002.442-.01.66-.017zm-7.632.022c.013 0 .029.002.048.009.029.01.062.007.094.01.127.028.259.03.386.062.012 0 .017.002.034.01a2.174 2.174 0 0 1 .4.057c.145.02.289.036.433.06.033 0 .062-.002.093.017.005 0 .012-.002.012 0 .168.02.3.031.445.055h-.015v.005c.096.012.159.024.233.036.077.012.156.031.23.031h.003c.007 0 .012.003.017.003l.021.005c.048.002.067.028.075.07.038.227.07.455.117.683 0 .017.01.032.008.046l.019.11c.021.11.04.221.062.332 0 .01 0 .031.003.036v.01c.024.143.05.273.074.41v.046a1.717 1.717 0 0 0-.3.46c-.031.075-.07.152-.1.226l-.006.003c-.024.076-.062.15-.098.223-.003 0-.005.005-.007.01-.005.009-.008.024-.012.03v.003a2.478 2.478 0 0 1-.192.415c-.008.02-.024.039-.024.056-.024.09-.046.182-.092.266a.757.757 0 0 1-.074.226 2.102 2.102 0 0 1-.13.394c-.007.019-.019.036-.019.055l-.002.007c-.003.007-.005.02-.01.029a.106.106 0 0 1-.01.03l-.002.01-.038.742.021.008.094-.185c.031-.06.055-.123.089-.185.019-.043.05-.086.05-.13.072-.12.137-.24.211-.35.008-.012.022-.02.03-.043.062-.097.134-.224.208-.334.026-.043.054-.08.078-.123h-.001c.017-.048.043-.055.065-.076.021-.022.033-.044.081-.065 0 .019.005.036.003.053l-.003.01c0 .009-.004.018-.007.028l-.002.01c-.003.007-.003.012-.005.019a.054.054 0 0 0-.002.02c0 .006-.005.011-.003.018l-.003.015h.003c-.022.144-.021.307-.024.458 0 .007-.005.02-.005.024l.005-.002c.02.144.043.288.062.432h-.002c.003 0 .005.031.005.043.024.144.055.29.072.437l.002.017c.003.01.005.017.005.026.024.116.11.195.163.296.039.055.08.12.116.168h.002v.002c.12.106.22.214.355.31.02 0 .039.024.058.024h-.002v.012c.048.005.088.043.139.029a.087.087 0 0 0 .026-.012c.007-.005.017-.01.02-.017.011-.022-.01-.034-.027-.041-.197-.125-.166-.33-.19-.521h.008v-.003c.048.046.081.091.122.14a.1.1 0 0 0 .024.026l.05.055c.034.036.07.07.108.101.039.031.08.065.125.089.02.007.039.024.056.024h-.005c.144.07.269.137.4.206a.15.15 0 0 1 .08.036c.048.144.105.288.091.456.005 0 .01.017.012.03a.066.066 0 0 1-.002.03c.017.14.017.281-.003.42a.044.044 0 0 1-.002.039c-.003.005 0 .007-.002.012h.002c0 .14-.002.278-.038.415-.003.137-.046.27-.06.406 0 .005-.003.01-.005.017-.008.026-.02.057.038.05v-.002c.13-.135.26-.267.38-.418v.01c.002-.048.03-.073.057-.096.05-.049.1-.13.151-.2.05-.07.101-.137.152-.206l.002-.012c.007-.024.017-.039.029-.046.005-.002.01-.005.014-.005H9.3a.133.133 0 0 1 .05.02.835.835 0 0 1 .077.048c.144.079.307.132.415.269.012.012.026.014.038.038.05.024.096.08.133.132l.038.036c.002.002.005.002.007.005.19.16.204.247.067.46-.004.008-.012.015-.016.015a.236.236 0 0 1-.024.055.216.216 0 0 1-.02.036l-.01.017c-.035.058-.074.118-.088.185a.443.443 0 0 0-.012.168c.026.094.05.19.07.286.012.057.024.115.028.175.02.142-.048.228-.168.288v-.002c-.024.002-.026.017-.038.024a.078.078 0 0 1-.02.014.362.362 0 0 1-.038.026.192.192 0 0 0-.077.087c0 .007 0 .005-.002.01-.002.004 0 .014-.002.014h.007v.014c-.024.07-.036.12-.048.156-.003.01-.007.017-.01.024-.002.008-.007.012-.01.017-.002.005-.007.01-.009.012a.045.045 0 0 1-.024.012h-.007a.165.165 0 0 1-.05-.012c-.034-.012-.078-.029-.138-.048-.004-.002-.009-.002-.011-.005a.025.025 0 0 0-.012-.004l-.027-.012h-.01v-.01h-.002c-.072-.024-.14-.038-.204-.065-.038-.014-.08-.026-.12-.043-.05-.012-.1-.036-.151-.036-.14-.048-.281-.072-.416-.12-.011 0-.019.002-.043 0v.002c-.096-.019-.173-.043-.264-.06-.089-.014-.122-.06-.113-.148.005-.037.003-.08.003-.116 0-.012-.003-.017-.003-.04-.014-.025-.036-.053-.055-.085a.11.11 0 0 1-.014-.026c-.012-.012-.036-.024-.036-.038-.024-.005-.015-.01-.022-.015-.074-.07-.053-.163-.043-.252l.002-.029.008-.055c.002-.01.002-.02.004-.026.039-.15.048-.29-.113-.38-.019-.012-.03-.024-.055-.04v.004a2.869 2.869 0 0 0-.225-.165c-.012-.024-.015-.029-.039-.039a1.418 1.418 0 0 1-.31-.228l-.074-.04h.01c-.015-.025-.032-.022-.044-.034-.019-.014-.036-.024-.06-.039-.12-.103-.283-.199-.413-.316-.045-.015-.074-.05-.11-.08v-.004c-.127-.09-.252-.176-.377-.272h.003c-.015 0-.015-.012-.039-.024-.072-.036-.144-.096-.206-.144-.02-.024-.039-.024-.058-.024-.058-.048-.108-.07-.156-.113-.02-.012-.036-.026-.06-.04a2.178 2.178 0 0 1-.396-.289l-.012-.012-.022-.024a.188.188 0 0 1-.038-.081v.019c-.087-.094-.144-.202-.216-.3l-.007-.015a.027.027 0 0 1-.005-.014.107.107 0 0 1-.003-.026.118.118 0 0 1 .024-.053c0-.005.003-.012.003-.02.024-.153.108-.292.168-.436v-.037s0-.022-.003-.032l-.004-.014-.005-.005a.038.038 0 0 0-.017-.01h-.007a.122.122 0 0 0-.058.022.312.312 0 0 0-.055.043l-.02.015a.13.13 0 0 0-.014.019l-.007.01c0 .002-.002 0-.002 0 0 .002-.003 0-.003 0v.002c-.048.055-.12.103-.182.154-.012.012-.034.026-.034.038v-.002h-.007c-.02.024-.045.024-.072.012l-.31-.137c-.024-.012-.036-.038-.04-.062a.64.64 0 0 1-.008-.032l-.007-.026v.005c-.036-.168.022-.293.053-.437.002-.012.005-.024.005-.036.024-.14.033-.288.074-.423v-.062c-.021-.154-.022-.305-.033-.459l.002-.079c-.014-.286-.033-.571-.043-.857-.022-.598-.07-1.193-.053-1.79a.636.636 0 0 0-.074-.315 1.968 1.968 0 0 0-.099-.164.264.264 0 0 1-.048-.237c.036-.14.063-.284.089-.425.009-.05.022-.084.06-.086zm-.166.38l.005.015c.005.032-.007.065-.021.113a.117.117 0 0 1 0-.086.295.295 0 0 1 .016-.041zm10.715.003c.13-.002.257.005.381.024.219.017.42.058.55.164.094.04.188.09.279.144.22.132.441.269.662.403a.389.389 0 0 1 .118.108l.223.315c.012.016.031.036.015.057a.038.038 0 0 1-.02.014c-.018.004-.034-.002-.05-.011-.098-.056-.2-.108-.298-.164a4.76 4.76 0 0 0-1.184-.459c-.107-.031-.208-.061-.323-.076l-.152-.034c-.004.003.005.012.017.024.005.005.01.01.012.015a.138.138 0 0 0 .041.033l.02.01c.227.115.612.187.892.317l.058.029c.156.081.298.182.44.29l.268.207c.404.293.65.689.77 1.169.003.014.008.029.01.043l.01.014c.02.03.024.065.017.096.002.008.002.015.005.022-.005.07-.06.04-.092.04a2.504 2.504 0 0 1-.61-.11h-.006c-.051-.016-.118-.04-.165-.054-.211-.075-.41-.163-.615-.238-.252-.089-.449-.261-.662-.413a7.777 7.777 0 0 1-1.001-.816.34.34 0 0 1-.08-.106 4.11 4.11 0 0 1-.062-.153l-.036-.094a1.088 1.088 0 0 0-.024-.06l-.002-.005c-.003-.002-.003-.007-.003-.01v-.002l-.002-.01a.168.168 0 0 1 .007-.122c.002-.005.002-.01.005-.014l.005-.017.004-.014c.003-.005.003-.013.005-.017l.003-.015.002-.017.003-.014.002-.017.002-.014.003-.017.002-.014.003-.017c0-.005 0-.01.002-.015 0-.004 0-.012.003-.016v-.266c-.003-.082.026-.114.108-.111.08.002.162-.001.243-.005l.075.004c.04-.002.081-.005.122-.005zm.284.532a.12.12 0 0 0 .028.008H15c-.012.008-.028.005-.033.02-.004-.02-.002-.027.003-.028zm.88.342a.206.206 0 0 0 .012.006l.003.001-.015-.007zm-1.908.177l.002.003c.007.003.014.01.022.024.076.154.182.281.3.399.124.12.259.23.389.348.268.242.542.48.818.713.178.151.392.228.62.288.518.132 1.049.182 1.575.254.139.02.264.065.374.156h-.007c.01.008.017.012.024.02-.296-.043-.59-.039-.886-.046-.324-.007-.641.031-.96.067a.986.986 0 0 1-.336-.026c-.308-.07-.598-.195-.889-.317-.329-.14-.602-.353-.862-.588-.019-.02-.038-.036-.057-.055a1.002 1.002 0 0 1-.205-.285l-.002-.006c-.09-.212-.085-.448-.016-.708.019-.07.04-.14.062-.209.007-.023.02-.035.034-.032zm-.248 1.18c.065.233.233.396.375.573l.029.039.028.038a.57.57 0 0 0 .106.094c.017.012.031.021.046.033l.021.017a10.088 10.088 0 0 0 .538.396l.329.229c.149.103.305.19.468.266.04.02.082.036.123.055.124.053.25.099.379.14l.021.007c.08.021.166.028.25.038.031.002.063.007.091.01a.195.195 0 0 1 .06.024.411.411 0 0 1 .068.05c.074.067.144.163.148.221 0 .01 0 .017-.002.024-.002.005-.002.007-.005.01-.01.016-.024.03-.033.048-.03.05-.06.1-.085.153l-.011.027a.311.311 0 0 0 .002.261c.115-.115.218-.237.293-.377a1.139 1.139 0 0 0 .086-.201c.01-.027.003-.058.01-.084.01-.029-.024-.07-.01-.09 0-.001.003-.001.005-.004a.04.04 0 0 1 .014-.007c.01-.002.02-.005.027-.005.019-.002.036-.005.055-.005.048 0 .094.008.14.022.028.01.019.045.016.072v.005c-.005.086-.04.165-.072.242a.554.554 0 0 1-.024.055 1.68 1.68 0 0 1-.192.375c-.118.156-.254.302-.475.31h-.063c-.038 0-.077.01-.115.012a.085.085 0 0 0-.086.057c-.017.039-.039.072-.058.11l-.007.017a1.534 1.534 0 0 1-.408.57c-.08.071-.164.139-.25.203a1.95 1.95 0 0 1-.468.224l-.036.014-.034.015-.019.007c-.01.002-.022.007-.031.01-.036.014-.065.035-.046.09.02.06.063.077.118.08.012 0 .026 0 .04-.003a.613.613 0 0 0 .15-.033c.048-.017.096-.039.146-.06.034-.015.067-.029.103-.041-.029.122-.045.235-.084.341l-.021.053a6.794 6.794 0 0 1-.09.192c-.018.043-.04.084-.062.125-.115.23-.245.45-.405.655a1.682 1.682 0 0 1-.356.34 3.954 3.954 0 0 1-.103.073 2.788 2.788 0 0 1-.38.206l-.064.03-.053.02-.043.018c-.04.016-.082.03-.123.045a2.674 2.674 0 0 1-.168.053 4.848 4.848 0 0 1-.57.134c-.008 0-.013.003-.02.003-.055.01-.108.017-.163.026-.058.008-.116.017-.176.024a2.156 2.156 0 0 1-.605-.021l-.028-.007a.68.68 0 0 1-.145-.06c-.062-.034-.12-.07-.182-.101a1.728 1.728 0 0 1-.13-.072 1.868 1.868 0 0 1-.16-.106.632.632 0 0 1-.233-.279 1.794 1.794 0 0 0-.092-.194c-.01-.02-.021-.036-.03-.053a2.718 2.718 0 0 0-.277-.367 2.76 2.76 0 0 0-.125-.142c-.021-.024-.04-.048-.062-.07a7.07 7.07 0 0 0-.26-.276l-.067-.067a2.787 2.787 0 0 0-.364-.302 2.784 2.784 0 0 0-.303-.192l-.06-.039a1.58 1.58 0 0 1-.63-.762c-.043-.093-.107-.122-.22-.124a.63.63 0 0 1-.252-.048l-.002-.002a.457.457 0 0 1-.132-.084l-.026-.016c-.022-.026-.038-.058-.058-.09a5.295 5.295 0 0 1-.386-.658c0 .003.002.005.003.008l-.006-.013.003.005a3.772 3.772 0 0 0-.073-.196l-.036-.086a.382.382 0 0 1-.014-.154l.007-.031c.002-.005.002-.01.005-.015a.145.145 0 0 1 .012-.029.46.46 0 0 1 .127-.141.898.898 0 0 1 .067-.05c.046-.034.094-.063.14-.094.071-.044.143-.084.218-.123.271-.14.56-.238.857-.314.017-.005.033-.008.053-.012.033-.008.07-.01.105-.015.036-.002.072-.005.106-.005l.106-.002c.016 0 .036 0 .052-.002a17.864 17.864 0 0 0 .9-.063c.18-.017.36-.036.54-.055a3.504 3.504 0 0 0 1.127-.324c.036-.02.074-.036.11-.055l.063-.034c.144-.077.288-.151.427-.233.014-.02.031-.026.055-.033l.01-.003v.012a.06.06 0 0 1-.02.034l-.021.014c-.14.178-.331.3-.497.45a.415.415 0 0 0-.05.045c-.053.043-.106.089-.166.137.209 0 .41-.024.598-.08a1.654 1.654 0 0 0 .869-.6c.103-.137.197-.297.278-.482zm-3.265.016a1.244 1.244 0 0 1-.343.109c-.56.139-1.13.22-1.697.326a2.603 2.603 0 0 0-1.105.487c-.019.015-.04.032-.062.043-.026.017-.039.013-.043-.01-.003-.004-.003-.011-.003-.018-.01-.144.034-.214.166-.274.18-.082.36-.168.54-.252.235-.108.487-.142.742-.168.396-.043.792-.094 1.19-.14l.524-.086zm2.386 1.245l-.026.001c-.038.01-.036.05-.036.08.003.1.007.201.02.302.011.11.047.219.112.307a.842.842 0 0 0 .51.334c.155.036.155.038.17.2.007.069.016.131.081.17.113.067.226.137.363.146.084.007.17.012.242.068a.583.583 0 0 0 .32.098c.084.007.17.01.254.024.067.012.113-.01.16-.05.239-.197.474-.397.697-.617-.026-.03-.065-.039-.118-.012a6.25 6.25 0 0 0-.415.223.315.315 0 0 1-.113.048 4.032 4.032 0 0 1-.722.074.68.68 0 0 1-.368-.13c-.067-.043-.134-.105-.146-.201.036-.012.07.002.103.007.127.017.252.063.382.055.312-.019.605-.113.898-.213l.283-.103c.043-.015.055-.03.017-.07-.046-.05-.096-.04-.147-.034a5.625 5.625 0 0 1-1.87-.045c-.18-.034-.372-.046-.442-.27-.019-.06-.038-.12-.05-.182a.37.37 0 0 0-.094-.17.094.094 0 0 0-.065-.04zm-.573.065c-.048 0-.08.05-.103.093-.06.103-.137.196-.207.292-.108.147-.26.178-.418.154a17.985 17.985 0 0 0-1.718-.18c-.03-.002-.058-.01-.082.01-.183.134-.367.264-.483.468.007.002.015.007.02.007.019-.002.035-.007.055-.01.297-.074.607-.098.922-.072.398.034.792.113 1.188.168.053.008.106.01.156.036.12.063.18.173.226.29.07.18.09.373.103.565.01.151-.022.278-.144.38a.556.556 0 0 0-.2.278c.154 0 .286.026.387.156.063.081.144.149.223.218a.379.379 0 0 0 .586-.081c.058-.094.113-.19.175-.281.087-.127.17-.264.325-.32.093-.03.052-.076.021-.115-.062-.079-.178-.081-.28-.019-.16.096-.267.238-.382.375-.034.04-.068.081-.113.115-.058.04-.108.043-.159-.01-.057-.057-.115-.117-.177-.168-.053-.043-.063-.082-.032-.144a.728.728 0 0 0 .082-.413c-.029-.312-.08-.62-.3-.867-.024-.026-.024-.04.01-.064a.94.94 0 0 0 .408-.701c.007-.075-.007-.135-.067-.156a.075.075 0 0 0-.022-.004zm4.461.035c.205 0 .387.08.566.182-.005 0-.007 0-.012.003l.031.017c-.271.04-.54.06-.811.03-.084-.009-.168-.026-.255-.023-.17.005-.307-.084-.451-.161h.017c-.012-.007-.024-.012-.036-.02.024.003.05.003.074.005.029.003.055.01.084.015.238.05.468-.02.704-.043a.8.8 0 0 1 .089-.005zm-8.69.714a.045.045 0 0 0-.016.004c-.05.019-.098.048-.112.115-.048.223.055.437.278.552.1.053.178.127.226.23.016.037.019.106.072.094.052-.012.01-.077.021-.103.008-.135-.019-.25-.127-.32-.08-.05-.11-.12-.14-.201-.038-.106-.047-.223-.134-.307-.02-.021-.036-.064-.069-.064zm1.843.354c-.11.027-.236.053-.353.106-.082.038-.087.084-.015.139.043.034.087.05.14.031a.466.466 0 0 1 .494.096.509.509 0 0 0 .523.087c.106-.036.197-.096.293-.15a.319.319 0 0 1 .113-.04c.144-.014.288-.033.43-.053.038-.005.098.01.108-.036.01-.048-.046-.077-.08-.108-.016-.017-.045-.019-.069-.026a.82.82 0 0 0-.437-.015 2.092 2.092 0 0 1-.888 0c-.08-.019-.163-.019-.26-.03zm6.903.889c.006 0 .011.003.015.007a.05.05 0 0 1 .012.014l.008.005c.043.034-.007.11-.02.168-.03.168-.057.334-.086.502-.007.048-.012.098-.048.165l-.007-.043-.012.024a5.307 5.307 0 0 1-.075-.706c-.002-.053.034-.065.068-.077.048-.016.107-.066.145-.06zm-3.219.902a.08.08 0 0 0-.023.01c-.19.105-.404.11-.613.137-.088.012-.199-.015-.264.05-.158.156-.293.091-.432-.02-.007-.004-.014-.011-.024-.014-.206-.11-.413-.15-.624-.005a.338.338 0 0 1-.267.068c-.074-.02-.131-.015-.19.038-.028.027-.066.048-.1.07-.094.062-.094.072-.007.141.02.017.043.024.067.032.2.06.387.016.562-.08.182-.098.353-.093.518.032.152.112.312.115.48.045a2.97 2.97 0 0 1 .653-.213c.034-.005.068-.017.099.01.096.088.187.026.279-.01.036-.015.04-.044.038-.08-.007-.076-.065-.12-.098-.18-.015-.025-.032-.035-.054-.03zm-4.718.07c.009 0 .02.006.032.017.039.036.075.074.113.11l.015.014c.019.017.021.039.012.06l-.224.45-.024-.008c0-.005.003-.007.003-.012.048-.197.029-.4.055-.6.002-.02.009-.03.018-.03zm3.9.588c-.238.007-.48.046-.703.122-.185.063-.392.106-.488.32-.055.124-.048.257-.086.381.017.099.017.197.074.281.017.024.024.063.065.06.043-.002.058-.038.07-.067.043-.091.053-.194.081-.29.046-.157.118-.281.281-.351.17-.072.343-.14.516-.206a.184.184 0 0 1 .101-.012c.214.03.437.021.627.146a.079.079 0 0 0 .062.012c.072-.017.08-.04.036-.098a.723.723 0 0 0-.636-.298zm-2.218.742l.014.017c.094.117.187.218.25.336.151.29.374.501.662.655.135.072.256.172.414.19l.003.001.018-.001c.017 0 .04-.003.036.024-.003.014-.017.014-.031.012h-.007c-.005 0-.01 0-.015-.003-.167.005-.33.033-.493.067-.085.018-.17.038-.255.058a7.838 7.838 0 0 1-.243.055h-.003c-.033.008-.048.024-.043.058.005.04.02.062.067.072a1.305 1.305 0 0 0 .274.017c.118-.003.235-.015.353-.034a2.602 2.602 0 0 1 .778-.002c-.43.07-.785.312-1.174.475-.202.084-.358.245-.55.348-.014.017-.022.044-.036.06-.031.039-.036.118-.087.11h-.004c-.005 0-.01.003-.015 0a.623.623 0 0 1-.266-.086c-.03-.019-.022-.055-.022-.089v-.453c0-.032.012-.067-.019-.09-.106-.066-.08-.182-.106-.278-.01-.038.017-.057.039-.081l.278-.31c.063-.067.089-.142.043-.223-.086-.163-.072-.32-.002-.485.055-.13.091-.267.142-.42zm4.585.177c.005.003.01.005.012.008l.007-.008c.039.022.041.05.05.075.102.247.2.497.3.744.025.055.03.103-.006.149a.502.502 0 0 0-.077.49c.067.206.019.348-.183.449a.229.229 0 0 1-.12.036.124.124 0 0 1-.088-.03c-.375-.259-.821-.345-1.242-.494-.06-.021-.117-.043-.18-.057-.072-.017-.067-.065-.057-.116.007-.036.026-.04.045-.038.02-.005.046.01.063.014.48.12.965.216 1.428.396.017.008.031.01.043.013.034-.005.044-.037.039-.082-.01-.108-.02-.214-.144-.271a2.8 2.8 0 0 0-.975-.233c-.05-.005-.098-.007-.149-.01.238-.144.5-.22.713-.406a.999.999 0 0 0 .075-.067l.398-.482.048-.08zm-1.882 1.133h.02c.03-.002.054.005.057.053 0 .044.01.082-.06.092a1.752 1.752 0 0 1-.274.021c-.094 0-.185-.01-.278-.031-.05-.012-.07-.046-.065-.086.002-.027.021-.027.04-.027a.103.103 0 0 1 .039.003h.18a1.143 1.143 0 0 0 .34-.024zm.036.396c.006 0 .012.002.02.005.278.116.556.231.844.349-.132.11-.254.208-.374.304-.221.178-.44.358-.646.553-.05.048-.089.05-.147.014a9.33 9.33 0 0 0-1.097-.545c-.165-.07-.34-.098-.511-.158.02-.036.055-.036.084-.046.367-.137.742-.26 1.102-.42.094-.043.187-.007.278.005.137.019.27.021.394-.046a.092.092 0 0 1 .053-.015zm-2.161.698a.27.27 0 0 1 .082.018c.197.077.38.185.569.274a.04.04 0 0 1 .029.01c.004.002.005.004.005.011v.005c0 .003-.003.003-.003.005-.002.003-.005.003-.007.003l-.01-.003a.03.03 0 0 1-.012-.012l-.862-.214c.074-.059.133-.1.209-.097zm8.17.535c-.142-.004-.26.062-.372.15-.029.022-.046.048-.094.017-.105-.072-.206-.053-.295.039a.402.402 0 0 0-.103.187c-.125.504-.252 1.006-.372 1.512-.041.169.048.255.223.229.158-.025.238-.116.264-.32.026-.197.053-.391.11-.595.15.187.29.362.433.538.139.17.29.321.494.412.144.065.269.027.382-.074a.186.186 0 0 0 .055-.206.157.157 0 0 0-.158-.125.246.246 0 0 1-.152-.07 2.27 2.27 0 0 1-.362-.396c-.09-.12-.094-.12.026-.202.252-.173.341-.417.322-.71-.014-.219-.132-.346-.339-.38a.454.454 0 0 0-.062-.006zm-10.733.03c-.04 0-.077.02-.097.075-.019.05-.053.043-.091.038a.751.751 0 0 0-.665.219c-.38.37-.574.814-.552 1.354.014.358.22.53.569.451.689-.16 1.224-.835 1.253-1.582.007-.192-.168-.47-.34-.538a.214.214 0 0 0-.077-.016zm-1.93.058a.943.943 0 0 0-.613.238c-.346.302-.547.693-.646 1.138a.642.642 0 0 0 .075.482c.07.118.158.161.292.135a3.12 3.12 0 0 0 .87-.305.867.867 0 0 0 .225-.168.291.291 0 0 0 .084-.204c0-.075-.033-.101-.103-.104-.07-.002-.13.024-.192.046-.207.075-.408.166-.622.22-.105.027-.141.003-.163-.105a.301.301 0 0 1 .005-.122c.04-.168.098-.331.187-.483a.82.82 0 0 1 .245-.283c.14-.089.283-.137.442-.04.052.03.103.016.15-.013a.352.352 0 0 0 .15-.201c.016-.05.002-.09-.044-.116a.773.773 0 0 0-.343-.115zm9.2.07a.692.692 0 0 0-.517.206c-.156.161-.183.324-.084.526.074.151.177.28.278.415.072.094.149.187.216.286.048.07.024.125-.058.151a.199.199 0 0 1-.139-.005 1.076 1.076 0 0 1-.374-.23.243.243 0 0 1-.082-.125c-.012-.074-.053-.108-.125-.115-.081-.007-.156-.007-.204.08-.08.138-.057.263.087.393.276.245.605.353.933.38.3.004.485-.267.387-.522-.043-.115-.118-.216-.19-.314-.12-.159-.245-.313-.357-.476-.09-.125-.048-.216.098-.264.135-.043.25-.005.36.08.13.1.24.047.269-.116.017-.086-.029-.144-.089-.194a.68.68 0 0 0-.41-.157zm1.905.06c-.137-.003-.274 0-.41.016-.164.02-.32.065-.38.248-.002.01-.014.024-.024.026-.187.048-.252.202-.302.358-.106.346-.2.696-.298 1.042-.024.084.01.14.08.182.054.034.11.032.172.015.324-.08.648-.166.987-.142a.26.26 0 0 0 .127-.029.242.242 0 0 0 .117-.24c-.014-.091-.086-.117-.163-.13a1.484 1.484 0 0 0-.177-.016 3.855 3.855 0 0 0-.62.052c.031-.228.048-.242.264-.242.161 0 .322-.01.473-.072.101-.043.166-.113.176-.226.007-.076-.025-.122-.104-.124a1.65 1.65 0 0 0-.19.002l-.453.04c.024-.052.036-.1.062-.136.044-.062-.007-.178.084-.209.075-.024.164-.007.245-.01.214-.004.427-.007.634-.074a.347.347 0 0 0 .192-.13c.07-.108.043-.18-.082-.185-.136-.006-.273-.014-.41-.017zm-6.664.008c-.071-.003-.13.042-.185.093a3.951 3.951 0 0 0-.392.434l-.367.456c-.02.024-.04.07-.08.05-.03-.014-.018-.055-.014-.086.01-.11.024-.218.036-.329.015-.144.034-.288.01-.432-.031-.173-.156-.22-.295-.113a.836.836 0 0 0-.094.091 3.168 3.168 0 0 0-.298.414c-.225.348-.432.71-.703 1.027-.05.06-.103.118-.149.182-.048.072-.067.154-.022.23.041.068.11.092.188.087.081-.004.125-.064.168-.122l.626-.852c.012-.015.017-.044.053-.034a1.37 1.37 0 0 0-.012.11c-.01.137-.038.274-.01.413.034.159.16.224.306.152a.902.902 0 0 0 .204-.152c.117-.112.228-.233.33-.362.114-.144.229-.29.349-.447.036.12.022.228.017.336-.012.188-.048.375-.012.565.024.117.091.187.187.194a.44.44 0 0 0 .278-.07c.125-.079.137-.237.02-.343a.19.19 0 0 1-.063-.113c-.026-.13-.004-.257.017-.384.039-.245.115-.485.103-.737-.004-.098-.019-.19-.12-.237a.19.19 0 0 0-.076-.021zm8.04.189c.117-.01.175.064.141.177a.387.387 0 0 1-.07.132c-.129.161-.292.27-.496.353a1.56 1.56 0 0 1 .11-.425c.062-.134.163-.223.315-.237zm-6.651.02a.292.292 0 0 1 .15.035c.076.043.098.146.045.233a.676.676 0 0 1-.185.184 1.47 1.47 0 0 1-.483.243c.07-.216.128-.415.245-.586a.286.286 0 0 1 .228-.108zm1.6.092a.509.509 0 0 1 .213.034c.113.046.151.1.149.269a1.257 1.257 0 0 1-.425.819.562.562 0 0 1-.324.136c-.147.012-.262-.081-.247-.228.028-.321.115-.624.33-.876a.436.436 0 0 1 .304-.154zm-5.882.003a.501.501 0 0 1 .218.036c.11.043.149.098.144.262a1.243 1.243 0 0 1-.422.818.581.581 0 0 1-.325.14c-.15.011-.266-.082-.252-.233.03-.315.116-.613.325-.86a.442.442 0 0 1 .312-.163z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://getcomposer.org/\",hex:\"885630\"},ComproPago:{title:\"ComproPago\",slug:\"compropago\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>ComproPago icon</title><path d=\"M19.32 7.778h-.003c-.604-.604-1.508-.604-2.11 0l-.15.15-.905.904-6.926 6.934-1.512 1.507c-.45.452-1.2.755-1.962.755-.75 0-1.5-.303-2.102-.904-.6-.603-.903-1.355-.903-2.11 0-.754.3-1.507.9-2.11l8.89-8.893c-1.206-1.205-3.015-1.205-4.222 0l-6.63 6.783c-2.263 2.262-2.263 6.03 0 8.44 2.26 2.264 6.028 2.264 8.44 0L19.47 9.89c.453-.605.453-1.507-.15-2.112zM22.18 4.772v-.01c-2.26-2.26-6.028-2.26-8.438 0l-9.19 9.347c-.6.603-.6 1.507 0 2.11.61.603 1.512.603 2.112 0l.15-.15.91-.905 6.934-6.935 1.344-1.355.15-.15c.45-.453 1.205-.754 1.96-.754s1.507.302 2.108.905c.605.61.904 1.362.904 2.113 0 .75-.3 1.512-.904 2.11l-8.893 8.89c1.207 1.212 3.014 1.212 4.22 0l6.786-6.776c2.262-2.413 2.262-6.027-.152-8.44z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://compropago.com\",hex:\"00AAEF\"},Conekta:{title:\"Conekta\",slug:\"conekta\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Conekta icon</title><path d=\"M8.25 19.502L2.7 12l5.55-7.5 3.45 4.65L9.447 12l2.25 3-3.45 4.502zM12.45 24l8.85-12-8.85-12h-6.9l9 12-9 12h6.9z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.conekta.io\",hex:\"414959\"},Confluence:{title:\"Confluence\",slug:\"confluence\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Confluence icon</title><path d=\"M.87 18.257c-.248.382-.53.875-.763 1.245a.764.764 0 0 0 .255 1.04l4.965 3.054a.764.764 0 0 0 1.058-.26c.199-.332.454-.763.733-1.221 1.967-3.247 3.945-2.853 7.508-1.146l4.957 2.337a.764.764 0 0 0 1.028-.382l2.364-5.346a.764.764 0 0 0-.382-1 599.851 599.851 0 0 1-4.965-2.361C10.911 10.97 5.224 11.185.87 18.257zM23.131 5.743c.249-.405.531-.875.764-1.25a.764.764 0 0 0-.256-1.034L18.675.404a.764.764 0 0 0-1.058.26c-.195.335-.451.763-.734 1.225-1.966 3.246-3.945 2.85-7.508 1.146L4.437.694a.764.764 0 0 0-1.027.382L1.046 6.422a.764.764 0 0 0 .382 1c1.039.49 3.105 1.467 4.965 2.361 6.698 3.246 12.392 3.029 16.738-4.04z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.atlassian.com/company/news/press-kit\",hex:\"172B4D\"},\"Conda-Forge\":{title:\"Conda-Forge\",slug:\"conda-forge\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Conda-Forge icon</title><path d=\"M8.206 5.866l.005.396H6.754l.006.655v.005l-6.758.002v.211L0 7.973l.02.041c.212.467.663.901 1.257 1.313.594.411 1.335.796 2.145 1.13 1.62.664 3.502 1.12 5.006 1.1.746-.01 1.265.228 1.62.672.341.426.51 1.092.524 1.92L7.94 16.239l.008 1.896H20.29l-.004-1.76-2.63-2.22c.055-2.013.708-3.443 1.777-4.405 1.087-.979 2.61-1.49 4.37-1.616l.195-.015L24 5.872zm.425.422l14.946.006-.004 1.457c-1.737.155-3.29.666-4.424 1.685-.912.822-1.433 2.062-1.691 3.534l-1.617.004.002.422 1.535-.004c-.027.226-.113.4-.123.64l-.893-.003-.002.422.995.004 2.138 1.802-2.941.002c-.724-.675-1.552-1.116-2.416-1.158-.817-.04-1.638.324-2.387 1.04l-2.978-.024 2.248-1.781v-.102c.002-.943-.2-1.72-.64-2.269-.396-.496-1.007-.749-1.741-.79l-.008-4.49h.008zm-1.45.396h1.026l.008 4.404c-1.387-.02-3.125-.404-4.631-1.023-.787-.324-1.507-.698-2.066-1.086C.968 8.6.587 8.203.424 7.86v-.514l6.336-.002v2.16h.422v-2.16h.004l-.004-.435v-.226zm6.935 8.839c.75.037 1.503.436 2.18 1.078l-.002 1.112h-4.345l-.006-1.2c.706-.717 1.443-1.026 2.173-.99zM8.36 16.537l3.16.023.006 1.153h-3.16zm11.5.142l.002 1.034h-3.148V16.68z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/conda-forge/conda-forge.github.io/\",hex:\"000000\"},\"Co-op\":{title:\"Co-op\",slug:\"co-op\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Co-op icon</title><path d=\"M23.275 5.265c0-.852-.132-1.703-.36-2.555-.328-1.016-1.081-1.834-2.031-2.194a9.248 9.248 0 0 0-6.092 0 3.168 3.168 0 0 0-2.03 2.194 9.532 9.532 0 0 0 0 5.077c.326 1.015 1.08 1.834 2.03 2.194a8.04 8.04 0 0 0 3.046.491c1.049 0 2.063-.196 3.046-.491a3.172 3.172 0 0 0 2.031-2.194c.229-.819.36-1.67.36-2.522zm-3.308 0c0 .393-.065.852-.196 1.212-.164.524-.623.95-1.18 1.081a4.233 4.233 0 0 1-1.571 0 1.473 1.473 0 0 1-1.18-1.081 4.025 4.025 0 0 1 0-2.489c.163-.524.622-.95 1.18-1.081a4.233 4.233 0 0 1 1.571 0 1.476 1.476 0 0 1 1.18 1.081c.13.458.196.884.196 1.277m-8.745 13.79a9.552 9.552 0 0 0 0-5.077c-.327-1.016-1.081-1.834-2.03-2.195a9.248 9.248 0 0 0-6.092 0 3.173 3.173 0 0 0-2.031 2.195 9.552 9.552 0 0 0 0 5.077c.328 1.015 1.081 1.834 2.031 2.193a9.248 9.248 0 0 0 6.092 0 3.392 3.392 0 0 0 2.03-2.193m-2.948-2.523c0 .393-.066.852-.197 1.212a1.644 1.644 0 0 1-1.179 1.081 4.238 4.238 0 0 1-1.572 0 1.477 1.477 0 0 1-1.179-1.081 4.04 4.04 0 0 1 0-2.489 1.64 1.64 0 0 1 1.179-1.081 4.196 4.196 0 0 1 1.572 0 1.476 1.476 0 0 1 1.179 1.081c.131.426.197.851.197 1.277m0-11.3h3.308c0-.851-.131-1.703-.36-2.521-.327-1.016-1.081-1.834-2.03-2.194a9.248 9.248 0 0 0-6.092 0C2.084.909 1.331 1.728 1.068 2.743a9.552 9.552 0 0 0 0 5.077c.328 1.015 1.081 1.834 2.031 2.194.982.36 1.998.492 3.046.492 1.048 0 2.063-.197 3.046-.492a3.17 3.17 0 0 0 2.03-2.194c.033-.131.065-.295.131-.426L8.241 5.953c-.033.196-.065.36-.131.557-.163.524-.622.95-1.179 1.081a4.238 4.238 0 0 1-1.572 0A1.478 1.478 0 0 1 4.18 6.51a4.04 4.04 0 0 1 0-2.489c.164-.524.622-.95 1.179-1.082a4.238 4.238 0 0 1 1.572 0A1.476 1.476 0 0 1 8.11 4.021c.098.425.164.818.164 1.211m4.421 8.779a9.442 9.442 0 0 0-.36 2.555V24h3.308v-7.468c0-.393.065-.852.196-1.212.163-.524.622-.95 1.18-1.081a4.191 4.191 0 0 1 1.571 0 1.478 1.478 0 0 1 1.18 1.081 4.04 4.04 0 0 1 0 2.489c-.164.523-.623.95-1.146 1.08a4.196 4.196 0 0 1-1.572 0c-.099-.031-.229-.064-.327-.098l1.113 3.079c1.049 0 2.063-.197 3.046-.491a3.175 3.175 0 0 0 2.031-2.194 9.552 9.552 0 0 0 0-5.077c-.328-1.016-1.081-1.834-2.031-2.195a9.248 9.248 0 0 0-6.092 0c-1.016.263-1.769 1.082-2.097 2.098\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://www.co-operative.coop/corporate/press/logos/\",hex:\"00B1E7\"},\"Corona Renderer\":{title:\"Corona Renderer\",slug:\"coronarenderer\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Corona Renderer icon</title><path d=\"M19.734,11.603c0.078,0.376,0.116,0.76,0.116,1.144c0,1.44-0.562,2.846-1.556,3.889 c-0.989,1.037-2.358,1.668-3.789,1.741c-1.445,0.074-2.885-0.418-3.979-1.365c-1.079-0.933-1.776-2.265-1.921-3.684 c-0.148-1.445,0.273-2.914,1.17-4.057c0.877-1.118,2.168-1.879,3.574-2.095c1.439-0.222,2.934,0.127,4.123,0.97 C18.627,8.965,19.448,10.214,19.734,11.603z M24,6v12c0,3.314-2.686,6-6,6H6c-3.314,0-6-2.686-6-6V6c0-3.314,2.686-6,6-6h12 C21.314,0,24,2.686,24,6z M21.828,9.483c-0.465-1.398-1.274-2.674-2.334-3.697c-1.025-0.988-2.279-1.731-3.639-2.152 c0.159,0.423,0.239,0.874,0.238,1.326c-1.109-1.455-2.809-2.4-4.632-2.564c-1.112-0.1-2.245,0.084-3.265,0.538 c0.829,0.257,1.555,0.807,2.03,1.533C8.383,3.809,6.29,4.017,4.615,5.028C3.931,5.441,3.324,5.98,2.831,6.609 c1.151-0.247,2.375,0.069,3.262,0.843c-0.74,0.709-1.754,1.087-2.778,1.039C3.469,8.742,3.652,8.973,3.859,9.18 c-0.01,0.017-0.021,0.034-0.031,0.051c-0.696,0.314-1.288,0.842-1.68,1.496c-0.438,0.729-0.613,1.6-0.498,2.442 c0.066,0.481,0.226,0.947,0.469,1.367c-0.108-0.934,0.684-1.758,1.622-1.686c0.921,0.071,1.576,0.983,1.351,1.88 c-0.16,0.635-0.732,1.107-1.386,1.142c0.87,1.547,2.362,2.701,4.08,3.146c0.608,0.157,1.238,0.226,1.866,0.206 c-0.471,0.358-1.029,0.608-1.637,0.711c1.493,1.016,3.275,1.567,5.08,1.578c1.455,0.009,2.905-0.33,4.202-0.991 c1.249-0.636,2.345-1.562,3.184-2.684c0.851-1.139,1.43-2.475,1.676-3.876C22.417,12.472,22.305,10.919,21.828,9.483z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://corona-renderer.com/about\",hex:\"E6502A\"},Coursera:{title:\"Coursera\",slug:\"coursera\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Coursera icon</title><path d=\"M23.992 11.806a5.091 5.091 0 0 0-.018-.279v-.002-.002a5.98 5.98 0 0 0-.99-2.814 6.217 6.217 0 0 0-.867-1.039 6.289 6.289 0 0 0-1.64-1.13 7.016 7.016 0 0 0-3.051-.668 7.35 7.35 0 0 0-2.546.444 6.323 6.323 0 0 0-1.822.996 6.45 6.45 0 0 0-.333.29l-.085.085-.117.125h.001l-.056.055-.026.028-.141.147c-.104.117-.202.234-.296.349v-.002l-.004-.003c-.192.233-.37.476-.5.693-.089.14-.176.283-.259.427l-1.147 2.319.002.001-.06.118-.126.256c-.251.509-.521 1.017-.821 1.435-.672.737-1.431 1.098-2.406 1.098-.068 0-.139-.003-.209-.008-.588-.023-1.092-.162-1.539-.427a2.576 2.576 0 0 1-.994-1.03 2.659 2.659 0 0 1-.326-1.369l.002-.034c.031-.76.321-1.352.904-1.861.142-.124.291-.228.446-.32.021-.013.044-.024.065-.036.434-.237.927-.355 1.492-.355l.176.005c.899.034 1.592.314 2.145.863l1.734-3.113a6.845 6.845 0 0 0-1.399-.71c-.019-.007-.04-.016-.06-.022-.062-.022-.123-.045-.186-.065a7.425 7.425 0 0 0-1.716-.348 5.545 5.545 0 0 1-.046-.006c-.091-.005-.184-.016-.275-.02a9.966 9.966 0 0 0-.297-.007h-.055a7.005 7.005 0 0 0-3.028.67 6.176 6.176 0 0 0-2.502 2.166A6.006 6.006 0 0 0 0 12.087c-.002 1.564.568 2.938 1.701 4.093 1.184 1.211 2.721 1.864 4.567 1.941.118.005.235.008.353.008 1.045 0 2.011-.186 2.878-.558.217-.093.427-.201.642-.322.117-.067.228-.139.338-.215l.08-.055.137-.093c.164-.118.317-.246.467-.381l.052-.05c.088-.083.176-.168.259-.255l.311-.352.118-.148.056-.081.055-.079c.462-.776 1.965-3.601 1.965-3.601v-.006l.09-.172.074-.135c.222-.403.382-.689.594-.99l.006-.01c.493-.717 1.344-1.227 2.346-1.313 1.68-.145 3.152.959 3.287 2.465.135 1.507-1.117 2.846-2.798 2.991a3.417 3.417 0 0 1-1.011-.064l-.009.003c-1.232-.257-2.017-1.155-2.404-1.558l-1.617 2.974s.503.506.847.759c.346.253.791.501 1.146.656a7.151 7.151 0 0 0 2.838.589c.121 0 .097 0 .222-.005 1.844-.077 3.489-.784 4.675-1.995 1.123-1.15 1.733-2.463 1.738-4.018v-.047l-.011-.257z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://about.coursera.org/press\",hex:\"2A73CC\"},Coveralls:{title:\"Coveralls\",slug:\"coveralls\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Coveralls icon</title><path d=\"M0 12v12h24V0H0zm13.195-6.187l1.167 3.515 2.255.005c1.238.005 2.916.019 3.727.037l1.472.028-2.968 2.152c-1.63 1.181-2.976 2.18-2.99 2.212-.01.033.487 1.627 1.106 3.54.619 1.917 1.12 3.487 1.116 3.492-.005.01-1.35-.947-2.986-2.119-1.636-1.177-3-2.147-3.033-2.161-.028-.01-1.411.947-3.07 2.138-1.655 1.185-3.02 2.151-3.024 2.142-.004-.005.497-1.575 1.116-3.492.619-1.913 1.115-3.507 1.106-3.54-.014-.032-1.36-1.03-2.99-2.212L2.23 9.398l1.472-.028c.811-.018 2.49-.032 3.727-.037l2.254-.005 1.168-3.515a512.54 512.54 0 011.171-3.516c.005 0 .53 1.58 1.172 3.516z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://coveralls.io/\",hex:\"3F5767\"},cPanel:{title:\"cPanel\",slug:\"cpanel\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>cPanel icon</title><path d=\"M4.586 9.346a.538.538 0 00-.34.113.561.561 0 00-.197.299L2.74 14.654h.922a.528.528 0 00.332-.113.561.561 0 00.2-.291l.968-3.604h.744a.677.677 0 01.317.077.703.703 0 01.24.199.732.732 0 01.129.281.65.65 0 01-.01.326.698.698 0 01-.676.526h-.385a.538.538 0 00-.337.113.561.561 0 00-.2.291l-.24.896h1.201a1.939 1.939 0 001.62-.867 1.988 1.988 0 00.265-.586l.027-.1a1.854 1.854 0 00.026-.907 1.973 1.973 0 00-1.031-1.34 1.875 1.875 0 00-.88-.21H4.587zm18.447 0a.401.401 0 00-.25.082.377.377 0 00-.14.217l-1.334 5.01a1.7 1.7 0 00.57-.096 1.806 1.806 0 00.496-.266 1.74 1.74 0 00.385-.408 1.648 1.648 0 00.234-.531l.996-3.696a.23.23 0 00-.045-.217.246.246 0 00-.2-.095h-.712zM8.381 10.643l-.133.503a.564.564 0 00-.006.26.544.544 0 00.1.221.552.552 0 00.185.154.53.53 0 00.252.06h2.157a.101.101 0 01.084.038.098.098 0 01.015.088l-.02.072-.324 1.201-.013.055a.172.172 0 01-.067.105.205.205 0 01-.127.04H9.178a.147.147 0 01-.12-.057.136.136 0 01-.027-.13c.022-.074.071-.112.147-.112h.808a.53.53 0 00.332-.112.564.564 0 00.2-.293l.132-.498H8.84a1.131 1.131 0 00-.38.065 1.152 1.152 0 00-.323.176 1.194 1.194 0 00-.256.271 1.052 1.052 0 00-.156.346l-.028.1a1.095 1.095 0 00-.013.533 1.203 1.203 0 00.212.464 1.141 1.141 0 00.918.453l2.157.006a.899.899 0 00.875-.67l.525-1.95a1.101 1.101 0 00.01-.514 1.114 1.114 0 00-.205-.444 1.149 1.149 0 00-.377-.312 1.048 1.048 0 00-.498-.12H8.38zm-6.397.01a1.924 1.924 0 00-.638.107 1.989 1.989 0 00-.553.295 1.962 1.962 0 00-.7 1.045l-.027.1a1.936 1.936 0 00-.023.905 1.955 1.955 0 00.361.786 1.986 1.986 0 00.668.554 1.875 1.875 0 00.88.21h.464l.266-.983a.23.23 0 00-.043-.215.239.239 0 00-.198-.096h-.423a.702.702 0 01-.319-.074.67.67 0 01-.24-.195.732.732 0 01-.127-.281.706.706 0 01.01-.34.73.73 0 01.256-.377.675.675 0 01.42-.14h.697a.538.538 0 00.338-.114.561.561 0 00.199-.297l.232-.89h-1.5zm11.08 0l-.982 3.689a.23.23 0 00.045.217.238.238 0 00.195.095h.711a.413.413 0 00.248-.08.363.363 0 00.143-.21l.644-2.41h.745a.678.678 0 01.318.075.708.708 0 01.238.2.735.735 0 01.129.28.65.65 0 01-.01.327l-.398 1.506a.243.243 0 00.24.312h.713a.403.403 0 00.244-.08.366.366 0 00.143-.213l.332-1.248a1.897 1.897 0 00.029-.908 1.955 1.955 0 00-.361-.79 1.987 1.987 0 00-.668-.554 1.889 1.889 0 00-.885-.209h-1.813zm5.793 0a1.458 1.458 0 00-.488.081 1.489 1.489 0 00-.752.58 1.493 1.493 0 00-.205.454l-.406 1.505a1.018 1.018 0 00-.016.508 1.139 1.139 0 00.205.446 1.095 1.095 0 00.377.312 1.071 1.071 0 00.498.115h2.502a.528.528 0 00.332-.113.561.561 0 00.2-.291l.21-.791h-2.748a.2.2 0 01-.191-.252l.299-1.127a.34.34 0 01.113-.162.281.281 0 01.18-.064h1.232a.153.153 0 01.147.193l-.026.1c-.022.075-.071.113-.146.113h-.81a.538.538 0 00-.339.111.526.526 0 00-.191.293l-.133.49h2.004a.887.887 0 00.547-.181.864.864 0 00.32-.483l.12-.45a1.11 1.11 0 00.013-.513 1.076 1.076 0 00-.203-.443 1.146 1.146 0 00-.375-.313 1.047 1.047 0 00-.498-.119h-1.772Z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://cpanel.net/company/cpanel-brand-guide/\",hex:\"FF6C2C\"},\"Adobe Creative Cloud\":{title:\"Adobe Creative Cloud\",slug:\"adobecreativecloud\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Adobe Creative Cloud icon</title><path d=\"M24 11.599v.803c-.008.044-.017.087-.022.13-.04.35-.067.701-.124 1.048a8.663 8.663 0 0 1-1.176 3.144 8.848 8.848 0 0 1-3.645 3.36 8.422 8.422 0 0 1-2.812.843c-.217.026-.435.049-.652.073H7.138c-.043-.008-.085-.02-.128-.024a7.092 7.092 0 0 1-2.448-.598c-1.697-.755-2.963-1.98-3.791-3.664a7.298 7.298 0 0 1-.7-2.37L0 13.742v-.78c.008-.043.02-.086.023-.13a7.286 7.286 0 0 1 .461-2.175C1.2 8.777 2.45 7.381 4.222 6.478a7.227 7.227 0 0 1 2.928-.77 7.998 7.998 0 0 1 1.503.071.188.188 0 0 0 .142-.047 8.898 8.898 0 0 1 2.458-1.81 8.493 8.493 0 0 1 2.825-.848c.234-.027.467-.05.7-.074h.72c.046.007.094.016.14.021.357.043.715.07 1.068.13a8.37 8.37 0 0 1 3.073 1.186 8.89 8.89 0 0 1 3.319 3.713 8.76 8.76 0 0 1 .83 2.862c.026.229.048.458.072.687m-13.42-5.2c.015.02.019.029.025.032.493.247.965.538 1.41.867.028.02.098.012.132-.01 1.222-.787 2.547-1.059 3.97-.802 1.395.251 2.53.96 3.397 2.092.982 1.28 1.357 2.73 1.086 4.34-.182 1.08-.608 2.05-1.33 2.861-1.32 1.48-2.973 2.092-4.918 1.833-1.197-.16-2.23-.685-3.086-1.564-1.098-1.128-2.204-2.248-3.305-3.373-.147-.15-.31-.27-.521-.297a.826.826 0 0 0-.864.48c-.142.3-.124.64.185.948 1.227 1.226 2.444 2.462 3.67 3.69.21.21.435.405.674.582.896.661 1.906 1.027 3 1.174.858.116 1.71.09 2.555-.102 1.612-.369 2.948-1.205 4-2.497a7.213 7.213 0 0 0 1.576-3.67 7.313 7.313 0 0 0-.065-2.36c-.244-1.27-.773-2.408-1.62-3.377-1.618-1.846-3.653-2.67-6.074-2.487a6.664 6.664 0 0 0-2.641.79 6.962 6.962 0 0 0-1.255.85M9.988 19.29a15.79 15.79 0 0 1-.1-.094c-.501-.482-1.006-.96-1.502-1.449a.403.403 0 0 0-.32-.137c-.502.012-1.005.014-1.5-.1-2.461-.565-3.89-3.286-2.983-5.68.715-1.889 2.696-3.038 4.649-2.684.875.159 1.644.536 2.274 1.197.77.808 1.562 1.592 2.34 2.391.176.182.38.265.625.23.316-.046.569-.2.683-.516.112-.31.058-.605-.173-.844-.816-.84-1.613-1.702-2.462-2.507-1.647-1.561-3.588-2.026-5.736-1.362-2.888.893-4.579 3.926-3.919 6.919.602 2.727 2.947 4.64 5.691 4.643h2.299c.038 0 .076-.004.134-.007\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.adobe.io/apis/creativecloud/creativesdk/docs/websdk/adobe-creative-sdk-for-web_master/branding-guidelines.html\",hex:\"D41818\"},\"Creative Commons\":{title:\"Creative Commons\",slug:\"creativecommons\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Creative Commons icon</title><path d=\"M11.983 0c-3.292 0-6.19 1.217-8.428 3.485C1.25 5.819 0 8.844 0 12c0 3.189 1.217 6.148 3.522 8.45C5.827 22.75 8.822 24 11.983 24c3.16 0 6.222-1.25 8.593-3.583C22.815 18.214 24 15.287 24 12c0-3.255-1.186-6.214-3.458-8.483C18.238 1.217 15.275 0 11.983 0zm.033 2.17c2.7 0 5.103 1.02 6.98 2.893 1.843 1.841 2.83 4.274 2.83 6.937 0 2.696-.954 5.063-2.798 6.872-1.943 1.906-4.444 2.926-7.012 2.926-2.601 0-5.038-1.019-6.914-2.893-1.877-1.875-2.93-4.34-2.93-6.905 0-2.597 1.053-5.063 2.93-6.97 1.844-1.874 4.214-2.86 6.914-2.86zM8.68 8.278C6.723 8.278 5.165 9.66 5.165 12c0 2.38 1.465 3.722 3.581 3.722 1.358 0 2.516-.744 3.155-1.874l-1.491-.758c-.333.798-.839 1.037-1.478 1.037-1.105 0-1.61-.917-1.61-2.126 0-1.21.426-2.127 1.61-2.127.32 0 .96.173 1.332.97l1.597-.838c-.68-1.236-1.837-1.728-3.181-1.728zm6.932 0c-1.957 0-3.514 1.382-3.514 3.722 0 2.38 1.464 3.722 3.58 3.722 1.359 0 2.516-.744 3.155-1.874l-1.49-.758c-.333.798-.84 1.037-1.478 1.037-1.105 0-1.611-.917-1.611-2.126 0-1.21.426-2.127 1.61-2.127.32 0 .96.173 1.332.97l1.597-.838c-.68-1.236-1.837-1.728-3.181-1.728z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://creativecommons.org/\",hex:\"EF9421\"},Crehana:{title:\"Crehana\",slug:\"crehana\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Crehana icon</title><path d=\"M12,0C5.371,0,0,5.371,0,12c0,6.626,5.371,12,12,12s12-5.374,12-12C24,5.371,18.626,0,12,0z M17.94,9.843v7.915h-3.957 v-3.892h-3.895v3.83H6.13v-3.957h3.833V9.843H6.06V5.948h3.957v3.895h3.965V5.948h3.957V9.843z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.crehana.com/\",hex:\"4B22F4\"},Crunchbase:{title:\"Crunchbase\",slug:\"crunchbase\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Crunchbase icon</title><path d=\"M21.6 0H2.4A2.41 2.41 0 0 0 0 2.4v19.2A2.41 2.41 0 0 0 2.4 24h19.2a2.41 2.41 0 0 0 2.4-2.4V2.4A2.41 2.41 0 0 0 21.6 0zM7.045 14.465A2.11 2.11 0 0 0 9.84 13.42h1.66a3.69 3.69 0 1 1 0-1.75H9.84a2.11 2.11 0 1 0-2.795 2.795zm11.345.845a3.55 3.55 0 0 1-1.06.63 3.68 3.68 0 0 1-3.39-.38v.38h-1.51V5.37h1.5v4.11a3.74 3.74 0 0 1 1.8-.63H16a3.67 3.67 0 0 1 2.39 6.46zm-.223-2.766a2.104 2.104 0 1 1-4.207 0 2.104 2.104 0 0 1 4.207 0z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.crunchbase.com/home\",hex:\"0288D1\"},Crunchyroll:{title:\"Crunchyroll\",slug:\"crunchyroll\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Crunchyroll icon</title><path d=\"M2.933 13.467a10.55 10.55 0 1 1 21.067-.8V12c0-6.627-5.373-12-12-12S0 5.373 0 12s5.373 12 12 12h.8a10.617 10.617 0 0 1-9.867-10.533zM19.2 14a3.85 3.85 0 0 1-1.333-7.467A7.89 7.89 0 0 0 14 5.6a8.4 8.4 0 1 0 8.4 8.4 6.492 6.492 0 0 0-.133-1.6A3.415 3.415 0 0 1 19.2 14z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.crunchyroll.com\",hex:\"F47521\"},CRYENGINE:{title:\"CRYENGINE\",slug:\"cryengine\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>CRYENGINE icon</title><path d=\"M14.714,14.875c0.296,0,0.58,0.102,0.807,0.288l0.014,0.012l-0.149,0.238 c-0.184-0.168-0.421-0.26-0.671-0.26c-0.549,0-0.995,0.446-0.995,0.995c0,0.549,0.446,0.995,0.995,0.995 c0.497,0,0.91-0.366,0.983-0.842l0.002-0.014h-0.852l0.173-0.277h0.966v0.139c0,0.702-0.571,1.273-1.272,1.273 c-0.702,0-1.272-0.571-1.272-1.273C13.441,15.446,14.012,14.875,14.714,14.875z M1.272,14.875c0.347,0,0.68,0.144,0.918,0.392 l0.012,0.013l-0.157,0.242c-0.19-0.235-0.47-0.37-0.774-0.37c-0.549,0-0.995,0.446-0.995,0.995c0,0.549,0.446,0.995,0.995,0.995 c0.287,0,0.559-0.123,0.748-0.339l0.01-0.012l0.211,0.18C2,17.256,1.646,17.419,1.272,17.419C0.571,17.419,0,16.849,0,16.147 C0,15.446,0.571,14.875,1.272,14.875z M3.712,14.89c0.639,0,0.894,0.3,0.894,0.733c0,0.363-0.184,0.619-0.621,0.706l-0.014,0.003 l0.702,1.075H4.337l-0.663-1.058H3.196v1.058H2.923V14.89H3.712z M9.592,17.163v0.244H7.87v-0.244H9.592z M5.574,14.89l0.691,1.149 c0.024,0.042,0.038,0.087,0.045,0.115c0.01-0.029,0.019-0.067,0.043-0.109l0.006-0.01l0.688-1.145h0.297l-1.564,2.518H5.509 l0.647-1.05L5.274,14.89H5.574z M23.096,17.163v0.244h-1.722v-0.244H23.096z M18.535,14.89l1.512,2.085 c-0.013-0.059-0.02-0.081-0.021-0.127l0-0.009V14.89h0.272v2.518h-0.258l-1.515-2.092c0.01,0.033,0.023,0.078,0.024,0.142l0,0.012 v1.938h-0.272V14.89H18.535z M17.174,14.89v2.518h-0.272V14.89H17.174z M10.779,14.89l1.512,2.085 c-0.013-0.059-0.02-0.081-0.021-0.127l0-0.009V14.89h0.272v2.518h-0.258l-1.515-2.092c0.01,0.033,0.023,0.078,0.024,0.142l0,0.012 v1.938h-0.272V14.89H10.779z M23.096,15.955v0.248h-1.722v-0.248H23.096z M9.592,15.955v0.248H7.87v-0.248H9.592z M3.716,15.134 h-0.52v0.967h0.517c0.384,0,0.615-0.112,0.615-0.478C4.327,15.256,4.096,15.134,3.716,15.134z M23.707,14.567 c0.162,0,0.293,0.13,0.293,0.292c0,0.162-0.131,0.292-0.293,0.292s-0.293-0.13-0.293-0.292 C23.415,14.697,23.546,14.567,23.707,14.567z M23.096,14.89v0.244h-1.722V14.89H23.096z M9.592,14.89v0.244h-1.47l0.151-0.244 H9.592z M23.707,14.616c-0.134,0-0.242,0.108-0.242,0.242c0,0.134,0.108,0.242,0.242,0.242c0.134,0,0.243-0.108,0.243-0.242 C23.95,14.725,23.841,14.616,23.707,14.616z M23.709,14.707c0.075,0,0.108,0.038,0.108,0.091c0,0.04-0.018,0.07-0.059,0.084 l-0.006,0.002l0.08,0.123h-0.058l-0.067-0.104c-0.002-0.002-0.003-0.007-0.004-0.011l0-0.003h-0.058v0.118h-0.048v-0.301H23.709z M23.71,14.753h-0.065v0.091h0.064c0.041,0,0.06-0.011,0.06-0.045C23.769,14.766,23.75,14.753,23.71,14.753z M10.909,6.6 l0.088-0.007c-2.36,0.549-3.761,2.332-3.761,2.564l0,0.001c0,0.001,0.001-0.009,0.002,0.036l0,0.006h0.001 c0.048,0.253,0.745,1.475,3.441,2.201c-3.09-0.245-4.494-1.748-4.563-2.188L6.116,9.199H6.115c0-0.046-0.001-0.037-0.001-0.034l0,0 l0.001-0.013C6.152,8.7,8.043,6.84,10.909,6.6l0.088-0.007L10.909,6.6z M11.89,6.581c3.209,0.167,5.076,2.075,5.093,2.609l0-0.001 c0-0.002-0.001,0-0.001,0.033l0,0.006H16.98c-0.025,0.268-1.045,1.358-2.571,1.86c-1.865,0.613-4.866,0.39-4.866-1.948 c0-1.097,0.894-1.99,1.992-1.99c1.108,0,1.997,0.897,1.997,1.995c0,0.535-0.231,1.053-0.581,1.419 c0.327-0.006,1.517-0.093,2.638-1.017c0.124-0.121,0.203-0.222,0.236-0.284c0.009-0.016,0.022-0.045,0.02-0.072 C15.846,8.951,14.557,7.107,11.89,6.581z M11.533,8.008c-0.625,0-1.131,0.506-1.131,1.131c0,0.625,0.506,1.131,1.131,1.131 c0.624,0,1.131-0.506,1.131-1.131C12.664,8.515,12.158,8.008,11.533,8.008z M16.982,9.19C16.982,9.19,16.982,9.19,16.982,9.19 L16.982,9.19z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.cryengine.com/brand\",hex:\"000000\"},CSS3:{title:\"CSS3\",slug:\"css3\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>CSS3 icon</title><path d=\"M1.5 0h21l-1.91 21.563L11.977 24l-8.565-2.438L1.5 0zm17.09 4.413L5.41 4.41l.213 2.622 10.125.002-.255 2.716h-6.64l.24 2.573h6.182l-.366 3.523-2.91.804-2.956-.81-.188-2.11h-2.61l.29 3.855L12 19.288l5.373-1.53L18.59 4.414z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://www.w3.org/html/logo/\",hex:\"1572B6\"},\"CSS Wizardry\":{title:\"CSS Wizardry\",slug:\"csswizardry\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>CSS Wizardry icon</title><path d=\"M.03 16.428V1.118C.03.5.53 0 1.147 0H22.8c.624 0 1.12.5 1.12 1.12v14.76c-.67-.41-1.46-.616-2.357-.616-1.254 0-2.205.3-2.854.896-.65.598-.97 1.328-.97 2.225 0 .97.33 1.69 1 2.15.39.285 1.11.54 2.14.762l1.05.24c.63.133 1.07.3 1.36.46.28.183.43.437.43.765 0 .566-.29.955-.87 1.148l-.03.016h-2.21c-.287-.104-.51-.254-.69-.45-.18-.224-.3-.55-.36-1.013h-1.98c0 .566.103 1.045.33 1.48h-1.68c.19-.39.3-.823.3-1.317 0-.88-.3-1.55-.886-2.016-.374-.297-.94-.535-1.688-.717l-1.72-.402c-.66-.14-1.09-.28-1.3-.4-.31-.18-.46-.45-.46-.79 0-.38.16-.68.47-.89.33-.21.75-.31 1.29-.31.49 0 .88.09 1.21.26.494.256.75.69.79 1.287h2c-.03-1.046-.415-1.853-1.15-2.404-.744-.55-1.625-.835-2.67-.835-1.255 0-2.195.3-2.853.88-.64.583-.97 1.33-.97 2.21 0 .97.33 1.688 1 2.15.402.27 1.12.523 2.15.76l1.045.24c.61.135 1.06.285 1.36.465.28.18.43.43.43.76 0 .57-.3.94-.88 1.15h-2.24c-.284-.106-.52-.256-.69-.465-.18-.22-.31-.564-.37-1.014H8.38c0 .558.105 1.05.32 1.48H6.61c.33-.52.553-1.12.663-1.79H5.22c-.14.51-.312.898-.525 1.15-.26.33-.6.54-1.02.645H2.448c-.45-.105-.837-.358-1.15-.76-.464-.558-.688-1.394-.688-2.5 0-1.12.23-1.97.66-2.58.45-.613 1.03-.91 1.79-.91.75 0 1.3.21 1.69.644.21.24.39.6.52 1.076h2.08c-.03-.618-.26-1.24-.686-1.86-.772-1.1-1.994-1.65-3.664-1.65-1.16 0-2.134.36-2.91 1.06l-.05-.11zm23.894 3.636V18.51h-.516c-.035-.597-.3-1.022-.783-1.274-.313-.164-.717-.248-1.193-.248-.54 0-.955.11-1.27.322-.312.215-.478.518-.478.902 0 .355.166.62.477.795.22.105.65.254 1.31.404l1.72.41c.3.06.56.15.8.23l-.05.03z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://csswizardry.com\",hex:\"F43059\"},\"Common Workflow Language\":{title:\"Common Workflow Language\",slug:\"commonworkflowlanguage\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Common Workflow Language icon</title><path d=\"M12.063 9.205l-3.565 3.568 3.518 3.512 1.545-1.545-1.975-1.967 2.023-2.023-1.546-1.545zM13.606 22.423L11.6 20.375l3.786-3.815-1.559-1.573-5.33 5.403.115.114-.015.008 3.456 3.484zm1.896-13.565l-3.685-3.541 3.685-3.722L13.936 0 8.598 5.352l.108.101v.007l5.252 4.943z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/common-workflow-language/logo/blob/master/CWL-Logo-nofonts.svg\",hex:\"B5314C\"},\"C Sharp\":{title:\"C Sharp\",slug:\"csharp\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>C Sharp icon</title><path d=\"M12 0A12 12 0 000 12a12 12 0 0012 12 12 12 0 0012-12A12 12 0 0012 0zM9.426 7.12a5.55 5.55 0 011.985.38v1.181a4.5 4.5 0 00-2.25-.566 3.439 3.439 0 00-2.625 1.087 4.099 4.099 0 00-1.012 2.906 3.9 3.9 0 00.945 2.754 3.217 3.217 0 002.482 1.023 4.657 4.657 0 002.464-.634l-.004 1.08a5.543 5.543 0 01-2.625.555 4.211 4.211 0 01-3.228-1.297 4.793 4.793 0 01-1.212-3.409 5.021 5.021 0 011.365-3.663 4.631 4.631 0 013.473-1.392 5.55 5.55 0 01.12-.004 5.55 5.55 0 01.122 0zm5.863.155h.836l-.555 2.652h1.661l.567-2.652h.81l-.555 2.652 1.732-.004-.15.697H17.91l-.412 1.98h1.852l-.176.698h-1.816l-.58 2.625h-.83l.567-2.625h-1.65l-.555 2.625h-.81l.555-2.625h-1.74l.131-.698h1.748l.401-1.976h-1.826l.138-.697h1.826zm.142 3.345L15 12.6h1.673l.423-1.98z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://upload.wikimedia.org/wikipedia/commons/0/0d/C_Sharp_wordmark.svg\",hex:\"239120\"},curl:{title:\"curl\",slug:\"curl\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>curl icon</title><path d=\"M22.23,4.702c-0.535,0-0.967-0.433-0.967-0.967c0-0.535,0.433-0.967,0.967-0.967 c0.534,0,0.967,0.433,0.967,0.967C23.198,4.269,22.764,4.702,22.23,4.702 M12.622,21.233c-0.535,0-0.967-0.433-0.967-0.967 c0-0.535,0.433-0.967,0.967-0.967c0.534,0,0.967,0.433,0.967,0.967C13.588,20.799,13.156,21.233,12.622,21.233 M22.23,1.964 c-0.978,0-1.771,0.793-1.771,1.771c0,0.209,0.053,0.403,0.119,0.589l-8.309,14.241c-0.803,0.168-1.418,0.847-1.418,1.7 c0,0.978,0.793,1.771,1.771,1.771c0.977,0,1.77-0.793,1.77-1.771c0-0.197-0.053-0.376-0.111-0.553l8.351-14.288 c0.779-0.187,1.37-0.854,1.37-1.69C24.001,2.757,23.208,1.964,22.23,1.964 M14.983,4.702c-0.535,0-0.967-0.433-0.967-0.967 c0-0.535,0.433-0.967,0.967-0.967c0.534,0,0.967,0.433,0.967,0.967C15.95,4.269,15.517,4.702,14.983,4.702 M5.374,21.233 c-0.534,0-0.967-0.433-0.967-0.967c0-0.535,0.433-0.967,0.967-0.967c0.535,0,0.967,0.433,0.967,0.967 C6.341,20.799,5.908,21.233,5.374,21.233 M14.983,1.964c-0.979,0-1.771,0.793-1.771,1.771c0,0.209,0.053,0.403,0.119,0.589 L5.022,18.565c-0.804,0.168-1.419,0.847-1.419,1.7c0,0.978,0.793,1.771,1.771,1.771c0.978,0,1.771-0.793,1.771-1.771 c0-0.197-0.053-0.376-0.111-0.553l8.351-14.288c0.779-0.187,1.37-0.854,1.37-1.69C16.754,2.757,15.961,1.964,14.983,1.964  M1.749,7.663c0.534,0,0.967,0.433,0.967,0.967c0,0.534-0.433,0.967-0.967,0.967S0.782,9.165,0.782,8.631 C0.782,8.097,1.215,7.663,1.749,7.663 M1.749,6.883c-0.964,0-1.748,0.784-1.748,1.748s0.784,1.748,1.748,1.748 s1.748-0.784,1.748-1.748S2.713,6.883,1.749,6.883L1.749,6.883z M1.749,13.852c0.534,0,0.967,0.433,0.967,0.967 c0,0.534-0.433,0.967-0.967,0.967s-0.967-0.433-0.967-0.967C0.782,14.285,1.215,13.852,1.749,13.852 M1.749,13.072 c-0.964,0-1.748,0.784-1.748,1.748s0.784,1.748,1.748,1.748s1.748-0.784,1.748-1.748S2.713,13.072,1.749,13.072L1.749,13.072z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://curl.haxx.se/logo/\",hex:\"073551\"},\"C++\":{title:\"C++\",slug:\"cplusplus\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>C++ icon</title><path d=\"M22.393 6c-.167-.29-.398-.543-.652-.69L12.925.22c-.508-.293-1.339-.293-1.847 0L2.26 5.31c-.508.293-.923 1.013-.923 1.6v10.18c0 .294.104.62.271.91.167.29.398.543.652.689l8.816 5.091c.508.293 1.339.293 1.847 0l8.816-5.091c.254-.146.485-.399.652-.689s.271-.616.271-.91V6.91c.002-.294-.102-.62-.269-.91zM12 19.109c-3.92 0-7.109-3.189-7.109-7.109S8.08 4.891 12 4.891a7.133 7.133 0 0 1 6.156 3.552l-3.076 1.781A3.567 3.567 0 0 0 12 8.445c-1.96 0-3.554 1.595-3.554 3.555S10.04 15.555 12 15.555a3.57 3.57 0 0 0 3.08-1.778l3.077 1.78A7.135 7.135 0 0 1 12 19.109zm7.109-6.714h-.79v.79h-.79v-.79h-.79v-.79h.79v-.79h.79v.79h.79v.79zm2.962 0h-.79v.79h-.79v-.79h-.789v-.79h.789v-.79h.79v.79h.79v.79z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/isocpp/logos\",hex:\"00599C\"},\"D3.js\":{title:\"D3.js\",slug:\"d3-dot-js\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>D3.js icon</title><path d=\"M13.312 12C13.312 5.718 8.22.625 1.937.625H0v5h1.938c3.521 0 6.375 2.854 6.375 6.375s-2.854 6.375-6.375 6.375H0v5h1.938c6.281 0 11.374-5.093 11.374-11.375zM24 7.563C24 3.731 20.893.625 17.062.625h-8a13.4154 13.4154 0 0 1 4.686 5h3.314c1.069 0 1.938.868 1.938 1.938 0 1.07-.869 1.938-1.938 1.938h-1.938c.313 1.652.313 3.348 0 5h1.938c1.068 0 1.938.867 1.938 1.938s-.869 1.938-1.938 1.938h-3.314a13.4154 13.4154 0 0 1-4.686 5h8c1.621 0 3.191-.568 4.438-1.605 2.943-2.45 3.346-6.824.895-9.77A6.9459 6.9459 0 0 0 24 7.563z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/d3/d3-logo\",hex:\"F9A03C\"},Dailymotion:{title:\"Dailymotion\",slug:\"dailymotion\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Dailymotion icon</title><path d=\"M14.068 11.313c-1.754 0-3.104 1.427-3.104 3.11 0 1.753 1.35 3.085 3.255 3.085l-.016.002c1.59 0 2.925-1.31 2.925-3.04 0-1.8-1.336-3.157-3.062-3.157zM0 0v24h24V0H0zm20.693 20.807h-3.576v-1.41c-1.1 1.08-2.223 1.47-3.715 1.47-1.522 0-2.832-.495-3.93-1.485-1.448-1.275-2.198-2.97-2.198-4.936 0-1.8.7-3.414 2.01-4.674 1.17-1.146 2.595-1.73 4.185-1.73 1.52 0 2.69.513 3.53 1.59V4.157l3.693-.765V3.39l.002.003h-.002v17.414z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://press.dailymotion.com/?page_id=346\",hex:\"0066DC\"},Dart:{title:\"Dart\",slug:\"dart\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Dart icon</title><path d=\"M4.105 4.105S9.158 1.58 11.684.316a3.079 3.079 0 0 1 1.481-.315c.766.047 1.677.788 1.677.788L24 9.948v9.789h-4.263V24H9.789l-9-9C.303 14.5 0 13.795 0 13.105c0-.319.18-.818.316-1.105l3.789-7.895zm.679.679v11.787c.002.543.021 1.024.498 1.508L10.204 23h8.533v-4.263L4.784 4.784zm12.055-.678c-.899-.896-1.809-1.78-2.74-2.643-.302-.267-.567-.468-1.07-.462-.37.014-.87.195-.87.195L6.341 4.105l10.498.001z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/dart-lang/site-shared/tree/master/src/_assets/image/dart/logo\",hex:\"0175C2\"},Dashlane:{title:\"Dashlane\",slug:\"dashlane\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Dashlane icon</title><path d=\"M15.63 10.04c-.47-.393-.863-1.02-.863-1.648 0-.235.078-.627.157-.863 0-.156.078-.156.157-.235.706-.157 1.02-.157 1.098-.235.157-.314.235-.706.235-.706l-5.49-1.726s.314.863.549.942l2.51 1.098s-1.255.313-1.961.47l-.157.079s.235.47.706.706c.47-.157 1.333-.314 1.333-.314-1.176 2.353-3.686 3.921-6.353 3.921h-.94c-.315 0-.393.236-.158.393.47.235.863.705 1.02 1.176.078.314-.079.55-.314.706-.47.392-1.725 1.255-2.902 2.196a3.664 3.664 0 0 1-.392-.784C2.767 12.784 2.218 9.333 2.218 4.784v-.157l9.412-3.058 9.411 3.058v.079c0 1.647-.078 3.216-.235 4.549v.157h1.569v-.079c.157-1.411.235-2.902.235-4.549V3.53L11.63 0 .65 3.53v1.176c0 4.784.548 8.392 1.725 11.059.157.392.392.784.549 1.098-.941.706-1.726 1.255-1.726 1.255l.47.784 6.04-4.314a19.5 19.5 0 0 1 10.98-3.372h1.883c-.235 1.49-.628 2.823-1.098 3.921-.55 1.255-1.255 2.353-2.196 3.451-.706.863-1.569 1.569-2.51 2.196-1.569 1.098-2.98 1.569-3.059 1.647-.157-.078-1.49-.549-3.059-1.647-1.02-.706-1.882-1.411-2.588-2.274-.235-.235-.47-.55-.706-.863l-.078-.078-1.255.94.078.08c.314.391.55.705.785 1.019.784.941 1.725 1.725 2.745 2.431 1.725 1.177 3.215 1.726 3.45 1.804 0 0 .314.079.393.157h.157c.157 0 .392-.157.392-.157.314-.078 1.725-.627 3.45-1.804a16.44 16.44 0 0 0 2.746-2.431 15.164 15.164 0 0 0 2.431-3.843 16.555 16.555 0 0 0 1.255-4.55h1.334c.078-.313.156-.862.156-.862h-4.862c-1.804-.078-2.432 0-2.902-.314z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.dashlane.com/\",hex:\"007C97\"},\"Dassault Systèmes\":{title:\"Dassault Systèmes\",slug:\"dassaultsystemes\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Dassault Systèmes icon</title><path d=\"M21.161 8.04c1.063.192 1.93.34 2.129.79.223.508-.935.54-1.518.551-2.797.054-4.483.11-4.568 1.06-.11 1.223 1.195 2.454 2.484 4.181 1.177 1.576 2.515 3.132 2.13 4.582-.481 1.807-2.696 2.19-4.805 2.19-2.02.001-3.935-.323-4.739-.482-1.001-.198-.852-.693-.585-.852.298-.178 2-.182 3.184-.252.974-.058 3.802-.056 4.243-.78.54-.888-.783-2.406-1.999-3.996-1.517-1.983-3.183-4.031-2.301-5.527 1.14-1.935 4.48-1.802 6.345-1.465 M7.482 10.987c1.771-.104 3.923.206 5.13 1.13.602.46 1.024 1.305.78 2.274-.698 2.75-3.301 6.078-9.085 8.635-1.84.813-3.286 1.124-3.59.906-.326-.234.623-2.05.908-2.652.924-1.95 2.077-3.85 3.202-5.59.414-.64 1.054-1.75 1.633-1.661.518.08-.089 1.26-.488 2.01-.671 1.258-2.52 4.755-1.91 4.964 1.348.462 7.673-4.35 6.74-7.029-.432-1.244-3.178-1.362-4.908-1.362-.786 0-2.505.186-2.6-.417-.102-.555 2.61-1.115 4.188-1.208M11.851.034c2.066-.098 4.51.342 4.965 1.8.747 2.388-3.036 5.872-6.332 7.581-.808.42-1.298.535-1.502.506-.195-.027-.225-.221-.162-.355.118-.251.649-.763 1.36-1.32 3.711-2.897 4.918-5.024 4.217-5.885-.449-.552-2.33-.936-4.283-.936-.53 0-1.924.123-2.067-.367C7.93.655 9.8.13 11.85.034\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.3ds.com/statics/menu/2/assets/img/logo/3ds-dark.svg\",hex:\"005386\"},DataCamp:{title:\"DataCamp\",slug:\"datacamp\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>DataCamp icon</title><path d=\"M14.156,5.579l-0.194,0.269c-0.24-0.247-0.819-0.509-0.86-0.528l0.155-0.411 l-0.014-0.01c-0.024-0.016-0.05-0.028-0.078-0.037c-0.873-0.329-1.675-0.333-2.768-0.017l0.517,1.381h-0.01 C10.18,6.461,9.64,7.114,9.581,7.187L8.865,6.676C8.47,7.198,8.19,8.142,8.19,8.867H7.277c0.007,0.656,0.126,1.794,0.9,2.738 l0.682-0.521c0.623,0.916,1.925,1.581,3.015,1.468l-0.016-1.906h0.014v0.026c0.273,0.08,0.843-0.093,1.092-0.289l0.517,0.692 c0.543-0.185,0.964-1.238,1.008-1.351l0.822,0.281l0.001,0.001c0.22-0.763,0.228-1.572,0.023-2.339l-0.001,0.001V7.659 c0.001,0.002,0.001,0.005,0.001,0.007l0.294-0.107C15.411,6.734,14.883,6.025,14.156,5.579z M12.168,9.258 c-0.341,0.142-0.735,0.063-0.995-0.2c-0.261-0.265-0.339-0.66-0.198-1.004c0.142-0.344,0.475-0.568,0.845-0.568c0,0,0,0,0,0h0.001 c0,0,0,0,0,0c0.505,0.003,0.913,0.415,0.912,0.92C12.732,8.779,12.509,9.116,12.168,9.258z M22.662,3.692L12.139,0.043 c-0.162-0.057-0.338-0.057-0.499,0L1.341,3.695C1.006,3.814,0.798,4.147,0.836,4.5l1.453,13.842 c0.025,0.248,0.17,0.469,0.387,0.591l8.961,4.973C11.749,23.967,11.875,24,12.003,24h0.001c0.131,0,0.26-0.034,0.373-0.099 l8.739-4.973c0.209-0.119,0.35-0.333,0.38-0.575l1.67-13.842C23.208,4.152,23,3.812,22.662,3.692z M16.764,12.917 c0,0-0.127,0.144,0.051,0.445c0.179,0.299,0.23,0.299-0.102,0.612c0.256,0.222,0.256,0.406-0.127,0.58 c0.009,0.618,0.134,1.171-0.651,1.218c-0.785,0.046-1.78-0.482-2.039,0.939c-0.259,1.419-0.192,0.888-0.269,1.244H8.082 c0.69-1.902,1.28-4.001,0-5.032c-1.279-1.03-3.373-5.358,0.756-7.575c0.465-0.248,0.961-0.435,1.474-0.554L10.138,4.33l0.054-0.021 c0.017-0.007,1.774-0.684,3.293,0.062l0.05,0.025l-0.183,0.416c0.979,0.22,1.709,0.582,1.98,0.751 c0.614,0.382,1.429,0.99,1.507,1.566c0.077,0.575-0.664,0.286-0.664,0.286c0.46,1.117,0.485,1.918,0.28,2.768v0.001 c-0.204,0.848,0.945,1.725,0.92,2.342C17.3,12.812,16.764,12.917,16.764,12.917z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.datacamp.com/\",hex:\"33AACC\"},DAZN:{title:\"DAZN\",slug:\"dazn\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>DAZN icon</title><path d=\"M14.774 8.291l.772-2.596.79 2.596zm3.848 2.268l-2.025-6.128c-.045-.135-.097-.224-.154-.266-.059-.041-.152-.063-.28-.063h-1.12a.485.485 0 0 0-.284.068c-.06.045-.11.132-.149.261l-2.045 6.128c-.025.032-.038.096-.038.192 0 .149.09.223.27.223h.84c.076 0 .139-.003.187-.01a.207.207 0 0 0 .116-.048.326.326 0 0 0 .077-.116c.022-.051.046-.119.072-.202l.318-1.071h2.306l.327 1.051c.026.09.051.16.077.213a.395.395 0 0 0 .087.12c.031.028.07.047.114.053h.002c.045.006.103.01.173.01h.897c.18 0 .27-.074.27-.223a.59.59 0 0 0-.005-.09.878.878 0 0 0-.036-.108l.003.006zm-.994 2.467h-.646c-.168 0-.279.024-.333.072-.055.049-.082.147-.082.295v3.638l-1.91-3.647c-.076-.155-.152-.253-.226-.295-.074-.041-.204-.063-.39-.063h-.599c-.167 0-.278.025-.332.073-.055.048-.082.147-.082.294v6.138c0 .148.025.246.077.294.052.048.16.072.328.072h.656c.167 0 .278-.024.332-.072.055-.048.082-.146.082-.294v-3.648l1.91 3.657c.077.155.152.253.227.295.073.042.204.062.39.062h.598c.167 0 .278-.024.333-.072.054-.048.082-.146.082-.294v-6.138c0-.148-.028-.246-.082-.294-.055-.048-.166-.073-.333-.073zm3.203-.581l1.665 1.665v8.385H1.505V14.11l1.663-1.664a.63.63 0 0 0 0-.89L1.504 9.891V1.505h20.991v8.384l-1.665 1.666a.63.63 0 0 0 0 .89zM24 0H0v10.613L1.387 12 0 13.387V24h24V13.387L22.613 12 24 10.613zM10.67 18.469H7.96l2.855-4.014a.67.67 0 0 0 .087-.155.425.425 0 0 0 .019-.135v-.772c0-.148-.028-.246-.082-.294-.055-.048-.166-.073-.334-.073H6.382c-.149 0-.245.028-.29.082-.045.055-.068.169-.068.343v.58c0 .172.023.287.068.341.045.055.141.083.29.083h2.545L6.11 18.469a.438.438 0 0 0-.107.27v.792c0 .148.027.245.082.294.055.048.167.072.334.072h4.25c.148 0 .245-.027.29-.081.045-.055.068-.17.068-.344v-.579c0-.173-.023-.287-.068-.342-.045-.055-.142-.082-.29-.082zM9.408 8.233c0 .264-.017.484-.052.661-.036.177-.093.32-.174.43a.648.648 0 0 1-.318.231 1.523 1.523 0 0 1-.487.068h-.79v-4.17h.79c.366 0 .63.11.79.324.16.215.241.571.241 1.067v1.389zm1.38-2.789c-.225-.457-.533-.795-.921-1.013-.39-.219-.88-.328-1.47-.328H6.418c-.167 0-.278.024-.333.072-.054.049-.082.147-.082.294v6.138c0 .148.028.246.082.295.055.048.166.072.333.072h2.218c1.048 0 1.765-.447 2.15-1.342.09-.205.153-.413.188-.622a4.91 4.91 0 0 0 .054-.796V6.911c0-.367-.018-.656-.054-.868a2.2 2.2 0 0 0-.193-.612l.006.013z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://media.dazn.com/en/assets/\",hex:\"F8F8F5\"},dblp:{title:\"dblp\",slug:\"dblp\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>dblp icon</title><path d=\"M21.3 14.58l-2.45-9.16s-.15-.59-.72-.33l-5.6 2.6.86 3.2 1.09 4.08.01.06c.05.47-.41.79-.41.79l-1.88.87.5 1.89.04.1c.07.17.28.6.81.91l6.95 4.27s.68.41.52-.17l-1.98-7.4 1.86-.86s.56-.26.4-.85zM13.76 14.67l-.01-.06-1.13-4.22-.66-2.45-.67-2.49v-.04s-.16-.59-.84-1L3.5.14s-.68-.41-.52.17l1.99 7.42-1.87.87s-.56.26-.4.85l2.45 9.16s.16.59.72.33l6.17-2.87 1.3-.61s.52-.24.42-.79z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://dblp.org/\",hex:\"004F9F\"},Debian:{title:\"Debian\",slug:\"debian\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Debian icon</title><path d=\"M13.88 12.68c-.4 0 .08.2.6.28.14-.1.27-.22.39-.33a3 3 0 0 1-.99.05M16.02 12.15c.23-.33.4-.69.47-1.06-.06.27-.2.5-.33.73-.75.47-.07-.27 0-.56-.8 1.01-.11.6-.14.89M16.8 10.1c.05-.72-.14-.5-.2-.22.07.04.13.5.2.22M12.38.31c.2.04.45.07.42.12.23-.05.28-.1-.43-.12M12.8.43l-.15.03.14-.01V.43M19.42 10.37c.02.64-.2.95-.38 1.5l-.35.18c-.28.54.03.35-.17.78-.44.39-1.34 1.22-1.62 1.3-.2 0 .14-.25.19-.34-.59.4-.48.6-1.37.85l-.03-.06c-2.22 1.04-5.3-1.02-5.25-3.84-.03.17-.07.13-.12.2a3.55 3.55 0 0 1 2-3.5 3.36 3.36 0 0 1 3.73.48 3.34 3.34 0 0 0-2.72-1.3c-1.18.01-2.28.76-2.65 1.57-.6.38-.67 1.47-.93 1.66-.36 2.6.66 3.72 2.38 5.04.27.19.08.21.12.35a4.7 4.7 0 0 1-1.53-1.16c.23.33.47.66.8.91-.55-.18-1.27-1.3-1.48-1.35.93 1.66 3.78 2.92 5.26 2.3a6.2 6.2 0 0 1-2.33-.28c-.33-.16-.77-.51-.7-.57a5.8 5.8 0 0 0 5.9-.84c.44-.35.93-.94 1.07-.95-.2.32.04.16-.12.44.44-.72-.2-.3.46-1.24l.24.33c-.09-.6.74-1.32.66-2.26.19-.3.2.3 0 .97.29-.74.08-.85.15-1.46.08.2.18.42.23.63-.18-.7.2-1.2.28-1.6-.09-.05-.28.3-.32-.53 0-.37.1-.2.14-.28-.08-.05-.26-.32-.38-.86.08-.13.22.33.34.34-.08-.42-.2-.75-.2-1.08-.34-.68-.12.1-.4-.3-.34-1.09.3-.25.34-.74.54.77.84 1.96.98 2.46-.1-.6-.28-1.2-.49-1.76.16.07-.26-1.24.21-.37A7.82 7.82 0 0 0 17.7 1.6c.18.17.42.39.33.42-.75-.45-.62-.48-.73-.67-.61-.25-.65.02-1.06 0C15.08.73 14.86.8 13.8.4l.05.23c-.77-.25-.9.1-1.73 0-.05-.04.27-.14.53-.18-.74.1-.7-.14-1.43.03.17-.13.36-.21.55-.32-.6.04-1.44.35-1.18.07C9.6.68 7.85 1.3 6.87 2.22L6.84 2c-.45.54-1.96 1.61-2.08 2.31l-.13.03c-.23.4-.38.85-.57 1.26-.3.52-.45.2-.4.28-.6 1.22-.9 2.25-1.16 3.1.18.27 0 1.65.07 2.76-.3 5.46 3.84 10.77 8.36 12 .67.23 1.65.23 2.49.25-.99-.28-1.12-.15-2.08-.49-.7-.32-.85-.7-1.34-1.13l.2.35c-.97-.34-.57-.42-1.36-.67l.21-.27c-.31-.03-.83-.53-.97-.81l-.34.01c-.41-.5-.63-.87-.61-1.16l-.11.2c-.13-.21-1.52-1.9-.8-1.51-.13-.12-.31-.2-.5-.55l.14-.17c-.35-.44-.64-1.02-.62-1.2.2.24.32.3.45.33-.88-2.17-.93-.12-1.6-2.2l.15-.02c-.1-.16-.18-.34-.26-.51l.06-.6c-.63-.74-.18-3.1-.09-4.4.07-.54.53-1.1.88-1.98l-.21-.04c.4-.71 2.34-2.87 3.24-2.76.43-.55-.09 0-.18-.14.96-.99 1.26-.7 1.9-.88.7-.4-.6.16-.27-.15 1.2-.3.85-.7 2.42-.85.16.1-.39.14-.52.26 1-.49 3.15-.37 4.56.27 1.63.77 3.46 3.01 3.53 5.13l.08.02c-.04.85.13 1.82-.17 2.71l.2-.42M9.54 13.23l-.05.28c.26.35.47.73.8 1.01-.24-.47-.42-.66-.75-1.3M10.16 13.2c-.14-.15-.22-.34-.31-.52.08.32.26.6.43.88l-.12-.36M21.1 10.82l-.07.15c-.1.76-.34 1.51-.69 2.21.4-.73.65-1.54.75-2.36M12.45.12c.27-.1.66-.05.95-.12-.37.03-.74.05-1.1.1l.15.02M3.01 5.14c.07.57-.43.8.11.42.3-.66-.11-.18-.1-.42M2.38 7.8c.12-.39.15-.62.2-.84-.35.44-.17.53-.2.83\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.debian.org/logos\",hex:\"A81D33\"},deepin:{title:\"deepin\",slug:\"deepin\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>deepin icon</title><path d=\"M16.104.696c-1.724-.63-3.49-.8-5.205-.64-1.988.157-2.958.772-2.9.661-3.251 1.16-6 3.657-7.272 7.157-2.266 6.234.944 13.128 7.168 15.398 6.228 2.27 13.111-.945 15.378-7.179C25.54 9.86 22.33 2.966 16.104.696zM8.305 22.145a10.767 10.767 0 0 1-1.867-.904c2.9.223 6.686-.445 9.239-2.834 0 0 4.866-3.888 1.345-10.269 0 0 .568 2.572-.156 4.687 0 0-.69 2.877-3.757 3.712-4.517 1.231-9.664-1.93-11.816-3.463-.162-1.574-.018-3.2.56-4.788.855-2.352 2.463-4.188 4.427-5.42-.49 3.436-.102 6.6.456 7.925.749 1.777 2.05 3.85 4.59 4.115 2.54.267 3.94-2.11 3.94-2.11 1.304-1.98 1.508-4.823 1.488-4.892-.02-.07-.347-.257-.347-.257-.877 3.549-2.323 4.734-2.323 4.734-2.28 2.201-3.895.675-3.895.675-1.736-1.865-.52-4.895-.52-4.895.68-2.064 2.66-5.084 4.905-6.62.374.092.75.15 1.12.284a10.712 10.712 0 0 1 3.554 2.16c-1.641.599-4.291 1.865-4.291 1.865-4.201 1.77-4.485 4.446-4.485 4.446-.435 2.758 1.754 1.59 1.754 1.59 2.252-1.097 3.359-4.516 3.359-4.516-.703-.134-1.257.08-1.257.08-.899 2.22-2.733 3.132-2.733 3.132-.722.382-.89-.293-.89-.293-.122-.506.522-.592.522-.592 1-.389 1.639-1.439 1.784-1.868.144-.43.412-.464.412-.464a12.998 12.998 0 0 1 2.619-.535c1.7-.209 4.303.602 4.303.602.584.235 1.144.41 1.641.551.954 2.384 1.105 5.098.16 7.7-2.039 5.61-8.236 8.504-13.841 6.462z\" /></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://commons.wikimedia.org/wiki/File:Deepin_logo.svg\",hex:\"007CFF\"},Deezer:{title:\"Deezer\",slug:\"deezer\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Deezer icon</title><path d=\"M18.81 4.16v3.03H24V4.16h-5.19zM6.27 8.38v3.027h5.189V8.38h-5.19zm12.54 0v3.027H24V8.38h-5.19zM6.27 12.594v3.027h5.189v-3.027h-5.19zm6.271 0v3.027h5.19v-3.027h-5.19zm6.27 0v3.027H24v-3.027h-5.19zM0 16.81v3.029h5.19v-3.03H0zm6.27 0v3.029h5.189v-3.03h-5.19zm6.271 0v3.029h5.19v-3.03h-5.19zm6.27 0v3.029H24v-3.03h-5.19Z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://deezerbrand.com/\",hex:\"FEAA2D\"},Delicious:{title:\"Delicious\",slug:\"delicious\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Delicious icon</title><path d=\"M12 12H0v12h12V12zM24 0H12v12h12V0z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://en.wikipedia.org/wiki/Delicious_(website)\",hex:\"3399FF\"},Deliveroo:{title:\"Deliveroo\",slug:\"deliveroo\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Deliveroo icon</title><path d=\"M16.861 0l-1.127 10.584L13.81 1.66 7.777 2.926l1.924 8.922-8.695 1.822 1.535 7.127L17.832 24l3.498-7.744L22.994.636 16.861 0zM11.39 13.61a.755.755 0 01.322.066c.208.093.56.29.63.592.103.434.004.799-.312 1.084v.002c-.315.284-.732.258-1.174.113-.441-.145-.637-.672-.47-1.309.124-.473.71-.544 1.004-.549zm4.142.548c.447-.012.832.186 1.05.543.217.357.107.75-.122 1.143h-.002c-.229.392-.83.445-1.422.16-.399-.193-.397-.684-.353-.983a.922.922 0 01.193-.447c.142-.177.381-.408.656-.416Z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.deliveroo.design/\",hex:\"00CCBC\"},Dell:{title:\"Dell\",slug:\"dell\",svg:'<svg xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" viewBox=\"0 0 24 24\"><title>Dell icon</title><path d=\"M17.963 14.6V9.324h1.222v4.204h2.14v1.07h-3.362zm-9.784-3.288l2.98-2.292c.281.228.56.458.841.687l-2.827 2.14.611.535 2.827-2.216c.281.228.56.458.841.688a295.83 295.83 0 0 1-2.827 2.216l.61.536 2.83-2.295-.001-1.986h1.223v4.204h2.216v1.07h-3.362v-1.987c-.995.763-1.987 1.529-2.981 2.292l-2.981-2.292c-.144.729-.653 1.36-1.312 1.694-.285.147-.597.24-.915.276-.183.022-.367.017-.551.017H3.516V9.325H5.69a2.544 2.544 0 0 1 1.563.557c.454.36.778.872.927 1.43m-3.516-.917v3.21l.953-.001a1.377 1.377 0 0 0 1.036-.523 1.74 1.74 0 0 0 .182-1.889 1.494 1.494 0 0 0-.976-.766c-.166-.04-.338-.03-.507-.032h-.688zM11.82 0h.337a11.94 11.94 0 0 1 5.405 1.373 12.101 12.101 0 0 1 4.126 3.557A11.93 11.93 0 0 1 24 11.82v.36a11.963 11.963 0 0 1-3.236 8.033A11.967 11.967 0 0 1 12.182 24h-.361a11.993 11.993 0 0 1-4.145-.806 12.04 12.04 0 0 1-4.274-2.836A12.057 12.057 0 0 1 .576 15.67 12.006 12.006 0 0 1 0 12.181v-.361a11.924 11.924 0 0 1 1.992-6.396 12.211 12.211 0 0 1 4.71-4.172A11.875 11.875 0 0 1 11.82 0m-.153 1.23a10.724 10.724 0 0 0-6.43 2.375 10.78 10.78 0 0 0-3.319 4.573 10.858 10.858 0 0 0 .193 8.12 10.788 10.788 0 0 0 3.546 4.421 10.698 10.698 0 0 0 4.786 1.946c1.456.209 2.955.124 4.376-.26a10.756 10.756 0 0 0 5.075-3.062 10.742 10.742 0 0 0 2.686-5.28 10.915 10.915 0 0 0-.122-4.682 10.77 10.77 0 0 0-7.098-7.626 10.78 10.78 0 0 0-3.693-.525z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://datasecurity.dell.com/wp-content/themes/dell/images/logo-dell.svg\",hex:\"007DB8\"},Deno:{title:\"Deno\",slug:\"deno\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Deno icon</title><path d=\"M11.056.006c-.056.006-.236.027-.398.041C8.35.289 6.077 1.266 4.224 2.818a15.656 15.656 0 0 0-1.405 1.405C1.284 6.056.387 8.113.057 10.548c-.074.54-.074 2.364 0 2.904.331 2.435 1.228 4.492 2.762 6.325a15.656 15.656 0 0 0 1.405 1.405c1.833 1.535 3.89 2.432 6.325 2.762.54.074 2.364.074 2.904 0 2.435-.331 4.492-1.228 6.325-2.762a15.656 15.656 0 0 0 1.405-1.405c1.535-1.833 2.432-3.89 2.762-6.325.074-.54.074-2.364 0-2.904-.331-2.435-1.228-4.492-2.762-6.325a15.656 15.656 0 0 0-1.405-1.405C17.951 1.289 15.873.38 13.471.058c-.26-.035-.637-.05-1.337-.056a25.793 25.793 0 0 0-1.077.003zm.147 1.275c0 .345.024 1.095.056 1.806.018.348.038.847.047 1.107.032.921.13 3.338.145 3.553l.015.215-.133-.015a.504.504 0 0 1-.153-.032 3.247 3.247 0 0 1-.041-.455 702.803 702.803 0 0 1-.245-5.723l-.018-.655.083-.012c.044-.006.118-.015.165-.018l.08-.003v.23zm2.825-.071c.003.003.012.894.021 1.98.012 1.089.027 2.066.035 2.172.009.109.006.204-.009.21a.433.433 0 0 1-.159 0l-.136-.012-.021-.859-.032-1.172c-.024-.522-.044-2.296-.027-2.34.012-.032.044-.035.168-.015.086.018.156.032.159.035zm-6.827.989c.018.027.156 1.653.328 3.781.056.723.112 1.384.121 1.467.015.151.012.156-.083.215a.519.519 0 0 1-.118.059c-.009 0-.027-.077-.035-.171-.041-.384-.201-2.237-.313-3.577-.065-.788-.124-1.493-.133-1.57-.015-.13-.012-.142.065-.183.094-.05.148-.059.168-.021zm8.125.593c.083.03.091.044.109.213.03.295.021 1.706-.012 1.706-.086 0-.263-.1-.277-.156a14.377 14.377 0 0 1-.018-.93c0-.959-.012-.903.198-.832zm-5.451.139c0 .08.021.519.044.983l.062 1.305c.021.514.027.496-.171.508-.097.003-.097.003-.103-.145-.006-.083-.021-.339-.038-.576-.015-.236-.05-.747-.074-1.136s-.053-.776-.062-.859c-.018-.148-.015-.153.065-.183a.617.617 0 0 1 .183-.032c.094-.003.094-.003.094.136zm8.187.404l.1.041.021.395c.009.215.015.682.009 1.033l-.009.643-.124-.062-.124-.059-.009-.98c-.006-.54-.003-.998.003-1.018.012-.044.012-.044.133.006zm-5.389.387c.018.018.059 1.449.062 2.175l.003.437-.139-.021a1.3 1.3 0 0 1-.148-.021c-.009-.006-.097-2.193-.097-2.405v-.218l.151.018a.743.743 0 0 1 .168.035zm6.797.209c.035.041.041.688.05 4.253.009 4.094.009 4.2-.044 4.2a.197.197 0 0 1-.103-.038c-.044-.032-.05-.39-.065-3.887a475.425 475.425 0 0 0-.035-4.277l-.018-.425.086.062c.05.035.106.086.13.112zm-2.647.606c.015.012.03.18.032.372.015.652.018 4.651.003 4.663-.006.006-.059-.009-.118-.032l-.106-.044v-5.02l.083.018c.044.012.092.03.106.044zm-8.146.165c.009.08.024.26.032.407l.047.732c.035.519.03.552-.139.552-.089 0-.1-.009-.112-.097-.03-.174-.133-1.626-.118-1.65a.654.654 0 0 1 .239-.08c.018-.003.041.059.05.136zm-4.882.752l.145 1.455c.05.487.092.9.092.918 0 .035-.227.148-.251.124a96.053 96.053 0 0 1-.31-2.745c0-.071.227-.369.257-.336.009.006.038.269.068.584zm11.572.31l.086.05.003.638c.003.348.009.738.009.865.006.266-.027.31-.186.254l-.091-.032v-.254c0-.142-.009-.552-.021-.915l-.018-.655h.068a.41.41 0 0 1 .151.05zM5.091 6.909l.195 2.125.1 1.092-.115.115-.112.115-.021-.233c-.012-.13-.071-.732-.133-1.34s-.151-1.49-.195-1.96l-.083-.85.115-.106c.103-.097.115-.1.136-.047.012.03.062.519.112 1.089zm-2.211.358c.065.581.236 2.128.384 3.435s.286 2.568.313 2.804c.024.236.065.593.089.797.041.345.041.369-.006.404-.071.053-.1.047-.1-.015 0-.027-.027-.251-.059-.493-.053-.404-.142-1.089-.339-2.627-.041-.31-.121-.927-.177-1.372a466.562 466.562 0 0 1-.369-2.872c-.053-.401-.086-.759-.077-.797.021-.08.195-.357.213-.339.006.009.065.49.13 1.074zm-.903 1.272l.183 1.44c.056.437.127.983.159 1.21l.056.413-.062.053c-.035.03-.071.041-.083.03s-.035-.13-.053-.26c-.018-.13-.127-.888-.245-1.682l-.21-1.446.068-.201a.724.724 0 0 1 .083-.198c.012 0 .056.289.103.64zm16.203-.387c.041.041.047.224.047 1.579v1.532h-.083c-.18 0-.177.044-.189-1.632l-.009-1.526h.094c.05 0 .115.021.139.047zm-6.46.528c.667.1 1.248.286 1.824.581.372.192.549.325.962.72.614.587.992 1.101 1.346 1.827.516 1.057.717 1.992.971 4.501.115 1.124.266 3.164.298 3.999.009.242.03.64.047.885.032.519.071.449-.387.67-.635.307-1.245.519-2.051.717-.986.242-1.623.319-2.597.322l-.708.003.006-.339c0-.186.018-.62.035-.959.089-1.644.071-3.719-.044-4.87-.065-.661-.192-1.464-.263-1.641-.015-.038.053-.071.345-.171.534-.186.998-.419 1.068-.534.127-.218-.1-.531-.39-.531-.05 0-.201.053-.339.115-.661.304-1.986.661-2.751.741a7.794 7.794 0 0 1-1.918-.08c-.31-.056-.865-.266-1.328-.505-.534-.277-.862-.646-.959-1.083-.053-.236-.038-.708.03-.974.074-.292.28-.717.469-.965.841-1.107 2.577-2.066 4.356-2.402a6.632 6.632 0 0 1 1.977-.027zm9.105.092c.106.044.118.056.118.156.006.806-.012 2.647-.027 2.724-.003.027-.156.03-.221.006-.041-.015-.047-.174-.047-1.476 0-.933.012-1.458.03-1.458.015 0 .083.021.148.047zm1.289 1.62l.106.044-.021 2.444c-.024 3.114-.027 3.205-.139 3.474-.183.44-.174.528-.156-1.402.006-.965.021-1.942.027-2.169s.012-.868.015-1.426c0-.673.009-1.009.03-1.009.018 0 .08.021.139.044zm-17.749.735c.018.239.012.263-.074.452l-.094.201-.035-.295c-.056-.472-.056-.493.056-.564.05-.035.103-.059.112-.053s.027.124.035.26zm-1.824 1.78c.027.242.233 1.848.339 2.636.159 1.219.171 1.393.1 1.319a14.698 14.698 0 0 1-.148-.912c-.46-3.182-.457-3.161-.419-3.185.08-.053.106-.024.127.142zm2.125 1.351c.018.074.103.874.103.971 0 .083-.106.159-.153.112-.015-.015-.053-.266-.083-.555l-.074-.676-.018-.148.103.118a.656.656 0 0 1 .121.177zm2.382 1.113c.032.03.053.148.08.466.044.576.05.531-.071.531-.124 0-.121.009-.162-.511-.041-.528-.041-.522.038-.522.038 0 .089.018.115.035zm2.337.044c.006.03.021.207.032.393.009.186.035.605.059.93.083 1.192.086 1.343.035 1.343-.056 0-.062-.044-.127-.885a70.72 70.72 0 0 0-.097-1.219c-.027-.322-.044-.59-.035-.596.032-.035.118-.009.133.035zm-5.548.567c.018.027.13.971.269 2.261.041.39.083.764.091.835l.015.127-.074-.047a.153.153 0 0 1-.077-.145c0-.186-.127-1.411-.224-2.16-.056-.425-.1-.8-.1-.835 0-.062.071-.086.1-.035zm17.032 1.234l-.021 1.234-.074.109c-.168.248-.159.295-.151-1.086l.006-1.266.109-.112a.574.574 0 0 1 .13-.109c.009 0 .009.555 0 1.231zm-2.73 1.956c.015 1.715.012 1.848-.035 1.901-.03.032-.056.053-.065.044-.021-.024-.05-3.763-.027-3.784.012-.012.041-.018.068-.015.038.009.047.218.059 1.853zM8.5 17.998c.021.183.094 1.06.124 1.473.018.277.018.286-.047.307-.035.012-.077.009-.089-.006-.021-.021-.086-.676-.165-1.685l-.021-.242h.091c.086 0 .091.006.106.153zm-2.32 1.033c.021.021.035.094.035.168 0 .077.035.475.074.888.112 1.13.121 1.284.071 1.254-.077-.044-.145-.112-.13-.13a2.02 2.02 0 0 0-.03-.328c-.021-.171-.047-.449-.059-.62s-.038-.484-.062-.694c-.056-.516-.053-.576.012-.576.03 0 .068.015.089.035zm1.396 1.986c.009.065.027.307.038.537.021.443.012.475-.109.384-.035-.027-.059-.139-.094-.475-.062-.608-.065-.584.05-.573.086.009.097.021.115.127zM6.522 10.094c-.307.133-.331.549-.041.697.21.106.422.056.531-.127a.392.392 0 0 0-.49-.57zM8.523 10.377a.453.453 0 0 0 0 .767c.28.168.643-.053.643-.39 0-.325-.372-.543-.643-.378z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/denoland/deno/tree/1cc02a5d9d867f1a239ee4b69f587d8afac07b02/website/images\",hex:\"000000\"},Dependabot:{title:\"Dependabot\",slug:\"dependabot\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Dependabot icon</title><path d=\"M10.949.314a1.918 1.918 0 0 1 2.102 0l9.333 6.118c.541.354.866.957.866 1.604v7.928c0 .647-.326 1.25-.866 1.604l-9.333 6.118a1.918 1.918 0 0 1-2.102 0l-9.333-6.118a1.916 1.916 0 0 1-.866-1.604V8.036c0-.647.326-1.25.866-1.604L10.949.314zM12.75 7.5v.75h-6A.75.75 0 0 0 6 9v3h-.5a.25.25 0 0 0-.25.25v2.5c0 .138.112.25.25.25H6v1.5c0 .415.336.75.75.75h10.5a.75.75 0 0 0 .75-.75V15h.5a.25.25 0 0 0 .25-.25v-2.5a.25.25 0 0 0-.25-.25H18V9a.75.75 0 0 0-.75-.75H13.5V5.5a.25.25 0 0 0-.25-.25H11.5a.25.25 0 0 0-.25.25v1.75c0 .138.112.25.25.25h1.25zm3.286 5.089l-1.572 1.572a.303.303 0 0 1-.428 0l-.947-.947a.303.303 0 0 1 0-.428l.322-.322a.303.303 0 0 1 .428 0l.41.411 1.037-1.036a.303.303 0 0 1 .428 0l.322.322a.303.303 0 0 1 0 .428zM9.464 14.16v.001a.303.303 0 0 1-.428 0l-.948-.947a.302.302 0 0 1 0-.428l.323-.322a.303.303 0 0 1 .427 0l.412.411 1.036-1.037a.303.303 0 0 1 .427 0l.323.322a.303.303 0 0 1 0 .428L9.464 14.16z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://dependabot.com/dependabot-logo-symbol-square-mono.svg\",hex:\"025E8C\"},\"Designer News\":{title:\"Designer News\",slug:\"designernews\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Designer News icon</title><path d=\"M11.27 11.98c0-3.83-2.354-6.43-6.84-6.43H0v12.9h4.524c4.354 0 6.747-2.624 6.747-6.464v-.005zM8.056 12c0 2.766-1.42 3.963-3.7 3.963h-1.16V8.037h1.16c2.185 0 3.7 1.252 3.7 3.963zM24 18.45V5.55h-2.97v7.213L16.28 5.55h-3.105v12.9h2.973v-7.723l5.084 7.718H24v.004z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.designernews.co\",hex:\"2D72D9\"},DeviantArt:{title:\"DeviantArt\",slug:\"deviantart\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>DeviantArt icon</title><path d=\"M19.207 4.794l.23-.43V0H15.07l-.436.44-2.058 3.925-.646.436H4.58v5.993h4.04l.36.436-4.175 7.98-.24.43V24H8.93l.436-.44 2.07-3.925.644-.436h7.35v-5.993h-4.05l-.36-.438 4.186-7.977z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://help.deviantart.com/21\",hex:\"05CC47\"},devRant:{title:\"devRant\",slug:\"devrant\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>devRant icon</title><path d=\"M11.72 0C5.482-.015 1.592 4.046 1.701 10.322c-.074 3.907 1.437 7.002 4.127 8.734.663.405 1.364.737 2.137.995l2.174 3.353c.333.848.7.774.848-.11l.59-2.69h.442c2.469.073 4.57-.517 6.228-1.585 2.616-1.733 4.126-4.791 4.053-8.697C22.41 3.948 18.431-.144 12.019.004c-.1-.002-.2-.004-.299-.004zm4.571 4.636c.258 0 .516.092.7.276h.001c.185.185.295.442.295.737 0 .148 0 .295-.074.406l-3.722 9.25c-.258.441-.627.552-.885.552a1.007 1.007 0 0 1-.994-.995c0-.148.037-.258.073-.406l3.685-9.212c.073-.147.148-.258.221-.332a.989.989 0 0 1 .7-.276zM9.456 7.5c.313 0 .626.12.866.359h.001c.221.221.368.516.331.848 0 .332-.147.589-.368.848-.222.258-.517.369-.848.369-.332 0-.59-.148-.848-.37-.259-.22-.37-.515-.37-.847s.149-.627.37-.848c.24-.24.552-.36.866-.36zm0 4.974c.313 0 .626.12.866.36h.001c.221.258.368.553.331.848a1.2 1.2 0 0 1-.368.848c-.221.258-.516.368-.848.368a1.2 1.2 0 0 1-.848-.368c-.259-.222-.37-.516-.37-.848s.149-.627.37-.848c.24-.24.552-.36.866-.36z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://devrant.com\",hex:\"F99A66\"},\"dev.to\":{title:\"dev.to\",slug:\"dev-dot-to\",svg:'<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" role=\"img\"><title>dev.to icon</title><path d=\"M7.42 10.05c-.18-.16-.46-.23-.84-.23H6l.02 2.44.04 2.45.56-.02c.41 0 .63-.07.83-.26.24-.24.26-.36.26-2.2 0-1.91-.02-1.96-.29-2.18zM0 4.94v14.12h24V4.94H0zM8.56 15.3c-.44.58-1.06.77-2.53.77H4.71V8.53h1.4c1.67 0 2.16.18 2.6.9.27.43.29.6.32 2.57.05 2.23-.02 2.73-.47 3.3zm5.09-5.47h-2.47v1.77h1.52v1.28l-.72.04-.75.03v1.77l1.22.03 1.2.04v1.28h-1.6c-1.53 0-1.6-.01-1.87-.3l-.3-.28v-3.16c0-3.02.01-3.18.25-3.48.23-.31.25-.31 1.88-.31h1.64v1.3zm4.68 5.45c-.17.43-.64.79-1 .79-.18 0-.45-.15-.67-.39-.32-.32-.45-.63-.82-2.08l-.9-3.39-.45-1.67h.76c.4 0 .75.02.75.05 0 .06 1.16 4.54 1.26 4.83.04.15.32-.7.73-2.3l.66-2.52.74-.04c.4-.02.73 0 .73.04 0 .14-1.67 6.38-1.8 6.68z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://dev.to/\",hex:\"0A0A0A\"},Diaspora:{title:\"Diaspora\",slug:\"diaspora\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Diaspora icon</title><path d=\"M15.26 21.896l-2.332-3.256c-.622-.87-1.127-1.547-1.154-1.547s-1.006 1.314-2.316 3.113C8.21 21.92 7.178 23.32 7.163 23.32c-.033 0-4.498-3.144-4.51-3.177-.006-.016 1.005-1.498 2.242-3.293 1.24-1.795 2.254-3.29 2.254-3.326 0-.055-.408-.193-3.557-1.245L0 11.08c-.03-.018.156-.64.793-2.65.46-1.446.844-2.64.855-2.655.014-.016 1.71.524 3.772 1.205 2.063.68 3.765 1.234 3.788 1.234.022 0 .046-.03.053-.07.01-.03.03-1.786.04-3.9.02-2.1.04-3.84.05-3.87.02-.03.6-.03 2.73-.03 1.484 0 2.713.015 2.733.03.025.016.065 1.186.136 3.78.11 4.275.11 4.335.18 4.335.025 0 1.66-.54 3.63-1.22 1.973-.66 3.592-1.2 3.605-1.186.03.044 1.65 5.31 1.635 5.325-.017.016-1.667.585-3.66 1.26-2.76.93-3.647 1.245-3.647 1.29-.014.03.93 1.455 2.146 3.21 1.184 1.74 2.143 3.165 2.143 3.18-.015.046-4.44 3.302-4.483 3.302-.015 0-.585-.766-1.245-1.695l.005-.067z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://wiki.diasporafoundation.org/Branding\",hex:\"000000\"},Digg:{title:\"Digg\",slug:\"digg\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Digg icon</title><path d=\"M17.76 8.16v8.16h3.84v.96h-3.84v1.92H24V8.16h-6.24zm-7.2 0v8.16h3.84v.96h-3.84v1.92h6.24V8.16h-6.24zM3.84 4.8v3.36H0v8.16h6.24V4.8h-2.4zM9.6 8.16H7.2v8.16h2.4V8.16zm12 6.24h-1.44v-4.32h1.44v4.32zm-17.76 0H2.4v-4.32h1.44v4.32zm10.56 0h-1.44v-4.32h1.44v4.32zM9.6 4.8H7.2v2.4h2.4V4.8z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://en.wikipedia.org/wiki/Digg\",hex:\"000000\"},DigitalOcean:{title:\"DigitalOcean\",slug:\"digitalocean\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>DigitalOcean icon</title><path d=\"M.836 19.365H.832V16.38h2.985v2.985H7.38V14.73h4.635v4.62c4.927-.006 8.73-4.883 6.852-10.066-.698-1.92-2.23-3.45-4.15-4.146C9.527 3.255 4.647 7.068 4.647 12H0C0 4.144 7.59-1.976 15.824.595c3.6 1.125 6.456 3.982 7.58 7.58C25.974 16.41 19.858 24 12 24v-4.635H7.377v3.56h-3.56v-3.56H.833h.002z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.digitalocean.com/company/logos-and-badges/\",hex:\"0080FF\"},Directus:{title:\"Directus\",slug:\"directus\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Directus icon</title><path d=\"M19.187 13.909a1.74 1.74 0 0 1-.286-.092.657.657 0 0 1-.203-.139c.056-.488 0-.912.047-1.392.184-1.862 1.355-1.272 2.406-1.577.655-.184 1.31-.562 1.475-1.336a13.528 13.528 0 0 0-2.397-2.204c-2.85-2.028-6.574-2.84-9.958-2.277a5.113 5.113 0 0 0 2.238 2.074s-.917 0-1.703-.587c-.23.092-.692.274-.913.384a5.094 5.094 0 0 0 6.63.37c-.01.017-.185.285-.397 1.4-.47 2.38-1.826 2.195-3.504 1.596-3.485-1.264-5.403-.093-7.145-2.49-.507.286-.82.82-.82 1.402 0 .599.331 1.106.81 1.383.262-.348.38-.446.836-.446-.706.4-.79.75-1.094 1.718-.368 1.171-.212 2.37-1.936 2.683-.913.046-.894.664-1.226 1.586-.415 1.199-.968 1.678-2.047 2.812.443.535.904.6 1.374.406.968-.406 1.715-1.66 2.415-2.471.784-.904 2.665-.517 4.085-1.402.977-.599 1.457-1.41.811-2.784a2.72 2.72 0 0 1 .701 1.66c1.641-.213 3.836 1.788 5.836 2.12a3.574 3.574 0 0 1-.488-.82c-.23-.554-.304-1.06-.258-1.503.184 1.097 1.29 2.507 3.07 2.637.452.036.95-.019 1.466-.176.618-.184 1.19-.424 1.872-.295.507.093.977.35 1.272.784.443.645 1.41.784 1.844-.009-.977-2.554-3.67-2.72-4.813-3.015z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://directus.io/resources.html\",hex:\"263238\"},Discord:{title:\"Discord\",slug:\"discord\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Discord icon</title><path d=\"M20.222 0c1.406 0 2.54 1.137 2.607 2.475V24l-2.677-2.273-1.47-1.338-1.604-1.398.67 2.205H3.71c-1.402 0-2.54-1.065-2.54-2.476V2.48C1.17 1.142 2.31.003 3.715.003h16.5L20.222 0zm-6.118 5.683h-.03l-.202.2c2.073.6 3.076 1.537 3.076 1.537-1.336-.668-2.54-1.002-3.744-1.137-.87-.135-1.74-.064-2.475 0h-.2c-.47 0-1.47.2-2.81.735-.467.203-.735.336-.735.336s1.002-1.002 3.21-1.537l-.135-.135s-1.672-.064-3.477 1.27c0 0-1.805 3.144-1.805 7.02 0 0 1 1.74 3.743 1.806 0 0 .4-.533.805-1.002-1.54-.468-2.14-1.404-2.14-1.404s.134.066.335.2h.06c.03 0 .044.015.06.03v.006c.016.016.03.03.06.03.33.136.66.27.93.4.466.202 1.065.403 1.8.536.93.135 1.996.2 3.21 0 .6-.135 1.2-.267 1.8-.535.39-.2.87-.4 1.397-.737 0 0-.6.936-2.205 1.404.33.466.795 1 .795 1 2.744-.06 3.81-1.8 3.87-1.726 0-3.87-1.815-7.02-1.815-7.02-1.635-1.214-3.165-1.26-3.435-1.26l.056-.02zm.168 4.413c.703 0 1.27.6 1.27 1.335 0 .74-.57 1.34-1.27 1.34-.7 0-1.27-.6-1.27-1.334.002-.74.573-1.338 1.27-1.338zm-4.543 0c.7 0 1.266.6 1.266 1.335 0 .74-.57 1.34-1.27 1.34-.7 0-1.27-.6-1.27-1.334 0-.74.57-1.338 1.27-1.338z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://discordapp.com/branding\",hex:\"7289DA\"},Discourse:{title:\"Discourse\",slug:\"discourse\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Discourse icon</title><path d=\"M12.103 0C18.666 0 24 5.485 24 11.997c0 6.51-5.33 11.99-11.9 11.99L0 24V11.79C0 5.28 5.532 0 12.103 0zm.116 4.563c-2.593-.003-4.996 1.352-6.337 3.57-1.33 2.208-1.387 4.957-.148 7.22L4.4 19.61l4.794-1.074c2.745 1.225 5.965.676 8.136-1.39 2.17-2.054 2.86-5.228 1.737-7.997-1.135-2.778-3.84-4.59-6.84-4.585h-.008z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.discourse.org/\",hex:\"000000\"},Discover:{title:\"Discover\",slug:\"discover\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Discover icon</title><path d=\"M12 0A12 12 0 1 0 12 24A12 12 0 1 0 12 0Z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.discovernetwork.com/en-us/business-resources/free-signage-logos\",hex:\"FF6000\"},Disroot:{title:\"Disroot\",slug:\"disroot\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Disroot icon</title><path d=\"M18.824 6.655q.092.128 0 .255-.093.032-.154 0l-.154-.223-.369-.095q-.092-.096 0-.255.092-.128.246-.096.277.16.43.415zm4.49 4.336q.031.095.031.159l-.154.223v-.35q.062-.032.123-.032zm-5.382-4.75l.153.255q-.123.223-.246.287l-.092.127q-.061-.159-.092-.318-.031 0-.062-.032l-.123.127-.553-.127q-.123-.16.061-.35.185-.192.43-.096l.524.127zm-1.138.67l-.154-.096.123-.064.03.16zm-2.461-1.626l-.184.223-.185-.223-.154-.032.492-.096.031.128zm3.814 12.208zm5.782-7.427q.123.096.031.478l-.184.542-.154.191-.031-.382q0-.128-.03-.223 0-.096-.032-.191l-.4.19q.031.065.031.16.031.096.062.128l-.43.032.03.127.092.096-.153.35q-.031.287-.154.32l-.123-.192-.37.095q-.122-.127-.122-.223l-.093-.127.154-.191q-.061-.128-.123-.128l-.154.064-.153.382q-.216 0-.277.064l.184.255.646.35.031.224q.123.032.185.095.092.064.123.096-.031.064-.062.16-.03.063-.123.127l-.277.191.031.255q-.246.096-.43.319l-.093.35q-.338 0-.43.064l.03.479-.092-.032q-.123-.192-.246-.096l.123.414q-.092 0-.154.032l-.061.064.123.223q.03.128.03.192-.184.159-.369.19-.153.033-.246.224l.031.382q-.092.224-.154.287-.307 0-.461.064l-.185.35-.153-.063q-.124-.032-.185 0l-.123.255q-.277 0-.4.127l-.246.224.062-.287q.092-.255-.093-.287l-.123.095-.03.16-.308.191-.03.35h-.585l-.123.224q-.062.191-.308.287-.246.095-.861.095t-.769.064q-.154 0-.277.16-.092.159-.215.223l-.492.159-.154.287-.215.16q-.154.095-.492.095l-.308.16-.461.19-.339-.031q-.184-.096-.43-.096h-.554l-.185-.128-.369.064-.184.255-.277-.191-.215-.223-.492-.032-.185-.16.277-.35.369-.51v-.35l.43-.479v-.542q0-.255.093-.446l.338.096q.123-.128.123-.192-.184-.159-.338-.414l-.308-.446-.369-.478-.246-.447-.277-.446-.215-.542-.461-.51-1.692-2.486-.308-.542-.307-.606-.246-.159q-.277-.35-.462-.765l-.092-.383-.277-.127-.953.191q-.339 0-.738.128l-.646.255-.77.095-.43.16q-.277.064-.43-.064L1.23 8.6l-.338.128-.277-.096q0-.319-.061-.383l-.277-.382Q.092 7.739 0 7.707l.03-.159h.308q-.03-.095-.03-.223v-.16l.307.128q.154-.095.185-.16l.123-.254.246.032.184-.542-.03-.287.154.095.153.16q.154-.064.185-.128l.277-.35.276.032-.092-.223-.184-.224-.277-.095q.184-.287.8-.415l.984-.095.338-.223.8-.16 1.23-.064.43-.095q.247-.096.493-.032l.492-.032q.492-.127.707-.064l.4.032.554.032.83.16.738.063.523-.223q.185 0 .4.255l.308.223h.646l.215.255-.03.16.184.51.123-.064.277-.319.307.478-.369-.127q-.215 0-.246.318l.308.064.123.16.184-.064q.154-.064.308.064.184.095.246.223l.184.255h.4q0-.096.03-.128.032-.064.062-.095l.062.318h.123l.092-.095.093.16.092-.256q.4 0 .461-.064 0-.095-.061-.159l-.123-.16q0-.159.246-.127l.43.128.308-.032.184.16.062.127q-.277-.064-.37.032-.06.063-.03.223l.215.19q0 .224.216.479l.123-.127.03-.255.124.159h.522q.154 0 .246.35l.093.32.123.095.154-.16.492.16.092-.16.154-.063q.123-.096.154-.16v-.159l-.062-.16.43.128q.124-.127.154-.191-.061-.16-.123-.16l-.307-.063v-.16l.092-.223.092-.191q.154.095.185.16l.154.222.215-.031.215-.032.77.669.215-.032.215.287.185.096q-.093.127 0 .286l.215-.095h.215l.185.319.184.318q.246 0 .37.064l.122.574.339.191.276.096q0 .16-.061.255l.061.319.093.19-.031.224.123-.064q.123-.16.185-.191l.123-.064zM16.18 5.35q.092.095 0 .286-.031.064-.185.096-.092-.096 0-.287.03-.064.185-.095zm6.305 5.928q.092.096 0 .255l-.154.064-.03-.223q0-.095.03-.127.062-.032.154.032zm-1.292-1.561q.061.063.061.318-.123.064-.246.032-.153-.095-.061-.287.061-.16.246-.063zm-8.704-4.24l-.185.35.092-.254.093-.096zm4.244 12.304l-.123-.191.123-.096q.154.032.123.223l-.123.064zm5.137-4.75q-.185-.127-.246-.254l.184.127.062.128zM9.566 18.705l.153-.159.154-.096-.307.255zM22.79 10.45l-.092.19-.03.097-.031-.224.153-.063zm.154 1.562l-.061.286.061-.286zm-2.184-3.507l.093.128-.123.032-.123-.096.153-.064zm-5.505 7.491l-.123.096.123-.096zM14.61 5.253l-.03.16.03-.16zm6.551 3.538l-.061.16.061-.16zm-.123 5.196l.062.095-.093.064.031-.16zm-5.905-8.543l-.062.096.062-.096zm1.66 11.635l-.06.127.06-.127zm-6.92-6.822l-.123.128.123-.128zm-.184 9.149l-.031.16.03-.16zm9.32-12.464l.06.096-.153-.064.092-.032zm-5.014 8.67l-.031.128.03-.127zm7.105-6.47l-.031.127.03-.127zm-.216 1.498l-.061.096.061-.096zm.4 3.952l-.092.064.092-.064zM1.692 6.624l-.031.159.03-.16zm20.607 5.323l-.123.064.123-.064zm-.4-.223l-.184.032.184-.032zm-6.49 6.821l-.03.096.03-.096zm6.214-6.152v-.16.16zm1.507-2.136q-.031.064-.031.128 0-.096.03-.128zm-1.23 3.411zM1.506 6.018l-.03.127.03-.127zm17.84 11.507zm-.339-8.734l-.123.032.123-.032zm-.492-1.912l-.061.095.061-.095zM10.92 5.062l-.092.032.092-.032zm3.076 1.275l-.031.127.03-.127zm-.43-.032l-.062.064.061-.064zM9.595 19.183l-.03.127.03-.127zm11.442-8.67zm0 0zm0 0zm0 0zm0 0zm0 0zm0 0zm0 0zm-5.352 5.323zm7.013-3.539zm-2-1.083l-.06-.064.06.064zm-8.55 2.9zm9.843-1.275zm-9.228-7.012zm-.707.191zm0-.287zm3.968.478zm-2.891-.095l-.062-.064.062.064zm6.49 3.283zm2.89 0zm-4.92 7.81zm4.92-6.918zm-10.98 9.563zm1.507-14.854zm-.184 0zm7.843 3.92zm2.307 1.244q0-.255-.093-.415-.061-.159-.215-.286l-.03.414.215.096q.03.095 0 .159l.123.032zm-2.4-.765l-.06-.064.06.064zm1.23 1.434l-.153-.032-.184-.287.061-.255-.277.192.154.19.03.097-.368.159.246.032q.061.064.123.095.092.032.123.032l.246-.223zm-.614-.574l-.123-.095-.216-.064-.092-.16-.123.128-.092.223.246.096q.184 0 .277.095l.123-.223zM15.84 6.783l-.123-.064-.184-.095q-.123 0-.123.063l.03.192.216.127.184-.223zm3.691 6.79l.062-.383q0-.51-.37-1.084-.307-.574-.8-.924-.4-.383-1.106-.67l-1.23-.541-.462-.287-.677-.255-.707-.223-1.138-.255-.37-.064q-.276 0-.43.064-.123.031-.092.223l.369.733q.277.51.523.701l.277.191v.192l.307.382.03.255q.124.096.185.096.154.095.4.478l.339.414.522.765.462.829.215.637-.061.415.123.191-.123.191q-.093.096 0 .192l.215-.064.369-.16q.154 0 .523-.19l.677-.32.953-.382q.584-.255.83-.51l.123-.319q0-.223.062-.319z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://git.fosscommunity.in/disroot/assests/blob/master/d.svg\",hex:\"50162D\"},Disqus:{title:\"Disqus\",slug:\"disqus\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Disqus icon</title><path d=\"M12.438 23.654c-2.853 0-5.46-1.04-7.476-2.766L0 21.568l1.917-4.733C1.25 15.36.875 13.725.875 12 .875 5.564 6.05.346 12.44.346 18.82.346 24 5.564 24 12c0 6.438-5.176 11.654-11.562 11.654zm6.315-11.687v-.033c0-3.363-2.373-5.76-6.462-5.76H7.877V17.83h4.35c4.12 0 6.525-2.5 6.525-5.863h.004zm-6.415 2.998h-1.29V9.04h1.29c1.897 0 3.157 1.08 3.157 2.945v.03c0 1.884-1.26 2.95-3.157 2.95z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://disqus.com/brand\",hex:\"2E9FFF\"},Django:{title:\"Django\",slug:\"django\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Django icon</title><path d=\"M11.146 0h3.924v18.165c-2.013.382-3.491.535-5.096.535-4.791 0-7.288-2.166-7.288-6.32 0-4.001 2.65-6.6 6.753-6.6.637 0 1.121.051 1.707.204V0zm0 9.143a3.894 3.894 0 0 0-1.325-.204c-1.988 0-3.134 1.223-3.134 3.364 0 2.09 1.096 3.236 3.109 3.236.433 0 .79-.025 1.35-.102V9.142zM21.314 6.06v9.097c0 3.134-.229 4.638-.917 5.937-.637 1.249-1.478 2.039-3.211 2.905l-3.644-1.733c1.733-.815 2.574-1.529 3.109-2.625.561-1.121.739-2.421.739-5.835V6.059h3.924zM17.39.021h3.924v4.026H17.39V.021z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.djangoproject.com/community/logos/\",hex:\"092E20\"},DLNA:{title:\"DLNA\",slug:\"dlna\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>DLNA icon</title><path d=\"M23.254,12.667H13.019c-1.051,0-2.1,0.489-2.692,1.266v-0.017c-0.591,0.816-1.544,1.353-2.629,1.353 c-1.796,0-3.249-1.458-3.249-3.251c0-1.795,1.454-3.251,3.249-3.251c1.085,0,2.039,0.536,2.629,1.353v-0.013 c0.592,0.776,1.641,1.273,2.692,1.273h10.129c0.186-0.005,0.873-0.095,0.848-0.981c-0.884-5.086-5.879-8.987-11.923-8.987 c-3.721,0-7.047,1.48-9.262,3.803c-0.356,0.527,0.014,0.689,0.35,0.734h6.608c1.05,0,2.1-0.498,2.691-1.277V4.69 c0.591-0.817,1.546-1.355,2.63-1.355c1.795,0,3.249,1.456,3.249,3.251c0,1.793-1.454,3.252-3.249,3.252 c-1.084,0-2.039-0.537-2.63-1.355v0.019c-0.591-0.779-1.641-1.266-2.691-1.266h-7.22l0.028,0.003c0,0-1.068-0.06-1.719,0.859 C0.361,8.9,0,10.621,0,12.002c0,1.388,0.198,2.649,0.867,3.923c0.564,0.908,1.71,0.849,1.71,0.849L2.535,16.78h7.233 c1.05,0,2.1-0.49,2.691-1.268v0.019c0.591-0.817,1.546-1.355,2.63-1.355c1.795,0,3.249,1.458,3.249,3.251 c0,1.795-1.454,3.251-3.249,3.251c-1.084,0-2.039-0.537-2.63-1.354v0.018c-0.591-0.779-1.641-1.277-2.691-1.277H3.164 c-0.328,0.042-0.698,0.198-0.379,0.699c2.216,2.337,5.555,3.824,9.288,3.824c6.054,0,11.056-3.911,11.926-9.009 C23.995,12.866,23.51,12.702,23.254,12.667\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://upload.wikimedia.org/wikipedia/de/e/eb/Digital_Living_Network_Alliance_logo.svg\",hex:\"48A842\"},Docker:{title:\"Docker\",slug:\"docker\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Docker icon</title><path d=\"M4.82 17.275c-.684 0-1.304-.56-1.304-1.24s.56-1.243 1.305-1.243c.748 0 1.31.56 1.31 1.242s-.622 1.24-1.305 1.24zm16.012-6.763c-.135-.992-.75-1.8-1.56-2.42l-.315-.25-.254.31c-.494.56-.69 1.553-.63 2.295.06.562.24 1.12.554 1.554-.254.13-.568.25-.81.377-.57.187-1.124.25-1.68.25H.097l-.06.37c-.12 1.182.06 2.42.562 3.54l.244.435v.06c1.5 2.483 4.17 3.6 7.078 3.6 5.594 0 10.182-2.42 12.357-7.633 1.425.062 2.864-.31 3.54-1.676l.18-.31-.3-.187c-.81-.494-1.92-.56-2.85-.31l-.018.002zm-8.008-.992h-2.428v2.42h2.43V9.518l-.002.003zm0-3.043h-2.428v2.42h2.43V6.48l-.002-.003zm0-3.104h-2.428v2.42h2.43v-2.42h-.002zm2.97 6.147H13.38v2.42h2.42V9.518l-.007.003zm-8.998 0H4.383v2.42h2.422V9.518l-.01.003zm3.03 0h-2.4v2.42H9.84V9.518l-.015.003zm-6.03 0H1.4v2.42h2.428V9.518l-.03.003zm6.03-3.043h-2.4v2.42H9.84V6.48l-.015-.003zm-3.045 0H4.387v2.42H6.8V6.48l-.016-.003z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.docker.com\",hex:\"1488C6\"},DocuSign:{title:\"DocuSign\",slug:\"docusign\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>DocuSign icon</title><path d=\"M9.517 3.31h4.966v6.621h3.31L12 16.552 6.207 9.931h3.31V3.31zM0 19.034h24v1.655H0v-1.655z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/simple-icons/simple-icons/issues/1098\",hex:\"FFCC22\"},Dolby:{title:\"Dolby\",slug:\"dolby\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Dolby icon</title><path d=\"M24,20.352V3.648H0v16.704H24z M18.433,5.806h2.736v12.387h-2.736c-2.839,0-5.214-2.767-5.214-6.194S15.594,5.806,18.433,5.806z M2.831,5.806h2.736c2.839,0,5.214,2.767,5.214,6.194s-2.374,6.194-5.214,6.194H2.831V5.806z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.dolby.com/us/en/about/brand-identity.html\",hex:\"000000\"},\"Draugiem.lv\":{title:\"Draugiem.lv\",slug:\"draugiem-dot-lv\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Draugiem.lv icon</title><path d=\"M8.154 15.096c.048.346.14.562.278.693.144.13.34.18.596.21.304-.03.51-.1.65-.3.083-.13.14-.33.166-.61l.098-1.16v-.02l-.02-.18-.03-.17-.03-.175-.032-.165-.03-.174-.03-.165-.03-.164-.03-.17-.028-.16-.03-.15-.03-.15v-.138l-.03-.136-.03-.133-.015-.126-.03-.116-.03-.1-.03-.17L9.41 11l-.045-.18-.045-.18-.013-.197-.052-.203-.045-.21-.053-.21-.03-.21-.043-.215-.03-.213-.017-.242-.015-.21-.01-.228V8.1l.02-.21.035-.21.046-.21.06-.2.09-.194.106-.186.04-.074c-.2-.046-.44-.076-.69-.076-.11 0-.2 0-.3.016-2.33.2-1.38 2.836-.98 4.283.28 1 .6 3.34.72 4.06l-.02-.02zm.28-8.664c.09.03.178.045.283.045.48 0 .79-.255.96-.645.112-.27.162-.602.153-.945-.014-.3-.074-.572-.164-.81-.195-.467-.54-.782-1.066-.782-.074 0-.135 0-.18.016-.675.11-.976.78-.945 1.61.015.78.314 1.43.93 1.58l.028-.06zm1.244 3.843c.084.36.168.69.237.975.285 1.156.562 3.843.665 4.668.098.826.39.99.97 1.05.576-.044.867-.224.965-1.034.097-.81.38-3.498.657-4.653.068-.28.16-.61.24-.96.258-1.05.466-2.29 0-3.1-.296-.51-.865-.84-1.86-.84-1.007 0-1.583.33-1.872.86-.465.81-.256 2.06 0 3.11l-.002-.06zm1.858-4.28h.015c.9 0 1.33-.823 1.33-1.83s-.42-1.846-1.32-1.846h-.01c-.91 0-1.33.84-1.33 1.86s.42 1.84 1.337 1.84v-.03zm2.827.752c-.27 0-.51.03-.705.075l.045.075.105.194.075.2.06.21.045.21.03.21.015.23v.44l-.015.23v.167l-.03.217-.03.213-.044.213-.046.21-.044.21-.045.206-.05.2-.05.197-.06.195-.05.18-.03.18-.05.168-.018.09-.03.12-.03.137-.026.134-.015.132-.03.12v.03l-.03.15-.03.15-.02.163-.03.168-.02.165-.03.165-.02.18-.013.165-.014.18-.014.18-.017.18V14c.045.496.075.93.09 1.17.03.287.075.48.166.616.14.2.35.27.66.3.26-.03.45-.07.6-.22.15-.12.23-.343.29-.69.12-.703.44-3.05.71-4.053.4-1.45 1.35-4.083-.98-4.284-.105-.014-.195-.014-.3-.014l.012-.05zm.016-.27c.09 0 .18-.014.27-.03.6-.15.9-.794.93-1.56.03-.81-.27-1.5-.95-1.592-.06-.016-.12-.016-.18-.016-.54 0-.89.33-1.07.79-.09.24-.15.52-.15.82-.02.36.03.69.15.96.16.4.48.66.96.66l.03-.05zm2.79 1.2c4.29.062 6.8 2.702 3.96 6.305-1.32 1.667-3.53 3.317-6.49 4.368l-.42.15c-.29.09-.56.18-.83.256-.65.18-1.26.345-1.86.465-.65.14-1.28.23-1.88.3-.44.05-.86.08-1.25.08-2.747.08-4.818-.67-5.49-2.28-.81-1.92.823-4.59 4.11-6.63-2.43.97-6.84 3.29-7.036 6.57v.42c.016.35.074.68.195 1.04.707 2.22 4.01 3.27 8.21 2.9.407-.03.827-.073 1.25-.14.605-.082 1.23-.21 1.86-.36.605-.13 1.23-.31 1.865-.51l.42-.13c.285-.09.557-.18.826-.285 3.646-1.32 6.35-3.075 7.926-5.102.9-1.152 1.365-2.232 1.455-3.18v-.733c-.26-2.413-3.06-3.824-6.877-3.435l.044-.045z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.frype.com/applications/dev/docs/logos/\",hex:\"FF6600\"},Dribbble:{title:\"Dribbble\",slug:\"dribbble\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Dribbble icon</title><path d=\"M12 24C5.385 24 0 18.615 0 12S5.385 0 12 0s12 5.385 12 12-5.385 12-12 12zm10.12-10.358c-.35-.11-3.17-.953-6.384-.438 1.34 3.684 1.887 6.684 1.992 7.308 2.3-1.555 3.936-4.02 4.395-6.87zm-6.115 7.808c-.153-.9-.75-4.032-2.19-7.77l-.066.02c-5.79 2.015-7.86 6.025-8.04 6.4 1.73 1.358 3.92 2.166 6.29 2.166 1.42 0 2.77-.29 4-.814zm-11.62-2.58c.232-.4 3.045-5.055 8.332-6.765.135-.045.27-.084.405-.12-.26-.585-.54-1.167-.832-1.74C7.17 11.775 2.206 11.71 1.756 11.7l-.004.312c0 2.633.998 5.037 2.634 6.855zm-2.42-8.955c.46.008 4.683.026 9.477-1.248-1.698-3.018-3.53-5.558-3.8-5.928-2.868 1.35-5.01 3.99-5.676 7.17zM9.6 2.052c.282.38 2.145 2.914 3.822 6 3.645-1.365 5.19-3.44 5.373-3.702-1.81-1.61-4.19-2.586-6.795-2.586-.825 0-1.63.1-2.4.285zm10.335 3.483c-.218.29-1.935 2.493-5.724 4.04.24.49.47.985.68 1.486.08.18.15.36.22.53 3.41-.43 6.8.26 7.14.33-.02-2.42-.88-4.64-2.31-6.38z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://dribbble.com/branding\",hex:\"EA4C89\"},Drone:{title:\"Drone\",slug:\"drone\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Drone icon</title><path d=\"M15.07 13.633a3.07 3.07 0 1 1-6.14 0 3.07 3.07 0 0 1 6.14 0zM12 1.856c5.359.042 11.452 3.82 12 10.94h-7.256S15.809 8.863 12 8.889s-4.744 3.907-4.744 3.907H0C.353 5.802 6.344 1.812 12 1.856zM12.05 22.144c-3.996.011-7.729-3.005-9.259-7.674h4.465s.963 3.889 4.773 3.863 4.716-3.863 4.716-3.863h4.465c-.995 4.94-5.164 7.664-9.159 7.674z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/drone/brand\",hex:\"212121\"},Dropbox:{title:\"Dropbox\",slug:\"dropbox\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Dropbox icon</title><path d=\"M6 1.807L0 5.629l6 3.822 6.001-3.822L6 1.807zM18 1.807l-6 3.822 6 3.822 6-3.822-6-3.822zM0 13.274l6 3.822 6.001-3.822L6 9.452l-6 3.822zM18 9.452l-6 3.822 6 3.822 6-3.822-6-3.822zM6 18.371l6.001 3.822 6-3.822-6-3.822L6 18.371z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.dropbox.com/branding\",hex:\"0061FF\"},Drupal:{title:\"Drupal\",slug:\"drupal\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Drupal icon</title><path d=\"M20.45 3.552C18.258 1.257 15.233.006 12 .006 5.431.006.007 5.428.007 12S5.43 23.994 12 23.994 23.995 18.572 23.995 12c0-3.233-1.251-6.258-3.546-8.448zM12 19.822c-3.65 0-6.57-2.92-6.57-6.57 0-3.025 2.085-5.111 3.858-6.884 1.252-1.252 2.4-2.4 2.712-3.755.313 1.252 1.46 2.399 2.712 3.65 1.773 1.774 3.859 3.86 3.859 6.884 0 3.65-2.92 6.571-6.571 6.675z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.drupal.org/drupalorg/style-guide/colors\",hex:\"0678BE\"},DTube:{title:\"DTube\",slug:\"dtube\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>DTube icon</title><path d=\"M22.6 5.5a9.91 9.91 0 0 0-3.88-4.04A11.18 11.18 0 0 0 13.08.04H.18l6.91 4h5.99c1.94 0 3.41.62 4.42 1.88C18.5 7.17 19 9 19 11.43v1.27c-.01 2.34-.53 4.14-1.55 5.4-1.02 1.26-2.5 1.89-4.42 1.89H6.86L0 23.95h13.13c2.09 0 3.97-.49 5.63-1.44 1.66-.95 2.95-2.3 3.87-4.02S24 14.79 24 12.56v-1.1c0-2.22-.47-4.2-1.4-5.96zM.13 3.96v16.1L14.07 12z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://about.d.tube/mediakit.html\",hex:\"FF0000\"},DuckDuckGo:{title:\"DuckDuckGo\",slug:\"duckduckgo\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>DuckDuckGo icon</title><path d=\"M12 0C5.373 0 0 5.373 0 12s5.373 12 12 12 12-5.373 12-12S18.627 0 12 0zm0 23C5.925 23 1 18.074 1 12S5.926 1 12 1s11 4.925 11 11-4.925 11-11 11zm10.219-11c0 4.805-3.317 8.833-7.786 9.925-.27-.521-.53-1.017-.749-1.438.645.249 1.93.718 2.208.615.376-.144.282-3.149-.14-3.245-.338-.075-1.632.837-2.141 1.209l.034.156c.078.397.144.993.03 1.247-.001.004-.002.01-.004.013a.218.218 0 0 1-.068.088c-.284.188-1.081.284-1.503.188a.516.516 0 0 1-.064-.02c-.694.396-2.01 1.109-2.25.971-.329-.188-.377-2.676-.329-3.288.035-.46 1.653.286 2.442.679.174-.163.602-.272.98-.31-.57-1.389-.99-2.977-.733-4.105 0 .002.002.002.002.002.356.248 2.73 1.05 3.91 1.027 1.18-.024 3.114-.743 2.903-1.323-.212-.58-2.135.51-4.142.324-1.486-.138-1.748-.804-1.42-1.29.414-.611 1.168.116 2.411-.256 1.245-.371 2.987-1.035 3.632-1.397 1.494-.833-.625-1.177-1.125-.947-.474.22-2.123.637-2.889.82.428-1.516-.603-4.149-1.757-5.3-.376-.376-.951-.612-1.603-.736-.25-.344-.654-.671-1.225-.977a5.772 5.772 0 0 0-3.595-.584l-.024.004-.034.004.004.002c-.148.028-.237.08-.357.098.148.016.705.276 1.057.418-.174.068-.412.108-.596.184a.828.828 0 0 0-.204.056c-.173.08-.303.375-.3.515.84-.086 2.082-.026 2.991.246-.644.09-1.235.258-1.661.482-.016.008-.03.018-.048.028-.054.02-.106.042-.152.066-1.367.72-1.971 2.405-1.611 4.424.323 1.824 1.665 8.088 2.29 11.064-3.973-1.4-6.822-5.186-6.822-9.639C1.781 6.356 6.356 1.781 12 1.781S22.219 6.356 22.219 12zM9.095 9.581a.758.758 0 1 0 0 1.516.758.758 0 0 0 0-1.516zm.338.702a.196.196 0 1 1 0-.392.196.196 0 0 1 0 .392zm4.724-1.043a.65.65 0 1 0 0 1.299.65.65 0 0 0 0-1.3zm.29.601a.168.168 0 1 1 0-.336.168.168 0 0 1 0 .336zM9.313 8.146s-.571-.26-1.125.09c-.554.348-.534.704-.534.704s-.294-.656.49-.978c.786-.32 1.17.184 1.17.184zm5.236-.052s-.41-.234-.73-.23c-.654.008-.831.296-.831.296s.11-.688.945-.55a.84.84 0 0 1 .616.484z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://duckduckgo.com/\",hex:\"DE5833\"},Dunked:{title:\"Dunked\",slug:\"dunked\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Dunked icon</title><path d=\"M13.791 0V19.766a4.18 4.18 0 004.182 4.12h4.18V4.122A4.18 4.18 0 0017.972 0H13.79zM6.326 14.93a4.479 4.479 0 00-4.478 4.37v.221a4.479 4.479 0 008.957 0v-.214a4.479 4.479 0 00-4.479-4.377Z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://dunked.com/\",hex:\"2DA9D7\"},Duolingo:{title:\"Duolingo\",slug:\"duolingo\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Duolingo icon</title><path d=\"M7.2 2.869a2.458 2.458 0 00-2.45 2.455v3.117l-3.672-.913h-.002a.864.864 0 00-.242-.026.864.864 0 00-.832.919 6.573 6.573 0 004.886 5.87A7.286 7.286 0 0012 20.18a7.286 7.286 0 007.106-5.888 6.573 6.573 0 004.892-5.871.864.864 0 00-.831-.92.864.864 0 00-.245.027l-3.673.913V5.324a2.458 2.458 0 00-2.45-2.455 2.845 2.845 0 00-.96.192c-1.87.797-3.114 1.188-3.831 1.2-.717-.012-1.962-.403-3.832-1.2a2.845 2.845 0 00-.975-.192zm8.135 1.408a.19.19 0 01.036 0c.065.008.127.05.176.127a1.95 1.95 0 01.07.143 1.95 1.95 0 01.037.088 1.95 1.95 0 01.035.092 1.95 1.95 0 01.029.094 1.95 1.95 0 01.025.093 1.95 1.95 0 01.019.096 1.95 1.95 0 01.015.097 1.95 1.95 0 01.01.093 1.95 1.95 0 01.005.102 1.95 1.95 0 010 .157 2.723 2.723 0 01.007 0l.473-.526a.248.248 0 01.01-.01.248.248 0 01.01-.009.248.248 0 01.012-.01.248.248 0 01.007-.006.248.248 0 01.012-.008.248.248 0 01.009-.006.248.248 0 01.011-.006.248.248 0 01.01-.005.248.248 0 01.011-.005.248.248 0 01.013-.005.248.248 0 01.01-.003.248.248 0 01.013-.004.248.248 0 01.013-.003.248.248 0 01.011-.002.248.248 0 01.016-.002.248.248 0 01.007 0 .248.248 0 01.02 0 .248.248 0 01.005 0 .248.248 0 01.017.002.248.248 0 01.01 0 .248.248 0 01.011.003.248.248 0 01.013.003.248.248 0 01.013.004.248.248 0 01.01.003.248.248 0 01.011.005.248.248 0 01.013.006.248.248 0 01.001 0 .248.248 0 01.004.002.248.248 0 01.016.01.248.248 0 01.008.004.248.248 0 01.012.008.248.248 0 01.01.01.248.248 0 01.007.005.248.248 0 01.011.011.248.248 0 01.007.008.248.248 0 01.006.007.248.248 0 01.01.014.248.248 0 01.003.005.248.248 0 01.01.017 1.95 1.95 0 01.06.121 1.95 1.95 0 01.04.088 1.95 1.95 0 01.035.094 1.95 1.95 0 01.03.088 1.95 1.95 0 01.025.097 1.95 1.95 0 01.021.094 1.95 1.95 0 01.016.098 1.95 1.95 0 01.016.132 2.723 2.723 0 01.192.119 2.723 2.723 0 01.11.079 2.723 2.723 0 01.11.083 2.723 2.723 0 01.1.088 2.723 2.723 0 01.101.095 2.723 2.723 0 01.092.098 2.723 2.723 0 01.09.103 2.723 2.723 0 01.082.108 2.723 2.723 0 01.08.112 2.723 2.723 0 01.07.114 2.723 2.723 0 01.068.12 2.723 2.723 0 01.059.122 2.723 2.723 0 01.054.123 2.723 2.723 0 01.048.131 2.723 2.723 0 01.042.126 2.723 2.723 0 01.034.135 2.723 2.723 0 01.03.13 2.723 2.723 0 01.02.135 2.723 2.723 0 01.016.136 2.723 2.723 0 01.011.225v1.758a2.715 2.715 0 01-.011.237 2.715 2.715 0 01-.017.132 2.715 2.715 0 01-.02.135 2.715 2.715 0 01-.03.136 2.715 2.715 0 01-.033.127 2.715 2.715 0 01-.044.134 2.715 2.715 0 01-.045.123 2.715 2.715 0 01-.057.126 2.715 2.715 0 01-.058.12 2.715 2.715 0 01-.068.118 2.715 2.715 0 01-.07.116 2.715 2.715 0 01-.078.109 2.715 2.715 0 01-.084.11 2.715 2.715 0 01-.09.102 2.715 2.715 0 01-.09.097 2.715 2.715 0 01-.104.096 2.715 2.715 0 01-.098.087 2.715 2.715 0 01-.107.081 2.715 2.715 0 01-.113.081 2.715 2.715 0 01-.113.07 2.715 2.715 0 01-.12.068 2.715 2.715 0 01-.119.057 2.715 2.715 0 01-.127.058 2.715 2.715 0 01-.123.045 2.715 2.715 0 01-.133.044 2.715 2.715 0 01-.132.033 2.715 2.715 0 01-.13.03 2.715 2.715 0 01-.14.02 2.715 2.715 0 01-.129.017 2.715 2.715 0 01-.237.011h-.21a2.714 2.714 0 01-.244-.012 2.714 2.714 0 01-.134-.017 2.714 2.714 0 01-.133-.02 2.714 2.714 0 01-.136-.032 2.714 2.714 0 01-.127-.032 2.714 2.714 0 01-.131-.045 2.714 2.714 0 01-.126-.046 2.714 2.714 0 01-.124-.056 2.714 2.714 0 01-.121-.059 2.714 2.714 0 01-.118-.068 2.714 2.714 0 01-.116-.071 2.714 2.714 0 01-.107-.079 2.714 2.714 0 01-.11-.083 2.714 2.714 0 01-.102-.09 2.714 2.714 0 01-.098-.092 2.714 2.714 0 01-.094-.102 2.714 2.714 0 01-.088-.1 2.714 2.714 0 01-.081-.109 2.714 2.714 0 01-.08-.11 2.714 2.714 0 01-.068-.115 2.714 2.714 0 01-.028-.048v.98a1.032 1.032 0 01-.004.073 1.032 1.032 0 01-.004.05 1.032 1.032 0 01-.008.054 1.032 1.032 0 010 .002 1.032 1.032 0 01-.009.042 1.032 1.032 0 01-.016.063 1.032 1.032 0 01-.01.034 1.032 1.032 0 01-.024.065 1.032 1.032 0 01-.012.031 1.032 1.032 0 01-.033.067 1.032 1.032 0 01-.018.034 1.032 1.032 0 01-.025.04 1.032 1.032 0 01-.032.047 1.032 1.032 0 01-.028.037 1.032 1.032 0 01-.034.042 1.032 1.032 0 01-.035.038 1.032 1.032 0 01-.037.036 1.032 1.032 0 01-.04.034 1.032 1.032 0 01-.038.031 1.032 1.032 0 01-.044.032 1.032 1.032 0 01-.041.027 1.032 1.032 0 01-.046.026 1.032 1.032 0 01-.045.024 1.032 1.032 0 01-.047.02 1.032 1.032 0 01-.05.02 1.032 1.032 0 01-.047.016 1.032 1.032 0 01-.049.014 1.032 1.032 0 01-.052.012 1.032 1.032 0 01-.05.009 1.032 1.032 0 01-.052.006 1.032 1.032 0 01-.049.004 1.032 1.032 0 01-.053 0 1.032 1.032 0 01-.052 0 1.032 1.032 0 01-.05-.004 1.032 1.032 0 01-.051-.006 1.032 1.032 0 01-.052-.01 1.032 1.032 0 01-.05-.011 1.032 1.032 0 01-.05-.014 1.032 1.032 0 01-.047-.016 1.032 1.032 0 01-.05-.02 1.032 1.032 0 01-.046-.02 1.032 1.032 0 01-.046-.024 1.032 1.032 0 01-.046-.026 1.032 1.032 0 01-.04-.027 1.032 1.032 0 01-.045-.032 1.032 1.032 0 01-.038-.031 1.032 1.032 0 01-.04-.034 1.032 1.032 0 01-.036-.036 1.032 1.032 0 01-.035-.038 1.032 1.032 0 01-.035-.042 1.032 1.032 0 01-.028-.037 1.032 1.032 0 01-.032-.047 1.032 1.032 0 01-.018-.03 1.032 1.032 0 01-.046-.087 1.032 1.032 0 01-.003-.006 1.032 1.032 0 01-.034-.084 1.032 1.032 0 01-.005-.015 1.032 1.032 0 01-.022-.073 1.032 1.032 0 01-.008-.032 1.032 1.032 0 01-.011-.06 1.032 1.032 0 01-.007-.043 1.032 1.032 0 01-.003-.034 1.032 1.032 0 01-.002-.02 1.032 1.032 0 010-.002 1.032 1.032 0 01-.003-.068v-.979a2.714 2.714 0 01-.026.046 2.714 2.714 0 01-.07.116 2.714 2.714 0 01-.077.107 2.714 2.714 0 01-.084.113 2.714 2.714 0 01-.086.097 2.714 2.714 0 01-.095.104 2.714 2.714 0 01-.1.092 2.714 2.714 0 01-.1.09 2.714 2.714 0 01-.11.083 2.714 2.714 0 01-.108.079 2.714 2.714 0 01-.114.07 2.714 2.714 0 01-.12.069 2.714 2.714 0 01-.12.058 2.714 2.714 0 01-.124.056 2.714 2.714 0 01-.129.047 2.714 2.714 0 01-.128.044 2.714 2.714 0 01-.127.032 2.714 2.714 0 01-.137.032 2.714 2.714 0 01-.13.02 2.714 2.714 0 01-.137.017 2.714 2.714 0 01-.245.012h-.21a2.715 2.715 0 01-.237-.012 2.715 2.715 0 01-.13-.016 2.715 2.715 0 01-.14-.02 2.715 2.715 0 01-.128-.03 2.715 2.715 0 01-.133-.033 2.715 2.715 0 01-.132-.044 2.715 2.715 0 01-.123-.045 2.715 2.715 0 01-.128-.058 2.715 2.715 0 01-.12-.057 2.715 2.715 0 01-.119-.069 2.715 2.715 0 01-.113-.069 2.715 2.715 0 01-.113-.08 2.715 2.715 0 01-.106-.082 2.715 2.715 0 01-.099-.087 2.715 2.715 0 01-.103-.096 2.715 2.715 0 01-.09-.097 2.715 2.715 0 01-.09-.102 2.715 2.715 0 01-.084-.11 2.715 2.715 0 01-.078-.109 2.715 2.715 0 01-.071-.116 2.715 2.715 0 01-.068-.118 2.715 2.715 0 01-.058-.12 2.715 2.715 0 01-.056-.126 2.715 2.715 0 01-.045-.124 2.715 2.715 0 01-.045-.133 2.715 2.715 0 01-.032-.127 2.715 2.715 0 01-.03-.136 2.715 2.715 0 01-.02-.135 2.715 2.715 0 01-.017-.132 2.715 2.715 0 01-.012-.238V8.17a2.723 2.723 0 01.012-.227 2.723 2.723 0 01.016-.135 2.723 2.723 0 01.02-.132 2.723 2.723 0 01.03-.136 2.723 2.723 0 01.035-.13 2.723 2.723 0 01.042-.129 2.723 2.723 0 01.047-.128 2.723 2.723 0 01.056-.126 2.723 2.723 0 01.058-.119 2.723 2.723 0 01.07-.123 2.723 2.723 0 01.069-.111 2.723 2.723 0 01.081-.114 2.723 2.723 0 01.08-.106 2.723 2.723 0 01.091-.103 2.723 2.723 0 01.093-.1 2.723 2.723 0 01.097-.09 2.723 2.723 0 01.106-.093 2.723 2.723 0 01.104-.08 2.723 2.723 0 01.114-.08 2.723 2.723 0 01.192-.119 1.95 1.95 0 01.016-.133 1.95 1.95 0 01.015-.094 1.95 1.95 0 01.021-.096 1.95 1.95 0 01.025-.093 1.95 1.95 0 01.03-.094 1.95 1.95 0 01.034-.091 1.95 1.95 0 01.04-.089 1.95 1.95 0 01.058-.118.248.248 0 01.01-.018.248.248 0 01.004-.005.248.248 0 01.01-.013.248.248 0 01.006-.007.248.248 0 01.007-.008.248.248 0 01.01-.011.248.248 0 01.007-.006.248.248 0 01.011-.009.248.248 0 01.012-.008.248.248 0 01.008-.005.248.248 0 01.016-.009.248.248 0 01.006-.003.248.248 0 01.013-.006.248.248 0 01.011-.005.248.248 0 01.01-.003.248.248 0 01.013-.004.248.248 0 01.013-.003.248.248 0 01.011-.002.248.248 0 01.01-.001.248.248 0 01.017-.002.248.248 0 01.006 0 .248.248 0 01.019 0 .248.248 0 01.007 0 .248.248 0 01.016.003.248.248 0 01.01.002.248.248 0 01.014.003.248.248 0 01.012.004.248.248 0 01.011.003.248.248 0 01.013.005.248.248 0 01.01.005.248.248 0 01.01.005.248.248 0 01.012.006.248.248 0 01.009.006.248.248 0 01.012.008.248.248 0 01.007.005.248.248 0 01.012.01.248.248 0 01.01.01.248.248 0 01.01.01v-.005l.471.523a2.723 2.723 0 01.01 0 1.95 1.95 0 01-.001-.155 1.95 1.95 0 01.006-.103 1.95 1.95 0 01.009-.093 1.95 1.95 0 01.015-.097 1.95 1.95 0 01.02-.095 1.95 1.95 0 01.024-.094 1.95 1.95 0 01.03-.094 1.95 1.95 0 01.034-.092 1.95 1.95 0 01.036-.087 1.95 1.95 0 01.07-.142c.085-.135.214-.163.32-.083.015.011.03.025.044.04l1.78 1.94v-.002a1.926 1.926 0 00.092.089 1.926 1.926 0 00.071.064 1.926 1.926 0 00.076.06 1.926 1.926 0 00.078.057 1.926 1.926 0 00.08.05 1.926 1.926 0 00.084.05 1.926 1.926 0 00.085.043 1.926 1.926 0 00.087.04 1.926 1.926 0 00.092.036 1.926 1.926 0 00.089.03 1.926 1.926 0 00.095.026 1.926 1.926 0 00.091.022 1.926 1.926 0 00.097.016 1.926 1.926 0 00.094.013 1.926 1.926 0 00.096.006 1.926 1.926 0 00.096.003 1.926 1.926 0 00.097-.003 1.926 1.926 0 00.096-.006 1.926 1.926 0 00.094-.013 1.926 1.926 0 00.097-.016 1.926 1.926 0 00.09-.022 1.926 1.926 0 00.096-.025 1.926 1.926 0 00.089-.031 1.926 1.926 0 00.092-.036 1.926 1.926 0 00.087-.04 1.926 1.926 0 00.085-.043 1.926 1.926 0 00.084-.05 1.926 1.926 0 00.08-.05 1.926 1.926 0 00.078-.058 1.926 1.926 0 00.075-.059 1.926 1.926 0 00.072-.064 1.926 1.926 0 00.092-.089V6.3l1.78-1.94a.294.294 0 01.044-.04.212.212 0 01.107-.044zm.02.168c-.813.742-1.419 1.714-2.325 2.358-.932.557-2.21.194-2.823-.67-.512-.56-1.007-1.17-1.563-1.667-.324.258-.164.745-.332 1.078-.208.206-.42-.181-.526-.316-.084-.17-.317-.283-.386-.048-.163.278-.04.74-.416.857-.919.59-1.277 1.757-1.149 2.792-.03.982-.066 2.116.698 2.859 1.106 1.18 3.29 1.048 4.174-.32.058-.14.145-.301.261-.42v-.42a1.048 1.048 0 010-.006l-.35-.059a.052.052 0 01-.042-.058 1.446 1.446 0 011.418-1.194 1.446 1.446 0 011.43 1.194.052.052 0 01-.043.058l-.35.06a1.03 1.03 0 010 .001v.38l.007.001c.584 1.534 2.728 2.067 4.017 1.128a2.694 2.694 0 001.106-2.535c.014-1.033.13-2.231-.653-3.042-.216-.27-.604-.399-.762-.697-.055-.25-.041-.588-.286-.736-.31.129-.381.556-.728.634-.2-.38-.055-.897-.377-1.213zM8.422 6.468a1.995 1.995 0 011.994 1.995v1.2a1.996 1.996 0 01-.245.913 27.203 27.203 0 00-.815-.328.95.95 0 00.035-.037.95.95 0 00.016-.018.95.95 0 00.048-.058.95.95 0 00.012-.017.95.95 0 00.04-.06.95.95 0 00.013-.02.95.95 0 00.032-.062.95.95 0 00.011-.022.95.95 0 00.024-.06.95.95 0 00.012-.031.95.95 0 00.017-.058.95.95 0 00.009-.033.95.95 0 00.01-.054.95.95 0 00.007-.043.95.95 0 00.007-.082V8.56a.95.95 0 00-.004-.08.95.95 0 00-.005-.047.95.95 0 00-.007-.047.95.95 0 00-.01-.047.95.95 0 00-.012-.045.95.95 0 00-.016-.047.95.95 0 00-.015-.042.95.95 0 00-.02-.047.95.95 0 00-.02-.04.95.95 0 00-.025-.042.95.95 0 00-.024-.04A.95.95 0 009.464 8a.95.95 0 00-.03-.039.95.95 0 00-.03-.034.95.95 0 00-.033-.036.95.95 0 00-.035-.032.95.95 0 00-.035-.031.95.95 0 00-.038-.029.95.95 0 00-.039-.028.95.95 0 00-.04-.025.95.95 0 00-.04-.023.95.95 0 00-.043-.02.95.95 0 00-.046-.02.95.95 0 00-.043-.017.95.95 0 00-.043-.014.95.95 0 00-.049-.012.95.95 0 00-.046-.01.95.95 0 00-.045-.008.95.95 0 00-.048-.006.95.95 0 00-.08-.004.96.96 0 00-.06.004.96.96 0 00-.05.005.96.96 0 00-.043.007.96.96 0 00-.051.01.96.96 0 00-.045.012.96.96 0 00-.047.014.96.96 0 00-.046.018.96.96 0 00-.055.023.6.6 0 01.04.04.6.6 0 01.022.024.6.6 0 01.017.02.6.6 0 01.018.025.6.6 0 01.017.026.6.6 0 01.013.023.6.6 0 01.016.028.6.6 0 01.011.026.6.6 0 01.013.03.6.6 0 01.008.025.6.6 0 01.01.031.6.6 0 01.007.03.6.6 0 01.006.029.6.6 0 01.004.037.6.6 0 01.002.021.6.6 0 010 .041.6.6 0 010 .02.6.6 0 01-.002.03.6.6 0 01-.003.031.6.6 0 01-.004.024.6.6 0 01-.007.034.6.6 0 01-.008.028.6.6 0 01-.01.03.6.6 0 01-.012.03.6.6 0 01-.01.024.6.6 0 01-.016.03.6.6 0 01-.013.024.6.6 0 01-.02.03.6.6 0 01-.012.018.6.6 0 01-.026.032.6.6 0 01-.013.015.6.6 0 01-.02.02.6.6 0 01-.024.024.6.6 0 01-.02.015.6.6 0 01-.025.021.6.6 0 01-.027.018.6.6 0 01-.024.015.6.6 0 01-.023.012.6.6 0 01-.03.016.6.6 0 01-.034.013.6.6 0 01-.02.008.6.6 0 01-.038.011.6.6 0 01-.02.006.6.6 0 01-.034.006.6.6 0 01-.026.005.6.6 0 01-.04.003.6.6 0 01-.018.002.6.6 0 01-.035 0 .6.6 0 01-.028 0 .6.6 0 01-.031-.005.6.6 0 01-.026-.003.6.6 0 01-.056-.012v.859a.95.95 0 00.004.048.95.95 0 00.007.062 15.08 15.08 0 00-1.336-.332v-.908a1.987 1.987 0 011.996-1.995zm7.156 0a1.995 1.995 0 011.996 1.995v.909c-.425.085-.87.195-1.336.333a.95.95 0 00.007-.066.95.95 0 00.004-.046V8.56a.95.95 0 00-.004-.081.95.95 0 00-.006-.046.95.95 0 00-.007-.047.95.95 0 00-.01-.046.95.95 0 00-.012-.048.95.95 0 00-.014-.041.95.95 0 00-.018-.048.95.95 0 00-.019-.043.95.95 0 00-.02-.042.95.95 0 00-.024-.04.95.95 0 00-.025-.042.95.95 0 00-.028-.039.95.95 0 00-.028-.036.95.95 0 00-.032-.037.95.95 0 00-.032-.035.95.95 0 00-.036-.033.95.95 0 00-.033-.03.95.95 0 00-.04-.03.95.95 0 00-.037-.026.95.95 0 00-.042-.026.95.95 0 00-.04-.023.95.95 0 00-.042-.02.95.95 0 00-.046-.02.95.95 0 00-.04-.016.95.95 0 00-.048-.015.95.95 0 00-.046-.012.95.95 0 00-.047-.01.95.95 0 00-.047-.007.95.95 0 00-.045-.006.95.95 0 00-.081-.004.96.96 0 00-.057.004.96.96 0 00-.045.004.96.96 0 00-.052.008.96.96 0 00-.044.008.96.96 0 00-.046.012.96.96 0 00-.047.014.96.96 0 00-.043.016.96.96 0 00-.045.018.96.96 0 00-.045.023.96.96 0 00-.048.024.6.6 0 01.04.045.6.6 0 01.033.05.6.6 0 01.03.052.6.6 0 01.024.055.6.6 0 01.018.057.6.6 0 01.005.025.6.6 0 01.007.034.6.6 0 01.005.042.6.6 0 01.002.017.6.6 0 010 .001.6.6 0 010 .06.6.6 0 01-.005.06.6.6 0 01-.004.022.6.6 0 01-.007.036.6.6 0 01-.017.057.6.6 0 010 .001.6.6 0 01-.023.055.6.6 0 01-.028.053.6.6 0 01-.033.05.6.6 0 01-.039.046.6.6 0 01-.042.042.6.6 0 01-.046.038.6.6 0 01-.05.033.6.6 0 01-.001 0 .6.6 0 01-.053.027.6.6 0 01-.055.023.6.6 0 01-.058.016.6.6 0 01-.032.006.6.6 0 01-.087.01.6.6 0 01-.06 0v.838a.95.95 0 00.007.084.95.95 0 00.007.042.95.95 0 00.01.054.95.95 0 00.01.032.95.95 0 00.016.06.95.95 0 00.011.029.95.95 0 00.025.06.95.95 0 00.01.022.95.95 0 00.034.063.95.95 0 00.011.018.95.95 0 00.041.063.95.95 0 00.01.012.95.95 0 00.052.063.95.95 0 00.008.008.95.95 0 00.043.046c-.268.103-.54.213-.815.33a1.996 1.996 0 01-.247-.916v-1.2a1.986 1.986 0 011.995-1.995zM12.035 9.32c-.038 0-.077 0-.115.003a1.35 1.35 0 00-1.224 1.042l1.301.198.688-.108.603-.138c-.13-.565-.68-.983-1.253-.997zm.86 1.184c-.084-.005-.009.142-.024.214.01.453.025.912-.024 1.362-.143.554-.892.836-1.35.477-.337-.235-.425-.684-.371-1.068-.001-.32-.02-.641.014-.96-.161-.086-.06.106-.086.194.01.609-.049 1.226.045 1.829.186.598 1.027.855 1.5.43.31-.25.399-.685.35-1.067-.004-.466.012-.933-.009-1.399a.142.142 0 00-.046-.012zm-.144.046a.399.399 0 00-.066.013 1.568 1.568 0 01-.112.036l-.03.008a1.3 1.3 0 01-.085.02l-.028.006a1.681 1.681 0 01-.27.03l-.035.002a3.33 3.33 0 01-.148 0h-.016a2.6 2.6 0 01-.171-.013c-.006 0-.012 0-.017-.002a5.958 5.958 0 01-.279-.038l-.072-.01-.182-.033a.794.754 0 00-.035.223v1.087a.803.763 0 00.795.755.794.754 0 00.794-.755V10.79a.795.755 0 00-.043-.243zm.04 1.367a.794.794 0 01-.005.035.794.794 0 00.004-.035zm-.013.082a.794.794 0 01-.007.03.794.794 0 00.007-.03zm-.02.075a.794.794 0 01-.01.03.794.794 0 00.01-.03zm-.028.079a.794.794 0 01-.01.022.794.794 0 00.01-.022zm-.035.071a.794.794 0 01-.012.02.794.794 0 00.012-.02zm-.044.07a.794.794 0 01-.01.014.794.794 0 00.01-.014zm-.05.064a.794.794 0 01-.01.01.794.794 0 00.01-.01zm-.053.056a.794.794 0 01-.006.006.794.794 0 00.006-.006zm-3.066 2.62a.132.132 0 01.014 0h1.823a.14.14 0 01.14.181c-.14.42-.573.709-1.056.712a1.085 1.085 0 01-1.047-.712.132.132 0 01.126-.182zm3.203 0a.144.144 0 01.005 0h1.824a.14.14 0 01.14.179c-.14.418-.572.71-1.06.71a1.085 1.085 0 01-1.043-.708.144.144 0 01.134-.18zm-1.6 1.548a.14.14 0 01.005 0h1.824a.14.14 0 01.139.182c-.135.423-.568.711-1.056.711a1.085 1.085 0 01-1.046-.711.14.14 0 01.135-.182zM4.45 18.236a.931.931 0 00-.66.299v-.002a.944.944 0 00.041 1.325l1.088 1.02a.938.938 0 001.284-1.367l-1.088-1.019a.931.931 0 00-.665-.256zm15.115 0a.931.931 0 00-.678.256l-1.089 1.019a.938.938 0 001.285 1.368l1.087-1.019a.944.944 0 00.042-1.325.931.931 0 00-.647-.299z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.duolingo.com/\",hex:\"58CC02\"},Dynatrace:{title:\"Dynatrace\",slug:\"dynatrace\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Dynatrace icon</title><path d=\"M9.373 0c-.31.006-.93.09-1.521.654C6.98 1.478 2.628 5.61.88 7.27.09 8.024.16 8.865.16 8.934v.377c.067-.292.187-.499.427-.825.496-.616 1.3-.788 1.627-.822a64.233 64.233 0 0 1 .002 0 64.233 64.233 0 0 1 6.527-.549c4.335-.137 7.197.225 7.197.225l6.084-5.793s-3.188-.6-6.82-1.027A93.394 93.394 0 0 0 9.566.006c-.021 0-.09-.008-.193-.006zm13.56 2.508l-6.066 5.79s.222 2.88-.137 7.198c-.189 2.45-.584 4.866-.875 6.494-.052.326-.256 1.114-.925 1.594-.29.198-.491.295-.748.363 1.546-.51 1.091-7.047 1.091-7.047-4.335.137-7.214-.222-7.214-.222L1.975 22.47s3.222.634 6.855 1.045c2.056.24 4.833.429 5.227.463.023 0 .045-.007.068-.012-.013.003-.022.009-.035.012.138 0 .259.015.379.015.085 0 .925.105 1.713-.648 1.748-1.663 6.083-5.81 6.94-6.633.788-.754.72-1.594.72-1.68a81.84 81.84 0 0 0-.207-5.654c-.24-3.65-.701-6.871-.701-6.871zM3.856 8.305C2.125 8.307.348 8.513.16 9.326c.017 1.216.05 3.137.205 5.28.24 3.65.703 6.886.703 6.886l6.082-5.79c-.017.017-.239-2.88.121-7.198H7.27s-1.684-.202-3.415-.2z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.dynatrace.com/company/press-kit/\",hex:\"1496FF\"},eBay:{title:\"eBay\",slug:\"ebay\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>eBay icon</title><path d=\"M6.056 12.13V7.21h1.2v3.026c.59-.703 1.402-.906 2.202-.906 1.34 0 2.828.904 2.828 2.855 0 .233-.015.457-.06.668.24-.953 1.274-1.305 2.896-1.344.51-.018 1.095-.018 1.56-.018v-.135c0-.885-.556-1.244-1.53-1.244-.72 0-1.245.3-1.305.81h-1.275c.136-1.29 1.5-1.62 2.686-1.62 1.064 0 1.995.27 2.415 1.02l-.436-.84h1.41l2.055 4.125 2.055-4.126H24l-3.72 7.305h-1.346l1.07-2.04-2.33-4.38c.13.255.2.555.2.93v2.46c0 .346.01.69.04 1.005H16.8c-.03-.255-.046-.51-.046-.765-.603.734-1.32.96-2.32.96-1.48 0-2.272-.78-2.272-1.695 0-.15.015-.284.037-.405-.3 1.246-1.36 2.086-2.767 2.086-.87 0-1.694-.315-2.2-.93 0 .24-.015.494-.04.734h-1.18c.02-.39.04-.855.04-1.245v-1.05h-4.83c.065 1.095.818 1.74 1.853 1.74.718 0 1.355-.3 1.568-.93h1.24c-.24 1.29-1.61 1.725-2.79 1.725C.95 15.007 0 13.82 0 12.23c0-1.754.982-2.91 3.116-2.91 1.688 0 2.93.886 2.94 2.806v.005zm9.137.183c-1.095.034-1.77.233-1.77.95 0 .465.36.97 1.305.97 1.26 0 1.935-.69 1.935-1.814v-.13c-.45 0-.99.006-1.484.022h.012zm-6.06 1.875c1.11 0 1.876-.806 1.876-2.02s-.768-2.02-1.893-2.02c-1.11 0-1.89.806-1.89 2.02s.765 2.02 1.875 2.02h.03zm-4.35-2.514c-.044-1.125-.854-1.546-1.725-1.546-.944 0-1.694.474-1.815 1.546h3.54z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://go.developer.ebay.com/logos\",hex:\"E53238\"},EVRY:{title:\"EVRY\",slug:\"evry\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>EVRY icon</title><path d=\"M.443 12.919c.102.255.113.426.072.692-.031.202-.068.404-.108.605-.035.174-.117.55.003.694.117.139.35.131.622.098.302-.037 1.81-.342 3.397-.997.215-.093.435-.205.622-.345.431-.324.5-1.005.5-1.005.011-.13.009-.316-.164-.413-.126-.07-.301-.026-.562.043-.433.116-1.502.519-1.873.628-.15.044-.447.114-.561-.027-.19-.234.082-.969.245-1.378.163-.409.419-.738 1.205-.96.289-.082.762-.229.954-.293.211-.071.489-.207.607-.675.135-.534-.278-.616-.655-.718-.539-.147-.878-.165-.641-.679.097-.21.187-.303.397-.358.214-.056 2.029-.338 2.751-.467.405-.072.542-.286.711-.631.365-.746-.093-.794-.462-.761-.836.076-2.178.315-2.753.397-.306.044-.102-.47-.46-.494-.704-.049-1.302.243-1.541.425-.226.172-.334.703-.334.703l-.697 2.368c-.06.273-.146.543-.343.659-.479.283-1.457.302-1.37 1.34 0 0 .019.51.437 1.551zm6.318-4.424c.279-.047.654-.115.756.586.031.212.032 2.661.032 2.661s.269-.252 1.094-1.526c.626-.965 1.317-2.211 1.577-2.648.152-.256.433-.522.918-.165.541.398.553.685.315 1.093-.244.419-.9 1.486-1.827 2.772-.842 1.168-1.245 1.631-1.599 2.016-.354.385-.826.83-1.319.762-.654-.091-.604-1.198-.63-1.515-.026-.317-.154-2.832-.066-3.419.034-.228.025-.496.749-.618zm8.845.065c.302.161-.045.855-.626 1.277-.374.272-1.014.679-1.672.679a6.206 6.206 0 0 1 1.017-1.298c.47-.461 1.018-.799 1.281-.658zm8.17-.153c.291-.373.349-.596-.133-1.061-.433-.417-.723-.171-.934.045-.035.042-1.016 1.001-2.049 2.17-.804.91-1.499 1.756-1.499 1.756s-.025-.57.062-1.286c.049-.408.186-1.201.226-1.453.204-1.274-.593-1.325-.89-1.343-.312-.019-.461.145-.554.533-.085.356-.55 2.311-.365 4.325.033.363.105.737.112.761l-.188.257c-1.749-.485-2.946-1.664-2.946-1.664s.574-.165 1.204-.543c.501-.3 1.465-1.043 1.363-2.353-.087-1.112-1.271-1.62-1.707-1.529-.397.083-1.091.558-1.747 1.14-.044-.304-.052-.639-.368-.676-.232-.027-.501.082-.696.182a1.116 1.116 0 0 0-.501.473l-.736 1.665c-.024.059-.072.072-.11.08-.394.09-.521.371-.549.449 0 0-.165.347.126.661-.146.385-.533 1.282-.533 1.282-.48 1.101-.449 1.483-.277 1.717.087.119.393.291.762.351.278.046.491-.119.723-.482.343-.537 1.032-1.953 1.032-1.953s1.37 1.474 4.121 2.443c0 0-1.455 1.973-1.665 3.064 0 0-.108.715.872.713.246 0 .617-.058.886-.221a.475.475 0 0 0 .223-.281.216.216 0 0 0-.021-.153c-.027-.047-.069-.073-.101-.104-.05-.049-.043-.113-.016-.187.539-1.544 2.732-4.169 3.197-4.738 1.233-1.507 3.512-3.854 3.673-4.041z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.evry.com/en/\",hex:\"063A54\"},Exercism:{title:\"Exercism\",slug:\"exercism\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Exercism icon</title><path d=\"M4.35 1.66c-.959 0-1.686.298-2.181.893-.496.595-.744 1.464-.744 2.605v3.474c0 .805-.086 1.424-.259 1.858-.173.434-.493.84-.96 1.218-.138.113-.206.206-.206.278 0 .072.068.165.205.277.476.386.798.794.967 1.225.17.43.253 1.047.253 1.851v3.462c0 1.15.25 2.023.75 2.618.5.595 1.224.892 2.174.892h.882c.379 0 .618-.018.72-.054.1-.036.15-.127.15-.271 0-.201-.133-.334-.399-.398l-.483-.109c-1.063-.241-1.595-1.29-1.595-3.148v-3.293c0-1.247-.302-2.127-.906-2.642l-.23-.193c-.112-.096-.168-.169-.168-.217 0-.056.056-.129.169-.217l.23-.193c.603-.515.905-1.395.905-2.642V5.641c0-1.11.135-1.88.405-2.31.27-.43.832-.762 1.685-.995.258-.073.387-.19.387-.35 0-.217-.29-.326-.87-.326zm14.419.029c-.58 0-.87.108-.87.325 0 .161.128.278.386.35.854.233 1.416.565 1.686.995.27.43.405 1.2.405 2.31v3.294c0 1.246.302 2.126.906 2.641l.229.193c.113.089.17.161.17.217 0 .049-.057.121-.17.217l-.23.193c-.603.515-.905 1.396-.905 2.642v3.293c0 1.858-.532 2.907-1.595 3.149l-.484.108c-.266.064-.398.197-.398.398 0 .145.05.235.15.272.102.036.341.054.72.054h.882c.95 0 1.675-.298 2.174-.893.5-.595.75-1.467.75-2.617v-3.462c0-.805.084-1.422.253-1.852.17-.43.491-.838.967-1.224.137-.113.205-.205.205-.278 0-.072-.068-.165-.205-.277-.468-.378-.788-.784-.961-1.218-.173-.435-.26-1.054-.26-1.858V5.187c0-1.142-.247-2.01-.743-2.606-.495-.595-1.222-.892-2.18-.892zM7.683 9.735c-1.456 0-2.64 1.111-2.64 2.478h1.02c0-.838.727-1.52 1.62-1.52.892 0 1.619.682 1.619 1.52h1.02c0-1.367-1.183-2.478-2.64-2.478zm8.406 0c-1.456 0-2.639 1.111-2.639 2.478h1.02c0-.838.727-1.52 1.62-1.52.892 0 1.62.682 1.62 1.52h1.02c0-1.367-1.185-2.478-2.64-2.478zM9.71 14.36v.561c0 1.277 1.062 2.316 2.366 2.316 1.305 0 2.367-1.039 2.367-2.316v-.56h-.934v.56c0 .877-.76 1.426-1.433 1.426s-1.48-.273-1.48-1.426v-.56z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/exercism/website-icons/blob/master/exercism/logo-icon.svg\",hex:\"009CAB\"},\"Eclipse IDE\":{title:\"Eclipse IDE\",slug:\"eclipseide\",svg:'<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" role=\"img\"><title>Eclipse IDE icon</title><path d=\"M11.108.024c-.274.004-.604.012-.737.023C6.727.361 3.468 2.518 1.578 5.86A12.53 12.53 0 0 0 .02 11.112c-.04.517-.02 1.745.035 2.208.306 2.682 1.353 5.06 3.07 6.965 1.962 2.173 4.586 3.467 7.437 3.663.42.032 1.043.04 1.02.012a2.404 2.404 0 0 0-.338-.074c-1.674-.33-3.388-1.13-4.777-2.232a12.345 12.345 0 0 1-2.45-2.636A12.388 12.388 0 0 1 1.883 12.5a12.414 12.414 0 0 1 .56-4.275c.785-2.522 2.37-4.726 4.475-6.228A11.074 11.074 0 0 1 11.155.122l.443-.098zm1.475.51C10.645.65 8.806 1.299 7.3 2.4 5.425 3.77 3.994 5.644 3.22 7.746c-.145.397-.282.82-.282.879 0 .012 3.828.024 10.31.024 8.464 0 10.316-.008 10.316-.036 0-.047-.153-.525-.283-.878-.153-.42-.576-1.31-.82-1.722-.4-.683-.91-1.373-1.474-1.992-1.651-1.82-3.593-2.934-5.82-3.334-.785-.141-1.8-.2-2.585-.153zM23.83 9.97c-.02 0-4.792 0-10.609.004l-10.574.008-.011.059c-.036.16-.134 1.082-.134 1.243 0 .028 1.785.032 10.747.032H24v-.075c0-.102-.07-.792-.106-1.055-.02-.16-.04-.216-.063-.216zm-10.573 2.636c-9.37-.004-10.731 0-10.743.035-.02.04.024.557.075.973.02.157.035.298.035.314 0 .027 2.137.035 10.625.035h10.624l.024-.188c.043-.326.102-.97.094-1.067l-.008-.094zm.003 2.718c-8.883 0-10.322.004-10.322.035 0 .02.054.208.121.42a11.123 11.123 0 0 0 2.071 3.741c.282.342.945 1.036 1.228 1.287 1.568 1.4 3.247 2.216 5.18 2.53.605.094.887.113 1.75.11.91 0 1.298-.032 2.024-.177 2.11-.416 3.914-1.451 5.53-3.17 1.267-1.348 2.106-2.76 2.628-4.411l.117-.365z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.eclipse.org/artwork/\",hex:\"2C2255\"},Elastic:{title:\"Elastic\",slug:\"elastic\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Elastic icon</title><path d=\"M20.32 16.3152l-3.9463-.923-1.048-2.0031 5.1615-4.522c1.5305.5798 2.551 2.0476 2.551 3.6903 0 1.6906-1.1146 3.2278-2.7182 3.7578m-2.9667 4.666c-.6147 0-1.217-.2062-1.709-.5845l.7801-4.0648 3.5847.8388c.1139.3094.1714.6396.1714.9835 0 1.559-1.268 2.827-2.8272 2.827m-2.6292-.5844a5.902 5.902 0 0 1-4.8925 2.593c-3.2651 0-5.9215-2.6564-5.9215-5.921 0-.4008.039-.7966.1156-1.1785l5.1509-4.6553 5.2557 2.3956 1.1637 2.2235zM.9636 11.443c0-1.69 1.1145-3.2266 2.7175-3.7577l3.9374.93.9242 1.9747-5.0336 4.5498C1.9815 14.558.9636 13.0885.9636 11.4429m5.6847-8.424a2.8325 2.8325 0 0 1 1.718.5798l-.7861 4.079-3.5876-.847c-.114-.3095-.1714-.6397-.1714-.984 0-1.5592 1.268-2.8278 2.8271-2.8278m2.653.5875c1.1044-1.6082 2.9212-2.5674 4.8692-2.5674 3.2562 0 5.9049 2.6492 5.9049 5.9055 0 .3983-.0373.7789-.1139 1.1607l-5.2819 4.628-5.235-2.3865-1.022-2.1822zm14.662 8.9622c0-2.0052-1.2432-3.7582-3.114-4.4403a6.6742 6.6742 0 0 0 .125-1.2855c0-3.7274-3.0325-6.76-6.7605-6.76-2.1775 0-4.2033 1.0443-5.4761 2.804a3.575 3.575 0 0 0-2.1963-.7516c-1.9786 0-3.5883 1.6097-3.5883 3.5882 0 .4373.078.8557.2244 1.2505-1.86.6712-3.139 2.4653-3.139 4.4579 0 2.0155 1.2493 3.7763 3.1287 4.4536a6.8545 6.8545 0 0 0-.1233 1.285c0 3.7189 3.0252 6.7441 6.7441 6.7441 2.183 0 4.2075-1.0485 5.4732-2.8155.63.4947 1.4004.7662 2.1994.7662 1.9784 0 3.5881-1.609 3.5881-3.5876 0-.4373-.078-.8562-.2243-1.2512 1.86-.6706 3.139-2.4652 3.139-4.4578\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.elastic.co/brand\",hex:\"005571\"},\"Elastic Cloud\":{title:\"Elastic Cloud\",slug:\"elasticcloud\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Elastic Cloud icon</title><path d=\"M22.62 19.46a11.95 11.95 0 0 1-9.32 4.48 11.95 11.95 0 0 1-9.32-4.48A11.95 11.95 0 0 1 13.3 15c3.76 0 7.14 1.76 9.32 4.48zM10.32 12c0-1.52 1.25-2.99 2.62-2.99h.42c3.91 0 7.1-1.76 9.29-4.48A12.05 12.05 0 0 0 13.3.05a11.95 11.95 0 0 0-9.32 4.48A11.83 11.83 0 0 0 1.35 12c0 1.94.45 3.76 1.29 5.38a14.3 14.3 0 0 1 7.85-4.45c-.09-.3-.18-.63-.18-.93z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.elastic.co/brand\",hex:\"005571\"},Elasticsearch:{title:\"Elasticsearch\",slug:\"elasticsearch\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Elasticsearch icon</title><path d=\"M11.27 15.58H1.61A11.81 11.81 0 0 1 1.07 12c0-1.25.18-2.45.54-3.58h15.86A3.57 3.57 0 0 1 21.05 12a3.56 3.56 0 0 1-3.55 3.58zm-.45 1.2H2.05a11.8 11.8 0 0 0 4.39 5.18A11.8 11.8 0 0 0 13 23.93c4.15 0 7.78-2.12 9.93-5.3a6.08 6.08 0 0 0-4.35-1.86zm7.76-9.55c1.7 0 3.25-.72 4.35-1.85A11.96 11.96 0 0 0 2.05 7.23h8.74z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.elastic.co/brand\",hex:\"005571\"},\"Elastic Stack\":{title:\"Elastic Stack\",slug:\"elasticstack\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Elastic Stack icon</title><path d=\"M.07 2.45A2.4 2.4 0 0 1 2.45.07h19.1a2.4 2.4 0 0 1 2.38 2.38v4.78H.07zM.07 16.77H11.4v7.16H2.45a2.38 2.38 0 0 1-2.38-2.32zM12.6 16.77h11.33v4.78c0 1.28-1.1 2.38-2.38 2.38H12.6zM.07 8.42h23.86v7.16H.07z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.elastic.co/brand\",hex:\"005571\"},Electron:{title:\"Electron\",slug:\"electron\",svg:'<svg xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" viewBox=\"0 0 24 24\"><title>Electron icon</title><path d=\"M2.648 11.678c-1.038-1.81-1.249-3.504-.511-4.781.988-1.712 3.468-2.31 6.604-1.739a.322.322 0 1 1-.115.633c-2.9-.528-5.111.005-5.932 1.428-.605 1.047-.423 2.509.512 4.14a.322.322 0 1 1-.558.32zm14.92-6.069c1.835.024 3.156.596 3.751 1.626.82 1.419.18 3.595-1.718 5.837a.322.322 0 1 0 .49.416c2.054-2.426 2.771-4.866 1.785-6.575-.726-1.257-2.26-1.92-4.299-1.947a.322.322 0 1 0-.008.643zm-1.854 15.239a.322.322 0 0 0-.442.11c-.934 1.553-2.08 2.399-3.26 2.399-1.642 0-3.208-1.647-4.2-4.418a.322.322 0 1 0-.606.217C8.279 22.154 10.036 24 12.01 24c1.44 0 2.773-.982 3.813-2.71a.322.322 0 0 0-.11-.442zm7.356-2.594a1.54 1.54 0 0 1-2.436 1.25c-2.455 1.445-7.146.71-11.56-1.84-1.88-1.085-3.527-2.392-4.795-3.785a.322.322 0 1 1 .476-.433c1.222 1.343 2.817 2.609 4.64 3.661 4.167 2.406 8.553 3.12 10.797 1.906a1.54 1.54 0 1 1 2.878-.759zm-19.062 0a1.54 1.54 0 1 1-2.285-1.345c-.233-2.877 2.79-6.734 7.36-9.372 1.898-1.096 3.874-1.874 5.731-2.271a.322.322 0 0 1 .135.628c-1.79.384-3.703 1.137-5.545 2.2-4.304 2.485-7.148 6.067-7.048 8.627.038-.003.075-.006.113-.006.85 0 1.54.69 1.54 1.54zM10.472 1.54a1.54 1.54 0 0 1 3.078 0c0 .023-.002.045-.003.067 2.549 1.317 4.32 5.81 4.32 11.003 0 2.135-.298 4.184-.854 5.96a.322.322 0 1 1-.614-.192c.536-1.712.825-3.697.825-5.768 0-4.89-1.626-9.095-3.847-10.363a1.538 1.538 0 0 1-2.905-.707zm1.304 9.981a1.114 1.114 0 1 0 .47 2.178 1.114 1.114 0 0 0-.47-2.178z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://electronjs.org/images/electron-logo.svg\",hex:\"47848F\"},elementary:{title:\"elementary\",slug:\"elementary\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>elementary icon</title><path d=\"M12 0a12 12 0 1 0 0 24 12 12 0 0 0 0-24zm0 1a11 11 0 0 1 10.59 8.01 19.09 19.09 0 0 1-4.66 6.08c-.94.81-1.96 1.53-3.08 2.04-1.13.5-2.37.8-3.6.72a6.23 6.23 0 0 1-2.66-.76 20.02 20.02 0 0 0 5.68-4.58 9.97 9.97 0 0 0 2.31-4.17c.18-.79.2-1.6.04-2.4a4.42 4.42 0 0 0-1.08-2.11 4.33 4.33 0 0 0-2-1.19 5.25 5.25 0 0 0-2.33-.08A7.8 7.8 0 0 0 7.2 4.85a9.77 9.77 0 0 0-2.94 7.49 7.88 7.88 0 0 0 1.95 4.59 18 18 0 0 1-3.56.85A11 11 0 0 1 12 1zm.07 2.22c.77 0 1.55.24 2.17.7.55.42.97 1.02 1.2 1.68.23.65.3 1.37.21 2.06a7.85 7.85 0 0 1-1.7 3.76 16.22 16.22 0 0 1-6.37 4.96c-.48-.42-.9-.92-1.2-1.48a6.61 6.61 0 0 1-.75-3.87c.12-1.32.58-2.6 1.2-3.79a7.92 7.92 0 0 1 3.02-3.42c.68-.37 1.45-.6 2.22-.6zm10.83 7.3A11 11 0 0 1 3.52 19a19.8 19.8 0 0 0 3.63-1.2c.51.4 1.08.71 1.67.94a8 8 0 0 0 5.44-.04 13.3 13.3 0 0 0 4.64-2.95 20 20 0 0 0 4-5.22z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://elementary.io/brand\",hex:\"64BAFF\"},Eleventy:{title:\"Eleventy\",slug:\"eleventy\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Eleventy icon</title><path d=\"M3.386 12.032v-12H20.59v24H3.386zm13.17 6.07a1.07 1.07 0 0 0 .373-.107c.432-.213.68-.672.877-1.626.076-.372 1.195-6.168 1.209-6.263.026-.186-.008-.382-.084-.476a.325.325 0 0 0-.087-.064l-.06-.031h-.291c-.253 0-.298 0-.348.02-.113.039-.207.156-.255.316-.011.038-.168.881-.348 1.873l-.328 1.802-.046-.21c-.56-2.547-.764-3.452-.794-3.532a.383.383 0 0 0-.103-.16c-.105-.107-.117-.11-.567-.11-.411 0-.422 0-.5.074-.086.079-.122.216-.111.42.006.115.045.27.688 2.784.663 2.587.751 2.943.787 3.177.046.3-.05.713-.208.893-.032.037-.037.039-.084.032-.028 0-.12-.027-.204-.051-.268-.078-.362-.072-.462.028-.096.096-.137.248-.138.51 0 .256.028.34.159.473.131.133.324.208.595.23.164.012.22.012.33-.001zM14.66 16.39a.31.31 0 0 0 .16-.192c.02-.058.022-.098.022-.356 0-.255-.003-.299-.021-.354-.04-.121-.136-.196-.278-.217-.041-.01-.2-.01-.355-.01-.365-.001-.378-.01-.446-.184-.068-.18-.096-.326-.113-.602a85.799 85.799 0 0 1-.012-1.94V10.77h.35c.454 0 .507-.01.602-.113a.465.465 0 0 0 .102-.24 3.273 3.273 0 0 0 0-.534c-.026-.16-.099-.271-.211-.322-.057-.025-.065-.026-.45-.03h-.392l-.003-1.22c-.003-1.09-.005-1.227-.021-1.278a.378.378 0 0 0-.201-.247c-.052-.024-.072-.025-.32-.029-.27 0-.356 0-.429.038-.087.042-.148.133-.185.278-.014.054-.032.346-.076 1.262l-.06 1.194s-.08 0-.18.01c-.206.01-.263.022-.327.086-.092.092-.12.19-.127.455-.01.334.02.487.115.588.075.081.134.1.345.106l.173.01v1.785c0 1.7.006 2.019.034 2.274.041.37.13.709.241.928.194.38.544.617.988.668h1.005l.07-.04zm-7.447 0c.098-.053.16-.154.2-.332.016-.077.018-.401.018-4.518 0-4.184-.001-4.44-.02-4.51-.05-.194-.19-.29-.378-.26-.035.01-.344.084-.686.175-.343.09-.684.18-.758.198-.17.043-.214.062-.281.126-.105.098-.122.185-.122.606 0 .416.016.5.12.604.094.095.189.1.456.03.103-.026.193-.048.2-.048.01 0 .014.784.017 3.763.003 3.436.005 3.77.021 3.84.048.202.113.296.236.34.034.013.133.016.487.014.435 0 .445 0 .49-.027zm3.203 0c.092-.046.152-.135.197-.29l.024-.084.003-4.435c.002-3.194 0-4.456-.01-4.509-.033-.2-.145-.308-.322-.308-.066 0-.198.03-.857.204-.56.147-.799.214-.849.239a.34.34 0 0 0-.17.184c-.024.06-.024.071-.024.479 0 .415 0 .417.026.483a.362.362 0 0 0 .083.12c.1.1.172.105.456.034a5.46 5.46 0 0 1 .208-.05c.008 0 .012 1.202.014 3.791l.003 3.79.026.086a.48.48 0 0 0 .135.23c.078.062.085.063.57.06.414 0 .447 0 .487-.024z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.11ty.io\",hex:\"000000\"},Ello:{title:\"Ello\",slug:\"ello\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Ello icon</title><path d=\"M12 0C5.377 0 0 5.377 0 12s5.377 12 12 12 12-5.377 12-12S18.623 0 12 0zm6.96 13.8c-.8 3.16-3.68 5.4-6.96 5.4s-6.16-2.24-6.96-5.4c-.08-.36.12-.76.48-.84s.76.12.84.48c.68 2.56 3 4.36 5.64 4.36 2.64 0 4.96-1.8 5.64-4.36.08-.36.48-.6.84-.48.36.08.6.48.48.84z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://ello.co\",hex:\"000000\"},Elsevier:{title:\"Elsevier\",slug:\"elsevier\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Elsevier icon</title><path d=\"M11.34 11.44v.169l-.043.126.043.085.042.042h.084l.084-.085h-.084l-.042.043h-.042l.042-.085v-.084l.042-.084v-.085l-.084-.086-.085-.042h-.128l.086.042.085.044m3.967.464v-.042h-.042l-.043.126.085.085.084-.043h-.084v-.126m6.583 8.904l.21.084.15.042-.107-.042-.253-.084M2.856 5.445v-.168l-.043-.127-.126-.126-.127-.085v.043l.043.168-.043.169-.084-.253-.169-.21-.126-.127-.169-.127-.337-.126.169.253.126.295.084.168.17.127.168.084.168.042v.17l.085.126.084.168.127.127v-.59m-.675-.254l-.084-.126-.127-.21-.126-.254.168.084.169.127.169.21.084.127.042.211-.295-.169zm.636.717l-.154-.243-.042-.234.046-.17-.04-.221.136.158.013.176.04.534zm10.289 9.854l.217-.145-.052-.03-.165.175m3.677-12.638l-.18-.166-.116-.256-.168-.253.042.253.126.21.127.212.126.084.127.042.148.003-.138-.074-.094-.055m-3.701-.269l.317.218.204.084.182.043.107.021h.19l.149-.028-.09.086-.21.136-.44.122-.225.09-.084.043-.063.074-.096.155-.088.176-.044.088-.087.087-.263.176-.203.29-.116-.253.148-.105.159-.136.19-.221.086-.142.044-.088v-.135l.044-.087v-.132l-.217.176-.188.14-.136.094-.113.07-.088.262v.176l-.088-.044-.028-.137-.043-.189-.042-.116-.042-.127-.01-.189.034-.202.175.22.132.13.131.045.044-.176v-.175l-.088-.132-.185-.111-.105-.126.306.158.106.032.098.004.234-.027.164-.041.116-.037.078-.02-.176-.064-.126-.071-.127-.085-.084-.042-.133-.055-.162-.03-.169.043-.084.042-.056.022-.029-.064V2.73l.043-.042.042-.042.126-.043h.127l.084-.042.169-.126.21-.38.127.169.127.126.168.127.169.084.21.042h.085l.084-.042-.295-.337-.21-.127-.17-.126.296-.042.169-.085.126-.084.084-.126v-.17l-.126.085-.127.042-.295.043-.175.04-.127.084-.084.085-.084.168-.169.043-.169.084-.126.126-.127.127.043-.169.042-.21-.042-.254-.085-.168-.042-.169-.04-.064-.105.253-.042.116-.037.156.013.301-.09-.113-.036-.1-.043-.127-.084-.085-.128-.042-.21-.084.126.169.084.21-.127.127-.126.084-.253.127v-.253l-.084-.211-.127-.169-.169-.168v.295l-.016.189.018.15.042.295-.21-.127-.17-.168.085-.085.084-.084.043-.126.042-.085-.127-.421-.042.042v.084l-.126.127-.06.146-.042.306-.151-.2-.172-.128-.211-.126h-.211l.126.169.085.168.21.211.12.03.137.022.08-.008.212.126.38.38.041.084v.042l-.042.043-.168-.043h-.17l-.126.043-.168.042-.295.168-.211.211h.59l.253-.042.127-.042.126-.084v.084l-.042.084-.042.169v.169l.042.168.098.091.052.064-.108.098-.175.071.116.052.06.046.17.042.126.042-.127.127-.168.126-.127.169-.084.169v.21l-.042.043-.085-.169V4.67l-.042-.085-.168-.126-.17-.127-.17-.084.085-.127.084-.168.169-.253.084-.085.127-.126-.253.042-.253.127-.211.126-.169.169-.126.21v.127l.042.127.169-.043.21-.084.127.253.169.295.126.253.127.085.168.084v.21l-.126-.168-.127-.126-.295-.211-.337-.169-.127-.126-.126-.17-.085-.168-.084-.126-.253-.253-.422-.38.08-.013.064.01.327.158.21.032.244-.042.133-.103.126-.126-.253-.042-.21-.085H8.78l.253-.295.253-.295-.506.127-.084.042-.085.084-.057.167-.042.095-.112.202-.21-.169-.253-.168-.464-.38-.127-.042-.042-.084-.084-.422-.042-.127-.043-.084-.084-.126-.084-.043-.174-.128-.38-.126.085.295.084.253.169.253.253.169.126.042.169.084-.126.042h-.085l-.21-.084-.254-.042-.21-.042-.127.042-.169.042-.126.126-.085.085v.042l.549.084.28-.015.126-.042.142-.07.126-.041h.043l.106.01-.338.295-.02-.052-.168-.043-.253.043-.253.042-.253.084-.17.169-.083.126v.127l.084-.085.084-.042.085.253.084.085.21.126.296.127.126.084.127.084-.214-.013-.18.01-.407.003-.211-.042-.169-.042-.21-.042h-.211l-.127.042-.126.084-.211.253v-.295l-.043-.253-.084-.126-.253-.253-.084-.127v-.589h-.042l-.043.127-.084.126-.21.253-.127.253-.042.127v.169l.042.042v.126l-.169-.126-.253-.211-.337-.127-.295-.168-.338-.169-.337-.084-.127-.085-.168-.042-.26-.168-.126-.085-.127-.084-.126-.042-.17-.042H.674l-.295.042v.084l.042.042.21.169.507.169.253-.043h.042l.084-.042h.043l.084.042-.169.085h-.168l-.296.042-.295.084-.21.169-.254.253-.042.084.422-.042.21-.042.338-.169.127-.126.253-.253.21-.042h.085l.084.084-.169.126-.21.127-.127.169-.042.084-.042.126-.042.043-.043.042-.042.084-.042.084.21-.084.254-.084.169-.127.084-.126.042-.127.042-.084V3.32l.042-.084.338.126.295.17.39.218-.306-.032-.263.075-.158.106-.137.052.179.052.285.064.138.098-.253.042-.337.127-.169.084-.126.085.421.084.211.042h.21l.254-.084.126-.085.085-.084V4.25l-.086-.088.136-.084.053-.075-.02-.094.465.383.253.253.253.21.251.25.078.098.36.47.313.38.421.38.211.168.253.127.548.253.59.21-.294.085-.127.084-.169.085-.168.253-.211.21v.043h.295l.295-.042.253-.127.085-.084.084-.127.084-.126.085-.169-.085.422v.21l.043.127.084.084.084.043.085.084.042-.21.042-.254-.042-.084v-.085l-.169-.337.169.084.21.085.338.295.253.21.21.254.422.548-.21-.127-.17-.042h-.126v-.168l-.042-.17-.042-.126-.126-.126-.211.422v-.211l-.085-.211-.253-.38-.042.043v.253l-.084.253-.042.253.042.126.042.127-.084-.043-.042-.126-.043-.084-.042-.085-.126-.168-.169-.127-.169-.042h-.464l.127.126.169.085.253.295.126.126.127.085.168.084h.211l.042.042v.127l.043.042.126-.169.084-.168-.042.21-.042.17-.126.294-.38-.084-.38-.084-.379-.17-.336-.166v-.295l-.042-.253-.126-.295-.169-.211v-.042l.042-.043.085-.084.084-.126.042-.211v-.38l-.042-.042-.042.042v.042h-.338l-.253-.042.085-.042.084.042h.21l-.21-.21-.253-.17-.253-.084-.295-.084h-.145l-.042.035.06.05.042.042.085.126.126.084.295.17h-.379l-.127.083-.126-.337-.084-.169-.096-.19v-.05l.053-.099.043-.21.01-.134-.029-.14-.162-.303-.098-.105-.028.064-.05.176-.006.21.106.345-.167-.22-.028-.204v-.126l-.085-.253-.042-.085-.084-.084-.169-.084-.169-.085-.084-.042.042.084.085.211.126.422h-.042L3.84 5.39l-.085-.084-.084-.043h-.253l-.127.043h-.084l-.084-.043.21-.253.085-.168v-.169l-.084-.464-.338.59-.042.127v.169l.084.253-.084.38v.21L3 6.105l.064.078-.275-.16-.295-.127-.295-.084v-.213l-.042-.127-.085-.168-.084-.127-.253-.21-.221-.247-.02.211.022.179.01.067.084.169.21.21.254.212v.042h-.091l-.169.084-.21.042-.17.085-.168.126-.042.084-.042.127.042.295.042-.042.042-.042.253-.127.169-.168.169-.211.126-.211.295.084.295.127.506.422-.168-.043-.169-.042-.169-.042-.21-.042h-.17l-.126.042-.168.084-.127.127h.169l.126.084h.085l-.338.169-.21.084-.17.042-.041.043h-.169l.042.337.127.295.168.295.211.253-.253-.168-.21-.253-.17-.211-.252-.169-.253-.084-.169-.042-.169.042L0 7.328v.042l.169.084.337.253.169.085.337.126.337.042.253.127-.21.042H.97l-.211.042-.169.085-.168.126-.127.169-.042.168h.422l.38-.126.337-.211.295-.21.084.084.084.084.127.042.042.084-.295.127-.127.042-.168.084-.127.085-.126.168-.085.169-.084.169-.042.295.084.042.422-.337.337-.422.253-.422.127.043.084.084-.21.253-.17.253-.084.21.042.254.043.126.084.127.169-.253.126-.253.042-.042.127-.043.126-.042h.253l.042.042-.168.085-.127.084-.084.127v.042l.169-.042.21.042.17.042h.126l-.125.059-.122-.002-.21-.042-.211.042-.211.127-.302.324v.042l.59-.085.295-.126.127-.084.126-.085.043-.084.084-.042.042-.042.042-.043.127-.042.084-.042.169-.169.084-.084H3.5l-.422-.042h-.126l.253-.127.253-.21.21.084.211.126.38.253.169.127.21.084h.127l.167.056-.243.01-.093.019-.168.042-.085.042h-.168l-.085.042.169.042.126.085.296.1.295-.016.126-.042.127-.085.042.085v.126l-.042.127.042.126.084.169.127.169.168.126v-.295l.043.042v.042l.168-.168.169-.127.126-.126.085-.17.084-.379.042.085.042.084.043.21v.212l.042.084.042.042v-.126l.042-.085.042-.168.085-.169-.043-.084-.042-.085-.126-.042-.127-.042.169-.042.21-.084.718.253.042.042-.253.084-.169.084-.169.127-.126.126-.084.17h.337l.126-.043.127-.084.337-.338.127-.042.126.042.127.042-.295.085-.127.084-.126.084-.043.085v.042h.043l.168-.042.211-.042.169-.085.084-.084.042-.084.717.042.38.21.168.085.211.084.127.042h.126l.211-.084.127-.042h.21l.127.084-.042.085-.042.042-.085.042-.042.042-.042.127.042.084h.042l.085.084v.042l-.043.085v.084l.085.042.042.042v.085l.042.084.084.042h.127l.084-.084v-.127l.042-.042.043-.042h.084l.042-.042.042-.084.042-.17h.043l.126.127.127.127.084.126.084.17.042.336.085.38.042.38v.252h-.084l-.085-.042-.084-.084-.084-.127-.127-.126h-.042l-.084-.042-.127.042-.169.042-.042-.042-.084-.042-.042-.085v-.126h.084v.042h.127l.126-.042.042-.042v-.211l-.042-.042-.084-.042h-.042l-.127.042v-.039l.042-.042.042-.127.135-.084.085-.042h-.085l-.126.042-.085.084-.084.127v.126l-.084.253.042.169.042.084.042.042.127.043h.084l.253-.043.127.085.042.084v.042h-.169l-.169.085-.084.168-.035.176.035.035-.042.085h-.084l-.085-.085h-.084l-.169.085-.042-.043h-.042l-.084-.084v-.126l-.085-.085-.042-.042-.084.042-.042.042-.127.085-.042.042h-.084l-.086.044-.043.084-.042.127.042.042.043.042v.126l-.38.043-.21.042-.17.084-.042-.042h-.042l-.084.042-.084.042-.253.042.126-.168h-.169l-.126-.042.042.084h.084l.043.042v.042l-.043.042v.043l.043.042h.084l.126-.042.127-.085.084-.042.085.042v.042l-.043.043-.168.084-.127.169-.084.168-.127.127-.168.084h-.085l-.084-.042h-.042l-.084-.084-.043-.127.043-.169.084-.168.084-.042h.085l.042.042.084.084.042.042v.127l-.042.042-.084.084h-.085l-.084-.084.042-.042.042-.085-.042-.042-.042.127-.042.084.084.084.085.043.084-.043.042-.042.084-.126v-.253l-.084-.042h-.042l-.042-.043h-.169l-.169.169-.084.169.042.21v.043l.085.084.084.042.084.042.169-.042.295-.126v.084l.042.084.042.043v.042l-.042.084v.21l.085.085.084.042.084.043.042.084.085.042.042-.126v-.085l-.042-.126v-.127l-.127-.126-.084-.042h-.084l-.043-.043-.042-.084-.042-.126.127-.253.084-.085.084-.084v.042l-.042.042v.211l.084.042h.085v.127l.042.084.042.042.042.085-.084.084.084.042.042.084v.085l.043.084h.042l.042.042.042.085.042.042.085-.042h.042l.042-.043v-.084l.084-.042.042-.042v-.085l.085-.042.042-.084v-.21H9.79l-.043-.043.085-.169.042-.042.084.042.169-.126.084-.169-.084-.084v-.085l-.084-.126.084-.042h.21l.17.042.126.042-.127.084-.168.169v.084l-.042.043-.085.126-.126.084v.17l.042.083.126.085v.042h-.042l-.042.126.042.127.085.084.042.085v.126l.042.042h.169l.042.085.042.084.042.042h.169l.042-.084.084-.085h.127l.042-.126v-.169h.084l.076-.072.022.285.064.243-.116.01-.085-.042-.084.042-.042.042-.127.126v.17l.043.083.084.043-.127.126-.084.253.042.127v.042l.085.042.295-.084.168-.085.085-.126.042.042h.126l-.084.295-.042.337-.042.59.042.465.042.421v.085l.042.126v.084l-.042.043-.042.042-.042-.085v-.042l-.085-.168-.042-.085-.042-.084-.042.042v.084l-.084.085-.043.084v.084l-.042.043v.042h.042l-.042.042h-.084l-.084.042h.084l.084.084-.126.043-.042.084-.085.126h-.126l.084.127.084.042h.085l.126-.084.127-.169.042.042v.169l-.042.169v.126l.042.169.084.126.085.127.253.126v.043l-.043.126-.126.084-.127-.084-.126-.042h-.295l-.295.126-.296.085h.17l.21-.085h.21l.17-.042.084.085.084.042h.084l.085.042v.126l-.085.253-.084.085.084-.042.085-.043.084-.126v-.211l.042-.042h.042l.127-.042h.21l.127.042.169.042.127.084.084.127.126.042.085.042.042.085v.126l-.042.169v.084l.084.084h.084l.127.043.169.042.168.126.169.169.084.126.127.043.084-.043.127-.042.21-.126.127-.042.084-.043h.042v.043l-.21.126-.253.169.168-.042.127-.043.084-.084.127-.042h.042l.042.042-.127.042-.084.085h.127l.126-.085.127-.042h.126l.127.21.168.127.127.085h.084l.084-.042h.338l.337.084.633.169h-.296l-.253-.085-.253-.042-.548-.042h-1.056l.38.042.38.042h.379l.38.042h.084v.043H14.22l-.043-.043-.168.043h-.464l.169-.127.126-.126-.337.126-.338.127v-.17l.211-.041.085-.042.084-.085h.084l.042.042h.043l.042-.042-.338-.295-.126-.126-.211-.127h-.21l-.043-.042v.126l.042.169.042.084.127.127v.21l.042.212h-.38l.043-.043.042-.042h.126v-.126l-.126-.127V21.8h-.084l-.085.042-.126.084-.127.127-.168.126h-.043l-.084.042h.295l.253-.042.042.042-.337.043h-.337l-.633.042-.084-.042h-.127l.085-.043h.168l.085-.042h-.76l-.758-.084H8.695l-.633.084-.632.085H5.995l-.338-.085H5.49l-.17.042H3.503v-.042H3.29l-.211.042-.169.043-.21-.043H1.517l.042-.042.085-.084.168-.084H1.73l-.042-.043v-.084l.042-.084.169-.127-.043-.042-.084-.042-.084.042h-.042l-.085-.042-.042.042v.042l-.042.169v.084l.042.042v-.084l.042-.084.042-.042h.043l-.043.084v.21h-.084l-.159-.126.033-.084v-.127l-.043-.042-.074.127.042.084.042.127.085.084-.042.042h-.043l-.084.084-.126.043H.685v.38h22.441l.061-.08v-.295l-.024-.078v-.042l.046-.096v-.085l.084.043.042.042.085.042h.042l-.127-.169-.084-.168-.042-.127-.084-.084v-.042h.042l.042.042.21-.042.17.042.21.042.169.084-.042-.126-.042-.085-.211-.084h-.211l-.084.042h-.211l-.085.042-.084.043-.042-.043.126-.042.085-.084h-.127l-.126-.042h-.042l-.17-.169-.336-.169-.147-.042.106.042.211.169.169.169.084.084-.127.042-.042.085h.253l.042.084v.042h-.379l-.042.042h-.042l-.043-.042v-.042h.043l.042-.084-.169.042-.21-.127-.212-.126-.337-.042h-.337v-.043h-.38l.169-.084h.506l.675.169.128.067v-.042l.042-.042v.042l.042.084.042.085v-.169l-.297-.194-.168-.084-.169-.042-.337-.085-.042.042h-.127l-.126.043-.253.084-.17.084-.126.085-.126.042h-.127l-.126-.042.169-.085v.085h.126l.042-.043.085-.126.084-.084.253-.127-.38-.084h-.21l-.17.042.212-.169.21-.084.254-.042.253.042.126.126.042.043v.084h-.042l-.042-.042-.042-.042h-.085v.042l.085.084.126.042.127-.126v-.085l.042-.042-.042-.126-.085-.042-.168-.085h-.338l-.253.085-.253.168-.253.211-.126.042-.084-.042.21-.21.127-.085.169-.042H20.3l-.126.042-.085.084-.126.127-.085.084h-.084l-.042-.042.38-.38.21-.084h.085l.126-.084h-.21l-.17.042-.168.084-.127.127-.168.295h-.085l.043-.169.126-.168.169-.17.168-.083.253-.085h.127l.126.085.043-.043v-.042l-.043-.084-.168-.042H20.3l-.126.042-.127.084-.21.169-.17.253-.126.253.127-.464.126-.21.127-.17.126-.084h-.084l-.127.085-.084.084-.084.084-.127.253-.084.211-.042.084-.043.043-.042-.085v.127l-.168.084-.043-.042-.042-.084.042-.085.043-.042.168-.084.042-.548.085-.59.042-.254v-.253l.042-.253.042-.084.042-.127-.042-.548v-.589l.042-.8v-.886l-.126-1.014-.127-.337v-.59l-.084-.549-.126-.548-.17-.548-.041-.042-.169-.085h-.042v-.126l.042-.084v-.13l-.042-.043-.084-.042-.085.042-.126.085-.127.042v-.084l.085-.043.084-.042.121-.175.053-.263-.005-.152-.043-.084-.02-.105.027-.121-.131-.112-.127-.042-.084-.084-.127-.042-.084-.043-.042-.084.042-.084-.169-.085-.21-.042-.17.042-.168.043v.126l.042.127-.126.084-.127.126-.042.085-.042.126-.169.211-.126.211.042.084h.126v.085l.043.042h.084l-.084.042-.043.042v.127l-.042.084-.042.042-.042.084-.169.085-.126.126-.169.211-.084.211-.169.506-.253.253-.042.042v.085l-.042.042h-.042l-.043-.085-.168-.126-.127-.169-.084-.168-.042-.211H15.2l-.043-.042-.042-.085-.042-.126-.126-.253-.043-.085-.084-.126-.042-.042h-.084l.042-.085-.042-.042h.042l-.085-.169v-.084l-.042-.084.085-.042h.042l.042-.043v-.084l-.042-.126-.042-.043.042-.042.126.085.085.042h.084l.042-.042V11l.042-.042.085.127.042.042v.084H15.2l-.085-.084h-.042v.042l.084.084.085.043v.042l-.05.042.041.042.042.042h.127l.042.042.084.043h.043l.042.084h-.042l-.17-.084h-.21l-.126.126-.085.127v.168l.042.085.043.084.126.084.084.042h.17l.041-.042.042-.126v-.127l-.126-.126h-.084l.084.042.042.084v.169l-.042.084h-.042l-.169-.084-.042-.084-.042-.085v-.21l.042-.085.084-.084.169.042.169.084.168.042.211.043.169-.043.126-.126.085-.127.042-.168-.042-.169-.043-.21-.084-.17-.126-.126-.085-.084-.084-.042-.169-.127-.042-.042v-.042h.127l.126.042h.127l.126-.042v.042h.084l.127.084.126.042h.127l-.169-.084.139-.05.148-.02.159.041-.063.043-.074.032-.138.04h.126l.127-.042.084-.084-.084-.043-.085-.042h-.126l-.169.042-.126.043-.043-.043h.043l.042-.042.126-.126.042-.085v-.084h.17l-.043-.253v-.084l-.042-.042-.053-.061.043-.062.094-.046.169-.042.222-.007.159.049.084.042h.042l-.463.127-.169-.043h-.127l.043.043.21.042h.211l.211-.085.169-.084-.38-.169h-.295l-.126.085-.127.084-.253-.126-.253-.043v-.042h.127l.118.024.094.018h.211l.21-.084.17-.126-.338-.085h-.169l-.126.085-.127.042-.084.042-.126.042-.085-.084-.042-.085v-.126l.084.084h.296l.38-.168-.116-.06-.168-.042-.307.017-.105.015-.064.03-.084-.043.042-.042.506-.085h1.393l.169.211.169.169.421.295.085.042-.043.253v.295l.043.254.084.21.084-.21.085-.211V9.74l-.043-.253.043-.042.421.21.253.085.253-.042.127-.043h.126l.085-.042.126-.042-.253-.126-.253-.127-.337-.169-.169-.042h-.21l.21-.084.169-.127.168-.126.17-.169v-.084l-.127.042h-.127l-.253.042v-.168l.042-.169.211.126.253.085h.506l.042-.085-.21-.084-.211-.126h-.043l-.084-.043-.21.043h-.127l-.085-.043-.084-.042.253-.084.295-.042h.253l.253.042.378.3.34.46.085.17.084.379.127.126-.084.38-.043.337v.211l.043.169.084.126.126.127.085-.295.042-.296V9.91l-.084-.126-.085-.127-.126-.337-.085-.38.043.043v.084h.084l.084.253.127.21.126.212.169.084.094.013.12-.028-.013-.12-.029-.12.159-.047.116-.073.12-.162.067-.14.042-.126-.042-.127.024-.274.018.064.042.084.085.169-.042.21-.043.098-.168.211-.169.211-.084.126v.253l.042.17h.042l.295-.296.127-.169.042-.21v-.17l-.003-.154.013-.078.056.197.035.402-.143.212-.042.127-.043.169v.674l-.042.169.127-.042.084-.127.169-.21.042-.211.042-.253-.042-.211-.084-.211-.043-.38.073.014.049.049.047.106.042.337.085.338.126.084h.169V9.91l-.042-.126-.169-.169-.169-.126-.21-.127V9.32l-.085-.337-.126-.338.276.373.155.162.191.12.148.049.183.021.133.022-.063-.126-.077-.182-.101-.14-.145-.155-.26-.134-.267-.12-.266-.112-.14-.17-.186-.154h.127l.169.042.2.155.14.106.113.071.307.091.182-.02.127-.084-.125-.022-.14-.19-.204-.077-.347-.028-.338-.085-.236-.098.11.014h.21l.338-.084.295-.127.253-.253v-.042h-.717l-.21.042-.17.084-.126.127-.084.169-.464-.17-.464-.083.127-.127.042-.084.042-.042.21.084.17.042.379-.042.295-.084.211-.127-.506-.126h-.59l.253-.17.253-.126.253.169.253.127.253.042.276-.02.14-.03.09-.035.042-.042-.159-.049-.217-.07-.302-.176-.13-.07-.11-.035h-.113l.12-.097.068-.009.253.127h.379l.253-.127.253-.126-.253-.043-.21-.042-.254-.042-.253.042.042-.168.085-.127v-.35l-.042-.043h-.085l-.506-.169-.21-.084h-.296l.253-.126.253.126.169.042.295.042.337-.084.296-.126.21-.043.085-.042.084-.042h-.253l-.548-.042h-.295l-.253.042.21-.126.254-.338.126-.21.253-.507.042-.126-.042-.169-.084-.337-.085-.295-.126.464-.042.463v.253l.042.211-.211.338.042-.506v-.296l-.168-.337-.338.042h-.168l-.552.18.182-.434.14.07.253.043h.14l.169-.071.464-.211-.506-.155-.296-.014-.253.056.183-.169.759.029.229-.054.169-.084.168-.17.118-.272-.097.055-.095.017-.22-.012h-.338l-.337.043-.127.084-.126.084.042-.084v-.297l-.085-.21-.168-.212-.169-.21v.632l.025.322.071.169.032.101-.197.182-.169.338-.168.295-.183.261-.178.169.107-.177.081-.16.046-.135.042-.17-.042-.168-.084-.126.337-.042v.126h.042l.169-.59.042-.127-.042-.168-.084-.253-.127-.253-.084-.253-.085.168-.042.211.085.337.084.38.042.169v.21l-.084-.042-.042-.253-.043-.21-.042-.127-.084-.084-.211-.17-.21-.168-.17-.168h-.042l.042.253.085.21.126.211.169.211h-.169l-.126-.042h-.253v.042l.295.21.169.127.168.043v.168l-.042.127-.169.253-.084.253-.042.168.042.17-.21.168-.212.126-.21.085-.211.126-.253.084-.295.043-.506.042-.549.084-.253.084-.21.127-.296.169-.337.126-.295.042-.337-.042.21-.169.211-.21h.085l.042.042.084.084h.084l.127.042h.084l.253-.084.169-.127.169-.168h-.717l.042-.085.042-.126v-.337h.169l.21-.043.17-.042h.21l-.169-.084-.168-.127-.169-.084-.169-.042h-.253l-.126.084-.084.085V4.12l.018-.172-.052-.273-.253-.337-.074.285-.01.263.075.32-.21-.21-.253-.085-.253-.084h-.296l-.084-.042v.084l-.21.38-.061.106.005.164-.043.21.043.253.084.085.042.084.21-.253.127-.295.043-.169v-.337l-.085-.127V3.93l.253.253.127.127.168.126.506.085h-.168l-.169.042-.169.042-.126.084-.295.211-.253.21.042.085.126-.084.17-.084h.336l.17-.043.126-.042.168-.084.085-.127.042-.084.084-.084.042-.253.127.084.168.042-.042.085-.084.042-.127.168-.126.169-.042.21-.338.043-.168.084-.085.043-.074.087-.116.179-.085.233-.684.113-.675.126-.253.085-.22.148v-.042l.041-.042.042-.085.043-.168v-.211l-.043-.337.211.168.211.127.253.042h.21v.042l.043.042.084-.042h.211l.253-.042.169-.084.179-.191.126-.21.074-.107-.168.042-.506.127-.169.084-.126-.211-.17-.422-.126-.168-.084-.127-.126-.042-.127-.042-.169.042v-.21l-.126-.212-.273-.324.064-.052.293.336.233.16.263.052.19-.042.043-.017L15.162 4l-.085-.084-.168-.162-.159-.117-.22-.084-.296-.032.285-.263.233-.105.305-.136-.062.243-.01.253.054.192.084.126.126.127.043.042h.084l.042-.253v-.253l-.169-.422.211.253.211.211.127.084.168.043.127.042h.168l.211-.042-.253-.211-.21-.211-.17-.084-.21-.085-.21-.042-.17-.084.253.042.296.042.126-.042.127-.042.126-.042.127-.127-.518-.14.2-.074.075-.095.076-.03h.168l.127.042.126.042.21.178.128.244.084.253v.042l.042.042.042.127.042.084.085.042h.126l.085-.084.042-.169.042-.126v-.34l-.084-.338-.169-.295v.21l-.084.211-.127.38-.084-.169-.127-.21-.168-.127-.203-.118.16-.05.127-.127.21-.295.17-.296-.17.043-.225.04-.211.042-.169.085-.168.126-.127.127-.084.168v.211l-.085.042-.126.042-.21.043.21-.17.084-.126.042-.126.127-.295.084-.338-.042.043h-.084l-.127.042-.168.126-.129.127-.042.168-.042.211-.084.253-.042.127h-.127l.127-.253v-.127l-.043-.126-.042-.085-.084-.084-.169-.084-.168-.085-.085-.084-.042-.084-.042.042v.084l-.042.127v.126l.042.127.169.21.168.17.085.126v.126l-.633.253.056-.173.163-.178.042-.084.012-.096-.008-.064-.014-.085-.11-.148-.05-.07-.084-.043-.042.253-.085.253-.057.241.05.154.014.128-.062.084-.113-.175-.218-.122-.261-.089-.191.005-.204.022-.189.062m3.44 6.25l.13-.048.269.051-.11.056-.064.062-.118.035h-.14l-.228-.038.26-.118zm-.313-.312h.218l.173.05-.163.064-.15.07-.213-.014-.111-.096.246-.074zm3.385-.562l.306.044.13.044.13.087h-.306l-.174-.044-.13-.087.044-.044zm1.852 1.582l.043.127.042.21-.085.464-.084-.084-.042-.084v-.253l.042-.211.042-.253.042.084zm1.198-.452l-.012.116-.015.117-.022.104-.098.134-.255.313-.04-.148.046-.233.094-.131.15-.21.105-.106.064-.162-.017.206zm.425.206l.174.165.133.233-.003.356-.172-.081-.098-.268-.034-.405zm-.154.536v.228l-.104.408-.105.091v.046h-.052v-.5l.052-.271.107-.228.102.226zm-.047-1.48l.317.146.218.197.084.134.091.182-.175-.042-.155-.043-.231-.168-.247-.31-.182-.208.28.111zm.211-.409l.182.084.05.091.105.085-.204.007-.234-.088-.187-.103-.162-.14.45.064zm-.872-.433l.084-.085.085-.042.253-.126h.632l-.168.126-.211.127-.169.042-.214.047-.334-.005.042-.084zm.66-3.974l.047-.304.042-.21.07.208.041.306-.059.234-.12.198-.021-.432zm-1.559-1.474l-.084-.267v-.169l.042-.126.077.197.05.101.128.361v.211l-.098.24-.042-.309-.073-.24zm-5.703.796l.275.138.457.37-.285-.007-.295-.113-.224-.225-.157-.21.23.047zm1.515-.213l.116-.37.04-.195.087.27.052.37-.062.359-.127.126-.076-.12-.072-.207.042-.233zm-1.064-.696l.064-.127.136-.137.169-.126.58-.18-.104.14-.085.126-.12.131-.11.132-.232.084-.126.075-.241.062.069-.18zm-3.649.021l.159-.116.163-.056-.097.183-.147.182-.147.09-.194.045.263-.328zM9.672 4.23l-.26.076.028-.192.17-.21.168-.127.246-.14.133-.04-.24.288-.114.216-.131.13zm.495.756l-.102-.226-.093-.186-.123-.2.077.025.086.042.117.096.13.157.053.417-.145-.125zM8.943 3.423l.293.025.299.092-.187.116-.238.02-.213-.045-.236-.117.11-.066.172-.025zm-.417-.029l.071-.163.06-.144.092-.1.137-.045.22-.069-.232.287-.16.182-.248.176.06-.124zM6.917 2.41l-.21-.21-.14-.31-.03-.196.218.097.149.113.189.156.089.275.059.273-.324-.198zm-.106.486l-.294.02-.457-.069.086-.108.204-.074h.23l.454.103-.223.128zm-5.565.198l-.26-.058-.332-.143-.188-.169.313-.034.26.058.26.116.26.174-.313.056zm-.086.377l-.337.169-.442.095.18-.22.262-.15.391-.101.167.007-.22.2zm.623.265l-.218.16-.214.107.108-.213.147-.212.337-.265-.16.423zm-.036 2.407l-.126.169-.354.163.017-.121.084-.169.169-.126.337-.127-.127.211zm.275-.496l-.253-.253-.168-.21-.042-.127v-.169l.421.38.127.21.042.254-.127-.085zm-.937 2.191l-.42-.168-.432-.277.356-.005.318.09.269.192.202.281-.293-.113zm.131.543l-.261.154-.314.094-.261.026.134-.206.388-.206.314-.025.346-.015-.346.178zm.53.481l-.231.263-.312.332-.14.07.097-.277.196-.361.245-.137.293-.167-.148.277zm.561.172l-.042.169-.253.464-.084-.338.169-.421.168-.17h.042v.296zm.317.936l-.512.12.25-.253.133-.106.133-.053h.177l.243.061-.424.231zm3.861-.398l.085.042.045.139-.087.327-.043-.253-.084-.253h.084V9.57zm4.313 2.235l.053-.05.102-.051.103.05.05.053v.103l-.05.052h-.205l-.051-.103v-.054h-.002zm-1.975 2.633h.093l.093.096.047.096-.047.047v.097l.047.096.025.11-.118-.206-.093-.097h-.092l-.048-.096v-.096l.093-.047zm3.837 7.447h.066v.135l-.197-.068.131-.067zm-.356.285l.117-.086h.175l-.292.086zm.382-.096l.113-.083v.167l-.169-.083h.056v-.001zm.19-.604h.277l-.138.07h-.07l-.069-.07zm.125.248l-.066-.068.198-.066h.197v.068h-.066l-.131.067H13v-.001zm.261.032h.255l-.255.087h-.19l.19-.087zm-.096.212l.063-.079h.253l.062-.08.063.08-.252.08-.251.079.062-.08zm9.83-.34l.098.096h-.098v-.096zm-.001.293l.045-.045.046.045-.046.046h-.09l.045-.046zm-.166-.131h.092l.045.045v.046h-.091l-.046.045-.09-.045.09-.091zm-.313.048l.057-.08h.086l-.143.08L22.4 22h-.172l.287-.166zm-.015.149h.187l-.123.07-.063.073h-.062l.06-.143zm-.228-.285h.187l-.125.07-.062.073h-.063l.063-.143zm-.192-.06l.07-.063.071.064-.07.062h-.071v-.062zm.1.235l-.048.047h-.047l-.048.048h-.047l-.047-.048.094-.047.048-.047.094.047zm-.072-.339l-.15.042-.108-.114-.108-.115.366.187zm-.305.22l.094-.048.048.047v.048h-.048l-.047.047-.094-.047.047-.048zm.135.225l-.103.114h-.103l-.052-.058.052-.057h.206v.001zm-.275-.003h-.05l-.104-.057.051-.058h.052l.053.058h.05l-.052.057zm.005-.63l.126.085h-.126v-.086zm-.06.22l.136.046-.137.09h-.045l-.091-.045.045-.045.091-.046zm-.394-.039l.091-.045.183.045-.137.092h-.18l.043-.092zm.216.312h-.212l.052-.059h.054l.106.06zm-.454-.393l.095-.047.094.047-.14.095h-.187l.138-.095zm.174.238l-.055.083h-.333l.166-.083h.222zm-.5-.324h.227l-.137.092h-.09l-.046-.046.045-.046zm0 .248h.153l-.152.102-.05.05-.102-.05.152-.102zm.14.257l-.048.096h-.292l.05-.049.097-.049h.194v.002zm-.404-.39h.096l.05.05-.099.097h-.098l-.048-.049.1-.098zm.04.351l-.146.098h-.194l.196-.098.048-.049.097.049zm-.065-.884h.09l.18-.09.045.046h.046l-.09.135-.089.046-.09.045-.045-.045-.046-.046h-.045l-.046-.045.09-.046zm-.203.005h.076l-.076.091v-.09zm-.072.246l.045-.045.18.045-.134.046h-.09v-.046h-.001zm-.022.194h.113l.17.056-.057.056h-.113l-.17-.056.057-.056zm.029.265l.049.05h.097l-.146.146-.097.049-.097-.05.097-.097.05-.049.047-.049zm-.277-.556h.213l-.053.106h-.106l-.16-.052.106-.054zm.14.244l-.066.088h-.131l.065-.088h.132zm-.202.275l.242.05-.193.146-.098.049-.145-.05.049-.048.048-.049.05-.049.047-.049zm-.102-.23h-.227l.057-.057.056-.057.227.057-.113.058zm-.011-.369h.11l-.166.112h-.167v-.056l.056-.056h.167zm-.23-.202h.063v.07h-.124l.061-.07zm.068.808l.097-.049h.098l-.194.147-.097.049h-.05l-.097-.05.243-.097zm-1.125-.262h.087l-.087.088-.044-.044v-.044h.044zm-.05-.126l-.004-.08.084.007.047.066-.066.009h-.06v-.002zm.218.212l.091-.089.091.046-.136.136-.135.046h-.091l.18-.139zm.139-.296h.089l-.09.089-.089.046h-.09l.136-.09.044-.045zm.032-.13h.224l.09-.05-.046.05-.135.05h-.179v-.05h.046zm-.037-1.613h-.08l.081-.069v.07h-.001zm-.857-1.928l-.091.046h-.091v-.046l.045-.043h.412v-.046l.045-.133h-.136l-.046-.044-.138-.18-.091-.18-.091-.133-.183-.312.125.034.091.046v.089l.366.312.15.1h.091l.149-.032.182-.09.106-.013.11-.007-.057.3-.091.268-.262.602.273-.089.275-.09.23-.178.325-.24-.005.17-.103.134-.217.091-.182.07-.149.154-.62.272-.098-.052-.048-.105-.045-.224-.046-.223-.136-.223h-.05v-.005zm.039.112l-.065.074h-.042l-.096-.02.203-.054zm-.587-.128v-.086h.055l.054.042v.042h-.11v.002zm.118.062v.084l-.054-.042-.054.042-.054-.084h.162zm1.497-4.667v.126l-.168.117.027-.145.141-.098zm-.145.012l.022-.18.17-.11-.011.121-.085.084-.096.085zm.522 1.454l-.14.143-.289.184-.312.125.06-.17.08-.028.111-.05.366-.18.211-.205-.087.18zm.027.492l.148-.067.012.064v.054l-.18.064.02-.115zm.016.462l.223-.113.022.118-.074.054-.274.108.012-.113.091-.054zm-.482 2.389l.206-.09.489-.312-.044.115-.5.354-.497.235.09-.211.256-.091zm-.177-.044l.106-.245.235-.059.21-.136.31-.237-.013.184-.425.267-.21.136-.213.09zm.833-.76l-.13.06-.26.162-.317.182.053-.091.028-.122.182-.09.211-.092.095-.064.15-.088.07.112-.082.03zm-.971-2.953l-.01.117-.06.087-.172.071.048-.158.074-.066h.05l.07-.05zm-.13-.055l.084-.258.251-.159-.028.204-.088.093-.22.12zm.086.312l-.075.162-.069.087-.263.07.07-.164.14-.037.197-.118zm-.123.342l.045-.044h.046l.045-.044.039-.057.13-.042-.037.143-.13.091-.15.053.012-.1zm.232.636l-.145.074-.08-.044.214-.089.222-.113-.21.172zm.238-.09l.33-.252-.073.153-.044.143-.23.12-.118.064-.13.07-.042-.09.307-.207zm-.076.313h.208l-.053-.102.107-.07.096-.06-.005.186-.095.096-.103.05-.08.073-.259.068-.204.042-.076.073h-.052l-.113.035-.094.015-.096.019-.054-.075.458-.148.415-.202zm-.48.512l.1-.121.277-.073.35-.16.177-.103-.231.233-.253.143-.174.075-.334.103.088-.097zm.708.834l.118-.046.169-.091.202-.106.081-.027.007.172-.278.13-.393.182.043-.078.051-.136zm.265-.272l-.253.137.025-.117.06-.047.11-.067.176-.095.21-.111v.126l-.328.174zm.322-.413l-.206.106-.305.179.057-.152.19-.108.267-.158-.003.133zm-.516-1.333l-.054.043-.064.09-.387.18-.327.116-.157-.093.2-.074.06.035.046-.067.366-.144.3-.148.157.047-.14.015zm-.51-.08l-.048.165-.092.054-.209.084-.273.091-.096-.116.37-.117.348-.162zm-.355.537l-.365.098-.23.06-.094-.115.215-.043.285-.079.189.08zm-.26.144l.288-.073.064.053-.308.138-.252.06-.069-.102.277-.076zm-.157.254l.288-.079.257-.138.08.017.087.059-.285.138-.355.106-.072-.103zm.433.228l-.022.091-.042.117-.38.084-.377.138-.003.037.049.048.401-.112.479-.138.074.106-.295.047-.214.102-.226.064-.218-.07-.104-.003-.04-.263.089-.03h.226l.177-.064.426-.154zm.12.47l.725-.301-.067.138-.14.037-.21.134-.832.25-.154-.104.678-.155zm.098.134l.26-.08.303-.132-.023.141-.521.187-.512.154-.09-.09.583-.18zm.064.175l.452-.17-.03.17-.71.228-.123-.005-.081-.07.492-.153zm-.336.314l.375-.113.366-.12-.032.103-.179.07-.228.094-.204.025-.098-.059zm1.436-1.103l-.137.088-.327.187.039-.162.12-.077.217-.11.095-.064-.007.138zm-1.124-1.427l.06-.19h.064l.14-.102-.027.096-.009.097-.228.1zm.318-.332l.207-.155.172-.127.165-.135.012.113.002.103-.138.108-.046-.045-.046.089-.146.108-.226.147.044-.206zm.128-.203l-.095.09-.248.136.027-.163.107-.063.204-.143.005.143zm-.093-.509l-.24.148.071-.146.05-.098.168-.105-.049.201zm-.214-.811v-.07l.13-.069-.13.139zm.08.008l.016.09v.084l-.08.047.01-.152.055-.069zm-.068.3l.079-.015-.005.142-.02.064-.112.042.053-.158.005-.075zm.052.264l-.052.136-.02.064-.174.095.032-.053.04-.077.05-.111.124-.054zm-.117.317l-.074.136-.084.095-.093.07.071-.214.086-.057.094-.03zm-.178.337l-.042.16-.164.108.08-.162v-.054l.126-.052zm-.05.791l-.07.123-.07.063-.348.123.069-.123.14-.124.278-.062zm-.099-.317l-.086.07-.113.024.095-.188.084-.043.084-.052-.064.189zm-.125.126l-.11.146-.112.048.055-.097.056-.05.111-.047zm-.158.18l-.206.217-.206.145.07-.145.136-.073.206-.145zm-.255.414l.012-.111.096-.037.005.059-.017.059-.059.027.123.121-.344.096-.069-.027-.042-.032-.044-.052.115-.044.135-.022.09-.037zm-.288-.015h-.105l.211-.118-.106.118zm-.128.067l.045.09-.045.045h-.091v-.135h.09zm.008.24l.118-.027.096.128-.113.037-.128.027-.059-.037-.032-.101.118-.027zm-.078.233l.13.013.091-.047.118-.007.06.07-.119.058-.195.06h-.046l.032-.053-.07-.094zm.545.246l-.204.047-.303.024-.007-.12.147-.007.136-.018.135-.037.096.111zm-.398 1.602h.054v.043h-.054v-.043zm0-.086v-.042l.054-.042v.086h-.054v-.002zm-.074-1.21l-.022-.171.307-.01.213-.06.102.083-.236.08-.227.04-.137.037zm.06.369l.1-.01.047.057-.047.037.037.084-.1.032-.036-.2zm.16.212l.01.073-.053-.01-.074-.016.118-.047zm0 .091h.048v.048h-.096l.047-.048zm.046.081h.05l.047.047-.048.05h-.096l.047-.097zm-.02.182h.05l.046-.047.05-.049.048.096.076.14-.123.005-.096.048v-.048l.096-.048h.049l-.049-.05h-.145v-.047h-.002zm.29.226l.075.088-.17.009h-.146l.194-.145.047.048zm-.226.226l.048-.048.096-.048h.24l-.144.096h-.096l-.145.048v-.048h.001zm.513.911v.044h-.21v-.044l.045-.044h.12l.045.044zm.012.115l.044-.029.044.042-.152.065h-.044l-.04-.016.148-.062zm.013.101h.12l-.044.044h-.12l.044-.044zm-.005.093l.08-.007.398-.086.044.044.006.108-.22.044-.225.045-.083-.103v-.045zm.5-.295l-.09.044-.09.043.045.044h.045l-.09.044h-.138l.092-.044v-.044l-.046-.043.091-.044.091-.044h.137l.09-.044.318-.177.417-.235-.012.216-.064.048-.134.08h-.045l-.116.036-.078.12-.09.044-.136.043-.091.044-.06-.086-.046-.045zm.195.41l.23-.073.136-.057.27-.137-.027.149-.253.168-.31.08-.046-.13zm.198-.144l-.12.056-.12.022-.018-.078-.03-.049.12-.038.168-.066v.153zm.104-.04h-.045l.003-.144.078-.062.055.025v-.087l.046-.044.222-.07v.176l-.21.15-.149.056zm-.344.41l.248-.048-.204.166h-.1l-.195-.009.251-.11zm.275.512l-.076.004h-.155l.002-.056.172-.044.135-.045v.23l-.095.041-.172.09v-.098l.093-.047.088-.043.079-.033-.071.001zm-.192.282l.111-.047.167-.046v.044l-.002.06-.103.051-.224.043.05-.105zm0 .21l.118-.051.163-.081-.047.094-.044.052-.244.051.054-.064zm.27.035v.108l-.093.003-.076.04-.047.004-.13.05.346-.205zm-.176.26l.177-.124v.144l-.08.038-.217.09-.06-.002.003-.052.177-.095zm.176.421l-.066.154-.238.168.304-.322zm-.157-1.375h-.16v-.055l.377.055h-.217zm.163 1.034l-.042.1v.05l-.094.046-.123.039-.076.039-.07.003.004-.057.401-.22zm-.23.304l.222-.09v.066l-.17.13-.135.042-.127.058.21-.206zm-.06.867h.187l-.094.047-.094.095h-.14l.141-.142zm.078-.154h-.093l-.047-.047.14-.094.047-.047.14.047-.047.047h-.047l-.093.094zm.288.206h.243l-.194.147-.098.049-.145-.049.194-.147zm-.133-.195l.113-.056.113-.057h.113l-.113.113h-.226zm.186-.346h.18l-.091.09h-.27l.09-.045.09-.045zm-.194-1.854l-.085-.015-.08-.06.418-.163-.08.164-.079.022-.094.052zm.266.405l-.116.064v-.064l.059-.064.116-.064v.064l-.059.064zm.044.265v.072l-.05.04-.104.053v-.07l.066-.062.088-.033zm-.164.776l-.062.006.003-.06h.159l-.1.054zm.083-.252l-.105.105v-.115l.2-.047-.095.057zm-.14-.135l.116-.136.132.008-.248.128zm.28-.93l-.052.052-.157.052.052-.052.052-.053.105-.052v.052zm.027-.298v.054l-.054.054h-.054l.108-.214v.106zm.12-3.569l.006.145-.11.044-.3.123.024-.13.125-.069.153-.062.102-.05zm-.075-.35l-.065.042-.184.082.029-.145.102-.02.06-.045.058.021v.065zm-.043-.409l-.156.091.022-.07.007-.07.127-.018v.067zm-.009-.146l-.123.043.012-.064v-.069l.084-.022.027.112zm-.09-.473l-.045.09-.179.133-.207.135-.263.101.042-.172.137-.07.236-.163.234-.184.046.13zm-.08-.578l.007.098-.134.113-.189.113-.013-.147.111-.088.198-.158.02.069zm-.022-.13l-.084.047-.071.052-.08.053.038-.135-.088.066-.044.123-.179.126.04-.207.146-.127.15-.126.067-.08.07-.037.035.245zm-.054-.324l-.086.057-.23.196.078-.224.21-.182.028.153zm-.226-.052l.008-.11-.001-.066.12-.09.006.063.029.064-.162.139zm.094-.486l.048.064.008.054-.056.06-.086.041.03-.16.056-.059zm-.015-.155v.057l-.209.214v-.057l.06-.115.15-.156v.057zm-.049-.157v.066l-.069.066-.138.065.138-.13.07-.067zm-.246-.157v-.069l.06.07-.06.068v-.069zm-.022.17l.108-.121h.054l.054.06-.108.122-.162.06v-.06l.054-.06zm-.106-.372v-.214h.108v.214l-.054.054h-.054v-.054zm-.037.17h.069v.056h-.07v-.056zm.006.147l.05.059h-.088l-.088-.042h-.305l-.093.069.142-.01h.131l.132.042.12.096-.088-.037-.088-.042h-.265l.047.08h.11l.159.055.044.086.043.128v.258l-.11.3-.13.3-.132.259-.088.3-.132.258-.219.258-.246.204-.263.128-.076-.054v-.3l-.044-.258.088-.128.214-.093.256-.111.044-.043v-.042h-.088l-.07-.005v-.258l.043-.214.044-.172.155-.246.017.2.044.213.032-.034.027-.145v-.128l-.044-.258.044-.214.044-.129.103-.069-.044-.042-.088.042-.044.086-.087.172-.044.169-.088.172-.087.086-.066.186-.034.318-.088.258-.087.172-.12.054h-.33l.045-.042.044-.086v-.172l.043-.214v-.042l.044-.086.044-.172.005-.145.105.177-.044.172-.066.162.088-.086.044-.086.044-.214.022-.237.043-.258.024.18.02.164.027-.14.039-.1v-.129l.044-.128.415-.531-.22.214-.229.243.005-.135.088-.042.044-.044.017-.091.219-.215.18-.108.071.05.066.004v.043h-.088l.044.043.078.027.175.043h.176l.075.047zm-1.44.922l.014-.052.075-.27-.01.464-.079-.142zm1.13-1.098h.256l-.064.066h-.256l.064-.066zm-.027-.049v-.1h.101v.05l-.05.05h-.05zm.005-1.497l.047.044.048.087.022.095.001.087.046-.089-.002-.088.091-.025.093.084.002.088-.071-.093-.066.034.111.17.05.176v.177l-.043.177-.002-.132-.006-.126-.05-.175-.104-.086.106.27.012.198-.054.142-.045.046.033-.17-.001-.134-.05-.132-.094-.087.05.131.003.221.033.09-.09.133-.03.126.018.063.128.007.039.028.067-.023-.019.106.002.088-.135-.115-.14-.042-.072.069-.105-.132.039-.106.116-.083.093-.042.015-.12-.001-.131-.095-.175.054.197-.046.133-.06-.197-.004.116.007.085-.023.11-.054.058-.01-.192-.05-.176v.044l.009.221-.039.26v.044l.074.044.095.131-.071-.028-.094-.024-.048-.044-.018-.052.035-.154.015-.175-.001-.175.045-.134v-.044l-.093.09.027.076-.043.177-.046.177-.057.034-.086.045-.04-.335.036-.178.113-.128h-.047l-.113.07.1-.142.24-.113.006-.039-.26.091.052-.098.046-.044.16-.079-.094.002-.139.045.036-.054.082-.076.17-.067.095.044.085.059-.002-.088-.095-.042-.141-.13.202.024zm-.718-.333l.153-.037.233.037.045.05.046.047-.019.256-.094-.064-.046-.05h-.136l-.137-.095v-.05l.002-.072-.057.04-.036.031.003.068-.062.017-.02-.139.125-.039zm-.695 1.117l.057-.15.128-.127.086-.12.061-.19.358-.329.197.086.088.044.087.044h.088l.044.044-.22.173-.087.13.017.13-.044.086-.044.088-.06.088v.13l.075-.014.05.361h-.126l-.043-.044v-.044h.087v-.086h-.044l-.087.088v.088l.033.077.144.02h.087l.088-.043.1-.105-.056.18.044.044-.307.174-.132.13-.023.159-.064.015v-.218l-.088-.174-.003-.175-.038-.111.086-.103-.047-.135-.044-.13-.062-.22.258-.052.157-.12-.044-.085-.044-.086-.131-.086h-.088l-.088.043.056.05-.054.038.056.05-.044.087-.054.039v.086l-.088-.044-.039.049h-.044l.044.044h.044v.043l-.131.044-.152.039zm.329.111l.16.115-.009.135-.079.059-.01-.164-.062-.145zm.192-.4l.093-.085.018.1-.111-.014zm-.32.39v-.054l.053-.106h.054l.054.054.054.106h-.216zm-.137.707l.128-.15-.047-.042-.046.042h-.047v-.042l.047-.086.046-.043.093-.042.03-.077-.088-.05.047-.045.046-.042.067.15.048.086.045.086.047.086v.285l.063.05v.266l.002.093-.048.043v-.258l-.015-.133-.093-.128v.128l.01.103.063.214-.063.187-.016-.23-.05-.117.018.27-.097.44-.005-.137v-.214l-.092.258.067.15v.086l-.093.215-.045.214-.047.258-.093.258-.068-.106v-.086l.093-.344-.045-.086v-.086l-.048-.129-.01-.182.093-.258.093-.3.047-.172.005-.165-.04.003-.139.344v-.179l.046-.214.09-.172zm-.346.094v.107h-.108l.108-.107zm-.179.167l.154.118-.058.095-.123-.095.027-.118zm.015.299l.054.084-.032.107-.182-.085.064-.158.096.052zm-.192.24h.164v.13l-.081.065-.083-.13v-.066zm.054.306l.138.005.1-.516.16-.598.046-.092.136-.045.022.101-.006.081-.085.054-.045.091v.633l-.046.18-.045.09h-.137l-.046.09v.092l.046.18h-.182v.046l-.046-.18-.01-.212zm.439.392v.489l.049.147v.049l-.147-.343-.245-.342.196.098v-.447l.098.055.049.098-.05.098v.147l.05-.05zm-.513-.478h.049v.464h-.05v-.464zm-.108.51l.285.54h-.212l-.071-.135.07-.203-.072-.202zm.027.958v-.383l.223.212.222.255.044-.084-.044-.085-.133-.17-.09-.042-.043-.084h.044l.089.042v-.042l-.09-.255-.133-.297h.09v-.084l.044.042v.042l.045.084.133.129.09.128.045.17.09.17v.043h.09l-.045-.042v-.043l.046-.042v.127l.044.084.045-.084v-.085l.211-.074-.21.287.043.042.078-.032v.552l.043.509.134 1.135-.434-.08-.045-.43.045-.424.046-.383v-.425l.044-.255v-.213h-.044l-.044.085-.046.084-.043.51v1.486l.043.128v.51l.046.17v.126l-.015.074-.105.015-.044.08-.05.089.044.142.06-.01.029-.075-.052-.018.008-.096.128-.02-.082.721-.211-.458-.073-.316-.017-.3.08-.813.09-.977.043-.467.078-.5-.044.129-.134.084-.222.085v-.042l-.09.042-.089.084-.005-.467zm.04.583v-.094l.048-.047.047.047v.187h.094v-.14l.048-.094.187-.14h.047v.047h-.047v.187l-.047-.094-.048.047.048.187.047.14-.093-.093-.094-.14v.048l.047.234.094.235-.234-.235-.144-.282zm.245.554l-.273-.218-.085-.152v-.15h.086l.085.226.187.294zm-.356-2.566h.076v.192l-.076-.064v-.128zm-.08.159l.11.157.056.156-.22-.209.055-.104zm-.014.238l.052.097.052.296v.592l-.23.13.104-.493v-.541l-.085-.18.107.099zm-.07.133l-.048.452v.271l-.097.226h-.096l-.047-.045.145-.226.05-.272.094-.406zm-.118-.19h.048l-.073.529-.187.528-.115-.088.187-.44.095-.263.045-.265zm-.074.041l-.133.377-.133.313.067.063-.067.062h-.07v.062h-.067v-.062l-.067-.062.067-.063v-.062l.068-.063h.067l.068-.313.2-.252zm-.226-.254l.002.394-.113.338-.149.261-.064-.032v-.05l.324-.911zm-.1-.002l-.053.29-.053.2-.209.397.027-.256.107-.2.182-.431zm-.153-.054l.071-.28.014.267-.095.345-.22.464-.065-.187.056-.103.055-.206.184-.3zm-.008-.381l-.115.43-.172.43h-.057v-.16l.344-.7zm-.091-.218l-.095.474-.09.228-.11.153-.066-.042.165-.359.196-.454zm-.145-.012v-.226l.069-.003v.226l-.052.206-.114.204-.128.346.05-.31.127-.247.048-.196zm-.221-.615l.09.045.092.312v.18l-.046.134-.09.046h-.092l-.09-.09-.046-.09.09-.045-.045-.044h-.091l-.046-.045-.045-.09h.091v-.045l-.228-.133-.09-.09-.046-.133v-.044l.045-.09v-.043h.046v.09l.045.045v.09l-.045.045.045.045v-.043h.046l.045-.044.091.09.137.045.091.089v.09l.046-.046v-.133l-.137-.134-.182-.089.228.046.09.079zm-.488.418v-.123h.073l.074.062v.124l-.147-.063zm.142.116v.054l-.054.054h-.054v-.108h.108zm-.37-.141h.164v.121h-.11l-.053-.06v-.061zm-.082-.424l.059-.072h.059l.059.072v.146h-.118l-.06-.146zm.14.356l-.074-.086v-.086h.076l.15.086-.076.086h-.076zm.212-.639h.152v.105h-.152v-.105zm.18-.042v-.07h.13v.07l-.065.07-.066-.07zm.188.098l-.005.1h-.078l-.001-.088.084-.012zm.042-.353l-.033-.003v-.044h-.046v.09l-.046.089-.065-.046-.03-.104.01-.147.02-.108-.046-.046h-.069l-.002.144.002.128.046.18-.046.135-.046-.089-.18.18v-.045l-.046-.046-.089.046-.046.09h-.043l-.046-.046.046-.09-.046-.045-.09.045h-.045v-.089l.014-.111.045-.135.076-.07v-.045l-.09-.045-.023.077-.044.09-.045.18-.112-.032-.045-.09-.044-.045h-.046l.046-.046.046-.045.09-.046v-.045l-.045-.046v-.045h.224l.046-.09h.045l.09.046.27-.135h.226l.09.046.045.089v.045l.1.154.024.165h-.047zm-.87.69v-.067l.123.067v.068l-.06.069-.061-.068v-.069h-.002zm-.017-.145l-.057-.054v-.108h.114l.058.054v.054l-.058.054h-.057zm-.078-.293v.048h-.048l-.05.05-.048-.05-.05-.048.05-.05.049.05h.097zm1.768-.105h-.15v-.2l.1.052h.05v.148zm.162 0v.1h-.05l-.05-.1v-.148h.051l.05.048v.1h-.001zm.35.177l-.051.049-.051.1-.1-.051-.05-.049-.05-.15.05-.1.101-.1.1.051.05.1v.15zm.041-.816l.044-.046.132.18.044.227.043.226-.043.226-.177.09-.044-.225v-.135l-.088-.046-.088-.045-.087.045h-.088l-.044-.045.088-.09v-.317l.131.046h.177v-.091zm-.227-.208h.086l.042.086.042.042v.129h-.128l-.128-.085-.085-.086-.042-.042h-.042l.086.213.042.086-.042.128.042.042-.042.042-.086.086h-.17l-.085-.128v-.042l-.042-.042-.1-.05-.062-.104.106.01.01-.062-.052-.063-.07-.028-.055.018-.03.068.02.09.064.075-.084.084-.104-.02-.105-.084-.002-.186.042-.128.043-.086.042-.042.086-.042.044-.042.086-.043.086.043.086.042h.128l.086-.042h.128l.086.086.073.077zm-.376-.435l.09-.045h.137v.182l-.09.045-.092.046-.182-.046h-.275l-.091.093-.137-.091-.09-.137v-.09l.045-.046.045-.046h.091l.046.046h.091l.046-.046.045-.136.046-.092h.182l.09.046V9.9l-.045.091v.046l.048.09zm.924-.713l.136.094.183.19.09.286-.136-.048-.137-.094-.09-.094-.137-.142-.046-.19h.137v-.002zm.094.55l-.042.084h-.084l-.042-.042v-.127l.042-.084.084.084.042.084zm-.39-.112l.068-.307.022-.14.123.363-.084.126v.169l.126.084h.127l.042-.084.084-.084.043.084-.043.084-.126.085-.084.042-.043.042h-.634l.084-.127v-.084l-.042-.042-.084-.084h-.084l-.043-.043v-.084l-.126-.126-.084-.043h-.085l-.126.085-.042.084-.085.042h-.084l-.127.085-.126.126v.084l.084.17.085.041.042.042-.085.211-.042.085v.126h-.045l-.042-.084-.085-.042h-.042v-.043h-.295l-.084.043-.127.084h-.128l-.084.042h-.127l-.084.042h-.042l-.043.085v.126l-.084.042-.042.127h.126l.043.084-.043.085v.126l.043.042.126.042.042.085v.042l.042.042v.253l.085.084.084-.042h.042l-.042.085v.042l.042.168.042.043h.085l.084.042.042.042.085.084h.084l.042-.042v-.042l.042-.084v-.043l.085.169.042.084.084.043.127-.043-.17.592.085.085.042.126.085.211.042.21.126.212.127.168.169.085.168.084.127.127h.084l.084.042.17-.085.083-.084v.508l-.042.084-.126.084-.127.043-.084.084-.084.126-.085.127-.042.169-.126.126.168.084h.127l.126-.084.085-.042v.042l.042.042-.054-.205.037-.206.059-.179h-.042l-.085.21-.074.269-.01-.074-.042-.112-.078-.072.083-.108.084-.127.085-.042.126-.047.05.184.132.125.113.113.18.052.041.042-.005.1-.042.094v.211l-.01.148.042.085-.042.042-.042.084-.042.085-.063.074v-.085l.042-.084.022-.032v-.169l-.042-.126v-.115l.042-.084v-.21l-.07.252-.043.253.042.042-.084.085-.032.106-.074.21-.044-.06.012-.13.084-.126.042-.34.085-.337-.127.169v.169l-.042.168-.042.211-.149.309-.03-.113v-.042l.042-.127.085-.169.042-.21v-.211l.01-.238-.042.042.01.101-.042.169v.169l-.085.126-.236.179.047-.154.095-.084.084-.126v-.125l-.042.042v.042l-.042.042-.042.042-.127.17-.042.083v.127h.126l.127-.127.084-.042-.084.211-.042.084v.127l.084.084v.042l.084-.042.043-.042h.042l.042.042.126-.295v.21l.043.043h.084l.042-.042-.042-.042.042-.042.042-.043-.042.296-.042.295v.253l.042.297.042.168-.126.887.042.338-.042.084v.127l.042.21v.635l-.042.253v.042l.042.042v.042l.126-.592v-1.177l.043-.592.084.206.042.042.084.084.043-.21v-.17l.042-.421v-.042h.042l.02-.009-.02-.033-.042-.085.042-.042-.042-.381-.015-.402.042-.042h.21l.122.101-.042.043-.042.126-.085.127-.042.168-.106.3.042.085.083-.108.034-.13.084-.21v-.085l.126-.253.053.111v.253l-.127.338v.168l-.169.677.043-.085.042-.126.084-.211v.38l-.042.21-.042.211h.042l-.127.972-.042.465-.042.466-.295-.042-.127-.043-.168.043v-.085l-.042-.042-.085.042h-.042l-.042-.042v-.042l.042-.042h.042v-.042l-.042-.043h-.084l-.127.043-.126-.043.084-.042.084-.042-.126-.084-.127-.042-.295.042-.084.042-.084.042v-.126l.042-.085-.042.042-.085.043-.126-.085-.169-.042.084.084.085.043h.042l-.38.168-.042-.042.042-.042.043-.042v-.042l.042-.043h.042l-.042-.042-.253.127h-.127l-.042.042-.042.042h-.169l.085-.126.126-.085.295-.126v-.127l.042.085v.042l.043.042h.126v-.042l-.126-.085-.043-.042-.042-.084-.084-.084-.127-.085-.126-.042h-.169l-.042-.084-.084-.085h-.169l.084-.042.127-.042h.21l.127.084.085.043.168.168-.042-.168-.084-.17-.085-.126-.126-.042h-.295l-.169.042-.169.127-.126.126-.084.169v.042l-.127-.38-.084-.168-.042-.169-.085-.38.054.143.032.025.042.042.043-.042v-.085l.138-.053-.18.011-.017.095-.026-.053-.023-.053-.019-.073-.042-.042v-.085l-.042-.042h.253l.042.085.042.042v.042h.084l-.042-.084-.042-.043-.126-.084h-.085l.085-.169.126-.084.127-.084.168-.042.042-.085.043.127v.084l.084.084.042.043.084-.085h.043v.38l.126-.042.042-.085.085-.253-.085-.253-.126-.084-.085-.084h-.131l.042-.085h.169l.084-.042.042-.084.042-.169.043-.084.042-.042.042.042.042.084-.042.127.042.126.084.042h.043l.084-.042h.042l.042-.084.085-.127v-.084l.042-.042.042.042.084.042v.169l-.084.126-.042.085.042.084.084.042h.085l.084.042.042.042v.127l-.084.126-.169.17-.137-.021-.084-.084.01-.105.042-.127.043-.042.042-.042.074.032.042.042v.085l-.042.042-.032.052h.084l.042-.042.043-.169-.085-.084-.084-.042-.127.042-.084.084-.042.042v.043l-.042.168.084.127.127.084h.084l.084-.042.127-.084.084-.085.084-.168v-.169l-.084-.042-.084-.042h-.085l-.084-.085.127-.21.042-.127-.042-.084-.085-.085h-.042l-.169.042-.084.085-.042.084-.042.084-.085.085-.042-.085.042-.042.043-.042-.043-.084v-.127l-.042-.042-.042-.042h-.126l-.085.084-.084.127-.042.042v.084l-.042.042-.043.043h-.042v-.296l-.042-.126-.042-.084.042-.085h.042l.169-.042h.084l.127.084.084.043h.127l.042-.085v-.253l.084-.042.042-.042.042-.042v-.042l-.042-.085h-.04v-.042l.084-.084.084-.085-.042-.089-.084-.084h-.042l.042-.042.042-.085.042-.042-.042-.042-.169-.084-.042-.043-.084.043-.042.042h-.085v-.042l-.042-.043-.084-.084h-.084l-.043.042-.084.042-.042-.126-.084-.169h-.127l-.126-.042-.127-.042h-.169v.042l-.084-.042h-.084l.084.042-.042.042v.085l-.042.042H13.1l.042-.592v-.295h.126l.042.084.043.042h.168l.127-.126.084-.043h.042v-.084l.042-.084-.084-.085v-.084l.042-.084-.084-.127.042-.126v-.085l-.042-.084h.042v.042l.042.042.085.085.084.042.169.042-.043.21.043.17.126.126h.042l.085.253.168.169.127.042h.126l.042-.042.17-.169.041-.042v-.253l-.042-.127-.042-.042-.042.042-.085.043.085.084.042.042v.169l-.042.042-.042.084-.083.06-.096.025-.042-.043-.169-.084-.042-.084-.019-.098.115-.071.042-.042.042.126.042.085.085.042h.042l.126-.042v-.127l-.084-.126-.042.042h-.042l.084.084v.042l-.042.043h-.042l-.085-.127v-.042l.043-.084.084-.043-.042-.084-.085-.169-.084-.084h-.042l-.084.042-.085.127v.084l-.05.155-.108-.103-.042-.084.023-.086.029-.073v-.084l-.084-.042-.043-.042-.084-.042-.052-.01-.081-.065.133-.008h.084l.043-.084-.02-.107v-.084h.041l.043-.042.126-.042.127-.085v-.168l-.127-.127-.295-.126h-.084l-.085.042-.168.042.042-.084v-.085l.042-.042-.084-.084-.211-.042.042-.211-.042-.211-.085-.169-.126-.168v-.127l.042-.126-.042-.127.042-.126.084-.169.127-.127.042-.042.084-.21.085-.127.084-.169v-.337l.21.126.043-.084v-.042h.042l.085.042.084.084.042.211v.042l-.042.085-.042.042-.042.084-.085.042-.084.043-.21.042.041.042h.085l.168-.042.127-.085.168-.253v-.253l-.084-.084-.126-.169-.17.085h-.041l-.085-.042h-.084v-.043l.337-.168.34-.169.042.127.042.042.084.042h.084l.127-.042.126-.169.043-.084V9.27l.084-.042.21-.169.23-.137-.09.127-.057.197-.008.262.07-.042.067-.04.126-.126.074-.227-.006-.225.055-.028.107.097-.134.36-.028.246.059.243.126.253.042.126.042-.126.043-.169zm-.455 5.775v.154l-.055.05h-.056v-.153l.056-.101.055.05zm.687.667l-.066.158v-.158h.066zm1.476 5.097l-.105-.02-.066-.056-.251-.159.076-.08.103.102.062.064.18.149zm-.412-.444l.275.085.13.145-.024.097-.381-.327zm-.096.326l-.474-.324.01-.111h.047l.236.19.237.19.425.288-.019.094-.462-.327zm.433.381l-.025.07-.189-.095v-.102l.142.048.072.079zm-.27-.164v.122l-.094-.047-.094-.048-.095-.047-.094-.094-.142-.096-.142-.097v-.168h.048l.283.24.33.235zm-.33-2.116h.22v.042l-.274.042v-.042l.054-.042zm-.027-.044V19.2h.273v.042l-.11.042-.163.044zm.083.214h.11l-.055.042-.11.044h-.055v-.086h.11zm.183.128l-.054.042-.054.042-.219.043v-.129h.327v.002zm-.24.17h.165v.043h-.164l-.11.042v-.086h.11v.001zm.031.17h.22l-.164.043-.11.042-.11-.042.055-.042h.11zm.004.129h.136v.086h-.271l-.046-.086h.18zm0 .15l.136.042h-.226l-.045.042-.046-.042v-.042h.18zm-.046.15h.182v.042h-.271l-.046.043v-.086h.135v.001zm.135.17l.046.043h-.046l-.137.042h-.136l-.046-.042v-.042h.319zm-.02.235l-.076-.086h.077l.078.086h-.08zm.054.123l.094.149-.49-.343h.094l.153.058.149.136zm.062-1.852h-.22v-.086h.274l-.054.086zm0-.214l-.054.042h-.11l-.053.042V18.9l.054-.042h.219l-.056.044zm-.22-.128l.055-.042.054-.043h.11v.043l-.054.042h-.164zm.22-.17h-.22l.055-.043v-.042h.164l.053.042-.052.042zm0-.17h-.163v-.043h.11l.109-.042-.056.084zm-.055-.171h-.11v-.086h.22v.086h-.11zm.033-.172h-.11v-.085h.164v.042l-.054.043zm-.116-.17l.056-.087h.11v.086h-.166zM13.58 19.72l.11-.105.094-.045-.143.224-.047.135v.09l-.06-.122.046-.177zm-.13-.14l.071-.113.085-.098.126-.084-.084.14-.014.126-.126.169-.058-.14zm.59-.143l-.151.114h-.101l-.1-.057v-.057l.05-.058.153-.057.069.003.055.029.024.083zm-.026.126l.136-.049.183.05.182.099.045.097-.111.06-.149-.1-.136-.022h-.046l-.104.066-.113.056-.115.089-.182.295.072-.271.127-.225.12-.094.09-.05zm-.47.666l.095.17-.22-.117.126-.053zm.116.002l.126-.182.127-.127.21-.126h.085l.212.066-.098.028-.097.056-.056.07-.128.077-.042.042h-.085l.085-.127-.085.043-.084.084-.042.056-.128.04zm.018.154l.13-.065.324-.128-.26.194h-.194l-.13.066.13-.067zm.494-.022l.053-.053h.104v.053h-.052l-.159.052-.158.105h-.053l-.052-.053.105-.052h.158l.054-.052zm-.404.079l.052.052.052.052h-.106l-.052-.052.054-.052zm.048.194h.048l.047-.047.047.047.047.047-.047.047h-.047l-.095-.047v-.047zm.275.15l.1-.05v.052l.05.052.051.052-.05.05-.15-.05-.051-.052-.05-.05h.1v-.004zm.026-.123l-.095-.093.095-.047h.094l.047.047v.046l-.141.047zm.236.047h.094l.047.047-.047.048h-.14l-.047-.048.093-.047zm.236-.076l.062-.08.063.08v.081h-.247l.122-.08zm-.01-.185v-.05h.05l.1-.05h.05l-.099.1h-.101zm-.009-.2l-.052.053h-.104l.052-.052.104-.053v.053zm-.145.19h.122l-.122.079-.06.08-.06-.078.12-.081zm-.079.418h.145l.096.096-.047.049h-.096l-.049-.049-.047-.049v-.047h-.002zm.36.373l.126-.071.064.07h.064v.071l-.127.071h-.064l-.126-.07.062-.071zm-.051-.257h.141l.071.07v.067h-.07l-.142-.137zm.152-.062l-.184-.06.123-.063h.062l.123.062-.06.06h-.064zm.317-.582l.173-.057.037.123-.113.084-.14-.013-.016-.078.059-.06zm-.09-.123l.056-.056.056-.056v.056l-.056.056h-.056zm.385.246l.103.047.06.061v.06h-.06l-.188.056-.055-.055-.044-.071.184-.098zm-.064-.128l.05-.103h.103l.154.05-.05.051h-.052l-.1.05h-.051l-.054-.048zm-.388-.022l-.182.06.121-.12h.182l-.121.06zm-.046.135h.083l.082.084-.082.083h-.081l-.083.082-.082-.082v-.083h.082l.081-.084zm.118.626h.066l.066.065h.064l-.064.066h-.066l-.13-.064.064-.067zm.098-.07h-.143l-.073-.072.145-.07.073.07.072.145-.074-.073zm.06-.202h-.132l-.134-.086.134-.086h.067l.133.086v.086H15.2zm.127.226l.14-.066.071.13h-.21v-.064zm-.057-.147l.096-.12h.192v.122h-.288v-.002zm.31.139v-.075l.078-.074.157.074-.078.075h-.157zm.198-.672l.06.061.061.06-.12.062h-.06l-.12-.061.06-.06.119-.062zm-.152-.153h.177l-.088.044-.09-.044zm.077.464h.259l-.173.084-.086.084-.086-.084.086-.084zm.073.41h.091l.046.045-.046.046-.091.045-.046-.045-.045-.046.091-.045zm.152-.183l-.117-.06.117-.061h.116v.06l-.116.061zm-.019-.278v-.077h.174l-.057.077h-.117zm.13.292h.091v.045l-.09.046h-.046l.045-.091zm.06-.177l.043-.044h.088v.044l-.044.044-.088-.044zm-3.077-2.753l-.088-.088-.176.044.088-.087.088-.088.088.131.087.088h-.087zm.059.125l-.091.072v-.143l.09.07zm-.773-1.673v-.13l-.044-.044h.044v-.044l.218.044.173.044h-.086l-.043.044-.044.173.044.132.043.13-.13.044h-.043l-.044-.088-.044-.13v-.088l-.044-.087zm-.212-.729l-.255-.07-.127-.099-.146-.163-.108-.177-.042-.17-.043-.341.004-.324.126-.348.169-.219.298-.467v.212l-.001.19-.179.296-.159.364-.037.233.043.226.037.179.042.128.084.128.17.129.17.086.426.17.131.012.022.074.107.042.042.064-.052.095-.29-.073-.432-.177zm.212.18h-.265l-.133.044-.133.044.044-.22h.133l.088.043.266.09zm-.292-2.988l-.084-.338-.042-.38.169.043.084-.042.084-.042.042-.085.085-.084.084-.21v.084l-.042.084v.084l.084.042h.127l.232-.01-.096.063-.136.032h-.042l-.043.042.145.022.191-.007-.081.07h-.084l-.085.041-.042.043.346-.004-.105.042-.113.046h-.084l-.042.042.084.042.123-.027.172-.015-.08.064-.097.005-.077.017-.085.042.127.042.2-.02-.123.057-.12.048-.041.042.347-.042-.073.082-.276.044-.103-.037-.105.01-.13.027-.168.169-.084.084.042.127v.126l.042.085h.169v.042l-.043.042-.042.084v.085l.085.042.042.126.042.085.084.042h.085l.126.126.042.085.042.042h.085l-.085.042h-.253l.127.084.158.022.174-.022.147-.027-.16.112-.139.022-.136-.02h-.127l.085.041.12.036.242.03-.216.05-.143-.018-.127-.013.24.106.263.022-.253.042-.253.042.127.042h.126l.253.043-.123.065-.12-.003h-.126l-.183-.002.13.066.132.012.28.03-.253.042-.285.043.21.042.296.022-.084.042-.211.022h-.211l.084.084h.39l-.208.056-.266.028.126.085.159-.02.295-.043.003.076-.188.01-.127.032-.116.053-.15-.066-.127-.084-.169-.043-.168-.084-.127-.126v-.38l.076-.405.029-.334.022-.317.042-.042v-.464l-.046-.384zm.048-1.365h-.044l-.13-.044.086-.086.044-.042.086-.216.216.086.13.044.13-.044-.044.13-.043.086h-.13l-.086-.044h-.042l.086.086v.044l.044.044-.172.13-.172.172h.044l.172-.13.172-.172.044.044.044.044v-.044l.044-.086-.043-.044.13-.216.044.044v.044l-.044.086-.086.13v.086h-.049l-.086.044-.086.043-.044.044v.13l-.042.086-.13.086-.043.044h-.086v-.172l-.02-.226.043-.044.086-.044.064-.076v-.047h-.087zM8.16 5.69l.098-.286.084-.253-.084.042-.042.043-.084.042h-.085l-.168.084-.085.169-.168.295v-.464l-.085-.126-.084-.085-.211-.253-.169-.21h-.042v.463l.042.253.127.169.21.21.212.17-.043.084v.084h.043l.21-.084.17-.127.112-.136.042-.085zm.388-.871l-.168.137-.211.106-.221.042-.27-.022.175-.157.211-.074.484-.032zm.545.034l-.123.199-.138.194-.2.155-.192.106.132-.217.135-.226.136-.127.12-.039.13-.045zm-1.017.87l-.177.177-.221.09.177-.355.133-.177.177-.133-.09.398zm-.531.025l-.221-.177-.154-.2-.042-.211-.025-.252.177.178.185.178.107.253-.027.231zm.953-.022l.22.134.178.22.133.222.133.22-.133-.043-.128-.061-.155-.155-.127-.253-.121-.284zm-.255.245l.032.294-.106.209-.095.084-.158.21-.05-.004-.046-.238.084-.267.152-.155.187-.133zm-1.827.182l.074-.05.135-.073.145-.01.22.062.177.115-.2.064h-.183L6.6 6.206h-.184v-.054zm.844.037l-.25-.349.179.064.158.053.137.148.147.23.043.16-.414-.306zM6.85 4.722l-.074.246-.206.177-.182.05.052-.178.127-.244.253-.211.297-.095-.267.255zm-.431.71l.059.147v.133l-.108.251-.05.088-.046.133-.097-.177v-.22l.097-.62.047.133.098.132zm.168.82l.194.08h.211l.127-.041.084-.043.111.068.2.148.202.127.077.123.042.042-.38-.126-.379-.127-.759-.253.27.002zM9.34 6.8l.046-.272.148-.253.32-.394v.172l-.025.222-.118.22-.158.148-.213.157zm.182.17l.139.047.138.048h.186l.207.106.317.432-.258-.044-.312-.17-.231-.186-.186-.233zm.964.845l-.044.132-.005.13-.061.185-.108.068-.116.022-.105-.01.22-.306.089-.087.13-.134zM9.11 5.77l.007-.224v-.266l.087.087.095.149.064.21.022.233-.133.381-.142-.57zm2.221 3.075l.275.515-.012.192-.02.179-.115-.066.01-.137.065-.178-.211-.454.03-.135.064-.221.005-.263-.047-.2-.076-.097-.168-.253-.043.38.043.21.042.085.084.042.084.042.019.084-.019.085-.084.042-.21.042-.085.126-.127.127-.126.084h-.169v.085l.127.084.168.084h.296l.084-.084.042-.084.042-.211.127.253.042.168-.042.085-.042.042v.126l-.63-.168-.298-.213-.127-.126-.126-.169-.675-.928-.548-.506-.248-.229-.273-.21-.147-.117-.137-.063-.188-.094.22-.243.149-.295-.052-.39-.316.211-.189.243-.052.148-.074-.189-.074-.116-.092-.13-.077-.09-.337-.17h-.117l-.104-.02.2.285-.357-.084-.159.042-.126.064.052-.158.056-.162.028-.112-.028-.141-.085-.127V5.24h.127l.126-.085.127-.126.126-.253.085-.127.084-.084.126-.042h.17l.59.169.59.042-.304.037h-.295l-.126.042-.127.042-.084.127-.127.126.085.042h.168l.253.042.253-.084.211-.126.169-.211h.126l.169.042-.169.042-.087.044-.105.137-.231.463.01.053.078.273.084.253.042.084.084.169.17.169.21.084.21.042v.169l.043.084.084.042.253.253.253.296.127.084.168.084.17.042h.168l.042.043-.127.042-.084.042-.169.169-.27.435.201.022.169-.043.113-.075.042-.085.042-.168.042-.17V7.81l.085-.085-.211-.421-.127-.17-.084-.083-.126-.043-.169-.042-.169-.042H9.57L9.4 6.839l.21-.127.17-.168.126-.211.042-.253-.042-.169.042-.169-.38.338-.12.184-.127.242-.02.032-.026-.077.047-.123.043-.085.032-.074.047-.098.042-.126-.042-.295-.085-.295-.21-.253v-.085l-.127.38v.38l.084.379.127.337-.127-.253-.168-.295-.211-.211L8.6 5.66l-.168-.085.21-.084.17-.126.168-.17.084-.168.042-.126h.043l.084.126.126.127.253.168.253.211.127.127.126.126.338.675.21.337.254.295.295.422.253.464.057.062.04.066.012.029.127.179-.014-.016.033.061.087.164.047.087.058.095.057.06.047.088-.054.169-.084.147-.084.168-.053.201-.032.159-.02.126-.047-.088.015-.408-.3-.575-.029.091zm.017-.425l-.093-.062-.044-.056-.074-.212.026-.2.173.225.03.155-.018.15zm-.056.337l-.1.299-.05.148-.148.053h-.149l-.167-.083.296-.179.158-.178.16-.06zm-.148.87l.253.095.282.166.308.362.253.306.167.197.211.2.19.127.18.285.17.251.21.32.063.178.032.19-.047.16-.057.183-.238.347-.218-.057h-.084l-.084.042h.17l.096.063.074.15.125.187-.04.24v.086l-.086.086-.086-.086-.043-.129v-.256h-.042v-.042l-.042.17v.128l-.042.129-.042.042h-.086l-.085.17-.042.042-.086-.042-.042-.086-.042-.084-.086-.086v-.086l.212-.383v-.042l-.042-.043h-.045l-.043.085-.086.086-.042.086h-.084l-.042-.084.042-.087.042-.042h-.084l.042-.128.155-.128.179-.02.177.02h.17l.17-.042.087-.042-.029-.117.052-.074.032-.088.016-.26v-.146l-.024-.12-.049-.135-.084-.17-.213-.299-.214-.256-.172-.127-.221-.126-.084-.236-.296-.355-.266-.266-.224-.182-.457-.289.261.063zm1.373 1.173v-.052l.16.05.147.03-.005.073-.164.01-.138-.11zm-.413-3.203l-.098-.084-.09.022-.075.028-.044-.09.09-.134.089-.046.134-.043.18.089.089.179v.09l-.046.223-.044.09-.09.09-.043-.046-.046-.046.046-.09.02-.12-.072-.112zm-.19.03l.092-.03.07.084.023.166-.123-.11-.063-.11zm.176.392l-.155-.029-.098-.07-.07-.127-.014-.098.022-.12.315.444zm.22.003l.084-.126.084-.211-.042-.253-.084-.127-.085-.084-.126-.042h-.084l-.127.042-.084.042-.085.084-.168-.295-.211-.253v-.042l.253.042.21.085.235.023.272-.066.21-.126.127-.042h.042l.15.033-.084.107-.169.064-.2.084-.306.137.328.136.168.01.263-.062.127-.116.02-.139v-.168l.084.168.043.127v.084l-.43.54-.372.6-.084-.084-.042-.126.083-.046zM11.9 5.447l.169-.179.094-.022-.043.22-.088.219-.176.22-.209.197.032-.221.085-.221.136-.213zm-.032-.133l-.23.059-.28-.06-.234-.058.279-.118.128-.029.126-.042.21.013.232.06-.092.118-.139.057zm.127.565l.13-.177.086-.223v-.222l.172.312.258.266.172.267.086.356V6.5l-.086-.133-.172-.133-.172-.09-.172-.043h-.258l-.172-.044.128-.179zm.344.346h.128l.13.086.172.172.172.172-.258-.086-.214-.086-.214-.128-.215-.172.299.042zm-.859.465l.095-.072.141-.073H12l.565.073-.094.072-.142.073h-.142l-.19.045-.231-.045-.284-.073zm1.481.007v.275l-.133.152-.273.042-.306-.062.264-.117.168-.062.137-.042.143-.186zm-.376 1.346l.106-.137.292.204.295.085-.183.027-.085.042-.224-.003h-.275l.074-.218zm7.676-1.44l.45-.331h.05l-.117.299-.147.23-.276.164-.246.093.097-.231.19-.224zm-.332-.218l-.007-.096.066-.361.01-.316.095.233v.285l-.043.201-.05.196-.071-.142zm.437-.327l-.2.24-.05-.007.042-.17v-.21l-.042-.169-.084-.168h.126l.085-.042.21-.085v.38l-.01.133-.077.098zm-.231-.564l-.159-.02-.315-.136-.127-.105.159.01.148.032.253-.01.279.155-.238.074zm-.567-.133l.127.042.21.127.043.126v.127l-.043.253-.042.253.042.126.043.127-.296.506-.084.295-.084.295h-.253v-.084l.042-.084.084-.127.042-.21v-.21l-.042-.21-.126-.17-.042-.084v-.126l.042.042.042.042.084.042.085.042.126.38.127.084.042-.253.084-.337.042-.337-.042-.17V5.7l-.084-.126-.085-.169v.21l-.042.17-.126.379-.042-.253-.085-.21-.168-.17-.211-.168-.042.042v.084l.042.043v.042l-.464-.127-.38.042.296-.126.337-.042.717-.085.084.125zm-2.913 2.744h-.21l-.212.043.043-.127.084-.126.126-.253.211-.211.295-.127-.126.169-.127.21-.084.17-.042.126.042.126zm.084-1.393v-.126l.002-.058.083.142.126.21.127.17.084.042.127.042h.084l-.422.084-.168.085-.221.141.074-.168.062-.1.085-.126v-.127l-.043-.21zm.107-.131l.2.052.18.11.151.15.165.173-.168.032-.211-.062-.147-.158-.116-.17-.054-.127zm-.127 1.347l.05-.14.252-.421.05.14.031.138-.03.155-.095.125-.1.094-.105.091-.051-.086v-.096h-.002zm.231.135l.085-.084.106-.154.02-.141v-.127l-.084-.253.168-.042.127.253.126.38.085.084.126.126.127.043-.042.042-.464-.042-.464-.043.084-.042zm.845 0l-.084-.084-.127-.21-.084-.212-.126-.21.21.126.127.169.127.21.084.211v.042l-.127-.042zm.085-.295l-.085-.169-.168-.126-.127-.127-.21-.084.21-.084.211-.042h.253l.21-.043-.041.085-.085.126-.084.169-.084.295zm1.013-1.351h.085l.084-.042.042.042-.042.422-.042.38-.253-.17-.295-.126v-.042l.084-.127.169-.337h.168zm-.264-.132l-.274-.178-.146-.208.226.058.237.055.117.074.21.17.065.063-.201.042-.234-.076zm-.081.318l-.098.155-.14.155-.211.098-.2.027-.188.044.236-.267.283-.223.378-.133-.06.144zm-.658-.06l-.101.282-.154.235-.05-.235.05-.187.154-.47v-.142l.05.141.05.142v.235zm.067 1.325L18 7.615l.134-.27.126-.211.042.295v.169l-.042.168-.076.144-.092.11-.085.042-.049-.194zm.375 0l.09-.348-.045-.217-.136-.262.136-.088.228.48.137.173.136.044.091.044-.362.174-.409.173.134-.173zm.545-.314l-.159-.095-.06-.168-.176-.263.22.087.227.135.256.35-.072.058-.098-.013-.138-.091zm.24-.241V7.05l.034-.306.014-.197.083.15.043.132.044.219-.044.22-.087.218-.044-.087-.042-.086zm-.033-1.495v-.27l.18.18.09.227.045.226.046.27-.09-.09-.136-.072-.063-.179-.072-.292zm.477.884v-.135l-.027-.292.107-.305.057-.26.091.18-.01.217V6.2l-.137.665-.08-.164zm-1.067-1.165l.232.047.188.093-.14.092h-.188l-.325-.047-.14-.093-.047-.047-.048-.047h.468v.002zm-.361.204l.168.084.211.042h.253l.127-.084.084-.127.042.296.042.168.043.127-.085-.085-.126-.084-.169-.126-.21-.043-.422-.084h-.043l.253.295.169.127.169.126-.211.085-.169.042-.168.084-.17.127.043-.211v-.253l-.084-.211-.169-.169h-.042l.042.085v.168l-.127-.042h-.126l-.253.084-.295.043h-.127l.096.079.18-.032.21-.032.2-.053.202.01-.043.107-.116.084-.179.042-.295-.037-.084-.042-.083-.057.127.141.21.043.211.042.211-.127-.084.295v.296l-.169-.17-.169-.168-.21-.084-.252-.015-.052-.095-.02-.104-.054-.206.38-.042.337-.127.337-.168.295-.211.164.167zm-1.72 1.646l-.294-.142-.179-.2-.128-.247-.15-.244.251.097.292.203.11.238.097.295zm-1.45.43l.263.073.277.021.22.061.117.088.095.103-.283.064-.218-.06-.258-.104-.213-.246zm.004-.346l-.088.06.003-.186.034-.216.127-.159.2-.189-.02.18-.052.178-.204.332zm-.137-.474v.338l-.042.21-.091-.042-.098-.168v-.211l.062-.169.085-.253.084.295zm-.2-.18l-.088.26v.26l.044.13.086.129h-.086l-.086-.13-.086-.174-.085-.08-.179-.085.137.117.084.106.13.246-.044.044h-.086l-.087-.086-.071-.108-.063-.305v.148l.004.137.044.13.043.086h-.217l-.26-.086.13-.216.13-.174.303-.348.174-.13.174-.085-.046.214zm-.507.909l.267-.017.63-.177-.21.113-.351.14-.437.027-.36-.05.053-.137.408.1zm1.852.157l.071.14-.042.098-.24-.211-.21-.085-.464-.028-.211-.029.084.155.085.127.113.098.271.082-.126.042-.127.085-.126.126-.046.002-.098-.127-.337-.224-.182-.056-.309-.097.056.224.197.253.295.182.215-.03-.127.126-.169.127v-.085l-.337-.084-.295-.126-.169-.043-.126-.042-.169.042-.169.043.338-.717.378.017h.276l.267-.043.172-.059.22-.124.16.082h.252l.393-.163.083-.03.155-.14-.376.166-.251.1h-.169l-.179-.063.263-.104.317-.063.382-.02-.243-.032-.211.01-.327.064-.095.022-.076.047.127-.21.126-.211.042-.211v-.253l-.21.21-.127.085-.042.084-.169-.421.169-.042.169-.043.38-.084.379-.042.168-.084.169-.085.21-.042.085-.042h.084v.548l-.042.253-.084.253-.084-.169-.043-.126-.042-.084-.168-.127-.169-.084-.21-.042-.17-.085v.085l.085.084.042.084.084.211.169.253.169.169.126.042.127.042-.253.38-.088-.026-.046.095zm-1.841.15l.38.172.16.103.151.066.14.097-.027.076-.184.009-.153-.012-.142-.073-.155-.126-.084-.127-.086-.185zm.538 1.253l-.085-.042-.126-.127-.004-.11.056-.028.074.052.169.253h-.084v.002zm.079.294h.044v-.174l.087-.044.088-.044v.088l-.032.09-.034.104-.086.088-.1.01-.105-.032-.063-.147.074-.025.044-.044h.044l.039.13zm-1.01-.024l.067.111.135.056v.056l-.145.03-.19-.422.133.169zm-.075-.228l-.047-.047.047-.094.095-.048h.094l.095.048-.142.094-.142.047zm.061.086l.06-.057h.06l.059.057.116.157.127.098-.267-.042-.155-.213zm.393.144l-.24-.253.127-.043.047.058.206.238h-.14zm-.056-.324l.091-.047.135.136.09.182-.179-.09-.137-.181zm.125-.086l.054-.06.11-.062.11.183.11.182h-.11l-.055-.061-.219-.182zm-.803-.555l.277-.02.22.074.276.116.275.064-.137.064-.179.053-.308-.026-.316-.108-.263-.161.155-.056zm.02.271l.211.085-.084.084-.084.084-.085.127v.126l-.168.043h-.085l-.042-.085-.042-.126.042-.169.085-.126.042-.17.21.127zm.046.69l-.024.176-.116-.042.03-.134h.11zm-.287.302h.208l-.105.135h-.104v-.135h.001zm-.04-.162v-.07l.072-.071.073.07v.071h-.145zm-.224-.11h.161v.117h-.161v-.116zm.11.264h.094l-.108.158-.08-.158h.093zm.046.335h-.167l.085-.128.082.128zm-.074.201l.253-.21.295-.17.043.085-.043.042-.084.042h-.084l-.042.042v.085l-.043.084.043.084.042.127-.127.169-.084.168-.042.211.042.211v-.042l.015-.115.022-.158.064-.127.095-.158.165-.257.094-.315-.02-.19-.052-.168-.02-.2-.085-.201v-.201l.159-.189.114-.042h.085l.11.013.092-.003.13.003.175-.055.17-.042-.4.22-.117-.01-.116-.042-.147.042-.095.095-.02.148.042.169.064.137.075.2.032.233-.032.149-.043.136-.113.267-.104.178-.127.117-.084.158-.052.169-.026.167v.084l-.126-.168-.127-.127-.084-.168v-.213l.118-.464zm.552-.179l-.061.274-.06.054-.061-.11.037-.137.086-.08h.059zm.23 2.667l.18-.044h.222l.09.044.133.133v.09l-.133.044-.134.043-.177.044-.09-.044-.043-.043-.045.043.089.09.09.044.089.043v.134h-.177l-.09-.044-.133.044-.044-.044-.266-.133-.178-.134v-.133l.09-.133.133-.177.046-.09.09-.043h.088l.09.043-.09.267.17-.044zm-.465 1.545v-.072h.216v.146h-.143v-.072H13.3v-.002zm-.02-.406l.022-.075.064-.074.106.064-.067.108.035.115.053.052-.063.084-.116-.032.042-.094.002-.08-.078-.068zm-.002.086l.012.102-.104.03-.063-.095.022-.095h.066v.058h.067zm.016-.503v.212l-.043.043-.042.086-.042-.043-.042.043-.042.042v.086l-.042-.042-.086.042-.17.128-.043-.17-.042-.043-.042-.042.042-.086.042-.042.086-.042.042-.084.042.042h.043v.128h.17l.084-.086.086-.256v-.129h.042l-.043.213zm.41 1.822l-.129.042-.131-.002-.125.172.195.262.19.25-.043-.127-.086-.129-.187-.258.06-.082.087-.042h.086l.086.042.086.042h.086l.086.042.042.042-.042.086h-.042l-.042-.042-.087-.042h-.042l.042.212-.086-.086h-.086v.086l.043.086.17.043.086.042.042.042v.086l-.042.086h.128l.042-.042v-.086l-.042-.042v-.042l-.042-.043-.17-.042.042-.086v-.042h.17l.042-.128v-.086l-.042-.042.086-.043.042-.042.129.17.086.043h.086l.042-.042v-.043l.042-.042h.042l.042.042v.086l-.042.086v.129h.128l-.01.086-.086.042-.042.042-.032.086.042.044.032.096-.032.064-.076.05-.02.083.012.091-.032.107h-.086l-.128-.086-.139-.02-.02-.065v-.086l-.049-.111-.057-.039h-.086l.086.128v.17l-.086.043-.086.042v-.086l-.09-.088h-.042l-.042-.042v-.086l-.042-.084-.042.042-.085.042-.042-.128v-.086l.042-.042v-.042l-.042-.086-.086-.043-.042.043-.086.086v.086l-.042.086-.086.086-.042.086-.087.042-.084-.042-.042-.042v-.043l.042-.042.042-.042h.042v-.128l-.084-.086v-.086l.042-.042.086-.341h.129l.086-.042.086-.34h.128l.128.041.128.042h.086l.042.043.043.086-.043.086h-.086v-.091h-.049zm.143 2.143h.09l.092.046.133.153.046.183-.042.12-.068.143-.022-.33-.045-.045-.091.046h-.092l-.074-.248.073-.068zm-.095-.902l-.06-.064h.06v.064zm.024.182l.044.044v.09l-.118.063-.235.036-.044-.088.22-.055.044-.044.089-.046zm-.03-.147l-.118.145-.134.044h-.044l-.042-.11.206-.035.044-.044h.088zm-.157-.108l-.044.044-.088.044-.064.054-.044-.044-.044-.087.066-.01.044-.088.044-.044h.088l.087.088-.045.043zm-.243-.113h-.177l.044.134.087.177.044.133v.177l-.044.133-.087.134-.178.22.044-.31v-.575l.044-.133.044-.133h.09l.043-.088.044-.044.044.044.044.044-.086.087zm-.265 1.196l.044.088.09.044.043.044-.013.072-.134-.087-.087-.044.013-.117h.044zm.03-.045l.086-.091.255.243-.158.011-.183-.163zm.122-.118l.072-.086v-.044l.086.072.044.044.09.044.043.044.102.059-.078.032-.116.042-.243-.207zm.322-.015l-.196-.154.044-.044h.044l.21.066h.176l-.044.045-.072.146-.162-.06zm.234-.221h-.087l-.103-.017-.176-.044.06-.073h.085l.09.017.177-.044.044.117h-.044l-.046.044zm-1.013-.385h-.14l.044-.086.106.01h.172l-.01.074h-.172v.002zm.192.086l-.096.084-.128-.01h-.172v-.064l.01-.064.386.054zm-.256-.226l-.01-.064h.278l-.076.064h-.192zm.411-2.557l-.052.074-.063.01-.097-.037.086-.042.065-.037.061.032zm.338-.523l.064.042.052.074-.052.095-.085-.02-.074-.085.022-.084.073-.022zm-.061-.131l.135-.01.084.031.042.043-.062.116-.063-.084-.136-.096zm.135.59l-.074-.024.02-.11.079.053.017-.088.042-.084.074.106-.067.123-.091.024zm-.009.088h.058l.057-.058.057.117v.116h-.057l-.057-.057-.058-.058v-.06zm-.566-2.073l-.024-.272v-.194l.164.381.028.198-.033.244-.051.106-.084-.463zm-.112-.371l-.152.018-.016-.103.19-.02-.022.105zm.032.062l-.042.116-.179.022-.003-.106.224-.032zm-.236-.256v-.043l.14-.037.064.107-.162.016-.042-.043zm-.416-.61l.042.043.042.042.042.042h.086l.042.086h-.168l-.043-.086h-.086l.043-.126zm.425.802l-.054.047v.047l-.054.096-.086-.011.086-.277h.054l.054.098zm-.808 2.756l-.04.636-.104-.295-.052-.328.137-.38.158-.284-.1.65zm.904 1.138l.165-.059-.032.127-.133-.068zm.226.957h-.117l-.148.022-.096-.128.202.001.159.105zm-.145-.15l-.215-.042.054-.081.117.038.044.044v.04zm-.312.592l.128.042.158.022.159-.01-.073.072-.202.002-.255-.042.085-.086zm1.87-2.79l.066-.2v-.09l.046-.046h.089l.045.09.046.09-.046.045-.134.089-.066.066-.046-.044zm1.297-5.39l-.006.232-.056.169-.169.155.056-.33.077-.105.098-.122zm.238.234l.108.194.034.177-.086.432-.112-.15-.055-.25.008-.208.103-.195zm2.277-.204l-.13-.13-.087-.13.305-.088.261-.13.565-.261v.174l-.044.087-.087.044h-.218l-.217.044-.174.088-.13.173-.044.129zm.737-.388l-.059.062-.116.125-.292.189-.234.062.116-.189.175-.125.176-.124h.234zm-.388.649l-.261-.174.261-.044.218-.13.347-.347.044.044.044.088-.174.087-.173.13-.098.144-.032.094.022.095.064.021-.074.053-.054-.015-.134-.046zm.188 1.026l-.063-.296v-.273l.064-.2.074.031.032.18.004.259-.111.299zm.448-.98l.297.064.653.261-.348.088-.263-.03-.39-.147-.325-.16.186-.075h.19v-.001zm.452-.567l-.143.148-.295.201-.37.116.053-.2.234-.177.521-.088zm-.472-.231l.022-.095v-.158l.064-.032.052.084-.02.169-.042.126-.076-.094zM21.89 9.75l-.145-.081-.108-.172-.132-.2-.121-.264.21.127.193.167.175.21.05.233-.122-.02zm.578-.74l-.035.12-.113.203-.147.127-.104.022.125-.223.092-.15.118-.132.043-.168.021.2zm-.244-.564l.003.165-.013.152-.127.221-.02-.116-.01-.085-.052-.136v-.19l.055-.183.042-.126.122.298zm-.208-.34v.042l-.042.042v.042l-.042.21v.212l.084.421.043.042.21-.253.043-.126v-.169l-.043-.21-.126-.211.126.084.085.084.108.216-.024.08v.042l-.042.168-.084.169-.127.169-.084.126-.103.187-.192-.23-.253-.21h-.043l-.084-.042-.042-.042-.042.042-.042-.084-.043-.043h-.042l-.182-.27-.113-.151-.088-.112.117.032.055.04.061.077.179.263.14.123.126.084.127.043h.295v-.085l-.042-.042-.042-.042v-.042l-.211-.253-.11-.05-.273-.083.13.006.113-.006.094-.053-.123.017-.084-.042-.169-.21-.084-.043-.108-.017h-.116l-.137.052-.116.043-.071-.036-.098-.069h.169l.158-.042.285-.074.289-.026h.126l.376.08.172.09-.044.04zm-1.308.084l.21-.085.145.026.107.052.148.148-.21.01-.188-.067-.212-.084zm.398.246l.168.022.211.084.169.127.179.243-.253-.01-.221-.147-.253-.319zm-1.399-.754l.166.024.38.044.345.037.2.022.215-.117.158.01.17.022.294.054.511.208.155.059-.188-.036-.508-.175-.295-.022-.274.044-.295.098-.158.01-.169-.032-.25-.019-.303-.049-.295.044-.289.073-.295.087v.044l-.02.044h-.084l-.107-.044v.044l.03.081-.074.044h-.126l-.137-.066-.032.029.042.087-.084.044h-.084l-.085-.044-.084.044.042.044.137.047-.221.04-.084-.045-.085-.044h-.042l.084.088-.084.044-.105-.007-.084-.12-.064.04.042.087h-.084l-.105-.105-.094-.021.074.13-.126-.004-.085-.044-.042-.044-.042.044.042.044h-.084l-.042-.044L17 8.417h-.084L17 8.55h-.084l-.042-.044-.042-.044h-.085l.042.088h-.084l-.042-.044-.084-.088h-.043l.043.132h-.085l-.084-.044-.06-.098h-.072l.042.088.048.054-.085.044-.084-.044-.084-.044-.085-.044.085.174h-.127l-.126-.086-.042-.044h-.043v.044l.127.13-.169.044-.023.006-.066.071-.211-.217v.101l.126.16-.07.044-.18-.12-.045-.098-.028.058.032.082.103.119-.056.028-.052-.018-.103-.083-.11-.047.039.09.088.127-.043.044-.126-.087-.042-.044h-.042l.042.13.11.075-.056.058-.14-.13-.1-.1.014.117.14.145-.053.012-.084-.044-.084-.044-.085-.088-.038-.082.2-.196.243-.196.083-.08.126-.045.127-.13.656-.104.083-.167v-.088l-.085-.087V7.85l.085.044.168-.218.19-.398.134-.334.057-.493.043.262.022.261-.201.382-.064.202-.086.135-.05.088-.104.195-.042.164.042.076h.506l.422.044.444.032.237.001.267-.13.302-.107.271-.117.297-.137.174-.062.381-.045.06-.129.15-.5.237-.409.307-.442.34-.354-.308.405-.23.425-.17.36-.126.185-.1.396.027.05zm1.245-.567l.052-.307.053.088.052.088.081.24.022.2-.063.148-.136-.01-.095-.126.034-.32zm.666.081l.203-.032h.175l.176.053.175.052h.175l-.263.106-.261.039-.282-.014-.29-.077.066-.098.126-.029zm-.064-.168l-.185.162-.01-.205.055-.207.12-.21.187-.161-.045.411-.122.21zm.963-.28l.183.106.219.131.273.066-.266.042-.324-.042-.218-.113-.273-.162.182-.077.224.049zm.297-.378l.179-.01.283.055.22.02-.25.093-.21.064-.264-.01-.25-.103.095-.079.197-.03zm-.15-.277l-.093.225-.246.224-.175.131v-.087l.042-.226.116-.18.412-.296-.056.21zm-1.073-.609h.216l.268.032.326.13.162.054-.108.054-.221.036-.265-.036-.22-.059-.318-.157.16-.054zm.186-.217l.012-.2.045-.278.118-.224.176-.175v.263l-.088.219-.263.395zm.858-.11l.313.019.362.023-.373.132-.268.06-.263-.016-.33-.112.56-.106zm-.11-1.314l.078.22-.01.305-.01.275-.101.21-.044-.263v-.482l.086-.265zm-.171.253v.548l.084.295-.103.107-.108.062-.286.093.16-.22.084-.252.042-.253v-.169l-.042-.127.042-.126.253-.253-.126.295zm-.933-.175l.634-.2.383-.006-.088.108-.1.096-.28.143-.223.03-.35-.112.024-.06zm.727-1.238l.268-.108.312-.054.312.022.18-.02-.045.107-.09.108-.178.108-.223.054h-.49l-.232-.018.186-.2zm-.401-.046l-.054-.234v-.235l.054-.281.106.094.054.14.054.234v.282l-.074.231-.14-.23zm-.017.567l.266-.071.248.012.368.108-.265.09-.197.084-.155.013-.183-.042-.131-.093.049-.101zm-.43.85l.421.126h.211l.21-.084-.083.211-.127.169-.126.168-.085.211-.042.422-.21.168-.17.127.043.042h.084l.295.169.295.084h.296l.168-.042.127-.084h.126l-.21.21-.254.17-.126.126-.084.253.042.168v.043l-.211.084-.21.126.083-.295v-.295l-.042-.042-.168.169-.17.168-.083.211-.043.127.043.126v.042l.042.085v.042l-.042.084-.043-.169-.084-.168-.21-.338-.127.76.042.126.084.084-.126.085h-.169l-.295-.043-.337-.042-.296-.042.043-.21.126-.212.084.127.085.126.253.169.21.042.127.042.127-.042-.17-.168-.126-.17-.126-.126-.21-.084.294-.169.211-.21.127-.296.084-.337-.169.084-.126.127-.38.253.422-.59.21-.296.254-.253.126-.253.042-.295.043-.253-.043-.295-.21.295-.211.337-.042.17v.168l-.043.38-.38.463.17-.21.084-.254.084-.21v-.254l-.084-.126-.084-.084-.17-.127h-.041l.126.464-.253-.084-.084-.043h-.38l.844-.506.21-.084.211-.126.17-.211.126-.211zm-1.348 3.061l.196.053.197.11.35.333-.244-.05-.197-.108-.302-.338zm.884-1.538l.049-.557.178-.285.132-.268v.279l-.047.339-.132.271-.18.221zm-.348-.428l-.057-.17.094.084.095.116.018.121v.152l-.124.295v-.369l-.026-.23zm.277-2.623l-.154-.294-.131-.219.22.175.218.22.132.087.088.088.044.132.008.227-.073-.021-.352-.395zm.18.583l-.285-.136-.136-.12-.063-.07.454.075.179.127.136.114-.285.01zm-.216.849l.085-.211.126-.21.043-.254.084.169v.126l-.084.169-.043.169-.21.295h-.043l.042-.253zM16.466 5.47l-.105.106-.263.148.162-.264.059-.115.114-.062.088-.044.093-.04.19-.021-.242.221-.096.07zm.993-.405h.337l-.084.084-.169.085h-.295l-.084-.043h-.042V5.15l.337-.084zm-.21-.21l-.117.17-.137.064-.01-.17.094-.147.211-.253.02.202-.062.133zm-.15-.677l.105-.06.21-.058.21.059.157.118h.052l.053.059-.228.044-.19.017-.473-.118.105-.061zm-.294-.545l.064.126.042.18v.232l-.02.21-.159-.158-.062-.453.032-.253.103.116zm-.748.305l.274.108.227.164.228.217-.046.054-.273-.108-.182-.054-.091-.107-.137-.054-.09-.108-.183-.162.273.05zm-.678.876V4.53l.101-.283.102-.236.028-.047.051-.048.049.142.013.184-.05.33-.101.284-.166.241-.027-.283zm1.481-.265l-.055.115-.112.114-.278.115-.278.057-.279.058.223-.23.223-.114.556-.115zM13.787 6.5l-.165.132-.088.08-.084-.127-.096-.176-.03-.162V6.08l-.085-.169-.127-.169.169-.042h.21l.17-.042.084-.042.084-.042.085-.085.042-.126.042-.211.084-.21.085-.085.084-.042-.042-.042h-.042l-.211.126-.211.084-.169.085-.168.168-.043-.295-.042-.168-.084-.127h-.042l-.085.21-.084.254-.042.21.042.254-.253-.338-.084-.168v-.213l.084-.084.127-.085.126-.084.084-.126.043-.085.042-.126.084-.253.042-.085.068-.097.084-.063.143-.008V3.8l-.126.21-.084.212v.21l.042.253.126.127.085.169.126-.296.084-.295v-.295l-.084-.126-.084-.253.295-.043-.042.211.042.253.084.211.169.169.169.168.084.085.042.084h.042v-.084l-.042-.127-.039-.253.064-.02.043.14.055.197.056.24.074.12.169.126.38.169-.085.126-.084.085-.085-.127-.126-.126-.295-.127-.296-.084-.295-.042.127.168.042.085-.042.126-.169.253-.21.253-.085.127-.042.126v.169l.084.126zm-.464-1.315v.136l-.104.18-.107.126-.062-.317.042-.221.137-.348.066.216.028.228zm.117.116l.278-.22.241-.099-.047.248-.088.225-.209.131-.234.039-.145.049h-.097l.3-.373zm.28-1.319l.072.145.007.267-.118.428-.167-.228-.032-.285.064-.24.088-.217.086.13zm.323-.248l.063.03.05.048.102.141.151.284.056.393-.158-.2-.201-.16-.095-.263.032-.273zm.62.712l.166.064.127.098.133.175.218.478-.13-.044-.235-.147-.121-.132-.159-.492zm.684 1.044l.282-.14.282-.047.234-.095-.07.123-.137.159-.231.127-.506.074.053-.108.093-.093zm-.227.07l-.25.057-.283-.086-.223-.184-.142-.17.236.041.236.087.237.128.189.128zm-1.32.588l.095-.159.179-.178.082-.12.065-.154.013.177-.035.277-.085.179-.104.19-.155.091-.078-.143.024-.16zm.638-2.527l.282.09.234.178.152.166-.256.001-.218-.106-.21-.147-.18-.22.196.038zm.89-.147l.01.221-.02.243-.2-.21-.063-.201.027-.3.046-.282.091.234.11.295zM16 2.738l.192.071-.145.083-.189.052-.337.005-.241-.07.192-.142.27-.036.258.037zm-.433-.725l.067-.165.23-.182.099-.05-.138.517-.18.263-.227.164.149-.547zm-.663.278l-.112-.172-.069-.157-.039-.264.122.155.226.076.118.162.032.14.049.111-.088.309-.035-.102-.037-.1-.167-.158zm-2.672 2.045v-.14l.044-.188.22-.187.266-.187-.044.187-.132.187-.177.188-.177.14zm-.147-1.478l.21-.037h.133l.155.037.15.105.23.098-.279.057h-.25l-.25-.105-.198-.103.1-.052zm.127.393l.108.147v.196l-.162-.098-.108-.147-.108-.147v-.147l.27.196zm-.31-1.326l.031-.189.085-.22.116.232.027.262-.049.226-.044.3-.104-.167-.053-.137-.01-.307zm-.478-.153l.116.05.117.102.116.254.226.35-.273-.221-.095-.147-.104-.2-.103-.188zm6.426 3.73l-.162.163-.138-.024-.103.01.1.042.057.044-.138.042-.128.046-.129-.046h-.086v.046l.086.046-.086.045h-.086l-.128-.045h-.086l.086.09h-.214l-.086-.045-.086-.045.042.09-.042.046h-.042l-.128-.045-.087-.046h-.086l-.042.046.086.045.086.046-.062.042-.066.03-.128-.072h-.086v.045l.125.083-.056.029h-.1l-.097-.066-.042-.046-.086.046.086.09.042.046h-.086l-.128-.045-.086-.046h-.086l.172.091-.122.03-.1-.041-.079-.078h-.086l.128.137-.043.045-.086-.045-.129-.091-.086-.046h-.128l.128.091.178.128-.17.015-.208-.173-.053.032.176.141-.1.058-.113-.07-.086-.043h-.13l-.037.04.142.029.113.07-.184.072-.184-.086.014.072.1.071-.142.086-.129-.086-.025.08.11.079-.1.086-.113-.034-.044-.044-.043.044.143.093-.057.057-.13-.062-.125-.024.184.128-.056.071-.046-.046-.173-.043v.043l.13.088v.044l-.044.044-.13-.086-.13-.044.088.13.13.088-.044.043h-.04l-.26-.173.1.145.146.158-.029.044-.09-.017-.127-.113-.086-.044.043.088.058.07.16.13-.113.028-.192-.142h-.086l.315.255-.1.042-.217-.081-.13-.093.044.086.086.088.245.137-.159-.007-.123-.022-.184-.128.042.1.093.094.233.09-.25.002-.2-.092-.17-.137.223-.354.245-.273.113-.157.022-.12h-.086l-.13-.261-.13-.262-.174-.521-.09-.135-.075-.108-.18-.192-.174-.26-.044-.13-.035-.15-.233-.374-.166-.3-.043-.174-.036-.193-.008-.199-.086-.173-.086-.086-.086-.086-.2-.065-.158-.064-.12-.175-.136-.196-.042-.128-.097-.192.287.386.159.172.17.113.093.064.13.044v-.088l-.13-.043-.13-.087-.435-.485.174-.044.173-.044.13-.13.044-.044.044-.087v-.172l.086-.088.13.261.086.044-.174.044-.13.086-.23.27-.117-.009-.042.043.173.087h.39l.088-.044.086-.086.043-.043.087-.044v.044l-.044.043-.086.13-.086.262-.044.13v.13l.13-.348.086-.13.087-.13-.13.435v.478l.13.479.086.26.174.217.029.103.101.115.052-.05.091-.176.183-.174.182-.132.155-.183.1-.211.106-.193.167-.079.634-.207.445-.378.267-.123.36-.128.127-.107.18-.042.097-.054.339-.064.138-.064-.115.046-.246.114-.138.044-.41.235-.273.131-.263.111-.307.258-.139.119-.2.08-.223.044-.187.044-.115.046-.208.415-.094.236-.152.179-.09.043-.137.088-.048.103-.064.096.054.16-.01.086-.084-.003-.044.044.044.044.086.044h.087l.044.087h-.13l.044.088.201.024.07.1-.154-.028-.073.036.24.104.096.076.032.076-.106-.027h-.044l-.042.032.214.091.128.042.003.063h-.226l.01.065h.044l.164.044.044.044-.218-.03.012.074h.044l.111.044.042.057-.153-.013v.044l.086.043.11.027.042.058h-.176l.014.057.17.044.1.1-.135.02h-.044l.066.066.084.015.1.028.141-.065.174-.13.39-.262.197-.155.19-.074.053-.017.433-.105.467-.074.456-.07.489-.23.336.07.256-.055.3-.09.231-.117.085-.054.288-.167.233-.078.258-.047.258-.047.565-.047.263-.027.3-.095.776-.444.255-.236.287-.268.106-.204.189-.368.222-.386-.431.99-.137.226-.138.192-.214.115-.358.208-.253.123-.186.128-.21.132-.242.047-.51.05-.465.058-.232.039-.258.141-.043-.022h-.086v.095l-.096-.017zM11.85 2.475l.116.064-.183.113-.152.077-.2.078h-.203l.1-.157.153-.155.264-.085.105.065zm-.214 1.664l-.295-.126-.211-.085h-.169l.084-.168V3.59l-.042-.337.085.084.042.042.21.042.17.085.084.084.042.084.042.253-.042.211zm.111.115l-.057.182-.073.152-.157.165-.178.169-.16.088.043-.21.137-.237.148-.159.18-.15h.117zm-.752-1.805l.052-.084.33-.186-.031.169-.095.14-.096.047-.241.047.08-.133zm-.294.015l-.047-.327-.012-.445.248.34.032.338-.065.256-.156-.162zm-.192.707l-.236.06H9.8l.189-.178.236-.059.283-.059.236.059-.236.177zm.164.255l.062-.206.125-.206.103.491-.012.25-.1.195-.116-.11-.06-.171-.002-.243zm.322.823L10.7 4.16l.085-.062.12-.1.237.015.137.043.283.148-.133.044-.113.03-.175-.001-.147-.03zm.042.528l.01-.442.334.015-.169.169-.084.168-.042.211v.211l.38-.253.168-.169.127-.21.035-.073.095.2.123.168.084.168.042.043.042.084-.295-.042-.169-.042-.168.042-.633.253.075.01.052.032.168.042.211.042.211.042h.084l.127-.042-.169.253-.084.253-.042.296.126-.043.127-.084.126.084.127.127.126.126.127.085-.253-.042h-.253l-.253.042-.211.168-.084-.042-.043-.042.085-.126.084-.338-.042-.168-.042-.085-.085-.126.253-.085.194-.136-.226-.022-.253-.085-.347-.01-.155.026.155-.11.078-.164.052-.104.074-.275zm.091.965l.084.126.043.127.042.168-.042.169-.085.21-.042-.041.042-.38-.042-.38zm.007-.032l-.263-.024-.307-.115.148-.074.292-.032.541.095-.188.064-.112.033-.111.053zm-.614-.543l.084-.338.149-.21.21-.201.02.318-.07.253-.098.22-.253.261-.042-.303zm.312.575l.126.042.127-.042v.674l-.169-.168-.126-.169-.211-.422.253.085zm-2.57-2.323l.337.305.464.506.131.159.127.271.2.193.231.108.476.325-.044.105.044.044.149.116-.053.064.076.036.074.032.044.128-.074.054-.002.055h.14l.085.113-.137.048.182.038.052.097-.148.035.194.07.064.085-.084.017-.044.042.044.044h.172l.1.073-.142.055.086.044H11.174l.085.113-.166.017-.086.042h.086l.086.044h.13l.078.024.042.07-.162.036h-.044l-.044.042.172.044.134-.022.07.084-.202.024-.086.042.086.044h.086l.132.008.052.065-.14.015v.044l-.044.042h.13l.086.044.044.042-.044.042-.044-.042-.042.042v.044h.044l.044.044v.086l.044.086.086.086.042.128.13.044h.086l.044.086h-.172l-.044.044.13.043.161-.033.075.094.116.032.08.08h.043l.01-.102h.211l.337.014.113.084-.497.046-.302.086.533-.019.253.014-.253.113-.577.064.351.062.295-.042.11-.008-.326.161-.344.043.258.043.302-.042v.086l-.288.1-.316.03h-.172l.295.056.474-.049-.038.072-.044.043-.172.05-.355.019-.3-.037.299.116.101-.008.248-.022.196-.007v.042l-.439.11-.158.017-.115-.027-.127-.056.123.115.172.025.088-.003.223-.024.196-.03-.03.097-.384.065-.263-.026-.086-.042-.137-.039.18.137.13.044.14.022.075.01.226-.02.122-.036.048.12-.24.035-.286-.013-.194-.052-.206-.108.12.155.203.101.12-.008.306.011.201.036-.056.082-.308-.023h-.295l-.13-.073-.086-.042.224.177.1.007.258.042.29-.008-.037.086-.247.022-.312-.04.101.075.284.036.24.01-.033.084-.121.042h-.147l-.258-.062.09.087.19.058.226.037-.032.074-.153-.01-.226-.062-.328-.392-.357-.393.052-.275.064-.253.243-.452-.172-.3-.218-.344-.506-.882-.411-.558-.316-.412-.146-.38-.216-.342-.13-.172-.182-.162-.172-.128-.172-.086-.172-.128-.149-.225-.143-.302-.258-.386-.258-.344-.355-.33-.232-.243.345.234zm.112.413l-.195.196-.252.103-.443.03.157-.148.204-.133.212-.03.317-.018zm-.42-.195l-.232-.071-.225-.162.263-.04.162.03.162.05.182.183-.312.01zm-2.08-.198l.185-.128.155-.113.27-.069.222-.029.095-.001.066.043-.06.075-.048.092-.476.132h-.41v-.002zm.485.447l-.2-.111-.095-.184-.046-.054.24.014.295.21.126.17.127.21-.447-.255zm.337-.297V3.8l-.126-.168-.211-.127.21-.042.17-.084-.043.21zm.096-.042l.125-.28.412-.416-.09.345-.108.233-.376.407.037-.289zm.712-.057l.19.148.276.064.38-.01.063.095-.516.01-.263.106-.105.106-.146.191.162.027h.21l.334-.057.17-.117.126-.126.074-.127.057.09.439.637-.231-.032-.221-.084-.154.069-.295-.042-.295-.084-.295-.043-.296-.042.127-.168.084-.17.042-.21-.025-.132-.032-.126-.28.258-.126.127-.043.168v.211l-.126-.253.21-.295.127-.127.166-.173-.009-.061.09-.263.021-.231.52.43.116.106-.21-.062-.211.022-.201.064.096.106zm-.263.548l-.165.184H6.99l-.018-.182.055-.169.3-.324v.169l-.041.169-.046.153zm-.968.24l.401.01.36.01.516.064.359.094.285.075.179.01.147-.071.237.074.21.044.092.206-.222-.083-.238-.034-.565-.049-.243-.062-.41-.108-.315-.062-.454-.032-.34-.086zm.297.156h.421l-.084.043h-.126l-.17.126-.126.127-.126.168-.042.169-.085-.042-.042-.042v.168l-.042.211-.042.38-.084-.169-.17-.169-.294-.253v-.042l.295-.042.253-.169.253-.21.21-.254zm-.45 1.731l-.201-.128-.124-.196-.106-.312-.06-.196.183.147.186.245.121.44zm-.652-1.098l-.113-.029.105-.192.121-.116.257-.085.266-.084.253-.042-.158.184-.296.24-.435.124zm-.523-.686l.167-.134.18-.052.284.022.297.088-.22.138-.237.108-.558-.03.087-.14zm-.64-.61l.053-.14.27.324.112.375v.187l-.176-.15-.179-.21-.082-.245v-.14h.001zm-.014.368l.042.085.211.253.21.168h.043v-.042h.675l.295-.126.23-.167.264.01.263.064-.378.093-.253.052-.16.064-.21.074-.095.105-.127.168-.012.139.117.064.064.01.084.21.085.338.084.169-.337-.337-.338-.38-.38-.38-.379-.337-.38-.295.17-.21.126-.085.042-.127v.295l.044.125zm-.449-.364l.075-.253.153-.172.15-.216v.216l-.008.192-.127.243-.23.221-.013-.231zm-.706.552l-.085.106-.263.116-.278.007-.24-.034-.138-.059.462-.179.231-.059h.277l.034.102zm.069-.324l-.074.074-.243.042-.253-.126-.264-.063.306-.136.233-.01.22.042.107.094-.032.083zm1.258 1.955L4.507 6l.131.22.132.261.11.169.065.23-.043.212-.044-.088-.044-.261-.176-.393-.087-.174-.186-.213.142.257-.176-.044h-.219l-.175.044-.132.087-.131.044.131.088.22.044H4.2l.175-.044.176-.088.175.437h-.088l-.131-.044-.176-.087-.263-.088-.263-.088-.263-.044-.263-.131.088-.218.307.044h.263l.263-.088.088-.087.087-.132.088.132zm2.908 1.177h.042l-.084.126-.042.085-.18.226-.286.158-.295.037.168-.21.105-.144.295-.179.277-.1zm.136.396l.022-.2.032-.085.053.198.05.185V8l-.113-.111-.074-.179.03-.179zm2.19 1.862l.064.053.052.064.074.074-.165.042-.266-.189-.156-.148.127-.085.113-.032.157.221zM8.38 9.34l-.248-.052h-.043l.17-.127.21-.168.126-.211.085-.211h.042l.295.295-.126.042-.085.042-.126.043-.127.042-.21.126.379.085h.422l-.127.042-.126.042-.316.024-.195-.014zm-.21-.223l.051-.509.101-.255.113-.18.064-.147.08.203v.212l-.036.177-.066.164-.124.195-.183.14zm.832.285l.054.06.283.227-.158.06-.123-.171-.17-.152.114-.024zm.07-.03l.136-.06.113.126.337.21-.253.014-.155-.126-.177-.164zm.29.415l.127-.042h.258l.129-.042.086.086.128.086.101.1-.38.084-.337-.071-.113-.071-.086-.086.086-.044zm.073-.676l-.41.049H8.82l-.257-.05.103-.048.154-.05.275-.051.187.052.153.049v.049zm-.25-.204l-.126-.085-.253-.253.127.042.24.13.181.208-.168-.042zm-1.021-.71l-.002.229-.169.337-.082-.265-.054-.271.054-.28.05-.251.101.15.051.15.05.2zm-.32.44l-.163-.007-.148-.091-.2-.186-.202-.234-.1-.093-.148-.09.351.068.19.127.212.317.209.189zM5.442 6.613l-.464-.338.255.09.226.054.228.106.24.194-.24.02-.245-.126zm.309.266l.408.029-.169.09-.133.052h-.268l-.23-.044-.26-.11h-.045l.135-.05.172-.036h.225l.165.07zm-.784.17v-.042h.126l.127.043.084.421.253.422v.084l-.169-.21-.126-.211-.295-.422V7.05zm.46.505l-.07-.127-.04-.278.058.052.057.053.115.158.077.128.014.14v.24l-.21-.366zm.258.383v-.422l-.126-.21-.169-.17h.38l.379-.126-.169.127-.084.168-.084.211v.253l-.042.042h.084l.042-.042.127-.042v.253l.042.253.126.253.169.169-.211-.085-.21-.168-.17-.211L5.6 8.02l.084-.084zm.628-1.09l.047.108-.047.162-.093.27-.14.216-.233.162.047-.27.419-.648zm-.04 1.584l-.087-.172-.042-.214V7.83l.086.044.086.086.044.215.042.472-.13-.216zM4.66 5.425l.058.174.015.233-.056.233-.1-.218-.07-.26L4.5 5.39l.036-.184.124.22zm-.136.87l-.154.051-.206.05h-.359l.154-.1.205-.051.36.05zM3.49 6.1l.199-.167.199-.056.443-.205-.116.222-.278.15h-.2L3.49 6.1zm.453-.997L3.86 4.85l.14.084.14.085.091.175.056.19.037.315-.204-.181-.106-.175-.07-.24zm-.411.258l.21.042.17.127.28.14-.321-.014-.21-.084-.338-.21h.209zm-.17.084l.168.127.169.084.21.085h.17l-.17.042-.168.042-.169.084-.168.127v-.169l-.042-.21-.085-.17-.126-.126.21.084zm-.053.402v.179l-.09.179-.136-.135-.047-.18.042-.224.047-.22.137.177.047.224zm-.251-.869l.064-.168.19-.378.063.25-.032.2-.132.21-.141.141-.012-.255zm.115 1.566l-.046.229-.093.184-.138.184-.23.183v-.229l.093-.23.184-.183.23-.138zm-1.129-.012l.186-.128h.185l.324.064.277.064-.231.128h-.231l-.51-.128zm-.001.325l.202-.116.287-.042-.17.214-.16.116-.284.042-.348-.052.473-.162zM1.695 7.9l-.175-.361-.14-.464.281.197.17.302.104.278-.034.279-.206-.231zm.402.5l-.085-.084-.042-.084v-.169l.042-.21v-.085l-.042-.126-.126-.253-.085-.127-.126-.126h.421l.211-.043.085-.042.084-.126.169-.127.084-.084h.126l-.126.126-.084.127-.043.21v.17l-.042.084.338-.127.168-.126.085-.169.21.253.253.21.253.127.17.043h.168v.042h.084v-.042l-.21-.253-.254-.253-.126-.127-.127-.042-.168-.042-.17.042.043-.422.295.169.253.126.295.17.296.083.506.506.38.549h-.043v.421l.042.211.084.21-.318-.3-.204-.239-.183-.24v.325l.05.308.107.19.127.126.168.084.211.042h-.168l-.127-.042-.295-.127-.253-.126-.253-.127.126-.084.085-.042.042-.084.042-.127v-.169l-.042-.168.042-.127-.169.085-.253.506-.042-.17-.126-.126-.127-.084-.168-.084-.043-.042-.042-.043v-.042l.169.085.21.042h.212l.168-.085.042-.042h.043l.084-.042.084-.042.085-.042h.084l.084-.042-.21-.043-.211-.042-.253-.042H3.91l-.211.042-.21.127v-.211l-.043-.169-.084-.168-.127-.127-.042-.126-.127.253-.084.168v.253l.042.085.085.21.126.17v.21L3.11 8.19l-.17-.295-.168-.253-.126-.085-.211-.084h-.337v.084l.168.295.253.211.295.211.296.169v.042l-.464-.042-.548-.042zm1.138-1.393l.295.043.169.126.38.38-.296-.085-.21-.084-.17-.169-.168-.21zm2.221 2.028l-.084-.218-.064-.258-.017-.297.198.157.131.21.066.208v.21l-.066.209-.164-.221zm-.59-.408l.224.226.458.435-.338-.091L5 9.092l-.156-.169-.098-.21-.042-.289.162.203zm-.744.153l.085-.126.042-.17.126-.252h.042v.253l-.084.21-.084.043-.127.042zm-.76-.464l.084-.168h.042l.127.295.042.126.084.127-.464-.169.085-.21zm-.178-.283l-.092-.231V7.57l.092-.277.186.231.047.277-.045.23-.093.232-.095-.231zm.444.256l.231.128.117.154.131.307-.116-.103-.18-.098-.183-.388zm-.054-.31l.084-.042.085-.042.253-.043.506.043-.295.168-.169.042-.21-.042-.254-.084zm-.492.322l-.306-.143-.295-.243-.285-.36h.159l.148.051.221.159.159.243.199.293zm-.564.69l-.126.21v-.42l.001-.193.42.066.17.042.168.042h-.169l-.169.042-.168.084-.127.127zm.6.278l.497.046-.09.09-.09.045-.225.09-.542-.089.135-.09.091-.046.225-.046zm-.102-.175l-.361.047h-.137l.18-.192.227-.144h.226l.226.048-.361.24zm1.993.754l-.237.042-.216-.025-.2-.113.191-.046.238-.042.187.012.231.07-.194.102zm.466.656l-.076-.086-.056-.197v-.183l-.047-.192.18.152.093.209.036.386-.13-.09zm.719-.59l-.088.192-.184.148-.184.149.086-.24.088-.192.136-.147.184-.148-.038.238zm-.13-.206l-.169.21-.126.211-.085.253-.042-.21-.042-.169-.127-.127-.126-.126h-.085l-.084-.084-.084-.043h.59l.253-.042.295-.042-.168.169zm1.36.19l-.168.127-.21.126h-.212l.137-.168.169-.127.2-.084.254-.042-.17.168zm.539.107l-.127.084-.295.042.101-.115.142-.064.295-.084-.116.137zm.238-.233l-.095-.169-.076-.082-.082-.012.136.22-.146-.052-.105-.158-.159-.042.137.178-.189-.052-.165-.22-.095-.02.137.191-.137-.052-.1-.11-.085-.086-.132-.087.09.131.079.09-.121-.048-.097-.055-.086-.086-.16-.075.127.147.022.042-.105-.059-.108-.052-.189.106-.347.107-.466.057-.342.044-.343-.044-.384-.098-.383-.25-.47-.261-.51-.234-.26-.068-.599-.115.803.061.623.233.337.179.454.19.258.154.182.055.182.022h.211l.412-.042.426-.13.128-.044.086-.07-.512-.39-.427-.386-.386-.452-.36-.476-.155-.197-.197-.169-.172-.07-.17-.087-.388-.18-.225-.122-.214-.103-.385-.261-.512-.3.256.086.214.128.427.26.427.146.427.174.086.044.17.086.325.06-.027.114.043.044h.042l.433.629.267.324.224.24.272.28.298.217.4.204.282.14.59.182.535.113.118.226.094.175-.094-.013zM5.73 8.714l-.049-.189.05.048.048.047.147.142.39.33-.292.142-.39.047.098-.142.049-.236-.05-.189zM8.406 9.79l-.113-.169-.113-.224.225.055.042.156.14.224-.18-.042zm.269.042l-.098-.169-.117-.22.113.052.102.11.281.183-.281.044zm.136-.23l-.189-.145.201-.01.263.275-.06.056-.215-.175zm1.12.638l-.179.01-.123-.034-.138-.053-.476-.238-.028-.05h.086l.094-.041.078.084.055.05.191.117.159.032.153.017.214-.042.172-.043h.086l.05.08-.394.111zm1.176.552l-.042.086-.042.086-.043-.042-.17.086v.086l-.042.086-.042.042-.086-.128-.129-.129.043-.128v-.042l-.043-.042v-.042h-.086v-.042l-.042-.043.042-.086.044-.042.086-.086.043-.086.128.086.17.086.256.17-.045.124zm.568.337l-.042-.127-.21-.253-.254-.168-.253-.169-.168-.084-.215-.157-.248-.25-.322-.308-.23-.348-.29-.398-.591-.843-.38-.38-.168-.168-.211-.127-.407-.18-.435-.17-.445-.166-.422-.169-.362-.187-.419-.309-.168-.126-.17-.21-.451-.564-.506-.59-.675-.577-.575-.424.322.128.115.125.222.145.159.137.462.35.223.185.21.197.478.531.408.45.159.087.11.11.27.143.338.158.169.052.234.027.282.144.182.084.182.042-.155.113.056.014.189-.096.084.042H7.8l.05.027-.134.057v.042l.253-.042.169.084-.085.043.042.042.164-.073.091.115-.047.07.174-.028.126.084-.042.043h-.091v.042l.084.042h.042l.085-.042.2.158-.158.01H8.68v.043l.21.042.117.032.084.084-.158.01H8.89l-.043.042.085.043h.126l.152.028.098.085-.123.055H9.1L9.06 7.94l-.042.042.21.042.117.033.103.092-.133.046-.127-.042h-.084l.253.084.208.029.084.126-.25-.029H9.23v.043l.253.042.19.074.085.084-.233-.074-.211.042.295.085.282.07.14.156-.204-.004-.134-.052-.042.042.169.085.25.038.097.127-.052.256.042-.084.042-.113.201.169.169.126.084.084.127.043.052.084-.042.199.042-.084.042-.046.042-.042.127.072-.014.156.056.168.013-.224.03-.046.14.073.028.169.042.18.042-.126v-.127l.084.127.043.126.042.253.055-.189-.013-.106v-.084l.126.253.041.114.002.223.055-.111.029-.186.125.213.001.335.085-.295.082.213.014.168-.098.04-.084.127-.042.127-.043.084h-.042l-.084-.042v-.042l-.007-.132-.076-.096zm.068.408l.049-.049.18.05-.049.15-.049.099v.298l-.08-.199v-.3l-.051-.049zM11.07 12.7l.051-.05.202-.102h.102l.1.05.254.102-.101.05h-.555l-.05.051V12.7h-.003zm.279.11l-.053.052-.052.054-.106-.052.106-.053h.105v-.001zm-.695.34v-.087l.044-.044h.09l.089.087h.087l.088-.043.044-.044v-.044h.177l.044-.044.044-.044.133.133v.088l-.044.09-.133.089-.134.044-.087.044h.442v-.044h-.044l-.044-.044.044-.044h.088v.09l-.044.043.044.09-.178.044h-.264v.043l.089.044h.09l.133-.044.133-.043.088-.088v-.088l.043-.088-.043-.087h-.088v-.142l-.044-.088-.044-.043-.044-.044h.134l.177-.044.044-.09.043-.043h.044l.073.51-.204.331-.221.31-.044-.133-.133-.087v.043l.044.088.043.133-.043.09-.088.09-.093-.05v-.044l.044-.043v-.09l.088-.044-.088-.044h-.177l-.088-.043v-.177l.044-.044-.088-.044-.133-.044-.088-.044-.09-.044v-.135zm-1.49 1.066v-.202l.114.304-.113-.102zm.129.35h.092v.092h-.092v-.093zm-.06-.166h.215v.115h-.106l-.108-.115zm.325.435h-.125v-.162l.125.081v.081zm.079-.271v.076l-.093-.076v-.076l.093-.076v.152zm.147-.265v.167l-.056.056v-.223h.056zm.355-.572l-.045.133-.044.044-.044.044h-.09l-.043-.044-.044-.09-.044-.132-.044-.044H9.7l-.044.09.044.089.043.133.044.09-.09.176-.043.09-.09.09-.133-.045-.09-.044-.021-.076-.052-.116-.02-.137.021-.146.075-.1v-.044h-.044l-.09.09-.045.082-.078.068-.044.044-.086-.034v-.177L9 13.67l.09-.043.209-.034h.177l-.044.31v.177l.09.134-.044-.31.043-.311.09-.044h.133l.09.044.089-.044-.177-.044h-.177l-.355.044-.087-.044.09-.044h.266l.089-.043v.043h.133l.044-.043h.267l.043.177.044.043.037.088zm.002-.401l-.045-.046-.046.046h-.135l-.045-.135-.092-.09v-.09l.092-.046h.09l.092-.046.135-.18h.09v.045l.046.135.046.091.045.046.091.045-.045.046v.091l-.09.091h-.229v-.003zm.452.035h-.09l-.043-.09.09-.089v-.045h.045v.133l.131.135-.133-.044zm-.265.813l-.01-.282.273-.244.092-.098.187-.007.09-.096-.085.238-.231.103-.186.054.05.045.094-.003.136-.098.14-.005-.04.19.054.185.01.28-.046.049-.047.001-.047.002-.05-.093-.056-.233-.007-.187-.05-.045-.045.048-.09.097-.04.189-.047.001-.049-.045v-.046zm-.114.157l-.051-.047v-.095l.05.048.102.047.152.047h.05v.047l-.05.095h-.102v-.095l-.05-.047h-.101zm.162.418l-.051-.05h-.05l.05-.204.204.1-.05.104-.103.05zm.18.147l-.047.096h-.047l-.048-.047v-.192l.096.096h.048v.047h-.002zm.027-.282l-.052-.104.052-.105h.052v.053l.105.052v.104l-.052.053-.105-.053zm.034.31v-.175l.059-.059.059.06.059.058v.06l-.117.058h-.06v-.001zm.202.235l-.128.015-.057-.057.013-.07v-.058h.115l.115.115-.058.055zm.245-.212l-.056.057-.113-.113-.057-.113.226.056v.113zm-.13-.267l-.063.064-.062-.064v-.064l.25-.064-.125.128zm.015-.212l-.025-.7.049-.05.202.087.1-.004-.098.051-.047.094.003.093.052.091-.047.095.007.187-.098.05-.098.006zm.344-.04v.057l-.064.057h-.064v-.115h.128zm-.084.284l-.096.05-.05-.097v-.096h.097l.096.096-.047.047zm.094-.421l-.042-.086v-.129h.13l-.088.215zm.295 1.691l-.042-.042v-.172l-.086-.044.022.086-.044.086-.042.086-.054.118-.042.044-.138.096h-.215l.044-.086v-.086l-.042-.042.086-.128.042-.086.044-.086-.086-.042-.052-.085.042-.086v-.086l.086-.086.182-.044.128.043.086.086.086.128.129.086v.172l-.043.172h-.09v-.002zm.027 1l.032-.347.186.06h.044l.044-.045.042.172.044.086.044.044h.042l.044-.044-.086-.042v-.258l.086-.086.042-.086-.042-.086h-.086l-.043.042v.086l-.042.086-.086.042h-.09l-.097-.054v-.258l.044-.086v-.044h.086l.044-.042v-.086l.052-.074.042-.044h.214l.215.044.128-.044h.086l.042.044.13.086.044.086.01.095h-.128l-.129-.04-.086-.043-.182-.052.042-.086-.042-.043-.044.086v.086h-.086l-.086.043-.172.13v.042l-.086.042v.086l.086-.086.086-.086.086-.086.129-.042v.214l.042.172.044.172.172.128v.042l-.043.086-.086.044h-.086v-.044l.044-.042.042-.044-.042-.086h-.044l-.086.086-.042.044v.086l.042.042.13.086.128.043h.129l.374.053-.042.044h-.042l-.054.048-.279-.014-.128-.042-.128-.044-.128.044.172.042.172.044.492.042-.13.056-.168.042-.452-.054.13.042.128.044.3.042.128-.01-.086.086-.13.042-.17.01-.128.044.128.042.192-.02-.042.086-.042.042-.292.022.139.04h.472l-.086.087-.128.042-.258.044.042.042h.214l.214-.042-.042.042-.086.044-.128.042-.258.042.258.044.214-.044v.086l-.086.042-.172.086h-.086l-.086.042h.514v.044l-.128.043-.128.043-.258.043.042.042h.258l.258-.042.044.042-.258.128-.258.042.042.044h.258l.258-.044v.086l-.086.044-.386.042.3.042h.258l.042.044-.042.044h-.086l-.086.042h-.172l-.128.044.128.042h.43l-.086.086-.086.042-.258.044.086.042h.13l.267.016-.053.07-.472.043.177.055.127.01.308.032-.172.043-.172.043-.354-.011.214.086.258.043.255-.025.047.11-.33.09-.285-.041-.33-.22-.257-.214h-.086l-.172-.086h-.129l-.042-.042-.042-.086.025-.1-.01-.104-.084-.422-.063-.6-.094-.96.008-.357zm.076 2.011l.06.304v.197l-.092-.184.032-.317zm-.477-.14l-.047.047-.186.186H10.9l.093-.093.047-.14.093-.047.093-.047.047.092h-.047v.002zm.007-.305l.05-.201.05-.049.052-.05.099.25v.099l-.049.1h-.1l-.102-.15zm.062.202h.115v.115h-.058l-.057-.057v-.058zm.587 1.456h-.12l.061-.18.06.06.06.12h-.06zm1.118.97h-.143V21.1l.336-.047.28-.042-.28.116-.193.048zm.05-.247l.222-.059-.19.112-.223.059.003-.105.187-.007zm-.156-.059v-.069h.19v.068l-.19.001zm.523.498h.07l.068.14-.209-.14-.14-.14.21-.07.208-.07v.14h-.209l-.069.07v.068h.071v.002zm.148.2l.221-.11.277-.112v.056l-.277.11-.111.055h-.11v.002zm.476.004l-.34.125.057-.11.114-.054.23-.11v-.053h.057l.117.054.052.038-.287.11zm1.488.405l-.206.02-.088-.044-.086-.086-.13-.172-.044-.086-.086-.044-.077-.02-.13.044-.044-.044h.044l-.088-.044-.086-.044-.086-.042-.13-.044-.086-.042-.13-.044h-.13l-.085.086-.13.044-.13-.044.086-.086.044-.086-.088-.13-.159-.062-.167-.132-.13-.086-.13-.043-.13-.044-.06-.06-.174-.085-.13-.13-.173-.086-.174-.086-.172-.13-.086-.086-.044-.086-.26-.13-.131-.076-.133-.186-.044-.258.044-.258.087-.258.162-.216.044.13v.086l-.04.211-.046.221v.086l.035.125.095.133.098.13.173.042.216.044.086.13.174.086.13.086.086.086h.088v.044l.086.044.044.044.086.011h.303l.086.044.044.042.086.032h.044l.086.044v.044l.088.172.13.13.173.13.174.044.088.044.13.043.13.044v.13l.043.044h-.042l-.044.044.086.086.13.042.13-.042h.174l.174.344.13.13.085.044.078.013.095-.013.13.044-.196-.012zm1.557.319h-.09l-.09-.044-.132-.09-.356-.133-.402-.044-.356-.044h.09l.09-.043.311.043.312.044.58.223.046.045v.043h-.003zm-.124-.226l-.34-.17-.383-.043-.427-.042h-.427l-.042-.042-.042-.086.511.042.511.086.896.128h.042l-.128-.128-.17-.042-.383-.086-.427-.042-.383-.043h-.47l-.085-.042-.042-.042v-.17l-.086-.086.086-.043h.086l.084.068.128.042.17-.042h.087l.384-.238.129-.17.042-.213.086-.042h.042l.128.042h.128l.137.017-.056.113-.017.127-.042.128-.02.17.032.081.02.105-.039.082-.128.043-.184-.056-.135-.027h-.128l-.298.042h-.128l-.17-.015-.124-.044-.086-.084h-.042l-.042.042.042.042.128.086.299.042h.597l.256.086h.383l.34.042h.043l.086.086h.17l.042.043-.042.042-.086.042-.128.042-.213.042h-.084l-.088.085zm1.486-1.992l-.168.042h-.218l-.121.04.133.014h.185l.17.01.092.042.116.017v.052l-.29-.032-.31.042-.098.064.452.022.2.061v.098l-.166-.07-.17-.018h-.19l-.173.078h.052l.014.032.337-.017.261.066.046.057-.316-.045-.296.037h-.051v.04l.339.005.2.047.082.078-.002.059-.138-.073-.188-.02-.295.037v.04l.042.003h.314l.268.13v.043l-.043.044-.046-.044-.046-.044-.045-.043-.133-.044h-.09l-.044.044.044.087.112.044v.35l.045.39.06.058.05.086.025.12-.017.054-.025.032-.039.006-.054-.028-.04.003-.083.025-.123-.035-.135.044-.268.044-.265.03h-.135l-.135-.044-.044-.087.36-.088.134-.088.135-.131.046-.13.044-.174.045-.35.135-.043h.09l.045-.044-.045-.044.045-.044v-.043l-.09.043-.089.044-.089-.044h-.09l-.089-.086h-.09l-.267-.043v-.611l.089-.305v-.306l.046-.61-.044-.306v-.84l-.046-.087.063-.002.001-.045h-.045l-.05-.038h-.089l-.045-.055.045-.044h.09l.076.042v-.675l.19.761.046.088.045-.044h.09l.045-.044.09-.044v.044l-.009.052-.128.043h-.045l-.043.079h.09l.09-.044h.045l.047.052-.135.044-.137.08.09.043h.045l.18-.044-.045.044-.045.044h-.09l-.045.088-.044-.088-.047-.084-.042.04.045.088.046.044.043.088v.087l.152.214.2.287h.13l.04.04.042-.036.003-.04h-.09l-.053-.048.234-.046.22-.042v.137h-.18l-.089.039-.038.043v.044l.043.044h-.229l-.083.039.324.04.356.093-.192.002-.533-.002-.032.037.297.04h.141l.186.051-.147.005-.187.04-.213-.004.004.034.32.042h.123l.129.04h.045v.101l-.261-.032-.263-.013-.13.042.045.037.068-.003h.059l.057.027.088-.037.222.042.076.027.04.027-.004.054-.324-.022-.24.01-.079.042.34.04.124.043.196.054-.351-.042h-.187l-.178.077-.003.05.133-.051.112.04.24.022-.035.029zm.108-.007h.06v.057h-.058v-.057h-.002zm-.123 1.762l-.045-.045.045-.093h.184l-.093.138h-.09zm.623.132h-.184l.045-.046h-.184l-.183-.045.045-.093.093-.045v.092l.138-.045.184.045-.045.046h-.046v.045l.184-.092.184.045-.046.046h-.045l-.046.045v.046h.046l.092-.046.093-.045h.277l-.23.184h-.183l-.139-.046-.05-.091zm.396.33h-.245v-.043l-.049-.044v-.09l.098.044-.049.044v.044l.147-.044h.147l.049.044-.098.046zm.015-.175l.23-.138.092-.046h.139l-.23.184-.093.046-.138-.046zm.332.106l-.138-.045.138-.046.046-.045.046-.093h.138l.093.046-.23.138-.093.045zm.18.036l.043-.044.044.044h-.088zm.062-.088l.183-.09h.23l-.093.09h-.32zm.384.084l-.093-.045.23-.093h.093l.138.046-.23.092h-.138zm.533.004h-.24l.097-.047h.047l.192.047h-.096zm.058-.218h-.19l.048-.047.094-.047h.19l-.095.047-.047.047zm.833.225h-.228l.046-.046-.046-.045-.045.045-.137.046h-.182l.09-.046v-.045l-.045-.046h-.045l-.046.046h-.045l-.046-.046h-.045l.136-.091.091-.046.091.046v.137l.137-.046.182.046v.045l.273-.091v.046h-.045l-.091.045v.046zm.185-.132l-.047-.052.095-.053h.094l-.094.053-.048.052zm.086.125v-.046l.046-.09h.045l.274.09h.09v-.09l.092-.046h.136l.183.136h.045l-.91.046zm1.03-.084l-.046.045-.091.046.045-.091v-.092l-.045-.045.09-.046.046.046v.137zM13.038 2.02l.26.18.163.105.16.22-.231-.046-.225-.102-.19-.177-.095-.17.159-.01zm-3.13.126l-.178-.094-.105-.152-.084-.169.168.053.149.094.261.289-.21-.02zm.263-.14l.046-.253.137-.189.074.117v.116l-.052.19-.081.075-.098.084-.026-.14zm4 1.152h-.204l-.245-.059-.282-.098-.207-.133.195-.035.274.012.19.065.188.102.09.146zm.136-.386l.068-.21.062-.205.044-.192.049.037.04.042.05.064.02.095-.02.143-.072.106-.12.14-.072.206-.049-.226zm-1.39-.909l.088-.088.21-.077.219-.024.26-.09-.093.163-.205.116-.26.017-.262.069.043-.086zM9.186 22.285h-1.31l.043-.042.634-.052h.633l.632-.042.633.094.042.042H9.186zm6.246-1.143h.195v.06l-.13.061h-.065l-.065-.06.065-.061zm.128-1.346l.084.042.253-.042.084-.042.085-.085-.295-.042-.17-.042-.126.042-.126.085-.084.253.168-.17h.127m.017-.099l.064-.052.19.052-.062.054h-.253l.06-.054zm6.27 1.028l.085.042h.506l.169-.085-.169-.084h-.21l-.212.042-.168.042.337-.21.169-.043h.21l.085.17.126.126.213.253h.042l-.042-.127-.086-.169-.253-.253h.169l.17.043.169.084.126.126.042.127v.126l-.042.255h.042l.042-.042v-.044l.043-.042.042-.084.042-.127-.084-.21-.253-.212-.297-.126-.169-.042h-.169l-.168.042-.169.042.127-.126.168-.085.211-.042.169-.084.042-.042h-.084l-.085-.043h-.084l-.084-.042-.127.042-.084.085-.127.084-.084.084-.127.253-.126.085-.084.042-.043.042.085-.169.084-.126.127-.127.042-.168v-.085l-.085.085-.253.253-.084.126v.295l-.042.127-.127.126.211-.168.127-.042M10.537 18.74l-.042-.084-.043-.169.043-.126.042-.085.126-.042.085.084.042.127-.085.084h-.084l.042.042h.042l.043-.042.084-.084v-.127l-.042-.126-.085-.042h-.168l-.127.126-.042.042-.042.085.042.21.127.127.042.042h.253v.042l.042-.084h-.295m.38 0l.084-.084-.169.084h.084m.085-5.782l.008-.035-.008-.007v.042m1.182 8.019h-.21l-.085.042-.042.042h.337v.042l-.126.042h-.296l.296.042v.043l-.043.042h-.21l-.211-.042-.043.042.17.042.168.042-.169.084-.21-.042h-.043v.042l.127.043.126.042-.042.042h-.169l-.042.042h.169v.127l-.042.042h-.085l-.126-.042.126.084.085.084.042.127.084.126.042.042.085.043h.126l-.042-.043.042-.042.042-.084h.127l.042-.042.169-.211.126-.253.127-.169-.127.127-.042.042-.084.042-.042-.084-.085-.042-.042-.043-.042-.084.084-.084.042-.169.085-.253-.085-.042-.084.042-.21.042h.294l-.084.085m-.35.568l.112-.111.11-.056.055.11-.055.055h-.112l-.11.056v-.054zm.193.49l-.056.057-.055.055-.11-.055-.111-.056.111-.056h.221l.111-.055-.11.11zm.37-.369l-.056.112-.056.055h-.165l-.165.056-.166.056h-.165l.056-.11.33-.056.221-.055.166-.058zm-.083-.055l-.275.055-.33.112v-.11l.055-.056.11.056.167-.056h.273v-.001zm-3.802.21l.169-.042h.21v-.042l-.337.042-.337.085-.295.084-.677.169h-.716l-.338-.042v.042l.38.084.421.042.38-.042.381-.084.38-.127.38-.168m-3.884.38v-.085h-.421l-.127.084h.548m-1.73-.126l-.085.084v.042h.085l.084-.042h.38l.042-.042v-.042h-.127v-.085l-.084-.042h-.38l-.126.084v.127l.042-.084.084-.043.211-.042.211.085h-.337m11.6-.066l.102-.084-.057.015-.044.069m-.336.05l-.138.048-.14.094.418-.094.186-.095-.048-.047-.278.094m.501-.146l.037-.063-.11.093.073-.03m-8.39-.176l.085-.042.042.042h.633l.126-.042h.255l.21-.042.38-.127.422-.126.21-.042h-.379l-.253.084-.253.084-.55.085-1.138.042.084.042.127.042m-.211-.084l-.127-.127-.084-.084h.126l.675.042.295.042h.548l.211-.042.76-.253.168-.042H8.51l-.295.042-.422.127-.421.084h-.845l-.085-.042h-.042l-.042-.042h.295l.253.042h.253l.253-.042.464-.127.464-.126.253-.042.253-.043v-.042H8.3l-.464.169-.506.084-1.012.042-.21-.084-.17-.042v-.042l.085-.042h.085l.084-.043.126-.168.043-.042v-.043l.042-.042h.042l.042-.042h-.042l.126-.084h.085l.084-.085.084-.084.127-.042h.084l.042-.042-.126-.042-.042-.043-.085-.042H6.74l-.126.042-.17.127-.041.042-.085.042-.042.042-.084.043h.126l.043.042v.042h-.17l-.168.042-.126.127-.127.126h-.042l.042-.169.042-.126.169-.042.169-.042.126-.127.127-.126.084-.043h.042v-.042l-.168-.042-.17.042-.42.338-.338.337v-.084l.042-.085.127-.084.126-.127.084-.126.085-.169.21-.042.085-.042.126-.084.043-.085v-.084l-.043.042-.38.042-.168.042-.126.127h.084l.042.042-.253.169.127-.38-.042-.042h-.043l.085-.169.042-.21h-.042l-.042-.043-.085.17-.042.126-.042-.17v-.168l.042-.21v-.17l.042-.168-.042-.126-.042-.127.042-.169-.126.085-.043.168-.084.127v.169l.042.126.127.127v.084l-.042.084-.043-.168-.084-.127-.126-.169-.127-.126h-.042v.21l.084.338.085.169h.084l.084.042.085.126.084.17.042.041.084.042-.084.338-.042.168-.084.17-.043-.127-.042-.085h.042v.042l.043-.042h.042v-.253l-.042-.126-.043-.169-.084-.084.084.295.043.126v.17h-.043l-.084-.212-.042-.126v.084l.042.253-.042-.042-.042.042-.042.127.042.126.084.21-.042.043-.127-.169-.21-.084h-.127l-.084.042.084.085.084.126.085.084.168.043.127.042h-.337l-.17.042-.041.084-.042.085-.085-.127H4.38l-.043-.042v-.127l-.084-.084h-.084l-.085.042-.21.085.042.042-.127.042-.042.042-.169.169h-.084l-.042.042h.084l.085-.042.168-.085.127-.084.126-.084h.253l.042.084h-.042l-.21.084-.211.085h.126l.169-.042.126-.043h.127l.126.043-.042.042v.042h.253l.085.042.126-.042-.084.253-.042.126.042.127.168-.084h.253l.043.084-.17-.042-.168.042h.211l.253.084h-.21l-.127.042-.085.043h.464l.211.042.253.042v-.042l-.21-.085H5.6l-.042-.042v-.38l.296.127.253.127-.043-.085v-.126m.54-1.322l.16-.054.16.054-.16.054-.106.106-.16.054h-.106l.212-.214zm-.477.027l.111-.112h.111l-.167.167-.11.112h-.168l.223-.167zm-.994-.891l-.059-.056-.059-.055v-.333l.118.112.06.167.117.278-.177-.113zm.265-.417l-.042.129-.042-.086v-.129l.042-.256.042-.042.042.256-.042.128zm.459 1.02l.094-.048.282-.047-.329.189v-.048h-.047l-.047.048-.048-.048.095-.047zm-.343.443l.085-.085.21-.21-.126.253-.084.126-.127.084.042-.168zm.27.494l.056-.056.113-.055.113-.11.113-.056.169-.055-.113.165-.112.11-.337.11v-.053h-.002zm-.038.204h.194l.34.145h-.34l-.194-.049-.145-.096h.145zm-.377-.076h.043l.042-.042v-.042l.086-.172.172-.172-.042.172-.129.214-.128.128-.042-.042v-.044H5.37zm-.188-.101l-.267-.057-.086-.095-.084-.138.133.05.133.051.216.189h-.045zm-.232.265l-.313.045.135-.135.133-.045h.27l-.09.09-.135.045zm-.01.482l.046-.135.045-.135.09-.135.135-.045-.046.135-.045.09-.225.225zm.32-.044h-.126l.127-.168v.168zm-.046-.995l-.046-.135v-.135l.135.225v.135l.046.134-.135-.224zm.168 1.004l-.052-.107v-.266l.106.106v.106l.053.321-.107-.16zm.387-.128l-.135-.09-.135-.09-.046-.134.09.09.18.045.135.09.09.134-.18-.045zm-1.731.414h.464l-.295-.042H3.91l-.042.042v.043l.042.042.127-.085m5.232-.084l.508.042.801.042.38.043.423-.043-.042-.042-.297.042-.338-.042-.59-.042-.632-.042-.34.042-.295.042h.211l.211-.042m-1.265-.295l-.422.126-.465.085-.464.042H6.19v.042l.169.042h.801l.255-.042.506-.169.464-.168.253-.042.253-.043h-.422l-.464.127m-4.136.21h.211l.211.043.042-.042-.337-.085h-.211l-.127.043-.084.042-.042.042-.042.042v.042l.168-.084.211-.042m-1.224.084l.126-.042.169-.042h.253v-.042l-.295-.043-.085.043-.126.042h-.084l-.043-.085v-.042l-.126-.084-.042-.084v-.127l.042-.042.084-.042-.126-.042H2.35l-.043.042-.042.084v.042l.042.169-.042.042h-.084l-.042.084-.127.043-.042.042-.042.042v.042h.042l.042-.084.085-.042h.168l.169.042.169.042v.042h.042m21.102-.21l-.295-.085v.042l.253.169.126.042.169.042v-.042l-.127-.127-.126-.042m-13.084 0l-.168.085h.337l.084-.043.042-.042v-.042l-.084-.084-.126-.085-.253-.042v.042h.084l.084.043.169.042-.084.084-.085.042m-7.005-.042h.422l.127.042h.042l.042-.042v-.042l-.084-.042h-.59l-.213.084-.127.127.213-.085.168-.042m11.156-.013h-.047l-.138.141.092-.047.093-.094m-5.12.055v-.042h.042l.042-.042-.127.042-.084.042h.126m-7.006-.084l-.042.084.126-.084.169-.042h.169l.168.042-.126-.084-.169-.043-.21.043-.085.084m7.344-.127v-.042h-.169l-.126.042H9.65l-.042.043-.042.042.253-.042.21-.043m-6.245 0v-.042h-.042l-.169-.042-.042.042-.086.042.128-.042h.127l.084.042m5.698-.042h.21l.17-.084.168-.042.21-.042v-.043l-.295.043-.253.042-.126.042-.084.084m-6.88-.042l.042.042v-.042l.042-.042h-.042l-.042.042m.8-.084v-.042l-.084-.127-.126-.086-.127.044-.168.084-.042.042-.043.085.127-.127h.295l.084.085.043.042v.042l.042-.042m7.807-.169v-.042l-.084-.044h-.084l.042.044-.042.084-.042.042-.127.043h.127l.084-.043.126.043h.086l.17-.043.126-.126.042-.044v-.084l-.042-.042-.043-.043h-.21v.085h.042v-.042h.126v.084l-.042.086-.169.084-.086.042-.042-.042h.042v-.042m-.379-.042h.126l.085-.044h-.211v.044m-1.18.084h-.085v.085l.422-.127.421-.128h-.337l-.295.086-.127.084m-1.266-.507l.084-.043.084-.084h-.168v.042l-.211.127-.211.168v.043h-.084v-.085h-.506l-.296.127-.126.042-.084-.042-.043-.042-.126-.043h-.17l-.296.043.085.084h.042l.169-.042h.21l.085.084-.211.042h-.169v.042h.042l.211.043.127-.043.084-.084.21.084h.254l.084-.042.085-.042.042-.042.084-.042h.21l.043.042.042-.042.422-.085.464-.084-.38-.042v-.042l-.042.084h-.21l.084-.084.086-.042m-.965.344l-.127.062-.126-.062h-.063l.19-.063.252-.062-.126.125zm2.105.035v.086l.506-.17.548-.211-.548.084-.253.042-.253.127v.042m-4.897-.084l-.084-.085-.042-.042-.085.042.211.085m4.981-.211l-.084.042v.084l.295-.126.295-.084.675-.127-1.012.169-.169.042m1.941-.005l.102.045h.103l-.103-.045h-.102m-1.94-.206l-.17.084-.17.17.423-.17.38-.084.422-.084.421-.042h-.464l-.421.042H9.82l-.21.084m2.752.09l-.056.089h.056v-.09m-.144-.016l-.045.047h-.046v.047h.137v-.047l.046-.047h-.092m-.541-.04h.14v.046h-.14v-.047zm-2.407-.117l.17.042.043-.042-.043-.042h-.126l-.17.042-.127.084-.084.084.21-.126.127-.042m.255-.38l-.085.042-.17.043-.253.253h-.169l-.042.042-.042.084-.042.042.084-.042.127-.084h.126l.085-.127.17-.084.126-.042h.211v-.042l-.042-.043-.084-.042m-4.77.127l-.042-.085-.169-.168H4.46l.126.337.042.127.127.126.084.042h.084l.085-.042.042-.084v-.042l-.084.084h-.127l-.084-.084-.085-.085-.084-.126v-.127l.084.127.085.126.168.042h.17v-.168l.041-.042-.042-.085-.042-.126-.084-.127-.211-.253-.042.169v.21l.042.17.084.126h-.042l-.042-.042m.03-.34l-.042-.17.086.129.086.172.086.128.042.172-.128-.086-.086-.172-.044-.172zm14.658.382l-.043.253.127-.337.084-.17.169-.168.126-.084.17-.084h.336v-.085l-.084-.042h-.21l-.17.042-.252.169-.17.253-.083.253m-7.682.135v.054h.147l-.098-.054h-.049m-1.899-.05l-.084-.043-.127.042-.084.085.084-.043h.295l-.042-.042h-.042m13.463-.295l-.084-.042h-.084l-.085.042h-.084l-.044.042-.042.042-.084.043.38.042.212.042.168.084-.042-.084-.042-.084-.169-.127m-13.126.253l.127-.042.21-.169.212-.126.126-.042h.084v-.043l-.042-.042h-.042l-.21.085-.17.168-.21.127-.211.126.126-.042m.043-.253l-.169.042h.295l-.042-.042h-.084m-3.25-1.604l-.296.169-.035.03.12-.072.21-.127m-.759.127v-.211l.043-.127-.253.338-.085.168-.042.085v.084l.042.084-.042.042-.042.085-.042.042-.042.126.042.085v.084l-.042.084-.043.127-.042.169h.042l.085-.17.084-.168.127-.126.168-.085.211.043.084.042.085.084h-.085l-.168-.084h-.085l.043.042-.085.084-.126.042-.127.085-.042.084-.042.084.042.043h.042l.085-.043.168-.126.042-.042.043-.042.042-.127H6.4v.127l-.042.084v.042l.042.042v-.084l.042-.084.042.042v.042l-.042.042v.084l-.042.043.042.042.127.126.126.042.295.085.043-.042-.127-.211.127.042.084.042h.21l-.168-.21-.084-.085-.127-.042h-.168l-.085.042h-.042l.127.084.084.085-.169-.043h-.084l-.042.043-.042-.085v-.168l.21-.043h.127l.126.043.211.126.253.169h.253l.169-.085h.042l-.042-.042-.084-.042-.043-.042-.084-.042h-.422l-.126-.042-.042-.043-.042-.042h.421l.127-.084h.168v-.042l-.253-.127H7.33l-.38.253-.126-.042-.085-.042-.126-.042-.169-.127.042-.042h.085l.168.084h.211l.38-.084-.338-.169-.168-.042h-.169l-.084.042-.042.085-.085.042-.084-.042.084-.085v-.084h.295l.085-.042.084-.042-.126-.042-.085-.043h-.084l-.169.043.218-.18-.091.053h-.042l-.043-.042.043-.042v-.127l.042-.042.126.042.127-.042.21-.084.085.042v.084l.169.085.21.042h.253l.211-.042-.295-.17-.337-.083.168-.211.085-.253-.295.21-.17.085-.083.169-.211.084h-.127l-.084-.127.042-.126.084-.127.169-.21v.126l-.042.127-.084.126-.085.084.042.043h.043l.126-.043-.084-.042.084-.126.042-.127.042-.253-.21.211-.127.169-.042.126-.042.042v.043l.042.042-.042.042-.042-.253v-.211l-.085.127-.084.168-.042.169-.042.169.042.042v-.042l.084.084.042.084-.042.042-.084.043v-.17l-.042.043-.043-.042H6.19l-.084.042-.042.127-.042.042h-.085l.085-.253.168-.169v.169l.042-.042m-.143 1.08l-.143.124v-.06l.072-.062.216-.123-.145.122zm.865.036l.073.054.153.172-.352-.209.126-.017zm-.297.208h.103l.206.153h-.103l-.103-.05-.205-.103h.102zm.79-.218l.103.015.251.088-.265.015-.155-.022-.096-.066.162-.03zm-.177-.305l.194-.064.13.065-.194.066h-.26l.13-.067zm-.6-.292h.183l.366.106h-.182l-.122.054-.364-.106.12-.054zm-.038-.23h.096l-.096.056-.096-.055h.096zm.717-.44h.179l.313.137h-.357l-.312-.091.177-.046zm-.204-.185l.093-.093.23-.138-.138.23-.23.14.045-.14zm-.744.219l-.042-.126.042-.127.084-.084v.464l-.042-.043-.042-.084zm-.103.506l.086-.086.042.042-.128.128v.129l-.128.042-.128.086.172-.214.084-.127zm-.17.015v-.128L6 18.966l.172-.172.086.042-.043.042h.043v.086l-.172.172v-.042l-.129.172-.086.128v-.128l.043-.086.128-.172h.042v.086l.044-.086zm8.84.661l.17.211-.17-.253v.042m.254-.507l-.042.212-.042.085v.126h-.086l-.042-.042-.042.042.084.042.086.042.084.211v-.168h.043l.042.042v-.042l-.085-.043-.042-.042v-.21l.042-.085.043-.042.042.084v.253l.084-.042v-.253l-.042-.084-.084-.086h-.043m-8.905.676h.042l-.042-.042v.042m-.844-.464v.085H5.6l.042-.043.084-.126.043-.169.084-.168-.127.042-.126.084-.085.169-.042.126m.066-.082l.047-.056.144-.167-.193.334v-.111h.002zm8.122-.552l-.127.127-.042.126-.042.169v.17l.042-.212.169-.253.126-.085.127-.042h-.253m-.338.169v-.085h-.042v.127l.042.126v-.168m-7.597-.38l-.042.042-.084.169-.042.127v.084h.126l.127-.084.126-.211.085-.211H5.81l-.085.084m.216-.035l-.086.128-.042.086-.042.128-.128.042v-.128l.086-.172.086-.086h.126v.002zm1.092.12h-.211l-.085.084v.042h-.042l.169.084.169.043h.337l.126-.043-.168-.084-.169-.084-.126-.042m.161.21h-.151l-.253-.116h.406l.101.059-.103.057zM1.041 16.8v-.296l-.085-.126-.042-.169v-.126l.042-.127.085-.168.421.042.422-.042.169-.043h.084l.084-.042.211-.21.085-.127v-.127h.253l.21-.084.211-.084.169-.169.126-.253.043-.295v-.295l-.085-.253-.126-.169-.169-.169-.21-.126-.212-.084-.168-.043H2.39l-.126.043-.17.084-.294.126-.127.085-.168.042-.085-.042-.042-.085V13.3l.042-.127.085-.084.21-.127h.675l.169-.042.21-.084.085-.084.042-.085h-.084l-.085.085-.084.042-.084.042.084-.084.042-.085v-.253l-.113-.104-.126-.07-.198-.042-.372-.055-.176-.071-.098-.056-.062-.09-.007-.092.042-.078.091-.07.05-.071-.071.03-.056.007h-.084l.126-.08.084-.084h-.168l-.098-.005.098-.042.084-.037.042-.042.042-.042H1.59L1.49 11.3l.182-.064.085-.127-.085.043-.155-.019.098-.042.113-.063.056-.042.028-.02-.147.029-.133-.014.085-.042.097-.037.127-.127-.127.043h-.084l.253-.169.253-.042h.295l.253.042.59.169.254.084.253.042.21.084h.211l.422.085.295-.042.253-.043.548-.126.548-.169.506-.168.296-.127.337-.042.337-.042h.295l.338.042.295.084.295.127.253.168-.253-.084-.126-.042h-.127l.295.126.169.127.084.042.043.084-.254-.126-.295-.084.295.168.17.127.126.126.084.085H9.39l-.169-.085-.169-.126-.379-.127.38.211.168.084.127.17-.042-.043-.254-.084-.168-.043-.127-.042.422.211.169.127.168.21h-.042l-.126-.126-.211-.127-.169-.042-.21-.042.294.127.254.168.21.211.169.295v.169l.042.169.042-.338-.042-.295-.084-.632-.127-.296-.21-.253-.254-.21-.295-.127-.21-.084-.254-.085H7.83l-.422.043-.422.084-.885.295-.422.169-.422.126h-.295l-.084-.042.084-.042.042-.042v-.042l.085-.085.042-.084.042-.21v-.254l-.042-.21-.253.294-.169.338v.21l.085.17H4.33l-.506-.085-.464-.127-.422-.126.085-.084.084-.085.126-.084.085-.084.168-.211.085-.506h-.042l-.17.168-.168.127-.21.169-.127.168-.042.085v.126l-.042.169-.17-.042-.168-.043h-.337l-.337.127-.296.157-.084.295-.042.295v.295l.084.296-.168.084-.211.126-.169.169-.126.21-.085.127-.084.338.042.168.084.338.085.295.126.169.169.126.169.084.21.043.338.168.126.085.169.126.042.084v.085L1.8 14.77l-.169.042-.169.084-.168.127-.042.126v.295H.956l-.168.042-.127.085-.042.084-.042.042v.253l.042.127.169.295.042.253-.042.126-.042.085-.127.042-.084-.042-.042-.042v-.085l.042-.126.084-.085h.127v-.042l-.043-.037H.577l-.127.042-.042.042-.042.085-.042.168.084.127.127.084.168.042.127-.042.084-.042.127-.126m3.845-6.401l.213-.306v.211l-.037.208-.078.21-.167.211-.055-.261.124-.273zm-1.988.022l.045-.18.18-.178.178-.133.179-.18v.18l-.09.179-.49.445v-.133h-.002zm-1.135 5.303h-.198l-.015-.071h.197l.098.049.05.049-.132-.027zm.011-.243l-.042.042-.086-.042v-.086l.042-.085.129-.086.17-.042h.17v.086l-.084.086-.128.086-.17.04zm.37-.002l-.214.101-.125-.034.192-.09.147.023zM2 15.69h-.136L2 15.623l.137-.067L2 15.69zm.318-.165l-.238.172.23-.27.008.098zm-.002-.285l-.13.184-.086-.032.108-.105.032-.111.022-.162.054.226zm-.068-.572l-.13-.177-.2-.155-.19-.169-.23-.136-.231-.147-.095-.147-.062-.22.032-.222.07.27.137.169.167.14.174.133.334.262.216.185.084.127.064.158.043.221-.068.214-.035-.266-.08-.24zm.23.582l-.064.14-.073.07v-.11l.095-.166.042.066zm-.613-1.681l.218-.132.262-.088.138-.015h.131l.211.06.22.12.173.142.132.218.087.261v.22l-.043.261-.044.132-.044.087-.132.132-.173.088-.218.076h-.174l-.01-.15.088-.044.174-.033.155-.077.111-.125.064-.12.044-.192v-.218l-.044-.187-.11-.131-.097-.086-.155-.085-.183-.027-.226.027-.217.096-.118.07-.042.116-.437-.305.26-.091zm.653 1.035l-.126-.21-.127-.211-.168-.17.168-.126.211-.084h.21l.212.042.126.127.085.337-.043.169-.084.168-.042.043-.084.084-.17.042H2.56l-.042-.21zM1.35 13.511l.085.095.148.14.44.273.159.148.125.193.133.22.07.24.02.203v.086l-.09.043.022-.232-.057-.238-.083-.177-.192-.179-.328-.285-.38-.295-.124-.15-.062-.17-.04-.161.146-.111-.02.232.028.125zm-.445.34l-.086-.173-.044-.172.017-.268.084-.22.201-.222.218-.15.26-.172H1.38l-.157.07-.253.2-.316.337.107-.37.2-.294.18-.19.24-.141.044-.044h.044l.086.044.086.086.13.044.26.044.26.044.086.043.13.044.043.086.044.13-.216.172.044.044-.26.044h-.561l-.13.086-.086.044-.174.172-.177.121-.086.216v.216l.086.258-.13-.13zm1.248.816l-.189-.18-.303-.195-.125-.082-.197-.078-.125-.052-.095-.117-.09-.226.014-.295.066.248.095.19.24.15.31.217.281.227.15.172.064.137.01.179-.106-.295zm-.79.706l-.018-.102.032-.173.113-.113.14-.07.183-.043.2.04.169.013v.143l-.123-.007h-.13l-.24.073-.094.084-.042.117.018.131-.162-.002h-.045v-.09zm.134.135l.118.027v.066l-.248-.027H1.3l.196-.066zm-.194.125l.2.064v.064l-.183-.017h-.133l.116-.11zm-.241-.125h.076l.076.076H.985l.076-.076zm-.111.152l.237-.012-.035.095-.106-.012-.118.035.022-.106zm-.113.397v.087h-.09v-.087l.09-.088v.088zm-.194-.117v-.19l.094.094-.094.096zm.1-.33l.126.124H.744v-.124zm.114.271H.769l.09-.088.089.088H.857zm.987.327l.126-.084-.042-.042h-.084l-.043.042-.042.084-.042.085v.084l.084.084.127.085.084.042.127-.042.084-.043.042-.084.085-.21-.043-.127-.084-.127-.253-.126h-.042v.084l-.084-.042h-.085l-.126.042.126.084.127.043.126.084.127.084.042.127-.042.042-.042.042h-.211l-.042-.042v-.169m.322-.094l-.134-.071-.097-.056.148-.035.14.091.056.14-.029.12-.084-.19zm10.923-.095l.077-.077h-.077v.077m-4.573-3.042l-.305-.127-.253-.169-.417-.313-.518-.365-.266-.084-.113-.042-.07.027-.046.042.295.084.295.127.592.422.29.19.28.162.302.127.346.006.131-.022h.042l-.29-.013-.295-.052M6.57 12.41l.084-.127.042-.042h.085l.253.085.253.168.463.338.253.168.211.127.295.126h.296l.253-.042.253-.084.168-.127.169-.21.042-.17v-.168l-.042-.126-.042-.17-.127-.168-.126-.126-.169-.127-.169-.084-.421-.084-.422-.085h-.675l-.337.042-.337.085-.633.168-.632.253-.38.127h-.422l-.421-.042-.422-.085-.801-.21-.422-.127-.38-.084h-.379l-.168.042-.043.042-.084.084v.085l.042.042.338-.042.337.042.38.084.295.085v-.043l-.043-.042-.463-.126-.211-.085h-.295l-.127.043H1.72v-.085h.043l.253-.042h.253l.463.127.506.126.464.169.464.126.506.085h.253l.506-.085.253-.126.295-.085.338-.168.295-.085h.169l.168.043.376.177.285.2.559.422.258.172.337.084.127.043.21-.043.17-.042.168-.084.084-.084.084-.043.043.043-.085.126-.126.127-.169.084-.169.042h.043l.042.042-.287.056-.317.013-.253-.084-.35-.21-.396-.282-.463-.338-.17-.084-.21-.084-.38-.085-.295.085-.126.084-.127.084-.084.127-.044.126v.295l.042.127.085.126.21.169.211.169.085.084.042.084.042.211-.042.127-.042.042-.127.042h-.126l-.211-.042-.211-.127-.169-.168-.337-.38-.21-.168-.17-.127-.253-.042H4.25l-.126.042L4.04 13l-.127.169-.084.21-.042.254.042.21.084.17.211.126h.21l.085-.042.084-.085.043-.168-.043-.127-.126-.126.042.084.042.126v.085l-.042.042-.042.042h-.084l-.085-.084-.084-.127-.042-.126-.002-.1.002-.113.126-.126.085-.042h.084l.169.084.168.126.59.59.296.254.21.084.254.084h.253l.285-.141.14-.155.084-.17.042-.168-.003-.167-.042-.168-.11-.156.068.029.084.042.042.042.143.07.152.183v.127l-.042.169-.126.126-.296.253-.126.169-.084.126-.085.211.042.21.043.17.084.21.169.085.126.042h.169l.126-.042.042-.042.085-.043.084-.084.042-.084.127-.211.084-.21.084-.085.169-.085.127.127v.169l-.043.042-.126.042h-.084l.084.084h.126l.127-.084.084-.253-.042-.084-.042-.127-.084-.084-.17-.042h-.168l-.084.084-.127.126-.126.253-.127.127-.084.126h-.084l-.085-.084-.084-.126.042-.17.042-.083.085-.127.168-.126.169-.085.169-.126.126-.169.042-.126v-.338l-.084-.168-.126-.17-.17-.126-.379-.21-.337-.211-.084-.169v-.21m1.681-.773l.346.055.337.043.296.168-.043.169-.042.084-.042.042-.21.043h-.17l-.126-.043-.169-.084-.237-.196-.275-.281h.335zm-.499.015l.056.029.084.042.24.24.253.21.253.127.155.028h.126l.225-.042.084-.084.07-.155.03-.098.07.042.042.084-.055.127-.127.126-.155.085-.169.042h-.21l-.17-.042-.15-.066-.164-.113-.259-.26-.141-.194-.127-.126h.04v-.002zm-.395-.042l.169.084.169.084.295.253.357.292.243.149.243.042.211-.032.179-.063.16-.092.127-.17h.042v.14l-.085.085-.168.155-.211.085-.253.042-.21-.042-.212-.085-.168-.084-.296-.295-.295-.253-.168-.127-.17-.126.041-.042zm2.21.914l-.07.126-.168.127-.116.052-.263.042-.117-.02-.238-.074-.295-.127-.253-.168-.548-.422-.253-.169-.21-.168v-.042l.252.084.28.128.39.337.174.211.21.127.211.126.295.042.29-.074.254-.126.047.074.042-.127.084-.084.042-.042-.04.167zm-1.712 2.034l-.06.073h-.061l.12-.073zm-.277.184l.117-.063-.06.125v.063h-.058v-.125h.001zm-.317.626h.073v.067h-.071v-.067H7.26zm.196-.132v-.116l.118-.117-.118.233zm-.086-.106v-.063l.057-.027.142-.224v.125l-.066.062-.076.036-.057.09v.063l-.133.063-.066.062-.066.062H7.04l.33-.25zm-.462.329h.082v.079H6.91v-.08zm-.437-2.588l.136.117.385.216.213.13.17.13.18.168.032.2-.02.18-.062.084-.118.045.116-.205v-.086l-.032-.135-.096-.166-.186-.146-.411-.242-.17-.086-.17-.108-.134-.168-.063-.198.053-.23.106-.137.159-.095-.17.211-.033.176.01.116.105.23zm.305.953l-.042.169-.098.169-.12.097-.182.092-.246.021-.233-.055-.234-.118-.15-.12-.159-.153-.273-.286-.278-.27-.147-.133-.162-.077-.187-.012-.176.105-.086.134-.042.135v.135l.07.193.105.114.218.098-.174.002-.155-.086-.106-.14-.042-.18.015-.152.042-.144.07-.157.127-.13.17-.064.154-.018.198.034.178.094.215.189.428.452.214.185.179.095.145.049.149.013.133-.02.12-.056.075-.104.065-.108.013-.115-.047-.165-.086-.143-.24-.208-.175-.113-.128-.093-.086-.18v-.226l.028-.155.071-.122.159-.128.128-.09.194-.01-.24.201-.055.13-.026.177v.226l.061.135.113.122.169.151.187.147.091.118.086.18.005.17zm.496.112l.01-.127-.032-.147-.115-.114-.173-.13-.397-.167-.243-.137-.158-.179-.084-.2.04-.115.017-.15.044-.128.086-.086.173-.13-.086.086-.104.125-.052.148-.01.149.112.239.127.127.2.136.16.095.22.106.233.136.179.211.022.233-.063.127-.084.084-.138.042.116-.234zm-.01.264l.243-.052-.273.179-.135.108h-.164l.214-.192.115-.043zm-.739.734v-.143H6.6l-.076.287v-.144zm.117.47l-.124-.27.124.134v.135zm.008-.647h-.062v-.123l.062-.062h.062l-.062.123v.062zm.084.356h-.069v-.263l.07-.088h.068l-.069.176v.175zm.002.287h.074v.087h-.074V15.4zm.113-.732l-.062.062.062-.187.125-.063-.063.125-.062.063zm.032.344v.157l-.074-.08.074-.077zm.154.354l-.117-.197.117.1v.097zm-.178-.432v-.115l.058-.057.057-.057-.115.23zm.075-.541l-.252.15.201-.2.101-.102.15-.05-.2.202zm.209.152l-.18.121.12-.182.122-.06h.122l-.184.12zm.376-.23l-.184.108h-.15l.24-.172.161-.08-.067.144zm-.837-1.444l.149.086.327.17.142.085.167.14.126.148.098.191.022.19-.007.15-.066.12-.07-.015.042-.136.028-.147-.018-.162-.066-.137-.212-.212-.277-.164-.552-.295-.116-.2-.008-.208.074-.127.168-.158-.104.179-.039.148.022.113.049.12.121.121zm-4.582-.882l.337.042.632.211V12.2l-.042-.042-.421-.127-.464-.084h-.253l-.211-.042.084.084h.338M12.433 13h.14l-.016-.022-.124.022m.212-.044l-.042.044h-.03l.03.042.042.043-.017.425.061-.127.042-.34L12.69 13l-.044-.044m.343.257v-.086l-.044-.042h-.127l-.086-.043.257.17m-1.927.16l-.1-.105-.05-.053h-.05l.1.105.1.052m.112-.227l-.053.182.103-.182.053-.044v-.093l-.053.093-.05.044m6.338-.397l-.084.211-.042.253.084-.253.127-.169.084-.21.126-.211-.168.168-.127.211m-14.655-.21h-.043v.042l.043.042h.126v-.042l-.084-.043h-.042m.168-.084l-.084-.042-.169-.042.042.084.043.042h.084l.084.042v-.084m0-.126l-.253-.127-.315-.111-.316-.032-.296.017.253.042.222.005.233.042.093.037.084.084.295.085v-.042m.677-.675l-.043.084-.042.042-.084.043-.086-.043.17.085.211.042.042-.042v-.042h-.084l-.042-.043v-.084l.042-.126v-.127l.21.295.212.253.126-.592v-.042l.042-.042.085.042.042-.042v-.042H4.29l-.169-.043v.043l.042.042h.127l-.042.212-.042.169-.127-.169-.084-.212-.169-.169-.084-.042h-.085l.043.126.042.085-.042.17v.169m1.602.169h-.042l-.085-.043-.084-.084-.084.295.126-.084h.127l.17-.042h.042l.085-.085.042-.084v-.084l-.085-.085-.168-.084-.086-.044-.042-.084v-.042l.042-.043.086-.042.084.042v.085l.084-.042.043-.043-.085-.084H5.39l-.17.042-.043.042-.084.043v.212l.127.085.128.084.084.084-.042.085h-.086m-1.941-.846l-.127-.042H3.11l-.127.042-.084.085-.127.168v.127l.042.126.085.17.126.041.085.043h.126l.127-.043.084-.042.042-.126.042-.253-.042-.169-.126-.127m-.027.338l-.088.253-.044.042-.088.042-.044-.042-.087-.042.044-.042h-.044l-.044-.085v-.126l.088-.211.043-.084h.088l.132.042.044.126v.127zm2.729-.338h-.169l-.169.085-.084.126v.253l.042.169.042.042.043.042.126.043.169-.043.084-.042.084-.169.043-.21v-.085l-.043-.084-.168-.127m.042.432v.13l-.044.086h-.086l-.086-.044-.086-.044v-.431l.086-.086h.086l.086.13.044.13v.13zm-4.094-.305v.126l-.042.127v.042l-.084.044v.042l.253.085.042-.043v-.042h-.042l-.042-.042h-.043v-.086l.043-.127v-.084l.042-.042.126.253.169.255.169-.635v-.042h.084v-.042l-.295-.084v.042h.042l.084.042-.042.211-.042.169-.295-.464h-.253v.084h.042l.084.042v.169m4.642-.337l-.21.042-.212.084.043.042h.084v.042l.084.253.085.213-.127.042-.042.042v.043l.295-.127.337-.128.085-.295-.042.084-.043.042-.126.127-.084.042h-.085l-.126-.464.042-.042.042-.042m1.435.253l-.126.126-.084.127.084-.043.126.043.085.042h.084l.084-.042.085-.085.042-.084v-.084l-.084-.127-.127-.126-.126-.169.084-.042H8.3l.042.042.043.084.042.085.084-.085v-.084l-.084-.042-.085-.042h-.21l-.085.084-.042.126.084.127.211.21.042.127-.042.042h-.084l-.127-.084v-.126m-.76-.38h.042v-.042l-.253.042-.211.042v.042h.127l.084.17.084.336.086.043.127.042.126-.042.127-.085.084-.126v-.127l-.042-.337.042-.042h.042l.042-.042h-.168l-.127.042v.042h.127l.042.464-.084.126-.085.042H7.5l-.128-.126-.042-.127-.085-.295.044-.042h.04m11.693-.548l-.042.126v.127l.084.295.042.253.042.042.127-.21.084-.211v-.506l.169.253.126.295.085.168-.042.17v.252l.084.084.084-.168v-.295l-.042-.127-.169-.295-.168-.253v-.084l.168.126.17.084h.379v-.042l-.17-.168-.21-.127-.253-.042h-.295l-.169-.127-.126-.126.084.084.042.085.042.042-.084.126-.042.169m.558-.2l.218.062.163.06.11.183-.164-.061-.217-.06-.326-.183h.216zm-.482.197l.054-.194.133.189.027.247-.054.243-.106.194-.054-.437v-.242zm-8.265.48h-.08l-.234-.064.235.127v.251l.079-.125h.078l.079.063-.08-.127-.077-.125m10.046-.14l.169-.337.084-.38.084-.337-.084.127-.127.126-.168.127-.127.126-.126.169-.042.21v.254l.084.21.253-.295m-.255-.042l.042-.21.043-.17.126-.126.21-.126v.084l-.21.38-.21.379v-.21zm-16.88.169l-.085.126h.38l.169-.042.168-.084.295-.211.253-.253v-.042h-.21l-.211.042-.338.084-.253.169.085-.253.042-.295-.042-.253-.085-.253-.084.042-.042.042v.084l-.042.085-.042.168v.127l.042.337.042.127v.126l-.042.127m.222-.147l.238-.143.285-.095.285-.047v.047l-.19.144-.238.143-.282.113-.29.078.192-.24zm-.197-.764l.09-.23.089.367v.229l-.073.278-.06-.278-.044-.182v-.184h-.002zm14.408-.019l.084.17.042.21.085-.169.042-.21-.042-.211-.127-.17-.084-.083h-.042v-.043l-.211-.084-.084-.042h-.296l-.168.084-.169.127-.169.084h.211l.042.042.549-.042h.084l.042-.042.084-.042.043.042v.21l.084.17m.042-.338l.09.103.055.126.007.14-.042.218-.027-.123-.149-.297V9.23l.066.057zm-.2-.126l-.338.084h-.38l.127-.127.21-.042h.17l.21.042v.043zm-.39.421l-.211.127-.085.084-.042.127.295-.085.127-.042.127-.126.126-.17.042-.126v-.084l-.168.169-.211.126m.23-.006l-.136.148-.169.064-.178.022.548-.37-.064.136zm2.893.048l.085-.042.126-.042.085-.084.084-.085v-.21l-.084-.211-.127.337-.169.337m.316-.295l-.068.123-.135.061.205-.428v.244h-.002zm-.57.085l-.042.126.253-.21.126-.127.084-.127.043-.126v-.085l-.085-.126-.084-.169-.042-.126-.042.084v.084l-.043.085-.042.042-.464.084h-.21l-.211.042.168.127.127.084h.38l.21-.126-.084.295-.042.169m.03-.491l-.126.064-.201.022-.159-.01-.116-.095.612-.084-.01.103zm.167.084l.056-.386.113.194v.194l-.113.194-.169.194.113-.39zm-10.832.111l-.126-.042.126.169.084.084.043.127-.043-.253-.084-.085M7.118 8.57l-.337.169h.042l.38.21.21.085.21.042h.17l.168.042-.126-.126-.085-.127-.253-.253-.21-.042h-.17m.394.166l.162.113.045.045.046.091-.235.009-.232-.078-.4-.175.137-.076h.182l.157.023.138.048zm4.755.34h.092l-.092-.047h-.14l.14.047m-1.43-.452l.122-.096.085-.169L11 8.19l-.085-.211-.042-.169v-.084l.042-.042.085-.169v-.169l-.043-.126-.084-.084-.126-.085-.253-.168-.085-.127-.042-.126h-.042l.126.295.043.295.042.169.042.126.126.127.127.084-.084.042-.085.084-.084.17-.042.379-.042.168-.04.203.137-.063.117-.01.126-.076m-.145-1.1l-.08-.178-.114-.412.257.19.163.15.037.178-.079.206-.184-.133zm-.128 1.11l.032-.126.042-.086-.001-.251.033-.242.086-.086.086-.086v.172l.043.215.047.153-.017.115-.04.086-.16.076-.15.06zm1.714.28l.047-.047h-.142l.048.047h.047m-.056-.26h-.047l-.047.048h.047l.047-.047m3.341-.103l.098.103.046.047.118.027-.057-.029-.12-.189-.085.04m-6.205-.824l.253.169h.084l.085.042.21-.042.17-.085.168-.042-.169-.084-.168-.085-.17-.126-.21-.042-.126-.042-.127.042-.169.042-.084.084.253.169M9.35 7.51h.088l.272.027.426.19-.13.044-.087.044-.262-.013-.219-.117-.218-.13.13-.045zm-.796-.587l.211.169.21.168.17.17-.085-.212-.084-.421-.084-.17-.085-.126-.126-.084-.253-.126v.421l.042.127.084.084m.147-.401l.15.155.1.258.05.207-.2-.103-.25-.264-.063-.176.012-.18.201.103zm12.304-.655l-.168.127.295.168.337.085h.338l.168-.042.169-.043-.253-.168-.127-.085-.126-.042-.21-.042h-.212l-.21.042m.484.063l.263.087.219.088-.263.044h-.263l-.263-.088-.22-.088.263-.043h.264zM1.073 5.024l.084.253.169.253-.295-.042H.735L.61 5.53l-.127.084-.126.127-.042.126.21.042.254-.042.295-.042.084-.042.127-.084.168-.085-.042-.084v-.211l.042-.169v-.126l-.084-.295-.127-.211-.168-.211-.042.042v.042l.042.127-.042.253.042.253m.01.717l-.211.042-.422.042.127-.169.21-.084h.296l.21.042-.21.127zm.049-1.191l.141.202.092.201v.202l-.043.252-.162-.324-.062-.263.034-.27zm-.218.39l-.253-.254-.337-.126-.253-.21.126.336.169.338.084.126.127.085.21.126.212.042h.168l-.084-.126-.042-.169-.127-.169m0 .38L.74 5.241l-.2-.146-.138-.19-.121-.259.253.084.204.145.179.201.123.246H.914V5.32zm17.684-2.405l.21.084-.084-.084-.084-.127-.042-.126-.085-.085-.084-.084-.127-.042-.21-.042-.211-.042h-.253l.042.126.126.127.253.168.38.085.169.042m-.72-.306l-.18-.133h.269l.224.046.224.135.09.045.09.135-.493-.135-.225-.093zm1.016.812l-.21-.211-.296-.169-.126-.084h-.127l-.084-.042v-.127l-.126.085-.085.084-.084.042-.084.084-.043.17-.084.42-.042.127-.042.085v.084l.126-.084.085-.085.126.127.127.126.084.127.126.126.211.085.211.042.21.042.085.042.085.084-.043.043h-.042l-.295-.127-.337-.084-.295.084-.17.084-.126.127.296.084.506.127.168-.042.169-.085.126-.084.085-.042h.084l.084.042.043.042.084.042h.21l.127-.042.253-.169.211-.126.127-.042h.126l.042-.042v-.085l.042-.042h.043l.084-.126.084-.169v-.337l-.084-.338-.084-.295-.043.169-.084.168-.126.338-.043.337-.168-.169-.211-.084-.084-.042h-.085l-.042-.042-.042-.042.126-.043.127-.042.253-.042.126-.084.043-.127.084-.126v-.169l-.042-.126V2.45l-.169.295-.21.295-.254.338-.168.295.253.38.126.168.169.169h-.59l-.043.042-.042-.042.084-.211.043-.211v-.21l-.043-.254h-.042l-.084.21-.169.17-.126.21-.085.211-.042-.126v-.127l-.084-.168-.084-.127-.127-.084-.126-.085-.085-.042-.084-.084-.084-.042-.085-.085.085.253.084.253-.548-.042v-.042l.126-.042.085-.084.084-.17v-.21l.042-.253.127.127.253.337.126.169.127.084h.379l.127-.169.084-.084.042-.127.042-.21-.042-.253-.042-.211-.084-.211h-.085l-.168.632-.043.338M18.7 4.813h-.42l-.28-.057-.28-.058.234-.114.235-.058h.234l.233.17h.14l-.096.117zm.919-1.353l.315-.35.211-.264h.044v.263l-.044.088-.042.133-.159.095-.337.094.012-.059zm.666.233l.179-.538.064.327.01.253-.01.253-.076.172-.093.093-.074-.148-.032-.17.032-.242zm-.5.358l-.092-.184-.138-.093.184.046.23.138.323.37-.039.018-.104.01-.117-.063-.108-.104-.138-.138zm-.287.388h.482l-.145.052-.096.106-.145.106-.154.034h-.147l-.116-.042-.115-.044.194-.106.242-.106zm-.523-.07l.13-.329.253-.327.021.243-.094.295-.116.201-.193.14v-.223h-.001zm-.756-.78l.169.042.126.084.221.24.074.274.044.247-.084-.169-.127-.21-.126-.127-.211-.085-.042-.168-.044-.129zm-.1.325l.289.105.192.156.192.26-.096-.052-.143-.052-.192-.053-.193-.104-.337-.312.288.052zm-.212-.83v.243l-.052.194-.053.098-.052.049-.209.146.105-.242.052-.243.104-.243.157-.194-.052.192zm.995.547h-.088l-.173-.044-.13-.088-.088-.13-.088-.131-.043-.13.173.044.174.131.305.305-.042.043zm.154-.525l.043-.218.044-.261.088.218v.261l-.044.261-.13.218-.044-.218.043-.26zM5.769 2.914l-.127.042-.21.126-.127.127-.127.126-.042.17v.168l-.127-.211-.126-.127-.38-.295H4.46l.084.422.126.169.127.084.169.126.126.127.042-.042v-.169l.169-.042.126-.084.127-.085.084-.126.127-.295.126-.253h-.042l-.082.042m-1.028.685l-.143-.203-.056-.214.2.148.168.162.113.162.056.162L4.74 3.6zm.943-.432l-.098.253-.38.295-.045.03.06-.281.084-.127.126-.126.127-.127.126-.042.085-.084-.085.209zm-2.618-.169l.085.253.126.127.127.168.168.085h.17v-.085l-.043-.126-.042-.127-.042-.084-.17-.21-.42-.254h-.043l.084.253m.299.02l.169.221.167.351-.242-.096-.188-.243-.075-.094-.086-.262.255.123zm.167-.189l.042.127.084.169.127.126.126.084.043-.042.042-.084V3.04l-.042-.253-.127-.253-.337-.421-.085-.043v.085l.043.337.084.337m.142-.349l.153.243.095.253.008.277-.251-.233-.162-.49-.05-.321.207.271zm.701.012l.085.295.126.169.169.126.337.211v-.126L5.05 3.04l-.127-.253-.126-.21-.169-.17-.21-.126-.254-.042.127.127.084.126m.253.042l.169.169.21.422-.21-.127-.21-.169-.085-.21-.127-.253.253.168zm4.855.295v.211l-.085.211.211-.084.169-.127.126-.168.085-.17.042-.21-.042-.126-.043-.043-.295.17-.084.168-.084.168m.253-.253l.084-.084.084-.042v.21l-.126.212-.127.168-.168.127.126-.38.127-.21zm-8.23-.337l.085.084.126.127.084.084.085.042.126.043.127.084h.126l.169-.042.084.168.169.211v.042l.042.043.084.084v-.633l-.042-.21-.126-.211-.085-.169-.042-.253h-.042l-.126.633.042.21-.169-.21-.21-.127-.254-.084-.295-.042.042.084v.042m.952.039l.042-.305.103.256.118.261.027.522-.154-.206-.138-.284v-.244h.002zm-.663-.05l.23.094.201.136.152.188-.265-.04-.232-.119-.317-.32.23.06zm.428.601l-.253-.084h-.295l.169.169.168.168.211.085h.38l.042-.042-.085-.127-.126-.084-.21-.085m.087.274l-.169-.032-.172-.125-.169-.117.289.03.263.095.169.137-.211.012zm17.3-.274l.085.085.042.042.084-.084.084-.085.043-.21V2.28l-.043-.295-.126-.253-.169-.21.042.168-.042.21-.084.38.042.38.042.168m.112-1.037l.1.098.051.147v.246l-.1.589-.051-.05-.102-.588.102-.442zm-12.435.066l.042.295.085.295.042.127.084.126.085.085.126.042.084.042.085.084.042-.084h.253l.21-.084.17-.17.295-.294-.38.044-.169.042-.168.042.21-.21.17-.212.126.042.126.085.085.084.168.042.123.026.137.01-.218.09-.21.085-.17.169-.056.098-.027.113.428-.145.246-.108.127-.043.084-.126.143-.186-.263-.263-.178-.052-.292-.046-.38.085.042-.253.127-.253-.127.084-.126.042-.224.152-.19.263-.09.26-.043.126.043.17.084-.085.08-.029-.122.197-.085.127v-.128l-.042-.295-.084-.253-.042-.127-.085-.084-.126-.085-.127-.084-.253-.126.085.126.04.125m2.098.612l-.183.12-.211.084-.221.085.025-.078.042-.042.085-.084.337-.127.295-.127-.169.17zm-.479-.502l.18.025.208.047.157.095.08.128-.201-.01-.253-.043-.147-.042-.243-.158.22-.042zm-.823.423l-.1.111.048-.244.148-.294.149-.195.248-.147-.046.133-.052.177-.094.197-.178.188-.123.074zm-.037.312l.123-.155.169-.063.37-.074-.316.295-.169.095-.217.028.04-.126zm-.607-.854l.204.176.113.217.064.31.047.28-.094-.094-.184-.072-.155-.351-.014-.246-.084-.274.103.054zm-1.46.18l.21.168.211.126-.042.043-.38-.043h-.21l-.17.085-.084.084-.084.127-.042.084-.042.126h.337l.169-.042.506-.337.126-.042.169-.042v-.043l-.042-.042-.042-.042-.085-.169-.084-.126-.21-.253-.17-.084-.168.042-.338.084.254.127.21.168m-.064.621l-.222.074-.226.009.148-.252.17-.098.36.006.113.03-.343.231zm-.054-.931l.206.003.07.037.117.124.118.16.193.27-.328-.16-.14-.164-.096-.078-.131-.067-.13-.083.121-.042zm7.926.605l.127.38.126.126.127-.421.042-.253-.042-.211-.043-.127-.084-.084-.21-.126v.126l-.043.295v.295m.125-.622l.14.187.047.187v.28l-.047.235-.047.047-.046-.096-.047-.093-.047-.233.047-.514zm3.505-.012h.042l.169.253.21.169.254.169h.126l.169.042.084-.042h.042l.042.042.296.464V2.66l-.237-.425-.059-.25-.042-.253v-.042l.253.253.071.123.052.169.046.256v.337l.084-.295v-.168l-.042-.17-.042-.126-.084-.168-.211-.211-.253-.21.042.252v.21l.042.17v.126l-.169-.337-.21-.169-.254-.084-.295-.042h-.21l.042.042.042.04m.347.024l.225.09.216.148.185.254-.27-.054-.22-.124-.223-.18-.18-.178.267.044zM5.092 2.28h.422l.295-.042.253-.042-.38-.21-.21-.085-.253-.042-.211.042-.253.084-.085.042.127.127.295.126m-.103-.319l.118-.018.252.013.276.095.186.094-.231.048-.231.042-.277-.024-.275-.162.182-.088zm12.428 9c.047.02.115.068.12.125\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.elsevier.com\",hex:\"FF6C00\"},\"Ember.js\":{title:\"Ember.js\",slug:\"ember-dot-js\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Ember.js icon</title><path d=\"M0 0v24h24V0H0zm12.29 4.38c1.66-.03 2.83.42 3.84 1.85 2.25 5.58-6 8.4-6 8.4s-.23 1.48 2.02 1.42c2.78 0 5.7-2.15 6.81-3.06a.66.66 0 01.9.05l.84.87a.66.66 0 01.01.9c-.72.8-2.42 2.46-4.97 3.53 0 0-4.26 1.97-7.13.1a4.95 4.95 0 01-2.38-3.83s-2.08-.11-3.42-.63c-1.33-.52.01-2.1.01-2.1s.42-.65 1.2 0 2.24.36 2.24.36c.13-1.03.35-2.38.98-3.81 1.34-3 3.38-4.01 5.05-4.05zm.33 2.8c-1.1.07-2.8 1.78-2.88 4.93 0 0 .75.23 2.41-.91 1.67-1.14 2-2.97 1.11-3.81a.82.82 0 00-.64-.21Z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://emberjs.com/logos/\",hex:\"E04E39\"},Emlakjet:{title:\"Emlakjet\",slug:\"emlakjet\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Emlakjet icon</title><path d=\"M15.65 16.105v-.24a3.543 3.543 0 00-1.267-2.471c-.724-.663-1.69-.965-2.655-.904-1.87.12-3.378 1.747-3.378 3.615 0 .784.12 1.567.422 2.471H4.55V6.946l7.42-5.123 7.482 5.122v11.692h-4.223c.18-.663.422-1.688.422-2.532m5.068-10.244L12.452.136c-.301-.181-.663-.181-.905 0L3.222 5.86c-.242.12-.362.361-.362.663V19.48c0 .482.362.844.844.844H9.92a.824.824 0 00.844-.844c0-.06 0-.18-.06-.24l-.06-.182c-.302-.723-.664-1.627-.664-2.53v-.182c-.06-.542.12-1.084.482-1.446a2.095 2.095 0 011.388-.723c.543-.06 1.026.12 1.448.482.422.362.664.844.724 1.386v.18c.06 1.206-.724 2.954-.845 3.135l-1.146 2.17-.18-.362c-.122-.181-.302-.362-.483-.422-.182-.06-.423-.06-.604.06-.18.12-.362.301-.422.482s-.06.422.06.603l.905 1.687c.121.241.423.422.724.422.302 0 .604-.18.724-.422l1.81-3.375h5.732a.824.824 0 00.844-.843V6.524c-.06-.302-.18-.543-.422-.663\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.emlakjet.com/kurumsal-materyaller/\",hex:\"0AE524\"},\"Empire Kred\":{title:\"Empire Kred\",slug:\"empirekred\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Empire Kred icon</title><path d=\"M23.996 4.685c0-2.08-1.674-3.774-3.727-3.774H3.72C1.665.91-.005 2.604-.005 4.69v7.536c0 .336.045.667.135.997.03.134.07.264.12.39.25.623.653 1.17 1.173 1.593.51.524 1.17 1.095 1.965 1.71l.105.074.435.33.52.397c1.19.912 3.205 2.453 6.165 4.71.483.366 1.038.676 1.383.676.343 0 .902-.31 1.383-.676 2.96-2.257 4.972-3.798 6.164-4.71l.972-.74h-.002l.11-.085c.798-.612 1.463-1.19 1.968-1.71.514-.418.908-.96 1.15-1.576.166-.44.252-.906.254-1.376v-7.15h-.003l.003-.003v-.39zm-4.14 6.242c-.093-.017-.188-.032-.283-.045-.105 0-.226-.015-.33-.015-.278-.006-.556.05-.81.164-.214.1-.4.248-.54.436-.135.196-.23.415-.286.646-.06.254-.09.524-.09.81v2.88H12.49L8.756 10.22 7.2 11.795v3.975H4.48V3.4h2.716V8.53l4.83-5.127h3.396l-4.83 4.885 5.166 7.293V9.402h1.662v1.182h.023c.084-.195.195-.38.33-.547.144-.168.3-.312.483-.43.18-.106.375-.21.58-.27.205-.06.42-.09.64-.09.114 0 .24.03.38.06v1.62z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://www.empire.kred\",hex:\"72BE50\"},Envato:{title:\"Envato\",slug:\"envato\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Envato icon</title><path d=\"M19.4.197c-.74-.371-2.721-.247-5.195.62-4.207 2.968-7.674 7.175-8.044 14.109 0 .241-.493 0-.617-.126-1.114-2.104-1.61-4.455-.62-7.921.247-.247-.37-.617-.37-.494-.249.123-1.114 1.113-1.734 2.103-2.847 4.947-.99 11.511 3.961 14.231 4.947 2.721 11.382.988 14.231-4.086 3.342-5.814.369-17.322-1.612-18.436\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://envato.com/\",hex:\"81B441\"},EPEL:{title:\"EPEL\",slug:\"epel\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>EPEL icon</title><path d=\"M.702 2.361c-1.188.11-.88.154 1.98.286 5.677.242 9.043 1.144 11.353 2.993 1.232 1.012 2.187 3.146 2.187 3.146s-3.639.836-7.797 1.65c-4.159.814-7.46 1.54-7.327 1.584.352.11 5.214-.484 10.319-1.276l4.87-.734c.078-.012.036.394.036.514 0 1.1-1.122 2.948-2.794 4.599-2.75 2.684-6.623 4.686-11.573 5.962-1.364.352-2.2.638-1.892.638 1.188.044 5.742-1.298 7.81-2.266 2.685-1.276 4.401-2.508 6.491-4.664 1.48-1.842 2.994-2.796 3.056-5.017l3.06-.506c1.629-.264 3.103-.55 3.28-.616.241-.088.285-.352.197-1.012-.154-1.21-1.1-2.156-3.014-3.037-2.904-1.342-5.88-1.603-7.442-.68-.173.101-.376.417-.534.486a1079.7 1079.7 0 00-2.365-.862C7.567 2.515 3.848 2.075.702 2.361zm19.032 2.773c1.628.484 4.18 2.014 3.792 2.09l-3.066.601-3.386.772c-.644-1.435-1.491-2.232-2.628-3.305l.133-.327c.322-.796 2.536-.602 5.155.169z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://fedoraproject.org/wiki/EPEL\",hex:\"FC0000\"},\"Epic Games\":{title:\"Epic Games\",slug:\"epicgames\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Epic Games icon</title><path d=\"M3.538 0C2.166 0 1.66.506 1.66 1.878v16.565c0 .155.007.299.019.431.034.302.037.593.317.922.026.038.31.246.31.246.151.076.257.128.43.2l8.334 3.492c.431.197.613.276.926.265H12c.317.011.499-.068.93-.265l8.333-3.492c.174-.072.276-.124.431-.2 0 0 .284-.212.31-.246.28-.329.283-.62.317-.922.012-.132.02-.276.02-.43V1.877C22.34.506 21.833 0 20.461 0zm13.356 3.11h.68c1.134 0 1.686.552 1.686 1.697v1.879h-1.372V4.883c0-.367-.17-.537-.525-.537h-.234c-.367 0-.537.17-.537.537v5.813c0 .366.17.536.537.536h.26c.352 0 .522-.17.522-.536v-2.08h1.376v2.144c0 1.145-.564 1.708-1.701 1.708h-.692c-1.141 0-1.7-.567-1.7-1.708V4.819c0-1.142.559-1.709 1.7-1.709zm-12.188.076H7.82v1.277H6.104v2.604h1.652v1.274H6.104v2.774h1.739v1.274H4.706zm3.817 0h2.196c1.137 0 1.7.567 1.7 1.712v2.445c0 1.145-.563 1.709-1.7 1.709h-.794v3.337H8.523zm4.528 0h1.398v9.203h-1.398zm-3.13 1.24v3.39h.579c.351 0 .521-.17.521-.54v-2.31c0-.37-.17-.54-.521-.54zM6.066 14.58h.208l.046.007h.075l.038.012h.038l.038.011.037.008.034.007.034.008.034.007.038.012.03.007.03.012.038.011.03.015.039.015.034.015.03.02.038.014.026.02.038.018.03.02.034.018.03.023.03.019.03.022.031.023.03.026.03.023-.022.03-.027.027-.022.03-.027.03-.022.027-.023.026-.027.03-.022.03-.023.027-.026.03-.023.03-.027.03-.022.027-.023.03-.026.03-.023.031-.026.026-.023.03-.03-.022-.03-.026-.03-.02-.035-.022-.026-.019-.034-.019-.03-.019-.035-.019-.03-.015-.03-.015-.03-.011-.034-.012-.038-.01-.03-.008-.038-.008-.038-.008-.038-.003h-.041l-.046-.008h-.075l-.038.004h-.038l-.038.011-.034.008-.034.011-.037.011-.03.015-.038.016-.027.018-.03.02-.03.018-.027.023-.026.023-.027.022-.022.027-.03.026-.02.03-.018.027-.023.03-.015.034-.02.03-.018.034-.011.034-.016.034-.01.038-.005.038-.011.034-.008.042v.037l-.007.038v.09l.004.039.003.034.004.037.008.038.011.03.004.038.011.03.012.03.015.039.019.037.015.03.019.03.022.031.023.03.019.027.03.026.023.027.026.022.03.023.03.023.031.019.03.018.034.016.038.015.03.015.038.011.038.012.038.007.037.008.038.004.046.003h.124l.046-.007h.037l.038-.012.038-.007.038-.012.034-.007.034-.015.03-.015.038-.016.023-.015.03-.019v-.347h-.552v-.56h1.247v1.248l-.026.022-.03.023-.027.019-.03.023-.03.018-.03.023-.03.019-.031.019-.038.019-.034.019-.03.019-.038.015-.03.019-.038.015-.038.015-.038.015-.034.015-.034.011-.034.012-.037.011-.034.011-.038.012-.034.007-.038.008-.038.008-.038.007-.037.004-.038.004-.038.004-.045.003-.038.004-.042.004h-.196l-.042-.008h-.038l-.037-.007h-.038l-.038-.012-.038-.007-.038-.008-.037-.007-.03-.012-.038-.007-.038-.012-.034-.015-.034-.011-.038-.015-.034-.015-.038-.015-.03-.016-.038-.018-.026-.02-.038-.018-.027-.02-.03-.018-.03-.023-.03-.023-.034-.022-.023-.023-.03-.023-.027-.026-.026-.023-.027-.026-.022-.027-.027-.026-.022-.03-.023-.027-.019-.03-.023-.03-.019-.03-.018-.03-.02-.035-.018-.03-.015-.034-.015-.034-.016-.034-.015-.034-.011-.03-.015-.034-.008-.034-.011-.034-.008-.038-.011-.034-.008-.038-.003-.034-.008-.038-.004-.034-.003-.038-.004-.037-.004-.038v-.208l.008-.038v-.041l.01-.038v-.038l.012-.038.012-.037.007-.038.011-.034.012-.038.011-.034.015-.038.015-.034.016-.034.015-.034.015-.034.019-.034.019-.03.018-.03.02-.03.018-.03.023-.031.023-.03.022-.03.027-.027.022-.026.023-.027.03-.026.023-.027.03-.023.027-.026.03-.023.03-.022.03-.02.03-.022.03-.019.031-.019.034-.019.038-.019.03-.018.038-.016.034-.015.038-.019.03-.01.038-.012.034-.015.034-.008.034-.011.038-.008.034-.011.037-.008h.038l.038-.011h.038l.038-.008h.037zm11.989.007h.207l.046.008h.075l.038.011h.045l.038.012.034.007.038.008.038.007.034.008.038.011.037.012.03.007.038.015.038.012.03.015.038.015.038.015.034.02.027.014.037.02.034.018.03.019.035.023.03.018.03.023.03.023.03.022-.022.03-.019.031-.023.03-.022.03-.023.034-.019.03-.023.03-.022.031-.02.03-.022.03-.023.03-.022.031-.02.034-.022.03-.026.03-.02.03-.022.031-.03-.023-.034-.019-.03-.018-.03-.023-.035-.015-.03-.02-.038-.014-.026-.015-.038-.016-.03-.015-.03-.011-.034-.015-.038-.011-.038-.012-.038-.011-.041-.008-.038-.007-.038-.008-.038-.004-.037-.004-.034-.003h-.084l-.041.007-.038.008-.038.007-.03.016-.026.015-.034.03-.023.034-.015.034v.094l.019.042.015.023.026.026.038.02.03.018.038.015.038.015.049.015.03.008.03.011.038.008.03.011.038.008.042.011.041.011.042.012.042.007.037.012.042.011.038.008.037.011.038.011.038.012.038.011.034.011.038.012.037.015.038.019.038.015.038.019.038.019.03.019.03.018.034.023.027.02.034.026.026.026.03.03.027.027.019.03.026.038.019.026.015.038.019.026.011.038.012.03.007.038.008.038.007.038.004.038.004.037v.095l-.004.041-.004.038-.003.042-.008.038-.011.037-.008.038-.011.038-.015.034-.015.03-.016.034-.018.03-.023.03-.02.03-.018.031-.026.027-.023.026-.027.023-.03.026-.026.023-.03.023-.03.018-.031.023-.038.019-.03.015-.038.02-.038.014-.037.015-.038.012-.038.011-.03.011-.038.008-.038.008-.03.007-.038.008h-.038l-.037.007h-.038l-.038.008h-.28l-.037-.004-.038-.004-.042-.003-.038-.008-.037-.004-.038-.007-.038-.008-.042-.011-.037-.008-.038-.011-.038-.008-.038-.011-.037-.012-.038-.015-.034-.011-.038-.011-.038-.016-.03-.015-.038-.015-.03-.019-.038-.015-.034-.019-.026-.019-.038-.019-.027-.018-.034-.02-.03-.022-.03-.023-.03-.022-.03-.023-.027-.023-.03-.026.022-.03.027-.027.023-.03.026-.03.023-.027.022-.03.027-.03.023-.027.026-.03.023-.026.026-.03.023-.03.022-.027.027-.03.023-.03.026-.027.027-.03.026.022.038.023.026.023.038.022.03.02.034.022.03.019.035.015.03.019.034.015.038.015.03.015.038.011.03.016.038.01.037.012.038.012.038.007.038.008.038.007h.041l.038.012h.208l.038-.008.037-.008.03-.007.03-.011.027-.016.034-.022.02-.027.018-.03.011-.038v-.087l-.015-.037-.022-.03-.023-.023-.034-.023-.027-.015-.037-.015-.038-.015-.045-.02-.027-.007-.03-.008-.038-.01-.03-.008-.038-.012-.038-.007-.041-.012-.038-.007-.042-.012-.037-.007-.038-.012-.038-.007-.038-.012-.038-.01-.037-.008-.034-.012-.034-.011-.034-.012-.038-.015-.042-.015-.038-.015-.037-.015-.038-.019-.038-.019-.026-.019-.038-.019-.027-.022-.034-.02-.022-.022-.027-.026-.03-.027-.023-.026-.022-.027-.02-.026-.018-.03-.02-.034-.014-.027-.012-.03-.011-.034-.011-.03-.008-.038-.007-.034v-.038l-.008-.038v-.162l.004-.038.004-.038.007-.03.008-.038.011-.03.008-.038.015-.03.015-.038.015-.03.019-.038.019-.03.026-.03.02-.03.03-.03.026-.027.023-.03.034-.027.022-.019.034-.023.03-.022.03-.02.038-.018.03-.015.039-.019.03-.015.038-.012.037-.015.038-.011.027-.008.037-.007.03-.008.038-.007.038-.008.038-.004.038-.004.038-.003zm-9.237.027h.707l.015.034.015.034.015.034.011.038.015.034.015.034.016.034.015.034.011.034.019.037.015.034.015.035.008.034.015.034.019.034.015.037.015.034.011.034.015.034.02.034.01.034.016.038.011.038.015.03.02.038.014.03.015.038.012.038.011.03.019.038.015.03.015.038.011.03.016.038.019.038.015.034.011.034.011.034.015.034.02.034.014.037.016.035.01.034.016.034.015.034.015.034.015.037.012.034.015.034.019.034.015.034.015.034.008.038.015.034.019.034.015.034.011.034.015.034.015.038.02.038.01.03.016.038.011.03.015.038.019.038.015.03.011.038.016.03.011.038.019.03.015.038.011.038.015.03.016.038.018.03.016.038.01.037.012.03.015.038.02.03h-.783l-.02-.033-.01-.034-.016-.034-.015-.038-.011-.034-.015-.034-.015-.034-.012-.034-.015-.034-.015-.034-.011-.034-.015-.038-.015-.034-.012-.034-.015-.034H8.617l-.015.038-.011.03-.015.038-.019.037-.008.03-.015.039-.015.03-.011.038-.015.03-.015.038-.012.03-.015.038-.015.037-.015.03-.011.038h-.775l.015-.037.015-.034.015-.034.012-.038.01-.034.02-.034.015-.034.015-.034.011-.034.015-.038.02-.034.014-.034.012-.034.011-.034.015-.034.02-.038.014-.034.015-.034.012-.034.015-.034.015-.034.015-.038.015-.038.012-.03.015-.038.019-.03.015-.038.011-.037.011-.03.015-.038.02-.03.014-.038.016-.03.01-.038.016-.038.019-.03.011-.038.015-.03.012-.038.015-.038.019-.03.015-.038.011-.03.015-.038.012-.03.019-.038.015-.038.015-.034.011-.034.015-.034.02-.034.014-.034.008-.038.015-.034.015-.034.019-.034.015-.034.011-.034.016-.038.015-.037.015-.03.015-.038.011-.03.015-.038.015-.038.02-.03.014-.038.012-.03.011-.038.015-.03.02-.038.014-.038.012-.03.015-.038.015-.03.019-.038.011-.038.011-.03.016-.038zm2.192.019h.775l.022.03.02.034.022.03.019.034.019.03.019.034.018.03.023.035.019.03.019.03.019.034.019.03.026.034.015.03.02.035.022.03.023.03.015.034.022.03.02.034.014.03.027.035.019.03.019.034.019.03.018.03.023.034.019.03.019.035.019.03.019.034.022.03.02.034.018.03.023-.03.015-.038.023-.026.022-.038.02-.026.014-.038.027-.027.019-.037.015-.027.023-.03.022-.038.02-.026.018-.038.019-.027.023-.037.018-.027.02-.038.018-.026.02-.03.022-.038.019-.027.019-.037.022-.027.02-.038.018-.026.023-.03.019-.038.022-.027.02-.037.018-.027.02-.038.022-.026.019-.038.019-.026h.782v2.789h-.734v-1.64l-.018.026-.023.038-.019.026-.023.03-.019.038-.022.027-.02.03-.022.038-.019.026-.019.03-.026.03-.019.039-.023.026-.019.03-.018.038-.023.026-.019.03-.023.038-.019.027-.022.03-.02.038-.018.026-.023.03-.019.038-.022.027-.023.03-.019.03-.019.038-.023.027-.022.03-.015.038-.027.026-.019.03-.022.038-.02.027h-.014l-.023-.034-.019-.03-.023-.035-.019-.03-.022-.034-.02-.03-.022-.034-.019-.03-.022-.034-.02-.03-.026-.035-.015-.03-.023-.034-.022-.03-.02-.034-.022-.03-.019-.038-.022-.03-.02-.034-.022-.03-.019-.035-.023-.03-.018-.034-.023-.03-.019-.034-.023-.03-.019-.034-.022-.03-.02-.035-.022-.03-.019-.034-.026-.03-.015-.034-.023-.03v1.644h-.725v-2.76zm3.47 0h2.199v.63h-1.47v.447h1.322v.593H15.21v.48h1.489v.631h-2.215v-2.759zm-5.318.854l-.015.038-.012.03-.015.038-.015.037-.011.034-.015.034-.016.038-.015.038-.011.03-.015.038-.015.03-.012.038-.015.038-.015.03-.011.038-.015.03-.015.038-.016.038-.01.03-.016.038-.015.038-.011.03-.016.038h.643l-.015-.038-.012-.034-.015-.038-.015-.034-.011-.034-.015-.034-.015-.038-.012-.034-.015-.034-.015-.034-.011-.034-.015-.038-.012-.034-.015-.034-.015-.034-.011-.034-.015-.037-.015-.038-.012-.03-.015-.038-.015-.038-.011-.034zm-1.15 5.223h8.013l-4.09 1.35z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.epicgames.com/\",hex:\"313131\"},Epson:{title:\"Epson\",slug:\"epson\",svg:'<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" role=\"img\"><title>Epson icon</title><path d=\"M16.616 13.915c-1.029 0-1.428-.952-1.428-1.915 0-.975.398-1.927 1.428-1.927 1.03 0 1.429.952 1.429 1.927 0 .963-.399 1.915-1.429 1.915m0-4.805c-1.627 0-2.567 1.218-2.567 2.89s.94 2.89 2.567 2.89c1.628 0 2.568-1.218 2.568-2.89s-.94-2.89-2.568-2.89zM0 9.266h4.085v.974H1.141v1.207h2.745v.952H1.141v1.351h2.944v.975H0V9.266zM6.73 12.11H5.701v-1.871H6.73c.709 0 1.185.311 1.185.941 0 .621-.476.93-1.185.93m-2.168 2.614h1.14v-1.639H6.73c1.384 0 2.314-.687 2.314-1.904 0-1.229-.931-1.915-2.314-1.915H4.562v5.458zM20.768 9.266h-1.162v5.458h1.118v-2.215c0-.598-.022-1.14-.044-1.605.133.267.531 1.085.708 1.396l1.45 2.425H24V9.266h-1.106v2.158c0 .599.022 1.196.044 1.672-.133-.276-.531-1.096-.72-1.406l-1.45-2.424zM10.34 12.919c0 .73.608 1.019 1.251 1.019.421 0 1.118-.122 1.118-.687 0-.598-.842-.709-1.649-.919-.853-.232-1.672-.543-1.672-1.561 0-1.13 1.063-1.661 2.059-1.661 1.152 0 2.204.498 2.204 1.771h-1.13c-.044-.664-.554-.83-1.129-.83-.388 0-.875.154-.875.619 0 .421.277.487 1.661.842.398.11 1.66.354 1.66 1.595 0 1.018-.797 1.771-2.292 1.771-1.217 0-2.357-.598-2.347-1.959h1.141z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://global.epson.com/IR/library/\",hex:\"003399\"},ESEA:{title:\"ESEA\",slug:\"esea\",svg:'<svg xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" viewBox=\"0 0 24 24\"><title>ESEA icon</title><path d=\"M14.054 3L8.95 9.746 0 9.883l5.832 4.47-4.79 6.879 8.491-4.088 5.711 4.323v-7.114L24 10.029 6.745 14.05a12.575 12.575 0 0 0 1.589-1.955 5.475 5.475 0 0 0 .617-1.786l5.593-.151z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://play.esea.net/\",hex:\"0E9648\"},ESLint:{title:\"ESLint\",slug:\"eslint\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>ESLint icon</title><path d=\"M7.257 9.132L11.816 6.5a.369.369 0 0 1 .368 0l4.559 2.632a.369.369 0 0 1 .184.32v5.263a.37.37 0 0 1-.184.319l-4.559 2.632a.369.369 0 0 1-.368 0l-4.559-2.632a.369.369 0 0 1-.184-.32V9.452a.37.37 0 0 1 .184-.32M23.852 11.53l-5.446-9.475c-.198-.343-.564-.596-.96-.596H6.555c-.396 0-.762.253-.96.596L.149 11.509a1.127 1.127 0 0 0 0 1.117l5.447 9.398c.197.342.563.517.959.517h10.893c.395 0 .76-.17.959-.512l5.446-9.413a1.069 1.069 0 0 0 0-1.086m-4.51 4.556a.4.4 0 0 1-.204.338L12.2 20.426a.395.395 0 0 1-.392 0l-6.943-4.002a.4.4 0 0 1-.205-.338V8.08c0-.14.083-.269.204-.338L11.8 3.74c.12-.07.272-.07.392 0l6.943 4.003a.4.4 0 0 1 .206.338z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://eslint.org/img/logo.svg\",hex:\"4B32C3\"},Ethereum:{title:\"Ethereum\",slug:\"ethereum\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Ethereum icon</title><path d=\"M11.944 17.97L4.58 13.62 11.943 24l7.37-10.38-7.372 4.35h.003zM12.056 0L4.69 12.223l7.365 4.354 7.365-4.35L12.056 0z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.ethereum.org/images/logos/Ethereum_Visual_Identity_1.0.0.pdf\",hex:\"3C3C3D\"},Etsy:{title:\"Etsy\",slug:\"etsy\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Etsy icon</title><path d=\"M8.564 2.445c0-.325.033-.52.59-.52h7.465c1.3 0 2.02 1.11 2.54 3.193l.42 1.666h1.27c.23-4.728.43-6.784.43-6.784s-3.196.36-5.09.36H6.64L1.526.196v1.37l1.725.326c1.21.24 1.5.496 1.6 1.606 0 0 .11 3.27.11 8.64 0 5.385-.09 8.61-.09 8.61 0 .973-.39 1.333-1.59 1.573l-1.722.33V24l5.13-.165h8.55c1.935 0 6.39.165 6.39.165.105-1.17.75-6.48.855-7.064h-1.2L20 19.846c-1.005 2.28-2.476 2.445-4.11 2.445h-4.906c-1.63 0-2.415-.64-2.415-2.05V12.8s3.62 0 4.79.096c.912.064 1.463.325 1.76 1.598l.39 1.695h1.41l-.09-4.278.192-4.305H15.63l-.45 1.89c-.283 1.244-.48 1.47-1.754 1.6-1.666.17-4.815.14-4.815.14V2.45h-.05z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.etsy.com/uk/press\",hex:\"F16521\"},Eventbrite:{title:\"Eventbrite\",slug:\"eventbrite\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Eventbrite icon</title><path d=\"M10.5 5.8c2.7-.6 5.3.5 6.8 2.5L5.6 11c.4-2.5 2.3-4.6 4.9-5.2zm6.9 9.8c-.9 1.3-2.3 2.3-3.9 2.6-2.7.6-5.3-.5-6.8-2.6L18.4 13l1.9-.4 3.7-.8c0-.8-.1-1.6-.3-2.3C22.2 3 15.8-.9 9.3.6S-1.2 8.4.3 14.7 8.2 25 14.7 23.5c3.8-.9 6.8-3.4 8.2-6.6.1-.1-5.5-1.3-5.5-1.3z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.eventbrite.com/signin/\",hex:\"F05537\"},\"Event Store\":{title:\"Event Store\",slug:\"eventstore\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Event Store icon</title><path d=\"M5.785 3.414c.428-.251.874-.473 1.339-.666.981-.421 1.995-.659 3.036-.765l1.127 1.274-.525 1.319c-1.02.195-1.979.57-2.879 1.11l-.195.12-.178-1.737-1.725-.66v.005zM5.295 3.724l1.789.69.188 1.71c-.969.713-1.725 1.623-2.264 2.73-.051.099-.096.198-.139.3l-1.26-1.529-2.054.434c.511-1.104 1.201-2.091 2.063-2.96.515-.522 1.07-.979 1.667-1.376l.01.001zm11.782 12.052c.195-.324.354-.652.48-.99l1.938 2.35 3.255-.701c-.187.513-.407 1.015-.662 1.507-.671 1.291-1.553 2.409-2.648 3.36-1.112.962-2.369 1.665-3.771 2.107-.027.009-.056.016-.083.026l-2.411-2.039.629-2.775.051-.021c1.379-.6 2.457-1.529 3.224-2.835v.011zM21.153 4.805c.199.273.384.56.563.854.741 1.248 1.254 2.582 1.539 4.004.271 1.41.315 2.829.12 4.252-.105.684-.255 1.35-.464 2.002l-3.255.699-1.95-2.357c.226-.867.255-1.77.06-2.709-.225-1.114-.72-2.065-1.454-2.85l3.509-.42 1.306-3.476h.026zM1.338 8.584l2.1-.444 1.236 1.509c-.391 1.084-.48 2.21-.285 3.38.045.334.119.656.21.969l-2.22-.505-1.59 1.881c-.193-.833-.283-1.685-.283-2.554.003-1.451.27-2.85.807-4.199l.016-.039.009.002zM4.78 14.518c.319.844.788 1.614 1.409 2.316.465.539.99.975 1.563 1.319l-2.2 1.261.12 2.864c-.726-.451-1.395-.99-2-1.605-1.021-1.05-1.8-2.249-2.34-3.6-.149-.375-.27-.75-.375-1.125l1.635-1.919 2.22.509-.032-.02zM8.232 18.415c.473.236.979.416 1.518.54 1.207.28 2.385.233 3.529-.141l-.625 2.757 2.387 2.02c-1.193.313-2.414.445-3.659.401-1.455-.046-2.853-.354-4.19-.925-.36-.153-.705-.322-1.041-.51l-.119-2.882 2.2-1.26zM20.815 4.364L19.502 7.85l-3.614.435c-.105-.091-.213-.181-.327-.255-1.185-.9-2.52-1.426-4.004-1.575-.346-.029-.675-.029-.99-.029l1.26-3.226L9.1.095c.827-.09 1.637-.104 2.459-.09.49.015.975.051 1.459.113.68.089 1.351.239 2.015.42 1.405.4 2.685 1.034 3.842 1.93.729.559 1.376 1.191 1.94 1.896z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/eventstore/brand\",hex:\"5AB552\"},Evernote:{title:\"Evernote\",slug:\"evernote\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Evernote icon</title><path d=\"M7.692 5.445c0 .239-.02.637-.256.895-.257.24-.652.259-.888.259H4.022c-.73 0-1.165 0-1.46.04-.159.02-.356.1-.455.14-.04.019-.04 0-.02-.02L7.85.848c.02-.02.04-.02.02.02-.04.099-.118.298-.138.457-.04.298-.04.736-.04 1.472v2.647zm5.348 17.869c-.67-.438-1.026-1.015-1.164-1.373a2.924 2.924 0 0 1-.217-1.095 3.007 3.007 0 0 1 3-3.004c.493 0 .888.398.888.895a.88.88 0 0 1-.454.776c-.099.06-.237.1-.336.12-.098.02-.473.06-.65.218-.198.16-.356.418-.356.697 0 .298.118.577.316.776.355.358.829.557 1.342.557a2.436 2.436 0 0 0 2.427-2.447c0-1.214-.809-2.289-1.875-2.766-.158-.08-.414-.14-.651-.2a8.04 8.04 0 0 0-.592-.099c-.829-.1-2.901-.756-3.04-2.606 0 0-.611 2.785-1.835 3.541-.118.06-.276.12-.454.16-.177.04-.374.06-.434.06-1.993.119-4.105-.518-5.565-2.03 0 0-.987-.816-1.5-3.104-.118-.558-.355-1.553-.493-2.488-.06-.338-.08-.597-.099-.836 0-.975.592-1.631 1.342-1.73h4.026c.69 0 1.086-.18 1.342-.419.336-.318.415-.776.415-1.313v-4.08-.118C8.52.669 9.173.052 10.139.052h.474c.197 0 .434.02.651.04.158.02.296.06.533.12 1.204.298 1.46 1.532 1.46 1.532s2.27.398 3.415.597c1.085.199 3.77.378 4.282 3.104 1.204 6.487.474 12.775.415 12.775-.849 6.129-5.901 5.83-5.901 5.83a4.1 4.1 0 0 1-2.428-.736zm4.54-13.034c-.652-.06-1.204.2-1.402.697-.04.1-.079.219-.059.278.02.06.06.08.099.1.237.12.631.179 1.204.239.572.06.967.1 1.223.06.04 0 .08-.02.119-.08.04-.06.02-.18.02-.279-.06-.537-.553-.935-1.204-1.015z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://evernote.com/press\",hex:\"00A82D\"},Everplaces:{title:\"Everplaces\",slug:\"everplaces\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Everplaces icon</title><path d=\"M10.839 23.972C4.76 23.388 0 18.257 0 12.028c0-6.623 5.377-12 12-12s12 5.377 12 12c0 6.23-4.76 11.359-10.839 11.943v-7.046c2.22-.525 3.87-2.521 3.87-4.897 0-2.778-2.253-5.033-5.031-5.033S6.968 9.25 6.968 12.028c0 2.377 1.653 4.372 3.87 4.897l.001 7.047zm-.388-14.655c.642 0 1.162.521 1.162 1.162 0 .641-.521 1.162-1.162 1.162-.641 0-1.16-.521-1.16-1.162 0-.641.52-1.161 1.16-1.162z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://everplaces.com\",hex:\"FA4B32\"},\"Experts Exchange\":{title:\"Experts Exchange\",slug:\"expertsexchange\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Experts Exchange icon</title><path d=\"M7.28.9H0L8.36 12 0 23.1h7.28L15.64 12zM24 .9h-7.28l-2.3 3.06 3.64 4.82zM14.42 20.05l2.3 3.05H24l-5.94-7.88z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.experts-exchange.com/\",hex:\"00AAE7\"},Expo:{title:\"Expo\",slug:\"expo\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Expo icon</title><path d=\"M18.22 11.66a2.944 2.944 0 0 0 3.085-2.361 1.93 1.93 0 0 0-1.621-.881 1.932 1.932 0 0 0-1.464 3.241zm-6.886-8.138l4.021-2.327-1.28-.722-5.543 3.21.441.248.84.47 1.521-.88zM15.87.98a.217.217 0 0 1 .142.141l1.863 5.695a.218.218 0 0 1-.094.258 3.798 3.798 0 0 0-1.738 4.27 3.8 3.8 0 0 0 4.05 2.777c.102-.008.2.055.231.152l1.922 5.852a.224.224 0 0 1-.094.258l-5.894 3.578a.224.224 0 0 1-.096.029.219.219 0 0 1-.154-.033l-2.074-1.348a.222.222 0 0 1-.082-.097L9.806 12.84l-6.165 3.657a.22.22 0 0 1-.04.021.209.209 0 0 1-.196-.014l-1.394-.82a.216.216 0 0 1-.086-.286L7.89 3.586a.216.216 0 0 1 .102-.099L13.96.031a.219.219 0 0 1 .219-.004L15.87.98zM9.63 4.805l-1.165-.657-.285-.16L2.41 15.41l1.047.617 4.972-6.761a.216.216 0 0 1 .204-.09c.079.008.146.06.176.133L14.23 22.28l1.45.939-5.803-17.67-.246-.744zm10.054 7.918a2.373 2.373 0 1 1 1.676-4.052 2.37 2.37 0 0 1 .694 1.676 2.37 2.37 0 0 1-2.37 2.376z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://expo.io\",hex:\"000000\"},EyeEm:{title:\"EyeEm\",slug:\"eyeem\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>EyeEm icon</title><path d=\"M3.673 9.181v-1.04H0v5.723h3.68v-1.048H1.186v-1.378h2.158v-1.017H1.186V9.18zm2.162 6.634l2.532-5.907h-1.24l-.902 2.357-.91-2.357H4.081l1.546 3.604-1.01 2.303zm6.625-3.573v-.444c0-1.232-.75-1.966-1.89-1.966-1.179 0-2.013.78-2.013 2.058 0 1.27.834 2.058 2.043 2.058.926 0 1.684-.536 1.821-1.285l-1.124-.054c-.085.275-.337.436-.727.436-.505 0-.804-.314-.827-.803zm-1.898-1.538c.505 0 .75.314.773.796H9.743c.031-.505.345-.796.82-.796zM17.04 9.18v-1.04h-3.672v5.723h3.68v-1.048h-2.495v-1.378h2.158v-1.017h-2.158V9.18zm5.46.65c-.597 0-.987.268-1.216.628-.26-.406-.697-.627-1.24-.627s-.864.206-1.04.482v-.406h-1.056v3.956h1.117v-2.196c0-.474.268-.796.711-.796.406 0 .643.283.643.788v2.204h1.117V11.53c.046-.398.291-.658.689-.658.428 0 .658.283.658.788v2.204H24v-2.426c0-1.002-.597-1.606-1.5-1.606z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.eyeem.com/\",hex:\"000000\"},\"F-Droid\":{title:\"F-Droid\",slug:\"f-droid\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>F-Droid icon</title><path d=\"M20.472,10.081H3.528c-0.877,0-1.589,0.711-1.589,1.589v10.59c0,0.877,0.711,1.589,1.589,1.589h16.944 c0.877,0,1.589-0.711,1.589-1.589V11.67C22.061,10.792,21.349,10.081,20.472,10.081z M12,22.525c-3.066,0-5.56-2.494-5.56-5.56 s2.494-5.56,5.56-5.56c3.066,0,5.56,2.494,5.56,5.56S15.066,22.525,12,22.525z M12,12.411c-2.511,0-4.554,2.043-4.554,4.554 S9.489,21.519,12,21.519s4.554-2.043,4.554-4.554S14.511,12.411,12,12.411z M12,20.274c-1.563,0-2.881-1.103-3.221-2.568h1.67 c0.275,0.581,0.859,0.979,1.551,0.979c0.96,0,1.721-0.761,1.721-1.721c0-0.96-0.761-1.721-1.721-1.721 c-0.649,0-1.2,0.352-1.493,0.874H8.805c0.378-1.412,1.669-2.462,3.195-2.462c1.818,0,3.309,1.491,3.309,3.309 C15.309,18.783,13.818,20.274,12,20.274z M23.849,0.396c-0.001,0.001-0.002,0.002-0.002,0.003 c-0.002-0.002-0.004-0.003-0.006-0.005c0.001-0.001,0.002-0.003,0.004-0.004c-0.116-0.137-0.279-0.231-0.519-0.238 c-0.202,0.005-0.391,0.097-0.512,0.259l-1.818,2.353c-0.164-0.058-0.339-0.095-0.523-0.095H3.528c-0.184,0-0.358,0.038-0.523,0.095 L1.187,0.41c-0.121-0.162-0.31-0.253-0.512-0.259c-0.24,0.006-0.403,0.1-0.519,0.238c0.001,0.001,0.002,0.003,0.004,0.004 C0.157,0.395,0.155,0.397,0.153,0.399C0.153,0.398,0.152,0.397,0.151,0.396C0.085,0.474-0.146,0.822,0.139,1.22l1.909,2.471 C1.981,3.867,1.94,4.057,1.94,4.257v3.707c0,0.877,0.711,1.589,1.589,1.589h16.944c0.877,0,1.589-0.711,1.589-1.589V4.257 c0-0.2-0.041-0.39-0.109-0.566l1.909-2.471C24.146,0.822,23.915,0.474,23.849,0.396z M6.904,8.228c-0.987,0-1.787-0.8-1.787-1.787 s0.8-1.787,1.787-1.787s1.787,0.8,1.787,1.787S7.891,8.228,6.904,8.228z M17.229,8.228c-0.987,0-1.787-0.8-1.787-1.787 s0.8-1.787,1.787-1.787c0.987,0,1.787,0.8,1.787,1.787S18.216,8.228,17.229,8.228z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://f-droid.org/\",hex:\"1976D2\"},\"F-Secure\":{title:\"F-Secure\",slug:\"f-secure\",svg:'<svg xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" viewBox=\"0 0 24 24\"><title>F-Secure icon</title><path d=\"M23.93 2.94a35.94 35.94 0 0 0-22.24-.6A2.22 2.22 0 0 0 .07 5.09c.4 1.6.98 3.44 1.68 5.11.01.04.03.02.03-.02-.1-.78.5-1.77 1.68-2.13a27.56 27.56 0 0 1 17.39.23c.86.3 1.82-.17 2.1-1.06.7-2.25.98-3.78 1.05-4.16.01-.07-.05-.1-.07-.12zM6.65 7.89c-.86.18-2.05.46-2.94.76-1.78.61-1.7 2.78-.75 3.47.07-.4.5-.95.98-1.13 1.78-.7 3.69-1.12 5.62-1.29-.98-.4-1.94-.97-2.9-1.81M20.83 12.23a21.16 21.16 0 0 0-16.45-.65c-.85.32-1.38 1.35-.85 2.33a38.16 38.16 0 0 0 3.15 4.8c-.17-.58.13-1.66 1.27-2.01 3.15-.97 6.46-.56 8.66.33.62.25 1.5.1 1.99-.64a38.62 38.62 0 0 0 2.29-4.02c.03-.06 0-.11-.06-.14M15.72 20a9.92 9.92 0 0 1-2.5-1.8c-.34-.34-.84-.83-1.37-1.41-1.2 0-2.37.12-3.62.52-1.16.36-1.27 1.7-.76 2.4.86 1.07 1.46 1.65 2.42 2.64a2.74 2.74 0 0 0 3.82.02c.75-.75 1.21-1.25 2.06-2.21.05-.05.03-.14-.05-.16\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://vip.f-secure.com/en/marketing/logos\",hex:\"00BAFF\"},Facebook:{title:\"Facebook\",slug:\"facebook\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Facebook icon</title><path d=\"M23.9981 11.9991C23.9981 5.37216 18.626 0 11.9991 0C5.37216 0 0 5.37216 0 11.9991C0 17.9882 4.38789 22.9522 10.1242 23.8524V15.4676H7.07758V11.9991H10.1242V9.35553C10.1242 6.34826 11.9156 4.68714 14.6564 4.68714C15.9692 4.68714 17.3424 4.92149 17.3424 4.92149V7.87439H15.8294C14.3388 7.87439 13.8739 8.79933 13.8739 9.74824V11.9991H17.2018L16.6698 15.4676H13.8739V23.8524C19.6103 22.9522 23.9981 17.9882 23.9981 11.9991Z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://en.facebookbrand.com/\",hex:\"1877F2\"},FACEIT:{title:\"FACEIT\",slug:\"faceit\",svg:'<svg xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" viewBox=\"0 0 24 24\"><title>FACEIT icon</title><path d=\"M24 2.7c0-.1-.1-.2-.1-.2-.1 0-.1 0-.2.1-2 3.1-4.1 6.2-6.1 9.4H.2c-.2 0-.3.3-.1.4 7.2 2.7 17.7 6.8 23.5 9.1.2.1.4-.1.4-.2V2.7z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://corporate.faceit.com/branding/\",hex:\"FF5500\"},Fandango:{title:\"Fandango\",slug:\"fandango\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Fandango icon</title><path d=\"M13.664 6.956L8.05 8.496 9.19 12.72l5.615-1.54L15.95 15.4l-5.615 1.49 1.093 4.224-5.615 1.49L4.42 17.54c.846-.995 1.194-2.386.846-3.728-.398-1.342-1.392-2.385-2.584-2.832L1.29 5.763 12.57 2.78zm7.106-.198L18.932.05 0 5.068l1.838 6.758c1.093.2 2.087 1.043 2.385 2.236.348 1.193-.1 2.385-.944 3.18l1.788 6.708L24 18.882l-1.79-6.708c-1.142-.2-2.086-1.043-2.434-2.236-.298-1.193.1-2.435.994-3.18z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.fandango.com\",hex:\"FF7300\"},Favro:{title:\"Favro\",slug:\"favro\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Favro icon</title><path d=\"M11.586 1.655a6.623 6.623 0 0 0-6.621 6.621v.772a7.503 7.503 0 0 1 3.31 3.269V8.276a3.302 3.302 0 0 1 3.31-3.31c.91 0 1.655-.745 1.655-1.655s-.745-1.655-1.655-1.655zM1.655 9.103C.745 9.103 0 9.848 0 10.758s.745 1.655 1.655 1.655a3.302 3.302 0 0 1 3.31 3.31v4.966c0 .91.745 1.655 1.655 1.655s1.655-.745 1.655-1.655v-4.966a6.623 6.623 0 0 0-6.621-6.621zm15.724 0c-3.655 0-6.621 2.966-6.621 6.621s2.966 6.621 6.621 6.621a6.583 6.583 0 0 0 3.462-.979c.262.579.841.979 1.503.979a1.66 1.66 0 0 0 1.655-1.655v-9.931a1.66 1.66 0 0 0-1.655-1.655c-.676 0-1.241.4-1.503.979a6.574 6.574 0 0 0-3.462-.979zm0 3.311c1.834 0 3.31 1.476 3.31 3.31s-1.476 3.31-3.31 3.31c-1.835 0-3.31-1.476-3.31-3.31s1.476-3.31 3.31-3.31z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://favro.com/login\",hex:\"512DA8\"},FeatHub:{title:\"FeatHub\",slug:\"feathub\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>FeatHub icon</title><path d=\"M8.73.01h6.54v6.867H8.73V.01zm0 17.113h6.54v6.867H8.73v-6.867zM.01 8.73h23.98v6.54H.01V8.73z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://feathub.com/\",hex:\"9B9B9B\"},Fedora:{title:\"Fedora\",slug:\"fedora\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Fedora icon</title><path d=\"M12 0C5.375 0 .005 5.368 0 11.992v9.286A2.728 2.728 0 0 0 2.728 24h9.277C18.63 23.997 24 18.626 24 12c0-6.627-5.373-12-12-12zm4.595 5.577c-.379 0-.516-.073-1.072-.073a2.973 2.973 0 0 0-2.973 2.968v2.583a.42.42 0 0 0 .42.42h1.953c.728 0 1.316.58 1.316 1.31 0 .734-.594 1.312-1.33 1.312h-2.358v2.985a5.632 5.632 0 0 1-5.633 5.632 4.48 4.48 0 0 1-1.244-.168c-.637-.166-1.157-.689-1.157-1.296 0-.734.533-1.268 1.33-1.268.378 0 .516.072 1.071.072 1.64 0 2.97-1.328 2.973-2.968v-2.583a.42.42 0 0 0-.42-.419H7.518c-.727 0-1.315-.58-1.315-1.31 0-.734.594-1.312 1.33-1.312H9.89V8.477a5.632 5.632 0 0 1 5.632-5.632c.472 0 .807.053 1.244.167.637.167 1.158.69 1.158 1.296 0 .735-.533 1.269-1.33 1.269z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://fedoraproject.org/wiki/Logo/UsageGuidelines\",hex:\"294172\"},Feedly:{title:\"Feedly\",slug:\"feedly\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Feedly icon</title><path d=\"M13.86 1.989a2.609 2.609 0 0 0-3.726 0L.768 11.527a2.729 2.729 0 0 0 0 3.795l6.684 6.808a2.618 2.618 0 0 0 1.74.664h5.613a2.616 2.616 0 0 0 1.872-.791l6.554-6.675a2.726 2.726 0 0 0 0-3.795l-9.37-9.544zm-.26 17.422l-.935.95a.372.372 0 0 1-.268.114h-.8a.376.376 0 0 1-.247-.096l-.954-.97a.39.39 0 0 1 0-.542l1.337-1.36a.37.37 0 0 1 .531 0l1.337 1.361a.389.389 0 0 1 0 .543zm0-5.711l-3.737 3.808a.374.374 0 0 1-.268.111h-.799a.376.376 0 0 1-.25-.093l-.951-.97a.391.391 0 0 1 0-.544l4.139-4.214a.372.372 0 0 1 .531 0l1.337 1.362a.386.386 0 0 1 0 .54zm0-5.707l-6.54 6.66a.372.372 0 0 1-.268.113h-.8a.373.373 0 0 1-.249-.094L4.79 13.7a.388.388 0 0 1 0-.54l6.943-7.07a.372.372 0 0 1 .531 0l1.337 1.36a.389.389 0 0 1 0 .543z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://blog.feedly.com/wp-content/themes/feedly-2017-v1.19.3/assets/images/logos/logo.svg\",hex:\"2BB24C\"},\"Fido Alliance\":{title:\"Fido Alliance\",slug:\"fidoalliance\",svg:'<svg xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" viewBox=\"0 0 24 24\"><title>Fido Alliance icon</title><path d=\"M7.849 7.513a1.085 1.085 0 1 0 1.085 1.086v-.001c0-.599-.486-1.085-1.085-1.085zM4.942 10.553v1.418H6.89v4.793h.704V14.04h.509v2.724h.71v-6.211H4.941zM14.122 11.089H14.1c-.287-.416-.862-.702-1.639-.702-1.489 0-2.797 1.224-2.786 3.319 0 1.936 1.181 3.201 2.659 3.201.797 0 1.56-.361 1.935-1.04l.117.893h1.669V7.651h-1.934zm0 2.904c0 .158-.012.313-.034.465l.002-.017c-.11.532-.574.925-1.13.925h-.014.001c-.797 0-1.318-.659-1.318-1.723 0-.978.446-1.767 1.329-1.767.606 0 1.022.437 1.138.947.014.09.023.194.023.3l-.001.054v-.003zM4.802 8.89l.475-1.6a2.914 2.914 0 0 0-.384-.101l-.019-.003a3.654 3.654 0 0 0-.829-.092 3.73 3.73 0 0 0-1.084.159l.027-.007a2.022 2.022 0 0 0-.38.153l.011-.005a2.624 2.624 0 0 0-.663.475c-.5.49-.754 1.155-.754 1.975v.708H-.001v1.418h1.199v4.793h1.921V11.97h1.199v-1.416H3.119v-.75a1.019 1.019 0 0 1 .23-.713l-.001.002a.736.736 0 0 1 .063-.062l.001-.001s.414-.41 1.389-.14zM20.306 10.388c-2.01 0-3.327 1.286-3.327 3.307s1.393 3.212 3.213 3.212c1.664 0 3.276-1.04 3.276-3.327-.002-1.874-1.267-3.192-3.162-3.192zm-.063 5.126c-.832 0-1.276-.797-1.276-1.871 0-.915.361-1.861 1.276-1.861.871 0 1.234.936 1.234 1.851 0 1.137-.482 1.882-1.234 1.882zM22.493 9.761h.232v.589h.14v-.589h.231v-.117h-.603v.117zM23.799 9.644l-.182.505-.181-.505h-.203v.707h.13V9.78l.198.571h.113l.195-.571v.571h.13v-.707h-.201z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://fidoalliance.org/overview/legal/logo-usage/\",hex:\"FFBF3B\"},FileZilla:{title:\"FileZilla\",slug:\"filezilla\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>FileZilla icon</title><path d=\"M24.002,1.86V0.801c-0.212,0-0.419-0.087-0.568-0.236c-0.148-0.148-0.234-0.356-0.234-0.567h-1.061 c-0.021,0.444-0.4,0.786-0.844,0.765c-0.413-0.021-0.743-0.352-0.764-0.765h-1.061c-0.027,0.444-0.408,0.782-0.853,0.755 c-0.405-0.025-0.729-0.35-0.755-0.755h-1.059c-0.023,0.444-0.4,0.786-0.845,0.765c-0.413-0.021-0.743-0.352-0.765-0.765h-1.06 c-0.022,0.444-0.399,0.786-0.844,0.765c-0.413-0.021-0.743-0.352-0.765-0.765h-1.059c-0.027,0.444-0.408,0.782-0.853,0.755 c-0.405-0.025-0.729-0.35-0.755-0.755h-1.06C8.786,0.442,8.414,0.789,7.971,0.772C7.549,0.758,7.21,0.419,7.195-0.002H6.135 c-0.021,0.444-0.4,0.786-0.844,0.765C4.878,0.741,4.547,0.411,4.527-0.002H3.467C3.451,0.442,3.078,0.789,2.635,0.772 c-0.422-0.014-0.76-0.353-0.775-0.774H0.8c0,0.211-0.086,0.419-0.235,0.567C0.416,0.714,0.209,0.801-0.003,0.801V1.86 c0.444,0.017,0.79,0.389,0.774,0.832C0.758,3.114,0.419,3.453-0.003,3.467v1.061c0.444,0.016,0.79,0.388,0.774,0.832 C0.758,5.782,0.419,6.12-0.003,6.135v1.059c0.444,0,0.804,0.361,0.804,0.805S0.441,8.803-0.003,8.803v1.059 c0.444,0,0.804,0.359,0.804,0.804s-0.359,0.804-0.804,0.804v1.06c0.444,0.016,0.79,0.389,0.774,0.832 c-0.014,0.422-0.353,0.76-0.774,0.775v1.061c0.444,0,0.804,0.359,0.804,0.803c0,0.445-0.359,0.805-0.804,0.805v1.061 c0.444,0.016,0.79,0.387,0.774,0.83c-0.014,0.422-0.353,0.762-0.774,0.775v1.061c0.444,0,0.804,0.359,0.804,0.805 c0,0.443-0.359,0.803-0.804,0.803v1.061c0.442,0.002,0.802,0.359,0.803,0.803h1.06c0.027-0.443,0.41-0.781,0.854-0.754 c0.406,0.025,0.729,0.348,0.754,0.754h1.061c0.021-0.443,0.4-0.785,0.844-0.764c0.413,0.021,0.743,0.352,0.764,0.764h1.059 c0.023-0.443,0.4-0.785,0.845-0.764c0.413,0.021,0.743,0.352,0.764,0.764h1.06c0.017-0.443,0.389-0.791,0.832-0.775 c0.422,0.016,0.761,0.354,0.775,0.775h1.061c0.021-0.443,0.4-0.785,0.844-0.764c0.413,0.021,0.743,0.352,0.764,0.764h1.059 c0.023-0.443,0.4-0.785,0.845-0.764c0.413,0.021,0.743,0.352,0.765,0.764h1.059c0.023-0.443,0.4-0.785,0.845-0.764 c0.413,0.021,0.743,0.352,0.765,0.764h1.06c0.016-0.443,0.388-0.791,0.831-0.775c0.422,0.016,0.761,0.354,0.775,0.775H23.2 c0-0.211,0.086-0.418,0.235-0.568c0.148-0.148,0.355-0.234,0.567-0.234v-1.061c-0.444-0.027-0.781-0.408-0.755-0.852 c0.025-0.406,0.35-0.73,0.755-0.754v-1.061c-0.444-0.023-0.786-0.4-0.764-0.844c0.021-0.414,0.351-0.744,0.764-0.764v-1.061 c-0.444-0.027-0.781-0.41-0.755-0.854c0.025-0.406,0.35-0.729,0.755-0.754v-1.061c-0.444-0.021-0.786-0.4-0.764-0.844 c0.021-0.412,0.351-0.742,0.764-0.764v-1.058c-0.444-0.027-0.781-0.41-0.755-0.854c0.025-0.406,0.35-0.729,0.755-0.754V8.803 c-0.444-0.021-0.786-0.4-0.764-0.844c0.021-0.413,0.351-0.743,0.764-0.764V6.135c-0.444-0.027-0.781-0.408-0.755-0.853 c0.025-0.405,0.35-0.729,0.755-0.754v-1.06c-0.444-0.022-0.786-0.4-0.765-0.844C23.258,2.211,23.588,1.881,24.002,1.86L24.002,1.86z M19.934,11.698l-6.404,6.226c0.58,0.09,1.14,0.225,1.742,0.225c1.465,0,3.148-0.445,4.287-0.916l-0.584,2.746 c-1.676,0.805-2.701,0.871-3.703,0.871c-1.095,0-2.144-0.357-3.215-0.357c-0.603,0-1.474,0.045-2.009,0.4L8.887,18.84l6.607-6.541 H7.891l-1.451,6.808H3.27l3.305-15.58h10.49l-0.67,3.146H9.096L8.471,9.598h11.977L19.934,11.698L19.934,11.698z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://upload.wikimedia.org/wikipedia/commons/0/01/FileZilla_logo.svg\",hex:\"BF0000\"},Firebase:{title:\"Firebase\",slug:\"firebase\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Firebase icon</title><path d=\"M3.89 15.673L6.255.461A.542.542 0 0 1 7.27.289L9.813 5.06 3.89 15.673zm16.795 3.691L18.433 5.365a.543.543 0 0 0-.918-.295l-14.2 14.294 7.857 4.428a1.62 1.62 0 0 0 1.587 0l7.926-4.428zM14.3 7.148l-1.82-3.482a.542.542 0 0 0-.96 0L3.53 17.984 14.3 7.148z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://firebase.google.com/brand-guidelines/\",hex:\"FFCA28\"},Fitbit:{title:\"Fitbit\",slug:\"fitbit\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Fitbit icon</title><path d=\"M13.298 1.825c0 .976-.81 1.785-1.786 1.785-.972 0-1.784-.81-1.784-1.785 0-.973.813-1.785 1.784-1.785.976 0 1.786.813 1.786 1.785zm-1.786 3.243c-1.052 0-1.863.81-1.863 1.866 0 1.053.81 1.865 1.865 1.865 1.053 0 1.865-.811 1.865-1.865s-.825-1.866-1.875-1.866h.008zm0 5.029c-1.052 0-1.945.891-1.945 1.945s.894 1.945 1.947 1.945 1.946-.891 1.946-1.945-.894-1.945-1.946-1.945h-.002zm0 5.107c-1.052 0-1.863.81-1.863 1.864s.81 1.866 1.865 1.866c1.053 0 1.865-.811 1.865-1.866 0-.972-.825-1.864-1.875-1.864h.008zm0 5.191c-.972 0-1.784.809-1.784 1.784 0 .97.813 1.781 1.784 1.781.977 0 1.786-.809 1.786-1.784 0-.973-.81-1.781-1.786-1.781zM16.46 4.823c-1.136 0-2.108.977-2.108 2.111 0 1.134.973 2.107 2.108 2.107 1.135 0 2.106-.975 2.106-2.107 0-1.135-.972-2.109-2.106-2.109v-.002zm0 5.03c-1.216 0-2.19.973-2.19 2.19 0 1.216.975 2.187 2.19 2.187 1.215 0 2.189-.971 2.189-2.189 0-1.216-.974-2.188-2.189-2.188zm0 5.108c-1.136 0-2.108.976-2.108 2.107 0 1.135.973 2.109 2.108 2.109 1.135 0 2.106-.976 2.106-2.109s-.971-2.107-2.106-2.107zm5.106-5.353c-1.296 0-2.43 1.055-2.43 2.434 0 1.297 1.051 2.433 2.43 2.433 1.381 0 2.434-1.065 2.434-2.444-.082-1.382-1.135-2.431-2.434-2.431v.008zM6.486 5.312c-.892 0-1.62.73-1.62 1.623 0 .891.729 1.62 1.62 1.62.893 0 1.619-.729 1.619-1.62 0-.893-.727-1.62-1.619-1.62v-.003zm0 5.027c-.973 0-1.703.729-1.703 1.703 0 .975.721 1.703 1.695 1.703s1.695-.73 1.695-1.703c0-.975-.735-1.703-1.71-1.703h.023zm0 5.107c-.892 0-1.62.731-1.62 1.62 0 .895.729 1.623 1.62 1.623.893 0 1.619-.735 1.619-1.635s-.727-1.62-1.619-1.62v.012zm-5.025-4.863c-.813 0-1.461.646-1.461 1.459 0 .81.648 1.459 1.46 1.459.81 0 1.459-.648 1.459-1.459s-.648-1.459-1.458-1.459z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://www.fitbit.com/uk/home\",hex:\"00B0B9\"},Fiverr:{title:\"Fiverr\",slug:\"fiverr\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Fiverr icon</title><path d=\"M13.639,11.928h-0.954c0.06-0.258,0.216-0.492,0.534-0.492C13.465,11.436,13.639,11.664,13.639,11.928z M24.001,12 c0,6.627-5.373,12-12,12s-12-5.373-12-12s5.373-12,12-12S24.001,5.373,24.001,12z M6.217,9.78c0,0.298,0.242,0.54,0.54,0.54 c0.298,0,0.54-0.242,0.54-0.54s-0.242-0.54-0.54-0.54C6.459,9.24,6.217,9.482,6.217,9.78z M7.735,13.2h-0.42v-2.526H4.849v-0.162 c0-0.318,0.318-0.324,0.48-0.324c0.186,0,0.27,0.018,0.27,0.018V9.33c0,0-0.168-0.024-0.396-0.024c-0.516,0-1.47,0.144-1.47,1.236 v0.138h-0.45v0.81h0.45v1.71h-0.42v0.81h2.028V13.2H4.849v-1.71h1.35v1.71h-0.42v0.81h1.956V13.2z M11.149,11.484h0.372v-0.81 h-1.77v0.81h0.3l-0.384,1.2c-0.072,0.198-0.09,0.438-0.09,0.438H9.553c0,0-0.018-0.24-0.09-0.438l-0.384-1.2h0.3v-0.81h-1.77v0.81 h0.372l0.924,2.52h1.32L11.149,11.484z M14.797,12.204c0-0.924-0.558-1.608-1.548-1.608c-1.074,0-1.734,0.762-1.734,1.74 c0,0.888,0.642,1.746,1.83,1.746c0.9,0,1.434-0.468,1.434-0.468l-0.408-0.774c0,0-0.444,0.318-0.936,0.318 c-0.354,0-0.69-0.186-0.774-0.612h2.112C14.767,12.54,14.797,12.312,14.797,12.204L14.797,12.204z M17.773,10.632 c0,0-0.066-0.012-0.132-0.012c-0.51-0.006-0.93,0.366-1.068,0.822v0h-0.012c0,0,0.012-0.066,0.012-0.168V11.1 c0-0.306-0.168-0.426-0.474-0.426h-1.05v0.81h0.312c0.09,0,0.144,0.054,0.144,0.144V13.2h-0.45v0.81h2.022V13.2h-0.45v-0.486 c0-0.606,0.3-1.002,0.918-1.002c0.138,0,0.228,0.018,0.228,0.018V10.632z M20.731,11.73v-1.098c0,0-0.066-0.012-0.132-0.012 c-0.504-0.006-0.924,0.366-1.068,0.822v0h-0.012c0,0,0.012-0.066,0.012-0.168V11.1c0-0.306-0.168-0.426-0.474-0.426h-1.05v0.81 h0.312c0.09,0,0.144,0.054,0.144,0.144V13.2h-0.45v0.81h2.022V13.2h-0.45v-0.486c0-0.606,0.3-1.002,0.918-1.002 C20.641,11.712,20.731,11.73,20.731,11.73z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.fiverr.com/press-kit\",hex:\"1DBF73\"},Flask:{title:\"Flask\",slug:\"flask\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Flask icon</title><path d=\"M7.172 20.655c-.914-.72-1.89-1.41-2.556-2.38-1.402-1.712-2.482-3.694-3.22-5.777C.95 11.143.796 9.69.222 8.388-.38 7.444.325 6.41 1.36 6.109c.46-.088 1.272-.523.293-.212-.878.644-.963-.585-.063-.662.615-.082.84-.585.63-1.037-.659-.43 1.6-.903.463-1.544C1.501 1.376 4.34 1.13 3.64 2.58c-.167 1.115 1.984-.204 1.485 1.083.507.619 1.9.141 1.865 1.009.74.05.993.672 1.687.72.72.325 2.023.58 2.267 1.391-.713.565-2.365-1.166-2.444.397.215 2.31.16 4.689 1.005 6.888.4 1.332 1.369 2.38 2.244 3.418.837 1.016 1.971 1.73 3.127 2.333 1.014.478 2.107.795 3.213.994.448-.343 1.24-1.617 1.938-1.08.033.604-1.388 1.263-.067 1.196.776-.234 1.314.6 1.953-.152.588.697 2.446-.446 2.027.98-.566.364-1.392.144-1.959.646-.935-.467-1.68.418-2.715.306-1.15.206-2.319.29-3.484.291-1.912-.151-3.865-.215-5.684-.88-1.025-.298-2.024-.882-2.925-1.465zm1.615.7c1 .432 1.979.888 3.075 1.026 1.74.241 3.537.614 5.283.274-.79-.357-1.608.14-2.395-.255-.944.203-1.957-.052-2.917-.177-1.092-.486-2.27-.82-3.292-1.452-1.277-.466.66.598 1.006.685.798.453-.878-.233-1.115-.421-.668-.375-.754-.297-.066.084.139.081.276.166.42.235zm-1.904-1.346c.97.359-.004-.682-.449-.622-.197-.341-.752-.557-.36-.74-.705.244-.738-.93-1.07-.763-.745-.235-.29-1.069-1.177-1.58-.081-.54-.882-1.008-1.138-1.822-.113-.416-.905-1.613-.418-.5.414 1.072 1.143 1.99 1.75 2.907.47.873 1.027 1.786 1.885 2.33.29.278.568.703.977.79zM4.09 16.942c.033-.146.177.317 0 0zm3.954 3.497c.215-.096-.309-.12 0 0zm.526.192c-.054-.265-.24.148 0 0zm.66.275c.313-.299-.484-.188 0 0zm1.128.63c.191-.282-.61-.107 0 0zM8.19 20.023c.487-.315-.63-.004 0 0zm.494.246c-.014-.166-.176.075 0 0zm2.47 1.542c.398.25 2.32.55 1.116.103-.201.042-2.231-.574-1.116-.103zm-3.921-3.054c-.039-.167-.616-.185 0 0zm1.15.67c.3-.209-.621-.16 0 0zm.967.593c.43-.162-.697-.163 0 0zm-2.585-1.773c.466.358 1.88.046.714-.213-.53-.283-1.727-.476-.912.17l.198.043zm3.24 1.978c.194-.33-.814-.189 0 0zm-.984-.783c1.14.323-.958-.72-.281-.118l.15.068.13.05zm1.974 1.141c1.079.01-.975-.148 0 0zm-4.645-2.96c-.042-.201-.266.017 0 0zm6.47 3.984c.029-.363-.352.27 0 0zm-4.629-2.856c-.065-.191-.337-.008 0 0zm-1.739-1.254c.62-.037-.848-.273 0 0zm-2.06-1.332c-.077-.297-.674-.534 0 0zM9.8 19.6c-.114-.13-.054.028 0 0zm3.366 2.065c-.01-.197-.183.075 0 0zm-3.664-2.373c.06-.255-.529-.077 0 0zM6.995 17.7c.46-.049-.739-.311 0 0zm4.242 2.637c.718-.285-.7-.14 0 0zM9.03 18.84c.828.106-.985-.563-.181-.06zm2.877 1.768c.773-.462.518 1.082 1.311.13.782-.57-.675.707.289.103.697-.467 1.727.22 2.377.445.468-.023.923.405 1.403.145.923-.25-1.806-.37-1.09-.81-.845.245-1.47-.294-1.885-.835-.948-.219-2.044-.703-2.517-1.542-.192-.315.279.044-.166-.47-.571-.508-.856-1.085-1.24-1.702-.457-.244-.51-.963-.557-.024.004-.593-.553-.992-.689-.826-.002-.571.596-.285.177-.707-.09-.592-.387-1.209-.476-1.877-.138-.322-.02-1.011-.473-.282-.165.77-.055-.947.202-.38.337-.579-.12-.51-.14-.43.22-.488.14-1.18-.057-.916.117-.517.185-1.902-.175-1.656.218-.54.414-2.473-.534-1.736-.384.005-1.048.14-1.363.296.986.543-.099.196-.5.11-.052.502-.45.285-.946.29.793.098-.386.81-.841.534-.59.282.51.987.012 1.205.061.328-.905-.119-.83.64-.573-.241-.078.9.209.514.975.264.686.866.711 1.437-.159.333-.785-.783-.14-.731-.508-.827-.562-.299-.985.085-.099.028 1.079.547.34.803.65.1.668.67.8 1.03.391.407.311-.45.779.04-.296-.436-1.567-1.228-.544-.974-.005-.439-.185-.793.129-.784.31-.562-.325 1.387.375.672.193-.085.241-.563.59.045.505.498.182.858-.531.403.127.433.954.587.799 1.265.165.595.395.376.596.342.158.578.247.153.255-.123.721.155.552.581.778.88.497.224-.712-1.522.142-.526.898.811.337 1.15-.47 1.02.51-.041.675.69 1.313.664.582.277.976 1.34-.027.897-.348-.313-1.579-.7-.573-.104.929.43 1.666.688 2.562 1.227.64.458.918.982 1.16 1.086-.538.257-1.623-.206-.817-.348-.503-.091-1.068-.345-.587.28.41.343 1.45.306 1.637.345-.159.348-.43.376.006.403-.486.26.156.3.201.448zm-.994-2.808c-.296-.31-.373-.89-.053-.385.164.066.525.947.053.385zm3.238 2.057c.185-.011.006.14 0 0zm-3.706-2.816c-.011-.468.107.361 0 0zm-.322-.433c-.372-.719.47.204 0 0zm-3.9-2.692c.218-.059.107.374 0 0zm3.104 1.682c.134-.504.158.424 0 0zm-2.193-1.525c-.155-.278.323.261 0 0zm1.882.604c-.352-.79.25-.432.078.13zM5.77 12.512c-.158-.26-.418-1.02-.334-1.252.076.378.804 1.627.357.518-.494-.93.59.302.702.534.051.23-.305-.063-.064.478-.44-.617-.26.34-.661-.278zm-1.003-.691c.041-.603.23.413 0 0zm.451.155c.215-.455.365.634 0 0zm-1.085-.84c-.374-.37-.644-.713.017-.23.255.01-.566-.778.061-.25.66.12.326 1.082-.078.48zm.57-.015c.217-.215.115.212 0 0zm.35.113c-.328-.617.4.258 0 0zm-.697-.667c-1.086-.966 1.365.506.177.18l-.177-.18zm3.111 1.808c-.47-.282-.124-1.984.036-.82.457-.148-.025.601.315.594-.053.473-.206.643-.35.226zm1.15.68c.047-.513.098.35 0 0zm-.2-.198c.053-.219.006.258 0 0zM4.57 10.25c-.697-.963 2.027.973.447.244-.165-.043-.364-.059-.447-.244zm2.216 1.175c-.066-.81.147.134 0 0zm1.682 1.079c.13-.462.01.305 0 0zM4.676 9.882c.415-.088 1.718.729.521.234-.133-.148-.417-.08-.521-.234zm3.56 1.775c.044-.829.248-.495.002.118l-.002-.118zM4.985 9.594c.169-.248-.449-1.12.089-.313.232.185.672.31.283.387.611.539-.149.146-.372-.074zm3.075 1.804c.117-.944.103.553 0 0zM4.632 8.722c.129-.055.068.172 0 0zm.802.478c.206-.434.38.483 0 0zm2.263 1.259c-.002-.167.043.242 0 0zm-.131-.29c-.314-.776.292.41 0 0zm-.193-.509c-.053-.32.18.403 0 0zm.314-.51c-.216-.38.272-1.674.326-.871-.227.625-.065.975.093.136.293-.66-.063 1.303-.42.735zm.322-1.924c.094-.115.021.139 0 0zm-.538 10.613c-.128-.111.016.071 0 0zm1.11.561c.616.159.613-.096.055-.171-.3-.28-1.246-.575-.399-.035.056.142.234.139.343.206zm-2.192-1.455c.34.253 1.28.719.484.096.269-.312-.514-.478-.254-.686-.66-.404-.52-.368-.058-.356-.794-.354.114-.328.071-.51-.306-.06-1.52-.539-.805.04-.726-.37-.173.138-.392.084-.743-.202.66.565-.118.375.425.337 1.146.864.18.357-.128.183.691.46.892.6zm1.16.667c1.411.454-.691-.556 0 0zm5.94 3.598c.02-.28-.192.24 0 0zm.612.257c.325-.315.013.503.539-.077.006-.415-.016-.66-.605-.156-.162.09-.234.473.066.233zM4.408 15.38c-.1-.393-.7-.39 0 0zm.652.428c-.242-.402-.864-.364 0 0zm3.71 2.237c.362.321 1.663.236.44.04-.182-.269-1.151-.204-.44-.04zm5.098 3.149c.558-.468-.54.208 0 0zm1.16.796c.003-.15-.24.066 0 0zm.001-.21c.617-.654-.598.039 0 0zM2.805 14.038c-.526-.75-.327-1.088-.835-1.7-.096-.47-.87-1.533-.4-.406.43.659.558 1.679 1.235 2.106zm12.03 7.534c1.136-.734-.465-.32 0 0zm.867.34c.57-.488-.36-.102 0 0zM4.215 14.55c.163-.242-.42-.031 0 0zm11.306 7.129c.551-.355-.126-.3-.1.032zM8.05 16.97c-.02-.24-.291.02 0 0zm.461.266c-.146-.297-.225.047 0 0zm7.894 4.684c.705-.51-.428-.098-.148.096zm-.27-.13c.574-.482-.607.213 0 0zm1.38.918c.386-.258-.469-.083 0 0zM4.569 14.376c.517.116 2.066 1.274 1.152.08-.468-.138-.187-1.283-.665-1.08.32.535.264.763-.409.426-.846-.413-.475.204-.31.374-.225.052.298.196.232.2zm-2.356-1.86c.092-.383-.853-2.107-.446-.864.146.26.131.754.446.864zm4.324 2.666c-.266-.223-.013-.032 0 0zm.656.152c0-.405-.725-.164 0 0zm5.682 3.583c-.108-.278-.428-.006 0 0zm.273.199c-.04-.155-.157.03 0 0zm2.253 1.419c.216-.16-.27-.02 0 0zM3.39 12.816c.62-.24-.664-.171 0 0zm8.985 5.661c-.007-.401-.395.1 0 0zm-9.23-6.231c.398-.135-.368-.089 0 0zm1.155.56c-.007-.133-.122.05 0 0zm14.09 8.64c.513-.104 1.679.26 1.867-.136-.621-.015-2.15-.438-2.222.101l.136.022.22.013zM4.668 12.898c.009-.407-.317-.015 0 0zM1.63 10.79c-.138-.775-.525-.118 0 0zm.724.182c.009-.249-.663-.224 0 0zm.414.203c-.12-.097-.094.122 0 0zm2.605 1.67c.122-.112-.29-.083 0 0zm-2.88-2.128c-.07-.585-.84-.088 0 0zm-1.486-.964c-.02-.27-.144.102 0 0zm.221-.167c-.036-.32-.19.04 0 0zm1.22.729c.517-.203-.94-.42-.105-.039zm16.334 10.089c.33-.303-.42-.094 0 0zm1.974 1.023c.132-.392-.334.051 0 0zM2.573 9.676c.055-.379-.409.075 0 0zM.837 8.513c-.093-.535-.08-1.474.812-1.156-1.191.236.824 1.48.57.498.5.024.98-.296.716.19.987-.109 1.671-.964 2.624-.845.742-.098 1.554-.172 2.354-.471.658-.048 1.291-.756.93-1.175-.896-.076-1.835.036-2.827.233-1.098.228-2.096.662-3.205.849-1.08.145.217.4-.092.456-.564.196.672.328-.073.534-.46-.088-.94-.246-.743-.73-1.035.133-1.945.563-1.127 1.616h.061zm2.494-1.27c.243-.894 1.3.735.398.118-.108-.08-.285-.146-.398-.119zm.047-.434c.35-.26.186.146 0 0zm.445.008c.032-.411 1.018.218.163.148zm.608-.245c.222-.26.064.231 0 0zm.156-.104c.37-.444 2.095-.283.832-.043-.338-.255-.598.15-.832.043zm2.251-.347c-.056-1.214 1.118.432 0 0zm.639-.004c.233-.612.906-.245.108-.123.017.065-.024.316-.108.123zM2.322 9.362c.697-.427-.741-.37 0 0zm.515.144c.245-.26-.531-.106 0 0zm-1.52-1.08c.399-.305-.471-.116 0 0zm20.603 12.89c.012-.355-.304.16 0 0zm-2.093-1.429c.06-.409-.27.036 0 0zm2.67 1.567c.557 0 1.688-.173.475-.173-.19.03-1.109.024-.476.173zM3.29 9.254c.451-.03.706-.497-.087-.47-1.23-.127 1.084.42-.158.264-.167.11.236.237.245.207zm.398.202c-.048-.29-.14.154 0 0zm.47-1.257c.197-.243-.27-.065 0 0zm-1.5-2.508c.806-.274 1.907-.581 2.287.135-.387-.466-.156-.924.21-.243.516.689.775-.313.438-.545.383.476.819.701.257.03.61-.734-1.223.097-1.64.088-.2.09-2.071.477-1.551.535zm.472-.903c.46-.347 1.588.206.864-.345-.07-.062-1.586.418-.864.345zm1.674.069c.538.013-.231-.722.409-.389-.105-.344-.746-.408-1.059-.545-.177.314.36.938.65.934zm-1.38-1.52c.186-.252-.326.128 0 0zm.684.164c.866-.115-.22-.373-.174-.01zm-1.277-1c-.61-.796 1.146.134.527-.7-.522-.415-1.023.468-.527.7zm7.825 4.215c.28-.496-1.155-.668-.188-.175.089.03.069.21.188.175z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://flask.pocoo.org/community/logos/\",hex:\"000000\"},Flattr:{title:\"Flattr\",slug:\"flattr\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Flattr icon</title><path d=\"M1.906 12C1.906 6.432 6.432 1.906 12 1.906c.048 0 4.003 0 5.455.002L14.53 4.834l1.344 1.344L21.903 0H12C5.373 0 0 5.373 0 12v9.331l1.91-1.759v-.096c-.002-.244-.004-7.404-.004-7.476zM24 2.668l-1.91 1.76v.096L22.093 12c0 5.568-4.528 10.094-10.093 10.094-.048 0-4.003 0-5.455-.002l2.925-2.926-1.344-1.344L2.097 24H12c6.627 0 12-5.373 12-12V2.668z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://flattr.com/\",hex:\"000000\"},Flickr:{title:\"Flickr\",slug:\"flickr\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Flickr icon</title><path d=\"M0 12c0 3.074 2.494 5.564 5.565 5.564 3.075 0 5.569-2.49 5.569-5.564S8.641 6.436 5.565 6.436C2.495 6.436 0 8.926 0 12zm12.866 0c0 3.074 2.493 5.564 5.567 5.564C21.496 17.564 24 15.074 24 12s-2.492-5.564-5.564-5.564c-3.075 0-5.57 2.49-5.57 5.564z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://worldvectorlogo.com/logo/flickr-1\",hex:\"0063DC\"},Flipboard:{title:\"Flipboard\",slug:\"flipboard\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Flipboard icon</title><path d=\"M0 0v24h24V0H0zm19.2 9.6h-4.8v4.8H9.6v4.8H4.8V4.8h14.4v4.8z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://about.flipboard.com/brand-guidelines\",hex:\"E12828\"},Floatplane:{title:\"Floatplane\",slug:\"floatplane\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Floatplane icon</title><path d=\"M17.948,20.162c-1.81,1.527-4.078,2.366-6.466,2.366c-2.682,0-5.19-1.047-7.088-2.933c-1.897-1.897-2.933-4.416-2.933-7.088 c0-2.399,0.84-4.667,2.366-6.466L2.911,4.874C1.101,6.902,0,9.585,0,12.518C0,18.864,5.136,24,11.482,24 c2.933,0,5.616-1.101,7.644-2.911L17.948,20.162z M8.331,2.988c1.003-0.327,2.061-0.502,3.151-0.502c2.682,0,5.19,1.047,7.088,2.933 c1.897,1.897,2.933,4.416,2.933,7.088c0,1.09-0.174,2.148-0.502,3.151l1.134,1.134c0.534-1.319,0.829-2.77,0.829-4.285 c0-6.346-5.136-11.482-11.482-11.482c-1.516,0-2.966,0.294-4.285,0.829L8.331,2.988z M9.683,6.444L3.446,0l-0.97,1.516 C2.388,1.657,2.399,1.843,2.508,1.974L7.916,8.92L9.683,6.444z M7.655,14.96l-2.508-1.886l-0.458,0.774 c-0.055,0.087-0.044,0.196,0.033,0.273l2.115,2.29L7.655,14.96z M12.158,9.007l-0.578-0.6l0.153-0.611 c0.065-0.273,0.087-0.491,0.065-0.622c-0.087-0.393-0.273-0.687-0.273-0.687l-5.474,5.866c0,0,0.371,0.36,0.905-0.055 c0.24-0.185,1.189-0.96,2.203-1.799l0.927,1.189L12.158,9.007z M17.501,14.263l0.153-0.611c0.055-0.207,0.087-0.382,0.065-0.502 c-0.065-0.393-0.218-0.687-0.218-0.687l-5.866,5.474c0,0,0.36,0.371,0.916,0c0.273-0.185,1.428-0.992,2.584-1.821l6.891,5.365 c0.131,0.109,0.316,0.12,0.458,0.033L24,20.543L17.501,14.263z M9.061,16.389c0.883-0.676,2.115-1.625,3.217-2.475l1.243,0.97 l2.039-2.475l-0.676-0.654l0.218-0.774c0.109-0.393,0.153-0.698,0.12-0.883c-0.109-0.567-0.36-0.981-0.36-0.981l-8.069,8.069 c0,0,0.251,0.207,0.774,0l2.279,2.104c0.076,0.065,0.185,0.076,0.273,0.033l0.774-0.458L9.061,16.389z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.floatplane.com/\",hex:\"00AEEF\"},Flutter:{title:\"Flutter\",slug:\"flutter\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Flutter icon</title><path d=\"M14.314 0L2.3 12 6 15.7 21.684.012h-7.357L14.314 0zm.014 11.072l-6.471 6.457 6.47 6.47H21.7l-6.46-6.468 6.46-6.46h-7.371z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://flutter.dev/brand\",hex:\"02569B\"},Fnac:{title:\"Fnac\",slug:\"fnac\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Fnac icon</title><path d=\"M1.282 15.742h1.427v-4.177h2.508v4.173h1.428v-2.926c.072-.495.384-1.191 1.502-1.282 0 0 1.628-.292 1.83 1.282v2.93h1.427v-3.535c-.329-2.507-3.589-1.74-3.589-1.74-.768.221-1.061.551-1.189.732v-.713H2.689c-.109-1.373 1.19-1.353 1.19-1.353 1.283-.038 1.338.859 1.338.859h1.428c0-1.611-2.051-1.813-2.051-1.813-2.014-.165-2.709.568-2.709.568-.641.587-.623 1.521-.604 1.74H0v1.063h1.281v4.191l.001.001zm14.625-1.412c-.365.477-.786.623-1.299.641-.44.018-1.392.111-1.411-.676-.018-.752 1.154-.715 1.924-.771 0 0 .785 0 .933-.236 0 0 .019-.018.019 0 .017.017.146.62-.166 1.042zm-.018-3.826c-1.574-.292-2.49 0-2.506 0-1.539.385-1.558 1.723-1.558 1.723h1.465s.019-1.045 1.573-.916c0 0 1.136.054 1.19.604 0 0 .366.658-1.19.75-1.573.092-3.441.074-3.239 1.666 0 0-.038 1.52 2.526 1.484 0 0 1.373.035 1.939-.715v.018l.057.586h1.427l-.036-3.148c.109-1.776-1.648-2.052-1.648-2.052zm6.646 3.535c-.221.492-.661.768-1.448.768 0 0-1.775.129-1.829-1.631v-.053c.054-1.739 1.829-1.63 1.829-1.63.809 0 1.228.275 1.448.771h1.445c-.015-.217-.07-.429-.165-.624-.348-.604-1.171-1.299-3.093-1.172-.532.037-.934.092-1.282.239-.641.257-1.685.97-1.666 2.362v.164c-.019 1.391 1.026 2.105 1.666 2.361.347.146.771.201 1.282.238 1.28.072 2.069-.201 2.562-.568.696-.549.716-1.227.716-1.227h-1.465v.002z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://www.fnac.com/\",hex:\"E1A925\"},Formstack:{title:\"Formstack\",slug:\"formstack\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Formstack icon</title><path d=\"M19,4.035h1.4c0.331,0,0.6,0.269,0.6,0.6v14.73c0,0.331-0.269,0.6-0.6,0.6H19V4.035z M22,6.026h1.4 c0.331,0,0.6,0.269,0.6,0.6v10.747c0,0.331-0.269,0.6-0.6,0.6H22V6.026z M0.6,2.044h16.8c0.331,0,0.6,0.269,0.6,0.6v18.712 c0,0.331-0.269,0.6-0.6,0.6H0.6c-0.331,0-0.6-0.269-0.6-0.6V2.644C0,2.313,0.269,2.044,0.6,2.044z M4.2,5.23 c-0.11,0-0.2,0.09-0.2,0.2v7.35c0,0.045,0.015,0.089,0.044,0.125c0.069,0.086,0.195,0.101,0.281,0.032l9.228-7.35 c0.048-0.038,0.075-0.096,0.075-0.156c0-0.11-0.09-0.2-0.2-0.2L4.2,5.23z M4,17.185c0,0.04,0.012,0.08,0.035,0.113 c0.062,0.091,0.187,0.114,0.278,0.052l7.576-5.184c0.054-0.037,0.087-0.099,0.087-0.165c0-0.11-0.09-0.2-0.2-0.2H6.89 c-0.045,0-0.088,0.015-0.123,0.042l-2.69,2.102C4.028,13.983,4,14.041,4,14.103L4,17.185z M4.086,18.342 C4.032,18.379,4,18.441,4,18.506v0.087c0,0.106,0.086,0.192,0.192,0.192H7c0.11,0,0.2-0.09,0.2-0.2v-2.022 c0-0.041-0.012-0.081-0.036-0.114c-0.063-0.091-0.188-0.113-0.278-0.05L4.086,18.342z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.formstack.com/brand/guidelines\",hex:\"21B573\"},Fossa:{title:\"Fossa\",slug:\"fossa\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Fossa icon</title><path d=\"M3.744,12.816c0,0-0.033-0.092,0.059-0.164c0.118-0.085,0.269-0.17,0.354-0.072 l0.007,0.007l0,0l0.007,0.007l0,0l0,0c0.066,0.072,0.144,0.098,0.223,0.098c0.17,0,0.347-0.118,0.426-0.17 c0.19-0.131,0.321-0.242,0.347-0.583v-0.013c0-0.007,0-0.105,0.085-0.124c0.033-0.007,0.066,0.013,0.092,0.033 c0.066,0.059,0.144,0.203,0.131,0.413c-0.026,0.308-0.177,0.583-0.446,0.819c-0.02,0.02-0.039,0.033-0.059,0.052 c-0.164,0.131-0.321,0.249-0.465,0.347c-0.203,0.111-0.387-0.059-0.478-0.17c-0.039-0.052-0.072-0.098-0.124-0.177l-0.013-0.026 C3.836,12.999,3.784,12.907,3.744,12.816L3.744,12.816L3.744,12.816L3.744,12.816z M3.089,14.801 c0.02,0.013,0.039,0.026,0.059,0.039c0.026,0.02,0.052,0.033,0.085,0.046c0.072,0.033,0.144,0.02,0.269-0.013 c0.033-0.007,0.066-0.013,0.098-0.02c-0.157-0.144-0.275-0.314-0.36-0.505C3.233,14.5,3.194,14.657,3.089,14.801L3.089,14.801 L3.089,14.801z M4.95,3.197C4.95,3.191,4.943,3.191,4.95,3.197C4.871,3.099,4.806,3.001,4.753,2.903 c0.02,0.177,0.052,0.354,0.085,0.511c0.013,0.059,0.02,0.111,0.033,0.164c0.059-0.066,0.118-0.124,0.17-0.183 C5.009,3.263,4.95,3.197,4.95,3.197L4.95,3.197L4.95,3.197z M2.113,13.327c0.007-0.013,0.007-0.033,0.007-0.059v-0.02 c-0.007-0.072,0-0.144,0.007-0.229c0.007-0.105,0.026-0.203,0.052-0.308l0,0c0-0.007,0-0.013,0.007-0.02 c0.007-0.02,0.013-0.066,0.007-0.079l0,0c-0.079-0.059-0.17-0.111-0.236-0.144c0.013,0.151,0.007,0.314,0,0.406v0.026v0.013v0.007 c-0.007,0.098-0.013,0.21,0.138,0.373C2.093,13.307,2.106,13.314,2.113,13.327L2.113,13.327L2.113,13.327z M16.691,6.532 c0.079,0,0.157-0.007,0.236-0.02c0.124-0.039,0.21-0.059,0.223-0.066c0.688-0.203,1.258-0.642,1.52-1.173 c0.183-0.478,0.164-0.845,0.144-1.107c-0.007-0.059-0.007-0.118-0.007-0.177c-0.007-0.459,0.563-1.258,0.681-1.422 c0.413-0.681,0.55-1.265,0.413-1.684c-0.124-0.373-0.432-0.498-0.439-0.505l0,0h-0.007c-0.118-0.052-0.236-0.098-0.36-0.131 C18.899,0.197,18.69,0.17,18.473,0.17c-0.858,0-1.795,0.439-2.496,1.179c0,0.007-0.007,0.013-0.013,0.02 c-0.256,0.334-0.662,1.016-0.485,1.821c0.124,0.55,0.426,0.983,0.924,1.33c0.066,0.046,0.098,0.118,0.085,0.197 s-0.059,0.138-0.131,0.164c-0.007,0-0.629,0.236-0.76,0.636c-0.052,0.157-0.02,0.328,0.105,0.518 C15.722,6.041,16.082,6.532,16.691,6.532L16.691,6.532L16.691,6.532L16.691,6.532z M3.03,11.283c0.092,0,0.216-0.052,0.419-0.177 c0.282-0.17,0.563-0.282,0.845-0.328h0.013c0.092-0.02,0.157-0.098,0.157-0.197v-0.007v-0.013 c-0.007-0.072-0.052-0.138-0.124-0.164c-0.007,0-0.013-0.007-0.02-0.007c-0.072-0.026-0.151-0.039-0.236-0.039H4.079 c-0.111,0-0.177,0.02-0.249,0.046c-0.059,0.02-0.111,0.033-0.177,0.033H3.613c-0.059-0.007-0.118-0.026-0.157-0.046 c-0.046-0.02-0.085-0.033-0.131-0.033c-0.02,0-0.033,0-0.052,0.007c-0.124,0.026-0.256,0.138-0.301,0.183 c0,0-0.007,0.007-0.013,0.007H2.952c-0.079,0.066-0.164,0.138-0.249,0.203l-0.039,0.039c0,0-0.007,0.007-0.007,0.013l-0.013,0.02 c-0.013,0.026-0.02,0.059-0.02,0.085c0,0.052,0.02,0.105,0.059,0.144c0.007,0.007,0.013,0.013,0.02,0.02l0,0 c0.007,0.007,0.013,0.013,0.02,0.02C2.867,11.224,2.932,11.283,3.03,11.283L3.03,11.283L3.03,11.283L3.03,11.283z M12.675,23.174 c0.007,0,0.013-0.007,0.02-0.007c0.983-0.393,1.946-0.891,2.863-1.487l0.039-0.026c0.052-0.039,0.092-0.098,0.092-0.164l0,0v-0.007 v-0.013c0-0.013,0-0.02-0.007-0.033c0-0.007-0.007-0.013-0.007-0.02l-0.007-0.013c-0.21-0.583-0.505-1.854-0.131-3.774 c0.098-0.491,0.151-0.963,0.157-1.402v-0.007v-0.02v-0.007v-0.013C15.682,16.079,15.597,16,15.499,16 c-0.066,0-0.124,0.033-0.157,0.079l-0.007,0.013v0.007l-0.013,0.013c-0.105,0.197-0.236,0.4-0.387,0.616 c-1.566,2.247-2.745,4.134-2.523,6.283c0.013,0.105,0.098,0.177,0.197,0.177C12.629,23.188,12.655,23.181,12.675,23.174 L12.675,23.174L12.675,23.174z M9.753,23.987l0.033-0.007c0.367-0.052,1.114-0.19,2.07-0.505l0,0l0.013-0.007h0.007 c0.007,0,0.013-0.007,0.02-0.007l0,0c0.072-0.033,0.118-0.105,0.118-0.183l0,0v-0.013l-0.007-0.026 c-0.321-2.359,0.924-4.364,2.575-6.735c1.055-1.514,0.773-2.247,0.465-2.667c-0.301-0.36-0.688-0.537-1.16-0.537 c-0.216,0-0.452,0.039-0.701,0.118c-0.216,0.072-0.439,0.138-0.668,0.197c-0.229,0.052-0.472,0.098-0.721,0.138 c-0.164,0.026-0.328,0.046-0.485,0.066c-0.812,0.105-1.586,0.203-2.49,0.675l-0.013,0.013H8.796 c-0.072,0.033-0.138,0.072-0.21,0.105l0,0H8.58c-0.007,0.007-0.02,0.007-0.026,0.013H8.547c-0.02,0.013-0.033,0.026-0.046,0.046 c0,0-0.007,0.007-0.007,0.013v0.007l-0.013,0.013c-0.013,0.026-0.02,0.059-0.02,0.085c0,0.059,0.026,0.118,0.072,0.157H8.58v0.033 c0.609,0.38,1.048,1.317,1.114,2.385c0.085,1.369-0.039,2.634-0.151,3.741v0.013c-0.118,1.153-0.21,2.057-0.033,2.706v0.007v0.007 c0,0.013,0.007,0.033,0.013,0.046C9.556,23.954,9.628,24,9.707,24C9.74,23.987,9.746,23.987,9.753,23.987L9.753,23.987 L9.753,23.987z M4.223,4.226c0.007-0.007,0.007-0.007,0.013-0.013l0,0V4.206C4.328,4.095,4.413,3.99,4.498,3.898 c0.007-0.007,0.007-0.007,0.013-0.013c0.026-0.033,0.046-0.079,0.046-0.124V3.754V3.741v-0.02C4.544,3.643,4.531,3.558,4.511,3.486 c-0.085-0.426-0.183-0.95,0-1.382c0-0.229,0.039-0.465,0.066-0.675V1.415c0.02-0.124,0.039-0.249,0.052-0.373 c0.039-0.393-0.033-0.721-0.197-0.898C4.341,0.046,4.229,0,4.092,0h-0.02C4.007,0,3.915,0,3.817,0.092 C3.751,0.17,3.699,0.321,3.659,0.511C3.607,0.786,3.607,1.094,3.62,1.271c0.066,0.662,0.052,0.747,0,0.891 C3.594,2.228,3.561,2.319,3.548,2.693C3.535,2.975,3.653,3.368,3.771,3.741v0.007C3.81,3.872,3.849,4.003,3.882,4.134l0,0 c0,0.007,0.007,0.02,0.007,0.026v0.007c0.033,0.079,0.105,0.131,0.19,0.131C4.131,4.292,4.183,4.265,4.223,4.226L4.223,4.226 L4.223,4.226z M4.465,6.565c0-0.007,0.007-0.02,0.007-0.026l0,0V6.532C4.505,6.296,4.531,5.982,4.55,5.51 c0.007-0.138,0.026-0.288,0.052-0.439l0,0l0.02-0.085c0-0.013,0.007-0.026,0.007-0.039V4.94V4.927 C4.616,4.822,4.531,4.744,4.432,4.744c-0.059,0-0.118,0.026-0.151,0.072c0,0-0.007,0.007-0.007,0.013v0.007 C4.203,4.927,4.157,4.986,4.144,4.999L4.138,5.006C4.072,5.078,4.013,5.17,3.961,5.274c-0.124,0.242-0.183,0.485-0.19,0.505v0.007 C3.744,5.89,3.718,6.002,3.692,6.12c0,0.072,0.02,0.138,0.059,0.203C3.823,6.454,3.961,6.572,4.17,6.69l0.007,0.007 c0.007,0.007,0.013,0.007,0.02,0.013c0.026,0.013,0.052,0.02,0.085,0.02C4.36,6.716,4.446,6.657,4.465,6.565L4.465,6.565 L4.465,6.565z M5.428,2.922L5.428,2.922l0.013-0.013C5.625,2.752,5.828,2.614,6.057,2.49h0.007 c0.066-0.033,0.098-0.105,0.098-0.177V2.306V2.293c-0.007-0.039-0.02-0.079-0.046-0.111C5.9,1.926,5.73,1.579,5.586,1.271 L5.572,1.245C5.527,1.153,5.481,1.061,5.441,0.976l0,0l0,0l-0.02-0.039C5.389,0.871,5.317,0.826,5.245,0.826 c-0.066,0-0.124,0.033-0.157,0.079c0,0-0.007,0.007-0.007,0.013v0.007L5.068,0.937c-0.013,0.026-0.02,0.046-0.02,0.072L5.042,1.075 C5.029,1.212,5.009,1.343,4.989,1.468C4.957,1.697,4.924,1.913,4.924,2.123C4.93,2.405,4.996,2.634,5.14,2.85v0.007 c0,0.007,0.007,0.007,0.013,0.013c0.039,0.052,0.098,0.079,0.164,0.079C5.35,2.968,5.396,2.948,5.428,2.922L5.428,2.922 L5.428,2.922z M5.487,10.49L5.487,10.49c0.249-0.675,0.727-1.343,1.114-1.887C6.758,8.38,6.916,8.17,7.02,7.993 c0.839-1.363,1.297-2.64,1.304-2.654c0-0.007,0.007-0.013,0.007-0.02c0.387-0.865,0.865-1.468,1.461-1.848 c0.524-0.334,1.133-0.511,1.972-0.57h0.013c0.301-0.02,0.544-0.098,0.721-0.242V2.654h0.007l0.013-0.013h0.007 c0.013-0.013,0.033-0.026,0.039-0.039c0.026-0.033,0.046-0.079,0.046-0.124V2.47V2.457c-0.007-0.092-0.085-0.17-0.177-0.177 l-0.059-0.007c-0.242-0.026-0.505-0.039-0.786-0.039c-0.577,0-1.225,0.059-1.867,0.17C9.517,2.437,9.301,2.457,9.052,2.457 c-0.197,0-0.387-0.013-0.577-0.02c-0.183-0.007-0.373-0.02-0.557-0.02c-0.079,0-0.144,0-0.21,0.007 C7.512,2.431,7.315,2.464,7.112,2.516l0,0L7.06,2.529H7.053C6.306,2.745,5.658,3.407,5.265,4.331c0,0,0,0.007-0.007,0.007 c-0.17,0.4-0.269,0.819-0.288,1.179c-0.046,0.917-0.098,1.317-0.242,1.69V7.22L4.714,7.233C4.649,7.397,4.57,7.554,4.472,7.758 l-0.02,0.046C4.314,8.072,4.131,8.387,3.948,8.695L3.895,8.78C3.869,8.819,3.849,8.858,3.823,8.898 C3.666,9.166,3.509,9.441,3.41,9.651v0.013L3.397,9.677c0,0.007-0.007,0.013-0.007,0.013l0,0C3.384,9.71,3.378,9.736,3.378,9.756 c0,0.085,0.052,0.157,0.124,0.183c0.007,0,0.013,0.007,0.02,0.007l0.013,0.007c0.026,0.013,0.052,0.02,0.079,0.033 c0.013,0.007,0.033,0.013,0.039,0.013c0.013,0,0.033-0.007,0.046-0.013h0.007c0.079-0.026,0.197-0.059,0.38-0.059h0.007 c0.216,0,0.413,0.059,0.583,0.164c0.131,0.085,0.308,0.249,0.478,0.446c0.039,0.046,0.092,0.072,0.157,0.072 C5.382,10.621,5.455,10.568,5.487,10.49L5.487,10.49L5.487,10.49z M6.057,12.593L6.057,12.593c0.013,0,0.02-0.007,0.026-0.007H6.09 c0.432-0.105,0.786-0.229,1.009-0.753c0.242-0.563,0.406-1.245,0.563-1.907l0.052-0.21c0.262-1.081,0.524-2.025,1.088-2.673 l0.007-0.007c0.02-0.026,0.046-0.052,0.066-0.072l0,0c0.007-0.007,0.007-0.007,0.013-0.013c0.007-0.007,0.007-0.007,0.013-0.013 C9.156,6.696,9.53,6.565,9.956,6.565c0.21,0,0.426,0.033,0.649,0.092l0,0h0.007c0.039,0.013,0.079,0.02,0.118,0.033 c0.203,0.059,0.439,0.131,0.688,0.131l0,0c0.223,0,0.426-0.052,0.629-0.17l0,0h0.007c0.013-0.007,1.533-0.839,2.346-3.355V3.289 c0.007-0.013,0.007-0.033,0.013-0.046l0,0l0.013-0.033V3.204l0.007-0.013c0.007-0.02,0.013-0.033,0.02-0.052l0.013-0.033 c0.007-0.02,0.007-0.033,0.007-0.052V3.047V3.034c-0.013-0.105-0.098-0.177-0.197-0.177c-0.039,0-0.072,0.013-0.105,0.033 l-0.013,0.007c-0.544,0.36-1.094,0.393-1.704,0.4c-0.229,0-0.432,0.007-0.622,0.02h-0.013c-1.304,0.092-2.333,0.491-3.086,2.169 C8.698,5.569,8.233,6.847,7.394,8.21c-0.111,0.183-0.269,0.4-0.426,0.622L6.935,8.845c-0.59,0.819-1.389,1.946-1.173,2.804v0.013 c0.059,0.21,0.079,0.413,0.066,0.603l0,0v0.007v0.007c0,0.033-0.007,0.059-0.013,0.092l0,0v0.007v0.02 c0,0.111,0.092,0.203,0.203,0.203C6.031,12.593,6.044,12.593,6.057,12.593L6.057,12.593L6.057,12.593z M15.066,7.338L15.066,7.338 l0.013-0.007h0.007h0.007c0.183-0.118,0.387-0.229,0.616-0.341l0,0c0.007,0,0.013-0.007,0.026-0.013 c0.066-0.033,0.098-0.105,0.098-0.177V6.794V6.781c-0.007-0.052-0.033-0.105-0.079-0.138l0,0c-0.229-0.164-0.36-0.341-0.387-0.38 c-0.197-0.301-0.249-0.596-0.157-0.878c0.072-0.216,0.229-0.419,0.472-0.596h0.007c0.007,0,0.007-0.007,0.013-0.007l0,0 c0.046-0.039,0.072-0.092,0.072-0.151V4.626V4.613c-0.007-0.052-0.026-0.092-0.066-0.131l-0.052-0.046l0.007-0.007 c-0.229-0.249-0.393-0.518-0.498-0.812l0,0l-0.02-0.079c-0.026-0.085-0.105-0.144-0.19-0.144c-0.066,0-0.124,0.033-0.157,0.079 c-0.007,0.007-0.013,0.02-0.02,0.033c-0.007,0.007-0.007,0.02-0.013,0.026c0,0.007,0,0.007-0.007,0.013v0.007v0.007 c-0.17,0.668-0.105,1.409-0.046,2.195v0.007c0.039,0.459,0.079,0.937,0.066,1.402v0.007v0.013v0.007 c0,0.111,0.092,0.197,0.203,0.197C15.001,7.364,15.04,7.351,15.066,7.338L15.066,7.338L15.066,7.338z M5.075,16.164 c0.727,0,1.101-0.308,1.664-0.767l0.026-0.02c0.079-0.066,0.157-0.131,0.242-0.197h0.007c0.033-0.026,0.059-0.046,0.092-0.072 l0.007-0.007h0.007c0.341-0.269,0.832-0.622,1.546-0.976c0.439-0.229,0.871-0.393,1.363-0.511c0.426-0.105,0.826-0.157,1.258-0.21 l0.026-0.007c0.151-0.02,0.308-0.039,0.465-0.066c0.465-0.066,0.911-0.17,1.317-0.314c1.638-0.57,2.68-1.723,2.929-3.25 C16.219,8.557,16.534,8,17.012,7.437c0.039-0.046,0.085-0.098,0.144-0.164c0.033-0.039,0.052-0.085,0.052-0.138V7.129V7.115 c-0.013-0.105-0.098-0.183-0.197-0.183c-0.026,0-0.046,0.007-0.072,0.013l-0.092,0.033V6.971c-0.649,0.216-1.972,0.74-2.28,1.474 c-0.007,0.026-0.02,0.046-0.026,0.072c-0.138,0.347-0.328,0.655-0.583,0.93c-0.812,0.878-1.612,1.088-2.391,1.291 c-0.747,0.197-1.448,0.38-2.143,1.179l-0.007,0.007c-0.007,0.007-0.426,0.446-1.147,1.704c-0.406,0.714-1.094,1.271-1.946,1.566 c-0.4,0.144-0.826,0.216-1.232,0.216c-0.36,0-0.708-0.059-0.989-0.177l0,0H4.098H4.085L4.072,15.22 c-0.079-0.033-0.157-0.052-0.236-0.052c-0.085,0-0.164,0.02-0.236,0.033c-0.072,0.02-0.157,0.039-0.242,0.039H3.332H3.325h-0.02 H3.292c-0.059,0.007-0.111,0.033-0.144,0.079c0,0-0.007,0.007-0.007,0.013v0.007l-0.013,0.013c-0.013,0.026-0.02,0.059-0.02,0.085 c0,0.059,0.026,0.118,0.072,0.157L3.188,15.6c0.046,0.039,0.098,0.072,0.151,0.105C3.797,16,4.38,16.144,5.055,16.151h0.02V16.164 L5.075,16.164z M13.559,2.516c-0.111-0.052-0.236-0.105-0.373-0.144c-0.02-0.007-0.039-0.013-0.066-0.02 c-0.013,0.046-0.059,0.144-0.059,0.144c-0.013,0.033-0.026,0.072-0.026,0.111c0,0.151,0.118,0.269,0.269,0.269 c0.02,0,0.033,0,0.052-0.007c0.013,0,0.02-0.007,0.033-0.007c0.151-0.039,0.295-0.098,0.439-0.177 C13.749,2.627,13.664,2.568,13.559,2.516L13.559,2.516L13.559,2.516z M16.285,21.183L16.285,21.183 c0.007-0.007,0.013-0.013,0.02-0.013l0.013-0.007c0.334-0.242,0.668-0.505,0.983-0.773c1.324-1.12,2.464-2.418,3.394-3.859v-0.007 c0.007-0.007,0.013-0.02,0.02-0.026c0.013-0.026,0.026-0.059,0.026-0.092V16.4v-0.013c-0.007-0.066-0.046-0.124-0.105-0.157h-0.007 l0,0c-0.197-0.098-0.387-0.229-0.557-0.4c-0.701-0.688-1.14-1.894-1.297-3.577l-0.013-0.111c-0.052-0.59-0.164-1.815-0.747-2.732 l0,0c-0.256-0.373-0.505-0.767-0.727-1.173l-0.007-0.013c-0.039-0.059-0.098-0.092-0.17-0.092c-0.066,0-0.124,0.033-0.157,0.079 l0,0c0,0.007-0.007,0.007-0.007,0.013l-0.013,0.02c-0.236,0.413-0.393,0.904-0.511,1.592c-0.19,1.166-0.806,2.149-1.769,2.844 c-0.007,0-0.007,0.007-0.013,0.007l-0.007,0.007c-0.013,0.013-0.026,0.02-0.039,0.039c0,0-0.007,0.007-0.007,0.013v0.007 l-0.013,0.013c-0.013,0.026-0.02,0.059-0.02,0.085c0,0.079,0.046,0.151,0.124,0.183l0.039,0.02 c0.256,0.118,0.485,0.288,0.675,0.518c0.708,0.839,0.911,2.352,0.557,4.147c-0.256,1.297-0.177,2.274-0.066,2.863 c0.033,0.17,0.072,0.334,0.118,0.485c0,0.007,0,0.007,0.007,0.013c0.026,0.085,0.105,0.138,0.19,0.138 C16.219,21.209,16.252,21.202,16.285,21.183L16.285,21.183L16.285,21.183z M21.127,15.817l0.007-0.013l0.007-0.013 c0.609-1.068,0.95-1.946,1.101-2.378c0-0.007,0.007-0.013,0.007-0.013c0.007-0.02,0.007-0.039,0.007-0.059v-0.007V13.32 c-0.007-0.066-0.046-0.124-0.105-0.157c-0.963-0.459-1.88-1.14-2.726-2.011c0,0-0.02-0.02-0.026-0.026 c-0.033-0.033-0.085-0.046-0.131-0.046c-0.066,0-0.124,0.033-0.157,0.079c0,0-0.007,0.007-0.007,0.013v0.007l-0.013,0.013 c-0.013,0.026-0.02,0.059-0.02,0.085v0.02v0.007l0.007,0.02c0.046,0.308,0.072,0.583,0.092,0.78l0.013,0.111 c0.098,1.081,0.38,2.529,1.153,3.302c0.157,0.157,0.328,0.282,0.498,0.36l0.059,0.026c0.026,0.013,0.052,0.013,0.079,0.013 C21.029,15.902,21.088,15.869,21.127,15.817L21.127,15.817L21.127,15.817z M2.965,14.264L2.965,14.264v-0.007v-0.007v-0.013l0,0 c-0.013-0.105-0.085-0.197-0.19-0.229c-0.007,0-0.013,0-0.02-0.007c-0.072-0.02-0.151-0.046-0.236-0.085H2.513 c-0.098-0.046-0.203-0.105-0.308-0.17c-0.046-0.026-0.098-0.066-0.157-0.111l-0.007-0.007c-0.033-0.02-0.072-0.039-0.111-0.039 c-0.059,0-0.118,0.033-0.151,0.079l0,0c-0.007,0.007-0.007,0.013-0.013,0.02l0,0c-0.013,0.026-0.02,0.059-0.02,0.092 c0,0.02,0,0.033,0.007,0.046c0,0.007,0,0.007,0.007,0.013c0.007,0.02,0.013,0.046,0.02,0.066c0.098,0.275,0.256,0.511,0.446,0.668 l0,0c0.151,0.124,0.308,0.19,0.439,0.183c0.013,0,0.026-0.007,0.039-0.007c0.059-0.013,0.111-0.039,0.151-0.092 C2.952,14.539,2.971,14.395,2.965,14.264L2.965,14.264L2.965,14.264z M5.088,11.387v-0.013c-0.007-0.079-0.059-0.144-0.138-0.17 H4.943c-0.098-0.026-0.21-0.039-0.334-0.039c-0.039,0-0.085,0-0.124,0.007c-0.262,0.02-0.537,0.118-0.819,0.288 c-0.262,0.164-0.472,0.236-0.649,0.236c-0.236,0-0.393-0.138-0.577-0.314c-0.079-0.079-0.164-0.118-0.262-0.118 c-0.066,0-0.131,0.02-0.203,0.052c-0.013,0.007-0.052,0.039-0.085,0.066c-0.013,0.013-0.02,0.026-0.033,0.039l0,0l-0.007,0.007 c0,0-0.007,0.007-0.007,0.013v0.007l-0.013,0.013c-0.013,0.026-0.02,0.059-0.02,0.085c0,0.105,0.079,0.19,0.177,0.197h0.013 c0.098,0.007,0.197,0.052,0.295,0.124c0.393,0.295,0.314,0.544,0.249,0.793c-0.013,0.039-0.02,0.079-0.033,0.124l-0.007,0.02 c-0.02,0.085-0.033,0.164-0.039,0.242C2.46,13.117,2.46,13.183,2.46,13.242c0.013,0.236,0.118,0.308,0.21,0.36 c0.013,0.007,0.026,0.013,0.039,0.02s0.033,0.013,0.052,0.013c0.052,0,0.098-0.033,0.118-0.079c0-0.007,0.007-0.013,0.007-0.02 c0-0.007,0.007-0.013,0.013-0.02V13.51c0-0.007,0.007-0.007,0.007-0.013l0.013-0.013c0.007-0.007,0.013-0.013,0.02-0.013 c0.007-0.007,0.013-0.007,0.02-0.013c0.007,0,0.007-0.007,0.013-0.007c0.007,0,0.007-0.007,0.013-0.007h0.007 c0.007,0,0.007-0.007,0.013-0.007l0,0h0.007h0.007H3.03h0.02h0.02h0.02h0.02c0.007,0,0.013,0,0.02,0.007h0.007l0.013,0.007 c0.007,0,0.013,0.007,0.026,0.013c0.007,0,0.007,0.007,0.013,0.007c0.007,0.007,0.013,0.007,0.02,0.013l0.013,0.013l0.013,0.013 c0.007,0.007,0.013,0.013,0.013,0.02l0,0c0,0.007,0.007,0.007,0.007,0.013v0.007c0,0.007,0.007,0.007,0.007,0.013l0.007,0.007 c0,0.007,0.007,0.007,0.007,0.013c0.02,0.059,0.052,0.098,0.105,0.131c0.059,0.033,0.131,0.052,0.223,0.052 c0.052,0,0.111-0.007,0.17-0.02c0.066-0.02,0.098-0.052,0.098-0.072c0.007-0.026-0.013-0.072-0.046-0.111l-0.007-0.007 c-0.013-0.013-0.02-0.026-0.033-0.046c-0.039-0.059-0.079-0.105-0.131-0.183l-0.02-0.033c-0.072-0.105-0.131-0.21-0.177-0.321 l-0.02-0.046c-0.131-0.328-0.124-0.642,0.02-0.865c0.111-0.17,0.288-0.262,0.505-0.269h0.007c0.262,0,0.36,0.223,0.406,0.373l0,0 c0.02,0.072,0.085,0.118,0.164,0.118c0.033,0,0.059-0.007,0.079-0.02c0.007-0.007,0.013-0.007,0.02-0.013s0.013-0.007,0.02-0.013 c0.144-0.098,0.183-0.124,0.197-0.321c0-0.111,0.046-0.262,0.164-0.36c0.007-0.007,0.013-0.007,0.02-0.013 c0.046-0.039,0.072-0.092,0.072-0.151C5.088,11.394,5.088,11.394,5.088,11.387L5.088,11.387L5.088,11.387z M14.293,5.772 c-0.007-0.118-0.02-0.236-0.026-0.354V5.405c-0.013-0.105-0.098-0.183-0.197-0.183c-0.066,0-0.124,0.033-0.157,0.079 c0,0-0.007,0.007-0.007,0.013V5.32l-0.013,0.013c-0.649,1.002-1.33,1.474-1.559,1.618c-0.059,0.269-0.288,1.029-1.133,1.586 c-0.02,0.013-0.039,0.026-0.059,0.039c-0.013,0.007-0.026,0.013-0.039,0.026c-0.871,0.531-1.789,0.426-1.789,0.426l0,0 c-0.865-0.124-1.107,0.432-1.199,0.78l-0.052,0.21c-0.164,0.681-0.328,1.382-0.59,1.979c-0.328,0.76-0.904,0.898-1.409,1.016 c-0.295,0.072-0.57,0.138-0.793,0.314c-0.02,0.02-0.039,0.039-0.066,0.052c-0.164,0.131-0.321,0.249-0.472,0.347l-0.046,0.033 c-0.295,0.19-0.57,0.314-0.812,0.367l-0.033,0.007c-0.007,0-0.013,0-0.02,0.007H3.81c-0.092,0.02-0.151,0.105-0.151,0.197 c0,0.039,0.013,0.079,0.033,0.111l0,0c0.007,0.007,0.013,0.013,0.02,0.026c0,0,0,0.007,0.007,0.007 c0.124,0.157,0.295,0.282,0.511,0.373l0.013,0.007c0.242,0.098,0.531,0.151,0.839,0.151c0.924,0,2.201-0.491,2.824-1.579 c0.727-1.265,1.16-1.736,1.206-1.782c0.773-0.891,1.572-1.101,2.346-1.304c0.753-0.197,1.461-0.38,2.195-1.173 c0.223-0.236,0.387-0.498,0.498-0.799c0.007-0.026,0.02-0.052,0.026-0.072C14.437,7.535,14.365,6.637,14.293,5.772L14.293,5.772 L14.293,5.772z M3.469,8.799c0-0.007,0-0.02-0.007-0.026V8.767C3.417,8.675,3.364,8.55,3.325,8.393V8.38 c-0.02-0.052-0.072-0.098-0.131-0.098c-0.046,0-0.085,0.02-0.111,0.052l0,0c0,0.007-0.007,0.013-0.007,0.013l0,0 c0,0,0,0.007-0.007,0.007C3.063,8.36,3.063,8.373,3.063,8.38C2.998,8.577,2.932,8.753,2.86,8.911 C2.814,9.009,2.768,9.094,2.722,9.179l0,0l0,0c0,0,0,0.007-0.007,0.007l0,0c0,0,0,0,0,0.007l0,0c0,0.007-0.007,0.013-0.007,0.026 c0,0.013,0,0.02,0.007,0.033c0,0,0,0.007,0.007,0.007c0.013,0.013,0.02,0.026,0.033,0.046l0,0C2.801,9.382,2.88,9.461,2.971,9.461 c0.098,0,0.197-0.085,0.242-0.17c0-0.007,0.007-0.007,0.007-0.013C3.292,9.14,3.378,8.989,3.463,8.845 c0-0.007,0.007-0.013,0.007-0.013l0,0c0.007-0.013,0.007-0.02,0.007-0.033C3.469,8.806,3.469,8.806,3.469,8.799L3.469,8.799 L3.469,8.799L3.469,8.799z M2.624,9.651c0-0.007-0.007-0.007-0.007-0.013c0,0,0-0.007-0.007-0.007 c-0.02-0.026-0.052-0.046-0.085-0.046c-0.033,0-0.066,0.013-0.085,0.039l0,0c0,0,0,0.007-0.007,0.007c0,0,0,0,0,0.007l0,0 c0,0,0,0.007-0.007,0.007l0,0c-0.164,0.328-0.197,0.603-0.21,0.819v0.013l0,0c0,0.059,0.046,0.105,0.105,0.105 c0.02,0,0.039-0.007,0.059-0.02l0.007-0.007c0.026-0.02,0.052-0.039,0.072-0.059l0.007-0.007c0.033-0.026,0.105-0.085,0.183-0.17 c0,0,0,0,0.007-0.007l0,0l0.007-0.007l0,0C2.834,10.149,2.762,9.907,2.624,9.651L2.624,9.651L2.624,9.651z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://fossa.com/press/\",hex:\"90A1B8\"},\"Fossil SCM\":{title:\"Fossil SCM\",slug:\"fossilscm\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Fossil SCM icon</title><path d=\"M12.571 0c-.699.022-2.041.555-3.458 1.419C7.464 2.42 6.258 3.538 6.16 4.108c-.008.009-.019.014-.026.023-.563.746.203 2.277 1.711 3.414 1.408 1.063 2.958 1.397 3.617.832.518-.09 1.227-1.776 1.627-3.94.383-2.054.35-3.812-.045-4.214-.006-.02.001-.048-.01-.066-.069-.113-.23-.163-.463-.156zm-2.277 2.936c-.164.193-.329.383-.492.605-.217.296-.403.587-.568.866a5.705 5.705 0 00-.908-.432 14.052 14.052 0 001.785-.914c.067-.04.118-.084.183-.125zm.912 1.084c-.004.024-.01.043-.015.066a16.33 16.33 0 00-.227 1.78 6.106 6.106 0 00-.654-.674c.215-.241.436-.507.652-.801.093-.127.16-.246.244-.371zm-3.14 4.002c-.41-.075-.968 1.14-1.246 2.706-.276 1.566-.164 2.897.246 2.969.41.072.972-1.141 1.248-2.707.276-1.566.164-2.896-.248-2.968zm-5.56 2.708c-.072.032-.026.314.103.625.132.312.297.539.37.51.074-.031.025-.311-.104-.623-.13-.312-.295-.54-.37-.512zm-.602.506c-.035-.005-.061 0-.076.018-.062.067.083.298.322.512.24.215.483.332.545.265.06-.07-.084-.298-.324-.513-.18-.16-.361-.267-.467-.282zm-.224.684c-.118 0-.197.02-.205.058-.017.077.247.205.587.282.343.078.636.078.653.002.017-.08-.248-.204-.588-.284a2.163 2.163 0 00-.447-.058zm1.296.144c-.251.067-.235.954.036 1.98.27 1.03.695 1.81.945 1.745.25-.067.234-.954-.037-1.98-.271-1.03-.694-1.812-.944-1.745zm10.394.186c-.072-.031-.237.198-.369.51-.13.311-.178.59-.103.62.072.032.24-.197.369-.51.13-.31.178-.591.103-.62zm.61.504c-.105.015-.285.12-.463.281-.238.213-.382.445-.323.512.058.064.304-.057.541-.27.238-.213.38-.443.32-.508-.014-.016-.04-.02-.075-.015zm-7.625.593c-.34.035-.86.369-1.326.883-.621.686-.914 1.437-.652 1.672.261.237.978-.125 1.601-.81.621-.689.912-1.437.65-1.674-.065-.059-.16-.082-.273-.07zm7.85.092c-.119 0-.276.018-.446.057-.343.077-.607.202-.59.281.017.077.31.077.652 0 .34-.077.607-.202.588-.28-.008-.037-.087-.057-.205-.058zm-6.13.168a.15.15 0 00-.099.028c-.21.163.143.978.793 1.82.647.841 1.346 1.393 1.557 1.23.21-.16-.148-.977-.795-1.818-.567-.737-1.172-1.251-1.455-1.26zm4.557.043c-.267-.03-.843.36-1.387.96-.62.685-.966 1.386-.767 1.563.196.18.861-.232 1.482-.917.621-.686.964-1.385.768-1.565a.17.17 0 00-.096-.04zm-5.603.133c-.386.082-.48 1.2-.205 2.492.273 1.292.815 2.275 1.2 2.193.387-.081.481-1.2.208-2.49-.276-1.292-.815-2.279-1.203-2.195zm15.448 2.459c-.13-.055-.48.471-.78 1.174-.297.705-.432 1.323-.3 1.378.13.056.48-.47.777-1.173.297-.705.433-1.324.303-1.38zm-9.503.412c-.07.031-.024.31.105.621.132.312.298.542.367.514.072-.031.027-.31-.105-.621-.13-.312-.295-.543-.367-.514zm-.6.506c-.035-.005-.062 0-.078.017-.06.07.087.297.324.51.238.213.481.33.541.264.06-.067-.083-.297-.32-.51-.178-.158-.36-.266-.467-.281zm-.224.681c-.118 0-.195.019-.203.057-.017.079.245.204.585.283.343.077.636.077.653 0 .016-.077-.246-.204-.586-.281a2.133 2.133 0 00-.45-.059zm1.37.21c-.26 0-.476.75-.476 1.675s.215 1.676.477 1.676c.26 0 .478-.75.478-1.676 0-.926-.217-1.676-.478-1.676zm-5.175.333a.235.235 0 00-.133.045c-.294.216.04 1.17.744 2.13.703.962 1.514 1.564 1.807 1.35.295-.215-.035-1.171-.74-2.13-.617-.842-1.315-1.41-1.678-1.395zm13.02.522c-.105-.094-.601.297-1.105.873-.503.575-.824 1.119-.718 1.213.108.093.603-.298 1.107-.873.504-.576.825-1.12.717-1.213zm-11.014.443c-.113-.005-.194.019-.23.074-.144.223.46.875 1.353 1.453.89.58 1.73.872 1.875.649.146-.223-.46-.877-1.35-1.457-.667-.434-1.308-.704-1.648-.719zM8.73 20.451c-.266 0-.48.75-.48 1.675 0 .926.214 1.676.48 1.676s.482-.75.482-1.676c0-.925-.216-1.675-.482-1.675zm-3.644.06c-.072.031-.026.313.103.625.132.312.297.539.37.51.074-.031.025-.312-.104-.623-.13-.312-.295-.54-.37-.512zm14.296.477c-.368-.04-1.127.127-1.96.453-1.107.434-1.929.984-1.833 1.228.096.242 1.074.093 2.181-.342 1.11-.434 1.932-.985 1.836-1.23-.024-.06-.102-.096-.224-.11zm-14.898.029c-.035-.005-.061 0-.076.018-.062.067.082.298.322.511.24.216.483.333.545.266.06-.07-.084-.298-.324-.514-.18-.16-.362-.267-.467-.281zm-.223.685c-.118 0-.196.019-.205.057-.016.08.248.204.588.283.343.077.636.077.653 0 .016-.077-.248-.204-.588-.281a2.116 2.116 0 00-.448-.059zm1.29.047c-.114-.005-.194.019-.231.075-.144.223.461.875 1.353 1.453.89.58 1.731.871 1.875.648.147-.223-.46-.877-1.35-1.457-.666-.433-1.307-.704-1.648-.719zm6.628.09c-.865-.036-1.493.081-1.527.32-.046.317.98.73 2.289.92 1.311.19 2.415.087 2.46-.232.046-.317-.98-.73-2.292-.92a9.203 9.203 0 00-.93-.088z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://fossil-scm.org/\",hex:\"548294\"},Foursquare:{title:\"Foursquare\",slug:\"foursquare\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Foursquare icon</title><path d=\"M17.727 3.465l-.535 2.799c-.064.303-.445.623-.801.623H11.41c-.562 0-.963.391-.963.945v.614c0 .569.405.96.966.96h4.23c.395 0 .785.436.697.855l-.535 2.76c-.051.24-.314.63-.785.63h-3.457c-.63 0-.818.091-1.239.601-.42.524-4.206 5.069-4.206 5.069-.037.045-.074.029-.074-.015V3.42c0-.359.311-.78.776-.78h10.274c.375 0 .73.356.633.821v.004zm.451 10.98c.145-.578 1.746-8.784 2.281-11.385M18.486 0H5.683C3.918 0 3.4 1.328 3.4 2.164v20.34c0 .94.504 1.291.789 1.405.284.117 1.069.214 1.541-.328 0 0 6.044-7.014 6.146-7.117.165-.157.165-.157.315-.157h3.914c1.65 0 1.906-1.17 2.086-1.86.15-.569 1.754-8.774 2.279-11.385C20.875 1.08 20.365 0 18.49 0h-.004z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://foursquare.com/about/logos\",hex:\"F94877\"},Figma:{title:\"Figma\",slug:\"figma\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Figma icon</title><path d=\"M12 12a4 4 0 1 1 8 0 4 4 0 0 1-8 0zM4 20a4 4 0 0 1 4-4h4v4a4 4 0 1 1-8 0zM12 0v8h4a4 4 0 1 0 0-8h-4zM4 4a4 4 0 0 0 4 4h4V0H8a4 4 0 0 0-4 4zM4 12a4 4 0 0 0 4 4h4V8H8a4 4 0 0 0-4 4z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://figma.com/\",hex:\"F24E1E\"},Framer:{title:\"Framer\",slug:\"framer\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Framer icon</title><path d=\"M4 0h16v8h-8zM4 8h8l8 8H4zM4 16h8v8z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://framer.com\",hex:\"0055FF\"},FreeBSD:{title:\"FreeBSD\",slug:\"freebsd\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>FreeBSD icon</title><path d=\"M23.725.588c1.273 1.272-2.254 6.862-2.85 7.458-.597.596-2.111.048-3.383-1.224-1.272-1.272-1.82-2.787-1.224-3.383.596-.596 6.186-4.123 7.457-2.85zM5.885 1.934C3.943.832 1.18-.394.3.485c-.89.89.38 3.717 1.494 5.663.99-1.723 2.4-3.174 4.091-4.214zm15.9 5.674c.179.606.147 1.107-.143 1.397-.678.678-2.508-.044-4.157-1.614a8.323 8.323 0 0 1-.342-.323c-.597-.597-1.06-1.232-1.358-1.817-.578-1.036-.722-1.952-.285-2.388.238-.238.618-.303 1.083-.22.303-.191.66-.405 1.052-.623a11.492 11.492 0 0 0-5.33-1.301C5.927.719.757 5.889.757 12.267c0 6.377 5.17 11.548 11.548 11.548s11.549-5.17 11.549-11.548c0-2.06-.54-3.991-1.485-5.666a22.27 22.27 0 0 1-.584 1.007z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.freebsdfoundation.org/about/project/\",hex:\"AB2B28\"},freeCodeCamp:{title:\"freeCodeCamp\",slug:\"freecodecamp\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>freeCodeCamp icon</title><path d=\"M23.967 12.317c0 2.5-.854 4.718-2.598 6.681-.635.729-1.143 1.076-1.488 1.076-.121 0-.256-.033-.346-.125-.092-.096-.15-.223-.15-.35 0-.188.225-.475.674-.889 1.814-1.736 2.727-3.895 2.727-6.456 0-2.846-.943-5.152-2.816-6.936-.374-.342-.57-.627-.57-.852 0-.12.061-.256.164-.345.105-.09.225-.149.346-.149.418 0 1.049.509 1.842 1.527C23.25 7.402 24 9.694 24 12.345l-.033-.028zM0 11.682c0-2.499.854-4.719 2.598-6.681.635-.729 1.143-1.076 1.49-1.076.119 0 .254.033.344.125.09.095.15.189.15.314 0 .188-.225.477-.674.918-1.781 1.744-2.711 3.895-2.711 6.462 0 2.847.951 5.158 2.821 6.935.38.344.569.633.569.854 0 .127-.061.256-.16.348-.099.094-.225.16-.352.16-.436 0-1.033-.51-1.828-1.518C.734 16.654 0 14.373 0 11.682zm17.699 6.869H6.715c-.35 0-.668-.287-.668-.666 0-.383.285-.668.668-.668h10.984c.348 0 .668.285.668.668-.006.385-.287.666-.668.666zm-6-8.919c.197-.025.344.615.361.749.046.353-.071.693-.231 1.003-.597 1.165-1.978 2.104-1.612 3.575.166.635.494 1.076 1.514 1.619-.345.119-.824-.111-1.094-.301-1.199-.816-1.963-2.156-1.888-3.619.03-.464.12-.92.239-1.368.375-1.281 1.139-2.401 1.588-3.647.225-.599.39-1.324.211-1.953-.09-.309-.255-.599-.465-.849-.061-.076-.404-.465-.539-.42.6-.225 1.139-.016 1.662.299.404.24.72.585.959.975.449.719.629 1.542.719 2.381.031.345-.015 1.184.39 1.35.419.179.749-.525.839-.81.195-.645-.06-1.259-.314-1.858.061.121.285.255.389.346l.36.344c.435.449.704 1.004.884 1.604.164.539.24 1.093.27 1.633.074 1.123-.18 2.278-.629 3.311-.195.463-.449.898-.779 1.273-.319.373-.748.613-1.093.957.808-.809 1.238-2.127 1.123-3.131-.06-.553-.239-1.063-.659-1.572 0 0 .045.358.087.583.075.495-.255 1.02-.644.959-.285-.029-.136-.643-.105-.838.105-.584-.03-1.154-.244-1.693-.209-.509-.6-.914-1.198-.823l-.101-.079z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://freecodecamp.com\",hex:\"006400\"},Fujifilm:{title:\"Fujifilm\",slug:\"fujifilm\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Fujifilm icon</title><path d=\"M.484 10.003c-.483 0-.484.238-.484.533v3.329h.786c.165.003.24-.057.243-.207v-1.556h1.444c.034 0 .055-.018.055-.052v-.39H1.03v-.98c0-.173.086-.255.258-.255H2.56c.037 0 .049-.024.049-.05v-.372zm7.997 0c-.111 0-.197.052-.197.21v2.654c0 .377-.143.632-.573.693-.29.041-.678.03-.847.024v.324c0 .03.014.052.049.06.025.006.208.029.62.029.722 0 1.054-.156 1.245-.292.365-.263.495-.575.495-1.192v-2.51zm-5.13 0c-.148 0-.194.07-.194.199v2.658c0 .538.26.866.814 1.033.463.14 1.21.137 1.701.003.37-.1.787-.373.787-1.037v-2.856h-.77c-.172 0-.219.073-.219.196v2.748c0 .294-.063.443-.229.536-.242.135-.645.133-.883-.004-.177-.103-.213-.28-.213-.533v-2.943zm9.308 0c-.483 0-.483.239-.483.533v.995c0 .02-.01.029-.018.038l-.677.533h.695v1.763h.786c.164.003.24-.057.242-.207v-1.556h1.444c.034 0 .055-.018.055-.052v-.39h-1.499v-.98c0-.173.087-.255.258-.255h1.274c.036 0 .05-.024.05-.05v-.372zm3.701 0h-.768c-.175 0-.222.082-.222.203v3.66h.783c.138 0 .207-.042.207-.204zm1.922 0h-.76c-.173-.003-.229.066-.229.213v3.108c0 .258.076.541.591.541h1.668c.044 0 .065-.027.065-.066v-.351h-1.03c-.205-.01-.305-.115-.305-.318zm5.718 0h-1.144c-.195 0-.306.092-.35.266l-.63 2.663h-.018l-.65-2.928h-.89c-.172 0-.226.088-.226.224v3.637h.376c.06 0 .086-.03.086-.092v-3.049h.059l.804 3.141h.527c.199 0 .273-.081.322-.278l.722-2.863h.058v3.141h.703c.172 0 .251-.067.251-.237zm-13.608.001c-.173 0-.22.084-.22.205v1.87l.93-.73c.036-.028.056-.05.058-.11v-1.235zm-.22 2.098v1.763h.781c.138 0 .208-.04.208-.203v-1.56z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://upload.wikimedia.org/wikipedia/commons/a/a1/Fujifilm_logo.svg\",hex:\"ED1A3A\"},Fujitsu:{title:\"Fujitsu\",slug:\"fujitsu\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Fujitsu icon</title><path d=\"M16.56 3C14.15 3 12.04 4.24 10.68 5.97L10.68 9.76C12.5 4.71 16.56 5.08 16.56 5.08C19.5 5.08 21.84 7.38 21.84 10.2C21.84 13.04 19.5 15.33 16.56 15.33A5.32 5.32 0 0 1 12.84 13.83L10.28 11.03A6.06 6.06 0 0 0 6.03 9.32C2.7 9.32 0 11.93 0 15.16C0 18.4 2.7 21 6.03 21C7.9 21 9.58 20.19 10.68 18.89L10.68 15.86C8.88 19.29 6.03 18.92 6.03 18.92C3.9 18.92 2.17 17.24 2.17 15.16C2.17 13.1 3.9 11.42 6.03 11.42C7.09 11.42 8.05 11.84 8.75 12.5L11.31 15.31A7.5 7.5 0 0 0 16.56 17.43C20.67 17.43 24 14.19 24 10.2C24 6.21 20.67 3 16.56 3Z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.fujitsu.com/global/about/brandmanagement/logo/\",hex:\"FF0000\"},\"Fur Affinity\":{title:\"Fur Affinity\",slug:\"furaffinity\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Fur Affinity icon</title><path d=\"M16.821 5.133l-.26 1.992 2.435.717.031 2.152 2.231.041-.056 2.255 2.171-.141c.003-.759.05-5.045.626-7.016h-7.178zM11.356 18.24c.056-.213 0-.906 0-1.146l-.049-1.463c-2.021-.085-4.2.322-4.2 2.187 0 .403.169.768.426 1.049h3.312c.248-.142.434-.335.511-.627zM20.389 13.066l.052-2.247-2.202-.04-.035-2.425-2.527-.861.338-2.36h-9.43C2.767 5.133 0 8.385 0 11.95v6.916h4.116a5.381 5.381 0 0 1-.023-.754c.148-3.665 4.199-4.294 7.241-4.204v-1.056c-.05-.852-.74-1.605-2.74-1.605-1.333 0-2.915.171-3.939.541l.272-2.384c.978-.277 2.08-.545 4.453-.545 4.572 0 5.077 2.029 5.04 4.383l-.021 5.624h2.479v-.002l.096.002c3.303 0 6.021-2.692 6.362-5.915l-2.947.115z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.furaffinity.net/\",hex:\"FAAF3A\"},\"Furry Network\":{title:\"Furry Network\",slug:\"furrynetwork\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Furry Network icon</title><path d=\"M15.91 0C12.79 0 9.69 0 6.6.03c0 .05-.06.05-.09.08a10.5 10.5 0 0 0-3.66 2.57c-.84.87-1.52 1.9-2.06 3-.2.38-.38.79-.55 1.2-.02.08-.05.2-.13.25v6.22c.05.08.05.2.08.3a8.66 8.66 0 0 0 3.42 4.83c.03.03.05.09.11.06-.03-.03-.03-.06-.06-.08-.24-.36-.46-.69-.67-1.04a9.1 9.1 0 0 1-1.28-5.57 10.09 10.09 0 0 1 1.71-4.53 23.07 23.07 0 0 1 3.64-4.18A13.05 13.05 0 0 1 10.32.98 8.82 8.82 0 0 1 14.74.2c.7.06 1.39.17 2.07.27L17 .5c.08.03.13.03.21.03-.38-.16-.76-.33-1.14-.44-.05-.02-.1-.02-.16-.08zm-1.66.66c-.43.02-.84.05-1.27.13-.74.14-1.44.36-2.15.58a7.47 7.47 0 0 0-1.44.62c-.02 0-.08 0-.08.06h.05a28.12 28.12 0 0 1 3.05-.33c.51-.03 1.06 0 1.57.08.76.11 1.47.39 2.12.77a10.8 10.8 0 0 1 4.4 4.7 15.14 15.14 0 0 1 1.38 5.43c.06.65.06 1.34.03 2.02l-.08 1.14c-.03.33-.08.66-.14.99a6.1 6.1 0 0 1-.27 1.17 11.7 11.7 0 0 1-1.55 2.73c-.49.66-1.05 1.26-1.6 1.86-.08.08-.13.13-.19.22.06 0 .06-.03.08-.03a16.74 16.74 0 0 0 2.31-1.61 10.87 10.87 0 0 0 3.2-4.45l.17-.41h.03v5.87c0 .02 0-9.17.02-15 0 .02 0 .05-.02.07l-.03-.09a10.75 10.75 0 0 0-1.52-2.73 9.7 9.7 0 0 0-3.12-2.64A9.76 9.76 0 0 0 14.25.66zm9.63 6.54l.01-.02V1.75 7.2zm-13-3.33c-.4-.04-.8.09-1.19.42a2.33 2.33 0 0 0-.62.9c-.33.8-.38 1.58-.22 2.4.11.63.4 1.18.92 1.58.52.44 1.12.5 1.66.2.33-.2.57-.44.76-.77.33-.57.46-1.2.46-1.85 0-.3-.02-.58-.08-.88a2.8 2.8 0 0 0-.62-1.4 1.69 1.69 0 0 0-1.08-.6zM16 5.15a2.38 2.38 0 0 0-1.72.83c-.3.27-.46.63-.65.98a3.04 3.04 0 0 0-.38 1.53c0 .38.05.74.21 1.1.28.65.8 1 1.44 1 .47 0 .85-.16 1.2-.43a3.75 3.75 0 0 0 1.5-2.57c.05-.46 0-.93-.17-1.4-.16-.4-.4-.75-.82-.92a1.61 1.61 0 0 0-.6-.12zM6.38 7.56c-.44.03-.84.2-1.11.6-.36.5-.47 1.07-.5 1.64-.02.6.12 1.15.39 1.67.22.43.51.82.92 1.1.52.34 1.17.34 1.63.02.27-.2.46-.47.6-.77.27-.63.32-1.3.16-1.99a3.3 3.3 0 0 0-1.06-1.86c-.3-.24-.62-.4-1.03-.4zm11.86 2.64a1.84 1.84 0 0 0-.9.2 3.5 3.5 0 0 0-1.81 1.97 2.44 2.44 0 0 0-.11 1.58c.14.5.4.85.9.99.19.05.4.08.6.08.32 0 .54-.03.8-.17.53-.24.93-.6 1.28-1.03a2.9 2.9 0 0 0 .63-2.46 1.3 1.3 0 0 0-1.09-1.12 1.87 1.87 0 0 0-.3-.04zm-7.11 1.65c-.08 0-.22 0-.35.03a3.58 3.58 0 0 0-1.5.4c-.6.34-1.1.77-1.57 1.26a10.07 10.07 0 0 0-1.39 1.83c-.21.38-.35.8-.32 1.23.03.25.03.47.14.68.3.39.7.66 1.19.77.46.08.92.03 1.38-.03.52-.05 1-.1 1.5-.08.78.05 1.5.3 2.12.79.24.2.46.41.73.6.51.36 1.06.52 1.68.38.52-.1.87-.43.98-.95.1-.44.08-.85.02-1.29a9.46 9.46 0 0 0-.37-1.5 9.95 9.95 0 0 0-1-2.26c-.3-.5-.66-.93-1.15-1.26a3.68 3.68 0 0 0-2.09-.6zM.11 14.64v2.13c.1.13.16.3.22.46a12.8 12.8 0 0 0 2.41 4.18 9.6 9.6 0 0 0 3.83 2.56c.03 0 .05.03.08.03h8.01c.03-.03.03-.03.05-.03a8.68 8.68 0 0 0 1.99-.9 11.4 11.4 0 0 0 4.26-4.8c.43-1.01.65-2.08.7-3.2a.4.4 0 0 0 0-.24c-.02.02-.05.05-.05.08l-.22.7a8.29 8.29 0 0 1-1.87 3.2 8.08 8.08 0 0 1-2.85 1.91c-.95.39-1.95.55-2.99.6-.76.03-1.49 0-2.22-.05a24.34 24.34 0 0 1-3.1-.44 15.48 15.48 0 0 1-3.75-1.36 10.15 10.15 0 0 1-3.3-2.76 7.5 7.5 0 0 1-1.2-2.07z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://furrynetwork.com\",hex:\"2E75B4\"},Garmin:{title:\"Garmin\",slug:\"garmin\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Garmin icon</title><path d=\"M22.017 22.67H1.984c-.77 0-1.388-.383-1.694-1.002-.387-.61-.387-1.39 0-2.002L10.304 2.33c.385-.615 1.002-1 1.695-1 .77 0 1.386.385 1.69 1l10.02 17.336c.387.617.387 1.39 0 2.002-.31.695-.927 1.002-1.693 1.002z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://developer.garmin.com/resources/brand-guidelines/\",hex:\"007CC3\"},Gatsby:{title:\"Gatsby\",slug:\"gatsby\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Gatsby icon</title><path d=\"M12.001.007C5.326.007.007 5.326.007 12S5.326 23.995 12 23.995s11.994-5.319 11.994-11.994S18.676.007 12.001.007zM2.614 12.105l9.283 9.283c-5.111 0-9.283-4.172-9.283-9.283zm11.473 9.074L2.823 9.915C3.76 5.743 7.516 2.614 12 2.614a9.476 9.476 0 0 1 7.614 3.86L18.259 7.62a7.657 7.657 0 0 0-6.362-3.337A7.555 7.555 0 0 0 4.7 9.393l9.804 9.805c2.4-.835 4.276-2.92 4.798-5.424h-4.068v-1.773h6.154c0 4.485-3.129 8.24-7.301 9.178z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.gatsbyjs.org/\",hex:\"663399\"},Gauges:{title:\"Gauges\",slug:\"gauges\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Gauges icon</title><path d=\"M12.6 12.635l-1.125-.053c-.945-.033-1.197-.083-1.197-.435 0-.135.1-.318.303-.42.167.036.337.053.507.053 2.415 0 3.63-1.17 3.63-2.98 0-.3-.074-.57-.225-.735h.96v-2.01H12.6c-.472-.115-.892-.2-1.465-.2-2.543 0-3.804 1.474-3.804 3.18 0 1.07.506 1.84 1.26 2.242-.584.234-1.022.87-1.022 1.54 0 .586.322 1.054.81 1.287-.64.336-1.215 1.155-1.215 1.94 0 1.66 1.35 2.476 3.64 2.476 2.873 0 4.695-1.604 4.695-3.41h-.018c0-1.674-1.078-2.41-2.88-2.475zm-1.462-4.78c.895 0 1.342.48 1.342 1.193 0 .71-.5 1.14-1.325 1.14-.893 0-1.342-.445-1.342-1.173 0-.68.483-1.16 1.325-1.16zm2.008 7.554c0 .63-.612 1.113-1.82 1.113-.944 0-1.5-.405-1.5-1.002 0-.353.226-.708.6-.997.09.015.226 0 .33.015l1.35.032c.796.033 1.08.388 1.08.84h-.04zM17.637 10.854v.002c-.99 0-1.824.834-1.824 1.845 0 1.01.834 1.823 1.824 1.823 1.01 0 1.846-.814 1.846-1.824 0-1.01-.837-1.846-1.846-1.846zM12 0C5.373 0 0 5.373 0 12s5.373 12 12 12 12-5.373 12-12S18.627 0 12 0zm0 22.335C6.293 22.335 1.665 17.708 1.665 12 1.665 6.293 6.293 1.665 12 1.665c5.708 0 10.335 4.628 10.335 10.335 0 5.708-4.627 10.335-10.335 10.335z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://get.gaug.es/\",hex:\"2FA66A\"},Genius:{title:\"Genius\",slug:\"genius\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Genius icon</title><path d=\"M12.897 1.235c-.36.001-.722.013-1.08.017-.218-.028-.371.225-.352.416-.035 1.012.023 2.025-.016 3.036-.037.841-.555 1.596-1.224 2.08-.5.345-1.118.435-1.671.663.121.78.434 1.556 1.057 2.07 1.189 1.053 3.224.86 4.17-.426.945-1.071.453-2.573.603-3.854.286-.48.937-.132 1.317-.49-.34-1.249-.81-2.529-1.725-3.472a11.125 11.125 0 00-1.08-.04zm-10.42.006C.53 2.992-.386 5.797.154 8.361c.384 2.052 1.682 3.893 3.45 4.997.134-.23.23-.476.09-.73-.95-2.814-.138-6.119 1.986-8.19.014-.986.043-1.976-.003-2.961l-.188-.214c-1.003-.051-2.008 0-3.01-.022zm17.88.055l-.205.356c.265.938.6 1.862.72 2.834.58 3.546-.402 7.313-2.614 10.14-1.816 2.353-4.441 4.074-7.334 4.773-2.66.66-5.514.45-8.064-.543-.068.079-.207.237-.275.318 2.664 2.629 6.543 3.969 10.259 3.498 3.075-.327 5.995-1.865 8.023-4.195 1.935-2.187 3.083-5.07 3.125-7.992.122-3.384-1.207-6.819-3.636-9.19z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://upload.wikimedia.org/wikipedia/en/a/ad/Genius_website_logo.svg\",hex:\"FFFF64\"},Gentoo:{title:\"Gentoo\",slug:\"gentoo\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Gentoo icon</title><path d=\"M9.956.097a7.252 7.252 0 0 0-1.25.115C4.397 1 1.365 4.73 1.107 7.186c-.125 1.205.525 2.108.883 2.506.969 1.076 2.9 1.898 4.141 2.58-1.795 1.53-2.618 2.277-3.429 3.128-1.214 1.274-2.067 2.676-2.07 3.68 0 .323-.053 1.355.368 2.17.158.306.608 1.327 1.964 2.092.867.49 2.102.67 3.31.497 3.742-.534 8.753-3.707 12.328-6.662 2.279-1.884 3.945-3.709 4.426-4.607.388-.725.431-2.026.206-2.843-.64-2.318-5.84-7.067-10.091-8.978A7.761 7.761 0 0 0 9.956.097zm-.007.067a7.341 7.341 0 0 1 3.317.749c3.433 1.687 9.233 6.43 9.661 8.814.53 2.948-9.852 10.929-16.167 12.174-2.45.481-4.539.613-5.492-1.975-.826-2.243.776-3.884 3.135-6.04.98-.895 1.76-1.564 2.935-2.556.065-.068-5.66-2.042-5.842-4.308C1.307 4.693 4.995.394 9.716.172c.078-.004.155-.007.233-.008zM9.838.68a5.602 5.602 0 0 0-.502.031c-2.319.244-2.763.543-4.864 2.132-.704.533-2 1.829-2.331 3.366-.127.586.023 1.091.444 1.446 1.35 1.135 3.61 2.056 5.465 2.947.543.26.184.733-.692 1.492-2.21 1.913-5.198 4.242-5.407 6.017-.098.836.188 1.972 1.203 2.554 1.186.679 3.647.236 5.291-.376 2.402-.895 5.557-2.869 8.062-4.809 2.604-2.018 5.026-4.58 5.146-4.998.147-.513.132-.988-.152-1.533-.445-.855-1.041-1.491-1.681-2.203-1.718-1.81-3.534-3.401-5.708-4.62-1.423-.798-2.69-1.47-4.274-1.446zm1.066 3.594c.542 0 1.167.171 1.838.496 1.675.81 3.395 2.937-.015 4.161-.927.333-3.869-.818-3.779-2.388.089-1.558.847-2.27 1.956-2.269zm.283 1.356c-.315-.002-.571.078-.689.26-.552.855-.3 1.461.211 1.848.19-.454 2.138.042 2.13.468.02-.01.04-.02.055-.032 1.69-1.272-.468-2.536-1.707-2.544z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://wiki.gentoo.org/wiki/Project:Artwork/Artwork#Variations_of_the_.22g.22_logo\",hex:\"54487A\"},Geocaching:{title:\"Geocaching\",slug:\"geocaching\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Geocaching icon</title><path d=\"M13.24.003v2.322c1.29.16 2.938.622 4.477 1.795l-1.186 1.608-.016-.015s-1.229-1.051-3.27-1.38v6.419h6.33c-.12-.914-.436-2.01-1.154-3.119l1.695-1.125s1.26 1.71 1.53 4.244H24V0H13.24v.003zm4.335 23.203l-.6.097-1.306-8.045.349-.056 6.555-.015-5.655 4.064.631 3.954h.026zm-4.337-9.967V24h10.758V13.241l-10.758-.004v.002zm-6.783 6.753l1.184-1.605h.019s1.163.987 3.103 1.342v-6.491H4.59c.109.933.42 2.076 1.174 3.235L4.08 17.592s-1.296-1.761-1.529-4.355H0v10.76h10.76v-2.231c-1.264-.179-2.835-.647-4.305-1.77v-.004zM4.977 1.968c-.169 0-.309.105-.309.234s.139.232.309.232.308-.104.31-.232c-.001-.129-.141-.234-.31-.234zM5.006 2.61c-.502 0-.906-.405-.906-.9s.404-.896.906-.896c.5 0 .905.404.905.899s-.405.897-.899.897h-.006zm-1.336.06l-1.037.524c-.094-.113-.165-.205-.24-.309l-1.31.489-.276-.434 2.063-.428.445-.094.729-.148-.619.231c.079.06.146.109.244.171l.001-.002zM1.676.765c.378.575.824 1.047 1.4 1.482l-1.005.18C1.695 1.89 1.365 1.368 1.064.728l.609.035.003.002zM0 0v10.759h2.407c-.102-.983-.21-3.805 1.481-6.146 0 0-.375-.359-.88-.951l-1.103.944-.477-.405 2.869-1.635-.338.286c.404.24.81.42 1.215.555 0 0 1.395-.78 2.774-2.655l.33.016c-.255.84-1.05 2.28-2.294 3.435 0 0 3.299 1.44 4.049 3.886-.21-.12-1.395-.375-1.979-.24-.105-.165-1.215-2.431-2.896-2.4 0 0-.375.45-.734 1.62-.314 1.035-.18 3.21-.136 3.72h6.45V0H0z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.geocaching.com/about/logousage.aspx\",hex:\"00874D\"},Gerrit:{title:\"Gerrit\",slug:\"gerrit\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Gerrit icon</title><path d=\"M12.648 2.678l-.245-.266c.004-.004.29-.268.413-.41.121-.146.342-.484.346-.486l.301.195c-.014.016-.234.359-.375.522-.137.165-.428.432-.44.445zm1.577 10.597c-.012-.004-.24-.154-.365-.221-.117-.059-.32-.146-.422-.191l.213-.612-.898-.444-.286.871c-.174.004-.713.053-1.51.389-.959.4-1.688 1.025-1.695 1.029l-.143.125.641.025.02-.016c.006-.006.721-.535 1.119-.705.088-.037.207-.074.33-.105-.209.105-.439.227-.6.32-.199.119-.57.381-.586.393l-.186.129.682.016.018-.01c.012-.008 1.164-.623 1.789-.76l.196-.047c.145-.037.246-.064.422-.064.156 0 .369.021.688.07.398.059.66.158.664.16l.24.094-.322-.436-.012-.008.003-.002zm-8.98-7.298h-.029l-1.006.916v.03c-.016.266.078.52.258.716.182.196.42.309.686.319h.043c.531 0 .965-.413.992-.94.023-.545-.399-1.01-.944-1.041zM5.2 7.808h-.041c-.117-.005-.23-.032-.33-.085.045.008.098.01.148.002.284-.035.481-.291.448-.575-.035-.279-.293-.48-.576-.442-.264.034-.457.267-.446.531-.031-.09-.045-.183-.045-.28l.912-.833c.446.042.79.431.768.882s-.391.8-.842.8H5.2zm9.329-3.725l-.293-.195-.41.265-.395-.285-.301.18.404.291-.416.27.297.18.4-.254.387.28.309-.169-.407-.296M24 19.525c-.213-.209-.418-.416-.629-.627-.48-.488-.957-.984-1.418-1.486-.547-.598-1.082-1.207-1.582-1.844-.225-.283-.441-.58-.646-.881-.254-.387-.469-.795-.668-1.215-.211-.445-.398-.9-.576-1.356.24.21.463.444.664.692.021-.215.041-.43.059-.648l.023-.322c0-.033.012-.066-.008-.096-.016-.029-.033-.051-.053-.075-.121-.149-.264-.282-.406-.413-.189-.181-.387-.36-.584-.533l-.18-.156c-.027-.027-.057-.051-.086-.074-.031-.03-.041-.096-.055-.136l-.154-.479c.607.285 1.109.741 1.578 1.215.004-.219.004-.436 0-.652 0-.114-.002-.229-.008-.346 0-.029.006-.1-.016-.127-.012-.02-.031-.036-.043-.055-.109-.117-.234-.217-.357-.314-.172-.143-.35-.277-.527-.408-.156-.117-.318-.232-.477-.345-.018-.016-.076-.039-.064-.06l.039-.08c.02-.035.014-.045.053-.029l.17.059c.406.156.779.368 1.143.608-.123-.45-.311-.885-.525-1.296-.389-.762-.893-1.468-1.463-2.105-.379-.426-.785-.824-1.219-1.193-.223-.19-.457-.369-.699-.533-.113-.074-.225-.149-.346-.217-.049-.03-.105-.056-.15-.094-.18-.144-.365-.284-.549-.429.238.098.469.21.689.338-.127-.194-.342-.331-.545-.436-.307-.159-.637-.276-.967-.378.113-.12.234-.228.346-.348.113-.12.223-.246.33-.372.127-.15.252-.3.375-.455l-1.156-.726-.48-.303c-.123.246-.277.476-.458.68-.18.203-.391.369-.6.539-.191.156-.379.316-.566.472-.047.04-.092.085-.145.12-.025.021-.096.004-.127.004H10.7c-.297.006-.596.029-.891.068-.058.007-.113.013-.175.008l-.178-.01c-.137-.008-.271-.016-.408-.016-.289-.004-.58 0-.871.025-.244.022-.489.055-.729.112-.238.056-.461.172-.66.312-.193.141-.387.32-.504.53s-.17.456-.213.689c-.135.013-.268.01-.4.016-.141.008-.277.021-.416.039-.27.037-.535.096-.795.18-.496.154-.945.405-1.336.75-.195.181-.377.38-.539.596-.02.025-.037.051-.063.068-.01.009-.027.016-.033.027-.015.027-.033.052-.051.076l-.134.212c-.168.285-.276.595-.383.906l-.045.123.033-.021c-.01.067-.02.135-.025.202l-.008.105v.053l-.066.013c-.135.026-.271.06-.4.101-.12.039-.233.086-.337.15-.105.066-.195.153-.285.239-.318.31-.562.698-.687 1.128-.1.348-.137.735-.059 1.092.021.09.049.188.107.262.074.09.199.126.313.095.131-.036.248-.124.371-.187l.314-.157c.455-.226.93-.446 1.438-.525.035-.005.1.067.131.091.049.037.1.074.148.104.109.069.221.129.334.181.262.114.541.174.818.231.502.105 1.014.171 1.529.18.207.004.416 0 .625-.018.225-.02.451-.049.678-.051.25-.005.496.025.74.055.254.031.51.068.764.105.518.079 1.031.169 1.543.279-.115.18-.227.362-.338.545-.008.013-.072 0-.088 0-.041-.002-.086-.002-.127 0-.074 0-.15.008-.225.019-.211.03-.416.083-.615.156-.49.181-.938.483-1.326.833-.221.195-.43.408-.609.641-.049.064-.094.129-.139.193.105-.023.211-.045.318-.07.061-.016.117-.027.176-.039.021-.008.029-.016.049-.027.219-.203.451-.393.695-.563.111-.08.225-.154.348-.215.166-.083.354-.131.533-.174-.33.18-.678.35-.977.584-.172.139-.328.291-.49.439l.654-.104c.01 0 .014-.004.023-.01l.17-.094c.113-.064.23-.125.346-.186.24-.123.482-.24.732-.34.236-.094.48-.178.732-.225.221-.046.428-.052.648 0 .342.074.67.232.969.414.021.014.035.033.055.014.016-.014.098-.074.09-.092l-.18-.334c-.016-.029-.023-.049-.051-.066l-.131-.077c-.176-.104-.348-.21-.51-.331-.037-.023-.078-.039-.082-.089-.004-.046.014-.093.029-.136.033-.09.08-.169.131-.248.033-.058.072-.111.109-.166.014-.018.01-.021.031-.014l.119.034c.236.077.469.159.711.22.27.068.545.123.82.176l.048.01c-.056-.03-.091-.09-.132-.136-.023-.03-.035-.05-.074-.06l-.105-.02c-.074-.016-.148-.03-.225-.049-.262-.057-.525-.119-.777-.209-.375-.13-.758-.232-1.145-.322-.486-.107-.977-.194-1.465-.275-.25-.041-.498-.074-.75-.109-.246-.034-.496-.07-.746-.087-.539-.034-1.074.087-1.615.081-.365-.004-.734-.055-1.096-.105l-.068-.009c.252-.093.5-.188.75-.285.236-.095.471-.192.705-.289.127-.052.25-.105.373-.157.113-.051.225-.1.328-.17.408-.279.676-.727.975-1.109.273-.361.586-.7.99-.908.129-.066.262-.117.4-.156-.283-.439-.549-.93-.623-1.455.029.012.061.025.094.037.035.012.064.016.072.045l.029.135c.026.091.053.176.086.262.072.191.16.375.26.551.219.396.484.766.766 1.12.539.686 1.145 1.305 1.736 1.941.145.158.275.324.41.492.15.187.303.375.457.561.121.141.234.285.356.426l.094.112c.016.018.037.026.061.036.604.3 1.213.6 1.822.895.434.209.869.42 1.309.623.236.109.471.219.711.32.029.014.066.029.098.039.016.01.029.016.047.023l.016.049c.027.072.051.145.076.217.049.141.098.279.148.416.33.912.695 1.814 1.145 2.676.346.656.715 1.301 1.09 1.939.4.68.811 1.354 1.225 2.025.332.535.666 1.072 1.008 1.605.146.227.289.459.439.688l.063.094.775-1.141.191-.283c.008-.006.082-.102.076-.109l-.156-.24c-.291-.451-.584-.898-.871-1.35l-.828-1.283-.105-.166.656.799 1.115 1.35c.121.146.236.289.354.438.219-.402.439-.801.662-1.201.086-.164.176-.33.266-.492M12.13 1.915c.309-.246.563-.563.757-.906l1.178.743.18.112c-.246.3-.496.604-.775.873-.035.034-.074.069-.107.104-.021.025-.047.051-.07.075l-.033.038c-.023-.007-.045-.016-.068-.02-.146-.041-.289-.08-.436-.111-.292-.066-.589-.117-.886-.152-.191-.021-.385-.04-.578-.058.275-.234.557-.467.838-.698m-1.754 1.37c.232-.096.482-.15.73-.191.49-.082.994-.094 1.489-.04.354.038.701.108 1.041.21l-.141.115-.225-.061c-.141-.029-.281-.06-.422-.082-.246-.037-.497-.06-.749-.065-.461-.008-.926.042-1.371.159-.301.078-.604.188-.879.332-.286.154-.555.346-.78.582-.134.137-.257.289-.359.455-.057.09-.105.18-.15.275-.024.047-.043.096-.061.144l-.029.075c-.004.015-.008.026-.012.038L8.39 5.22l-.082-.011c.234-.719.763-1.286 1.418-1.649.207-.114.426-.218.65-.279m-3.93.374c.266-.381.686-.649 1.139-.743.502-.101 1.016-.119 1.525-.107-.525.131-1.05.326-1.488.652-.34.075-.664.24-.934.459-.09.071-.17.15-.246.236-.035.037-.066.075-.097.116-.014.015-.027.03-.037.049h-.084c.023-.135.055-.27.098-.4.029-.09.064-.18.119-.26m.882.056c-.145.143-.27.303-.391.469-.047.069-.098.153-.18.191-.085.039-.194-.005-.28-.031.224-.279.521-.494.851-.629M2.308 6.585c.08-.16.182-.315.275-.465.016-.027.053-.046.074-.063.049-.034.096-.069.143-.106.309-.225.621-.446.939-.656.166-.107.33-.213.502-.307.182-.101.369-.18.565-.244.347-.112.707-.189 1.068-.244.174-.025.361-.057.531-.015-.33.188-.658.375-.99.558-.342.191-.689.367-1.035.552-.332.18-.66.375-.981.577-.336.206-.67.419-1.002.629-.08.051-.16.105-.24.155.045-.125.09-.251.151-.371m1.009 3.056c-.029.056-.134.042-.187.042-.094 0-.186 0-.279.006-.258.015-.51.06-.758.138-.475.147-.922.375-1.365.604-.1.055-.203.135-.316.162-.061.015-.131-.008-.166-.063-.035-.061-.053-.131-.064-.198-.027-.12-.035-.245-.033-.368 0-.33.076-.66.215-.96.096-.21.221-.401.371-.574.15-.175.326-.351.539-.45.355-.162.775-.213 1.164-.235.072-.005.145-.007.217-.007.1 0 .217-.016.311.019.074.027.121.105.15.173.045.105.074.225.1.336.061.26.123.525.145.791.01.119.016.239.004.359-.009.073-.014.156-.05.223m2.829-1.973c-.194.123-.403.218-.616.298-.215.077-.436.144-.66.181-.097.013-.195.025-.293.021-.101-.003-.193-.036-.293-.067-.195-.063-.393-.13-.57-.233-.064-.039-.135-.084-.174-.15-.029-.052-.029-.116-.023-.174.012-.231.094-.458.203-.66.187-.343.482-.612.84-.775.879-.396 1.865-.029 2.611.49l.08.061c-.154.165-.311.321-.473.477-.199.189-.404.381-.634.531M8.31 5.739c-.475-.203-.926-.458-1.356-.738.449.188.934.3 1.414.37.258.037.521.072.781.08.281.008.564-.021.84-.075.545-.103 1.068-.305 1.566-.551.494-.245.964-.537 1.413-.859.217-.155.43-.315.633-.487.021-.016.174-.161.184-.154l.041.031.537.416c.328.254.658.51.988.762-.906.326-1.826.629-2.752.904-.519.156-1.038.301-1.565.42-.412.098-.834.189-1.256.21-.507.022-1.006-.135-1.47-.33m8.85 3.942c.076.021.145.045.215.067l.094.033c.016.006.031.015.045.02l.021.06c.045.146.09.289.139.432-.15-.127-.301-.254-.451-.379l-.09-.074c-.021-.016-.045-.021-.029-.046l.059-.114m-.671 1.444l.035-.063.027-.046c.012-.018.008-.022.029-.012.129.054.258.111.385.17.24.11.475.23.703.364.107.065.217.135.322.205l.15.105.074.057c.033.027.041.063.057.102.104.282.219.564.338.844.078.189.162.379.248.566-.293-.371-.621-.715-.957-1.045-.346-.346-.705-.671-1.078-.981l-.323-.264m3.746 6.42l-.121.09.008.016.063.094.271.42.904 1.402c.311.48.621.963.932 1.445l.309.48.084.133c.004.004.029.041.029.045-.26.385-.523.77-.783 1.154-.027.037-.051.076-.074.111-.24-.373-.479-.744-.715-1.117-.4-.635-.795-1.277-1.184-1.916-.434-.709-.855-1.418-1.264-2.141-.383-.674-.75-1.361-1.059-2.076-.301-.697-.563-1.408-.811-2.121.486.193.98.367 1.48.521.145.045.289.09.436.127l.063.018c.008 0 .014-.039.018-.049.018-.064.031-.129.045-.195.031-.125.051-.254.074-.381.205.428.436.844.701 1.236.215.314.445.621.686.92.521.656 1.074 1.283 1.643 1.898.463.494.934.984 1.408 1.465l.389.389c.006.006.039.031.037.041l-.031.053-.148.275-.588 1.068c-.18-.219-.361-.436-.541-.658l-1.125-1.361c-.314-.387-.637-.773-.953-1.16l-.186-.225\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://gerrit-review.googlesource.com/c/75842/\",hex:\"EEEEEE\"},Ghost:{title:\"Ghost\",slug:\"ghost\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Ghost icon</title><path d=\"M9.604 19.199H.008V24h9.597v-4.801zm14.39 0h-9.591V24h9.591v-4.801zm.003-9.599H0v4.8h23.997V9.6zM24 0h-4.801v4.801H24V0zm-9.596 0H.008v4.801h14.396V0z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://ghost.org/design\",hex:\"738A94\"},GIMP:{title:\"GIMP\",slug:\"gimp\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>GIMP icon</title><path d=\"M23.58 2.4c-.963 1.206-2.55 6.476-11.46 6.71-4.253.112-6.36-4.731-6.36-4.731l-.334 7.771c-.831-1.042-1.945-1.705-3.014-1.74a2.23 2.23 0 00-1.441.441c-.663.502-.977 1.345-.97 2.28.006.934.33 1.965.97 2.896.64.931 1.476 1.587 2.324 1.89.456.164.916.214 1.35.157C10.674 22.882 26.797 26.557 23.58 2.4zM8.404 8.85c1.265 0 2.314.94 2.614 2.196.484-1.19 1.614-2.027 2.931-2.027 1.758 0 3.178 1.49 3.178 3.322 0 1.833-1.42 3.334-3.178 3.334-1.531 0-2.81-1.14-3.115-2.644-.437.978-1.353 1.666-2.43 1.666-.915 0-1.716-.497-2.203-1.246a5.726 5.726 0 00-.289-.567 3.118 3.118 0 01-.205-1.113c0-1.604 1.198-2.922 2.697-2.922zm0 .36c-1.284 0-2.33 1.138-2.33 2.561s1.046 2.559 2.33 2.559c.214 0 .417-.043.614-.102a1.676 1.759 0 01-1.614-1.756 1.676 1.759 0 011.676-1.758 1.676 1.759 0 011.635 1.373c.012-.105.029-.207.029-.316 0-1.423-1.056-2.56-2.34-2.56zm5.545.131c-1.576 0-2.86 1.334-2.86 3 0 1.667 1.284 3.008 2.86 3.008.591 0 1.14-.188 1.596-.512a2.146 2.252 0 01-.858.19 2.146 2.252 0 01-2.144-2.252 2.146 2.252 0 012.144-2.252 2.146 2.252 0 012.112 1.845l.003-.026c0-1.667-1.277-3-2.853-3zm-11.545 1.39c1.038.035 2.206.77 3.008 1.936.606.882.914 1.866.92 2.727.006.861-.282 1.589-.846 2.016-.564.426-1.31.48-2.082.205-.772-.277-1.564-.883-2.17-1.764-.605-.881-.911-1.867-.917-2.728-.007-.862.282-1.589.845-2.016a1.92 1.92 0 011.242-.375zm11.69.245a1.006 1.056 0 00-1.006 1.059 1.006 1.056 0 001.006 1.054 1.006 1.056 0 001.005-1.054 1.006 1.056 0 00-1.005-1.059zm-5.645.22a.662.695 0 00-.662.694.662.695 0 00.662.697.662.695 0 00.662-.697.662.695 0 00-.662-.693zm-6.414.223a1.118 1.408 0 00-1.119 1.407 1.118 1.408 0 001.12 1.408 1.118 1.408 0 001.116-1.408 1.118 1.408 0 00-1.117-1.407zm14.176 3.998s1.487.435 2.011 1.145c.523.708.194 1.145.057 2.05-.202-.528-.407-.942-.621-1.183-.81 1.259-3.104 1.858-6.18 1.559 1.38-.072 2.451-.288 3.301-.584-1.4.09-3.214-.27-5.365-1.067 4.262.895 6.433.063 7.703-.966-.335-.455-.906-.954-.906-.954z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.gimp.org/about/linking.html#wilber-the-gimp-mascot\",hex:\"5C5543\"},Git:{title:\"Git\",slug:\"git\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Git icon</title><path d=\"M23.546 10.93L13.067.452c-.604-.603-1.582-.603-2.188 0L8.708 2.627l2.76 2.76c.645-.215 1.379-.07 1.889.441.516.515.658 1.258.438 1.9l2.658 2.66c.645-.223 1.387-.078 1.9.435.721.72.721 1.884 0 2.604-.719.719-1.881.719-2.6 0-.539-.541-.674-1.337-.404-1.996L12.86 8.955v6.525c.176.086.342.203.488.348.713.721.713 1.883 0 2.6-.719.721-1.889.721-2.609 0-.719-.719-.719-1.879 0-2.598.182-.18.387-.316.605-.406V8.835c-.217-.091-.424-.222-.6-.401-.545-.545-.676-1.342-.396-2.009L7.636 3.7.45 10.881c-.6.605-.6 1.584 0 2.189l10.48 10.477c.604.604 1.582.604 2.186 0l10.43-10.43c.605-.603.605-1.582 0-2.187\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://git-scm.com/downloads/logos\",hex:\"F05032\"},Gitea:{title:\"Gitea\",slug:\"gitea\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Gitea icon</title><path d=\"M4.186 5.421C2.341 5.417-.13 6.59.006 9.531c.213 4.594 4.92 5.02 6.801 5.057.206.862 2.42 3.834 4.059 3.99h7.18c4.306-.286 7.53-13.022 5.14-13.07-3.953.186-6.296.28-8.305.296v3.975l-.626-.277-.004-3.696c-2.306-.001-4.336-.108-8.189-.298-.482-.003-1.154-.085-1.876-.087zm.261 1.625h.22c.262 2.355.688 3.732 1.55 5.836-2.2-.26-4.072-.899-4.416-3.285-.178-1.235.422-2.524 2.646-2.552zm8.557 2.315c.15.002.303.03.447.096l.749.323-.537.979a.672.597 0 0 0-.241.038.672.597 0 0 0-.405.764.672.597 0 0 0 .112.174l-.926 1.686a.672.597 0 0 0-.222.038.672.597 0 0 0-.405.764.672.597 0 0 0 .86.36.672.597 0 0 0 .404-.765.672.597 0 0 0-.158-.22l.902-1.642a.672.597 0 0 0 .293-.03.672.597 0 0 0 .213-.112c.348.146.633.265.838.366.308.152.417.253.45.365.033.11-.003.322-.177.694-.13.277-.345.67-.599 1.133a.672.597 0 0 0-.251.038.672.597 0 0 0-.405.764.672.597 0 0 0 .86.36.672.597 0 0 0 .404-.764.672.597 0 0 0-.137-.202c.251-.458.467-.852.606-1.148.188-.402.286-.701.2-.99-.086-.289-.35-.477-.7-.65-.23-.113-.517-.233-.86-.377a.672.597 0 0 0-.038-.239.672.597 0 0 0-.145-.209l.528-.963 2.924 1.263c.528.229.746.79.49 1.26l-2.01 3.68c-.257.469-.888.663-1.416.435l-4.137-1.788c-.528-.228-.747-.79-.49-1.26l2.01-3.679c.176-.323.53-.515.905-.53h.064z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/go-gitea/gitea/tree/master/assets\",hex:\"609926\"},GitHub:{title:\"GitHub\",slug:\"github\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>GitHub icon</title><path d=\"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/logos\",hex:\"181717\"},GitLab:{title:\"GitLab\",slug:\"gitlab\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>GitLab icon</title><path d=\"M4.844.904a1.007 1.007 0 00-.955.692l-2.53 7.783c0 .007-.005.012-.007.02L.07 13.335a1.437 1.437 0 00.522 1.607l11.072 8.045a.566.566 0 00.67-.004l11.074-8.04a1.436 1.436 0 00.522-1.61l-1.26-3.867a.547.547 0 00-.031-.104l-2.526-7.775a1.004 1.004 0 00-.957-.684.987.987 0 00-.949.69l-2.406 7.408H8.203l-2.41-7.408a.987.987 0 00-.943-.69h-.006zm-.006 1.42l2.174 6.678H2.674l2.164-6.678zm14.328 0l2.168 6.678h-4.342l2.174-6.678zm-10.594 7.81h6.862l-2.15 6.618L12 20.693 8.572 10.135zm-5.515.005h4.322l3.086 9.5-7.408-9.5zm13.568 0h4.326l-6.703 8.588-.709.914 2.959-9.108.127-.394zM2.1 10.762l6.978 8.947-7.818-5.682a.305.305 0 01-.112-.341l.952-2.924zm19.8 0l.952 2.922a.305.305 0 01-.11.341v.002l-7.82 5.68.025-.035 6.953-8.91Z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://about.gitlab.com/press/press-kit/\",hex:\"FCA121\"},Gitpod:{title:\"Gitpod\",slug:\"gitpod\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Gitpod icon</title><path d=\"M3.6 17V7.6L1.5 6.4v11.8L11.7 24v-2.4z M11.7 19.2v-6.9l-6-3.5v7zM12 2.4l8.1 4.7 2.1-1.2L12 0 1.8 5.9l2.1 1.2z M18 8.3l-6-3.5-6 3.5 6 3.5zM12.3 19.3l6-3.5v-2.4l-4.1 2.4v-2.4l6.2-3.6V17l-8.1 4.6V24l10.2-5.8V6.4l-10.2 5.9zM12 12.1z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.gitpod.io/\",hex:\"1AA6E4\"},Gitter:{title:\"Gitter\",slug:\"gitter\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Gitter icon</title><path d=\"M8.501 4.001H10.5V24H8.501V4.001zm6.999 0V24h-2V4.001h2zM3.5 0h2.001v15H3.5V0zm15 4.001h2V15h-2V4.001z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://gitter.im/\",hex:\"ED1965\"},Glassdoor:{title:\"Glassdoor\",slug:\"glassdoor\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Glassdoor icon</title><path d=\"M17.144 20.572H3.43C3.43 22.465 4.963 24 6.856 24h10.286c1.893 0 3.428-1.535 3.428-3.428V6.492c0-.07-.054-.125-.124-.125h-3.18c-.067 0-.123.056-.123.126v14.08zm0-20.572c1.892 0 3.427 1.535 3.427 3.43H6.858v14.078c0 .068-.056.125-.125.125H3.554c-.07 0-.125-.057-.125-.125V3.428C3.43 1.536 4.963 0 6.856 0h10.287\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.glassdoor.com/press/images/\",hex:\"0CAA41\"},Glitch:{title:\"Glitch\",slug:\"glitch\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Glitch icon</title><path d=\"M23.8 12.57c-.29-.15-3.4 1.4-4.07 1.27-1.68-.3-1.37-.5-3.63-1.02-.9-.2-.77-.08-.97-.23-.13-.1-.26-.12-.45-.3 3-.54 4.52-1.27 5.05-1.38.57-.11 3.87 1.47 4.07 1.1.2-.37-.72-1.18-.3-2.27.44-1.1-.52-1.82.01-2.69.54-.87.43-2.2.3-2.27-.3-.15-3.4 1.4-4.08 1.27-1.68-.31-1.37-.51-3.63-1.02-.9-.2-.77-.09-.97-.24-.2-.15-.39-.1-.78-.73s-4.88-1.6-5.18-1.6c-.62 0-1.78 1.6-1.78 1.6s-.45 0-1.8.07-2.53.67-4.12 1.92C-.13 7.3.1 8.56.1 8.56s1.48.5 1.48.78c0 .27-1.3.6-1.3.6C1.12 11 3.72 12 4.38 12h.52c-1.08.21-2.12.8-3.44 1.83C-.13 15.1.1 16.36.1 16.36s1.48.5 1.48.77-1.3.6-1.3.6c.84 1.07 3.44 2.07 4.1 2.07.63 0 1.07.02 1.87-.13.06.13.68 1.45 1.95 1.72 1.34.29 2.08.06 2.08.06s.07-.59-.24-1.18c1.16.12 2.48.15 3.77-.05 3.57-.54 5.34-1.4 5.92-1.51.57-.12 3.87 1.46 4.07 1.1.2-.38-.72-1.19-.29-2.28.43-1.1-.53-1.81 0-2.69.54-.87.43-2.2.3-2.27zM3.46 8.87a.95.95 0 0 1-.22-.03H3.2a2.6 2.6 0 0 1-.06-.03L3.1 8.8l-.06-.03H3a.57.57 0 0 1-.05-.03L2.9 8.7l-.05-.03-.04-.03a1.1 1.1 0 0 1-.05-.04l-.03-.03a1 1 0 0 1-.05-.06l-.02-.02a1.95 1.95 0 0 1-.07-.08l-.02-.02a1.15 1.15 0 0 1-.04-.08l-.02-.03-.04-.06a.78.78 0 0 0-.02-.05l-.02-.06-.02-.04A1.66 1.66 0 0 1 2.4 8l-.01-.05a.75.75 0 0 1-.02-.06v-.05c.07.43.42.76.83.76.47 0 .86-.43.86-.97s-.38-.98-.86-.98c-.47 0-.85.43-.86.96 0-.7.5-1.27 1.12-1.27s1.11.56 1.11 1.26-.5 1.27-1.11 1.27zm-.75-.95c0-.15.1-.27.24-.27s.23.12.23.27-.1.26-.23.26-.24-.12-.24-.26zm.75 8.74a.95.95 0 0 1-.11 0l-.04-.01a.88.88 0 0 1-.07-.01l-.04-.01-.06-.02-.04-.02a.57.57 0 0 1-.06-.02L3 16.55a.73.73 0 0 1-.05-.03l-.04-.02-.05-.04-.04-.03a.73.73 0 0 1-.05-.04l-.03-.03a1 1 0 0 1-.07-.07 1.44 1.44 0 0 1-.07-.09l-.02-.02a1.13 1.13 0 0 1-.04-.07l-.02-.04a1.3 1.3 0 0 1-.04-.06l-.02-.04-.02-.07-.02-.04a5.06 5.06 0 0 1-.02-.07l-.01-.04a.75.75 0 0 1-.02-.07v-.05c.07.43.42.76.83.76.47 0 .86-.43.86-.97s-.38-.97-.86-.97c-.47 0-.85.42-.86.95 0-.7.5-1.27 1.12-1.27s1.11.57 1.11 1.26-.5 1.27-1.11 1.27zm-.75-.95c0-.14.1-.26.24-.26s.23.12.23.26-.1.26-.23.26-.24-.11-.24-.26zm5.08-5.5v-.03l.03-.06.06-.22a18.71 18.71 0 0 0 .36-1.33c.12-.53.17-.96.15-1.2a3.04 3.04 0 0 0-.04-.27 5.92 5.92 0 0 0-.2-.79 8.05 8.05 0 0 0-.19-.5l-.06-.13-.02-.05c-.09-.2.04-.43.24-.42h.14l.4.03 1.2.06.38.02.86.06a21.12 21.12 0 0 1 7.93 2.12l.67.3c.13.06.2.23.14.38-.05.14-.2.22-.33.16l-.67-.3a20.72 20.72 0 0 0-7.77-2.09l-.86-.05-.38-.02-1.2-.07h-.12a8.69 8.69 0 0 1 .34 1.17l.05.32c.03.34-.03.81-.17 1.41l-.15.62a21.23 21.23 0 0 1-.29.99l-.02.06a.16.16 0 0 0 0 .03c-.05.14-.2.22-.33.16-.13-.05-.2-.22-.15-.37zm-1.5-4.76a.23.23 0 0 1 .36.02 4.68 4.68 0 0 1 .42.62c.22.4.37.8.41 1.21.02.23 0 .49-.04.77a6.2 6.2 0 0 1-.2.83 8.29 8.29 0 0 1-.25.69c-.06.14-.21.2-.34.13-.13-.07-.18-.24-.12-.39l.02-.04.05-.13a7.76 7.76 0 0 0 .16-.45 5.43 5.43 0 0 0 .18-.75c.04-.23.05-.43.04-.6a2.6 2.6 0 0 0-.34-.97 4.1 4.1 0 0 0-.33-.5l-.03-.03a.32.32 0 0 1 .02-.4zm1.15 10.4a6.17 6.17 0 0 1-.2.85 8.29 8.29 0 0 1-.25.68c-.06.14-.21.2-.34.13-.13-.07-.18-.24-.12-.39l.02-.04.05-.13a7.76 7.76 0 0 0 .16-.45 5.43 5.43 0 0 0 .18-.75c.04-.23.05-.43.03-.6a2.6 2.6 0 0 0-.33-.96 4.1 4.1 0 0 0-.33-.5l-.03-.04a.32.32 0 0 1 .02-.4.23.23 0 0 1 .35 0 4.68 4.68 0 0 1 .42.63c.22.4.37.81.41 1.21.02.23 0 .49-.04.77zm12.4.12c-.05.14-.2.22-.33.16l-.67-.3a20.72 20.72 0 0 0-7.77-2.09l-.85-.05h-.05l-.34-.02a913.89 913.89 0 0 0-1.32-.07l.03.06a6.38 6.38 0 0 1 .36 1.43c.03.34-.03.81-.17 1.41l-.15.62a21.29 21.29 0 0 1-.29 1l-.02.05a.16.16 0 0 0 0 .03c-.05.15-.2.22-.33.17-.13-.06-.2-.23-.15-.38v-.02l.03-.06.06-.22a18.71 18.71 0 0 0 .36-1.33c.12-.53.17-.96.15-1.2a3.04 3.04 0 0 0-.04-.27 5.92 5.92 0 0 0-.2-.79 8.02 8.02 0 0 0-.19-.49l-.04-.09-.02-.05-.02-.05c-.09-.2.04-.43.24-.42h.14l.4.03 1.2.06.38.02h.01l.85.06a21.07 21.07 0 0 1 7.93 2.12l.67.3c.13.06.2.23.14.38z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://glitch.com/about/press/\",hex:\"3333FF\"},Gmail:{title:\"Gmail\",slug:\"gmail\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Gmail icon</title><path d=\"M24 4.5v15c0 .85-.65 1.5-1.5 1.5H21V7.387l-9 6.463-9-6.463V21H1.5C.649 21 0 20.35 0 19.5v-15c0-.425.162-.8.431-1.068C.7 3.16 1.076 3 1.5 3H2l10 7.25L22 3h.5c.425 0 .8.162 1.069.432.27.268.431.643.431 1.068z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://material.io/guidelines/resources/sticker-sheets-icons.html#sticker-sheets-icons-components\",hex:\"D14836\"},GNOME:{title:\"GNOME\",slug:\"gnome\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>GNOME icon</title><path d=\"M17.865 0c-3.8 0-4.513 5.414-2.375 5.414S21.666 0 17.865 0zm-5.873.664c-.06 0-.124.003-.191.012-2.14.277-1.385 3.997-.246 4.066 1.103.068 2.308-4.071.437-4.078zm-3.705 1.47c-.113.003-.237.031-.371.087-1.72.71-.262 3.636.701 3.44.889-.182 1.004-3.556-.33-3.526zM5.547 4.43a.801.801 0 00-.483.164c-1.376.95.462 3.249 1.272 2.892.708-.312.257-3.021-.79-3.056zm7.637 1.758c-2.92.025-6.636 1.506-7.284 4.404-.718 3.217 2.96 7.68 6.797 7.68 1.888 0 4.066-1.706 4.473-3.866.311-1.647-3.662-.986-3.52.104.171 1.306-.958 1.95-2.064 1.107-3.52-2.68 5.83-4.016 5.213-7.678-.2-1.187-1.744-1.768-3.615-1.752zM5.268 20.19c-.536 0-.958.17-1.266.51-.308.34-.463.805-.463 1.397 0 .585.153 1.048.455 1.39.303.341.713.512 1.23.512.258 0 .873.004 1.288-.344v-1.765H5.264v.634h.644v.635c-.098.08-.282.154-.58.154-.293 0-.544-.106-.71-.318-.167-.211-.25-.51-.25-.898 0-.392.087-.693.259-.903.173-.211.419-.318.738-.318a1.602 1.602 0 01.817.225l.216-.637a2.245 2.245 0 00-.537-.205 2.507 2.507 0 00-.593-.069zm6.562 0c-.47.013-.842.182-1.115.506-.283.338-.426.806-.426 1.4 0 .594.143 1.06.426 1.397.284.338.675.506 1.174.506.5 0 .89-.168 1.174-.506.283-.338.423-.803.423-1.396 0-.595-.14-1.063-.424-1.4-.283-.338-.674-.507-1.173-.507h-.059zm-4.77.067v3.67h.682v-2.205l1.598 2.205h.506v-3.67h-.682v2.207l-1.598-2.207h-.505zm7.108 0l-.389 3.67h.76l.234-2.373.715 2.384h.508l.717-2.306.234 2.295h.758l-.39-3.67h-.862l-.713 2.29-.707-2.29h-.865zm4.084 0v3.67h2.209v-.715h-1.408v-.84H20.1v-.639h-1.047v-.761h1.361v-.715h-2.162zm-6.387.619h.024c.245 0 .435.107.57.32.135.213.201.514.201.9s-.066.684-.201.897a.639.639 0 01-.57.32.637.637 0 01-.569-.32c-.134-.213-.203-.511-.203-.896 0-.387.069-.688.203-.9a.635.635 0 01.545-.321Z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://wiki.gnome.org/Engagement/BrandGuidelines\",hex:\"4A86CF\"},GNU:{title:\"GNU\",slug:\"gnu\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>GNU icon</title><path d=\"M5.072 13.932c-.221.012-.419.141-.519.338-.115.211-.389.242-.517.201-.21-.07-.481-.119-.744.068s-.546.045-.495-.297c.049-.34.172-.645.499-.83.714-.41.217-.695.608-1.109.394-.412.307-.537.293-1.099-1.326-.2-2.078-.582-2.916-1.631C.442 8.526.116 7.663.03 6.349-.058 5.032.019 4.18.587 3.088 1.155 2 1.755 1.475 2.789.93 3.824.382 4.84.253 5.778.269c.939.015 1.564.083 2.094.387.531.303 1.016.684 1.324.685.24.015.477-.053.673-.192.04 1.02-.878 1.108-1.698 1.13-.82.021-1.324-.317-2.08-.192-.754.128-1.992.471-2.595 1.52-.603 1.05-.624 1.42-.573 2.301.049.878.806 1.534 1.234 1.542.428.007.523-.117.898-.36.374-.246 2.284-2.61 2.934-3.14.653-.531 1.296-.696 1.99-.705.695-.008.871.015 1.433.246.56.229.904.652 1.356.91.23-.135.375-.339.584-.495.76-.552 1.152-.702 2.053-.615.518.052 1.169.347 1.56.686.693.604 1.266 1.441 1.728 2.079.36.497.785 1.091 1.392 1.277.659.201 1.157-.652 1.23-1.129.043-.27.097-.506.097-.801 0-.297-.03-.655-.115-.965-.09-.307-.222-.599-.392-.869-.258-.416-.68-.85-1.116-1.072-.246-.125-.826-.353-1.191-.361-.448-.01-.789.141-1.202.169-.5.034-1.396.146-1.786-.24-.251-.246-.283-.411-.324-.731.109.092.264.15.401.163.313.026.605-.229.859-.378.21-.123.504-.34.778-.45.704-.285 1.568-.278 2.31-.2.595.06 1.368.324 1.89.621.526.296 1.031.797 1.4 1.268.466.594.721 1.104.889 1.844.216.945.277 2.365.015 3.299-.205.734-.887 1.861-1.467 2.414-.573.547-1.235.811-1.986.955.03.149.033.291.071.416.056.178.163.375.38.313.086-.025.133-.047.246.053.115.1.056.485-.266.66-.164.086-.334.105-.595.112-.319.012-.639-.004-.953-.046-.283-.047-.451-.273-.765-.309-.485-.055-.855-.405-1.245-.654-.162-.104-.218-.104-.311-.158.051.154.118.314.151.465.034.146.02.285.037.404.019.119.052.211.07.309.077.068.103.173.233.207.13.035.334-.018.468-.037.135-.018.224-.09.328-.07.105.02.204.096.292.166s.164.08.234.254c.07.178.135.537.146.777.009.24-.018.455-.089.648-.07.189-.135.273-.327.463s-.506.465-.819.66c.058.084.083.162.173.254.09.094.277.197.359.295.085.098.128.168.128.277.012.131-.021.262-.093.373-.223.299-.483.352-.803.492.054.334.098.572.02.906-.03.137-.102.445-.27.525-.169.08-.492.041-.698.074-.205.031-.319.063-.479.094-.098.141-.242.297-.291.422-.049.127-.034.172.006.299.042.129.185.316.225.469.039.15.049.311.011.463-.038.15-.117.287-.23.396-.129.135-.382.24-.509.346-.125.111-.252.123-.217.303.047.248.409.646.67.744.185.055.382.039.557-.041-.014.209-.195.354-.315.494.322-.094.636-.27.854-.504-.067.203-.3.529-.645.816s-.343.229-.517.344c.314.061.606.045.85.002-.197.111-.416.182-.641.207-.289.031-.468.008-.729-.055-.261-.063-.499-.301-.814-.465.03.119.053.26.185.381.136.119.335.182.549.283-.272-.029-.558-.037-.824-.096-.199-.047-.332-.092-.478-.164-.144-.07-.255-.176-.384-.264.061.117.079.256.184.352.104.098.275.135.412.199-.143-.004-.281.029-.43-.01-.16-.037-.312-.109-.443-.209-.16-.119-.311-.25-.445-.396-.132-.145-.296-.332-.345-.463-.048-.133.03-.225.044-.338-.09.061-.201.094-.272.18-.07.088-.132.166-.101.318.03.15.172.338.271.506-.296-.242-.461-.336-.531-.625-.064-.273.104-.52.233-.725.064-.104.162-.199.221-.299-.135-.129-.285-.24-.4-.389-.113-.15-.162-.352-.277-.492-.117-.143-.274-.232-.41-.348.119.256.317.572.359.771.044.199-.048.322-.119.43-.07.107-.184.133-.292.197-.11.068-.277.016-.342.113s-.083.246-.021.344l.256.398c-.126-.072-.235-.168-.327-.281-.074-.096-.186-.188-.199-.316-.016-.131-.023-.246.063-.363.084-.117.318-.156.422-.246.105-.09.162-.148.156-.264-.006-.117-.119-.199-.217-.273-.299-.225-.68-.43-.934-.699-.109-.105-.191-.234-.239-.379-.03-.105.001-.188.071-.314.072-.131.315-.305.346-.443.029-.141-.095-.172-.205-.221-.111-.049-.322.025-.425-.061s.03-.266-.086-.365-.381-.045-.519-.15c-.121-.102-.205-.24-.24-.395-.046-.141-.053-.291-.021-.436.032-.113.128-.133.187-.191.059-.057.108-.104.03-.191-.074-.088-.33.004-.476-.105-.149-.113-.06-.381-.163-.494-.104-.109-.287-.066-.386-.104-.097-.035-.135.09-.194-.109-.061-.199-.063-.797-.143-1.02s-.238-.016-.311-.236c-.075-.221-.004-.574-.037-.908l-.15-.91c-.521.352-.867.463-1.428.561-.047 1.373-.176 2.182.291 3.705.465 1.521 1.408 2.42 2.68 3.707-1.68-1.256-2.479-2.279-2.981-3.588-.501-1.311-.406-2.407-.356-3.666zm8.919-.553c.129.006.285.039.376.098.091.061.188.107.27.189.206.211.36.463.428.752.044.186.05.422.064.639-.062-.199-.103-.408-.192-.588-.139-.285-.376-.561-.672-.688-.066-.031-.141-.041-.214-.027.023.041.063.076.065.133 0 .059-.012.174-.112.223-.16.078-.339.021-.464-.086-.127-.117-.166-.301-.102-.459.079-.194.375-.194.553-.186zm-1.621-.272c.017-.332.135-.609.433-.771.187-.107.392-.18.604-.215.207-.026.713-.008 1.018.131.232.105.391.271.597.394.205.121.351.201.546.338.3.211.475.439.682.576.101.066.24.057.374.098-.104.029-.239.064-.35.029-.159-.064-.308-.152-.438-.264-.154-.137-.32-.258-.497-.359-.124-.072-.329-.158-.466-.246-.135-.09-.371-.283-.502-.349-.207-.086-.428-.129-.65-.125-.256.008-.626.05-.822.228-.197.18-.271.336-.227.566.073-.084.123-.191.195-.254.154-.133.329-.139.521-.113.215.027.322.15.393.354-.047-.033-.135-.109-.204-.135-.144-.055-.306-.039-.438.043-.179.098-.13.24-.154.396-.013.076-.041.133-.061.199-.067-.016-.129-.049-.18-.098.001.076-.01.141.006.223.014.084.055.184.084.273-.126-.125-.256-.24-.335-.402-.086-.157-.131-.337-.129-.517zm.219-2.4c.091-.136.119-.345.174-.517-.021.217.021.453-.083.609-.105.158-.292.129-.443.176.118-.09.258-.131.352-.268zm-2.207 3.203c.119-.096.438-.02.676-.002l-.514.133c-.017.059-.01.123-.048.174-.04.051-.114.068-.171.104.006-.155-.062-.313.057-.409zm1.683-6.652c.143.075.321.178.449.18.124.004.158-.08.232-.131.115.38.25.797.448 1.142.083.146.136.079.2.224.063.145.09.439.15.626.059.187.137.321.207.483-.174-.25-.401-.566-.5-.773-.098-.207-.035-.225-.115-.421-.078-.198-.238-.504-.357-.756-.086.011-.19.026-.255.006-.065-.021-.054-.091-.112-.134-.059-.045-.158-.027-.24-.1-.081-.07-.1-.217-.107-.346zm-.767 1.875c.135-.012.299.023.425.017s.216-.039.325-.06c-.021-.189-.002-.537-.176-.664-.115-.08-.578-.02-.701.006-.279.061-.604.227-.873.33.258-.18.481-.346.791-.439.188-.055.621-.129.813-.076.089.023.105.061.159.135.183.255.183.475.229.773.047.071.096.119.135.194.038.093.062.19.068.289-.048-.069-.018-.155-.149-.206-.135-.053-.337-.005-.517.014.131.096.195.186.201.384.006.233-.191.401-.398.417-.285.022-.434-.041-.549-.285-.051-.107-.016-.236-.018-.341-.346.024-.34.013-.592.222.139.201.224.315.451.436.125.066.27.133.425.16.157.027.415.053.581.027.145-.018.278-.082.379-.187.123-.112.135-.274.182-.403-.004.127-.027.252-.07.371-.14.27-.38.352-.668.352-.275 0-.616-.063-.873-.169-.205-.085-.545-.325-.625-.534-.056-.143-.012-.318-.018-.477.285-.189.354-.143.689-.198.141-.025.239-.076.374-.088zM9.643 7.854c.007-.114.021-.111.03-.167-.259-.069-.361.099-.514.411-.057.115 0 .186-.062.263-.059.076-.159.065-.257.139s-.196.215-.289.292c-.189.156-.447.251-.667.358.15-.111.443-.279.538-.439.05-.086.042-.247.12-.325.078-.075.105-.13.205-.149.1-.019.061-.136.093-.229.032-.091.097-.158.165-.251s.156-.23.291-.282c.135-.049.347.005.45-.023.102-.029.043-.105.118-.15s.219-.023.32-.072c.176-.084.26-.227.367-.377.015.326.01.561-.107.869-.131.346-.266.55-.641.763-.128.072-.257.098-.365.137.062-.086.152-.123.188-.256.034-.136.009-.4.017-.512zm6.059 1.592c-.177.014-.219-.012-.363.091l.232.36c-.006-.237.018-.285.133-.451h-.002zm-.465-.172c.246-.104.461-.189.73-.207.107-.008.274.009.383.016.094-.137.211-.244.256-.4.028-.104.015-.584-.038-.709-.146-.361-.29-.377-.495-.585-.146-.149-.152-.38-.197-.638-.015-.094-.062-.213-.084-.31-.283-.046-.57-.062-.857-.045.148-.143.291-.271.334-.486.045-.229.004-.466-.113-.667-.121-.191-.315-.36-.494-.517-.178-.155-.436-.284-.604-.412.221-.077.444-.194.66-.235.561-.108 1.043.057 1.584.384.315.19.573.37.902.716.329.344.735.975 1.054 1.348.317.375.575.67.853.893.276.226.528.289.792.431l.412.438.335-.413.535.06.111-.601.49-.136-.079-.811.354-.252-.267-.504.27-.553-.352-.63.135-.607-.407-.348-.053-.646-.569-.217-.227-.561-.64-.007-.315-.417-.431.03-.479-.053-.27-.199-.396.26-.477-.248-.947.359.618-.537.64-.102.49-.126.663.218.582-.147.563.331.596-.031.293.525.591.067.32.581.372.205.1.746.333.315-.148.653.39.494-.363.529.39.332-.499.443.506.529-.613.2.398.566-.501.088.328.622-.563-.008.285.466-.621-.074.148.672-.468-.411-.159.814-.322-.585-.175.73-.397-.537.011.765-.439-.688c.091.391.073.817.329 1.185.794-.107 1.312-.307 1.921-.892.552-.533 1.214-1.644 1.394-2.35.204-.802.21-2.281.009-3.101-.194-.787-.446-1.163-.896-1.807-.43-.455-.853-.939-1.399-1.264-.803-.48-1.829-.608-2.742-.596-.393.001-.781.074-1.148.215-.527.191-.95.611-1.487.818-.175.067-.315.068-.454-.004.135.27.281.391.619.489.244.071.825.026 1.227-.011.43-.039.654-.167 1.239-.16.57.01 1.024.225 1.272.368.511.292.877.614 1.196 1.129.175.282.298.601.383.925.086.324.124.688.13 1.006s-.019.602-.097.888c-.182.669-.583 1.35-1.407 1.245-.504-.063-1.263-1.01-1.518-1.357-.515-.701-1.043-1.477-1.688-2.059-.407-.366-.92-.594-1.463-.65-.992-.09-1.287.098-2.033.715.151.047.299.074.455.145.346.156.662.357.938.615.29.27.42.442.43.829.007.259-.204.465-.399.649-.118.114-.275.218-.372.307-.127.117-.285.246-.124.432.06.07.165.123.252.189.141.103.075.488-.108.592-.226.136-.513.111-.713-.061.246-.035.402-.068.395-.27-.002-.115-.149-.213-.297-.279-.35-.16-.614-.135-.963-.387-.353-.254-.359-.393-.455-.79-.17.017-.327.021-.555.097-.226.074-.478.254-.684.299-.52.111-.623.078-.907.006-.501-.132-1.151.09-1.8.299-.107.033-.543 0-.836.102-.528.209-1.019.496-1.457.853-.556.469-1.286 1.869-1.698 3.477-.045.49.095.818-.213 1.057-.308.24-.3.851-.405 1.023-.103.17-.225.094-.45.336-.223.24-.337.201-.332.654.195-.125.477-.273.725-.285.221-.006.222.283.785-.273.301-.299.881-.309 1.283-.439s1.125-.402 1.851-1.212c.724-.81 1.071-1.664 1.212-2.896.02.215.06.463-.033 1.065-.095.604-.296 1.28.129 2.094l.265.504c-.157-.215-.465-.566-.56-.816l-.211-.578c-.48.753-.59.887-1.255 1.425-.026.334-.033.682.076 1.002.108.32-.064.688.02.9.082.209.273.09.336.303s-.032.635.064.842c.099.207.337.082.453.15.115.066.154.158.215.246.063.088-.023.297.103.365.126.066.32.01.453.074.13.066.149.223.119.361-.032.141-.172.205-.233.348-.062.119-.055.262.02.373.074.131.236.201.4.27.162.064.391.027.559.119.169.09.32.273.408.406.089.131.113.225.109.363-.014.154-.059.301-.137.434-.074.135-.236.299.02.555.254.254.246.145.393.313-.017-.289-.135-.521-.049-.738.088-.217.349-.256.484-.352.139-.1.219-.232.326-.348 0 .148.015.309-.002.42-.033.227-.102.432.237.467.153.016.299-.082.459-.141-.084.148-.23.27-.253.451-.028.195.018.395.13.559.124.18.341.313.499.416.158.105.244.115.365.174.006.176-.03.363-.009.531.019.168.073.314.169.453.098.141.252.219.398.32-.08-.188-.242-.365-.24-.561s.06-.334.252-.51c.191-.174.639-.324.85-.494.156-.109.279-.26.355-.436.075-.164.055-.43.069-.576.069.205.079.27.103.486.021.217-.127.521-.189.68.228-.105.409-.293.51-.525.057.035.028.125.049.301.094-.092.199-.162.293-.25s.195-.164.243-.287c.046-.121.027-.252-.007-.393-.035-.143-.193-.307-.279-.463-.084-.152.016-.305.01-.492-.17-.029-.314-.117-.512-.088-.195.029-.42.248-.621.252-.199 0-.314-.188-.478-.238-.165-.053-.33-.045-.495-.07.209-.199 1.021-.295 1.576-.385.486-.082.978-.125 1.47-.133.221-.006.506.068.661.025.152-.045.119-.15.164-.264.129-.318.066-.604-.004-.924-.444-.053-.908-.115-1.356-.082-.438.033-.956.242-1.409.256-.392.014-.976-.074-1.312-.281-.413-.25-.731-.789-.845-.965-.184-.281-.416-.836-.559-1.088-.141-.254-.173-.324-.29-.43-.118-.105-.278-.113-.419-.17.161.014.336-.035.482.047.221.127.465.648.602.877.145-.486.111-.676.529-.951-.336.379-.346.666-.428 1.111.281.459.67 1.193 1.18 1.396.186.074.502.119.701.145.621.076 1.22-.119 1.828-.27.445-.111.897-.066 1.438-.035.183.012.616-.1.707-.283.052-.107.042-.232-.024-.33-.07-.105-.255-.158-.355-.254-.099-.098-.156-.211-.235-.314-.35.068-.704.105-1.062.115.221-.09.433-.141.66-.23.237-.098.463-.219.676-.359.186-.123.303-.193.438-.334.134-.143.305-.289.404-.463.099-.174.114-.369.12-.584.004-.215-.005-.516-.088-.691-.084-.172-.243-.225-.372-.264-.127-.041-.216.063-.349.076-.134.014-.258.096-.452.006-.248-.129-.461-.318-.617-.549-.196-.274-.335-.723-.534-1.068-.343-.596-.771-1.149-1.179-1.702-.035-.135-.084-.324-.102-.508-.031-.322-.035-.656.065-.969.075-.24.188-.494.438-.592.1-.043.212-.051.317-.022.09.032.179.135.142.252-.039.129-.127.134-.188.198-.091.091-.153.205-.183.33.111-.004.262-.011.354.013.12.03.229.11.291.279-.143-.126-.213-.185-.39-.188-.083-.002-.182.026-.271.041-.034.108-.054.243-.101.329-.049.084-.141.063-.176.161-.033.128-.039.261-.02.391h.004zm1.242-.149c.056.021.075.027.146.08.069.052.165.104.22.229.044.129.058.266.04.4-.048-.015-.113-.005-.163-.047-.05-.043-.079-.14-.143-.18-.065-.043-.117-.034-.188-.043.038.096.05.199.036.301-.036.203-.156.307-.352.33-.084.012-.219-.016-.292-.029.034.075.091.143.126.219.164-.023.285-.02.375-.061.088-.041.183-.135.296-.173.113-.039.214-.039.338-.059-.098.084-.162.167-.259.253l.214.623c.152.096.294.146.485.263.191.116.42.327.67.44.249.113.396.177.657.225.259.05.467.262.722.296.255.032.735.041.932.021.225-.021.516-.136.542-.382-.188.045-.475.005-.619-.349-.064-.157-.034-.447-.132-.631-.099-.187-.236-.246-.4-.475s-.431-.589-.58-.895c-.15-.308-.188-.654-.313-.929-.128-.274-.319-.495-.469-.708-.324-.463-.585-.777-1.12-1.011-.258-.112-.551-.143-.824-.213-.113.05-.268.104-.295.237-.021.15.021.305.12.421.159.165.395.342.487.603.061.168.076.73.025.883-.054.16-.178.257-.282.361zm.052 1.331c-.049.043-.087.087-.167.122-.08.036-.189.045-.295.071.148.231.305.466.447.709.143.242.266.51.401.765-.007-.147.002-.302-.019-.438-.021-.136-.083-.254-.145-.461-.06-.206-.135-.484-.222-.768zm-3.999-5.087c-.021.226.019.581.064.806.058.267.111.404.328.564.396.295.648.245.955.416.145.081.328.217.382.359.053.146-.036.301-.146.363.192.029.408-.189.318-.41-.045-.109-.255-.16-.32-.271-.059-.102-.07-.224-.033-.335.053-.202.454-.388.597-.546.218-.248.3-.453.177-.77-.172-.445-.842-.804-1.242-.979-.183-.08-.287-.084-.429-.129.292.174.601.31.75.691.123.321.015.443.021.721.002.13.172.195.248.275.064.072.06.125.008.223-.004-.08-.045-.154-.111-.199-.112-.08-.234-.063-.294-.225-.09-.248.091-.484-.112-.762-.15-.208-.353-.441-.625-.447-.123-.001-.244.018-.36.058l-.183-.22-.005-.003c-.372-.339-.627-.619-1.147-.852-.522-.234-.78-.27-1.379-.256-.597.013-1.19.063-1.883.66-.694.6-2.481 2.888-2.915 3.177-.431.289-.527.389-1.068.389s-1.387-.766-1.42-1.723c-.032-.956-.045-1.297.619-2.449.666-1.152 1.869-1.506 2.764-1.625.895-.121 1.432.194 2.092.195.66.002 1.314-.111 1.508-.637-.095.056-.221.12-.577.101-.355-.019-.849-.431-1.402-.706C7.157.547 6.542.514 5.75.5c-.79-.015-1.777.045-2.755.574-.978.525-1.645 1.085-2.213 2.12C.214 4.227.13 5.069.222 6.321c.09 1.25.477 2.181 1.219 3.098.744.914 1.486 1.363 2.824 1.529l.283-1.242-.504.721.014-.803-.455.565-.202-.767-.367.615-.183-.855-.536.432.17-.705-.707.078.324-.491-.644.006.375-.653-.57-.091.454-.596-.698-.206.578-.555-.573-.467.448-.348-.42-.559.448-.52-.167-.685.379-.329.113-.786.426-.214.366-.611.677-.072.334-.553.68.035.642-.348.666.154.756-.228.562.13.731.108.705.564-1.081-.377-.544.26-.451-.273-.31.209-.55.057-.491-.03-.358.436-.732.007-.26.589-.65.228-.061.678-.467.366.155.637-.402.664.31.581-.305.529.404.264-.09.853.563.141.125.633.613-.063.381.434.47-.461c.858-.428 1.212-.668 1.882-1.391.759-.823 1.196-1.584 2.208-2.147.729-.405 1.321-.551 2.139-.408.766.132 1.024.593 1.59 1.077.061-.109.07-.139.169-.218-.03.142-.079.287-.093.423l-.002-.001z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://gnu.org\",hex:\"A42E2B\"},\"GNU IceCat\":{title:\"GNU IceCat\",slug:\"gnuicecat\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>GNU IceCat icon</title><path d=\"M10.436-0.055C10.07-0.049,9.692-0.025,9.297,0.02C4.501,0.562,1.685,4.556,1.522,9.399 c-1.123,2.201-1.453,4.791-0.724,7.324c1.396,4.853,6.216,7.785,11.169,7.204l0.909-0.107c4.956,0.327,6.013-1.024,7.199-4.318 c0.125-0.272,0.306-0.77,0.569-1.574c0.007-0.038,0.016-0.077,0.021-0.096c0.789-2.152,0.905-4.582,0.24-6.891 c-0.08-0.277-0.171-0.548-0.273-0.812c-0.03-0.19-0.024-0.42,0.009-0.6c0.29-0.475,0.65-0.833,1.079-1.1l0.273-1.876 c0.287-0.323,0.177-0.601,0.19-1.061c0.167-0.079,0.259-0.214,0.329-0.43c0.077-0.238,0.448-0.688,0.863-1.037 c0.064-0.189,0.224-0.574,0.222-0.895c-1.988,0.227-3.237,0.609-4.235-0.612L18.829,2.31c-0.24-0.372-0.672-0.585-0.981-0.951 l-0.35,1.213C17.067,2.305,14.749-0.124,10.436-0.055L10.436-0.055z M10.577,0.741c2.595,0.037,4.973,1.347,6.221,2.285 l-0.951,0.355l-0.599-0.382l-0.27,0.788v0.326L14.244,5.88l-0.08-0.027l0.379-1.577l0.572-1.52l-0.192-0.163l-0.842,0.922 c-0.179,0.981-0.09,2.364-0.542,2.937c0.141-1.152,0.341-2.159,0.353-3.506l-0.489-0.163c-0.113,0.596-0.265,1.278-0.382,1.657 l0.163-1.71L12.56,3.135v0.978l-0.163-0.542l-0.056-0.978l-0.216-0.029l-0.163,0.625c0.028,0.272-0.015,0.543,0.216,0.815 l0.056,2.066l0.134,0.246l-0.243,1.168l0.027-1.141l-0.08-0.08L11.908,4.25l-0.273-1.088L11.2,2.892L11.037,2.43l-0.462-0.029 l1.034,3.698l0.08,1.112c-0.118-0.527-0.113-1.102-0.569-1.494c0.045-0.553-0.036-1.095-0.708-1.577L9.434,2.131 C9.4,1.893,9.067,1.854,8.835,1.749c-0.07,0.32-0.131,0.643,0.083,1.034c0.489,0.777,0.978,1.559,1.467,1.983l0.027,0.951 C10.251,4.84,9.809,4.367,9.65,4.495C9.645,3.78,8.858,3.513,8.402,3.055L8.346,2.267l-0.27-0.056 c0.169,0.533-0.219,0.571,0.542,1.63l0.027,0.382c-0.29-0.197-0.579-0.565-0.868-0.978L7.424,2.62 c0.037,0.428-0.175,0.524,0.134,1.277c0.456,0.396,0.866,0.977,1.387,1.114c0,0,0.109,0.19,0,0.19 c-0.109,0-0.326-0.083-0.326-0.083c-0.3-0.137-0.586-0.26-1.168-0.679L6.853,2.673L6.58,2.62l0.056,0.951l0.243,0.107l0.027,0.625 c0.106,0.371,0.228,0.518,0.409,0.462C7.213,4.89,7.094,4.917,6.853,4.902C6.651,4.524,6.528,4.155,6.118,3.707l-0.27-0.788 L5.685,3.082c-0.059,0.296-0.085,0.61,0,0.978C5.42,3.903,5.027,3.467,4.56,3.24c1.534-1.78,3.904-2.462,5.766-2.496 C10.41,0.742,10.494,0.74,10.577,0.741L10.577,0.741z M18.147,2.935l0.518,0.171l1.518,0.866l2.151,0.019 c-0.617,0.242-1.377,0.526-1.862,0.673l-0.615-0.019c-0.486-0.414-0.876-0.613-1.312-0.876c-0.528,0.553-0.839,1.035-1.013,1.74 l0.152-1.192l0.521-1.173L18.147,2.935z M4.539,3.266l0.548,1.093l0.027,0.243L4.814,4.495L4.544,3.87L4.245,4.087L4.028,3.958 C4.184,3.712,4.356,3.481,4.539,3.266z M8.066,5.58c1.617-0.037,1.873,1.306,2.132,2.549v2.229 c0.186,0.018,0.568,1.138,0.489,1.494c-0.045,0.204,0.489,1.425,0.452,1.43c0.288,0.278,0.235,0.248,0.465,0.425 c0.317,0.244,0.604,1.136,0.428,1.267c-0.168,0.124,0.221,0.402,0.313,0.601c0.568,0.507,0.989,1.016,0.981,1.523l0.27,0.489 l0.516,0.08l0.136,0.192l0.652,0.08c0.375-0.081,0.32-0.486,0.436-0.762c0.022-0.279-0.058-0.6-0.462-0.951 c0.021-0.422,0.074-0.838-0.326-1.331c0.057-0.504-0.311-0.922-0.599-1.357c-0.035-0.374-0.197-0.885-0.321-1.381 c-0.061-0.245-0.09-0.498-0.139-0.74c-0.182-1.677,0.058-1.866,0.134-2.771c0.62-0.932,0.945-1.379,1.496-1.577l0.705,0.871 c0.348,0.633,0.199,1.444,1.061,1.603l0.021,0.021c0.44-0.397,1.023-0.384,1.497-0.396l-0.057,0.188 c-0.571-0.06-1.038-0.074-1.424,0.216l0.385,0.374c0.413-0.536,0.982-0.5,1.542-0.521l0.006,0.207 c-0.605-0.08-1.184,0.021-1.497,0.362l0.123,0.118h0.005c0.466-0.364,1.024-0.384,1.552-0.39l-0.104,0.184 c-0.53,0.043-0.895,0.007-1.274,0.23c0.293,0.031,0.588,0.057,0.882,0.086l0.11,0.243l0.679,0.056 c0.119,0.03,0.216,0.043,0.302,0.045c0.083,0.221,0.158,0.445,0.224,0.676c0.504,1.751,0.502,3.588,0.059,5.283 c-1.359,3.648-2.804,4.625-5.742,4.428c-3.067-0.206-5.543-3.614-7.725-8.283c-0.476-1.295-1.641-2.116-2.318-1.424 c-3.08,3.063,0.395,8.51,2.104,9.825c0.957,0.692,1.924,1.245,2.878,1.673c-3.388-0.564-6.284-2.92-7.263-6.322 C0.668,12.32,2.619,8.027,6.345,5.973c0.004-0.001,0.01-0.004,0.013-0.005C7.055,5.708,7.613,5.591,8.066,5.58L8.066,5.58z M18.31,7.625c0.294,0.045,0.84,0.366,1.139,0.665c0.09,0.244-0.136,0.354-0.12,0.497c0.008,0.024,0.004,0.032,0.003,0.032 c-0.001-0.011-0.002-0.021-0.003-0.032C19.305,8.715,18.908,8.227,18.31,7.625z M20.118,9.811 c-0.002,0.253-0.083,0.341-0.192,0.476c-0.111,0.009-0.39-0.075-0.513-0.251C19.598,9.823,19.882,9.825,20.118,9.811z M17.277,9.983c-0.059,0.071-0.086,0.157-0.156,0.306c0.091-0.14,0.146-0.201,0.207-0.245L17.277,9.983z M17.419,10.159 c-0.225,0.063-0.387,0.419-0.613,0.923c0.241-0.297,0.407-0.718,0.746-0.852L17.419,10.159z M5.551,13.076l0.053,1.058 l-1.657,0.951l-0.027-0.788C4.612,14.476,5.071,13.736,5.551,13.076z M6.286,15.331l0.243,0.625l-2.092,1.141l-0.299-0.708 C6.233,15.623,5.873,15.629,6.286,15.331z M7.045,16.771l0.273,0.462c-0.788,0.389-1.438,0.914-2.009,1.52l-0.436-0.868 C5.663,17.646,6.406,17.313,7.045,16.771z M8.052,18.075l0.462,0.436c-0.362,0.811-1.11,1.315-1.822,1.846L5.96,19.515 C6.679,19.046,7.591,18.673,8.052,18.075z M9.595,19.582c0.073,0.433-0.222,1.076-1.216,2.026 c-0.387-0.174-0.787-0.337-1.034-0.652c1.61-0.816,2.024-1.255,2.143-1.471C9.53,19.479,9.6,19.517,9.595,19.582L9.595,19.582z M10.607,20.25c0.037,0.383-0.041,0.831,0.19,1.085l0.216,0.056c-0.114,0.471-0.341,0.823-0.326,1.294 c-0.859-0.208-0.954-0.297-1.277-0.506C10.408,20.627,10.599,20.262,10.607,20.25L10.607,20.25z M12.018,21.036l1.061,1.224 c-0.107,0.585-0.098,0.934,0.299,1.087c-0.6-0.033-1.188-0.04-1.683-0.345C12.125,22.363,12.118,21.791,12.018,21.036z M17.355,21.512c0.308,0.469,0.349,0.707,0.657,0.815c-0.406,0.394-0.589,0.471-1.066,0.652c0.15-0.304,0.001-0.73-0.134-1.248 C16.712,21.539,17.213,21.555,17.355,21.512z M14.356,21.797c1.79,0.534,1.183,0.874,1.732,1.408 c-0.472,0.099-0.905,0.205-1.659,0.163C14.985,22.956,14.731,22.496,14.356,21.797z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://git.savannah.gnu.org/cgit/gnuzilla.git/plain/artwork/simple.svg\",hex:\"002F5B\"},\"GNU Privacy Guard\":{title:\"GNU Privacy Guard\",slug:\"gnuprivacyguard\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>GNU Privacy Guard icon</title><path d=\"M2.968 11.583h1.274v-3.82A7.76 7.76 0 0 1 12.005 0a7.76 7.76 0 0 1 7.762 7.763v3.783c-.018.01-.037.028-.056.037l-.01.01-.008.009h-.01l-.01.01-.009.009H19.636l-.018.018h-.02l-.018.01h-.01l-.009.01-.009.009h-.01l-.009.009-.009.01-.01.009-.009.009-.028.019-.019.01-.028.018-.018.01-.02.009-.027.018-.019.01-.01.009-.027.019-.02.01-.046.027-.019.01-.018.009-.02.01h-.008l-.057.027h-.019c-.018.01-.037.02-.065.038h-.01l-.009.01-.028.018-.018.01-.029.018-.018.01h-.01l-.028.018-.018.01-.02.009c-.018.01-.046.019-.065.028l-.018.01-.02.009-.037.018-.037.02-.047.018-.047.019-.019.009-.037.019-.019.01c-1.545.739-4.017 1.516-8.708 1.853-3.362.244-5.403 1.723-6.724 3.502zm4.842 0h8.371v-3.82a4.184 4.184 0 0 0-4.186-4.186A4.184 4.184 0 0 0 7.81 7.763zm13.222 1.461V24H5.572c1.704-.946 2.968-.852 5.075-.787 2.865.094 6.03-1.105 7.585-2.696 1.554-1.592-.14-.375-1.901.074-1.76.45-5.17.497-7.454-.103 7.173.094 9.973-2.219 11.555-4.307 1.583-2.079-.683-.365-2.153.356-1.47.72-4.036 1.227-6.864.852 4.27-.01 7.52-2.144 9.607-4.345z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://git.gnupg.org/cgi-bin/gitweb.cgi?p=gnupg.git;a=tree;f=artwork/icons\",hex:\"0093DD\"},\"GNU social\":{title:\"GNU social\",slug:\"gnusocial\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>GNU social icon</title><path d=\"M4.217 0C2.474 0 1.06 1.413 1.06 3.156V15.77c0 1.744 1.414 3.158 3.157 3.158h9.367C13.567 22.498 8.756 24 8.756 24s8.138-.038 9.305-5.072h1.72c1.744 0 3.157-1.414 3.157-3.157V3.157C22.938 1.413 21.524 0 19.782 0H4.218zm4.527 2.53c.073-.013.132-.003.174.034.335.3-.556.593-.484 2.063.032.646-.16 1.146 1.076 1.146.826 0 .483-.734 1.523-.734.656 0 .86.435.934.767.072-.33.274-.768.93-.768 1.04 0 .7.733 1.525.733 1.237 0 1.044-.5 1.076-1.146.072-1.47-.82-1.764-.484-2.063.042-.037.1-.042.172-.02.5.143 1.607 1.558 1.638 2.155.038.71.04 1.825-1.015 2.407 1.19 1.167 1.352 2.72 1.352 2.72l-2.045-.034s-.464-2.118-2.94-2.01c-2.474.108-2.796.538-2.796 3.156 0 2.617 1.147 3.517 2.905 3.585 2.76.108 2.51-1.433 2.51-1.433l-1.29.072-.718-1.937h4.41c0 2.116-.897 5.414-5.092 5.2-4.196-.216-5.128-3.515-5.164-5.74-.018-1.225.188-2.602 1.2-3.574-1.052-.58-1.033-1.7-1.033-2.414 0-.88 1.13-2.084 1.637-2.17z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.gnu.org/graphics/social.html\",hex:\"A22430\"},\"Godot Engine\":{title:\"Godot Engine\",slug:\"godotengine\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Godot Engine icon</title><path d=\"M9.559 0.689c-1.096 0.244-2.181 0.583-3.198 1.095 0.023 0.898 0.081 1.758 0.199 2.632-0.395 0.253-0.81 0.47-1.178 0.766-0.375 0.288-0.758 0.564-1.097 0.901-0.678-0.448-1.396-0.869-2.135-1.241-0.797 0.857-1.542 1.782-2.15 2.818 0.458 0.741 0.936 1.435 1.452 2.094h0.014v6.356c0.012 0 0.023-0 0.035 0.003l3.896 0.376c0.204 0.020 0.364 0.184 0.378 0.389l0.12 1.72 3.399 0.242 0.234-1.587c0.030-0.206 0.207-0.358 0.415-0.358h4.111c0.208 0 0.385 0.152 0.415 0.358l0.234 1.587 3.399-0.242 0.12-1.72c0.014-0.205 0.174-0.369 0.378-0.389l3.895-0.376c0.012 0 0.023-0.003 0.035-0.003v-0.507h0.002v-5.848h0.014c0.516-0.659 0.994-1.353 1.452-2.094-0.608-1.036-1.354-1.961-2.151-2.819-0.739 0.372-1.457 0.793-2.135 1.241-0.339-0.337-0.721-0.613-1.096-0.901-0.369-0.296-0.784-0.513-1.178-0.766 0.117-0.874 0.175-1.734 0.199-2.632-1.017-0.512-2.101-0.851-3.198-1.095-0.438 0.736-0.838 1.533-1.187 2.312-0.414-0.069-0.829-0.094-1.246-0.099h-0.016c-0.417 0.005-0.832 0.030-1.246 0.099-0.349-0.779-0.749-1.576-1.188-2.312l0.001-0.001zM6.476 9.994c1.297 0 2.349 1.051 2.349 2.348s-1.052 2.348-2.349 2.348c-1.296 0-2.348-1.051-2.348-2.348s1.051-2.348 2.348-2.348zM17.524 9.994c1.296 0 2.348 1.051 2.348 2.348s-1.051 2.348-2.348 2.348c-1.297 0-2.349-1.051-2.349-2.348s1.051-2.348 2.349-2.348zM6.701 10.924c-0.861 0-1.559 0.698-1.559 1.559s0.698 1.558 1.559 1.558c0.861 0 1.559-0.698 1.559-1.558s-0.697-1.559-1.559-1.559zM17.298 10.924c-0.861 0-1.558 0.698-1.558 1.559s0.697 1.558 1.558 1.558c0.861 0 1.559-0.698 1.559-1.558s-0.697-1.559-1.559-1.559zM12 11.377c0.417 0 0.757 0.308 0.757 0.687v2.162c0 0.379-0.339 0.687-0.757 0.687s-0.756-0.308-0.756-0.687v-2.162c0-0.379 0.339-0.687 0.756-0.687zM1.46 16.951c0.002 0.377 0.006 0.789 0.006 0.871 0 3.701 4.694 5.479 10.526 5.5h0.014c5.832-0.020 10.525-1.799 10.525-5.5 0-0.084 0.005-0.495 0.007-0.871l-3.502 0.338-0.121 1.729c-0.015 0.208-0.18 0.375-0.389 0.39l-4.181 0.296c-0.206 0-0.384-0.151-0.415-0.358l-0.238-1.614h-3.386l-0.238 1.614c-0.032 0.217-0.226 0.373-0.445 0.357l-4.151-0.296c-0.208-0.015-0.375-0.181-0.389-0.389l-0.12-1.729-3.504-0.337z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://godotengine.org/themes/godotengine/assets/download/godot_logo.svg\",hex:\"478CBF\"},\"GOG.com\":{title:\"GOG.com\",slug:\"gog-dot-com\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>GOG.com icon</title><path d=\"M7.15 15.24H4.36a.4.4 0 0 0-.4.4v2c0 .21.18.4.4.4h2.8v1.32h-3.5c-.56 0-1.02-.46-1.02-1.03v-3.39c0-.56.46-1.02 1.03-1.02h3.48v1.32zM8.16 11.54c0 .58-.47 1.05-1.05 1.05H2.63v-1.35h3.78a.4.4 0 0 0 .4-.4V6.39a.4.4 0 0 0-.4-.4H4.39a.4.4 0 0 0-.41.4v2.02c0 .23.18.4.4.4H6v1.35H3.68c-.58 0-1.05-.46-1.05-1.04V5.68c0-.57.47-1.04 1.05-1.04H7.1c.58 0 1.05.47 1.05 1.04v5.86zM21.36 19.36h-1.32v-4.12h-.93a.4.4 0 0 0-.4.4v3.72h-1.33v-4.12h-.93a.4.4 0 0 0-.4.4v3.72h-1.33v-4.42c0-.56.46-1.02 1.03-1.02h5.61v5.44zM21.37 11.54c0 .58-.47 1.05-1.05 1.05h-4.48v-1.35h3.78a.4.4 0 0 0 .4-.4V6.39a.4.4 0 0 0-.4-.4h-2.03a.4.4 0 0 0-.4.4v2.02c0 .23.18.4.4.4h1.62v1.35H16.9c-.58 0-1.05-.46-1.05-1.04V5.68c0-.57.47-1.04 1.05-1.04h3.43c.58 0 1.05.47 1.05 1.04v5.86zM13.72 4.64h-3.44c-.58 0-1.04.47-1.04 1.04v3.44c0 .58.46 1.04 1.04 1.04h3.44c.57 0 1.04-.46 1.04-1.04V5.68c0-.57-.47-1.04-1.04-1.04m-.3 1.75v2.02a.4.4 0 0 1-.4.4h-2.03a.4.4 0 0 1-.4-.4V6.4c0-.22.17-.4.4-.4H13c.23 0 .4.18.4.4zM12.63 13.92H9.24c-.57 0-1.03.46-1.03 1.02v3.39c0 .57.46 1.03 1.03 1.03h3.39c.57 0 1.03-.46 1.03-1.03v-3.39c0-.56-.46-1.02-1.03-1.02m-.3 1.72v2a.4.4 0 0 1-.4.4v-.01H9.94a.4.4 0 0 1-.4-.4v-1.99c0-.22.18-.4.4-.4h2c.22 0 .4.18.4.4zM23.49 1.1a1.74 1.74 0 0 0-1.24-.52H1.75A1.74 1.74 0 0 0 0 2.33v19.34a1.74 1.74 0 0 0 1.75 1.75h20.5A1.74 1.74 0 0 0 24 21.67V2.33c0-.48-.2-.92-.51-1.24m0 20.58a1.23 1.23 0 0 1-1.24 1.24H1.75A1.23 1.23 0 0 1 .5 21.67V2.33a1.23 1.23 0 0 1 1.24-1.24h20.5a1.24 1.24 0 0 1 1.24 1.24v19.34z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.cdprojekt.com/en/media/logotypes/\",hex:\"86328A\"},GoldenLine:{title:\"GoldenLine\",slug:\"goldenline\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>GoldenLine icon</title><path d=\"M16.377 21.658c0 1.225-.989 2.215-2.212 2.215-1.224 0-2.217-.99-2.217-2.215 0-1.223.993-2.215 2.217-2.215 1.223 0 2.213.993 2.212 2.215zm-4.715-.172L6.47 22.7s-.287.08-.392-.215c-.06-.181.091-.398.091-.398l5.213-8.514s.267-.402.77-.549c.418-.121.872.16.872.16l8.351 5.253s.362.147.348.438c-.015.293-.333.343-.333.343l-5.04 1.178c-.426-.744-1.23-1.244-2.156-1.244-1.32 0-2.413 1.032-2.504 2.335h-.028zM3.898 7.297l1.513-5.263s.072-.303.381-.242c.186.031.303.273.303.273l4.889 8.698s.223.425.106.941c-.099.425-.567.683-.567.683L1.864 17.11s-.307.243-.547.084c-.242-.163-.136-.463-.136-.463l1.472-5.116c1.177-.206 2.071-1.233 2.071-2.47 0-.738-.319-1.396-.826-1.859v.011zm.532 1.858c0 1.225-.989 2.218-2.214 2.218C.995 11.373 0 10.38 0 9.155c0-1.221.995-2.213 2.216-2.213 1.225 0 2.217.992 2.217 2.213H4.43zm15.666-1.734l3.81 4.18s.211.212.003.445c-.124.141-.394.111-.394.111l-9.974-.395s-.478-.035-.853-.402c-.31-.303-.282-.838-.282-.838l.51-9.852s-.05-.389.212-.511c.27-.122.467.129.467.129l3.318 3.628c-.188.35-.293.744-.293 1.17 0 1.381 1.123 2.504 2.509 2.504.341 0 .667-.075.964-.197l.003.028zm1.25-2.317c0 1.229-.986 2.217-2.212 2.217-1.224 0-2.217-.987-2.217-2.217 0-1.215.993-2.201 2.217-2.201 1.223 0 2.213 1.002 2.213 2.217l-.001-.016z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://www.goldenline.pl\",hex:\"F1B92B\"},Goodreads:{title:\"Goodreads\",slug:\"goodreads\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Goodreads icon</title><path d=\"M19.525 15.977V.49h-2.059v2.906h-.064c-.211-.455-.481-.891-.842-1.307-.36-.412-.767-.777-1.232-1.094-.466-.314-.962-.561-1.519-.736C13.256.09 12.669 0 12.038 0c-1.21 0-2.3.225-3.246.67-.947.447-1.743 1.057-2.385 1.83-.642.773-1.133 1.676-1.47 2.711-.336 1.037-.506 2.129-.506 3.283 0 1.199.141 2.326.425 3.382.286 1.057.737 1.976 1.368 2.762.631.78 1.412 1.397 2.375 1.833.961.436 2.119.661 3.471.661 1.248 0 2.33-.315 3.262-.946s1.638-1.473 2.119-2.525h.061v2.284c0 2.044-.421 3.607-1.264 4.705-.84 1.081-2.224 1.638-4.146 1.638-.572 0-1.128-.061-1.669-.181-.542-.12-1.036-.315-1.487-.57-.437-.271-.827-.601-1.143-1.038-.316-.435-.526-.961-.632-1.593H5.064c.067.887.315 1.654.737 2.3.424.646.961 1.172 1.602 1.593.641.406 1.367.706 2.172.902.811.194 1.639.3 2.494.3 1.383 0 2.541-.195 3.486-.555.947-.376 1.714-.902 2.301-1.608.601-.708 1.021-1.549 1.293-2.556.27-1.007.42-2.134.42-3.367l-.044.062zm-7.484-.557c-.955 0-1.784-.189-2.479-.571-.697-.38-1.277-.882-1.732-1.503-.467-.621-.797-1.332-1.022-2.139s-.332-1.633-.332-2.484c0-.871.105-1.725.301-2.563.21-.84.54-1.587.992-2.24.451-.652 1.037-1.182 1.728-1.584s1.533-.605 2.51-.605 1.803.209 2.495.621c.676.415 1.247.959 1.683 1.634.436.677.751 1.429.947 2.255.195.826.285 1.656.285 2.482 0 .852-.12 1.678-.345 2.484-.226.807-.572 1.518-1.038 2.139-.465.621-1.021 1.123-1.698 1.503-.676.382-1.458.571-2.359.571h.064z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.goodreads.com/about/press\",hex:\"663300\"},Go:{title:\"Go\",slug:\"go\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Go icon</title><path d=\"M1.811 10.715c-.047 0-.058-.023-.035-.059l.246-.315c.023-.035.081-.058.128-.058h4.172c.046 0 .058.035.035.07l-.199.303c-.023.036-.082.07-.117.07l-4.23-.011zM.047 11.79c-.047 0-.059-.023-.035-.058l.245-.316c.023-.035.082-.058.129-.058h5.328c.047 0 .07.035.058.07l-.093.28c-.012.047-.058.07-.105.07l-5.527.012zm2.828 1.075c-.047 0-.059-.035-.035-.07l.163-.292c.023-.035.07-.07.117-.07h2.337c.047 0 .07.035.07.082l-.023.28c0 .047-.047.082-.082.082l-2.547-.012zM15.004 10.505c-.736.187-1.239.327-1.963.514-.176.046-.187.058-.34-.117-.174-.199-.303-.327-.548-.444-.737-.362-1.45-.257-2.115.175-.795.514-1.204 1.274-1.192 2.22.011.935.654 1.706 1.577 1.835.795.105 1.46-.175 1.987-.771.105-.129.198-.269.315-.433H10.47c-.245 0-.304-.152-.222-.35.152-.362.432-.97.596-1.274a.315.315 0 0 1 .292-.187h4.253c-.023.316-.023.631-.07.947a4.983 4.983 0 0 1-.958 2.29c-.841 1.11-1.94 1.8-3.33 1.986-1.145.152-2.209-.07-3.143-.77-.865-.655-1.356-1.52-1.484-2.595-.152-1.274.222-2.419.993-3.424.83-1.086 1.928-1.776 3.272-2.021 1.098-.199 2.15-.07 3.096.572.62.41 1.063.97 1.356 1.648.07.105.023.164-.117.199 M18.872 16.967c-1.064-.024-2.034-.328-2.852-1.029a3.665 3.665 0 0 1-1.262-2.255c-.21-1.32.152-2.489.947-3.529.853-1.122 1.881-1.706 3.272-1.951 1.192-.21 2.314-.094 3.33.596.923.63 1.496 1.484 1.648 2.605.198 1.578-.257 2.863-1.344 3.962-.771.783-1.718 1.273-2.805 1.495-.315.059-.63.07-.934.106zm2.78-4.721c-.011-.152-.011-.269-.034-.386-.21-1.157-1.274-1.811-2.384-1.554-1.087.245-1.788.935-2.045 2.033-.21.912.234 1.835 1.075 2.209.643.28 1.285.245 1.905-.07.923-.48 1.425-1.227 1.484-2.232z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://blog.golang.org/go-brand\",hex:\"00ADD8\"},Google:{title:\"Google\",slug:\"google\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Google icon</title><path d=\"M12.24 10.285V14.4h6.806c-.275 1.765-2.056 5.174-6.806 5.174-4.095 0-7.439-3.389-7.439-7.574s3.345-7.574 7.439-7.574c2.33 0 3.891.989 4.785 1.849l3.254-3.138C18.189 1.186 15.479 0 12.24 0c-6.635 0-12 5.365-12 12s5.365 12 12 12c6.926 0 11.52-4.869 11.52-11.726 0-.788-.085-1.39-.189-1.989H12.24z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://developers.google.com/+/branding-guidelines?hl=en\",hex:\"4285F4\"},\"Google Ads\":{title:\"Google Ads\",slug:\"googleads\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Google Ads icon</title><path d=\"M11.994 1.046h.022c.899.002 1.73.301 2.398.805l.003.001.001.001a4 4 0 011.116 1.299l4.467 7.769.025.065 3.419 5.927A3.98 3.98 0 0124 18.948c0 .565-.117 1.104-.329 1.592l.006.016a3.93 3.93 0 01-.634.993 3.97 3.97 0 01-1.045.868 3.984 3.984 0 01-1.946.537h-.068a3.984 3.984 0 01-2.398-.805l-.003-.001v-.001h-.001a4 4 0 01-1.116-1.299l-4.467-7.769-.025-.065-3.419-5.927-.005-.009-.011-.019A3.981 3.981 0 018 5.052c0-.424.066-.832.188-1.215v-.001l.008-.025.01-.03c.052-.157.117-.337.117-.337.158-.358.371-.689.626-.984l.063-.072.014-.015.002-.003.001-.001.002-.002.009-.01.006-.007c.27-.296.59-.557.956-.767a3.984 3.984 0 011.946-.537h.046zM4.006 22.954h-.058a3.984 3.984 0 01-1.946-.537 3.97 3.97 0 01-1.045-.868 3.93 3.93 0 01-.634-.993l.006-.016A3.988 3.988 0 010 18.948c0-.743.202-1.439.555-2.035l3.419-5.927.025-.065 3.039-5.286c.076.648.276 1.281.596 1.856l.057.1 3.377 5.854-.003-.01.067.142.291.507-3.889 6.764a4 4 0 01-1.116 1.299h-.001v.001l-.003.001a3.984 3.984 0 01-2.398.805h-.01z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://designguidelines.withgoogle.com/ads-branding/google-ads/logos.html#logos-brand-logo-lockups\",hex:\"4285F4\"},\"Google Chrome\":{title:\"Google Chrome\",slug:\"googlechrome\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Google Chrome icon</title><path d=\"M16.214 8.69l6.715-1.679A12.027 12.027 0 0 1 24 11.972C24 18.57 18.569 24 11.968 24c-.302 0-.605-.011-.907-.034l4.905-8.347c.356-.376.655-.803.881-1.271a5.451 5.451 0 0 0-.043-4.748 5.156 5.156 0 0 0-.59-.91zm-3.24 8.575l-2.121 6.682C4.738 23.345 0 18.14 0 11.977 0 9.592.709 7.26 2.038 5.279l4.834 8.377c.18.539 1.119 2.581 3.067 3.327.998.382 2.041.481 3.035.282zM11.973 7.62c-2.006.019-3.878 1.544-4.281 3.512a4.478 4.478 0 0 0 1.237 4.032c1.214 1.186 3.14 1.578 4.734.927 1.408-.576 2.47-1.927 2.691-3.431.272-1.856-.788-3.832-2.495-4.629a4.413 4.413 0 0 0-1.886-.411zM7.046 9.962L2.259 4.963A12.043 12.043 0 0 1 11.997 0c4.56 0 8.744 2.592 10.774 6.675H12.558c-1.811-.125-3.288.52-4.265 1.453a5.345 5.345 0 0 0-1.247 1.834z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://blog.google/press/?product_tag=chrome\",hex:\"4285F4\"},\"Google Cloud\":{title:\"Google Cloud\",slug:\"googlecloud\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Google Cloud icon</title><path d=\"M12.19 2.38a9.344 9.344 0 0 0-9.234 6.893c.053-.02-.055.013 0 0-3.875 2.551-3.922 8.11-.247 10.941l.006-.007-.007.03a6.717 6.717 0 0 0 4.077 1.356h5.173l.03.03h5.192c6.687.053 9.376-8.605 3.835-12.35a9.365 9.365 0 0 0-2.821-4.552l-.043.043.006-.05A9.344 9.344 0 0 0 12.19 2.38zm-.358 4.146c1.244-.04 2.518.368 3.486 1.15a5.186 5.186 0 0 1 1.862 4.078v.518c3.53-.07 3.53 5.262 0 5.193h-5.193l-.008.009v-.04H6.785a2.59 2.59 0 0 1-1.067-.23h.001a2.597 2.597 0 1 1 3.437-3.437l3.013-3.012A6.747 6.747 0 0 0 8.11 8.24c.018-.01.04-.026.054-.023a5.186 5.186 0 0 1 3.67-1.69z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://cloud.google.com/\",hex:\"4285F4\"},\"Google Analytics\":{title:\"Google Analytics\",slug:\"googleanalytics\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Google Analytics icon</title><path d=\"M22.074 24H1.895C.852 24 0 23.147 0 22.104v-4.419c0-1.043.852-1.896 1.895-1.896H7.58V9.474c0-1.042.852-1.894 1.894-1.894h6.331V1.925C15.805.87 16.674 0 17.729 0h4.346C23.13 0 24 .87 24 1.926v20.148C24 23.13 23.13 24 22.074 24z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://analytics.google.com\",hex:\"FFC107\"},\"Google Drive\":{title:\"Google Drive\",slug:\"googledrive\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Google Drive icon</title><path d=\"M4.433 22.396l4-6.929H24l-4 6.929H4.433zm3.566-6.929l-3.998 6.929L0 15.467 7.785 1.98l3.999 6.931-3.785 6.556zm15.784-.375h-7.999L7.999 1.605h8.002l7.785 13.486h-.003z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://developers.google.com/drive/web/branding\",hex:\"4285F4\"},\"Google Hangouts\":{title:\"Google Hangouts\",slug:\"googlehangouts\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Google Hangouts icon</title><path d=\"M12 0C6.2 0 1.5 4.7 1.5 10.5c0 5.5 5 10 10.5 10V24c6.35-3.1 10.5-8.2 10.5-13.5C22.5 4.7 17.8 0 12 0zm-.5 12c0 1.4-.9 2.5-2 2.5V12H7V7.5h4.5V12zm6 0c0 1.4-.9 2.5-2 2.5V12H13V7.5h4.5V12z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://material.google.com/resources/sticker-sheets-icons.html#sticker-sheets-icons-components\",hex:\"0C9D58\"},\"Google Hangouts Chat\":{title:\"Google Hangouts Chat\",slug:\"googlehangoutschat\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Google Hangouts Chat icon</title><path d=\"M12 0A10.357 10.357 0 0 0 1.637 10.363c0 5.427 4.949 9.818 10.363 9.818v3.818c6.3-3.191 10.363-8.333 10.363-13.637A10.358 10.358 0 0 0 12-.001zm.027 4.227c.873 0 1.664.151 2.4.465s1.364.722 1.895 1.254c.532.532.94 1.145 1.24 1.855s.451 1.459.451 2.25c0 .45-.055.86-.15 1.242s-.246.722-.451 1.008c-.205.286-.45.518-.75.682s-.64.246-1.035.246c-.382 0-.735-.096-1.035-.287s-.547-.464-.725-.832a2.586 2.586 0 0 1-.885.832c-.355.191-.765.287-1.242.287a2.923 2.923 0 0 1-2.099-.873A3.066 3.066 0 0 1 9 11.374a3.376 3.376 0 0 1-.232-1.256c0-.45.082-.872.232-1.254.164-.382.368-.709.641-.982.259-.273.574-.491.928-.641s.723-.232 1.105-.232.735.082 1.035.232.559.355.764.6h.096v-.613h1.295v3.832c0 .245.068.464.205.668s.355.312.641.312c.191 0 .354-.054.49-.176s.232-.286.314-.477c.082-.191.136-.424.164-.656a6.67 6.67 0 0 0 .041-.723c0-.614-.123-1.201-.355-1.76a4.897 4.897 0 0 0-.98-1.459c-.423-.423-.914-.749-1.486-.994s-1.187-.367-1.869-.367c-.655 0-1.267.122-1.84.354s-1.064.56-1.486.969c-.423.409-.751.9-.996 1.459-.245.573-.367 1.186-.367 1.855s.122 1.282.367 1.855.586 1.05 1.023 1.459a4.75 4.75 0 0 0 3.287 1.322c.75 0 1.404-.164 1.99-.477l.477 1.199a5.864 5.864 0 0 1-2.455.518c-.873 0-1.664-.149-2.414-.463-.736-.314-1.376-.724-1.908-1.256s-.956-1.145-1.256-1.855c-.3-.709-.449-1.471-.449-2.275s.149-1.555.449-2.277a5.736 5.736 0 0 1 3.164-3.123c.723-.314 1.527-.465 2.414-.465zM11.836 8.4c-.218 0-.436.041-.641.123s-.382.19-.545.34a1.44 1.44 0 0 0-.369.561c-.095.218-.135.462-.135.734s.04.518.135.736c.095.218.219.409.369.559.164.15.341.274.545.342a1.727 1.727 0 0 0 1.282 0c.205-.082.382-.192.545-.342s.287-.327.369-.545c.095-.218.135-.464.135-.75s-.04-.532-.135-.75a1.74 1.74 0 0 0-.369-.545 1.759 1.759 0 0 0-1.186-.463z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://chat.google.com/error/noaccess\",hex:\"00897B\"},\"Google Keep\":{title:\"Google Keep\",slug:\"googlekeep\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Google Keep icon</title><path d=\"M19.995 7.995C19.995 3.6 16.396 0 12 0S4.005 3.6 4.005 7.995c0 2.55 1.2 4.89 3.194 6.405v7.979H8.82V24h6.359v-1.62H16.8V14.4c2.011-1.5 3.195-3.87 3.195-6.405zM8.805 20.774v-1.575h6.391v1.575H8.805zm0-3.194v-1.575h6.391v1.575H8.805zm6.75-4.261l-.359.24v.841H8.805v-.84l-.345-.24c-1.8-1.199-2.85-3.18-2.85-5.324 0-3.525 2.85-6.391 6.39-6.391s6.39 2.851 6.39 6.391c0 2.145-1.05 4.14-2.85 5.324h.015z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://play.google.com/store/apps/details?id=com.google.android.keep\",hex:\"FFBB00\"},\"Google Pay\":{title:\"Google Pay\",slug:\"googlepay\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Google Pay icon</title><path d=\"M24 10l-3.134 7h-.968l1.163-2.45L19 10h1.02l1.49 3.49h.02L22.978 10zM10.983 12.166V15H10V8h2.607a2.48 2.48 0 0 1 1.687.606c.458.377.715.915.706 1.478a1.867 1.867 0 0 1-.706 1.485c-.455.398-1.018.596-1.687.596h-1.624zm-.002-3.304v2.444h1.648c.365.01.718-.122.973-.362.252-.225.395-.533.395-.856 0-.322-.143-.63-.395-.855a1.343 1.343 0 0 0-.973-.371h-1.648zM16.972 10c.627 0 1.122.174 1.485.522.362.348.543.826.543 1.432v2.893h-.811v-.652h-.037c-.351.537-.818.805-1.4.805-.498 0-.914-.153-1.25-.46A1.493 1.493 0 0 1 15 13.39c0-.485.177-.871.53-1.158.353-.287.825-.43 1.415-.431.503 0 .918.096 1.243.287v-.201a1.02 1.02 0 0 0-.35-.78 1.175 1.175 0 0 0-.818-.322c-.474 0-.849.208-1.124.623l-.747-.488c.41-.613 1.018-.92 1.823-.92zm-1.097 3.41a.713.713 0 0 0 .282.575c.187.153.42.234.659.23.357-.001.7-.15.953-.412a1.31 1.31 0 0 0 .422-.967c-.265-.22-.633-.329-1.106-.329-.345 0-.632.087-.862.26-.232.174-.348.387-.348.643zM4.081 8a3.966 3.966 0 0 1 2.73 1.042l-1.164 1.142a2.24 2.24 0 0 0-1.566-.6 2.436 2.436 0 0 0-2.291 1.65 2.351 2.351 0 0 0 0 1.532 2.436 2.436 0 0 0 2.291 1.65c.551 0 1.023-.138 1.39-.381.429-.28.723-.72.814-1.217H4.081v-1.54H7.93c.047.269.07.54.07.813 0 1.217-.444 2.247-1.214 2.943-.676.612-1.604.966-2.705.966a4.09 4.09 0 0 1-3.646-2.204 3.929 3.929 0 0 1 0-3.592A4.09 4.09 0 0 1 4.08 8z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://developers.google.com/pay/api/web/guides/brand-guidelines\",hex:\"5F6368\"},\"Google Play\":{title:\"Google Play\",slug:\"googleplay\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Google Play icon</title><path d=\"M1.22 0c-.03.093-.06.185-.06.308v23.229c0 .217.061.34.184.463l11.415-12.093L1.22 0zm12.309 12.708l2.951 3.045-4.213 2.4s-5.355 3.044-8.308 4.739l9.57-10.184zm.801-.831l3.166 3.292c.496-.276 4.371-2.492 4.924-2.8.584-.338.525-.8.029-1.046-.459-.255-4.334-2.475-4.92-2.835l-3.203 3.392.004-.003zm-.803-.8l2.984-3.169-4.259-2.431S5.309 1.505 2.999.179l10.53 10.898h-.002z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://getsello.com\",hex:\"607D8B\"},\"Google Podcasts\":{title:\"Google Podcasts\",slug:\"googlepodcasts\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Google Podcasts icon</title><path d=\"M1.5 9.68c-.83 0-1.5.67-1.5 1.5V12.81a1.5 1.5 0 1 0 3 0v-1.63c0-.83-.67-1.5-1.5-1.5zM22.5 9.68c-.83 0-1.5.67-1.5 1.5V12.81a1.5 1.5 0 1 0 3 0v-1.63c0-.83-.67-1.5-1.5-1.5zM6.68 14.59c-.83 0-1.5.67-1.5 1.5V17.72a1.5 1.5 0 1 0 3 0V16.1c0-.83-.67-1.5-1.5-1.5zM6.68 4.77c-.83 0-1.5.67-1.5 1.5V11.63a1.5 1.5 0 0 0 3 0V6.26c0-.83-.67-1.5-1.5-1.5zM17.32 4.77c-.83 0-1.5.67-1.5 1.5V7.91a1.5 1.5 0 0 0 3 0V6.27c0-.83-.67-1.5-1.5-1.5zM12 0c-.83 0-1.5.67-1.5 1.5v1.63a1.5 1.5 0 1 0 3 0V1.5C13.5.67 12.83 0 12 0zM12 19.36c-.83 0-1.5.67-1.5 1.5V22.5a1.5 1.5 0 1 0 3 .01v-1.64c0-.82-.67-1.5-1.5-1.5zM17.32 10.9c-.83 0-1.5.68-1.5 1.5v5.33a1.5 1.5 0 0 0 3 0V12.4c0-.83-.67-1.5-1.5-1.5zM12 6.13c-.83 0-1.5.68-1.5 1.5v8.73a1.5 1.5 0 0 0 3 0V7.64c0-.83-.67-1.5-1.5-1.5z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://developers.google.com/search/docs/data-types/podcast\",hex:\"4285F4\"},\"Google Scholar\":{title:\"Google Scholar\",slug:\"googlescholar\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Google Scholar icon</title><path d=\"M10.93 2.045c-.547.366-3.22 2.14-5.938 3.945C2.272 7.794.05 9.286.05 9.304c0 .019.136.11.305.2.167.096 2.85 1.583 5.965 3.31l5.656 3.143.144-.074c.082-.04 2.169-1.232 4.642-2.642l4.493-2.568.027 7.947h2.668V9.319l-3.46-2.32c-4.664-3.124-8.392-5.586-8.484-5.606-.045-.008-.527.287-1.076.652M5.355 16.633l.014 2.005 3.31 1.987 3.31 1.982 3.337-2 3.332-2.005V16.62c0-1.092-.013-1.983-.027-1.983s-1.318.782-2.9 1.741l-3.306 1.996-.431.256-1.32-.791a604.12 604.12 0 0 1-3.286-1.979l-2.005-1.21c-.024-.008-.032.883-.027 1.983\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://scholar.google.com/intl/fr/scholar/images/2x/sprite_20161020.png\",hex:\"4885ED\"},\"Google Search Console\":{title:\"Google Search Console\",slug:\"googlesearchconsole\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Google Search Console icon</title><path d=\"M8.548 1.156L6.832 2.872v1.682h1.716zm0 3.398v.035H6.832v-.035H3.386L0 7.844v3.577h2.826V8.94c0-.525.429-.954.954-.954h16.476c.525 0 .954.43.954.954v2.48h2.754V7.844l-3.386-3.29H17.3v.035h-1.717v-.035zm7.035 0H17.3V2.872l-1.717-1.716zM8.679 1.188V2.84h6.773V1.188zm11.471 7.07a.834.834 0 00-.132.01l-.543.002c-5.216.014-10.432-.008-15.648.01-.435-.063-.794.436-.716.883v2.264h17.812c-.016-.888.045-1.782-.034-2.666-.104-.342-.427-.502-.739-.502zm-15.422.634a.689.698 0 01.689.698.689.698 0 01-.689.697.689.698 0 01-.688-.697.689.698 0 01.688-.698zm2.134 0a.689.698 0 01.689.698.689.698 0 01-.689.697.689.698 0 01-.688-.697.689.698 0 01.688-.698zM.036 11.645v9.156c0 1.05.858 1.908 1.907 1.908h.883V11.645zm21.174 0v11.064h.882c1.05 0 1.908-.858 1.908-1.908v-9.156zM4.057 13.133v6.85h6.137v-6.85zm13.243.021v3.777l-1.708.977-1.708-.977v-3.758a4.006 4.006 0 000 7.23v2.441h3.457v-2.442a4.006 4.006 0 00-.041-7.248zm-13.243 8.26v1.43h7.925v-1.43z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://search.google.com/search-console\",hex:\"458CF5\"},\"GOV.UK\":{title:\"GOV.UK\",slug:\"gov-dot-uk\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>GOV.UK icon</title><path d=\"M2.4 13.031c.261-.64-.04-1.374-.682-1.638-.631-.262-1.362.049-1.623.688-.266.637.038 1.363.668 1.623.632.267 1.368-.037 1.623-.673m.858-3.244c.256-.636-.045-1.37-.691-1.639-.631-.258-1.367.053-1.639.687-.27.638.03 1.369.662 1.629.646.266 1.367-.039 1.639-.677m1.218-1.095c.645.264 1.367-.041 1.637-.675.256-.639-.045-1.375-.676-1.639-.632-.26-1.368.049-1.639.686-.271.638.046 1.367.678 1.626m3.156 1.053c.646.256 1.368-.045 1.64-.676.255-.646-.046-1.383-.691-1.639-.634-.271-1.37.046-1.626.676-.27.632.045 1.368.677 1.625M21.6 13.006c.271.631.993.933 1.639.661.632-.27.933-.992.661-1.639-.271-.646-1.008-.947-1.639-.676-.646.256-.945.992-.676 1.639m.752-2.57c.631-.257.931-.993.676-1.64-.271-.632-1.008-.946-1.639-.677-.646.271-.947.992-.676 1.639.256.632.993.933 1.624.678m-2.78-1.729c.631-.26.932-.992.672-1.631-.27-.646-1.001-.947-1.639-.686-.632.271-.937.992-.67 1.639.27.631 1.007.932 1.638.676m-3.412.858c.631-.271.932-1.007.677-1.639-.271-.646-.993-.947-1.64-.691-.631.271-.932 1.008-.661 1.639.271.632.993.932 1.64.662M9.425 4.935l.093 2.399 1.752-.923c.035.039.079.078.12.107-.181.718-.621 1.914-.896 2.575-.335.812.051 1.744.862 2.078.812.331 1.747-.06 2.083-.872.241-.57.121-1.188-.24-1.623-.391-.678-.781-1.533-.992-2.195.061-.045.105-.105.15-.15l1.895.977.09-2.39-1.969.632c-.016-.031-.031-.061-.045-.075l.766-2.181-2.33-.074.707 2.148c-.061.031-.105.076-.15.137l-1.896-.57zm11.896 9.109c.16.883.188 1.284-.015 1.859-.285-.286-.54-.807-.749-1.594l-.872 2.79c.52-.346.915-.565 1.364-.571-.815 1.713-1.819 2.146-2.461 2.021-.787-.158-1.15-.867-1.012-1.466.175-.842 1.052-1.052 1.448-.067.792-1.566-.52-2.078-1.368-1.624 1.313-1.28 1.468-2.426.426-3.836-1.464 1.106-1.49 2.21-.851 3.772-.842-.985-2.18-.466-1.713 1.113.627-.949 1.432-.346 1.298.565-.109.796-1.163 1.413-2.461 1.292-1.864-.165-1.954-1.457-1.983-2.525.451-.074 1.277.361 1.983 1.354l.286-2.962c-.767.782-1.474.946-2.24.962.271-.781 1.459-2.09 1.459-2.09l-3.729-.045s1.188 1.323 1.443 2.119c-.768-.014-1.459-.164-2.225-.961l.255 2.961c.706-.991 1.534-1.412 1.984-1.338-.045 1.053-.15 2.346-2.015 2.511-1.293.105-2.345-.526-2.449-1.323-.121-.901.691-1.503 1.307-.541.481-1.578-.856-2.104-1.699-1.127.662-1.564.647-2.676-.811-3.789-1.053 1.398-.902 2.541.405 3.85-.842-.467-2.165.029-1.383 1.607.405-.992 1.278-.766 1.458.076.12.601-.24 1.308-1.021 1.457-.646.121-1.639-.315-2.451-2.044.451.016.842.241 1.354.587l-.859-2.783c-.209.781-.48 1.295-.766 1.578-.186-.57-.166-.977.014-1.859l-1.803.613c.922 1.264 1.857 3.021 2.59 6.104 2.275-.376 6.157-.603 8.509-.603 2.345.015 6.229.285 8.494.691.767-3.081 1.713-4.825 2.646-6.073l-1.773-.646-.014-.015z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/alphagov/design-assets/tree/master/Icons\",hex:\"005EA5\"},Gradle:{title:\"Gradle\",slug:\"gradle\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Gradle icon</title><path d=\"M22.7 4.3c-1.5-1.5-3.8-1.5-5.3-.1-.1.1-.1.2-.1.3 0 .1 0 .2.1.3l.5.5c.1.1.3.1.5 0 .4-.3.8-.4 1.3-.4 1.2 0 2.2 1 2.2 2.2 0 .6-.2 1.1-.6 1.5-3 3-7.1-5.4-16.2-1.1-.6.3-.9 1-.6 1.6v.1L6 11.9c.3.6 1.1.8 1.7.5l.7-.4c.8-.5 1.5-1 2.2-1.6.1-.1.4-.1.5 0 .2.1.2.3.1.5l-.1.1c-.7.6-1.5 1.2-2.3 1.7l-.7.3c-.3.2-.6.3-1 .3-.7 0-1.4-.4-1.7-1L3.9 9.7c-2.8 2-4.6 5.9-3.6 10.8 0 .2.2.3.4.3h1.7c.2 0 .3-.1.4-.3.2-1.4 1.4-2.3 2.8-2.1 1.1.1 2 1 2.1 2.1 0 .2.2.3.4.3h1.6c.2 0 .3-.1.4-.3.2-1.4 1.4-2.3 2.8-2.1 1.1.1 2 1 2.1 2.1 0 .2.2.3.4.3H17c.2 0 .4-.2.4-.4 0-2.3.7-4.9 2.4-6.2 5.9-4.6 4.3-8.5 2.9-9.9zm-6.2 6.9l-1.2-.6c0-.4.3-.7.7-.7.4 0 .7.3.7.7.1.3 0 .5-.2.6z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://gradle.com/brand\",hex:\"02303A\"},Grafana:{title:\"Grafana\",slug:\"grafana\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Grafana icon</title><path d=\"M22.999 10.626c-.043-.405-.106-.873-.234-1.384s-.341-1.065-.618-1.661c-.298-.575-.66-1.193-1.15-1.768-.192-.234-.405-.447-.618-.681.341-1.342-.405-2.513-.405-2.513-1.299-.085-2.108.405-2.406.618-.043-.021-.106-.043-.149-.064-.213-.085-.447-.17-.681-.256-.234-.064-.469-.149-.703-.192-.234-.064-.49-.106-.745-.149-.043 0-.085-.021-.128-.021C14.608.766 12.99 0 12.99 0c-1.853 1.193-2.215 2.79-2.215 2.79s0 .043-.021.085c-.106.021-.192.064-.298.085-.128.043-.277.085-.405.149s-.277.106-.405.17c-.277.128-.532.256-.809.405a8.52 8.52 0 0 0-.745.469c-.043-.021-.064-.043-.064-.043-2.492-.958-4.706.192-4.706.192-.192 2.662 1.001 4.323 1.235 4.621-.064.17-.106.319-.17.49a10.658 10.658 0 0 0-.405 1.853c-.021.085-.021.192-.043.277-2.3 1.129-2.981 3.471-2.981 3.471 1.917 2.215 4.174 2.343 4.174 2.343a9.61 9.61 0 0 0 .98 1.448c.149.192.319.362.49.554-.703 2.002.106 3.684.106 3.684 2.151.085 3.556-.937 3.854-1.171l.639.192c.66.17 1.342.277 2.002.298h.873c1.001 1.448 2.79 1.64 2.79 1.64 1.256-1.342 1.342-2.641 1.342-2.939v-.021-.043-.064c.256-.192.511-.383.767-.596.511-.447.937-.98 1.32-1.533.043-.043.064-.106.106-.149 1.427.085 2.428-.894 2.428-.894-.234-1.491-1.086-2.215-1.256-2.343l-.021-.021-.021-.021-.021-.021c0-.085.021-.17.021-.277.021-.17.021-.319.021-.49v-.213-.277-.128c0-.043 0-.085-.021-.128l-.043-.256c-.021-.17-.064-.319-.085-.49a6.327 6.327 0 0 0-.724-1.789 6.634 6.634 0 0 0-1.214-1.448 5.89 5.89 0 0 0-1.533-.98 5.368 5.368 0 0 0-1.682-.469c-.277-.043-.575-.043-.852-.043h-.128-.298c-.149.021-.298.043-.426.064-.575.106-1.107.319-1.576.596s-.873.639-1.214 1.043a4.284 4.284 0 0 0-.767 1.299c-.17.447-.277.937-.298 1.384v.511c0 .064 0 .106.021.17a3.642 3.642 0 0 0 .703 1.81c.256.341.532.596.852.809.319.213.639.362.98.469s.66.149.958.128h.446c.043 0 .085-.021.106-.021.043 0 .064-.021.106-.021.064-.021.149-.043.213-.064.128-.043.256-.106.383-.149.128-.064.234-.128.319-.192.021-.021.064-.043.085-.064a.24.24 0 0 0 .043-.341.298.298 0 0 0-.319-.064c-.021.021-.043.021-.085.043a1.43 1.43 0 0 1-.277.106c-.106.021-.213.064-.319.085-.064 0-.106.021-.17.021h-.361s-.021 0 0 0h-.086c-.022 0-.064 0-.085-.021-.234-.043-.49-.106-.724-.213s-.469-.256-.66-.447c-.213-.192-.383-.405-.532-.66s-.234-.532-.277-.809c-.021-.149-.043-.298-.021-.447v-.128c0 .021 0 0 0 0v-.043-.064c0-.085.021-.149.043-.234a3.114 3.114 0 0 1 .916-1.725c.128-.128.256-.234.405-.319.149-.106.298-.192.447-.256s.319-.128.49-.17c.17-.043.341-.085.511-.085.085 0 .17-.021.256-.021H15.228c.021 0 0 0 0 0h.085a4.046 4.046 0 0 1 1.619.49c.681.383 1.256.958 1.597 1.661.17.341.298.724.362 1.129.021.106.021.192.043.298v.554c0 .106-.021.213-.021.319-.021.106-.021.213-.043.319l-.064.319c-.021.106-.128.405-.192.618s-.362.788-.618 1.129a5.164 5.164 0 0 1-2.002 1.64c-.405.17-.809.319-1.235.383a3.221 3.221 0 0 1-.639.064h-.319c.021 0 0 0 0 0h-.021c-.106 0-.234 0-.341-.021-.469-.043-.916-.128-1.363-.256s-.873-.298-1.278-.511a6.956 6.956 0 0 1-2.108-1.746c-.277-.362-.532-.745-.745-1.15s-.362-.831-.49-1.256a5.489 5.489 0 0 1-.213-1.32v-.49-.17c0-.213.021-.447.064-.681.021-.234.064-.447.106-.681s.106-.447.17-.681.277-.873.469-1.278c.383-.809.873-1.533 1.448-2.108.149-.149.298-.277.469-.405.064-.064.213-.192.383-.298s.341-.213.532-.298c.085-.043.17-.085.277-.128.043-.021.085-.043.149-.064.043-.021.085-.043.149-.064.192-.085.383-.149.575-.213.043-.021.106-.021.149-.043s.106-.021.149-.043.192-.043.298-.085c.043-.021.106-.021.149-.043.043 0 .106-.021.149-.021s.106-.021.149-.021l.17-.043c.043 0 .106-.021.149-.021.064 0 .106-.021.17-.021.043 0 .128-.021.17-.021s.064 0 .106-.021h.149c.064 0 .106 0 .17-.021h.085s.021 0 0 0H15.033c.383.021.767.064 1.129.128a7.234 7.234 0 0 1 2.044.681 7.676 7.676 0 0 1 1.661 1.086c.021.021.064.043.085.085.021.021.064.043.085.085.064.043.106.106.17.149s.106.106.17.149c.043.064.106.106.149.17a7.88 7.88 0 0 1 1.406 1.98c.021.021.021.043.043.085.021.021.021.043.043.085s.043.106.085.149c.021.043.043.106.064.149s.043.106.064.149c.085.192.149.383.213.575.106.298.17.554.234.767a.204.204 0 0 0 .192.149c.106 0 .17-.085.17-.192-.021-.256-.021-.532-.043-.852z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://grafana.com/\",hex:\"F46800\"},Graphcool:{title:\"Graphcool\",slug:\"graphcool\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Graphcool icon</title><path d=\"M21.138 7.929c-1.167-.657-2.633.2-2.868.348l-5.037 2.857c-.744-.591-1.804-.566-2.519.06-.715.625-.881 1.671-.395 2.488s1.486 1.168 2.376.836 1.416-1.252 1.25-2.187l5.023-2.851.032-.019c.33-.209 1.096-.521 1.454-.319.258.146.405.633.417 1.35h-.006v6.301c-.001.588-.314 1.131-.823 1.426l-7.222 4.172c-.51.293-1.137.293-1.646 0l-7.222-4.172c-.509-.295-.822-.838-.823-1.426v-8.34c.001-.588.314-1.131.823-1.425l6.536-3.772c.621.713 1.664.882 2.479.4.815-.48 1.172-1.475.848-2.363-.324-.89-1.236-1.421-2.169-1.266-.934.156-1.623.955-1.641 1.901L3.262 5.823c-.942.542-1.522 1.544-1.524 2.63v8.338c.001 1.086.579 2.088 1.519 2.631l7.221 4.172c.94.541 2.097.541 3.037 0l7.222-4.172c.938-.543 1.517-1.545 1.519-2.629v-6.062h.005c.034-1.422-.347-2.363-1.123-2.802z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.graph.cool\",hex:\"27AE60\"},GraphQL:{title:\"GraphQL\",slug:\"graphql\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>GraphQL icon</title><path d=\"M14.051 2.751l4.935 2.85c.816-.859 2.173-.893 3.032-.077.148.14.274.301.377.477.589 1.028.232 2.339-.796 2.928-.174.1-.361.175-.558.223v5.699c1.146.273 1.854 1.423 1.58 2.569-.048.204-.127.4-.232.581-.592 1.023-1.901 1.374-2.927.782-.196-.113-.375-.259-.526-.429l-4.905 2.832c.372 1.124-.238 2.335-1.361 2.706-.217.071-.442.108-.67.108-1.181.001-2.139-.955-2.14-2.136 0-.205.029-.41.088-.609l-4.936-2.847c-.816.854-2.171.887-3.026.07-.854-.816-.886-2.171-.07-3.026.283-.297.646-.506 1.044-.603l.001-5.699c-1.15-.276-1.858-1.433-1.581-2.584.047-.198.123-.389.224-.566.592-1.024 1.902-1.374 2.927-.782.177.101.339.228.48.377l4.938-2.85C9.613 1.612 10.26.423 11.39.088 11.587.029 11.794 0 12 0c1.181-.001 2.139.954 2.14 2.134.001.209-.03.418-.089.617zm-.515.877c-.019.021-.037.039-.058.058l6.461 11.19c.026-.009.056-.016.082-.023V9.146c-1.145-.283-1.842-1.442-1.558-2.588.006-.024.012-.049.019-.072l-4.946-2.858zm-3.015.059l-.06-.06-4.946 2.852c.327 1.135-.327 2.318-1.461 2.645-.026.008-.051.014-.076.021v5.708l.084.023 6.461-11.19-.002.001zm2.076.507c-.39.112-.803.112-1.192 0l-6.46 11.189c.294.283.502.645.6 1.041h12.911c.097-.398.307-.761.603-1.044L12.597 4.194zm.986 16.227l4.913-2.838c-.015-.047-.027-.094-.038-.142H5.542l-.021.083 4.939 2.852c.388-.404.934-.653 1.54-.653.627 0 1.19.269 1.583.698z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://graphql.org/\",hex:\"E10098\"},Grav:{title:\"Grav\",slug:\"grav\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Grav icon</title><path d=\"M12 0C5.373 0 0 5.373 0 12s5.373 12 12 12 12-5.373 12-12S18.627 0 12 0zm6.489 13.965c-1.251-.825-1.965-1.523-2.589-2.777-.427.859-1.421 2.135-3.098 3.139-.84 2.61-4.823 7.605-6.113 6.885-.381-.195-.452-.48-.367-.765.093-.704 1.566-2.34 1.566-2.34s.029.345.494 1.065c-.629-1.936 1.021-4.305 1.456-5.131.689-.209.734-1.095.734-1.095.046-1.364-.569-2.34-1.155-2.94.421.525.556 1.306.57 2.025v.255c-.029.601-.21 1.41-.585 1.41v.016c-.39-.016-.885.074-1.319.21l-.961.239s.51-.015.78.226c-.314.51-1.005 1.125-1.771 1.484-1.109.525-1.439-.51-.869-1.17.135-.165.285-.3.404-.404-.09-.09-.135-.21-.149-.36-.075-.345-.045-.78.45-1.485.09-.149.21-.3.345-.449l.015-.016.016-.015v-.015c.029-.046.074-.076.104-.12.57-.585 1.485-1.2 2.911-1.74 1.694-2.49 2.309-2.956 2.309-2.956.181-.179.511-.419.615-.479-.87-1.515-1.049-3.646-.824-4.215-.03.03-.046.06-.061.105.09-.195.135-.255.225-.36.24-.27 1.035-.42 1.336.18.15.315.18.735.18 1.035-.645-.029-1.215.69-1.215.69s.524-.24 1.186-.255c0 0 .179.164.389.449-.284.556-.779 1.725-.42 2.971.061.24.15.45.256.629.015.016.015.016.015.031l.03.029c.585.886 1.649.976 1.649.976-.495-.24-.915-.646-1.169-1.125-.136-.255-.227-.48-.271-.646-.285-1.08.135-1.725.375-2.145.54-.84 1.544-1.351 2.609-1.23 1.5.165 2.581 1.53 2.399 3.03-.104.915-.659 1.681-1.409 2.085.181.494-.015 1.08-.015 1.08.449.57.479.9.465 1.215-.585-.09-1.141.301-1.141.301s1.111-.256 1.756.314c.42.449.704.87.869 1.17.24.435 1.35.465 1.229 1.23-.135.779-.989.779-2.31-.09l.074-.151zm-4.824-4.61c-.22-.219-.574-.219-.795 0l-.465.468c-.222.21-.222.57 0 .796l.51.51c.222.225.577.21.795 0l.47-.466c.221-.225.221-.585 0-.794l-.515-.525v.011zm-2.205-.186c-.14.14-.14.368 0 .511.141.138.368.138.51 0 .14-.143.14-.371 0-.511-.142-.141-.369-.141-.51 0zm1.269-.252c.142-.139.142-.366 0-.51-.141-.138-.367-.138-.51 0-.139.144-.139.371 0 .51.142.142.369.142.51 0zm5.385-1.304c.591-1.131-.247-1.791-.825-2.332-.924-.87-1.846-1.245-2.9-.029-1.052 1.199-.383 2.609.58 3.284.96.69 2.535.226 3.135-.915l.01-.008zm-1.595-.463c-.372-.445.322-1.252.757-.77.8.89-.387 1.216-.757.77z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://getgrav.org/media\",hex:\"221E1F\"},Gravatar:{title:\"Gravatar\",slug:\"gravatar\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Gravatar icon</title><path d=\"M12 0c-1.326 0-2.4 1.074-2.4 2.4v8.4c0 1.324 1.074 2.398 2.4 2.398s2.4-1.074 2.4-2.398V5.21c2.795.99 4.799 3.654 4.799 6.789 0 3.975-3.225 7.199-7.199 7.199S4.801 15.975 4.801 12c0-1.989.805-3.789 2.108-5.091.938-.938.938-2.458 0-3.396s-2.458-.938-3.396 0C1.344 5.686 0 8.686 0 12c0 6.627 5.373 12 12 12s12-5.373 12-12S18.627 0 12 0\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://automattic.com/press\",hex:\"1E8CBE\"},Greenkeeper:{title:\"Greenkeeper\",slug:\"greenkeeper\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Greenkeeper icon</title><path d=\"M12.04 22.547a2.206 2.206 0 0 1-2.014-3.108l-2.699-1.8a2.201 2.201 0 1 1 .42-.626l2.702 1.8c.082-.085.172-.164.267-.236l-4.33-8.659a2.209 2.209 0 1 1 .672-.343l4.33 8.659c.077-.024.156-.044.235-.059v-4.128a2.206 2.206 0 0 1 0-4.333v-3.89a2.206 2.206 0 1 1 .755.014v3.866a2.205 2.205 0 0 1 0 4.359v4.097c.082.013.164.03.244.052l4.32-8.638a2.202 2.202 0 1 1 .672.344l-4.309 8.617c.1.07.194.148.28.233l2.616-1.776a2.209 2.209 0 1 1 .44.613l-2.615 1.777a2.206 2.206 0 0 1-1.986 3.165zM12 24C5.373 24 0 18.628 0 12a12 12 0 0 1 3.515-8.485c4.686-4.686 12.284-4.686 16.97 0s4.687 12.284 0 16.97A11.921 11.921 0 0 1 12 24zM12 .755C5.79.755.755 5.79.755 12c0 2.982 1.185 5.843 3.294 7.951 4.376 4.407 11.495 4.433 15.902.057s4.432-11.496.057-15.903A11.173 11.173 0 0 0 12 .755z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://greenkeeper.io/\",hex:\"00C775\"},GreenSock:{title:\"GreenSock\",slug:\"greensock\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>GreenSock icon</title><path d=\"M13.473 23.948c-.311-.053-.639-.2-.82-.365a.702.702 0 0 1-.198-.487c0-.18.09-.44.242-.696a2.2 2.2 0 0 0 .209-.465c.03-.113.096-.3.147-.417l.091-.212.024-1.436c.013-.79.037-1.526.053-1.638a4.94 4.94 0 0 1 .253-.962l.084-.209-.123-.073c-.115-.069-.21-.168-.58-.608-.457-.54-1.057-.836-1.908-.94a16 16 0 0 0-.84-.057c-1.252-.058-1.966-.319-2.61-.952-.48-.474-.731-1.025-.833-1.836-.138-1.098-.29-1.663-.57-2.12a2.035 2.035 0 0 0-.237-.315l-.114-.113-.25.16c-.139.088-.329.203-.423.255a8.301 8.301 0 0 0-.896.571c-.696.507-1.459 1.142-1.877 1.562-.188.188-.287.267-.327.262-.288-.043-.066-1.28.396-2.21.595-1.197 1.593-2.303 2.752-3.051.95-.613 2.485-1.456 3.196-1.753 1.26-.527 2.892-1.098 4.01-1.403.236-.064.381-.122.477-.19.22-.153.434-.225.681-.23.206-.003.226-.01.425-.14.235-.152.302-.162.538-.08l.154.055.187-.127.188-.127.27.006c.205.004.299-.007.387-.046.114-.05.118-.056.15-.245.072-.406.08-.61.037-.854-.058-.324-.063-1.584-.008-1.829.059-.266.097-.319.295-.417.297-.147.519-.188 1.032-.188.624 0 .94.084 1.174.31.212.206.248.68.137 1.8-.064.642-.072.823-.055 1.244.01.271.027.524.037.561.017.065.032.069.259.074.221.004.26.014.471.125.204.106.356.234.386.325.006.02.04.021.104.003.118-.035.225.003.309.109.051.065.083.078.203.078.16 0 .216.038.349.234a.598.598 0 0 0 .246.2c.22.11.515.414.63.654.175.362.212.777.101 1.154-.04.14-.04.145.042.282.174.29.237.65.167.954l-.041.18.118.117c.583.583.497 1.531-.215 2.38-.076.09-.165.232-.198.318-.14.363-.294.618-.499.828l-.204.21h-.214c-.21 0-.505-.07-.685-.165-.075-.039-.08-.038-.065.01.05.172.164.87.205 1.255.063.594.044 1.458-.04 1.829a2.85 2.85 0 0 1-.297.785c-.076.126-.083.155-.066.304.024.217-.027.576-.115.813-.104.277-.143.407-.166.546-.02.122-.02.123.066.123.115 0 .175.068.175.199 0 .06-.05.374-.112.7-.171.908-.182 1.013-.184 1.895-.003.909-.004.902.204 1.037l.464.302a6.37 6.37 0 0 0 1.276.656c.653.258.743.324.743.544 0 .095-.019.133-.1.211-.252.243-.744.297-1.737.192a16.668 16.668 0 0 0-1.55-.075c-1.365-.02-1.567-.067-1.745-.408-.102-.195-.084-.45.059-.868a5.86 5.86 0 0 0 .163-.56c.093-.455.03-.993-.188-1.604l-.185-.518c-.186-.528-.286-1.494-.176-1.712.02-.04.054-.05.146-.044l.119.01.096-.204c.075-.158.158-.264.38-.488l.285-.286-.014-.182c-.014-.174-.243-1.027-.276-1.025-.009 0-.073.088-.144.195-.17.258-.552.658-.766.802-.094.064-.172.137-.172.162-.002.103-.094.31-.201.455-.106.143-.113.163-.097.29.024.183-.033.773-.104 1.08a3.482 3.482 0 0 1-.257.665c-.27.56-.472 1.058-.525 1.29a5.534 5.534 0 0 0-.068.673c-.013.264-.04.524-.06.577-.026.075-.027.132-.002.246.018.082.03.266.027.41-.004.2.012.33.07.564.1.397.122.647.073.796-.03.092-.064.129-.166.18-.237.12-.899.185-1.259.123zm.95-.318c.137-.039.252-.159.252-.263 0-.045-.04-.183-.087-.306-.09-.23-.254-.837-.254-.938 0-.054.004-.055.085-.012l.085.045-.002-.11a1.326 1.326 0 0 0-.064-.295c-.074-.223-.084-.228-.554-.254l-.322-.017-.115.113a1.03 1.03 0 0 0-.169.22c-.052.103-.072.255-.038.29.008.009.085 0 .17-.02a.755.755 0 0 1 .155-.029c0 .005-.086.073-.192.151-.47.348-.633.564-.633.837 0 .286.266.508.688.574.29.046.854.054.995.014zm6.354-.465c.117-.142.103-.285-.046-.45a1.223 1.223 0 0 0-.292-.22 3.668 3.668 0 0 1-.328-.195c-.086-.06-.362-.22-.612-.36a8.634 8.634 0 0 1-.527-.306l-.07-.055v-1.075c0-1.06-.002-1.073-.058-1.058-.273.075-.726.109-1.302.098l-.619-.01.088.218c.167.416.254.97.253 1.606 0 .238-.014.326-.073.492a8.78 8.78 0 0 0-.087.249c-.011.035.032.06.194.108.115.035.289.071.387.082l.178.018-.018.181c-.02.205.003.418.054.486.029.038.149.052.69.078.412.02.858.062 1.209.114.305.045.633.084.73.085.162.003.18-.003.249-.086zm-6.252-1.831c.015-.01.037-.222.047-.471.031-.7.057-.8.41-1.589.287-.644.441-1.245.427-1.673l-.008-.254-.107.106c-.227.225-.071-.13.197-.447.203-.24.273-.375.307-.587.014-.086.047-.13.18-.23.502-.385.867-.87 1.103-1.463.056-.141.198-.62.315-1.066.218-.826.335-1.179.44-1.333.04-.059.055-.068.045-.029-.06.235-.08.33-.13.637-.032.191-.09.564-.128.828-.078.532-.156.876-.261 1.144l-.07.178.189.485c.193.497.283.855.302 1.205l.01.192-.154.032a.784.784 0 0 0-.497.314c-.136.19-.208.348-.173.384.015.015.207.05.425.075.342.04.47.042.919.013a5.73 5.73 0 0 0 .579-.056c.042-.015.083-.101.154-.323.162-.51.193-.693.174-1.05l-.016-.317.082-.105c.192-.244.34-.682.4-1.19.075-.626-.06-1.936-.315-3.062-.12-.533-.17-.854-.17-1.09v-.207l-.193.02c-.687.076-1.518.055-2.028-.05-.276-.056-.976-.26-1.13-.329l-.119-.053-.017.135a2.093 2.093 0 0 1-.04.226c-.023.085-.014.102.131.246.18.18.236.276.236.402 0 .075-.045.138-.263.367-.16.168-.364.345-.52.449l-.256.172-.106.376c-.394 1.39-.468 2.649-.21 3.554l.064.226-.125.155c-.47.592-.746 1.041-.788 1.29-.008.05-.048.215-.088.367-.1.386-.178.953-.212 1.566a43.822 43.822 0 0 1-.104 1.539l-.017.152.195.06c.108.033.273.073.367.087.174.028.499.023.548-.008zm3.793-2.148c.303-.018.581-.066.635-.11.023-.018.05-.1.06-.18l.017-.148-.24.053a5.127 5.127 0 0 1-.577.078 9.474 9.474 0 0 1-1.382-.04c-.152-.023-.153-.022-.103.177.037.15.045.154.445.185.266.02.634.016 1.145-.015zm-.255-.68c.396-.033.894-.118.99-.17.031-.017.061-.074.072-.139l.036-.208.018-.099-.096.02c-.433.091-.762.118-1.42.118-.639 0-.712-.006-.88-.063a.603.603 0 0 0-.206-.048c-.028.017-.03.24-.005.395.015.095.03.111.125.138.297.08.796.101 1.366.055zm-7.249-3.523c1-.286 2.308-1.137 3.377-2.197.35-.348.39-.397.437-.55l.064-.199c.007-.016-.056-.045-.138-.065-.216-.052-.377-.174-.379-.288 0-.066-.04-.132-.15-.255-.187-.208-.233-.298-.253-.497l-.016-.158-.216-.158c-.124-.09-.564-.332-1.028-.565a14.706 14.706 0 0 1-1.039-.561c-.39-.264-.653-.576-.8-.947-.029-.076-.063-.138-.075-.138-.033 0-.91.85-1.286 1.247-.924.977-1.563 1.825-1.964 2.61-.1.195-.21.425-.242.511l-.06.157.073.26c.04.143.13.373.2.51.246.484.541.777 1.024 1.015.52.257.98.346 1.75.337.416-.005.535-.016.721-.07zM2.921 11.56c.657-.582 1.563-1.22 2.674-1.882.727-.433 3.533-1.837 4.826-2.414.234-.105.446-.201.47-.215.023-.013.091-.18.151-.369.276-.869.412-1.041.908-1.153.063-.014.078-.034.078-.099 0-.11.078-.374.145-.491.05-.09.051-.095.005-.082-.027.009-.19.056-.363.106-2.38.687-4.462 1.6-6.26 2.742-1.92 1.22-3.022 2.68-3.343 4.429l-.024.13.232-.231c.127-.127.353-.339.501-.47zm17.677.33c.19-.098.487-.548.597-.902a.812.812 0 0 1 .182-.338c.292-.32.531-.905.532-1.304 0-.62-.349-.859-.863-.592-.064.033-.121.055-.127.048-.029-.029.117-.17.29-.28.233-.15.277-.24.277-.566 0-.271-.069-.493-.225-.733-.07-.105-.098-.177-.087-.218l.072-.264c.096-.347.061-.744-.088-.997-.227-.385-.506-.573-.894-.602l-.225-.017.134.147c.392.429.583.963.508 1.42-.039.232-.077.28-.303.372l-.13.053.015.179c.026.295-.024.508-.212.905-.093.198-.164.376-.157.395.025.067.28.195.483.244l.2.048-.125.04c-.161.053-.198.126-.199.397 0 .245.035.346.217.616.08.118.135.237.144.308.015.111.01.118-.08.151a1.52 1.52 0 0 1-.31.05c-.367.023-.395.033-.558.19-.15.143-.153.151-.153.307 0 .215.08.645.132.704.064.073.436.255.58.283a.544.544 0 0 0 .373-.044zm-5.41-.294c.239-.187.425-.374.532-.535.065-.098.069-.117.036-.197-.052-.127-.411-.45-.611-.547a1.463 1.463 0 0 0-.418-.12l-.246-.034-.154-.192c-.314-.39-.49-.693-.742-1.282-.216-.502-.409-.795-.713-1.082-.125-.118-.217-.215-.206-.215.012 0 .161.073.333.163.288.151.321.162.451.146.465-.056.873-.591 1.024-1.34.043-.214.127-.429.218-.557.004-.005.182.115.395.267.534.38.652.436.955.448.202.008.314-.008.672-.094.765-.186 1.594-.262 2.1-.193.285.039.692.163 1 .306.301.14.359.148.457.062.08-.07.081-.08.08-.342-.002-.386-.144-.804-.36-1.053-.11-.129-.415-.34-.72-.501a12.227 12.227 0 0 1-.327-.178c-.142-.083-.309-.073-.752.044-.515.135-.652.133-1.243-.018-.499-.128-.532-.13-1.022-.053-.261.041-.918.017-1.138-.041a4.228 4.228 0 0 1-.325-.104c-.19-.071-.522-.083-.822-.03-.6.107-1.054.43-1.218.87-.084.224-.073.329.042.401.177.112.416.421.416.54 0 .01-.056-.041-.125-.113-.166-.174-.32-.251-.5-.251a.62.62 0 0 0-.55.362 3.846 3.846 0 0 0-.133.42c-.11.402-.206.612-.412.892-.186.253-.211.366-.146.651.164.719.448 1.011 1.639 1.686.625.354.948.553 1.182.729.179.133.184.14.168.243-.037.233.112.49.406.695.075.052.122.107.122.143 0 .072.196.17.343.17.08 0 .145-.034.313-.166zm4.815-1.314c.454.013.479-.019.235-.301-.254-.295-.323-.532-.23-.794l.037-.102-.159-.078a1.167 1.167 0 0 0-.163-.072 7.965 7.965 0 0 0-.079.31c-.058.24-.13.856-.131 1.12 0 .023.038.013.105-.028.092-.055.14-.062.385-.055zm-1.518-.025c.273-.015.556-.036.63-.046l.134-.018.017-.452c.023-.64.115-1.018.393-1.622.198-.43.281-.807.24-1.086-.018-.122-.025-.13-.188-.201a4.295 4.295 0 0 0-.934-.253c-.31-.045-1.214-.019-1.555.045-.14.026-.397.08-.57.121-.426.1-.652.087-.976-.055-.32-.141-.524-.268-.717-.448-.151-.141-.165-.148-.206-.101-.03.035-.047.14-.057.368-.014.347-.066.53-.22.777a.832.832 0 0 0-.086.16c0 .012.119.146.264.296.499.52.744.654 1.138.624.13-.01.22-.006.22.01 0 .029-.254.23-.361.286-.048.025-.06.053-.052.113l.06.408c.036.236.064.343.1.375.093.08.577.33.88.452.401.163.617.221.924.247.373.031.381.031.922 0zm-3.23-.427c.008-.015-.022-.24-.07-.502-.063-.356-.098-.485-.137-.518-.03-.024-.173-.128-.319-.231a5.503 5.503 0 0 1-.537-.452l-.271-.264-.142.075-.154.083a.7.7 0 0 0 .064.176c.04.093.126.323.19.51.165.489.291.723.616 1.148l.124.161.23.036c.126.02.257.046.291.059.056.021.063.012.08-.115a.755.755 0 0 1 .034-.166zm4.948-4.86c.2-.019.234-.05.147-.138-.052-.053-.179-.059-.28-.012-.068.031-.082.024-.187-.09-.11-.122-.116-.125-.254-.108-.125.015-.144.01-.16-.041a1.078 1.078 0 0 0-.18-.226.842.842 0 0 0-.325-.23c-.243-.092-.378-.082-.609.045-.667.365-.64.361-1.283.197-.603-.154-1.054-.307-1.197-.407-.12-.083-.379-.17-.593-.2-.16-.022-.264.013-.416.14l-.08.066.072.128c.102.181.092.191-.062.06-.163-.14-.357-.234-.485-.235-.089 0-.355.115-.387.168-.009.014.073.033.181.043.115.01.271.048.376.093.272.116.414.154.664.18.273.026.771-.005.828-.053.029-.025.115-.029.296-.015.238.018.337.04.903.193.328.09.558.083.949-.026.18-.05.406-.1.501-.11.16-.017.192-.01.44.103.4.18.61.296.728.4.117.1.13.103.413.076zm-2.228-.684l.238-.124-.005-.245a11.964 11.964 0 0 0-.022-.495l-.017-.251-.238.184c-.141.11-.278.192-.339.203-.171.033-1.016 0-1.096-.042a2.31 2.31 0 0 1-.291-.259l-.22-.22-.003.13c0 .07-.011.192-.024.268-.022.138-.02.142.13.333.084.107.152.202.152.212 0 .076 1.128.426 1.382.43.081 0 .184-.036.353-.124zm-.452-.889c.282-.054.42-.258.523-.773.11-.554.166-1.425.113-1.797-.047-.334-.419-.485-1.136-.461-.444.015-.628.059-.779.187-.094.08-.096.087-.137.457-.08.711.036 1.724.24 2.105.097.183.184.25.365.28.203.035.635.036.811.002z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://greensock.com/\",hex:\"88CE02\"},Groovy:{title:\"Groovy\",slug:\"groovy\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Groovy icon</title><path d=\"M11.997 6.012S10.315 8.8 9.516 10.155c-.155.058-.172.041-.341.207-.41-.47-.897-.041-1.028.22-.057-.566-.151-.567-.279-.694.074-.496.316-1.305-.241-1.884-1.078-.727-2.326 1.05-3.021 1.982l-.375.622c-1.546-.032-2.763.008-4.231-.021 1.79.67 1.864.686 4.026 1.506 0 .066.161.372.34.552.147.15.308.234.389.284-.106.054-.32.138-.385.258-.292.546.139.672.418 1.107.315.568.382.944 1.126.625.254-.11.562-.148.758-.21-.693 1.094-.87 1.392-2.083 3.274l.012.004c4.85-1.893 4.974-1.942 7.373-2.89 3.448 1.338 3.646 1.448 7.432 2.891-.529-.826-.89-1.343-1.274-1.995.151-.013.483-.046.777-.233.213-.135.463-.288.688-.574.443-.565.551-1.277.39-2.166-.078-.423-.235-.834-.213-.85 2.061-.778 2.304-.862 4.226-1.587-2.31.034-2.422.01-4.591.016-.036-.414-.244-.627-.882-.606-.238.039-.389.12-.5.445-.357-.657-.85-.464-1.06-.14-.275-.282-.917-.377-1.24-.17-.238-.112-.514-.112-.757.177-.175-.146-.23-.188-.614-.342-.886-1.497-1.622-2.692-2.36-3.951zm.012.802c.35.535 1.552 2.61 1.849 3.074-.337.023-.668.202-.918.562-.217-.224-.47-.445-.917-.463-.544-.093-.834.148-1.2.568-.108-.365-.53-.45-.896-.28.327-.519 1.872-3.122 2.082-3.46zM7.45 9.128c-.05 1.434-1.068 2.712-1.798 2.245-.551-.449.149-1.584.59-1.985-.033.307.246.498.023.77-.446.543-.27.936-.078.996.513.162 1.004-1.227 1.004-2.201 0-.625-.366-.613-1.086.136-.983 1.022-1.513 2.012-1.16 2.69.197.38.485.651.959.594.925-.11 1.483-1.254 1.543-1.988.148-.003.109.01.148-.02 0 .129.177.755.317 1.166.183.702.964 2.11-1.369 2.658-.44.11-.614.148-1.05.32-.213-.443-.263-.585-.697-1.013.588-.205.593-.185.972-.317 1.467-.51 1.908-.947 1.857-1.57 0 0 .018-.32-.185-.588a2.613 2.613 0 0 1-.293.645c-.437.68-1.296 1.101-2.06.833-.417-.146-.596-.466-.596-1.015 0-.703 1.601-2.735 2.387-3.08.555-.165.579.293.571.724zm6.502 1.3c.26.006.543.133.735.34.594.64.529 1.417.163 1.905-.435.581-1.532.324-1.791-.488-.12-.378.095-1.312.475-1.624a.628.628 0 0 1 .418-.132zm-2.113.066a.502.502 0 0 1 .117.017c.503.03.61.313.701.56.231.626.173 1.212-.301 1.691-.711.719-1.54.401-1.536-.567.014-.69.443-1.715 1.02-1.7zm1.868.038c-.383.287-.432 1.023-.08 1.296.138.13.215.22.613.256.273.024.704-.253.725-.527.01-.125-.013-.333-.312-.67-.252-.283-.579-.349-.661-.3-.265.156.021.28.125.383.162.163.2.234.125.282a.447.447 0 0 1-.372.057c-.105-.049-.456-.246-.163-.777zm3.759.003c.167.26.215.316.402.965.24.838.546 1.163.816 1.01.74-.418.148-1.476-.113-1.974.167-.002.134.007.286.005.12.471.086.387.407 1.813.385 1.706.442 2.16-.528 2.926-.446.352-1.103.37-1.667.34l-.636-.095c.438-.287.545-.557.542-1.116 1.278.535 1.959.132 2.23-.526.132-.317.086-.735-.04-1.471.008.6-.005.71-.084 1.007-.158.595-.547.76-.812.34-.102-.163-.345-.702-.42-1.282-.075-.58-.132-1.395-.5-1.736.04-.08.082-.17.117-.206zm-1.247.01c.258.068.572.204.74.52.234.436.388.668.376 1.447-.014.832-.34 1.055-.557 1.086-.278.04-.762.034-1.049-1.598-.095-.541-.268-1.056-.45-1.224.09-.11.097-.096.165-.204.091.1.17.27.298.777.202.808.387.975.745 1.02.558.072.778-.78.318-1.391-.1-.134-.365-.307-.503-.236.008.236.113.162.114.318-.026.185-.053.219-.113.32-.142-.056-.21-.078-.334-.291-.157-.31-.055-.6.25-.544zm-4.597.076c-.263.185-.594.8-.304 1.35.143.205.297.372.638.3.245-.051.671-.34.73-.749.052-.35-.456-1.028-.738-.87-.327.183-.128.314.074.511.185.18.052.289-.077.342-.258.106-.403.003-.467-.203-.065-.205-.01-.38.144-.68zm-2.867.064c.056.172.1.402.218.624.028.023.132 0 .269-.157.086-.1.185-.238.357-.463.104.095.113.166.142.219.073.13.225.12.273.106.168-.167.195-.275.306-.29.01.216.021.35-.257.677a.535.535 0 0 1-.501.172c-.12-.034-.199-.108-.389-.205-.258.04-.19.315-.143.546.12.611.5.855.832.675.116-.062.09-.062.312-.153-.038.388-.06.463.01.896-.541.301-.982.25-1.102-.506-.091-.632-.261-1.4-.415-1.556-.145-.147-.205-.195-.205-.195l.293-.39zm-7.114.082c.753.01 1.602.01 2.506.017-.13.318-.175.54-.193.854-.422-.163-1.877-.684-2.313-.871zm20.723.01c-.997.359-1.715.637-2.677 1.004-.105-.45-.124-.588-.219-.994 1.601-.005 1.628-.002 2.896-.01zm-6.978 2.04c.105.43.253.641.253.641.202.348.454.545.84.645.085.136.115.163.148.236.037.457.01.514-.344.774-.209.204-.218.497-.003.769.231.22.474.298 1.375.064.174.3.418.653.776 1.217-1.206-.455-2.868-1.103-6.43-2.49 0 0-4.169 1.62-6.404 2.491.935-1.474 1.012-1.599 1.677-2.63.225-.089.149-.053.349-.155.459-.245.827-.61 1.028-1.145.368.83.779.925 1.636.655.177-.082.38-.2.424-.518.46.413 1.432.49 2.142-.382.612.717 2.001.785 2.533-.171zm2.157.865s.04.129.064.169c-.101.003-.213 0-.213 0a.905.905 0 0 0 .149-.17z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://groovy-lang.org/\",hex:\"4298B8\"},Groupon:{title:\"Groupon\",slug:\"groupon\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Groupon icon</title><path d=\"M3.316 20.334C5.618 22.736 8.554 24 12.012 24c3.988 0 7.739-1.95 9.978-5.163 1.353-1.95 2.01-4.158 2.01-6.755 0-.484-.032-1.006-.063-1.529H10.595v4.61h6.687c-1.155 2.012-3.094 3.12-5.27 3.12-3.229 0-6.125-2.824-6.125-6.497 0-3.315 2.699-6.069 6.125-6.069 1.844 0 3.355.749 4.811 2.239h6.52C21.468 3.019 17.084 0 12.083 0c-3.323 0-6.22 1.17-8.53 3.409C1.25 5.647 0 8.572 0 11.754c-.008 3.417 1.108 6.271 3.316 8.58z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://brandplaybook.groupon.com/guidelines/logo/\",hex:\"53A318\"},Gulp:{title:\"Gulp\",slug:\"gulp\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Gulp icon</title><path d=\"M15.156 19.432l.636-1.084s-1.444.591-3.86.591c-2.418 0-3.84-.568-3.84-.568l.711 1.183.252 3.729c0 .403 1.314.718 2.936.718 1.623 0 2.938-.314 2.938-.718l.229-3.835v-.016zm.615-7.046c-.769.046-1.153.903-1.539 1.805-.143.33-.63 1.737-.948 1.563-.318-.173.413-1.329.619-2.017-.237.174-1.105.849-1.329.215-.358.314-1.129.48-1.042-.329-.191.345-.621.823-1.139.614-.673-.255.395-2.411.66-2.307.266.121-.053.6-.136.794-.186.419-.398.958-.255 1.063.24.194.904-.703.919-.719.124-.165.479-1.229.763-1.107.285.134-.711 1.541-.34 1.826.076.06.383-.03.569-.239.12-.12.078-.42.479-1.378.404-.959.764-2.156 1.039-2.066s.049.703-.051.943c-.464 1.078-1.268 2.844-.89 2.71.374-.135.569-.135.943-.569.374-.434.345-1.152.599-1.137.24.014.21.254.15.418.24-.27 1.152-.868 1.363-.284.254.688-1.304 1.692-.914 1.632.375-.045.988-.434 1.258-.793l.719-6.5s-.734.6-5.361.6-5.284-.584-5.284-.584l.613 5.93c.33-.928 1.108-2.814 2.322-2.74.554.03 1.303 1.109.658 1.139-.27.015-.3-.539-.614-.614-.239-.046-.554.135-.763.345-.404.404-1.304 2.006-1.184 2.801.15 1.018 1.407-.346 1.617-.75.149-.283.254-1.138.568-1.048.33.09-.029.974-.27 1.737-.27.869-.404 1.781-.732 1.676-.33-.104.209-1.227.178-1.422-.313.299-.883 1.02-1.631.659l.374 3.699s1.019.793 4.073.793 4.118-.793 4.118-.793l.479-4.283c-.389.39-1.617 1.063-1.692.3-.059-.614 1.333-1.498.974-1.514l.06-.069zM17.346.669l-2.659 2.8-.486 1.901c1.881.12 3.189.386 3.189.694 0 .419-2.414.757-5.391.757s-5.39-.343-5.39-.763c0-.419 2.414-.764 5.391-.764.423 0 .844 0 1.264.016l.561-2.276L16.65.039c.068-.09.28-.015.474.15.194.149.299.344.239.434v.03l-.017.016zm-3.834 5.795s-.523 0-.61-.08c-.022-.025-.036-.058-.036-.09 0-.058.039-.091.09-.11l.044.075c-.021.006-.029.015-.033.023 0 .041.314.069.555.066.239-.003.531-.023.533-.064 0-.012-.023-.023-.061-.033l.045-.072c.063.02.117.058.117.121 0 .11-.141.128-.23.141-.107.015-.412.023-.412.023h-.002z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/gulpjs/artwork/blob/master/gulp.svg\",hex:\"DA4648\"},Gumroad:{title:\"Gumroad\",slug:\"gumroad\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Gumroad icon</title><path d=\"M15.826 15.069a1.018 1.018 0 1 1-.001 2.036 1.018 1.018 0 0 1 0-2.036zM21.327 1.11a1.018 1.018 0 1 1 .001 2.036 1.018 1.018 0 0 1 0-2.036zM3.322 3.107h16.116a2.13 2.13 0 0 0 1.89 1.151c1.174 0 2.129-.955 2.129-2.13A2.131 2.131 0 0 0 21.327 0c-.89 0-1.654.55-1.97 1.329H3.321C1.764 1.329.543 2.51.543 4.019v17.156C.543 22.706 1.816 24 3.322 24h17.155c1.51 0 2.738-1.267 2.738-2.825V10.998c0-1.532-1.228-2.78-2.738-2.78H10.3c-1.553 0-2.866 1.274-2.866 2.78v3.198c0 1.484 1.286 2.691 2.866 2.691h3.554a2.132 2.132 0 0 0 1.972 1.329c1.174 0 2.129-.956 2.129-2.13s-.955-2.129-2.13-2.129a2.13 2.13 0 0 0-1.889 1.152H10.3c-.523 0-1.088-.349-1.088-.913v-3.198c0-.524.519-1 1.088-1h10.177c.538 0 .96.439.96 1v10.177c0 .567-.44 1.047-.96 1.047H3.322c-.533 0-1-.49-1-1.047V4.02c0-.52.43-.912 1-.912\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://gumroad.com/press\",hex:\"36A9AE\"},Gumtree:{title:\"Gumtree\",slug:\"gumtree\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Gumtree icon</title><path d=\"M18.829 6.52c-.189-.127-.315-.315-.315-.57C18.198 2.596 15.412 0 11.994 0s-6.203 2.594-6.52 5.949c0 .255-.126.442-.314.57-1.711 1.202-2.785 3.165-2.785 5.378 0 3.038 2.087 5.573 4.872 6.331.507.127.95.189 1.14.061.379-.188.76-1.832.57-2.213-.128-.189-.57-.379-1.014-.506-1.646-.443-2.848-1.961-2.848-3.732 0-1.015.379-1.9 1.014-2.6.252-.315.63-.567.948-.757.696-.38 1.14-1.142 1.14-1.964 0-.45.063-.826.189-1.201.506-1.532 1.961-2.659 3.67-2.659 1.711 0 3.166 1.127 3.672 2.659.126.375.189.751.189 1.201 0 .812.381 1.578 1.142 1.953.379.18.694.436.946.752.634.69 1.014 1.576 1.014 2.598 0 2.148-1.709 3.861-3.86 3.861-2.468 0-4.431 2.013-4.431 4.416v2.523c0 .496.064 1.006.19 1.142.315.316 1.962.316 2.278 0 .136-.136.195-.631.195-1.142v-2.583c0-.946.766-1.713 1.713-1.713 3.605 0 6.52-2.915 6.52-6.52 0-2.163-1.066-4.116-2.78-5.317l-.015.033z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.gumtree.com\",hex:\"72EF36\"},Gutenberg:{title:\"Gutenberg\",slug:\"gutenberg\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Gutenberg icon</title><path d=\"M14.439,11.358c-0.084-0.057-0.199-0.034-0.256,0.051c-0.334,0.503-1.043,0.53-1.08,0.53 c-0.007,0-0.01,0-0.017,0c-0.874,0-1.208,0.746-1.221,0.776c-0.04,0.094,0.003,0.202,0.094,0.243 c0.024,0.01,0.051,0.017,0.074,0.017c0.071,0,0.138-0.04,0.169-0.111c0.003-0.007,0.233-0.52,0.823-0.553v0.955 c-0.024,0.206-0.121,0.368-0.294,0.489c-0.179,0.125-0.418,0.189-0.712,0.189c-0.351,0-0.638-0.121-0.85-0.361 c-0.216-0.24-0.324-0.58-0.324-1.019l0.003-1.053c0.017-0.388,0.121-0.695,0.321-0.914c0.216-0.24,0.499-0.361,0.85-0.361 c0.294,0,0.533,0.064,0.712,0.189c0.179,0.125,0.28,0.297,0.297,0.52l0,0c0,0.007,0,0.017,0,0.024c0,0.128,0.105,0.233,0.233,0.233 c0.128,0,0.233-0.105,0.233-0.233c0-0.007,0-0.017,0-0.024l0,0c-0.034-0.334-0.186-0.597-0.459-0.796 C12.762,9.948,12.422,9.85,12.01,9.85c-0.489,0-0.884,0.162-1.184,0.482c-0.283,0.3-0.432,0.695-0.449,1.181l0,0l0,0 c0,0.034-0.003,0.067-0.003,0.101l0.003,0.948h-0.003c0,0.536,0.152,0.965,0.452,1.285s0.695,0.482,1.184,0.482 c0.412,0,0.752-0.098,1.026-0.297c0.25-0.182,0.398-0.422,0.449-0.719l0.01-1.059c0.307-0.074,0.725-0.243,0.989-0.641 C14.55,11.53,14.527,11.415,14.439,11.358z M17.688,0.511h2.588c0.115,0,0.209-0.094,0.209-0.209s-0.094-0.209-0.209-0.209h-2.588 c-0.115,0-0.209,0.094-0.209,0.209S17.573,0.511,17.688,0.511z M3.825,0.511h2.588c0.115,0,0.209-0.094,0.209-0.209 S6.527,0.093,6.413,0.093H3.825c-0.115,0-0.209,0.094-0.209,0.209S3.707,0.511,3.825,0.511z M20.408,2.191 c0.116,0,0.209,0.094,0.209,0.209c0,0.116-0.094,0.209-0.209,0.209c-0.116,0-0.209-0.094-0.209-0.209 C20.198,2.285,20.292,2.191,20.408,2.191z M11.99,1.533c0.116,0,0.209,0.094,0.209,0.209s-0.094,0.209-0.209,0.209 s-0.209-0.094-0.209-0.209S11.874,1.533,11.99,1.533z M8.11,2.404c0.003,0,0.007,0,0.01,0c0.786,0,1.137-0.493,1.404-0.951 c0.088-0.152,0.412-0.658,0.87-0.789c0.567-0.165,1.171,0.098,1.407,0.614c0.034,0.074,0.108,0.118,0.182,0.121 c0.003,0,0.007,0,0.01,0c0.003,0,0.007,0,0.013,0c0.074-0.003,0.148-0.047,0.182-0.121c0.236-0.516,0.84-0.779,1.407-0.614 c0.459,0.135,0.783,0.638,0.87,0.789c0.267,0.462,0.617,0.951,1.414,0.951l0,0c0.479,0,1.046-0.358,1.204-1.043 c0.132-0.567-0.111-1.08-0.641-1.339c-0.105-0.051-0.229-0.01-0.28,0.094c-0.051,0.105-0.01,0.229,0.094,0.28 c0.503,0.25,0.459,0.692,0.418,0.87c-0.081,0.351-0.391,0.722-0.8,0.722c-0.523,0-0.773-0.263-1.053-0.746 c-0.138-0.236-0.523-0.81-1.113-0.982c-0.644-0.189-1.326,0.037-1.717,0.533c-0.391-0.496-1.073-0.722-1.717-0.533 c-0.59,0.172-0.975,0.746-1.113,0.982c-0.28,0.482-0.53,0.746-1.043,0.746c-0.003,0-0.007,0-0.007,0 c-0.445-0.003-0.729-0.314-0.81-0.621c-0.04-0.145-0.125-0.641,0.442-0.978c0.098-0.057,0.132-0.186,0.071-0.287 C7.755,0.005,7.631-0.029,7.529,0.032C6.878,0.42,6.777,1.034,6.898,1.479C7.047,2.029,7.536,2.4,8.11,2.404z M11.996,22.1H12l0,0 H11.996z M3.498,2.191c0.116,0,0.209,0.094,0.209,0.209c0,0.116-0.094,0.209-0.209,0.209S3.288,2.516,3.288,2.4 C3.288,2.285,3.382,2.191,3.498,2.191z M2.911,0.096c0.116,0,0.209,0.094,0.209,0.209S3.026,0.514,2.911,0.514 S2.701,0.421,2.701,0.305S2.795,0.096,2.911,0.096z M21.15,0.096c0.116,0,0.209,0.094,0.209,0.209s-0.094,0.209-0.209,0.209 s-0.209-0.094-0.209-0.209S21.034,0.096,21.15,0.096z M22.27,13.5c0.116,0,0.209,0.094,0.209,0.209 c0,0.116-0.094,0.209-0.209,0.209c-0.116,0-0.209-0.094-0.209-0.209C22.061,13.594,22.154,13.5,22.27,13.5z M21.43,18.285 c0.116,0,0.209,0.094,0.209,0.209c0,0.116-0.094,0.209-0.209,0.209s-0.209-0.094-0.209-0.209 C21.221,18.378,21.314,18.285,21.43,18.285z M20.087,18.882c0.116,0,0.209,0.094,0.209,0.209c0,0.116-0.094,0.209-0.209,0.209 c-0.116,0-0.209-0.094-0.209-0.209C19.878,18.975,19.972,18.882,20.087,18.882z M7.674,1.088c0,0.31,0.253,0.563,0.563,0.563 c0.31,0,0.563-0.253,0.563-0.563S8.548,0.524,8.238,0.524C7.928,0.521,7.674,0.774,7.674,1.088z M8.238,0.939 c0.081,0,0.148,0.067,0.148,0.148c0,0.081-0.067,0.148-0.148,0.148c-0.081,0-0.148-0.067-0.148-0.148 C8.089,1.007,8.157,0.939,8.238,0.939z M15.829,1.651c0.31,0,0.563-0.253,0.563-0.563s-0.253-0.563-0.563-0.563 c-0.31,0-0.563,0.253-0.563,0.563S15.519,1.651,15.829,1.651z M15.829,0.939c0.081,0,0.148,0.067,0.148,0.148 c0,0.081-0.067,0.148-0.148,0.148s-0.148-0.067-0.148-0.148C15.681,1.007,15.748,0.939,15.829,0.939z M12.56,1.439 c-0.108,0.04-0.162,0.159-0.121,0.267c0.04,0.108,0.159,0.162,0.267,0.125c0.034-0.013,0.843-0.283,1.464,0.682 c0.04,0.061,0.108,0.094,0.175,0.094c0.037,0,0.078-0.01,0.111-0.034c0.098-0.061,0.125-0.192,0.064-0.287 C13.872,1.284,12.955,1.294,12.56,1.439z M11.433,1.439c-0.03-0.01-0.307-0.108-0.685-0.051c-0.351,0.051-0.854,0.25-1.272,0.901 C9.415,2.387,9.442,2.515,9.54,2.576c0.034,0.024,0.074,0.034,0.111,0.034c0.067,0,0.135-0.034,0.175-0.094 c0.617-0.965,1.427-0.695,1.464-0.682c0.108,0.04,0.226-0.017,0.267-0.125C11.598,1.601,11.541,1.479,11.433,1.439z M21.032,2.009 l1.016-1.154v1.663c0,0.115,0.094,0.209,0.209,0.209s0.209-0.094,0.209-0.209V0.305c0-0.088-0.054-0.165-0.135-0.196 s-0.172-0.007-0.229,0.057l-1.38,1.569c-0.078,0.088-0.067,0.219,0.02,0.294C20.823,2.107,20.954,2.097,21.032,2.009z M1.767,2.731 c0.115,0,0.209-0.094,0.209-0.209V0.858l1.016,1.154C3.069,2.1,3.201,2.107,3.285,2.033c0.088-0.078,0.094-0.209,0.02-0.294 l-1.38-1.572C1.868,0.103,1.777,0.079,1.696,0.109C1.615,0.14,1.561,0.217,1.561,0.305v2.217C1.561,2.636,1.652,2.731,1.767,2.731z  M16.497,2.937c-0.098-0.007-0.189,0.061-0.213,0.155c-0.024,0.098,0.024,0.199,0.111,0.24c0.331,0.155,0.631,0.216,0.901,0.216 c0.516,0,0.928-0.226,1.215-0.462c0.459-0.378,0.695-0.854,0.705-0.874c0.047-0.098,0.013-0.216-0.081-0.27 c-0.213-0.125-0.58-0.202-1.14,0.138c-0.28,0.172-0.496,0.378-0.533,0.415C16.949,2.947,16.521,2.937,16.497,2.937z M17.742,2.805 c0.003-0.003,0.007-0.007,0.01-0.01c0.159-0.159,0.607-0.526,0.958-0.543c-0.101,0.145-0.253,0.341-0.459,0.513 c-0.304,0.25-0.628,0.371-0.972,0.364C17.422,3.055,17.58,2.947,17.742,2.805z M4.958,1.941C4.864,1.995,4.83,2.114,4.878,2.211 c0.01,0.02,0.246,0.496,0.705,0.874c0.287,0.236,0.695,0.462,1.215,0.462c0.273,0,0.574-0.061,0.901-0.216 c0.091-0.044,0.135-0.142,0.111-0.24C7.786,2.994,7.698,2.93,7.597,2.933c-0.017,0-0.449,0.013-0.962-0.439 C6.598,2.458,6.382,2.252,6.102,2.08C5.542,1.742,5.171,1.82,4.958,1.941z M6.355,2.805c0.159,0.142,0.317,0.246,0.462,0.324 c-0.729,0.007-1.211-0.55-1.431-0.877c0.351,0.017,0.8,0.385,0.958,0.543C6.349,2.798,6.352,2.802,6.355,2.805z M22.516,19.759 c-0.209-0.175-0.439-0.277-0.651-0.334c0.081-0.061,0.159-0.132,0.226-0.209c0.516-0.607,0.52-1.501,0.007-2.082 c-0.078-0.088-0.209-0.094-0.294-0.017c-0.088,0.078-0.094,0.209-0.017,0.294c0.375,0.425,0.368,1.083-0.013,1.535 c-0.31,0.364-0.901,0.452-1.076,0.472c-0.53,0.057-1.124,0.179-1.444,0.904c-0.051,0.111-0.081,0.236-0.088,0.371 c-0.074-0.024-0.155-0.037-0.236-0.037c-0.422,0-0.766,0.344-0.766,0.766c0,0.29,0.162,0.543,0.401,0.671 c-0.071,0.064-0.138,0.135-0.199,0.216c-0.709-0.955-1.842-1.555-3.09-1.555c-0.179,0-0.358,0.013-0.53,0.037 c1.026-0.314,1.98-0.803,2.851-1.451l0,0c1.124-0.84,2.058-1.937,2.699-3.168c0.675-1.296,1.016-2.696,1.016-4.153 c0-0.01,0-0.017,0-0.027c0-0.003,0-0.003,0-0.007s0-0.007,0-0.01c-0.007-1.184-0.27-2.25-0.644-3.168 c0.138,0.027,0.27,0.037,0.388,0.037c0.874,0,1.258-0.601,1.299-0.671l0,0c0.189-0.317,0.219-0.702,0.111-1.049 c0.003-0.01,0.003-0.024,0.003-0.037V3.284c0-0.115-0.094-0.209-0.209-0.209c-0.115,0-0.209,0.094-0.209,0.209v3.195 c-0.354-0.307-0.867-0.341-1.08-0.341c-0.412,0.003-0.668-0.061-0.857-0.385c-0.159-0.273-0.067-0.557,0.091-0.719 c0.199-0.202,0.482-0.229,0.759-0.078c0.101,0.054,0.229,0.02,0.283-0.081c0.054-0.101,0.02-0.229-0.081-0.283 c-0.439-0.243-0.931-0.182-1.258,0.148c-0.324,0.331-0.385,0.82-0.155,1.218c0.3,0.516,0.756,0.59,1.204,0.59 c0.007,0,0.01,0,0.017,0c0.135,0,0.57,0.02,0.82,0.256c0.324,0.307,0.408,0.789,0.196,1.147c0,0-0.003,0.003-0.003,0.007 c-0.017,0.03-0.418,0.712-1.538,0.354c-0.337-0.715-0.729-1.323-1.093-1.808L19.19,6.631l0.165-0.128l-0.067-0.088 c-0.719-1.204,0.111-2.487,0.543-3.03l0.243-0.277l0,0l0,0l0,0c0.074-0.088,0.067-0.219-0.02-0.294 c-0.084-0.071-0.206-0.067-0.283,0.01l0,0c-0.007,0.007-0.044,0.044-0.101,0.108c-0.375,0.381-1.839,1.731-3.259,1.026l-0.04-0.027 l-0.02-0.013c-1.272-0.685-2.527-1.08-3.725-1.181c-0.155-0.354-0.361-0.624-0.621-0.624c-0.263,0-0.469,0.273-0.628,0.634 c-1.677,0.074-3.762,1.157-3.85,1.201C6.099,4.668,4.628,3.311,4.253,2.93C4.196,2.866,4.155,2.829,4.152,2.822l0,0 c-0.078-0.078-0.199-0.081-0.283-0.01c-0.088,0.074-0.094,0.206-0.02,0.294l0,0l0,0l0,0l0.26,0.294 C4.26,3.588,4.452,3.861,4.614,4.188c0.405,0.82,0.412,1.565,0.024,2.22C4.155,7.009,3.764,7.64,3.464,8.305 c-1.13,0.368-1.535-0.321-1.552-0.351c0-0.003-0.003-0.003-0.003-0.007C1.696,7.589,1.78,7.107,2.104,6.8 c0.25-0.236,0.685-0.256,0.82-0.256h0.003c0.452,0,0.918-0.071,1.218-0.59C4.375,5.555,4.314,5.062,3.99,4.735 C3.663,4.401,3.17,4.344,2.732,4.587C2.63,4.641,2.593,4.769,2.651,4.87c0.054,0.101,0.182,0.138,0.283,0.081 c0.28-0.152,0.563-0.125,0.759,0.078C3.852,5.191,3.94,5.474,3.784,5.747C3.599,6.068,3.346,6.132,2.941,6.132 c-0.003,0-0.007,0-0.013,0c-0.186,0-0.617,0.027-0.962,0.25V3.335c0-0.115-0.094-0.209-0.209-0.209 c-0.115,0-0.209,0.094-0.209,0.209v3.509C1.318,7.255,1.305,7.758,1.541,8.163C1.564,8.207,1.709,8.45,2.033,8.632 C2.219,8.736,2.485,8.834,2.84,8.834c0.128,0,0.27-0.013,0.422-0.044c-0.364,0.978-0.547,2.031-0.553,3.178 c0,0.003,0,0.003,0,0.007v0.003c0,0.01,0,0.02,0,0.027c0,2.072,0.729,4.106,2.051,5.729c1.171,1.437,2.763,2.503,4.528,3.047 c-0.186-0.027-0.375-0.04-0.563-0.04c-1.238,0-2.362,0.59-3.07,1.532c-0.057-0.074-0.121-0.145-0.192-0.206 c0.223-0.135,0.375-0.378,0.375-0.658c0-0.422-0.344-0.766-0.766-0.766c-0.078,0-0.152,0.013-0.223,0.034 c-0.01-0.132-0.04-0.256-0.088-0.368c-0.324-0.725-0.914-0.847-1.444-0.904c-0.175-0.02-0.766-0.108-1.076-0.472 c-0.391-0.442-0.398-1.1-0.024-1.525c0.078-0.088,0.067-0.219-0.017-0.294c-0.088-0.078-0.219-0.067-0.294,0.017 c-0.509,0.58-0.506,1.474,0.007,2.082c0.067,0.081,0.145,0.148,0.226,0.209c-0.213,0.057-0.442,0.162-0.651,0.334 c-0.496,0.408-0.749,1.09-0.756,2.018c-0.017,0.084,0.02,0.172,0.094,0.219c0.034,0.02,0.071,0.03,0.108,0.03 c0.013,0,0.03-0.003,0.044-0.007h0.003c0.007,0,0.01-0.003,0.017-0.007c0.01-0.003,0.024-0.007,0.034-0.013 c0.003,0,0.003-0.003,0.007-0.003c0.034-0.02,0.064-0.047,0.084-0.081c0.081-0.105,0.415-0.236,0.692-0.294 c1.083-0.236,1.309-0.968,1.275-1.319c-0.01-0.115-0.111-0.199-0.226-0.189c-0.115,0.01-0.199,0.111-0.189,0.226 c0,0.003,0.003,0.064-0.017,0.155c-0.051,0.209-0.236,0.57-0.931,0.722c-0.003,0-0.003,0-0.007,0 c-0.081,0.017-0.324,0.074-0.55,0.179c0.061-0.601,0.253-1.039,0.58-1.312c0.503-0.418,1.167-0.3,1.174-0.297 c0.024,0.003,0.044,0.003,0.064,0c0.111,0.024,0.206,0.037,0.277,0.044c0.557,0.061,0.897,0.182,1.11,0.658 c0.165,0.375-0.047,0.806-0.334,1.022c-0.145,0.111-0.533,0.331-0.968-0.027c-0.088-0.074-0.219-0.061-0.294,0.027 c-0.074,0.088-0.061,0.219,0.027,0.294c0.196,0.162,0.415,0.256,0.641,0.283c-0.29,0.236-0.486,0.533-0.574,0.688 c-0.283,0.489-0.513,0.752-0.894,0.756v-1.461c0-0.115-0.094-0.209-0.209-0.209s-0.209,0.094-0.209,0.209v1.694 c0,0.084,0.051,0.155,0.121,0.189c0.037,0.027,0.081,0.047,0.128,0.047h4.858c0.074,0,0.135-0.037,0.175-0.094 c0.027-0.027,0.051-0.061,0.061-0.101c0.192-0.746,0.864-1.265,1.633-1.265c0.688,0,1.299,0.418,1.559,1.043H9.652 c-0.182-0.449-0.621-0.749-1.117-0.749c-0.543,0-1.022,0.368-1.167,0.891c-0.03,0.111,0.037,0.226,0.145,0.256 c0.111,0.03,0.226-0.037,0.256-0.145c0.094-0.344,0.408-0.584,0.763-0.584c0.263,0,0.499,0.128,0.644,0.331H9.054 c-0.115,0-0.209,0.094-0.209,0.209s0.094,0.209,0.209,0.209h0.422C9.483,23.997,9.493,24,9.5,24c0.01,0,0.02,0,0.027-0.003h0.837 c0.115,0,0.209-0.094,0.209-0.209c0-0.01,0-0.02-0.003-0.03c0.003-0.027,0.003-0.057-0.003-0.088 c-0.246-0.914-1.083-1.552-2.031-1.552c-0.918,0-1.724,0.594-2.004,1.461h-1.09c0.088-0.28,0.206-0.54,0.354-0.783 c0.01-0.013,0.017-0.027,0.027-0.04c0.617-0.968,1.697-1.589,2.895-1.589c0.709,0,1.39,0.216,1.967,0.621 c0.017,0.01,0.034,0.02,0.051,0.024c0.088,0.105,0.175,0.216,0.26,0.331c0.02,0.027,0.037,0.054,0.057,0.081 c-0.02,0.428,0.213,0.877,0.695,1.336c0.017,0.051,0.034,0.094,0.044,0.128v0.044c0,0.115,0.094,0.209,0.209,0.209 c0.098,0,0.175-0.064,0.199-0.155l0,0c0-0.003,0.03-0.105,0.091-0.273c0.435-0.425,0.651-0.84,0.648-1.242 c0.027-0.04,0.057-0.084,0.088-0.125c0.094-0.128,0.192-0.253,0.294-0.371c0.574-0.398,1.245-0.607,1.947-0.607 c1.512,0,2.834,0.985,3.273,2.412h-1.09c-0.277-0.867-1.083-1.461-2.004-1.461c-0.948,0-1.781,0.638-2.031,1.552 c-0.01,0.034-0.01,0.067,0,0.101c0,0.007,0,0.01,0,0.017c0,0.115,0.094,0.209,0.209,0.209h1.829c0.115,0,0.209-0.094,0.209-0.209 s-0.094-0.209-0.209-0.209h-0.665c0.145-0.202,0.381-0.331,0.644-0.331c0.361,0,0.675,0.243,0.766,0.594 c0.024,0.094,0.108,0.155,0.202,0.155c0.017,0,0.034-0.003,0.051-0.007c0.111-0.027,0.179-0.142,0.152-0.253 c-0.138-0.533-0.617-0.908-1.171-0.908c-0.493,0-0.931,0.3-1.117,0.749h-0.422c0.256-0.624,0.87-1.043,1.559-1.043 c0.769,0,1.441,0.52,1.633,1.265c0.003,0.017,0.013,0.034,0.02,0.051c0.027,0.084,0.105,0.145,0.199,0.145h4.95 c0.115,0,0.209-0.094,0.209-0.209c0-0.003,0-0.01,0-0.013s0-0.01,0-0.013v-0.04c0.003-0.02,0.003-0.04,0.003-0.061 c0-0.003,0-0.007-0.003-0.01v-1.582c0-0.115-0.094-0.209-0.209-0.209s-0.209,0.094-0.209,0.209v1.417 c-0.351-0.027-0.57-0.287-0.84-0.752c-0.088-0.148-0.27-0.428-0.54-0.658c0.186-0.04,0.364-0.128,0.53-0.267 c0.088-0.074,0.101-0.206,0.027-0.294s-0.206-0.101-0.294-0.027c-0.432,0.358-0.82,0.138-0.968,0.027 c-0.287-0.216-0.499-0.651-0.334-1.022c0.213-0.476,0.553-0.601,1.11-0.658c0.071-0.007,0.165-0.02,0.277-0.044 c0.02,0.003,0.044,0.003,0.067,0c0.007,0,0.665-0.121,1.171,0.297c0.331,0.273,0.526,0.712,0.584,1.316 c-0.229-0.108-0.476-0.165-0.553-0.182c-0.003,0-0.003,0-0.007,0c-0.692-0.152-0.881-0.509-0.931-0.719 c-0.02-0.088-0.02-0.148-0.017-0.155c0.01-0.115-0.074-0.216-0.189-0.226c-0.115-0.01-0.216,0.074-0.226,0.189 c-0.034,0.354,0.192,1.083,1.279,1.319c0.28,0.061,0.634,0.199,0.698,0.304c0,0,0,0.003,0.003,0.003 c0.01,0.013,0.02,0.027,0.03,0.037c0.003,0.003,0.007,0.003,0.01,0.007c0.01,0.007,0.02,0.017,0.03,0.02 c0.003,0.003,0.01,0.007,0.013,0.007c0.01,0.007,0.02,0.01,0.03,0.013c0.003,0,0.01,0.003,0.013,0.003 c0.013,0.003,0.03,0.007,0.047,0.007l0,0c0.013,0,0.024,0,0.037-0.003c0.003,0,0.007,0,0.01-0.003 c0.01-0.003,0.02-0.007,0.034-0.01h0.003c0.01-0.003,0.017-0.01,0.027-0.013l0.003-0.003c0.007-0.003,0.013-0.01,0.017-0.013 c0.003-0.003,0.01-0.007,0.013-0.013c0.003-0.003,0.01-0.01,0.013-0.013c0.003-0.007,0.01-0.01,0.013-0.017s0.007-0.01,0.01-0.017 c0.003-0.007,0.007-0.01,0.01-0.017s0.003-0.013,0.007-0.02c0.003-0.007,0.003-0.013,0.007-0.02c0-0.007,0.003-0.013,0.003-0.017 c0-0.007,0.003-0.013,0.003-0.024V21.82C23.275,20.866,23.019,20.174,22.516,19.759z M5.009,23.575H2.813 c0.186-0.189,0.317-0.415,0.418-0.59c0.088-0.152,0.412-0.658,0.87-0.789c0.54-0.159,1.046,0.027,1.296,0.455 C5.232,22.937,5.1,23.248,5.009,23.575z M5.066,21.763c-0.192,0-0.348-0.155-0.348-0.348s0.155-0.348,0.348-0.348 c0.192,0,0.348,0.155,0.348,0.348C5.414,21.608,5.255,21.763,5.066,21.763z M17.435,19.128L17.435,19.128l0.03,0.037L17.435,19.128 z M17.442,18.919c-1.97-0.229-3.394,0.617-4.244,1.366c-0.368,0.324-0.658,0.658-0.877,0.941c-0.04-0.027-0.078-0.054-0.111-0.071 v-0.594c1.596-1.603,3.182-2.082,4.234-2.2c0.698-0.078,1.262-0.013,1.599,0.051C17.85,18.592,17.651,18.76,17.442,18.919z M19.915,15.977c-0.202,0.388-0.435,0.759-0.692,1.117c-0.267-0.084-0.601-0.162-1.002-0.199c0.894-1.134,1.461-2.487,1.643-3.914 c0.29-0.034,0.692-0.159,0.999-0.358C20.782,13.794,20.465,14.921,19.915,15.977z M18.495,12.212l0.243-0.01 c0.081,0.361,0.354,0.651,0.712,0.749c-0.189,1.444-0.789,2.807-1.748,3.92c-0.462,0-0.999,0.054-1.606,0.186 C17.513,15.903,18.437,14.165,18.495,12.212z M14.53,17.542c-0.135,0.054-0.229,0.098-0.277,0.118 c-0.56,0.223-1.161,0.368-1.788,0.415l5.597-5.597C17.894,14.732,16.49,16.642,14.53,17.542z M20.883,11.986 c-0.007,0.189-0.523,0.496-0.978,0.57c-0.064,0.01-0.128,0.017-0.189,0.017c-0.081,0-0.159-0.017-0.229-0.047 c-0.213-0.091-0.361-0.3-0.361-0.543c0-0.243,0.148-0.452,0.361-0.543c0.071-0.03,0.148-0.047,0.229-0.047 c0.061,0,0.125,0.007,0.189,0.017c0.455,0.074,0.968,0.381,0.978,0.567C20.883,11.979,20.883,11.982,20.883,11.986z M18.93,6.648 l0.088,0.118l0,0c0.766,1.022,1.663,2.605,1.835,4.575c-0.304-0.196-0.702-0.321-0.989-0.354c-0.216-1.707-0.975-3.249-2.099-4.44 c0.047-0.098,0.074-0.209,0.074-0.324c0-0.155-0.047-0.3-0.125-0.418l0.958-1.093C18.491,5.406,18.579,6.064,18.93,6.648z M16.133,4.283l0.044,0.03L16.2,4.327c0.334,0.169,0.692,0.253,1.063,0.253c0.391,0,0.8-0.094,1.211-0.283l-1.08,1.231 c-0.098-0.047-0.206-0.071-0.324-0.071c-0.152,0-0.29,0.044-0.408,0.118c-1.063-0.776-2.321-1.292-3.691-1.461 c-0.034-0.246-0.101-0.597-0.202-0.941C13.852,3.294,14.982,3.666,16.133,4.283z M17.422,6.223c0,0.152-0.101,0.283-0.24,0.331 c-0.034,0.01-0.071,0.017-0.108,0.017c-0.01,0-0.024,0-0.034,0c-0.155-0.013-0.28-0.132-0.307-0.28 c-0.003-0.02-0.007-0.044-0.007-0.064c0-0.024,0.003-0.044,0.007-0.067c0.03-0.152,0.159-0.27,0.317-0.28c0.007,0,0.017,0,0.024,0 s0.013,0,0.02,0c0.155,0.01,0.287,0.121,0.321,0.27c0.003,0.02,0.007,0.037,0.007,0.057C17.418,6.209,17.422,6.216,17.422,6.223z M12.988,4.539c1.255,0.165,2.416,0.644,3.398,1.353c-0.051,0.101-0.078,0.213-0.078,0.334c0,0.152,0.044,0.29,0.121,0.412 l-1.68,1.916c-0.078,0.088-0.067,0.219,0.02,0.294c0.04,0.034,0.088,0.051,0.138,0.051c0.057,0,0.115-0.024,0.159-0.071 l1.677-1.913c0.101,0.051,0.213,0.078,0.334,0.078c0.155,0,0.297-0.047,0.415-0.125c1.046,1.12,1.751,2.557,1.96,4.15 c-0.361,0.101-0.641,0.398-0.715,0.769l-0.24,0.01c-0.051-1.542-0.648-3.013-1.69-4.157c-0.078-0.084-0.209-0.091-0.294-0.013 c-0.084,0.078-0.091,0.209-0.013,0.294c0.918,1.005,1.464,2.281,1.569,3.63l-2.244-2.237c-0.081-0.081-0.213-0.081-0.294,0 c-0.081,0.081-0.081,0.213,0,0.294l2.409,2.409l-5.938,5.938l-5.938-5.938l2.389-2.389c0.081-0.081,0.081-0.213,0-0.294 c-0.081-0.081-0.213-0.081-0.294,0L5.944,11.55c0.118-1.535,0.806-2.915,1.856-3.92l1.046,1.194 c0.04,0.047,0.098,0.071,0.159,0.071c0.047,0,0.098-0.017,0.138-0.051c0.088-0.078,0.094-0.209,0.02-0.294L8.113,7.353 c0.945-0.789,2.129-1.299,3.428-1.397L9.76,7.721c-0.081,0.081-0.081,0.213,0,0.294c0.04,0.04,0.094,0.061,0.148,0.061 s0.105-0.02,0.148-0.061l1.957-1.937l1.9,1.9c0.081,0.081,0.213,0.081,0.294,0c0.081-0.081,0.081-0.213,0-0.294l-1.727-1.727 c1.07,0.081,2.088,0.439,2.976,1.049c0.094,0.064,0.226,0.04,0.29-0.054c0.064-0.094,0.04-0.226-0.054-0.29 c-1.026-0.705-2.22-1.097-3.468-1.134V5.379C12.614,5.285,12.928,4.951,12.988,4.539z M6.892,7.046 c0.118,0,0.229-0.027,0.327-0.074l0.3,0.344c-1.191,1.137-1.95,2.719-2.011,4.477l-0.169-0.01 c-0.081-0.395-0.388-0.705-0.783-0.786c0.206-1.562,0.894-2.972,1.906-4.079C6.588,6.999,6.733,7.046,6.892,7.046z M6.544,6.284 c0-0.017,0-0.03,0.003-0.047c0-0.01,0.003-0.017,0.003-0.027c0.03-0.148,0.159-0.263,0.314-0.273c0.007,0,0.013,0,0.017,0 s0.003,0,0.007,0c0.159,0,0.294,0.108,0.334,0.256c0.007,0.03,0.013,0.061,0.013,0.091c0,0.024-0.003,0.047-0.007,0.071 c-0.03,0.148-0.159,0.263-0.314,0.273c-0.01,0-0.017,0-0.027,0c-0.044,0-0.088-0.01-0.125-0.024 C6.639,6.557,6.544,6.429,6.544,6.284z M5.336,12.201l0.172,0.01c0.057,1.957,0.985,3.698,2.406,4.852 c-0.611-0.135-1.147-0.189-1.613-0.192c-0.951-1.11-1.555-2.466-1.744-3.904C4.945,12.886,5.252,12.586,5.336,12.201z M5.94,12.478 l5.597,5.597C8.555,17.849,6.166,15.461,5.94,12.478z M11.43,4.077c0.091-0.631,0.401-1.474,0.563-1.542 c0.186,0.071,0.472,0.945,0.56,1.538C12.57,4.192,12.58,4.3,12.58,4.388c0,0.037-0.003,0.071-0.01,0.105 c-0.051,0.273-0.29,0.482-0.58,0.482s-0.53-0.209-0.58-0.482c-0.007-0.034-0.01-0.071-0.01-0.105 C11.403,4.296,11.413,4.192,11.43,4.077z M11.794,5.376v0.145c-1.505,0.047-2.881,0.611-3.961,1.515L7.536,6.695 C7.614,6.577,7.661,6.432,7.661,6.28c0-0.128-0.034-0.25-0.088-0.354c0.989-0.725,2.159-1.215,3.431-1.387 C11.062,4.958,11.382,5.295,11.794,5.376z M6.642,4.58c0.371,0,0.729-0.084,1.066-0.253c0.02-0.01,1.947-1.012,3.505-1.147 c-0.101,0.341-0.169,0.695-0.202,0.938C9.625,4.29,8.346,4.826,7.276,5.622C7.162,5.555,7.033,5.518,6.892,5.518 c-0.118,0-0.229,0.027-0.327,0.074L5.431,4.3C5.846,4.485,6.251,4.58,6.642,4.58z M4.958,6.668l0.017-0.024 c0.351-0.58,0.439-1.242,0.263-1.937l1.012,1.157C6.173,5.983,6.126,6.128,6.126,6.28c0,0.111,0.024,0.216,0.067,0.314 c-1.103,1.188-1.846,2.713-2.058,4.4c-0.3,0.047-0.698,0.175-0.999,0.368C3.255,9.58,3.852,8.038,4.958,6.668z M3.12,11.979 c0.007-0.196,0.55-0.466,0.978-0.553c0.094-0.02,0.182-0.03,0.256-0.03c0.057,0,0.108,0.007,0.162,0.024 c0.246,0.071,0.428,0.297,0.428,0.567s-0.182,0.496-0.428,0.567c-0.051,0.013-0.105,0.024-0.162,0.024 c-0.078,0-0.165-0.01-0.256-0.03c-0.428-0.091-0.972-0.361-0.978-0.557C3.12,11.982,3.12,11.982,3.12,11.979z M3.14,12.6 c0.3,0.196,0.702,0.324,0.999,0.371c0.179,1.431,0.746,2.787,1.643,3.92c-0.401,0.037-0.736,0.111-1.005,0.196 C3.808,15.758,3.248,14.222,3.14,12.6z M5.077,17.478c-0.01-0.013-0.02-0.024-0.03-0.037c1.016-0.28,2.126-0.132,2.905,0.054 c0.941,0.226,1.63,0.553,1.636,0.557l0.003-0.007c0.746,0.297,1.559,0.462,2.409,0.462c0.847,0,1.657-0.162,2.399-0.459l0,0 c0,0,0.007-0.003,0.02-0.01c0.088-0.037,0.179-0.074,0.263-0.115c0.287-0.118,0.769-0.294,1.35-0.432 c0.786-0.189,1.9-0.337,2.915-0.054c-0.175,0.216-0.358,0.422-0.553,0.621c-0.283-0.078-1.005-0.226-1.98-0.121 c-1.059,0.115-2.618,0.567-4.211,2.038v-0.368c0-0.115-0.094-0.209-0.209-0.209c-0.115,0-0.209,0.094-0.209,0.209v0.348 c-1.582-1.454-3.134-1.903-4.187-2.018c-0.999-0.108-1.731,0.054-1.997,0.128C5.424,17.883,5.245,17.684,5.077,17.478z M5.964,18.416c0.337-0.067,0.908-0.135,1.619-0.054c1.873,0.209,3.31,1.279,4.211,2.176v0.611 c-0.03,0.017-0.064,0.037-0.101,0.064c-0.219-0.28-0.506-0.607-0.867-0.924c-0.85-0.752-2.281-1.603-4.258-1.366v0.003 C6.359,18.764,6.156,18.595,5.964,18.416z M11.204,21.723c-0.395-0.506-0.827-0.887-1.258-1.174l0.003-0.01 c-0.01-0.003-0.02-0.007-0.03-0.007c-0.719-0.469-1.441-0.675-2.021-0.759c-0.273-0.142-0.543-0.3-0.803-0.472 c1.272-0.037,2.426,0.395,3.445,1.289c0.351,0.307,0.628,0.624,0.837,0.897C11.312,21.557,11.254,21.635,11.204,21.723z M12.212,22.988c-0.051,0.061-0.105,0.121-0.165,0.182c-0.013,0.013-0.03,0.03-0.047,0.044l-0.003,0.003l-0.003,0.003v-0.007 c-0.007-0.007-0.017-0.013-0.024-0.024c-0.067-0.064-0.125-0.128-0.179-0.192c-0.246-0.294-0.354-0.567-0.317-0.816 c0.003-0.02,0.007-0.04,0.013-0.061c0.027-0.108,0.078-0.202,0.138-0.283c0.051-0.067,0.108-0.125,0.165-0.175 c0.051-0.044,0.101-0.081,0.145-0.111c0.02-0.013,0.037-0.024,0.054-0.034c0,0,0.003,0,0.003-0.003h0.003 c0.024,0.013,0.047,0.03,0.078,0.051c0.04,0.027,0.088,0.064,0.135,0.105c0.061,0.054,0.121,0.118,0.172,0.189 c0.061,0.088,0.111,0.186,0.132,0.297c0,0.007,0.003,0.017,0.007,0.024C12.557,22.424,12.452,22.694,12.212,22.988z M13.036,21.466 c-0.007,0.007-0.013,0.013-0.017,0.02c-0.078,0.088-0.148,0.175-0.213,0.26c-0.051-0.088-0.108-0.169-0.169-0.24 c0.209-0.273,0.493-0.601,0.85-0.914c1.012-0.891,2.163-1.323,3.425-1.292c-0.263,0.172-0.533,0.334-0.81,0.476 C14.658,19.995,13.67,20.744,13.036,21.466z M18.923,21.068c0.192,0,0.348,0.155,0.348,0.348s-0.155,0.348-0.348,0.348 s-0.348-0.155-0.348-0.348C18.576,21.227,18.731,21.068,18.923,21.068z M19.976,22.151c0.459,0.135,0.783,0.638,0.87,0.789 c0.108,0.189,0.253,0.439,0.466,0.634H18.98c-0.088-0.317-0.213-0.617-0.371-0.894C18.866,22.222,19.439,21.993,19.976,22.151z M2.199,7.495c0,0.341,0.277,0.621,0.621,0.621S3.44,7.839,3.44,7.495c0-0.341-0.277-0.621-0.621-0.621S2.199,7.154,2.199,7.495z M3.022,7.495c0,0.111-0.091,0.202-0.202,0.202c-0.111,0-0.202-0.091-0.202-0.202s0.091-0.202,0.202-0.202 C2.931,7.292,3.022,7.384,3.022,7.495z M21.737,7.495c0-0.341-0.277-0.621-0.621-0.621c-0.341,0-0.621,0.277-0.621,0.621 c0,0.341,0.277,0.621,0.621,0.621S21.737,7.839,21.737,7.495z M20.914,7.495c0-0.111,0.091-0.202,0.202-0.202 s0.202,0.091,0.202,0.202s-0.091,0.202-0.202,0.202C21.005,7.701,20.914,7.61,20.914,7.495z M22.334,9.04 c-0.078-0.03-0.169-0.013-0.229,0.047c-0.273,0.28-0.722,0.27-0.729,0.27c-0.003,0-0.007,0-0.007,0 c-0.111,0-0.202,0.088-0.209,0.199c-0.003,0.115,0.084,0.213,0.199,0.216c0.02,0,0.351,0.01,0.688-0.145v3.404 c0,0.115,0.094,0.209,0.209,0.209s0.209-0.094,0.209-0.209V9.232C22.462,9.148,22.412,9.07,22.334,9.04z M1.73,13.241 c0.115,0,0.209-0.094,0.209-0.209V9.627c0.337,0.155,0.668,0.145,0.688,0.145c0.115-0.003,0.206-0.101,0.199-0.216 C2.823,9.442,2.725,9.351,2.61,9.357c-0.003,0-0.455,0.01-0.729-0.27C1.821,9.027,1.733,9.01,1.652,9.04 C1.574,9.07,1.524,9.148,1.524,9.232v3.802C1.52,13.15,1.615,13.241,1.73,13.241z M22.499,16.712c0-0.115-0.094-0.209-0.209-0.209 h-1.35c-0.115,0-0.209,0.094-0.209,0.209s0.094,0.209,0.209,0.209h1.35C22.405,16.922,22.499,16.83,22.499,16.712z M21.099,17.512 c0.115,0,0.209-0.094,0.209-0.209s-0.094-0.209-0.209-0.209h-0.52c-0.115,0-0.209,0.094-0.209,0.209s0.094,0.209,0.209,0.209 H21.099z M21.605,17.897c0-0.115-0.094-0.209-0.209-0.209h-1.289c-0.115,0-0.209,0.094-0.209,0.209s0.094,0.209,0.209,0.209h1.289 C21.511,18.106,21.605,18.015,21.605,17.897z M20.789,18.494c0-0.115-0.094-0.209-0.209-0.209h-1.009 c-0.115,0-0.209,0.094-0.209,0.209s0.094,0.209,0.209,0.209h1.009C20.694,18.703,20.789,18.609,20.789,18.494z M18.916,18.882 c-0.115,0-0.209,0.094-0.209,0.209s0.094,0.209,0.209,0.209h0.574c0.115,0,0.209-0.094,0.209-0.209s-0.094-0.209-0.209-0.209 H18.916z M22.29,15.312h-0.752c-0.115,0-0.209,0.094-0.209,0.209c0,0.115,0.094,0.209,0.209,0.209h0.752 c0.115,0,0.209-0.094,0.209-0.209C22.499,15.407,22.405,15.312,22.29,15.312z M22.29,15.909h-1.049 c-0.115,0-0.209,0.094-0.209,0.209s0.094,0.209,0.209,0.209h1.049c0.115,0,0.209-0.094,0.209-0.209S22.405,15.909,22.29,15.909z M22.29,14.121h-0.334c-0.115,0-0.209,0.094-0.209,0.209s0.094,0.209,0.209,0.209h0.334c0.115,0,0.209-0.094,0.209-0.209 C22.499,14.216,22.405,14.121,22.29,14.121z M22.29,14.718h-0.513c-0.115,0-0.209,0.094-0.209,0.209 c0,0.115,0.094,0.209,0.209,0.209h0.513c0.115,0,0.209-0.094,0.209-0.209C22.499,14.813,22.405,14.718,22.29,14.718z M1.723,13.511 c0.116,0,0.209,0.094,0.209,0.209c0,0.116-0.094,0.209-0.209,0.209c-0.116,0-0.209-0.094-0.209-0.209 C1.514,13.604,1.607,13.511,1.723,13.511z M2.566,18.291c0.116,0,0.209,0.094,0.209,0.209c0,0.116-0.094,0.209-0.209,0.209 c-0.116,0-0.209-0.094-0.209-0.209C2.357,18.385,2.451,18.291,2.566,18.291z M3.909,18.889c0.116,0,0.209,0.094,0.209,0.209 c0,0.116-0.094,0.209-0.209,0.209S3.7,19.213,3.7,19.098C3.7,18.982,3.794,18.889,3.909,18.889z M1.703,16.928h1.35 c0.115,0,0.209-0.094,0.209-0.209S3.167,16.51,3.052,16.51h-1.35c-0.115,0-0.209,0.094-0.209,0.209 C1.493,16.837,1.588,16.928,1.703,16.928z M3.413,17.104h-0.52c-0.115,0-0.209,0.094-0.209,0.209s0.094,0.209,0.209,0.209h0.52 c0.115,0,0.209-0.094,0.209-0.209C3.622,17.198,3.528,17.104,3.413,17.104z M3.886,17.698H2.597c-0.115,0-0.209,0.094-0.209,0.209 s0.094,0.209,0.209,0.209h1.289c0.115,0,0.209-0.094,0.209-0.209C4.095,17.789,4,17.698,3.886,17.698z M4.422,18.291H3.413 c-0.115,0-0.209,0.094-0.209,0.209s0.094,0.209,0.209,0.209h1.009c0.115,0,0.209-0.094,0.209-0.209 C4.631,18.386,4.537,18.291,4.422,18.291z M4.294,19.098c0,0.115,0.094,0.209,0.209,0.209h0.574c0.115,0,0.209-0.094,0.209-0.209 s-0.094-0.209-0.209-0.209H4.503C4.388,18.889,4.294,18.983,4.294,19.098z M1.703,15.737h0.752c0.115,0,0.209-0.094,0.209-0.209 c0-0.115-0.094-0.209-0.209-0.209H1.703c-0.115,0-0.209,0.094-0.209,0.209C1.493,15.643,1.588,15.737,1.703,15.737z M1.703,16.335 h1.049c0.115,0,0.209-0.094,0.209-0.209s-0.094-0.209-0.209-0.209H1.703c-0.115,0-0.209,0.094-0.209,0.209 S1.588,16.335,1.703,16.335z M1.703,14.546h0.334c0.115,0,0.209-0.094,0.209-0.209c0-0.115-0.094-0.209-0.209-0.209H1.703 c-0.115,0-0.209,0.094-0.209,0.209S1.588,14.546,1.703,14.546z M1.703,15.14h0.513c0.115,0,0.209-0.094,0.209-0.209 c0-0.115-0.094-0.209-0.209-0.209H1.703c-0.115,0-0.209,0.094-0.209,0.209C1.493,15.049,1.588,15.14,1.703,15.14z M11.996,23.217 L11.996,23.217c0.003-0.003,0-0.003,0-0.007V23.217z M21.484,4.175C21.487,4.175,21.487,4.175,21.484,4.175 c0.094,0,0.179-0.064,0.202-0.159c0.074-0.297,0.044-0.55-0.098-0.759C21.362,2.92,20.947,2.856,20.9,2.849 c-0.108-0.013-0.209,0.054-0.233,0.162c-0.078,0.354-0.034,0.638,0.135,0.847C21.052,4.161,21.443,4.172,21.484,4.175z M21.248,3.493c0.04,0.064,0.064,0.138,0.064,0.226c-0.061-0.024-0.128-0.061-0.175-0.121c-0.054-0.067-0.081-0.155-0.081-0.267 C21.123,3.365,21.197,3.419,21.248,3.493z M20.128,1.159c-0.226-0.337-0.641-0.401-0.688-0.408 c-0.108-0.013-0.209,0.054-0.233,0.162c-0.078,0.354-0.034,0.638,0.135,0.847c0.243,0.304,0.634,0.314,0.678,0.314l0,0 c0.094,0,0.179-0.064,0.202-0.159C20.3,1.624,20.269,1.368,20.128,1.159z M19.672,1.499c-0.054-0.067-0.081-0.155-0.081-0.267 c0.071,0.034,0.145,0.088,0.192,0.162c0.04,0.064,0.064,0.138,0.064,0.226C19.787,1.597,19.719,1.56,19.672,1.499z M3.133,2.849 C3.086,2.856,2.674,2.92,2.445,3.257C2.307,3.466,2.273,3.719,2.347,4.016C2.371,4.107,2.455,4.175,2.55,4.175l0,0 c0.044,0,0.435-0.01,0.678-0.314C3.396,3.652,3.44,3.365,3.363,3.014C3.342,2.906,3.241,2.836,3.133,2.849z M2.907,3.598 C2.86,3.659,2.792,3.696,2.728,3.719c0-0.088,0.024-0.165,0.064-0.226c0.051-0.074,0.125-0.128,0.192-0.162 C2.985,3.443,2.958,3.531,2.907,3.598z M4.564,0.75C4.517,0.757,4.105,0.821,3.875,1.159C3.737,1.368,3.703,1.621,3.778,1.918 C3.801,2.009,3.886,2.076,3.98,2.076l0,0c0.044,0,0.435-0.01,0.678-0.314c0.169-0.209,0.213-0.496,0.135-0.847 C4.77,0.808,4.672,0.737,4.564,0.75z M4.334,1.499C4.287,1.56,4.22,1.597,4.156,1.621c0-0.088,0.024-0.165,0.064-0.226 C4.27,1.321,4.344,1.267,4.412,1.233C4.412,1.344,4.388,1.432,4.334,1.499z M18.579,10.562c0.013,0.108,0.101,0.186,0.206,0.186 c0.007,0,0.017,0,0.024,0c0.115-0.013,0.196-0.118,0.182-0.233c-0.209-1.822-1.454-3.111-1.508-3.165 c-0.081-0.081-0.213-0.084-0.294-0.003c-0.081,0.081-0.084,0.213-0.003,0.294C17.199,7.653,18.387,8.885,18.579,10.562z M5.218,10.744c0.007,0,0.017,0,0.024,0c0.105,0,0.196-0.078,0.206-0.186C5.64,8.882,6.828,7.65,6.838,7.64 c0.081-0.081,0.078-0.216-0.003-0.294C6.753,7.265,6.618,7.265,6.541,7.35c-0.054,0.054-1.296,1.343-1.508,3.165 C5.023,10.629,5.104,10.73,5.218,10.744z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/WordPress/gutenberg/blob/master/docs/final-g-wapuu-black.svg\",hex:\"000000\"},Habr:{title:\"Habr\",slug:\"habr\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Habr icon</title><path d=\"M0 0v24h24V0zm7.025 4h1.633c1.219 0 1.64.029 1.668.113.019.066.028 1.369.028 2.897l-.008 2.783.476-.422c.657-.581 1.212-.787 2.262-.824.694-.019.973.009 1.46.178 1.06.356 1.81 1.087 2.204 2.166.15.421.17.863.197 4.285l.03 3.824h-3.338v-3.121c0-3.075-.01-3.113-.217-3.488-.29-.497-.609-.722-1.106-.778-.853-.093-1.443.197-1.78.89-.16.32-.179.656-.188 3.356-.01 1.65-.03 3.03-.03 3.067-.008.047-.75.074-1.65.074h-1.64v-7.5z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://habr.com/\",hex:\"77A2B6\"},Hackaday:{title:\"Hackaday\",slug:\"hackaday\",svg:'<svg xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" viewBox=\"0 0 24 24\"><title>Hackaday icon</title><path d=\"M0 4.124c0-.204.021-.401.06-.595l1.956 1.734 2.144-2.38L2.246 1.18c.259-.072.53-.114.812-.114a3.062 3.062 0 0 1 3.058 3.037v.021c0 .152-.012.304-.033.45l2.385 2.112a6.716 6.716 0 0 0-2.013 2.54L3.982 7.037a3.038 3.038 0 0 1-.924.145A3.06 3.06 0 0 1 0 4.124zm20.942 12.694c-.306 0-.601.045-.88.129l-2.308-2.044a6.862 6.862 0 0 1-1.819 2.706l1.993 1.765a3.05 3.05 0 0 0-.044.502 3.06 3.06 0 0 0 3.935 2.929l-1.992-1.77 2.14-2.365 1.981 1.76c.034-.181.052-.364.052-.554v-.026a3.057 3.057 0 0 0-3.058-3.032zm-3.397-7.592l2.473-2.189c.292.093.601.145.924.145A3.06 3.06 0 0 0 23.94 3.53l-1.956 1.734-2.144-2.38 1.914-1.703a3.049 3.049 0 0 0-.812-.114 3.062 3.062 0 0 0-3.058 3.037v.021c0 .152.012.304.033.45l-2.385 2.112a6.716 6.716 0 0 1 2.013 2.54zm-11.3 5.677l-2.307 2.044A3.057 3.057 0 0 0 0 19.85v.026c0 .19.018.373.052.554l1.982-1.76 2.14 2.365-1.993 1.77a3.06 3.06 0 0 0 3.935-2.929 3.05 3.05 0 0 0-.044-.502l1.993-1.765a6.862 6.862 0 0 1-1.82-2.706zm8.971 2.657a1.076 1.076 0 1 1-1.961.424h-.192a1.076 1.076 0 1 1-2.127 0h-.15A1.105 1.105 0 0 1 9.7 19.23c-.604 0-1.094-.5-1.094-1.115 0-.21.057-.405.156-.572-1.493-1.142-2.474-3.051-2.474-5.213 0-3.497 2.559-6.332 5.713-6.332s5.713 2.835 5.713 6.332c0 2.173-.991 4.091-2.497 5.231zm-4.194-5.914a1.995 1.995 0 0 0-.559-.66 1.804 1.804 0 0 0-.918-.264 1.45 1.45 0 0 0-.319.036c-.405.05-.747.327-.983.647-.207.257-.368.569-.372.905-.032.278.024.556.075.828.066.322.293.584.55.774.119.095.29.226.44.116.1-.134.016-.33.107-.478a.5.5 0 0 1 .258-.326c.263-.132.527-.262.808-.355.228-.067.416-.219.61-.349.255-.197.424-.558.303-.874zm.996 2.325c-.279-.007-.63 1.237-.574 1.78.175.72.237-.505.574-.506.323.014.275 1.255.53.504.078-.5-.224-1.77-.53-1.778zm4.036-.833c.051-.272.107-.55.075-.828-.004-.336-.165-.648-.372-.905-.236-.32-.578-.596-.983-.647a1.45 1.45 0 0 0-.319-.036c-.32-.001-.644.1-.918.264-.235.171-.42.406-.559.66-.121.316.048.677.303.874.194.13.382.282.61.35.28.092.545.222.808.354a.5.5 0 0 1 .258.326c.091.147.007.344.106.478.151.11.322-.021.44-.116.258-.19.485-.452.551-.774z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://hackaday.com/\",hex:\"1A1A1A\"},HackerEarth:{title:\"HackerEarth\",slug:\"hackerearth\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>HackerEarth icon</title><path d=\"M20.983.002H9.508v6.494h.11a3.629 3.629 0 0 1 3.557-1.332l-.023-.004c1.966.144 3.91 1.336 4.02 5.158v7.554a.299.299 0 0 1-.287.287h-2.11a.287.287 0 0 1-.287-.287V10.55c0-1.778-.585-3.114-2.341-3.114h-.038a2.606 2.606 0 0 0-2.6 2.78v-.008 7.665a.287.287 0 0 1-.287.287H7.124a.287.287 0 0 1-.287-.287V.004H3.193L3.126.003c-.823 0-1.493.652-1.523 1.468V22.458c.03.857.73 1.541 1.59 1.546h17.792a1.458 1.458 0 0 0 1.413-1.55v.004V1.474A1.38 1.38 0 0 0 21.021.005l-.038.001h.002zm-2.54 20.983H5.555V19.66h12.888z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.hackerearth.com/logo/\",hex:\"323754\"},HackerOne:{title:\"HackerOne\",slug:\"hackerone\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>HackerOne icon</title><path d=\"M7.207 0c-.4836 0-.8774.1018-1.1823.3002-.3044.2003-.4592.4627-.4592.7798v21.809c0 .2766.1581.5277.4752.7609.315.2335.7031.3501 1.1664.3501.4427 0 .8306-.1166 1.1678-.3501.3352-.231.5058-.4843.5058-.761V1.0815c0-.319-.1623-.5769-.4893-.7813C8.0644.1018 7.6702 0 7.207 0zm9.5234 8.662c-.4836 0-.8717.0981-1.1683.3007l-4.439 2.7822c-.1988.1861-.2841.4687-.2473.855.0342.3826.2108.747.5238 1.0907.3145.346.6662.5626 1.0684.6547.3963.0899.6973.041.8962-.143l1.7551-1.0951v9.7817c0 .2767.1522.5278.4607.761.3007.2335.6873.3501 1.1504.3501.463 0 .863-.1166 1.1983-.3501.3371-.2332.5058-.4843.5058-.761V9.7381c0-.3193-.165-.577-.4898-.7754-.3252-.2026-.7288-.3007-1.2143-.3007z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.hackerone.com/branding\",hex:\"494649\"},HackerRank:{title:\"HackerRank\",slug:\"hackerrank\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>HackerRank icon</title><path d=\"M12 0c1.285 0 9.75 4.886 10.392 6 .645 1.115.645 10.885 0 12S13.287 24 12 24s-9.75-4.885-10.395-6c-.641-1.115-.641-10.885 0-12C2.25 4.886 10.715 0 12 0zm2.295 6.799c-.141 0-.258.115-.258.258v3.875H9.963V6.908h.701c.141 0 .254-.115.254-.258 0-.094-.049-.176-.123-.221L9.223 4.92c-.049-.063-.141-.109-.226-.109-.084 0-.16.045-.207.107L7.11 6.43c-.072.045-.12.126-.12.218 0 .143.113.258.255.258h.704l.008 10.035c0 .145.111.258.254.258h1.492c.142 0 .259-.115.259-.256v-4.004h4.073v4.152h-.699c-.143 0-.256.115-.256.258 0 .092.048.174.119.219l1.579 1.51c.044.061.141.109.225.109.085 0 .159-.045.208-.109l1.679-1.51c.072-.045.12-.127.12-.219 0-.143-.115-.258-.255-.258h-.704l-.007-10.034c0-.145-.114-.26-.255-.26h-1.494v.002z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.hackerrank.com/\",hex:\"2EC866\"},HackHands:{title:\"HackHands\",slug:\"hackhands\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>HackHands icon</title><path d=\"M5.3 17.63h6.35c.5 0 .89-.4.89-.9s-.4-.89-.9-.89H5.3c-.5 0-.89.4-.89.89 0 .5.4.9.9.9zM16.58 13.77c0-.5-.4-.9-.9-.9H6.54c-.5 0-.89.4-.89.9s.4.9.9.9h9.15c.5 0 .9-.4.9-.9zM18.44 10.8a.91.91 0 0 0-.89-.88H6.53c-.5 0-.89.39-.89.89s.4.89.9.89h11.01c.5 0 .89-.4.89-.9zM5.64 7.82c0 .5.4.89.9.89h9.5c.49 0 .88-.4.88-.9 0-.49-.4-.88-.89-.88h-9.5c-.5 0-.89.39-.89.89zM7.92 3.96H5.3c-.5 0-.89.4-.89.9s.4.89.9.89h2.64c.5 0 .9-.4.9-.9a.93.93 0 0 0-.93-.89zM22.87 20.8a.93.93 0 0 0-.94-.94H4.7c-.95 0-1.73-.8-1.73-1.74V3.57c0-.95.78-1.73 1.73-1.73h14.55c.95 0 1.74.76 1.74 1.73v11.8c0 .5.42.92.9.92.51 0 .93-.42.93-.92V3.57c0-1.97-1.6-3.57-3.57-3.57H4.7a3.57 3.57 0 0 0-3.57 3.57v14.55c0 1.97 1.6 3.57 3.57 3.57H20.4L22.87 24v-3.2z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://hackhands.com/\",hex:\"00ACBD\"},Hackster:{title:\"Hackster\",slug:\"hackster\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Hackster icon</title><path d=\"M18.425 10.349c.262 0 .48.209.48.479v2.155c0 .32.26.582.58.582h4.26c.295 0 .355.426.068.504l-8.568 2.468c-.248.073-.509-.068-.581-.317-.013-.043-.021-.088-.019-.133v-2.252c-.002-.115-.094-.209-.209-.21H5.042c-.114-.001-.207-.093-.209-.207v-2.53c.001-.353-.28-.643-.634-.65l-3.998-.07c-.235-.01-.278-.34-.052-.408l8.76-2.529c.111-.029.225.037.254.146.004.016.007.033.007.053v2.441c0 .26.217.478.479.478h8.776zM8.788 4.543c.305-.052.375.348.375.348s.025.947 0 1.338c-.027.39-.383.375-.383.375H5.304s-.315-.113-.357-.522c-.053-.408.434-.636.434-.636s3.104-.851 3.405-.903h.002zm5.885-1.104s-.045-.461.471-.66c.512-.191 3.268-.904 3.268-.904s.512-.2.547.471c.035.668 0 6.178 0 6.178s.018.451-.469.486c-.488.035-3.225 0-3.225 0s-.592.053-.592-.417V3.439zm.078 14.332c.025-.391.383-.375.375-.384h3.475s.305.113.357.522c.053.408-.436.635-.436.635s-3.102.851-3.406.902c-.305.062-.365-.339-.365-.339s-.025-.945 0-1.336zm-5.518 2.79s.051.461-.471.66c-.513.19-3.268.903-3.268.903s-.514.201-.547-.47c-.035-.668 0-6.178 0-6.178s-.018-.451.469-.486 3.225 0 3.225 0 .529-.053.592.417c.059.46 0 .79 0 .79v4.364z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://drive.google.com/file/d/0B3aqzR8LzoqdT1p4ZUlWVnJ1elk/view?usp=sharing\",hex:\"1BACF7\"},HappyCow:{title:\"HappyCow\",slug:\"happycow\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>HappyCow icon</title><path d=\"M8.66 1.23c-.424.004-.924.156-1.13.236-1.69.678-2.78 3.09-2.2 5.52-.32-.139-.614-.257-.676-.28a8.46 8.46 0 0 0-1.45-.412c-.849-.156-1.8-.189-2.53.471-.693.63-.963 1.87-.271 2.6.749.783 2.3.637 3.27.548.101-.01.557-.04 1-.106a9.763 9.763 0 0 0-.116 1.59c-3.73 1.32-3.43 10.1 5.09 11.2 10.8 1.39 11.6-6.81 9.07-9.14.091-.518.144-.999.165-1.45.433.202.933.386 1.04.426.903.353 2.34.917 3.29.462.874-.42.985-1.56.51-2.29-.497-.768-1.42-1.01-2.27-1.12a9.355 9.355 0 0 0-1.51-.061c-.05.002-.252.012-.497.03 1.33-1.83 1.4-4.19.319-5.48-.25-.298-1.22-1.23-1.65-.743-.279.392.226 1.16.186 1.74-.092.901-.855 1.62-1.36 2.01-.717-.57-1.36-.745-1.36-.745l-.322-.062c-.644-.5-1.53-.563-1.53-.563.363-.44 1.56-.1 1.56-.1-1.06-1.06-2.31-.328-2.31-.328 0-.517-.381-.831-.381-.831-.398.306-.415.714-.415.714-1.01-1.06-2.12-.794-2.12-.794s.98.31 1.17 1.08a2.638 2.638 0 0 0-.533-.049l-.346-.066a6.87 6.87 0 0 0-1.81.062c-.245-.593-.51-1.5-.191-2.28.237-.527 1.04-.966.983-1.44-.063-.277-.346-.363-.676-.359zm2.03 3.21c.612.065 1.19.512 1.6.993.004-.298.045-.625.269-.843.227.189.265.57.25.867.528-.343 1.23-.48 1.82-.203-.465-.063-.989.058-1.24.498.768.044 1.63.26 2.1.92-.692-.385-1.64-.876-2.42-.365.541.139 1.13.49 1.17 1.11a2.764 2.764 0 0 0-1.9-1.12c-.69.027-1.42.342-1.84.904-.106.174-.188.353-.174.01-.044-.673.737-.908 1.26-.997-.612-.3-1.31-.514-1.99-.375.511-.414 1.22-.43 1.83-.28a1.627 1.627 0 0 0-.728-1.12zM2.26 6.92a2.81 2.81 0 0 1 .526.054c.284.05.876.21 1.13.497.25.287.974 1.36-.751 1.62-.563.06-1.46.159-1.89-.298-.394-.422-.229-1.16.175-1.54.265-.248.529-.328.81-.333zm5.77 1a1.35 1.35 0 0 1 .264.02c2.65.432 1.14 4.81 1.14 4.81l-.294-.203c.204-.483.428-1.25.416-2.01-.017-1.07-.63-1.94-1.37-1.92-.74.01-1.33.892-1.31 1.97.004.279.046.785.121 1.05-.005-.015-.005-.133-.01-.15l-.678-.213s.013-3.32 1.72-3.35zm7.61 1.21c.156.001.322.022.498.063 1.94.46.663 3.57.663 3.57l-.607.1v.003c-.655.103-1.39.213-2.13.35-.023-.028.019.03 0 0l-.865.143s.105-4.25 2.44-4.23zm-1.58 4.15l2.21-.315c.117-.167.182-.442.225-.665.203-1.05.158-2.03-.53-2.3a.953.953 0 0 0-.334-.066c-.617-.012-1.29.54-1.63 1.38-.205.518-.391 1.63-.258 2 .05.14.511.119.418.016zM8.27 9.57a.409.409 0 1 1 0 .818.409.409 0 0 1 0-.818zm13.1.55c.167.002.32.015.427.03.492.066.904.159 1.19.617.274.437.213 1.11-.289 1.36-.543.269-1.37-.07-1.89-.281-1.57-.71-.56-1.42-.237-1.59.202-.11.517-.137.795-.134zm-5.92.645a.409.409 0 1 1 .026.818.409.409 0 0 1-.026-.818zm-9.85.741c1.45-.014 2.64.949 3.88 1.56 1.7.91 3.72.797 5.53.348 1.1-.334 2.49-.539 3.43.234 1.26 1.25 1.41 3.21.84 4.79-.697 2.04-2.7 3.33-4.74 3.75-2.55.45-5.29.36-7.7-.663-2.75-1.06-4.7-4.09-4.21-7.06.146-1.47 1.41-2.92 2.96-2.97zm1.77 1.75a.625.625 0 0 0-.164.025c-.418.125-.507.674-.198 1.23.309.552.898.9 1.32.773.418-.125.507-.674.198-1.23-.27-.484-.755-.809-1.15-.799zm-2.55.945a1.014 1.014 0 0 0-.614.174c-.535.384-.549 1.42.074 2.29.623.868 1.65 1.24 2.18.857.535-.384.534-1.54-.088-2.41-.428-.597-1.04-.903-1.55-.911zm10.7.172a1.357 1.357 0 0 0-.608.144c-.571.272-.956.837-.858 1.26.098.425.64.549 1.21.278.572-.272.955-.837.858-1.26-.061-.266-.296-.414-.603-.421zm-10.8.14c.633-.02 1.18.411 1.5.931.3.534.566 1.41-.004 1.85-.878.205-1.66-.574-1.96-1.33-.244-.474-.208-1.41.47-1.45zm12.9 1.48a1.294 1.294 0 0 0-.104 0c-.47.022-1.03.29-1.51.764-.756.755-.991 1.75-.525 2.21.465.466 1.46.23 2.21-.524.756-.756.991-1.75.525-2.21a.867.867 0 0 0-.601-.238zm.014.309c.174.01.35.091.44.243.233.785-.355 1.58-.985 1.99-.423.305-1.21.618-1.51.012-.09-1.11.915-2.12 1.98-2.25a.602.602 0 0 1 .074 0zm-10.3 1.45a.124.124 0 0 0-.103.062c-.01.014-.19.312-.548.309a.125.125 0 0 0-.128.129c.001.065.053.12.116.129l.018.001a.85.85 0 0 0 .316-.057c.216.431 1.1 1.9 3.28 2.25 2.21.353 3.87-.74 4.3-1.05a.88.88 0 0 0 .339.157l.017.003a.129.129 0 0 0 .138-.1.132.132 0 0 0-.102-.155c-.35-.078-.474-.411-.48-.427a.135.135 0 0 0-.166-.083.126.126 0 0 0-.081.163c.003.01.045.126.146.256-.436.3-2.02 1.26-4.09.968-1.93-.272-2.83-1.69-3.06-2.11.138-.111.209-.23.215-.238a.13.13 0 0 0-.05-.178.135.135 0 0 0-.075-.018z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.happycow.net/press-kits\",hex:\"7C4EC4\"},Hashnode:{title:\"Hashnode\",slug:\"hashnode\",svg:'<svg xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" viewBox=\"0 0 24 24\"><title>Hashnode icon</title><path d=\"M3.84 0h16.32A3.84 3.84 0 0 1 24 3.84v16.32A3.84 3.84 0 0 1 20.16 24H3.84A3.84 3.84 0 0 1 0 20.16V3.84A3.84 3.84 0 0 1 3.84 0zm14.175 21.638l-.004-.001a2.577 2.577 0 0 0 .209-5.139l-4.917-8.682c-.719-1.292-2.108-1.236-2.609.598-.43 1.736-.319 3.372-.444 5.348-.001.013-.01.024-.023.027s-.026-.002-.033-.013l-4.39-8.751c.358-.281.568-.711.569-1.167a1.459 1.459 0 1 0-1.459 1.459c.069 0 .125-.014.18-.014 1.848 4.75 3.904 10.293 4.64 11.571.5 1.222 2.209.833 2.251-.486l.18-6.932c0-.042.055-.042.07-.014l3.526 8.389a2.573 2.573 0 0 0 2.254 3.806z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://hashnode.com/media\",hex:\"2962FF\"},Haskell:{title:\"Haskell\",slug:\"haskell\",svg:'<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" role=\"img\"><title>Haskell icon</title><path d=\"M.006 20.47L5.649 12 .006 3.531h4.235l5.674 8.47-5.674 8.468zm5.643 0L11.29 12 5.65 3.531h4.266l11.253 16.938h-4.224l-3.535-5.34-3.495 5.34zM19.3 15.525l-1.877-2.827h6.571v2.826zm-2.826-4.235l-1.877-2.827h9.387v2.827z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://commons.wikimedia.org/wiki/File:Haskell-Logo.svg\",hex:\"5D4F85\"},\"Hatena Bookmark\":{title:\"Hatena Bookmark\",slug:\"hatenabookmark\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Hatena Bookmark icon</title><path d=\"M20.47 0C22.42 0 24 1.58 24 3.53v16.94c0 1.95-1.58 3.53-3.53 3.53H3.53C1.58 24 0 22.42 0 20.47V3.53C0 1.58 1.58 0 3.53 0h16.94zm-3.705 14.47c-.78 0-1.41.63-1.41 1.41s.63 1.414 1.41 1.414 1.41-.645 1.41-1.425-.63-1.41-1.41-1.41zM8.61 17.247c1.2 0 2.056-.042 2.58-.12.526-.084.976-.222 1.32-.412.45-.232.78-.564 1.02-.99s.36-.915.36-1.48c0-.78-.21-1.403-.63-1.87-.42-.48-.99-.734-1.74-.794.66-.18 1.156-.45 1.456-.81.315-.344.465-.824.465-1.424 0-.48-.103-.885-.3-1.26-.21-.36-.493-.645-.883-.87-.345-.195-.735-.315-1.215-.405-.464-.074-1.29-.12-2.474-.12H5.654v10.486H8.61zm.736-4.185c.705 0 1.185.088 1.44.262.27.18.39.495.39.93 0 .405-.135.69-.42.855-.27.18-.765.254-1.44.254H8.31v-2.297h1.05zm8.656.706v-7.06h-2.46v7.06H18zM8.925 9.08c.71 0 1.185.08 1.432.24.245.16.367.435.367.83 0 .38-.13.646-.39.804-.265.154-.747.232-1.452.232h-.57V9.08h.615z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://hatenacorp.jp/press/resource\",hex:\"00A4DE\"},Haxe:{title:\"Haxe\",slug:\"haxe\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Haxe icon</title><path d=\"M23.784 0a.221.221 0 0 0-.043.003h-5.853a.221.221 0 0 0-.1.023L12 2.918 6.21.026a.221.221 0 0 0-.098-.023H.238a.221.221 0 0 0-.026 0 .221.221 0 0 0-.21.256v5.853a.221.221 0 0 0 .024.1l2.894 5.785L.026 17.79a.221.221 0 0 0-.024.099v5.84a.221.221 0 0 0 .002.078.221.221 0 0 0 .253.19h5.855a.221.221 0 0 0 .099-.023L12 21.076l5.789 2.898a.221.221 0 0 0 .099.023h5.877a.221.221 0 0 0 .232-.257V17.89a.221.221 0 0 0-.023-.1l-2.895-5.792 2.895-5.786a.221.221 0 0 0 .023-.099V.267a.221.221 0 0 0-.005-.098.221.221 0 0 0-.208-.169zM2.022.445H6.06l4.038 2.017zm15.918 0h4.038l-8.075 2.017zM.528.528l11.039 2.76-8.28 8.275-.238-.953zM23.47.535l-2.76 11.031-8.277-8.279zm.084 1.487V6.06l-2.019 4.035zm-23.11.003L2.29 9.398l.175.7L.445 6.06zM12 3.48L20.52 12l-8.517 8.516-8.241-8.234L3.48 12zm8.712 8.952l.088.351 2.672 10.688-11.04-2.76zm-17.424 0l8.274 8.274L.531 23.46l.266-1.065zm18.247 1.466l2.02 4.042v4.027zm-19.07 0l-2.02 8.08v-4.038zm7.626 7.638l-4.032 2.018H2.02zm3.818 0l8.071 2.018h-4.04z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://haxe.org/foundation/branding.html\",hex:\"EA8220\"},Helm:{title:\"Helm\",slug:\"helm\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Helm icon</title><path d=\"M16.688 17.969c.388-.272 1.274.325 1.98 1.332s.963 2.044.574 2.316c-.388.272-1.275-.325-1.98-1.332s-.963-2.044-.574-2.316zm-9.284 0c-.388-.272-1.274.325-1.98 1.332s-.963 2.044-.574 2.316c.388.272 1.275-.325 1.98-1.332s.963-2.044.574-2.316zm4.637 1.578c-.474 0-.858.997-.858 2.227s.384 2.227.858 2.227.858-.997.858-2.227-.384-2.227-.858-2.227zM16.688 6.031c.388.272 1.274-.325 1.98-1.332s.963-2.044.574-2.316c-.388-.272-1.275.325-1.98 1.332s-.963 2.044-.574 2.316zm-9.284 0c-.388.272-1.274-.325-1.98-1.332s-.963-2.044-.574-2.316c.388-.272 1.275.325 1.98 1.332s.963 2.044.574 2.316zm4.637-1.578c-.474 0-.858-.997-.858-2.227s.384-2.227.858-2.227.858.997.858 2.227-.384 2.227-.858 2.227zM.471 9.066h1.653v2.325h1.864V9.066h1.653v6.245H3.988v-2.479H2.124v2.479H.471V9.066zm6.552 0h4.035v1.384H8.675v.98h2.037v1.384H8.675v1.115h2.479v1.384H7.023V9.068zm5.342 0h1.653v4.862h2.364v1.384h-4.016V9.067zm5.092 0h1.71l.98 2.594.346 1.018h.038l.346-1.018.942-2.594h1.71v6.245h-1.537v-1.845c0-.16.008-.336.024-.528s.034-.389.053-.591.042-.399.067-.591c.026-.192.048-.365.067-.519h-.038l-.519 1.46-.865 2.104h-.615l-.865-2.104-.5-1.46h-.038l.067.519c.025.192.048.389.067.591.019.202.037.399.053.591s.024.368.024.528v1.845h-1.518V9.066z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://helm.sh\",hex:\"277A9F\"},HERE:{title:\"HERE\",slug:\"here\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>HERE icon</title><path d=\"M6.656 19.63l-3.304 3.295L.044 19.63zM11.49 12.108c-.69-.821-.656-1.264-.229-1.69.519-.52 1.047-.306 1.639.274zm7.08-8.993c.518-.519 1.046-.305 1.638.275l-1.41 1.41c-.692-.818-.659-1.258-.229-1.685zm4.271 1.44c-.643.962-1.742 2.52-2.929 1.343l2.97-2.97c-.266-.283-.47-.524-.611-.676-1.614-1.6-3.418-1.62-4.834-.214-.943.943-1.19 2.02-.915 3.051l-.916-1.065a1.935 1.935 0 0 0-.555 2.67l-1.065-.884-1.431 1.406 1.907 1.907c-1.474-1.168-3.051-1.055-4.34.217-1.363 1.361-1.269 3.012-.246 4.37l-.208-.205c-1.349-1.348-2.813-.872-3.54-.146-.561.561-.915 1.33-.762 1.867l-2.918-2.92-1.556 1.556 5.764 5.768h3.095l-2.078-2.09c-1.093-1.111-1.111-1.697-.58-2.225.53-.528 1.104-.192 2.151.851l2.054 2.05 1.562-1.543-1.95-1.947c1.404 1.062 3.088 1.12 4.577-.378l.028-.028a4.43 4.43 0 0 0 1.19-1.678l-1.169-.784c-.647.96-1.76 2.523-2.93 1.364l2.976-2.976 1.855 1.84 1.618-1.617-2.32-2.319c-1.083-1.083-.442-2.1 0-2.484a4.577 4.577 0 0 0 .916 1.27c1.501 1.504 3.439 1.806 5.145.106l.027-.027a4.434 4.434 0 0 0 1.19-1.678z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.here.com\",hex:\"48DAD0\"},Heroku:{title:\"Heroku\",slug:\"heroku\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Heroku icon</title><path d=\"M20.61 0H3.39C2.189 0 1.23.96 1.23 2.16v19.681c0 1.198.959 2.159 2.16 2.159h17.22c1.2 0 2.159-.961 2.159-2.159V2.16C22.77.96 21.811 0 20.61 0zm.96 21.841c0 .539-.421.96-.96.96H3.39c-.54 0-.96-.421-.96-.96V2.16c0-.54.42-.961.96-.961h17.22c.539 0 .96.421.96.961v19.681zM6.63 20.399L9.33 18l-2.7-2.4v4.799zm9.72-9.719c-.479-.48-1.379-1.08-2.879-1.08-1.621 0-3.301.421-4.5.84V3.6h-2.4v10.38l1.68-.78s2.76-1.26 5.16-1.26c1.2 0 1.5.66 1.5 1.26v7.2h2.4v-7.2c.059-.179.059-1.501-.961-2.52zM13.17 7.5h2.4c1.08-1.26 1.62-2.521 1.8-3.9h-2.399c-.241 1.379-.841 2.64-1.801 3.9z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.heroku.com\",hex:\"430098\"},Hexo:{title:\"Hexo\",slug:\"hexo\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Hexo icon</title><path d=\"M12 .007L1.57 6.056V18.05L12 23.995l10.43-6.049V5.952L12 .007zm4.798 17.105l-.939.521-.939-.521V12.94H9.08v4.172l-.94.521-.938-.521V6.89l.939-.521.939.521v4.172h5.84V6.89l.94-.521.938.521v10.222z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://hexo.io/\",hex:\"0E83CD\"},Highly:{title:\"Highly\",slug:\"highly\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Highly icon</title><path d=\"M10.2 20.4H13.799999999999999V24H10.2zM9 0H15V18H9z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://highly.co/\",hex:\"FF3C00\"},HipChat:{title:\"HipChat\",slug:\"hipchat\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>HipChat icon</title><path d=\"M19.736 19.056s.103-.073.267-.198C22.46 16.958 24 14.203 24 11.139 24 5.424 18.627.787 12.003.787 5.377.787 0 5.424 0 11.139c0 5.717 5.371 10.356 11.998 10.356.847 0 1.694-.073 2.524-.228l.262-.045c1.683 1.092 4.139 1.99 6.288 1.99.665 0 .978-.546.552-1.104-.648-.795-1.541-2.068-1.888-3.052zm-1.462-4.526c-.716 1.069-2.934 2.889-6.254 2.889h-.046c-3.328 0-5.543-1.831-6.254-2.889a1.137 1.137 0 0 1-.273-.574.49.49 0 0 1 .447-.526c.008-.003.014-.003.021-.003.117.006.23.043.328.111a9.137 9.137 0 0 0 5.754 2.056 8.805 8.805 0 0 0 5.76-2.059.461.461 0 0 1 .313-.122c.267 0 .478.213.483.475a1.321 1.321 0 0 1-.268.643h-.011z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.atlassian.com/company/news/press-kit\",hex:\"0052CC\"},Hitachi:{title:\"Hitachi\",slug:\"hitachi\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Hitachi icon</title><path d=\"M17.787 11.41h-1.026a.852.852 0 00-.052-.284.714.714 0 00-.459-.427 1.417 1.417 0 00-.913.019.89.89 0 00-.535.542 2.318 2.318 0 00-.04 1.425.88.88 0 00.535.584 1.492 1.492 0 00.977.027.705.705 0 00.428-.384.976.976 0 00.08-.396h1.031a2.198 2.198 0 01-.049.351c-.09.365-.346.672-.684.814a3.254 3.254 0 01-2.251.104c-.477-.15-.89-.493-1.054-.96a2.375 2.375 0 01-.133-.788c0-.388.068-.764.254-1.077.192-.321.486-.569.842-.701a3.062 3.062 0 012.318.063 1.2 1.2 0 01.698.853c.017.076.028.156.033.235zm-3.979 2.436H12.72l-.32-.793h-1.834c-.001.001-.315.794-.319.793h-1.09l1.727-3.693c0 .002 1.199 0 1.199 0l1.725 3.693zm5.483.001h-.977s.005-3.693 0-3.693h.977v1.477h1.976c0 .005-.002-1.478 0-1.477h.979s.003 3.686 0 3.693h-.979v-1.626c0 .005-1.976 0-1.976 0 .002.007 0 1.624 0 1.626zm-18.312 0H0s.005-3.693 0-3.693h.979s-.002 1.487 0 1.477h1.976c0 .005-.004-1.478 0-1.477h.978s.004 3.686 0 3.693h-.978v-1.626c0 .005-1.976 0-1.976 0 0 .007-.002 1.625 0 1.626zm7.531-.001h-.977v-3.065H6.036s.002-.626 0-.627c.002.001 3.971 0 3.971 0v.627H8.51v3.065zm-3.801-3.692h.977v3.692h-.977v-3.692zm18.312 0H24v3.692h-.979v-3.692zm-11.537.627l-.681 1.68h1.361l-.68-1.68z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://commons.wikimedia.org/wiki/File:Hitachi_inspire_the_next-Logo.svg\",hex:\"E60027\"},HockeyApp:{title:\"HockeyApp\",slug:\"hockeyapp\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>HockeyApp icon</title><path d=\"M21.794 15.002c.075-.057.181-.007.194.083.006.057.012.114.012.171C22 16.842 18.669 19 12 19c-6.669 0-10-2.158-10-3.737 0-.057.006-.115.013-.166a.12.12 0 0 1 .193-.082c1.656 1.19 4.919 2.209 9.794 2.209 4.881 0 8.144-1.019 9.794-2.222zM12 14.168c-5.406 0-8.988-1.229-10.738-2.649a.122.122 0 0 0-.187.039c-.094.178-.137.369-.137.56 0 1.75 3.687 4.087 11.062 4.087s11.063-2.33 11.063-4.087c0-.198-.044-.382-.138-.56a.122.122 0 0 0-.188-.039c-1.75 1.42-5.33 2.649-10.737 2.649zm12-5.73c0 2.018-4 4.711-12 4.711S0 10.456 0 8.438C0 6.42 4 5 12 5s12 1.42 12 3.438zm-3.5-.318c0-1.013-2.831-1.592-8.5-1.592-5.669 0-8.5.58-8.5 1.592s2.831 2.483 8.5 2.483c5.669 0 8.5-1.471 8.5-2.483z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://hockeyapp.net/brand-guidelines/\",hex:\"009EE1\"},\"Home Assistant\":{title:\"Home Assistant\",slug:\"homeassistant\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Home Assistant icon</title><path d=\"M11.9922 1.3945a.7041.7041 0 00-.498.211L.1621 13.0977A.5634.5634 0 000 13.494a.567.567 0 00.5664.5664H2.67v8.0743c0 .2603.2104.4707.4707.4707h7.9473v-3.6836L8.037 15.8672a2.42 2.42 0 01-.9473.1933c-1.3379 0-2.4218-1.0868-2.4218-2.4257 0-1.339 1.084-2.4239 2.4218-2.4239 1.338 0 2.422 1.085 2.422 2.4239 0 .3359-.068.6563-.1915.9472l1.7676 1.7676v-5.375C10.2 10.615 9.5723 9.744 9.5723 8.7266c0-1.339 1.0859-2.4258 2.4238-2.4258 1.338 0 2.4219 1.0868 2.4219 2.4258 0 1.0174-.6259 1.8884-1.5137 2.248v5.375l1.7656-1.7676a2.4205 2.4205 0 01-.1914-.9472c0-1.339 1.086-2.4239 2.4238-2.4239 1.338 0 2.422 1.085 2.422 2.4239 0 1.3389-1.084 2.4257-2.422 2.4257a2.42 2.42 0 01-.9472-.1933l-3.0508 3.0547v3.6836h7.9473a.4702.4702 0 00.4707-.4707v-8.0743h2.1113a.5686.5686 0 00.3965-.162c.2233-.2185.2262-.5775.0078-.8008l-2.5156-2.5723V6.4707c0-.2603-.2104-.4727-.4707-.4727h-1.9649c-.2603 0-.4707.2124-.4707.4727v1.1035L12.5 1.6035a.7056.7056 0 00-.5078-.209zm.0039 6.3614c-.5352 0-.9688.4351-.9688.9707 0 .5355.4336.9687.9688.9687a.9683.9683 0 00.9687-.9687c0-.5356-.4335-.9707-.9687-.9707zM7.0898 12.666a.9683.9683 0 00-.9687.9688c0 .5355.4336.9707.9687.9707.5352 0 .9688-.4352.9688-.9707a.9683.9683 0 00-.9688-.9688zm9.8125 0c-.5351 0-.9707.4332-.9707.9688 0 .5355.4356.9707.9707.9707.5352 0 .9688-.4352.9688-.9707a.9683.9683 0 00-.9688-.9688Z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/home-assistant/home-assistant-assets\",hex:\"41BDF5\"},homify:{title:\"homify\",slug:\"homify\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>homify icon</title><path d=\"M20.5 10.562v.053l-.004.05c-.09 2.328-.058 11.357-.057 11.822.002 1.078-.84 1.943-1.62 1.283l-7.076-5.53c-2.224 2.302-4.358 4.495-4.808 4.925-.992.946-1.81-1.327-1.06-1.808.068-.042 2.254-1.95 4.674-4.05l-5.24-4.095c-.454-.355-.628-.945-.368-1.26.09-.085.21-.13.332-.127.056.002.112.014.165.038 1.62.72 4.015 2.492 6.4 4.327 2.486-2.15 4.873-4.19 5.186-4.363.388-.214.49.353.36.516-.132.166-2.2 2.326-4.467 4.68 2.233 1.73 4.352 3.386 5.69 4.135l.22-10.62c-.174-.207-5.406-7.163-5.973-7.748-.905.782-5.645 6.114-5.884 6.344 1.082.108 5.676.382 8.57.683.73.07 1.216.606-.35.592L3.93 10.392c-.176-.006-.333-.11-.398-.267-.066-.157-.028-.336.096-.456.06-.058 8.153-8.923 8.832-9.487.154-.127.317-.188.487-.183.23.008.416.144.492.227.084.077 4.35 5.94 6.432 8.8.498.678.624 1.137.628 1.502v.032z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://lsg.homify.com/\",hex:\"7DCDA3\"},Hootsuite:{title:\"Hootsuite\",slug:\"hootsuite\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Hootsuite icon</title><path d=\"M12.002 0h.023c1.311.004 2.603.322 3.766.928C16.948.332 18.23.022 19.532.022h.676V24l-.656-.002C15.369 24 11.356 22.336 8.4 19.373 5.43 16.43 3.77 12.414 3.791 8.23V.021h.677c1.301 0 2.586.311 3.741.906C9.381.318 10.682 0 12.002 0zm0 .654c-1.381 0-2.676.373-3.791 1.021-1.138-.655-2.428-1.001-3.742-1h-.022V8.23c-.025 8.35 6.764 15.09 15.107 15.113V.675h-.022c-1.313-.001-2.604.343-3.743.999-1.144-.666-2.443-1.018-3.766-1.02h-.021zm3.252 2.754c1.79.002 3.238 1.453 3.237 3.242-.003 1.791-1.454 3.238-3.244 3.236-.616 0-1.22-.176-1.739-.508l-1.516 1.508-1.507-1.516c-1.514.952-3.515.495-4.465-1.02-.952-1.516-.495-3.516 1.021-4.467s3.516-.494 4.467 1.022c.273.437.44.933.483 1.446l.016-.02.015.018c.154-1.667 1.556-2.945 3.232-2.941zM8.76 8.789c1.192.006 2.163-.959 2.168-2.15.001-.219-.031-.436-.096-.644-.243.544-.882.788-1.426.546-.545-.244-.79-.883-.546-1.428.109-.243.304-.437.548-.547-1.137-.355-2.347.276-2.705 1.414-.066.207-.099.424-.1.642-.003 1.192.96 2.163 2.153 2.167h.004zm6.478.019c1.193.003 2.163-.962 2.166-2.155s-.963-2.162-2.155-2.164c-.216-.002-.431.03-.638.094.545.244.789.883.547 1.428-.244.543-.883.787-1.428.545-.245-.109-.439-.307-.549-.553-.355 1.139.279 2.352 1.417 2.707.209.063.423.097.64.098z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://hootsuite.com/en-gb/about/media-kit\",hex:\"000000\"},Houzz:{title:\"Houzz\",slug:\"houzz\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Houzz icon</title><path d=\"M1.27 0V24H9.32V16.44H14.68V24H22.73V10.37L6.61 5.75V0H1.27Z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.houzz.com/logoGuidelines\",hex:\"4DBC15\"},HP:{title:\"HP\",slug:\"hp\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>HP icon</title><path d=\"M12 24h-.4l2.5-6.7h3.4c.6 0 1.2-.5 1.4-1L21.6 9c.4-1.2-.3-2.2-1.5-2.2h-4.7l-3.9 10.8-2.2 6.1C3.9 22.4 0 17.7 0 12 0 6.5 3.7 1.9 8.8.4L6.5 6.8 2.6 17.3h2.5l3.2-8.9h1.9L7 17.3h2.5l3-8.3c.4-1.2-.2-2.2-1.5-2.2H9L11.5 0h.5c6.6 0 12 5.4 12 12s-5.4 12-12 12zm7.3-15.7h-1.9l-2.7 7.3h1.9l2.7-7.3z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://commons.wikimedia.org/wiki/File:HP_New_Logo_2D.svg\",hex:\"0096D6\"},HTML5:{title:\"HTML5\",slug:\"html5\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>HTML5 icon</title><path d=\"M1.5 0h21l-1.91 21.563L11.977 24l-8.564-2.438L1.5 0zm7.031 9.75l-.232-2.718 10.059.003.23-2.622L5.412 4.41l.698 8.01h9.126l-.326 3.426-2.91.804-2.955-.81-.188-2.11H6.248l.33 4.171L12 19.351l5.379-1.443.744-8.157H8.531z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://www.w3.org/html/logo/\",hex:\"E34F26\"},\"HTML Academy\":{title:\"HTML Academy\",slug:\"htmlacademy\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>HTML Academy icon</title><path d=\"M12 0L2.524.994v17.368L12 24l9.476-5.638V.994L12.099.01 12 0zm8.236 17.657L12 22.557l-8.236-4.9v-7.119l8.2 4.881.014.885-5.626-3.349-.008.86 5.648 3.394.015.908-5.647-3.36-.008.86L12 19.01l5.703-3.412v-.862l-.008.004v-2.805l2.54-1.517v7.238zm-.006-8.162l-2.254 1.328-1.04.613-4.96-2.951-.009.858 4.24 2.521-.037.023-.092.054-.602.355-3.5-2.083-.009.859 2.763 1.643-.652.436-.015.01-2.088-1.23-.008.858 1.37.807-1.395.837-8.16-4.85 8.172-4.912v.001l8.276 4.823zm.006-.864l-8.28-4.882h-.002l-8.19 4.877V2.11L12 1.246l8.237.864v6.52z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://htmlacademy.ru/\",hex:\"302683\"},Huawei:{title:\"Huawei\",slug:\"huawei\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Huawei icon</title><path d=\"M3.67 6.14S1.82 7.91 1.72 9.78v.35c.08 1.51 1.22 2.4 1.22 2.4 1.83 1.79 6.26 4.04 7.3 4.55 0 0 .06.03.1-.01l.02-.04V17v-.01C7.52 10.8 3.67 6.14 3.67 6.14zM9.65 18.6c-.02-.08-.1-.08-.1-.08l-7.38.26c.8 1.43 2.15 2.53 3.56 2.2.96-.25 3.16-1.78 3.88-2.3.06-.05.04-.09.04-.09zM9.73 17.82C6.49 15.63.21 12.28.21 12.28c-.15.46-.2.9-.21 1.3v.07c0 1.07.4 1.82.4 1.82.8 1.69 2.34 2.2 2.34 2.2.7.3 1.4.31 1.4.31.12.02 4.4 0 5.54 0 .05 0 .08-.05.08-.05v-.06c0-.03-.03-.05-.03-.05zM9.06 3.19a3.42 3.42 0 0 0-2.57 3.15v.41c.03.6.16 1.05.16 1.05.66 2.9 3.86 7.65 4.55 8.65.05.05.1.03.1.03a.1.1 0 0 0 .06-.1c1.06-10.6-1.11-13.42-1.11-13.42-.32.02-1.19.23-1.19.23zM17.36 5.46s-.49-1.8-2.44-2.28c0 0-.57-.14-1.17-.22 0 0-2.18 2.81-1.12 13.43.01.07.06.08.06.08.07.03.1-.03.1-.03.72-1.03 3.9-5.76 4.55-8.64 0 0 .36-1.4.02-2.34zM14.44 18.53s-.07 0-.09.05c0 0-.01.07.03.1.7.51 2.85 2 3.88 2.3 0 0 .16.05.43.06h.14c.69-.02 1.9-.37 3-2.26l-7.4-.25zM22.27 10.12c.14-2.06-1.94-3.97-1.94-3.98 0 0-3.85 4.66-6.67 10.8 0 0-.03.08.02.13l.04.01h.06c1.06-.53 5.46-2.77 7.28-4.54 0 0 1.15-.93 1.21-2.42zM23.79 12.26s-6.28 3.37-9.52 5.55c0 0-.05.04-.03.11 0 0 .03.06.07.06 1.16 0 5.56 0 5.67-.02 0 0 .57-.02 1.27-.29 0 0 1.56-.5 2.37-2.27 0 0 .73-1.45.17-3.14z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://en.wikipedia.org/wiki/File:Huawei.svg\",hex:\"FF0000\"},HubSpot:{title:\"HubSpot\",slug:\"hubspot\",svg:'<svg xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" viewBox=\"0 0 24 24\"><title>HubSpot icon</title><path d=\"M18.164 7.931V5.085a2.198 2.198 0 0 0 1.266-1.978V3.04A2.199 2.199 0 0 0 17.238.847h-.067a2.199 2.199 0 0 0-2.193 2.192v.067a2.196 2.196 0 0 0 1.252 1.973l.013.006v2.852a6.22 6.22 0 0 0-2.969 1.31l.012-.009-7.828-6.096a2.497 2.497 0 1 0-1.157 1.515l-.012.006 7.696 5.991a6.176 6.176 0 0 0-1.038 3.446c0 1.343.425 2.588 1.147 3.606l-.013-.019-2.342 2.342a1.968 1.968 0 0 0-.58-.095h-.002a2.033 2.033 0 1 0 2.033 2.033 1.978 1.978 0 0 0-.099-.595l.004.014 2.317-2.317a6.247 6.247 0 1 0 4.782-11.133l-.036-.005zm-.964 9.377a3.206 3.206 0 1 1 3.214-3.206v.002a3.206 3.206 0 0 1-3.206 3.206z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.hubspot.com/style-guide\",hex:\"FF7A59\"},Hulu:{title:\"Hulu\",slug:\"hulu\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Hulu icon</title><path d=\"M14.4 7.355h-3.607a5.91 5.91 0 0 0-2.063.405V-.03H2.94v24.06h5.8v-9.51a1.61 1.61 0 0 1 1.56-1.7h3.39a1.59 1.59 0 0 1 1.59 1.56v9.59h5.78V13.54c0-4.41-2.25-6.162-5.9-6.162\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.hulu.com/press/brand-assets/\",hex:\"3DBB3D\"},\"Humble Bundle\":{title:\"Humble Bundle\",slug:\"humblebundle\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Humble Bundle icon</title><path d=\"M4.145 23.996c.12-.463.23-.9.343-1.338.692-2.713 1.322-5.44 1.82-8.197.245-1.35.446-2.71.633-4.074.142-1.028.217-2.064.198-3.105-.01-.557-.034-1.116-.193-1.655-.07-.24-.174-.473-.3-.686-.165-.273-.43-.378-.75-.368-.883.026-1.633.363-2.272.96-.727.68-1.202 1.527-1.553 2.445-.166.435-.284.887-.422 1.33-.02.066-.026.123-.115.122C1.04 9.424.545 9.425.05 9.424c-.013 0-.024-.008-.036-.01 0-.193-.02-.385.003-.572.346-2.853 1.57-5.267 3.668-7.226C4.47.882 5.4.373 6.462.142 8.017-.196 9.258.4 9.996 1.822c.375.72.578 1.496.71 2.293.21 1.287.218 2.586.175 3.885-.014.42-.04.84-.062 1.26-.002.054 0 .108 0 .176.057.003.105.008.154.008.905 0 1.81-.002 2.717.005.124 0 .16-.047.18-.16.575-3.113 1.367-6.17 2.39-9.166.024-.074.05-.124.147-.124 1.12.004 2.24.004 3.362.004.017 0 .035.004.07.008l-.193.753C18.89 3.7 18.21 6.65 17.66 9.628c-.288 1.546-.533 3.1-.69 4.664-.086.875-.14 1.752-.113 2.63.016.53.054 1.062.22 1.57.064.202.16.4.273.58.167.26.426.366.74.356 1.16-.033 2.042-.59 2.746-1.47.707-.88 1.133-1.9 1.434-2.98.028-.1.06-.202.076-.306.014-.082.054-.104.13-.104.467.002.933.004 1.4 0 .102-.002.12.043.117.13-.014.804-.157 1.583-.39 2.347-.59 1.928-1.557 3.635-2.992 5.06-.813.81-1.762 1.407-2.88 1.706-.677.183-1.355.212-2.025-.028-.76-.27-1.276-.816-1.66-1.504-.402-.725-.613-1.512-.75-2.322-.24-1.406-.24-2.824-.172-4.242.042-.89.127-1.777.193-2.666.014-.19.016-.19-.174-.19-.855 0-1.71.002-2.566-.002-.104 0-.153.024-.17.137-.27 1.813-.637 3.608-1.074 5.387-.453 1.842-.974 3.664-1.587 5.46-.044.127-.104.16-.233.16-1.065-.006-2.13-.004-3.197-.004h-.17z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://support.humblebundle.com/hc/en-us/articles/202742060-Bundle-Logos\",hex:\"CC2929\"},Hurriyetemlak:{title:\"Hurriyetemlak\",slug:\"hurriyetemlak\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Hurriyetemlak icon</title><path d=\"M24 16.085L11.994 4.091 0 16.097l3.817 3.812 8.182-8.189 8.189 8.182z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://ilan.hurriyetemlak.com/emlak-ilani-yayinlama-kurallari\",hex:\"E02826\"},Hypothesis:{title:\"Hypothesis\",slug:\"hypothesis\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Hypothesis icon</title><path d=\"M3.43 0C2.5 0 1.72 .768 1.72 1.72V18.86C1.72 19.8 2.5 20.57 3.43 20.57H9.38L12 24L14.62 20.57H20.57C21.5 20.57 22.29 19.8 22.29 18.86V1.72C22.29 .77 21.5 0 20.57 0H3.43M5.14 3.43H7.72V9.43S8.58 7.72 10.28 7.72C12 7.72 13.74 8.57 13.74 11.24V17.14H11.16V12C11.16 10.61 10.28 10.07 9.43 10.29C8.57 10.5 7.72 11.41 7.72 13.29V17.14H5.14V3.43M18 13.72C18.95 13.72 19.72 14.5 19.72 15.42A1.71 1.71 0 0 1 18 17.13A1.71 1.71 0 0 1 16.29 15.42C16.29 14.5 17.05 13.71 18 13.71Z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://web.hypothes.is/\",hex:\"BD1C2B\"},Iata:{title:\"Iata\",slug:\"iata\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Iata icon</title><path d=\"M3.418 19.73l.98-4.885H5.99l-.973 4.884zm4.807-1.6h1.012l-.26-1.792zm-2.235 1.6l2.412-4.885h1.57l.99 4.884H9.487l-.088-.58H7.827l-.25.58zm6.439 0l.547-3.674h-1.394l.238-1.233h4.281l-.237 1.233h-1.328L14 19.73zm5.354-1.6h1.012l-.26-1.792zm-2.23 1.6l2.407-4.885h1.57l.99 4.884h-1.487l-.072-.58h-1.57l-.25.58zM24 9.324h-7.495c-.276 1.372-1.228 2.517-3.125 3.308.216.652.951 1.255 1.715 1.255h4.065c.62 0 1.112-.52 1.311-.94H16.34c-.254-.044-.265-.25-.01-.271h4.06c.525 0 1-.448 1.277-.935h-4.73c-.237-.039-.237-.238 0-.277h4.769c.48 0 .918-.558 1.1-.934h-5.232c-.26-.033-.26-.277 0-.282H22.9c.415 0 .819-.454 1.101-.924zm-24 0h7.495c.27 1.372 1.228 2.517 3.12 3.308-.216.652-.952 1.255-1.715 1.255H4.84c-.62 0-1.112-.52-1.311-.94H7.66c.249-.044.265-.25.01-.271H3.607c-.525 0-1-.448-1.272-.935H7.07c.238-.039.238-.238 0-.277H2.3c-.481 0-.918-.558-1.1-.934h5.232c.26-.033.26-.277 0-.282H1.106c-.42 0-.824-.454-1.106-.924zM9.569 5.21c.277.238.586.448.918.58.282-.553.675-1.028 1.129-1.449a4.05 4.05 0 0 0-2.047.869zM8.242 7.937h1.67a5.358 5.358 0 0 1 .454-1.909 4.021 4.021 0 0 1-1.002-.63 3.83 3.83 0 0 0-1.122 2.539zM11.87 6.37v1.566H10.2a4.62 4.62 0 0 1 .414-1.815c.399.144.83.238 1.256.25zm2.561-1.161a3.346 3.346 0 0 1-.918.58 5.243 5.243 0 0 0-1.134-1.443 3.993 3.993 0 0 1 2.052.863zm1.322 2.727h-1.665a5.096 5.096 0 0 0-.442-1.909c.354-.166.69-.376.984-.63a3.723 3.723 0 0 1 1.123 2.539zM12.14 6.37v1.566h1.66c0-.631-.155-1.234-.415-1.815a4.017 4.017 0 0 1-1.245.25zm-2.571 4.57c.277-.216.597-.454.918-.57.299.559.67 1.018 1.129 1.433a4.05 4.05 0 0 1-2.047-.863zM8.242 8.208h1.67c.039.691.182 1.3.454 1.924a4.202 4.202 0 0 0-1.002.625 3.864 3.864 0 0 1-1.122-2.55zm3.628 1.57v-1.57H10.2c.01.63.154 1.255.414 1.814.399-.144.83-.232 1.256-.244zm2.561 1.162a3.41 3.41 0 0 0-.918-.57 5.113 5.113 0 0 1-1.134 1.433 4.088 4.088 0 0 0 2.052-.863zm1.322-2.732h-1.665a5.075 5.075 0 0 1-.442 1.924c.354.166.674.366.984.625a3.806 3.806 0 0 0 1.123-2.55zm-3.612 1.57v-1.57h1.66c0 .63-.155 1.244-.415 1.814a4.01 4.01 0 0 0-1.245-.244zm-.271-5.276a4.387 4.387 0 0 0-1.123 1.382c.36.122.741.222 1.123.222zm.271 0c.443.365.846.846 1.112 1.382a3.26 3.26 0 0 1-1.112.222zm-.271 7.146a4.23 4.23 0 0 1-1.123-1.388c.36-.128.741-.2 1.123-.2zm.271.011c.443-.37.846-.868 1.112-1.4a3.715 3.715 0 0 0-1.112-.198z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://upload.wikimedia.org/wikipedia/commons/f/f7/IATAlogo.svg\",hex:\"004E81\"},IBM:{title:\"IBM\",slug:\"ibm\",svg:'<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" role=\"img\"><title>IBM icon</title><path d=\"M0 16.144h4.667v.668H0zM0 14.862h4.667v.67H0zM1.33 13.583h2.003v.671H1.33zM1.33 12.305h2.003v.67H1.33zM1.33 11.025h2.003v.671H1.33zM1.33 9.744h2.003v.671H1.33zM0 8.466h4.667v.67H0zM0 7.187h4.667v.67H0zM5.332 15.532h7.177c.12-.206.212-.433.267-.67H5.333v.67zM11.95 12.305H6.667v.67h5.843a2.67 2.67 0 00-.558-.67zM6.666 11.025v.671h5.285c.223-.188.41-.414.559-.671H6.666zM12.509 8.466H5.332v.67h7.443a2.891 2.891 0 00-.266-.67zM10.303 7.187H5.332v.67h6.685a2.522 2.522 0 00-1.714-.67zM6.666 9.744h2v.671h-2zM10.667 10.415h2.092c.059-.214.09-.44.09-.671h-2.182v.671zM6.666 13.583h1.999v.671h-2zM10.667 13.583v.671h2.182c0-.23-.031-.457-.09-.671h-2.092zM5.332 16.807l4.97.007c.667 0 1.268-.257 1.717-.67H5.332v.663zM13.334 16.144h3.332v.668h-3.332zM13.334 14.862h3.332v.67h-3.332zM14.665 13.583h2v.671h-2zM14.665 12.305h2v.67h-2zM17.594 8.466h-4.26v.67h4.49zM17.152 7.187h-3.818v.669h4.048zM20.665 16.144H24v.668h-3.335zM20.665 14.862H24v.67h-3.335zM20.665 13.583h2v.671h-2zM20.665 12.305h2v.67h-2zM20.665 11.696h2v-.671h-3.811l-.188.542-.188-.542H14.665v.671h2v-.616l.213.616h3.575l.212-.616zM22.666 9.744h-3.37l-.23.671h3.6zM20.183 7.187l-.231.669H24v-.669zM18.666 16.807l.23-.663h-.461zM18.224 15.532h.884l.238-.67h-1.357zM17.775 14.254h1.782l.235-.671h-2.253zM17.327 12.975h2.679l.229-.67h-3.138zM14.665 10.415h3.602l-.231-.671h-3.371zM19.51 9.136H24v-.67h-4.262z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.ibm.com/design/language/elements/logos/8-bar/\",hex:\"054ADA\"},iCloud:{title:\"iCloud\",slug:\"icloud\",svg:'<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" role=\"img\"><title>iCloud icon</title><path d=\"M20.013 10.726l.001-.028A6.346 6.346 0 0 0 8.09 7.67a3.414 3.414 0 0 0-4.989 2.829A4.72 4.72 0 0 0 0 14.929a4.72 4.72 0 0 0 4.719 4.719h14.807a4.475 4.475 0 0 0 .487-8.922z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.icloud.com/\",hex:\"3693F3\"},IcoMoon:{title:\"IcoMoon\",slug:\"icomoon\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>IcoMoon icon</title><path d=\"M12 0C10.34 0 8.79 .313 7.34 .938A12 12 0 0 0 3.5 3.5A12 12 0 0 0 .937 7.34C.313 8.79 0 10.34 0 12C0 13.66 .313 15.21 .938 16.66A12 12 0 0 0 3.5 20.5A12 12 0 0 0 7.34 23.06C8.79 23.69 10.34 24 12 24C13.66 24 15.21 23.69 16.66 23.06A12 12 0 0 0 20.5 20.5A12 12 0 0 0 23.06 16.66C23.69 15.21 24 13.66 24 12C24 10.34 23.69 8.79 23.06 7.34A12 12 0 0 0 20.5 3.5A12 12 0 0 0 16.66 .937C15.21 .313 13.66 0 12 0M8.88 1.5A11.65 11.65 0 0 1 11.37 3.42A12.31 12.31 0 0 1 13.27 5.87C13.8 6.77 14.2 7.73 14.5 8.77C14.78 9.8 14.93 10.88 14.93 12S14.78 14.2 14.5 15.23A11.71 11.71 0 0 1 13.27 18.13A12.31 12.31 0 0 1 11.37 20.58C10.62 21.33 9.79 21.96 8.88 22.5A11.91 11.91 0 0 1 6.42 20.58A12.31 12.31 0 0 1 4.5 18.13A11.71 11.71 0 0 1 3.31 15.23A11.63 11.63 0 0 1 2.86 12C2.86 10.88 3 9.8 3.31 8.77A11.71 11.71 0 0 1 4.5 5.87A12.31 12.31 0 0 1 6.42 3.42C7.17 2.67 8 2.04 8.88 1.5M8.86 9.23C8.09 9.23 7.44 9.5 6.9 10.04A2.67 2.67 0 0 0 6.09 12C6.09 12.77 6.36 13.42 6.9 13.96C7.44 14.5 8.09 14.77 8.86 14.77C9.63 14.77 10.28 14.5 10.82 13.96C11.36 13.42 11.63 12.77 11.63 12S11.36 10.58 10.82 10.04A2.67 2.67 0 0 0 8.86 9.23Z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://icomoon.io/\",hex:\"825794\"},ICON:{title:\"ICON\",slug:\"icon\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>ICON icon</title><path d=\"M21.605.021a2.397 2.397 0 00-.47 4.747 2.397 2.397 0 10.47-4.746zm-9.584 2.395C6.73 2.416 2.437 6.707 2.437 12c0 2.142.703 4.121 1.891 5.717l2.586-2.586a5.99 5.99 0 018.236-8.238l2.586-2.586a9.537 9.537 0 00-5.715-1.891zm7.692 3.867L17.127 8.87a5.989 5.989 0 01-8.236 8.238l-2.586 2.584a9.543 9.543 0 005.716 1.893c5.293 0 9.583-4.29 9.583-9.584 0-2.142-.704-4.12-1.891-5.717zM2.396 19.187a2.398 2.398 0 00-.47 4.749 2.402 2.402 0 002.822-2.823 2.399 2.399 0 00-2.352-1.925z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://icon.foundation/\",hex:\"31B8BB\"},IconJar:{title:\"IconJar\",slug:\"iconjar\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>IconJar icon</title><path d=\"M5.506 5.875c-.492 0-.936-.453-.936-.954 0-1.155 2.858-2.01 6.11-2.01.295 0 .492 0 .492-.25 0-.452-.985-.602-.985-1.355 0-.804.936-1.306 2.118-1.306 1.183 0 2.119.502 2.119 1.306 0 .753-.985.853-.985 1.355 0 .151.148.251.492.251 3.252 0 6.16.803 6.16 2.009a.944.944 0 0 1-.937.953H5.507zM20.238 10.443c1.183.753 1.626 2.109 1.43 3.365l-1.38 7.58C19.992 22.897 18.71 24 17.182 24H7.526C6 24 4.718 22.896 4.422 21.389l-1.38-7.581a3.307 3.307 0 0 1 1.479-3.315c.69-.501.837-1.355 0-1.656-1.183-.452-.937-1.908.246-1.908h7.193c1.133 0 2.514.853 2.514 3.615 0 2.762-1.282 2.51-1.282 4.468 0 .854.69 1.758 1.527 1.859 1.43.15 2.267-.402 2.267-2.41 0-2.06-1.182-3.013-1.182-4.72 0-2.059 1.28-2.863 2.118-2.863h2.07c1.182 0 1.429 1.457.246 1.909-.837.35-.69 1.205 0 1.656z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://geticonjar.com/press-kit/\",hex:\"16A5F3\"},ICQ:{title:\"ICQ\",slug:\"icq\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>ICQ icon</title><path d=\"M15.406.133C14.65.07 13.93.223 13.226.6c-.94.503-1.61 1.275-1.912 2.28v.067l-.035.235-.134-.235-.335-.603c-.536-.837-1.206-1.34-2.044-1.574C8.03.604 7.426.673 6.79 1.01c-.705.436-1.106 1.106-1.274 2.045-.168.972 0 1.91.502 2.847l.236.336-.807-.267c-1.005-.236-1.944-.104-2.883.4C1.592 6.87.99 7.576.588 8.55c-.37.938-.336 1.843.133 2.68.202.37.504.67.772.872.402.402.905.636 1.508.736l.234.066-.502.438c-.47.402-.738.903-.906 1.406-.168.603-.1 1.207.236 1.777.17.268.334.503.602.67.268.235.604.403 1.006.436.738.17 1.508.168 2.346-.1l-.604 1.005-.168.436c-.335 1.074-.233 2.01.27 2.983.235.37.5.705.77 1.006.4.368.906.602 1.51.77 1.004.268 2.01.236 2.98-.267.94-.503 1.543-1.31 1.845-2.315l.032-.2c.637.703 1.24 1.173 1.912 1.34.67.202 1.34.17 1.944-.233.57-.335.973-.906 1.174-1.61.168-.738.168-1.474 0-2.312.335.235.67.4 1.072.502 1.073.335 2.01.3 2.95-.2.904-.504 1.508-1.308 1.81-2.347.268-1.005.202-1.977-.3-2.916l-.17-.27c-.267-.402-.537-.804-.94-1.072-.334-.235-.735-.402-1.104-.57 1.04-.503 1.776-1.207 2.11-2.112.236-.738.17-1.342-.167-1.945v-.066c-.402-.67-.937-1.105-1.775-1.34-.503-.1-1.072-.102-1.574-.068l-1.108.235.37-.838c.334-1.073.235-2.112-.335-3.084l-.1-.17c-.503-.838-1.24-1.34-2.246-1.607-.26-.067-.516-.113-.768-.133zm-.57 1.414c.323-.03.65.012.967.13.704.166 1.207.534 1.51 1.104v.003c.168.335.267.736.267 1.172l-.1.738c-.134.37-.302.703-.503 1.004l-3.016 3.69c-.3-.235-.637-.403-.972-.57l-.336-3.79-.033-1.34.032-.335c.168-.67.638-1.173 1.24-1.508.302-.168.62-.268.944-.297zm-6.883.537c.134-.004.276.03.41.096.603.168 1.106.603 1.508 1.44.17.336.336.67.403 1.073l.67 3.957-.504.168-2.983-3.252-.168-.334c-.27-.604-.435-1.173-.368-1.777v-.002c.034-.603.268-1.003.67-1.238.1-.084.227-.127.36-.13zm12.13 5.033c.15 0 .297.007.448.024.57.068.972.337 1.173.74l.135.433-.067.335c-.234.603-.738 1.074-1.575 1.442-.335.168-.703.235-1.105.3l-4.123.503-.067-.235-.068-.1.135-.167 3.387-2.816.4-.166.002-.002c.45-.2.885-.286 1.328-.29zM4.622 7.3c.16.008.324.033.49.075v.002l.908.367 2.95 2.147c-.27.336-.435.67-.536 1.005l-4.828.603-.334-.066c-.603-.1-1.007-.37-1.276-.87-.27-.503-.267-1.006-.066-1.51.235-.636.67-1.14 1.306-1.407.453-.252.906-.373 1.387-.346zm7.16 2.69c.604 0 1.175.236 1.544.604.47.47.67.973.67 1.576 0 .603-.2 1.172-.67 1.574-.436.436-.94.67-1.543.67-.636 0-1.17-.235-1.573-.67-.436-.402-.67-.97-.67-1.574 0-.603.234-1.107.67-1.576.402-.37.937-.604 1.574-.604zm8.415 2.58l.336.035c.504.168.973.468 1.24.97.336.37.503.873.503 1.443l-.1.67c-.167.67-.57 1.173-1.14 1.44-.603.336-1.207.403-1.877.17-.402-.1-.67-.268-.904-.536l-3.52-2.918.235-.502.1-.403 3.788-.335 1.34-.035zm-6.636 2.448l1.407 1.44.87 1.073.17.337c.3.57.468 1.105.4 1.742-.066.602-.267 1.038-.67 1.206-.234.168-.502.17-.77.135-.637-.166-1.14-.668-1.508-1.473l-.403-1.108-.502-2.917.568-.2.436-.235zm-3.62.068c.334.167.67.334 1.04.367.066 1.14.165 2.347.332 3.654v1.342l-.033.333c-.236.603-.638 1.107-1.24 1.375-.604.335-1.24.402-1.845.235-.67-.167-1.173-.57-1.44-1.106-.17-.335-.304-.74-.304-1.14l.17-.77c.066-.335.235-.67.503-.94l2.816-3.35z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://en.wikipedia.org/wiki/File:ICQ.svg\",hex:\"7EBD00\"},iDEAL:{title:\"iDEAL\",slug:\"ideal\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>iDEAL icon</title><path d=\"M.975 2.61v18.782h11.411c6.89 0 10.64-3.21 10.64-9.415 0-6.377-4.064-9.367-10.64-9.367H.975zm11.411-.975C22.491 1.635 24 8.115 24 11.977c0 6.7-4.124 10.39-11.614 10.39H0V1.635h12.386z M2.506 13.357h3.653v6.503H2.506z M6.602 10.082a2.27 2.27 0 1 1-4.54 0 2.27 2.27 0 0 1 4.54 0m1.396-1.057v2.12h.65c.45 0 .867-.13.867-1.077 0-.924-.463-1.043-.867-1.043h-.65zm10.85-1.054h1.053v3.174h1.56c-.428-5.758-4.958-7.002-9.074-7.002H7.999v3.83h.65c1.183 0 1.92.803 1.92 2.095 0 1.333-.719 2.129-1.92 2.129h-.65v7.665h4.388c6.692 0 9.021-3.107 9.103-7.665h-2.64V7.97zm-2.93 2.358h.76l-.348-1.195h-.063l-.35 1.195zm-1.643 1.87l1.274-4.228h1.497l1.274 4.227h-1.095l-.239-.818H15.61l-.24.818h-1.095zm-.505-1.054v1.052h-2.603V7.973h2.519v1.052h-1.467v.49h1.387v1.05H12.22v.58h1.55z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.ideal.nl/cms/files/Manual_iDEAL_logo.pdf\",hex:\"CC0066\"},iFixit:{title:\"iFixit\",slug:\"ifixit\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>iFixit icon</title><path d=\"M15.345 12.506l2.37 3.131c.198.261.211.69.025.961l-.119.177c-.181.27-.55.645-.814.831l-.285.201c-.266.195-.697.195-.956-.016l-3.135-2.369c-.255-.195-.681-.195-.94 0l-3.136 2.369c-.258.211-.689.211-.956.03l-.207-.135c-.27-.181-.641-.556-.825-.81l-.181-.256c-.186-.27-.18-.689.018-.96l2.377-3.149c.195-.256.195-.675 0-.945L6.197 8.43c-.194-.263-.203-.69-.013-.957l.2-.285c.187-.264.56-.629.828-.814l.175-.119c.27-.196.703-.182.961.014l3.135 2.37c.26.195.684.195.942 0l3.135-2.385c.258-.195.698-.226.979-.061l.33.195c.28.165.639.524.795.81l.12.21c.154.285.123.721-.075.99l-2.37 3.135c-.194.255-.194.676 0 .945l.006.028zM12 0C5.37 0 0 5.373 0 12s5.37 12 12 12c6.627 0 12-5.373 12-12S18.627 0 12 0z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.ifixit.com/\",hex:\"0071CE\"},IMDb:{title:\"IMDb\",slug:\"imdb\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>IMDb icon</title><path d=\"M14.31 9.588v.005c-.077-.048-.227-.07-.42-.07v4.815c.27 0 .44-.06.5-.165.062-.104.095-.405.095-.885v-2.866c0-.33-.004-.54-.033-.63-.022-.096-.067-.163-.14-.204zM22.416 0H1.62C.742.06.06.744 0 1.596V22.38c.06.874.712 1.542 1.555 1.617.015.003.03.003.045.003h20.845c.88-.088 1.55-.826 1.555-1.71V1.71C24 .82 23.305.07 22.416 0zM4.792 15.626H2.887V8.26h1.905v7.366zm6.54-.002H9.67v-4.97L9 15.623H7.812l-.698-4.86-.007 4.86H5.44V8.26h2.468c.083.523.16 1.048.23 1.574l.27 1.87.442-3.444h2.483v7.364zm4.977-2.18c0 .655-.044 1.094-.104 1.32-.062.22-.17.4-.326.52-.15.13-.34.218-.57.266-.223.045-.57.075-1.02.075l-.004-.002H11.98V8.26h1.426c.914 0 1.45.047 1.77.128.325.09.575.225.745.42.165.18.273.404.313.645.05.235.076.705.076 1.402v2.588zm4.944.475c0 .45-.045.764-.09.99-.06.224-.195.404-.405.568-.226.166-.48.24-.78.24-.22 0-.5-.06-.68-.136-.19-.094-.358-.237-.515-.427l-.116.47h-1.717V8.26l-.02-.003h1.8v2.4c.15-.175.315-.31.51-.4.196-.083.466-.127.69-.127.226-.003.45.036.66.115.17.07.32.185.436.33.09.125.15.27.18.42.03.138.044.43.044.87v2.054zM19.08 11.205c-.12 0-.194.04-.225.12-.03.08-.06.29-.06.624v1.946c0 .324.03.533.06.623.04.086.13.14.226.134.12 0 .272-.047.3-.14.03-.097.046-.32.046-.674l.03-.002v-1.89c0-.303-.015-.508-.06-.603-.044-.1-.195-.14-.315-.14z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://www.imdb.com/pressroom/brand_guidelines\",hex:\"E6B91E\"},Imgur:{title:\"Imgur\",slug:\"imgur\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Imgur icon</title><path d=\"M21.147 3.043c-.002-.113-.069-.182-.189-.191a14.117 14.117 0 00-.51-.045l-.162-.01a21.998 21.998 0 00-1.085-.046l-.217-.005c-.172-.003-.35-.004-.532-.004l-.189-.001c-.295 0-.601.003-.919.01l-.106.003a55.86 55.86 0 00-.87.026l-.237.009c-.335.013-.676.029-1.027.049l-.012.001c-.357.021-.724.045-1.095.071l-.275.021c-.304.023-.609.048-.92.076l-.25.021c-.38.035-.766.074-1.156.115-.08.009-.161.019-.242.027-.319.035-.641.073-.965.113l-.33.042c-.403.051-.806.105-1.212.164a.547.547 0 00-.154.045.303.303 0 00-.097.074l-.003.002c-.045.055-.047.12.004.179.003.004.002.008.005.012l3.488 3.456-6.629 6.596c-.069.067-.068.165 0 .251.856 1.093 1.44 1.793 2.143 2.492.699.703 1.398 1.286 2.493 2.143a.216.216 0 00.132.051.167.167 0 00.119-.051l6.597-6.629 3.455 3.488a.143.143 0 00.101.047c.096 0 .187-.118.212-.292.746-5.141.882-10.051.634-12.31z M15.87 24l6.356-6.357.026-.026.156-.155-.006-.006a3.144 3.144 0 00.822-1.711c.804-5.53.903-10.591.654-12.952a2.904 2.904 0 00-.834-1.812 2.96 2.96 0 00-1.816-.855C20.458.042 19.476 0 18.318 0c-2.999 0-6.667.284-10.063.777a3.143 3.143 0 00-1.887.991L0 8.137V24H15.87zm1.528-6.707c-.151 0-.563.405-.563.613a.1.1 0 01-.099.1.1.1 0 01-.099-.1c0-.208-.411-.613-.563-.613a.1.1 0 01-.099-.1c0-.054.044-.098.099-.098.152 0 .563-.404.563-.614 0-.055.044-.098.099-.098.054 0 .099.043.099.098 0 .21.412.614.563.614a.1.1 0 010 .198zM5.4 7.045c.197 0 .735-.528.735-.801a.13.13 0 01.128-.129c.071 0 .128.058.128.129 0 .272.538.801.735.801.071 0 .128.057.128.128a.128.128 0 01-.128.128c-.197 0-.735.528-.735.801a.128.128 0 01-.128.128.128.128 0 01-.128-.128c0-.273-.538-.801-.735-.801a.128.128 0 010-.256zm-3.99 3.26c0-.065.057-.098.119-.118.69-.228 1.269-.8 1.403-1.554.011-.064.053-.118.118-.118.066 0 .107.054.119.118.133.754.711 1.326 1.401 1.554.062.02.118.053.118.118s-.056.098-.118.119c-.69.227-1.269.799-1.403 1.553-.011.064-.053.119-.119.119-.065 0-.106-.054-.118-.119-.134-.754-.713-1.326-1.403-1.553-.061-.022-.117-.054-.117-.119zm1.565 9.307c-.113 0-.42.302-.42.459 0 .04-.034.073-.074.073a.074.074 0 01-.074-.073c0-.157-.307-.459-.42-.459a.074.074 0 01-.074-.073c0-.039.034-.073.074-.073.113 0 .42-.302.42-.457 0-.042.033-.073.074-.073.04 0 .074.031.074.073 0 .155.307.457.42.457.04 0 .073.034.073.073a.073.073 0 01-.073.073zm.568-3.047c-.14 0-.521.375-.521.568a.092.092 0 11-.183 0c0-.193-.381-.568-.521-.568a.09.09 0 01-.091-.09c0-.051.041-.092.091-.092.14 0 .521-.375.521-.568a.09.09 0 01.092-.09.09.09 0 01.091.09c0 .193.381.568.521.568a.091.091 0 010 .182zm3.334 4.382c-.203 0-.758.546-.758.827 0 .073-.06.133-.132.133a.133.133 0 01-.133-.133c0-.281-.555-.827-.758-.827a.134.134 0 01-.133-.133c0-.073.059-.132.133-.132.204 0 .758-.545.758-.828 0-.071.06-.132.133-.132.073 0 .132.061.132.132 0 .283.555.828.758.828.074 0 .133.059.133.132a.133.133 0 01-.133.133zm1.922-.806c-1.086-.851-1.869-1.498-2.653-2.287-.789-.784-1.436-1.566-2.287-2.654-.626-.8-.566-1.897.144-2.607l.001-.001.002-.001L9.364 7.26 7.149 5.066l-.003-.003-.002-.003c-.52-.52-.7-1.27-.472-1.958.148-.447.464-.802.867-1.049a1.983 1.983 0 01.371-.19 2.1 2.1 0 01.468-.131c.005 0 .009-.003.014-.004C11.746 1.24 15.363.96 18.317.96h.002c1.125 0 2.072.041 2.818.121.469.046.903.249 1.228.576.328.331.525.767.562 1.237.243 2.311.144 7.253-.651 12.714-.001.01-.006.016-.007.025a2.258 2.258 0 01-.18.586c-.006.014-.01.028-.018.042-.333.699-1.001 1.163-1.771 1.163-.51 0-.992-.2-1.358-.567l-.003-.002-.004-.004-2.192-2.215-5.333 5.359-.001.002h-.001a1.94 1.94 0 01-1.378.573c-.44 0-.877-.151-1.231-.429zm2.576 2.09c-.139 0-.518.373-.518.566a.09.09 0 01-.091.09.09.09 0 01-.09-.09c0-.193-.379-.566-.519-.566a.09.09 0 110-.18c.139 0 .519-.373.519-.566a.09.09 0 01.09-.09c.05 0 .091.041.091.09 0 .193.379.566.518.566.05 0 .091.039.091.09s-.04.09-.091.09zm2.115-2.437c.248 0 .922-.662.922-1.003 0-.088.072-.161.161-.161.088 0 .161.073.161.161 0 .341.674 1.003.921 1.003.089 0 .161.073.161.161a.16.16 0 01-.161.161c-.247 0-.921.662-.921 1.005a.162.162 0 01-.161.162.162.162 0 01-.161-.162c0-.343-.674-1.005-.922-1.005a.161.161 0 010-.322z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://s.imgur.com/images/favicon-152.png\",hex:\"1BB76E\"},Indeed:{title:\"Indeed\",slug:\"indeed\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Indeed icon</title><path d=\"M14.822 10.308a3.018 3.018 0 111.32-4.038 3.006 3.006 0 01-1.32 4.044zM11.6.572c2.47-.901 5.294-.852 7.408.982a3.587 3.587 0 011.023 1.37c.213.69-.749-.07-.88-.168a9.407 9.407 0 00-2.15-1.095C12.837.386 8.897 2.707 6.463 6.316a19.505 19.505 0 00-2.248 5.126 2.918 2.918 0 01-.213.642c-.107.204-.049-.547-.049-.572a15.821 15.821 0 01.43-2.239C5.511 5.34 8.01 2.065 11.6.565zm.037 20.993v-8.763c.249.025.486.037.736.037a6.167 6.167 0 003.219-.895v9.62c0 .822-.15 1.43-.52 1.826A1.874 1.874 0 0113.62 24a1.825 1.825 0 01-1.427-.609c-.368-.404-.56-1.013-.56-1.825z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.indeed.com\",hex:\"2164F3\"},InfluxDB:{title:\"InfluxDB\",slug:\"influxdb\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>InfluxDB icon</title><path d=\"M23.775 14.443L21.482 4.5c-.128-.536-.621-1.093-1.178-1.243L9.868.043C9.739 0 9.589 0 9.418 0c-.45 0-.9.171-1.222.45L.718 7.414C.31 7.78.096 8.507.225 9.021l2.443 10.65c.128.536.621 1.093 1.178 1.243l9.772 3.043c.128.043.278.043.45.043.45 0 .9-.171 1.221-.45l7.993-7.436c.407-.428.622-1.114.493-1.671zM10.961 2.4l7.178 2.207c.279.086.279.214 0 .279l-3.771.857c-.279.086-.686-.043-.879-.257l-2.614-2.829c-.236-.236-.193-.343.086-.257zm4.478 12.857c.086.279-.107.45-.385.364l-7.736-2.4c-.279-.085-.343-.321-.129-.514L13.104 7.2c.214-.214.45-.129.514.15zM2.69 8.25L8.968 2.4c.214-.214.536-.171.75.021l3.15 3.408c.214.214.171.535-.022.75l-6.278 5.85c-.214.214-.536.171-.75-.022L2.668 9c-.214-.236-.193-.579.021-.75zm1.522 9.257l-1.65-7.286c-.086-.278.043-.342.235-.128l2.615 2.828c.214.215.278.622.214.9l-1.136 3.686c-.085.3-.214.3-.278 0zm9.193 4.286l-8.208-2.55a.555.555 0 01-.364-.686l1.372-4.414a.555.555 0 01.685-.364l8.207 2.528c.279.086.45.386.365.686l-1.372 4.414a.598.598 0 01-.685.386zm7.285-5.979l-5.485 5.1c-.215.215-.322.129-.236-.15l1.136-3.685c.085-.279.385-.579.685-.622l3.772-.857c.278-.107.321.021.128.214zm.6-1.114l-4.521 1.029c-.279.085-.579-.108-.643-.386l-1.929-8.357c-.085-.279.108-.579.386-.643l4.522-1.029c.278-.085.578.107.642.386l1.929 8.357c.064.322-.107.6-.386.643z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.influxdata.com/\",hex:\"22ADF6\"},Inkscape:{title:\"Inkscape\",slug:\"inkscape\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Inkscape icon</title><path d=\"M11.872.191c-.745-.011-1.464.278-1.993.804l-8.825 9.038c-3.343 3.34 2.164 3.061 4.154 4.325.922.602-2.955 1.371-2.164 2.164.771.793 4.65 1.521 5.422 2.293.771.791-1.564 1.627-.793 2.418.75.793 2.549.043 2.87 1.842.235 1.328 3.3.666 4.672-.471.854-.729-1.479-.729-.708-1.521 1.929-1.949 3.642-.875 4.349-2.676.387-.963-2.913-1.65-2.034-2.271 2.101-1.477 9.812-2.227 6.255-5.782L13.93.995c-.56-.521-1.295-.807-2.058-.804zm.075.859c.529.003 1.06.201 1.444.584l3.492 3.557c.323.321.323.986.129 1.178l-1.734-1.412-.343 2.077-1.435-.772-2.336 1.478-.771-3.105-1.242 2.698-3.107-.022c-.6 0-.514-.621.107-1.242 1.221-1.35 3.6-3.64 4.35-4.433.385-.396.915-.589 1.445-.584l.001-.002zm9.755 16.276c-.74.025-1.496.395-1.689 1.08 0 .449 3.492.707 3.301-.107-.141-.686-.87-1.002-1.611-.975v.002zM6.356 19.271c-1.008.059-2.088.791-1.232 1.512.791.686 1.992-.15 2.377-1.113-.24-.316-.686-.426-1.143-.398h-.002zm13.229.077c-.986.9.17 1.842 1.134 1.221.258-.173-.021-1.005-1.134-1.221z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://commons.wikimedia.org/wiki/File:Inkscape_Logo.svg\",hex:\"000000\"},Instacart:{title:\"Instacart\",slug:\"instacart\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Instacart icon</title><path d=\"M15.629 9.619c1.421 1.429 2.58 3.766 1.917 5.152-1.778 3.715-15.04 10.226-16.169 9.1C.252 22.746 6.768 9.476 10.481 7.697c1.388-.66 3.724.51 5.152 1.92l-.005.014v-.012zm7.028-1.566c-.231-.855-.821-1.717-1.7-1.82-1.61-.186-4.151 2.663-3.971 3.339.181.69 3.766 1.875 5.1.915.691-.494.781-1.56.556-2.414l.015-.02zM17.666.158c1.198.324 2.407 1.148 2.551 2.382.261 2.259-3.732 5.819-4.68 5.564-.948-.251-2.618-5.284-1.269-7.162.695-.972 2.201-1.106 3.399-.788v.004h-.001z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.instacart.com/press\",hex:\"43B02A\"},Instagram:{title:\"Instagram\",slug:\"instagram\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Instagram icon</title><path d=\"M12 0C8.74 0 8.333.015 7.053.072 5.775.132 4.905.333 4.14.63c-.789.306-1.459.717-2.126 1.384S.935 3.35.63 4.14C.333 4.905.131 5.775.072 7.053.012 8.333 0 8.74 0 12s.015 3.667.072 4.947c.06 1.277.261 2.148.558 2.913.306.788.717 1.459 1.384 2.126.667.666 1.336 1.079 2.126 1.384.766.296 1.636.499 2.913.558C8.333 23.988 8.74 24 12 24s3.667-.015 4.947-.072c1.277-.06 2.148-.262 2.913-.558.788-.306 1.459-.718 2.126-1.384.666-.667 1.079-1.335 1.384-2.126.296-.765.499-1.636.558-2.913.06-1.28.072-1.687.072-4.947s-.015-3.667-.072-4.947c-.06-1.277-.262-2.149-.558-2.913-.306-.789-.718-1.459-1.384-2.126C21.319 1.347 20.651.935 19.86.63c-.765-.297-1.636-.499-2.913-.558C15.667.012 15.26 0 12 0zm0 2.16c3.203 0 3.585.016 4.85.071 1.17.055 1.805.249 2.227.415.562.217.96.477 1.382.896.419.42.679.819.896 1.381.164.422.36 1.057.413 2.227.057 1.266.07 1.646.07 4.85s-.015 3.585-.074 4.85c-.061 1.17-.256 1.805-.421 2.227-.224.562-.479.96-.899 1.382-.419.419-.824.679-1.38.896-.42.164-1.065.36-2.235.413-1.274.057-1.649.07-4.859.07-3.211 0-3.586-.015-4.859-.074-1.171-.061-1.816-.256-2.236-.421-.569-.224-.96-.479-1.379-.899-.421-.419-.69-.824-.9-1.38-.165-.42-.359-1.065-.42-2.235-.045-1.26-.061-1.649-.061-4.844 0-3.196.016-3.586.061-4.861.061-1.17.255-1.814.42-2.234.21-.57.479-.96.9-1.381.419-.419.81-.689 1.379-.898.42-.166 1.051-.361 2.221-.421 1.275-.045 1.65-.06 4.859-.06l.045.03zm0 3.678c-3.405 0-6.162 2.76-6.162 6.162 0 3.405 2.76 6.162 6.162 6.162 3.405 0 6.162-2.76 6.162-6.162 0-3.405-2.76-6.162-6.162-6.162zM12 16c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4zm7.846-10.405c0 .795-.646 1.44-1.44 1.44-.795 0-1.44-.646-1.44-1.44 0-.794.646-1.439 1.44-1.439.793-.001 1.44.645 1.44 1.439z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.instagram-brand.com\",hex:\"E4405F\"},Instapaper:{title:\"Instapaper\",slug:\"instapaper\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Instapaper icon</title><path d=\"M14.766 20.259c0 1.819.271 2.089 2.934 2.292V24H6.301v-1.449c2.666-.203 2.934-.473 2.934-2.292V3.708c0-1.784-.27-2.089-2.934-2.292V0h11.398v1.416c-2.662.203-2.934.506-2.934 2.292v16.551z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.instapaper.com/\",hex:\"1F1F1F\"},Intel:{title:\"Intel\",slug:\"intel\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Intel icon</title><path d=\"M7.07 10.8v3.877H5.837V9.804l2.547.002c1.08 0 1.449.764 1.449 1.456v3.415h-1.23v-3.408c0-.291-.149-.469-.513-.469H7.07zm8.389-.058c-.422 0-.748.216-.885.51-.077.167-.117.347-.118.53h1.898c-.023-.53-.263-1.04-.895-1.04zm-1.003 1.88c0 .629.393 1.095 1.094 1.095.544 0 .815-.15 1.131-.466l.762.729c-.487.481-1.001.773-1.902.773-1.18 0-2.31-.643-2.31-2.52 0-1.605.985-2.512 2.281-2.512 1.315 0 2.075 1.063 2.075 2.455v.443h-3.131v.003zm-2.268 2.047c-1.004 0-1.432-.699-1.432-1.391v-4.8h1.232v1.327h.928v.996h-.929v2.4c0 .284.135.44.429.44h.5v1.027h-.728zM4.739 9.131H3.497v-1.18h1.242v1.18zm.003 5.595c-.93-.088-1.246-.651-1.246-1.305V9.806H4.74v4.924l.002-.004zm14.805-.104c-.929-.09-1.243-.652-1.243-1.303V7.784h1.243v6.84-.002zm4.347-6.038C22.769 3.091 12.102 2.743 5.23 6.927v.462c6.865-3.528 16.604-3.508 17.491 1.55.296 1.675-.646 3.418-2.329 4.422v1.311c2.025-.742 4.105-3.147 3.502-6.088zm-12.496 9.61c-4.742.438-9.686-.251-10.377-3.957-.337-1.827.497-3.765 1.598-4.967v-.643C.632 10.37-.446 12.577.175 15.184c.792 3.345 5.035 5.239 11.509 4.609 2.563-.249 5.916-1.074 8.247-2.354v-1.816c-2.116 1.261-5.617 2.302-8.533 2.571zM20.984 8.15c0-.06-.037-.079-.116-.079h-.077v.17l.077.002c.079 0 .116-.025.116-.084V8.15zm.12.423h-.091c-.009 0-.018-.004-.021-.012l-.125-.213c-.003-.005-.013-.01-.019-.01h-.056v.212c0 .012-.009.025-.023.025h-.082c-.011 0-.021-.014-.021-.025v-.533c0-.029.012-.045.038-.048.05-.005.101-.006.152-.006.152 0 .246.046.246.188v.01c0 .09-.046.135-.114.158l.13.219c0 .006.005.012.005.018.002.007-.004.017-.019.017v.002-.002zm-.218-.709c-.226 0-.408.184-.408.41.001.227.186.409.411.408.225 0 .406-.182.409-.406-.002-.226-.185-.411-.412-.412zm0 .907c-.273 0-.495-.222-.495-.495s.222-.495.494-.495h.001c.271 0 .495.224.495.495 0 .274-.224.495-.495.495z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.intel.com\",hex:\"0071C5\"},\"IntelliJ IDEA\":{title:\"IntelliJ IDEA\",slug:\"intellijidea\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>IntelliJ IDEA icon</title><path d=\"M0 0v24h24V0zm3.723 3.111h5v1.834h-1.39v6.277h1.39v1.834h-5v-1.834h1.444V4.945H3.723zm11.055 0H17v6.5c0 .612-.055 1.111-.222 1.556-.167.444-.39.777-.723 1.11-.277.279-.666.557-1.11.668a3.933 3.933 0 0 1-1.445.278c-.778 0-1.444-.167-1.944-.445a4.81 4.81 0 0 1-1.279-1.056l1.39-1.555c.277.334.555.555.833.722.277.167.611.278.945.278.389 0 .721-.111 1-.389.221-.278.333-.667.333-1.278zM2.222 19.5h9V21h-9z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.jetbrains.com/idea/\",hex:\"000000\"},Intercom:{title:\"Intercom\",slug:\"intercom\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Intercom icon</title><path d=\"M21 0H3C1.343 0 0 1.343 0 3v18c0 1.658 1.343 3 3 3h18c1.658 0 3-1.342 3-3V3c0-1.657-1.342-3-3-3zm-5.801 4.399c0-.44.36-.8.802-.8.44 0 .8.36.8.8v10.688c0 .442-.36.801-.8.801-.443 0-.802-.359-.802-.801V4.399zM11.2 3.994c0-.44.357-.799.8-.799s.8.359.8.799v11.602c0 .44-.357.8-.8.8s-.8-.36-.8-.8V3.994zm-4 .405c0-.44.359-.8.799-.8.443 0 .802.36.802.8v10.688c0 .442-.36.801-.802.801-.44 0-.799-.359-.799-.801V4.399zM3.199 6c0-.442.36-.8.802-.8.44 0 .799.358.799.8v7.195c0 .441-.359.8-.799.8-.443 0-.802-.36-.802-.8V6zM20.52 18.202c-.123.105-3.086 2.593-8.52 2.593-5.433 0-8.397-2.486-8.521-2.593-.335-.288-.375-.792-.086-1.128.285-.334.79-.375 1.125-.09.047.041 2.693 2.211 7.481 2.211 4.848 0 7.456-2.186 7.479-2.207.334-.289.839-.25 1.128.086.289.336.25.84-.086 1.128zm.281-5.007c0 .441-.36.8-.801.8-.441 0-.801-.36-.801-.8V6c0-.442.361-.8.801-.8.441 0 .801.357.801.8v7.195z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.intercom.io\",hex:\"1F8DED\"},\"Internet Archive\":{title:\"Internet Archive\",slug:\"internetarchive\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Internet Archive icon</title><path d=\"M22.61,24H1.39V22.91H22.61Zm-.8-3.18H2.23v1.51H21.81ZM21.58,3.66H2.1V5.75H21.58ZM11.84,0,1.64,2.39,2.23,3H21.46L22,2.39ZM3.71,20.21a3.44,3.44,0,0,0,1-.13c.16-1.74.25-4.9.25-6.87s-.09-5-.24-6.76a.18.18,0,0,0-.13-.15,3.56,3.56,0,0,0-.84-.1,3.69,3.69,0,0,0-.83.1.18.18,0,0,0-.13.15c-.16,1.76-.24,4.82-.24,6.76s.09,5.13.25,6.87A3.34,3.34,0,0,0,3.71,20.21Zm5.31,0a3.37,3.37,0,0,0,1-.13c.16-1.74.25-4.9.25-6.87s-.09-5-.24-6.76a.18.18,0,0,0-.13-.15A3.54,3.54,0,0,0,9,6.2a3.79,3.79,0,0,0-.84.1.18.18,0,0,0-.13.15c-.15,1.76-.24,4.82-.24,6.76s.09,5.13.25,6.87A3.36,3.36,0,0,0,9,20.21Zm6.15,0a3.37,3.37,0,0,0,1-.13c.16-1.74.25-4.9.25-6.87s-.08-5-.24-6.76A.17.17,0,0,0,16,6.3a3.54,3.54,0,0,0-.83-.1,3.62,3.62,0,0,0-.83.1.18.18,0,0,0-.14.15c-.15,1.76-.24,4.82-.24,6.76s.09,5.13.26,6.87A3.28,3.28,0,0,0,15.17,20.21Zm5.18,0a3.37,3.37,0,0,0,.95-.13c.16-1.74.25-4.9.25-6.87s-.08-5-.24-6.76a.18.18,0,0,0-.13-.15,3.54,3.54,0,0,0-.83-.1,3.79,3.79,0,0,0-.84.1.18.18,0,0,0-.13.15c-.15,1.76-.24,4.82-.24,6.76s.09,5.13.25,6.87A3.36,3.36,0,0,0,20.35,20.21Z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://openlibrary.org/static/images/ia-logo.svg\",hex:\"000000\"},\"Internet Explorer\":{title:\"Internet Explorer\",slug:\"internetexplorer\",svg:'<svg xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" viewBox=\"0 0 24 24\"><title>Internet Explorer icon</title><path d=\"M22.8 7.381c1.125-2.7 1.2-4.95-.15-6.3-1.5-1.499-5.1-1.05-8.924.75h-.45c-2.7 0-5.324.976-7.274 2.7-1.65 1.5-2.85 3.45-3.375 5.625.375-.45 2.475-2.925 4.875-4.275.075 0 .675-.375.675-.375-.075 0-1.2 1.125-1.425 1.35-5.25 5.4-8.324 13.574-5.924 15.973 1.574 1.575 4.424 1.2 7.724-.6 1.425.675 3 .975 4.724.975 2.25 0 4.35-.6 6.15-1.8 1.874-1.2 3.224-3.074 4.05-5.249h-5.85c-.75 1.425-2.475 2.4-4.275 2.4-2.55 0-4.65-2.1-4.724-4.5V13.83h15.298v-.225c0-.375.075-.825.075-1.124 0-1.8-.45-3.525-1.2-5.1zM2.477 22.38c-1.2-1.2-.824-3.524.6-6.299.675 1.875 1.8 3.525 3.225 4.725.45.375.975.75 1.5 1.05-2.4 1.274-4.35 1.5-5.325.524zm15.374-11.398H8.702v-.075c.15-2.325 2.324-4.35 4.874-4.35 2.4 0 4.35 1.875 4.5 4.35v.075zm4.574-4.2c-.45-.75-1.05-1.5-1.725-2.1a11.213 11.213 0 0 0-3.6-2.25c2.4-1.124 4.425-1.274 5.475-.224.825.975.75 2.624-.15 4.574 0 .075 0 .075 0 0 0 .075 0 .075 0 0z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://compass-ssl.microsoft.com/assets/c8/67/c867db4c-f328-45b8-817c-33834c70aae6.svg?n=IE.svg\",hex:\"0076D6\"},InVision:{title:\"InVision\",slug:\"invision\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>InVision icon</title><path d=\"M21.825 0H2.175C.975 0 0 .975 0 2.175v19.65C0 23.025.975 24 2.175 24h19.65c1.2 0 2.175-.975 2.175-2.175V2.175C24 .975 23.025 0 21.825 0zM8.02 4.667c.798 0 1.468.63 1.468 1.44 0 .82-.67 1.444-1.468 1.444v.027c-.803 0-1.454-.65-1.454-1.455s.65-1.455 1.455-1.455zm9.816 13.815c-1.484 0-2.204-.885-2.204-2.09 0-.346.044-.713.15-1.08l.71-2.545c.088-.28.11-.54.11-.775 0-.82-.5-1.315-1.296-1.315-1.013 0-1.68.727-2.025 2.13l-1.38 5.535H9.487l.432-1.74c-.708 1.166-1.695 1.885-2.91 1.885-1.467 0-2.157-.842-2.157-2.113.004-.365.047-.73.13-1.085v.002l1.1-4.49H4.375l.518-1.905h4.1l-1.62 6.405c-.105.41-.15.75-.15.986 0 .41.202.53.517.604.195.04 1.725.012 2.56-1.84l1.06-4.25H9.637l.52-1.875h3.72l-.48 2.16c.647-1.2 1.937-2.355 3.212-2.355 1.35 0 2.475.975 2.475 2.82 0 .534-.08 1.065-.24 1.575l-.69 2.476c-.06.254-.104.465-.104.66 0 .434.18.645.494.645s.735-.24 1.2-1.56l.943.36c-.555 1.964-1.576 2.774-2.85 2.774z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://projects.invisionapp.com/boards/BX4P1DY5H46R\",hex:\"FF3366\"},\"Invoice Ninja\":{title:\"Invoice Ninja\",slug:\"invoiceninja\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Invoice Ninja icon</title><path d=\"M16.247 10.326a1.164 1.164 0 11-2.328 0 1.164 1.164 0 012.328 0zm-6.288 0a1.164 1.164 0 11-2.329 0 1.164 1.164 0 012.329 0zm-.14 13.52c-4.712-.98-8.227-4.257-9.482-8.842-.421-1.537-.421-4.49 0-6.027C1.506 4.709 4.73 1.485 8.997.316c1.538-.421 4.49-.421 6.028 0 4.267 1.169 7.492 4.393 8.66 8.66.24.874.294 1.43.294 3.014 0 1.584-.054 2.14-.293 3.014-1.17 4.271-4.439 7.536-8.661 8.65-1.391.367-3.916.46-5.206.192zm6.64-9.315c-3.047-1.348-4.054-1.737-4.5-1.737-.446 0-1.433.38-4.38 1.684-2.091.926-3.828 1.76-3.86 1.79h16.663zm-9.873-.361c1.621-.729 3.06-1.387 3.196-1.464.258-.145.337-.09-5.285-3.682-.56-.358-1.023-.698-1.025-.65V15.564a790.1 790.1 0 003.114-1.394zm14.078-2.194V8.417c0-.11-1.676.993-3.496 2.12-3 1.854-3.281 2.06-3.004 2.185 1.345.611 6.42 2.862 6.5 2.872zm-8.169.11c.545.125.643.104 1.226-.263.349-.22.655-.419.681-.442.026-.024-.05-.181-.167-.35-.118-.168-.215-.5-.215-.739V9.86l-.569.21c-.726.267-2.28.27-3 .005l-.556-.205.013.452c.007.26-.088.563-.225.715-.232.256-.22.276.45.726.64.432.725.455 1.23.327a2.349 2.349 0 011.132-.002zm-4.23-2.65c-.105-.113-2.97-.954-3.033-.891-.03.03.504.414 1.186.854l1.24.8.34-.344c.186-.188.307-.377.268-.42zm9.76-.373c.473-.306.8-.555.728-.555-.155 0-2.877.804-3.027.894-.057.034.033.229.2.433l.304.37.47-.293c.257-.162.854-.544 1.326-.85zm-1.636-.555c2.11-.59 3.867-1.102 3.904-1.139H3.59c.187.187 7.779 2.195 8.323 2.202.41.005 2.014-.376 4.476-1.063z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/invoiceninja/invoiceninja\",hex:\"000000\"},Ionic:{title:\"Ionic\",slug:\"ionic\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Ionic icon</title><path d=\"M22.922 7.027l-.103-.23-.169.188c-.408.464-.928.82-1.505 1.036l-.159.061.066.155a9.745 9.745 0 0 1 .75 3.759c0 5.405-4.397 9.806-9.806 9.806-5.409 0-9.802-4.397-9.802-9.802 0-5.405 4.402-9.806 9.806-9.806 1.467 0 2.883.319 4.2.947l.155.075.066-.155a3.767 3.767 0 0 1 1.106-1.453l.197-.159-.225-.117A11.905 11.905 0 0 0 12.001.001c-6.619 0-12 5.381-12 12s5.381 12 12 12 12-5.381 12-12c0-1.73-.361-3.403-1.078-4.973zM12 6.53A5.476 5.476 0 0 0 6.53 12 5.476 5.476 0 0 0 12 17.47 5.476 5.476 0 0 0 17.47 12 5.479 5.479 0 0 0 12 6.53zm10.345-2.007a2.494 2.494 0 1 1-4.988 0 2.494 2.494 0 0 1 4.988 0z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://ionicframework.com/press\",hex:\"3880FF\"},iOS:{title:\"iOS\",slug:\"ios\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>iOS icon</title><path d=\"M1.1 6.05C.486 6.05 0 6.53 0 7.13A1.08 1.08 0 0 0 1.1 8.21C1.72 8.21 2.21 7.73 2.21 7.13C2.21 6.53 1.72 6.05 1.1 6.05M8.71 6.07C5.35 6.07 3.25 8.36 3.25 12C3.25 15.67 5.35 17.95 8.71 17.95C12.05 17.95 14.16 15.67 14.16 12C14.16 8.36 12.05 6.07 8.71 6.07M19.55 6.07C17.05 6.07 15.27 7.45 15.27 9.5C15.27 11.13 16.28 12.15 18.4 12.64L19.89 13C21.34 13.33 21.93 13.81 21.93 14.64C21.93 15.6 20.96 16.28 19.58 16.28C18.17 16.28 17.11 15.59 17 14.53H15C15.08 16.65 16.82 17.95 19.46 17.95C22.25 17.95 24 16.58 24 14.4C24 12.69 23 11.72 20.68 11.19L19.35 10.89C17.94 10.55 17.36 10.1 17.36 9.34C17.36 8.38 18.24 7.74 19.54 7.74C20.85 7.74 21.75 8.39 21.85 9.46H23.81C23.76 7.44 22.09 6.07 19.55 6.07M8.71 7.82C10.75 7.82 12.06 9.45 12.06 12C12.06 14.57 10.75 16.2 8.71 16.2C6.65 16.2 5.35 14.57 5.35 12C5.35 9.45 6.65 7.82 8.71 7.82M.111 9.31V17.76H2.1V9.31H.11Z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://en.wikipedia.org/wiki/IOS\",hex:\"000000\"},IPFS:{title:\"IPFS\",slug:\"ipfs\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>IPFS icon</title><path d=\"M12 0L1.608 6v12L12 24l10.392-6V6zm-1.073 1.445h.001a1.8 1.8 0 002.138 0l7.534 4.35a1.794 1.794 0 000 .403l-7.535 4.35a1.8 1.8 0 00-2.137 0l-7.536-4.35a1.795 1.795 0 000-.402zM21.324 7.4c.109.08.226.147.349.201v8.7a1.8 1.8 0 00-1.069 1.852l-7.535 4.35a1.8 1.8 0 00-.349-.2l-.009-8.653a1.8 1.8 0 001.07-1.851zm-18.648.048l7.535 4.35a1.8 1.8 0 001.069 1.852v8.7c-.124.054-.24.122-.349.202l-7.535-4.35a1.8 1.8 0 00-1.069-1.852v-8.7c.124-.054.24-.122.35-.202z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/ipfs/logo\",hex:\"65C2CB\"},Issuu:{title:\"Issuu\",slug:\"issuu\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Issuu icon</title><path d=\"M.996 0A.998.998 0 0 0 0 .996V12c0 6.628 5.372 12 12 12s12-5.372 12-12S18.628 0 12 0H.996zm11.17 3.582a8.333 8.333 0 0 1 8.254 8.41 8.333 8.333 0 0 1-8.41 8.252c-4.597-.045-8.296-3.81-8.254-8.41.045-4.6 3.81-8.296 8.41-8.252zm-.031 2.27a6.107 6.107 0 0 0-6.155 6.046 6.109 6.109 0 0 0 6.05 6.163 6.099 6.099 0 0 0 6.154-6.047 6.107 6.107 0 0 0-6.041-6.162h-.008zm-.02 3.013a3.098 3.098 0 0 1 3.063 3.123 3.088 3.088 0 0 1-3.121 3.06l.002-.001a3.091 3.091 0 0 1 .056-6.182z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://issuu.com/press\",hex:\"F36D5D\"},\"Itch.io\":{title:\"Itch.io\",slug:\"itch-dot-io\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Itch.io icon</title><path d=\"M3.129 1.338c-1.047 0.622-3.109 2.991-3.129 3.612v1.029c0 1.304 1.219 2.45 2.325 2.45 1.329 0 2.436-1.101 2.436-2.408 0 1.307 1.069 2.408 2.398 2.408s2.364-1.101 2.364-2.408c0 1.307 1.137 2.408 2.466 2.408h0.024c1.329 0 2.466-1.101 2.466-2.408 0 1.307 1.035 2.408 2.364 2.408s2.398-1.101 2.398-2.408c0 1.307 1.107 2.408 2.436 2.408 1.107 0 2.325-1.146 2.325-2.45v-1.029c-0.020-0.621-2.082-2.991-3.129-3.612-3.254-0.114-5.51-0.134-8.871-0.133s-7.945 0.053-8.871 0.133zM9.506 7.815c-0.133 0.23-0.288 0.428-0.467 0.601l-0.001 0.001c-0.502 0.49-1.189 0.794-1.947 0.794-0.001 0-0.002 0-0.003 0-0.759 0-1.447-0.303-1.949-0.795l0 0c-0.182-0.178-0.32-0.368-0.446-0.59l-0.001 0c-0.126 0.222-0.302 0.412-0.485 0.59-0.502 0.491-1.19 0.794-1.949 0.794-0.001 0-0.002 0-0.003 0h0c-0.091 0-0.186-0.025-0.263-0.052-0.107 1.112-0.152 2.175-0.168 2.95l-0 0.004c-0.002 0.394-0.004 0.717-0.006 1.167 0.021 2.334-0.231 7.564 1.029 8.849 1.953 0.455 5.546 0.663 9.151 0.664h0.001c3.605-0.001 7.198-0.209 9.151-0.664 1.26-1.285 1.008-6.516 1.029-8.849-0.002-0.45-0.004-0.773-0.006-1.167l-0-0.004c-0.016-0.775-0.061-1.838-0.168-2.95-0.077 0.026-0.172 0.052-0.263 0.052-0.001 0-0.002 0-0.002 0-0.759 0-1.447-0.303-1.949-0.795l0.001 0c-0.182-0.178-0.358-0.368-0.485-0.59l-0.001-0c-0.127 0.222-0.265 0.412-0.446 0.59-0.502 0.491-1.19 0.795-1.948 0.795-0.001 0-0.002 0-0.003 0h0c-0.758 0-1.445-0.304-1.947-0.795-0.179-0.174-0.334-0.372-0.461-0.589l-0.007-0.013c-0.132 0.23-0.286 0.428-0.463 0.602l-0 0c-0.502 0.491-1.19 0.795-1.949 0.795-0.001 0-0.002 0-0.003 0h0c-0.026 0-0.053-0.001-0.079-0.002h-0.001c-0.026 0.001-0.053 0.002-0.080 0.002-0.001 0-0.002 0-0.003 0-0.759 0-1.447-0.303-1.949-0.795l0.001 0c-0.178-0.174-0.331-0.372-0.456-0.589l-0.007-0.013zM7.502 10.406l-0 0.001h0.001c0.794 0.002 1.498 0 2.372 0.953 0.687-0.072 1.406-0.108 2.125-0.107h0.001c0.719-0.001 1.437 0.035 2.125 0.107 0.873-0.953 1.578-0.952 2.372-0.953h0.001l-0-0.001c0.375 0 1.875 0 2.92 2.935l1.122 4.026c0.832 2.995-0.266 3.069-1.636 3.071-2.031-0.076-3.156-1.551-3.156-3.026-1.124 0.184-2.436 0.276-3.748 0.276h-0.001c-1.312 0-2.624-0.092-3.748-0.276 0 1.475-1.125 2.95-3.156 3.026-1.37-0.003-2.468-0.076-1.636-3.071l1.123-4.026c1.045-2.935 2.545-2.935 2.92-2.935zM12 12.713v0.001c-0.002 0.002-2.138 1.964-2.523 2.662l1.399-0.056v1.22c0 0.057 0.561 0.034 1.123 0.008h0.001c0.562 0.026 1.123 0.049 1.123-0.008v-1.22l1.399 0.056c-0.384-0.698-2.523-2.662-2.523-2.662v-0.001l-0 0z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://itch.io/press-kit\",hex:\"FA5C5C\"},iTunes:{title:\"iTunes\",slug:\"itunes\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>iTunes icon</title><path d=\"M11.979,24c-2.483,0-4.898-0.777-6.954-2.262h0c-2.59-1.872-4.3-4.644-4.814-7.807 c-0.514-3.162,0.228-6.336,2.091-8.937c1.864-2.604,4.627-4.321,7.78-4.835c3.148-0.514,6.307,0.233,8.896,2.104 c2.59,1.872,4.3,4.644,4.815,7.807c0.514,3.162-0.228,6.336-2.091,8.938c-1.865,2.604-4.628,4.321-7.78,4.835 C13.273,23.948,12.623,24,11.979,24z M5.505,21.074c2.411,1.742,5.353,2.438,8.284,1.96c2.936-0.479,5.509-2.079,7.246-4.504 c3.583-5.004,2.445-12.004-2.538-15.604c-2.411-1.742-5.353-2.438-8.284-1.96C7.278,1.446,4.704,3.045,2.968,5.47 C-0.616,10.474,0.523,17.474,5.505,21.074L5.505,21.074z M16.111,17.522c0.731-0.214,1.246-0.734,1.458-1.468l0.062-0.216 l0.008-5.787c0.006-4.334,0-5.814-0.024-5.895c-0.025-0.086-0.066-0.157-0.118-0.214c-0.077-0.048-0.17-0.073-0.276-0.073 c-0.073,0-0.325,0.035-0.56,0.078c-1.041,0.19-7.176,1.411-7.281,1.45C9.218,5.458,9.057,5.6,8.981,5.751L8.916,5.879 c0,0-0.031,9.071-0.078,9.173c-0.071,0.155-0.23,0.303-0.376,0.35c-0.069,0.022-0.343,0.084-0.609,0.137 c-1.231,0.245-1.688,0.421-2.075,0.801c-0.22,0.216-0.382,0.51-0.453,0.819c-0.067,0.295-0.045,0.737,0.051,1.006 c0.1,0.281,0.262,0.521,0.473,0.71c0.192,0.148,0.419,0.258,0.674,0.324c0.563,0.144,1.618-0.016,2.158-0.328 c0.226-0.131,0.516-0.404,0.667-0.629c0.06-0.089,0.15-0.268,0.2-0.399c0.176-0.456,0.181-8.582,0.204-8.684 c0.038-0.174,0.157-0.301,0.32-0.344c0.147-0.039,6.055-1.207,6.222-1.23c0.146-0.02,0.284,0.027,0.36,0.12 c0.045,0.024,0.083,0.056,0.109,0.096c0.048,0.071,0.051,0.213,0.058,2.785c0.008,2.961,0.012,2.892-0.149,3.079 c-0.117,0.136-0.263,0.189-0.864,0.311c-0.914,0.187-1.226,0.275-1.576,0.446c-0.437,0.213-0.679,0.447-0.867,0.836 c-0.133,0.275-0.182,0.481-0.182,0.754c0.001,0.489,0.169,0.871,0.55,1.245c0.035,0.034,0.069,0.066,0.104,0.097 c0.192,0.148,0.387,0.238,0.633,0.294C14.84,17.73,15.594,17.673,16.111,17.522z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://upload.wikimedia.org/wikipedia/commons/d/df/ITunes_logo.svg\",hex:\"FB5BC5\"},Jabber:{title:\"Jabber\",slug:\"jabber\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Jabber icon</title><path d=\"M9.597 11.737c0-.35-.065-.732-.268-1.025-.408-.588-1.283-.775-1.892-.405-.308.188-.48.515-.576.851-.191.668-.104 1.43.03 2.1.043.214.088.428.148.639.021.076.031.186.08.25.087.11.297.141.426.12.387-.065.291-.703.278-.974-.03-.634-.218-1.25-.036-1.881.076-.268.225-.568.494-.684.244-.105.49.023.586.261.156.385.117.83.215 1.23.033.137.07.272.131.399.018.037.043.113.094.108.126-.011.304-.22.398-.298.304-.25.616-.52.965-.705.165-.088.435-.23.603-.08a.612.612 0 0 1 .108.13c.198.31.002.55-.127.845-.166.38-.336.758-.577 1.098-.207.293-.49.549-.655.869-.107.205-.167.43-.123.663.036.188.181.301.373.257.143-.033.24-.156.322-.269.146-.202.281-.412.426-.615.28-.393.61-.76.846-1.183a3.41 3.41 0 0 0 .42-1.664c0-.474-.171-1.198-.723-1.298a.974.974 0 0 0-.326.01 1.432 1.432 0 0 0-.374.12 2.715 2.715 0 0 0-.818.637c-.146.16-.276.363-.449.495M9.078.016c-.435.058-.878.052-1.315.12-.838.129-1.64.389-2.425.703-.286.114-.568.241-.845.376-.103.05-.26.09-.343.17-.043.041-.039.139-.044.195-.014.156-.034.313-.05.47-.058.605-.1 1.229-.013 1.834.028.195.09.55.33.587.369.058.656-.397.837-.648.424-.586.905-1.132 1.6-1.394.817-.308 1.753-.381 2.618-.44 2.426-.167 5.078.277 6.865 2.064.254.254.495.524.7.82.8 1.159 1.223 2.477 1.427 3.86.096.65.161 1.308.013 1.955-.257 1.122-.932 2.1-1.706 2.931-.53.57-1.128 1.084-1.749 1.552-.347.261-.736.483-1.062.768-.375.329-.688.74-.925 1.179-.639 1.181-.81 2.602-.622 3.92.038.27.073.542.134.809.018.08.022.217.073.282.097.122.36.189.508.196.154.007.256-.11.294-.249.064-.236.026-.498-.012-.736-.076-.487-.147-.977-.125-1.471a3.71 3.71 0 0 1 1.026-2.425c.643-.673 1.512-1.061 2.243-1.625 1.474-1.136 2.794-2.668 3.301-4.492a5.194 5.194 0 0 0 .159-2.015c-.105-.849-.415-1.697-.708-2.497-.892-2.437-2.422-4.755-4.851-5.87-.964-.443-1.973-.645-3.016-.79-.49-.068-.98-.11-1.472-.132-.274-.012-.572-.042-.845-.006M5.277 15.796c-.473.068-.61.447-.523.876.112.548.543.965.97 1.295a6.03 6.03 0 0 0 3.884 1.238c.538-.023 1.124-.112 1.617-.34.265-.122.542-.563.181-.751a.59.59 0 0 0-.169-.051c-.157-.026-.333.041-.482.084-.263.075-.526.153-.797.196-.808.13-1.683-.055-2.352-.534-.542-.387-.98-.898-1.393-1.415-.253-.316-.482-.663-.936-.598M4.662 18.474c-.12.016-.259.011-.362.087-.215.158.022.476.135.62.328.417.76.763 1.192 1.068a7.832 7.832 0 0 0 4.03 1.442c.421.03.85 0 1.267-.07.152-.026.342-.037.482-.103.399-.186.284-.939-.072-1.106-.155-.073-.404.023-.567.046-.385.054-.771.06-1.158.05-1.015-.025-2.096-.338-2.98-.831a5.589 5.589 0 0 1-.966-.693c-.181-.16-.368-.42-.603-.502-.11-.037-.284-.023-.398-.008M4.903 20.73a.638.638 0 0 0-.413.236c-.078.088-.152.167-.197.278-.246.609.41 1.183.864 1.47.504.32 1.055.558 1.616.758 1.266.45 2.752.739 4.066.336.391-.12.778-.338 1.062-.634.16-.167.27-.419-.024-.526-.174-.063-.385.098-.543.162a4.57 4.57 0 0 1-1.158.312c-.527.064-1.001-.052-1.508-.179-.434-.108-.872-.217-1.291-.373a4.457 4.457 0 0 1-1.026-.513c-.094-.066-.206-.125-.282-.211-.25-.282-.439-.612-.707-.88-.116-.116-.281-.256-.459-.236\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://commons.wikimedia.org/wiki/File:Jabber-bulb.svg\",hex:\"CC0000\"},Java:{title:\"Java\",slug:\"java\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Java icon</title><path d=\"M8.851 18.56s-.917.534.653.714c1.902.218 2.874.187 4.969-.211 0 0 .552.346 1.321.646-4.699 2.013-10.633-.118-6.943-1.149M8.276 15.933s-1.028.761.542.924c2.032.209 3.636.227 6.413-.308 0 0 .384.389.987.602-5.679 1.661-12.007.13-7.942-1.218M13.116 11.475c1.158 1.333-.304 2.533-.304 2.533s2.939-1.518 1.589-3.418c-1.261-1.772-2.228-2.652 3.007-5.688 0-.001-8.216 2.051-4.292 6.573M19.33 20.504s.679.559-.747.991c-2.712.822-11.288 1.069-13.669.033-.856-.373.75-.89 1.254-.998.527-.114.828-.093.828-.093-.953-.671-6.156 1.317-2.643 1.887 9.58 1.553 17.462-.7 14.977-1.82M9.292 13.21s-4.362 1.036-1.544 1.412c1.189.159 3.561.123 5.77-.062 1.806-.152 3.618-.477 3.618-.477s-.637.272-1.098.587c-4.429 1.165-12.986.623-10.522-.568 2.082-1.006 3.776-.892 3.776-.892M17.116 17.584c4.503-2.34 2.421-4.589.968-4.285-.355.074-.515.138-.515.138s.132-.207.385-.297c2.875-1.011 5.086 2.981-.928 4.562 0-.001.07-.062.09-.118M14.401 0s2.494 2.494-2.365 6.33c-3.896 3.077-.888 4.832-.001 6.836-2.274-2.053-3.943-3.858-2.824-5.539 1.644-2.469 6.197-3.665 5.19-7.627M9.734 23.924c4.322.277 10.959-.153 11.116-2.198 0 0-.302.775-3.572 1.391-3.688.694-8.239.613-10.937.168 0-.001.553.457 3.393.639\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.oracle.com/legal/logos.html\",hex:\"007396\"},JavaScript:{title:\"JavaScript\",slug:\"javascript\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>JavaScript icon</title><path d=\"M0 0h24v24H0V0zm22.034 18.276c-.175-1.095-.888-2.015-3.003-2.873-.736-.345-1.554-.585-1.797-1.14-.091-.33-.105-.51-.046-.705.15-.646.915-.84 1.515-.66.39.12.75.42.976.9 1.034-.676 1.034-.676 1.755-1.125-.27-.42-.404-.601-.586-.78-.63-.705-1.469-1.065-2.834-1.034l-.705.089c-.676.165-1.32.525-1.71 1.005-1.14 1.291-.811 3.541.569 4.471 1.365 1.02 3.361 1.244 3.616 2.205.24 1.17-.87 1.545-1.966 1.41-.811-.18-1.26-.586-1.755-1.336l-1.83 1.051c.21.48.45.689.81 1.109 1.74 1.756 6.09 1.666 6.871-1.004.029-.09.24-.705.074-1.65l.046.067zm-8.983-7.245h-2.248c0 1.938-.009 3.864-.009 5.805 0 1.232.063 2.363-.138 2.711-.33.689-1.18.601-1.566.48-.396-.196-.597-.466-.83-.855-.063-.105-.11-.196-.127-.196l-1.825 1.125c.305.63.75 1.172 1.324 1.517.855.51 2.004.675 3.207.405.783-.226 1.458-.691 1.811-1.411.51-.93.402-2.07.397-3.346.012-2.054 0-4.109 0-6.179l.004-.056z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/voodootikigod/logo.js\",hex:\"F7DF1E\"},Jekyll:{title:\"Jekyll\",slug:\"jekyll\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Jekyll icon</title><path d=\"M8.073 24c-.348 0-.689-.063-1.02-.189-1.375-.525-2.104-2.02-1.726-3.402l-.015-.006.09-.226L12.399 2.01c.105-.27.057-.91.006-1.267-.016-.085-.016-.161.008-.24l.008-.023.006-.015V.458l.009-.019c.108-.292.45-.439 1.008-.439.673 0 1.602.21 2.551.573.797.307 1.523.689 2.033 1.075.602.45.842.854.707 1.2l-.031.045-.016.015c-.045.061-.09.12-.15.165-.314.271-.764.735-.84.945l-7.063 18.421-.016-.006c-.494.948-1.457 1.557-2.543 1.561H8.07l.003.006zm-2.187-3.718l-.02.05c-.447 1.201.162 2.557 1.364 3.018.271.105.551.154.837.154.971 0 1.83-.585 2.188-1.5l.027-.061 6.959-18.09c.146-.39.84-1.02.979-1.14l.016-.016c.012-.015.02-.015.02-.03 0-.06-.061-.27-.557-.645-.479-.36-1.154-.72-1.904-1.005-.868-.328-1.768-.539-2.368-.539-.39 0-.524.082-.545.126v.04c.016.104.147 1.035-.034 1.515l-6.962 18.12v.003zm8.95-11.507s-.964 1.109-1.843 1.509c-.88.398-1.529.293-2.32.756-.789.461-1.188 1.103-1.188 1.103L6.27 20.505c-.348.944.168 2.05 1.125 2.42.96.369 2.04-.12 2.412-1.056l5.029-13.094zM9.905 18.76c.104-.041.225 0 .266.105.042.104 0 .222-.105.264-.104.043-.225 0-.266-.104-.042-.097 0-.216.105-.265zm-1.014-1.802c-.152.068-.334 0-.397-.155-.07-.152 0-.334.154-.397.154-.07.335 0 .398.153.074.15.008.314-.155.39v.009zm.286-1.096c-.123-.288 0-.623.287-.758.285-.124.615 0 .75.285.121.289 0 .624-.285.757-.3.126-.629 0-.765-.285l.013.001zm2.426-2.258c.153-.074.335 0 .398.15.07.154 0 .336-.153.399-.155.07-.337 0-.399-.155-.074-.152 0-.334.154-.397v.003zm-1.293-1.379c.105-.042.226 0 .266.105.043.104 0 .226-.104.266-.104.042-.226 0-.265-.104-.044-.106.006-.227.103-.267zM13.681 1.14c.1-.261.993-.162 1.995.226.999.384 1.729.909 1.63 1.17-.104.264-.997.164-1.996-.221-1.005-.385-1.734-.91-1.632-1.176h.003z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/jekyll/brand\",hex:\"CC0000\"},Jenkins:{title:\"Jenkins\",slug:\"jenkins\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Jenkins icon</title><path d=\"M2.873 24h-.975c-.025-.066-.049-.131-.07-.197-.215-.666-.594-1.49-.692-2.154-.146-.984.78-1.039 1.374-1.465.915-.66 1.635-1.025 2.627-1.621.295-.178 1.182-.623 1.281-.828.201-.408-.345-.982-.49-1.301-.225-.506-.345-.936-.376-1.434-.824-.131-1.455-.627-1.844-1.185-.63-.925-1.066-2.635-.525-3.936.045-.103.254-.305.285-.463.06-.309-.105-.72-.121-1.049-.06-1.692.285-3.15 1.426-3.66.463-1.84 2.113-2.453 3.673-3.367.581-.342 1.224-.562 1.89-.807 2.372-.877 6.028-.712 7.995.783.836.633 2.176 1.971 2.656 2.939 1.262 2.555 1.17 6.826.287 9.935-.121.421-.291 1.032-.533 1.533-.168.349-.689 1.05-.625 1.36.064.314 1.189 1.17 1.432 1.395.434.422 1.26.975 1.324 1.5.07.557-.248 1.336-.41 1.875-.217.721-.436 1.441-.654 2.131H2.871l.002.016zm11.104-3.541c-.545-.299-1.361-.621-2.065-.756-.869-.164-.779 1.188-.75 1.994.03.643.361 1.316.511 1.744.075.197.089.41.255.449.3.068 1.29-.326 1.575-.479.6-.328 1.064-.844 1.574-1.189.016-.17.016-.34.031-.508-.301-.148-.645-.258-1.096-.277.314-.15.75-.15 1.035-.332l.016-.193c-.496-.031-.689-.254-1.021-.436l-.065-.017zm7.455 2.936c.193-.619.359-1.221.465-1.752.059-.287.215-.918.178-1.176-.059-.459-.684-.799-1.004-1.086-.584-.525-.951-.975-1.561-1.469-.248.375-.779.615-.982.914 1.447-.689 1.709 2.625 1.141 3.689.09.33.391.451.514.736l-.086.166h1.289c.014 0 .031 0 .045.014l.001-.036zm-6.635-.012c-.049-.074-.1-.135-.15-.209l-.301.195h.451v.014zm2.771 0c.008-.209.018-.404.029-.598-.529.029-.824-.48-1.195-.527-.324-.045-.6.361-1.02.195-.096.105-.184.227-.285.316.154.18.295.375.424.584h.816c.014-.164.135-.285.299-.285.166 0 .285.121.285.27h.66l-.013.045zm2.116 0c-.314-.479-.947-.898-1.68-.555l-.031.541h1.711v.014zm-8.51 0l-.105-.344c-.225-.721-.359-1.26-.405-1.68-.914-.436-1.875-.871-2.654-1.426-.15-.105-1.109-1.35-1.23-1.305-1.739.676-3.359 1.859-4.814 2.984.256.557.48 1.141.69 1.74h8.505l.013.031zm8.265-2.113c-.029-.512-.164-1.561-.48-1.74-.66-.391-1.846.779-2.34.943.045.15.135.271.15.48.285-.074.645-.029.898.092-.299.029-.629.029-.824.164-.074.195.016.48-.029.764.689.197 1.5.303 2.385.332.164-.227.225-.645.211-1.082l.029.047zm-4.08-.36c-.045.375.045.51.119.943 1.26.391 1.035-1.74-.135-.959l.016.016zM8.761 19.5c-.45.457 1.271 1.082 1.814 1.115 0-.291.165-.564.135-.771-.649-.117-1.502-.041-1.945-.346l-.004.002zm5.565.215c0 .043-.061.029-.068.064.58.451 1.014.545 1.803.51.354-.262.67-.563 1.043-.807-.855.074-1.932.607-2.775.229l-.003.004zm3.42-17.727c-1.605-.906-4.35-1.591-6.076-.731-1.38.692-3.27 1.841-3.899 3.292.6 1.402-.166 2.686-.226 4.109-.018.758.36 1.42.391 2.243-.2.338-.825.38-1.26.356-.146-.729-.401-1.549-1.155-1.631-1.064-.115-1.845.765-1.891 1.684-.06 1.079.834 2.864 2.086 2.745.488-.046.608-.541 1.139-.541.285.57-.445.75-.523 1.155-.016.105.059.511.104.705.233.944.744 2.159 1.245 2.88.635.9 1.884 1.051 3.229 1.141.24-.525 1.125-.48 1.706-.346-.691-.27-1.336-.945-1.875-1.529-.615-.676-1.23-1.41-1.261-2.28 1.155 1.604 2.1 2.999 4.201 3.704 1.59.525 3.449-.254 4.664-1.109.51-.359.811-.93 1.17-1.439 1.35-1.936 1.98-4.71 1.846-7.395-.061-1.111-.061-2.221-.436-2.955-.389-.781-1.695-1.471-2.475-.781-.15-.764.629-1.229 1.545-.959-.66-.855-1.336-1.859-2.266-2.385l.017.067zm-4.164 12.908c.615 1.544 2.725 1.363 4.506 1.323-.084.194-.256.435-.465.515-.57.232-2.146.408-2.938-.012-.506-.271-.824-.873-1.102-1.227-.137-.172-.795-.608-.012-.609l.011.01zm.164-.871c.893.465 2.52.518 3.732.48.066.268.066.594.068.914-1.551.08-3.387-.304-3.795-1.395h-.005zm6.676-.585c-.473.9-1.145 1.897-2.539 1.928-.023-.284-.045-.735 0-.904 1.064-.103 1.727-.646 2.543-1.017l-.004-.007zm-.649-.667c-1.02.66-2.154 1.375-3.824 1.21-.352-.31-.486-1.001-.141-1.458.182.313.061.885.57.969.945.166 2.039-.578 2.73-.84.42-.712-.045-.975-.42-1.432-.781-.931-1.83-2.1-1.801-3.51.314-.225.346.345.391.449.404.961 1.424 2.176 2.174 3 .18.211.48.391.51.525.092.389-.254.854-.209 1.109l.02-.022zm-13.44-.675c-.314-.184-.393-.99-.768-1.01-.535-.03-.438 1.049-.436 1.679-.37-.329-.435-1.364-.164-1.89-.308-.15-.445.165-.618.285.22-1.59 2.34-.734 1.989.96l-.003-.024zM4.714 5.994c-.685.756-.54 2.174-.459 3.188 1.244-.785 2.898.06 2.883 1.395.595-.016.223-.744.115-1.215-.353-1.529.592-3.188.041-4.59-1.064.083-1.939.519-2.578 1.214l-.002.008zm9.12 1.113c.307.562.404 1.148.84 1.57.195.191.574.424.387.951-.045.121-.365.391-.551.45-.674.195-2.254.03-1.721-.81.563.015 1.314.359 1.732-.045-.314-.525-.885-1.53-.674-2.13l-.013.014zm6.199-.013h.068c.33.668.6 1.375 1.004 1.965-.27.629-2.053 1.19-2.023.057.389-.17 1.049-.035 1.395-.25-.193-.556-.48-1.006-.434-1.771l-.01-.001zm-6.928-1.617c-1.422-.33-2.131.592-2.56 1.553-.384-.094-.231-.615-.135-.883.255-.701 1.28-1.633 2.119-1.506.359.057.848.386.576.834v.002zM9.643 1.592c-1.56.44-3.56 1.574-4.2 2.974.495-.07.84-.321 1.33-.351.186-.016.428.074.641.015.424-.104.78-1.065 1.102-1.409.311-.346.685-.497.941-.811.166-.09.408-.074.42-.33-.074-.075-.15-.135-.233-.105v.017z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://wiki.jenkins-ci.org/display/JENKINS/Logo\",hex:\"D24939\"},Jest:{title:\"Jest\",slug:\"jest\",svg:'<svg xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" viewBox=\"0 0 24 24\"><title>Jest icon</title><path d=\"M22.251 11.82a3.117 3.117 0 0 0-2.328-3.01L22.911 0H8.104L11.1 8.838a3.116 3.116 0 0 0-2.244 2.988c0 1.043.52 1.967 1.313 2.536a8.279 8.279 0 0 1-1.084 1.244 8.14 8.14 0 0 1-2.55 1.647c-.834-.563-1.195-1.556-.869-2.446a3.11 3.11 0 0 0-.91-6.08 3.117 3.117 0 0 0-3.113 3.113c0 .848.347 1.626.903 2.182-.048.097-.097.195-.146.299-.465.959-.993 2.043-1.195 3.259-.403 2.432.257 4.384 1.849 5.489A5.093 5.093 0 0 0 5.999 24c1.827 0 3.682-.917 5.475-1.807 1.279-.632 2.599-1.292 3.898-1.612.48-.118.98-.187 1.508-.264 1.07-.153 2.175-.312 3.168-.89a4.482 4.482 0 0 0 2.182-3.091c.174-.994 0-1.994-.444-2.87.298-.48.465-1.042.465-1.647zm-1.355 0c0 .965-.785 1.75-1.75 1.75a1.753 1.753 0 0 1-1.085-3.126l.007-.007c.056-.042.118-.084.18-.125 0 0 .008 0 .008-.007.028-.014.055-.035.083-.05.007 0 .014-.006.021-.006.028-.014.063-.028.097-.042.035-.014.07-.027.098-.041.007 0 .013-.007.02-.007.028-.007.056-.021.084-.028.007 0 .02-.007.028-.007.034-.007.062-.014.097-.02h.007l.104-.022c.007 0 .02 0 .028-.007.028 0 .055-.007.083-.007h.035c.035 0 .07-.007.111-.007h.09c.028 0 .05 0 .077.007h.014c.055.007.111.014.167.028a1.766 1.766 0 0 1 1.396 1.723zM10.043 1.39h10.93l-2.509 7.4c-.104.02-.208.055-.312.09l-2.64-5.385-2.648 5.35c-.104-.034-.216-.055-.327-.076l-2.494-7.38zm4.968 9.825a3.083 3.083 0 0 0-.938-1.668l1.438-2.904 1.452 2.967c-.43.43-.743.98-.868 1.605H15.01zm-3.481-1.098c.034-.007.062-.014.097-.02h.02c.029-.008.056-.008.084-.015h.028c.028 0 .049-.007.076-.007h.271c.028 0 .049.007.07.007.014 0 .02 0 .035.007.027.007.048.007.076.014.007 0 .014 0 .028.007l.097.02h.007c.028.008.056.015.083.029.007 0 .014.007.028.007.021.007.049.014.07.027.007 0 .014.007.02.007.028.014.056.021.084.035h.007a.374.374 0 0 1 .09.049h.007c.028.014.056.034.084.048.007 0 .007.007.013.007.028.014.05.035.077.049l.007.007c.083.062.16.132.236.201l.007.007a1.747 1.747 0 0 1 .48 1.209 1.752 1.752 0 0 1-3.502 0 1.742 1.742 0 0 1 1.32-1.695zm-6.838-.049c.966 0 1.751.786 1.751 1.751s-.785 1.751-1.75 1.751-1.752-.785-1.752-1.75.786-1.752 1.751-1.752zm16.163 6.025a3.07 3.07 0 0 1-1.508 2.133c-.758.438-1.689.577-2.669.716a17.29 17.29 0 0 0-1.64.291c-1.445.355-2.834 1.05-4.182 1.717-1.724.854-3.35 1.66-4.857 1.66a3.645 3.645 0 0 1-2.154-.688c-1.529-1.056-1.453-3.036-1.272-4.12.167-1.015.632-1.966 1.077-2.877.028-.055.049-.104.077-.16.152.056.312.098.479.126-.264 1.473.486 2.994 1.946 3.745l.264.139.284-.104c1.216-.431 2.342-1.133 3.336-2.071a9.334 9.334 0 0 0 1.445-1.716c.16.027.32.034.48.034a3.117 3.117 0 0 0 3.008-2.327h1.167a3.109 3.109 0 0 0 3.01 2.327c.576 0 1.11-.16 1.57-.43.18.52.236 1.063.139 1.605z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://jestjs.io/\",hex:\"C21325\"},JET:{title:\"JET\",slug:\"jet\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>JET icon</title><path d=\"M15.778 19.044c3.048-.498 4.755-.73 8.219-2.395L24 13.81c-3.228 3.225-9.249 5.146-15.07 5.098-.75-.01-1.948.017-2.246-.024 3.1.49 6.18.556 9.094.159M3.836 15.764c.75.003 1.805-.014 2.403-.394.535-.467.93-1.106 1.247-1.828l1.545-4.697-2.157.013-1.199 3.664c-.225 1.161-.943 1.566-1.483 1.483l-1.354-.097-.515 1.676 1.513.18m13.29-.104l1.672-5.074h2.44l.543-1.665-5.907-.01-.556 1.662H16.6l-1.73 5.077 2.257.01m-3.859-.024l.564-1.718h-3.204l.297-.909h2.668l.543-1.641h-2.661l.262-.81h3.08l.57-1.713-5.267.027-2.205 6.757 5.353.007m1.245-9.809c1.883-.072 3.743.083 5.969.277-2.192-.809-5.7-1.407-8.344-1.407-4.344 0-8.644 1.054-12.117 2.675L0 11.07c3.321-3.387 9.114-5.298 14.513-5.243\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://de.wikipedia.org/wiki/Datei:JET.svg\",hex:\"FBBA00\"},JetBrains:{title:\"JetBrains\",slug:\"jetbrains\",svg:'<svg role =\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>JetBrains icon</title><path d=\"M0 0h24v24H0V0zm2.1 21h9v-1.5h-9V21zM3.3 6.9h.3c.7-.1 1.2-.7 1.2-1.5V3H3.7v2.5c0 .4-.1.5-.4.5-.3 0-.5-.1-.6-.3l-.7.6c.3.5.8.7 1.3.6zm5 0V6H6.2v-.6H8v-.9H6.2v-.6h2.1V3H5.1v4h3.2zm1.3 0h1.1v-3h1.2V3H8.5v.9h1.2v3zm-4 3.8c0-.5-.3-.9-.8-.9.4-.1.6-.5.6-.9 0-.2-.1-.5-.2-.7-.3-.3-.7-.4-1.1-.4h-2v3.9h2c.9 0 1.5-.4 1.5-1zm-2.5-2h.7c.3 0 .5.1.5.3 0 .3-.2.4-.5.4h-.7v-.7zm0 2.1v-.7h.8c.4 0 .6.1.5.3 0 .2-.2.4-.5.4h-.8zm7.4-3L9 11.3l-.6-.9c.5-.2.8-.7.8-1.2 0-.3-.1-.7-.3-.9-.4-.4-.9-.5-1.3-.5H5.7v3.9h1.1v-1.2h.5l.8 1.2H9.9l.3-.7h1.5l.3.7h1.2l-1.6-4h-1.1zm-3 1.9h-.7v-.9h.7c.3 0 .6.1.6.5 0 .2-.2.4-.6.4zm3.9.5h-.8l.4-1.1.4 1.1zm1.9 1.5h1.1V7.8h-1.1v3.9zm4-1.8l-1.6-2.1h-1v3.9h1.1V9.6l1.7 2.2h.9v-4h-1.1v2.1zm3.1-.6c-.5-.1-.7-.2-.7-.4 0-.1.1-.2.4-.2.4 0 .8.2 1.1.4l.6-.8c-.5-.4-1-.5-1.6-.5-.9 0-1.5.6-1.5 1.3 0 .8.6 1 1.5 1.2.5.1.7.2.7.4s-.2.3-.5.3c-.5 0-.9-.2-1.3-.5l-.6.7c.5.4 1.2.6 1.8.6 1 0 1.6-.5 1.6-1.3 0-.7-.6-1-1.5-1.2z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.jetbrains.com/company/brand/\",hex:\"000000\"},Jinja:{title:\"Jinja\",slug:\"jinja\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Jinja icon</title><path d=\"M23.719.668l-.08.039s-4.563 2.175-8.244 2.652c-1.854.24-4.555.481-6.965.62a65.475 65.475 0 01-3.254.117c-.917.005-1.63-.032-1.95-.11a20.19 20.19 0 01-2.4-.732l-.252-.1.346 1.172-.92.809.248.437.44.033 1.052.131.162.514.635.057.318 1.078.092.006s1.338.115 1.762.115c.365 0 .93-.041 1.072-.05l.024.396.287.054v.315l-.799.71.156.028c-.14.01-.227.018-.5.03-.429.017-.934.02-1.203-.018-.586-.086-.709-.086-.709-.086H2.98l-.122.13-.046.446h.152l.055 1.111 2.933-.113-.205 3.682-.02.347-2.242-.127-.02-.761h.538l.057-.42.464-.106.223-.312-2.111-.51-1.705.506.465.388h.166l.025.334.494.028v.763l-.611.157.19.404.105.068v.825h.343v3.296l-.566.086.098 1.247.334.056-.055 2.342 1.803.033-.32-2.303 1.982-.048-.139 1.087-.25 1.032 2.608.033.027-2.28 1.322-.119-.072 1.293-.063.99h1.633l-.053-2.3.176.027.067-1.392h-.243l-.058-.34-.131-1.29.049-1.364h.295v-1.182l-.364.027.04-.806.431-.043.022-.352.172-.025.51-.389-1.827-.375-1.709.379.285.469.239-.02.054-.004.034.442.41-.02.004.674-1.526-.035.053-.877.059-.926v-1.213l.048-1.152 3.485-.178 4.156-.24.033.674-.152 1.949-.063 1.693-1.32-.023-.006-1.018.574-.021.028-.373.27-.041-.012-.057.152-.01.29-.388-2.01-.471-1.987.426.258.45.14-.01v.089h.246v.402l.524.008-.006.856h-.527l-.014.505.187.022-.021.978.394.02-.044 3.615-.524.108.016.423h.176v.985h.289l-.07 1.205-.112 1.314 2.17.057-.069-1.172-.138-.848-.022-.593 1.325-.024-.041 1.002-.008 1.33 1.033.082 1.252-.05.533-.157-.25-.76-.053-1-.08-.583 1.233-.045-.057.742-.006 1.515.738.069.631-.016.416-.13-.187-1.424-.049-.862.25-.027.006-.895.08-.017-.027-.43h-.303l-.049-.527-.023-2.692.222-.006v-.902l.096.014v-.461l-.334-.027.006-.836.57-.051-.033-.362.26-.021-.024-.117.58-.29-2.056-.413-1.881.38.232.432.223-.02.014.077h.203l.011.426.547-.006.035.773-1.671-.012-.211-1.457-.178-.826-.145-1.469.075-.746 3.847-.293.012-1.316.201-.05-.023-.38-.239-.138h-.037l-.357.05-.793.116a62.16 62.16 0 01-1.625.216l-.191.02-.014-.178-.785-.41.006-.275.271-.008.02-.672c.09-.006.352-.024.771-.062.484-.045 1.04-.105 1.361-.18.597-.14 1.452-.281 1.452-.281l.076-.012.408-1.108.805-.234.066-.184 1.78-.492.306-.252-.717-1.564.047-.236.344-.18.297-.906-.252-.223zM14.826 6.73l-.01.526.407.017-.016.32-.789.518-.086.258-1.86.09.01-.184.112-.181.01-.153.001-.228.067-.156.031-.16v-.092l.08-.323 2.043-.252zm-5.181.461l-.043.264.199.234-.014.387.176.27-.047.328.025.035-1.847.074.02-.152-.653-.354-.022-.345.291-.014.028-.598 1.887-.129zm4.015 8.5l1.258.082-.05 1.938.183 1.541-1.34-.047-.05-3.514zm-10.226.084l2.16.112L5.4 17.17v1.219l.137.523-2.09.098-.013-3.235zm15.377.01v3.256l-1.291.094-.051-1.723-.158-1.592 1.5-.035zm-11.495.076l1.538.006.017 2.996-1.43.026-.076-.928-.006-1.047-.043-1.053Z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/pallets/jinja/\",hex:\"B41717\"},Jira:{title:\"Jira\",slug:\"jira\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Jira icon</title><path d=\"M23.323 11.33L13.001 1 12 0 4.225 7.775.67 11.33a.96.96 0 0 0 0 1.347l7.103 7.103L12 24l7.771-7.771.121-.121 3.431-3.431a.945.945 0 0 0 0-1.347zM12 15.551L8.449 12 12 8.453 15.548 12 12 15.551z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.atlassian.com/company/news/press-kit\",hex:\"172B4D\"},Joomla:{title:\"Joomla\",slug:\"joomla\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Joomla icon</title><path d=\"M16.719 14.759L14.22 17.26l-2.37 2.37-.462.466c-1.368 1.365-3.297 1.83-5.047 1.397-.327 1.424-1.604 2.49-3.13 2.49C1.438 23.983 0 22.547 0 20.772c0-1.518 1.055-2.789 2.469-3.123-.446-1.76.016-3.705 1.396-5.08l.179-.18 2.37 2.37-.184.181c-.769.779-.769 2.024 0 2.789.771.78 2.022.78 2.787 0l.465-.465 2.367-2.371 2.502-2.506 2.368 2.372zm.924 6.652c-1.822.563-3.885.12-5.328-1.318l-.18-.185 2.365-2.369.18.184c.771.768 2.018.768 2.787 0 .765-.765.769-2.01-.004-2.781l-.466-.465-2.365-2.37-2.502-2.503 2.37-2.369 2.499 2.505 2.367 2.37.464.464c1.365 1.36 1.846 3.278 1.411 5.021 1.56.224 2.759 1.56 2.759 3.18 0 1.784-1.439 3.21-3.209 3.21-1.545 0-2.851-1.096-3.135-2.565l-.013-.009zM6.975 9.461l2.508-2.505 2.37-2.369.462-.461C13.74 2.7 15.772 2.251 17.58 2.79c.212-1.561 1.555-2.775 3.179-2.775 1.772 0 3.211 1.437 3.211 3.209 0 1.631-1.216 2.978-2.79 3.186.519 1.799.068 3.816-1.35 5.234l-.182.184-2.369-2.369.184-.184c.769-.77.769-2.016 0-2.783-.766-.766-2.011-.768-2.781.003l-.462.461-2.37 2.369-2.505 2.502-2.37-2.366zm-2.653 2.647l-.461-.462C2.43 10.215 1.986 8.17 2.529 6.358 1.1 6.029.03 4.754.03 3.224.03 1.454 1.47.015 3.24.015c1.596 0 2.92 1.166 3.17 2.691 1.73-.405 3.626.065 4.979 1.415l.184.185-2.37 2.37-.183-.181c-.77-.765-2.016-.765-2.785 0-.771.781-.77 2.025-.005 2.79l.465.466 2.37 2.369 2.505 2.505-2.367 2.37-2.51-2.505-2.371-2.37v-.012z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://docs.joomla.org/Joomla:Brand_Identity_Elements\",hex:\"5091CD\"},jQuery:{title:\"jQuery\",slug:\"jquery\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>jQuery icon</title><path d=\"M1.534 5.874c-2.123 3.05-1.86 7.017-.237 10.256.037.079.078.154.118.229.023.052.049.1.077.149.013.028.031.057.047.083.026.052.054.102.081.152l.157.265c.029.049.057.097.09.146.055.094.12.187.177.281.026.039.05.078.079.117a6.36 6.36 0 0 0 .31.444c.078.107.156.211.24.315.027.038.057.076.085.114l.221.269c.027.031.054.067.083.099.098.118.202.233.306.349 0 .002.003.004.005.007a3.13 3.13 0 0 0 .424.44c.08.082.16.164.245.244l.101.097c.111.104.222.208.339.308.002 0 .003.002.005.003l.057.05c.102.089.205.178.31.26l.125.105c.085.068.173.133.26.2l.136.104c.093.07.192.139.287.207.035.025.07.05.106.073l.029.023.281.185.12.08c.147.094.293.183.438.271.042.021.084.044.123.068.108.062.22.125.329.183.06.034.122.063.184.094.075.042.153.083.233.125a.324.324 0 0 1 .056.023c.033.015.064.031.096.047.12.06.245.117.375.174.024.01.05.02.076.034.144.063.288.123.437.182.034.01.07.027.105.04.135.051.274.103.411.152l.05.018c.153.052.304.102.459.15.036.01.073.023.111.033.159.048.313.105.473.136 10.26 1.87 13.242-6.169 13.242-6.169-2.505 3.262-6.95 4.122-11.16 3.165-.156-.036-.312-.086-.469-.132a13.522 13.522 0 0 1-.567-.181l-.062-.024c-.136-.046-.267-.097-.4-.148a1.613 1.613 0 0 0-.11-.041c-.147-.059-.29-.12-.432-.183-.031-.01-.057-.024-.088-.036a23.41 23.41 0 0 1-.361-.17c-.037-.016-.07-.033-.106-.052-.094-.044-.188-.094-.28-.142a3.942 3.942 0 0 1-.187-.096c-.113-.06-.226-.125-.339-.187-.034-.024-.073-.044-.112-.066a15.902 15.902 0 0 1-.438-.269 2.104 2.104 0 0 1-.118-.079 6.002 6.002 0 0 1-.312-.206c-.035-.023-.067-.048-.103-.073a9.541 9.541 0 0 1-.294-.212c-.042-.034-.087-.066-.132-.1-.088-.069-.177-.135-.265-.208l-.118-.094a10.58 10.58 0 0 1-.334-.281.258.258 0 0 0-.037-.03l-.347-.316-.1-.094c-.082-.083-.166-.163-.25-.245l-.097-.1a9.07 9.07 0 0 1-.309-.323l-.015-.016c-.106-.116-.209-.234-.313-.354-.027-.031-.052-.064-.08-.097l-.226-.277a21.248 21.248 0 0 1-.34-.448C2.16 11.786 1.315 7.386 3.184 3.777M8.121 3.305c-1.539 2.209-1.452 5.163-.254 7.499a9.1 9.1 0 0 0 .677 1.132c.23.33.484.72.792.986.107.122.223.24.344.359l.09.09c.114.11.231.218.35.325l.015.013a9.855 9.855 0 0 0 .414.342c.034.023.063.05.096.073.14.108.281.212.427.315l.015.009c.062.045.128.086.198.13.028.018.06.042.09.06.106.068.21.132.317.197.017.007.032.016.048.023.09.055.188.108.282.157.033.02.065.035.099.054.067.033.133.068.197.102l.032.014c.135.066.273.128.408.19.034.013.063.024.092.038.111.048.224.094.335.137.05.017.097.037.144.052.102.038.209.073.31.108l.14.045c.146.045.294.104.448.129 7.92 1.313 9.754-4.787 9.754-4.787-1.651 2.376-4.846 3.508-8.251 2.624a8.03 8.03 0 0 1-.448-.13c-.048-.013-.09-.028-.136-.042-.104-.036-.211-.071-.312-.109l-.144-.054c-.112-.045-.226-.087-.335-.135-.034-.015-.065-.025-.091-.04-.14-.063-.281-.125-.417-.192l-.206-.107-.119-.06c-.092-.048-.177-.098-.265-.15a.62.62 0 0 1-.062-.034c-.106-.066-.216-.13-.317-.198-.034-.019-.065-.042-.097-.062l-.208-.136c-.144-.1-.285-.208-.427-.312-.032-.029-.063-.053-.094-.079-1.497-1.177-2.678-2.786-3.238-4.608-.59-1.894-.46-4.018.559-5.742M13.66 1.384c-.908 1.332-.995 2.986-.37 4.455.664 1.56 2.022 2.785 3.604 3.365.065.025.128.046.195.07l.088.027c.092.029.185.063.28.084 4.376.844 5.56-2.247 5.879-2.701-1.042 1.496-2.789 1.855-4.932 1.334a4.844 4.844 0 0 1-.516-.16 6.344 6.344 0 0 1-.617-.254 6.521 6.521 0 0 1-1.08-.66c-1.92-1.454-3.109-4.23-1.857-6.491\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://brand.jquery.org/logos/\",hex:\"0769AD\"},jsDelivr:{title:\"jsDelivr\",slug:\"jsdelivr\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>jsDelivr icon</title><path d=\"M11.851 0L.811 4.02l1.56 14.7L11.85 24l9.6-5.28 1.74-14.76zm.062 4.622a6.668 6.75 0 0 1 2.666.572 12.507 12.507 0 0 0-2.59 1.95c-.045-.02-.092-.031-.138-.045a1.181 1.181 0 0 0-.346-.056c-.071 0-.141.01-.21.021a8.91 8.91 0 0 1-.615-2.318 6.668 6.75 0 0 1 1.171-.122 6.668 6.75 0 0 1 .062-.002zm-1.99.312a9.763 9.763 0 0 0 .69 2.504 1.213 1.213 0 0 0-.328.825 1.202 1.202 0 0 0 .18.63c-.937 1.294-1.656 2.803-1.905 4.31-.01.056-.013.11-.02.166-.282.09-.515.284-.656.54-.987-.333-1.885-.968-2.615-2.022a6.668 6.75 0 0 1-.026-.515 6.668 6.75 0 0 1 4.68-6.438zm5.507.709a6.668 6.75 0 0 1 2.53 2.9c-.377.953-1.049 1.892-1.893 2.727a1.242 1.242 0 0 0-.644-.184 1.243 1.243 0 0 0-.768.27c-.462-.354-.91-.737-1.318-1.168-.333-.35-.637-.73-.921-1.123.19-.215.31-.494.31-.802 0-.212-.061-.41-.159-.586 1.058-1.008 2.112-1.67 2.863-2.034zm-3.925 1.982a.624.624 0 0 1 .346.114.624.624 0 0 1 .292.524.624.624 0 0 1-.292.524.626.626 0 0 1-.346.113.634.634 0 0 1-.638-.637c0-.355.283-.638.638-.638zm-.441 1.771a1.205 1.205 0 0 0 .675.062c.036.05.075.097.112.148a11.438 11.438 0 0 0 .921 1.119 12.103 12.103 0 0 0 1.446 1.277c-.032.11-.054.224-.054.342a1.236 1.236 0 0 0 .066.38 9.91 9.91 0 0 1-2.118 1.042c-.087.029-.173.052-.261.078a7.735 7.735 0 0 1-1.87.332 1.15 1.15 0 0 0-.66-.773c.004-.024.005-.049.01-.073.219-1.333.873-2.73 1.733-3.934zm7.272.19a6.668 6.75 0 0 1 .245 1.786 6.668 6.75 0 0 1-.259 1.856 9.993 9.993 0 0 1-1.666-.63 1.243 1.243 0 0 0-.065-.713 9.434 9.434 0 0 0 1.745-2.3zm-2.913 2.101c.367 0 .657.291.657.658s-.291.657-.657.657c-.367 0-.658-.29-.658-.657s.29-.658.658-.658zm.837 1.59a10.79 10.79 0 0 0 1.802.688 6.668 6.75 0 0 1-6.149 4.157 6.668 6.75 0 0 1-.062-.004 6.668 6.75 0 0 1-.042 0c-.087-.042-.168-.08-.266-.129-.312-.154-.667-.352-.846-.5a3.796 3.796 0 0 1-1.294-2.03c.21-.111.38-.284.487-.495a8.428 8.428 0 0 0 1.96-.306 9.11 9.11 0 0 0 .513-.154 11.083 11.083 0 0 0 2.341-1.13c.205.143.452.23.719.23a1.248 1.248 0 0 0 .837-.328zm-10.707.116a5.761 5.761 0 0 0 2.212 1.298 1.146 1.146 0 0 0 .857.87 4.602 4.602 0 0 0 1.24 2.222 6.668 6.75 0 0 1-4.31-4.39zm3.327.464c.331 0 .595.263.595.596s-.264.595-.595.595a.59.59 0 0 1-.596-.595.591.591 0 0 1 .596-.596z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/jsdelivr/www.jsdelivr.com/blob/eff02f3a8879cf7c7296840584e1293fe04e3a76/src/public/img/logo_horizontal.svg\",hex:\"E84D3D\"},JSFiddle:{title:\"JSFiddle\",slug:\"jsfiddle\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>JSFiddle icon</title><path d=\"M21.078 11.251c.01-.141.021-.278.021-.419 0-3.883-3.193-7.031-7.135-7.031-2.738-.01-5.24 1.548-6.441 4.009-.575-.442-1.28-.681-2.007-.681-1.82 0-3.295 1.45-3.295 3.24 0 .338.053.663.15.967C.908 12.181.004 13.739 0 15.429c0 2.602 2.124 4.717 4.759 4.755h14.25c.09 0 .18.015.27.015 2.609 0 4.723-2.083 4.723-4.662-.012-1.886-1.16-3.579-2.91-4.286h-.014zM6.44 16.602c-.479-.434-.779-.959-.898-1.58-.041-.216-.061-.434-.061-.652 0-.885.322-1.613.967-2.188.645-.576 1.462-.864 2.455-.864 1.02 0 1.979.383 2.831 1.146.21.189.417.404.614.641l1.091 1.284c.188.259.389.48.6.671.563.504 1.17.756 1.686.756.438 0 .801-.135 1.094-.402.248-.229.402-.539.434-.875l.008-.148c.002-.141-.021-.281-.064-.416-.227-.619-.824-1.023-1.484-1.001-.543 0-1.082.183-1.672.755l-.967-1.139-.105-.129c.855-.829 1.695-1.139 2.834-1.139 1.004 0 1.828.284 2.441.854l.016.015c.646.569.959 1.305.959 2.208 0 .21-.016.435-.059.63-.121.614-.42 1.124-.885 1.559-.477.435-1.07.717-1.709.81-.225.03-.449.045-.705.045-1.033 0-2.008-.375-2.832-1.124-.234-.212-.449-.443-.645-.689l-1.094-1.275c-.171-.244-.366-.471-.585-.674-.555-.51-1.17-.75-1.709-.75-.156 0-.313.021-.465.061-.235.06-.452.178-.629.345-.279.259-.438.623-.436 1.005 0 .389.135.719.42.988l.016.016c.3.27.675.404 1.109.404.555 0 1.094-.194 1.678-.764l.96 1.124.104.119c-.869.84-1.708 1.154-2.803 1.154-1.004 0-1.828-.284-2.458-.854l-.052.073z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://doc.jsfiddle.net/meta/downloads.html\",hex:\"4679A4\"},JSON:{title:\"JSON\",slug:\"json\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>JSON icon</title><path d=\"M12.043 23.968c.479-.004.953-.029 1.426-.094 1.08-.138 2.143-.433 3.146-.863 1.409-.602 2.698-1.471 3.793-2.543 1.003-.989 1.842-2.151 2.44-3.427.509-1.097.869-2.274 1.02-3.476.149-1.16.135-2.346-.045-3.499-.149-.96-.419-1.896-.793-2.788-.24-.561-.525-1.101-.854-1.617-1.168-1.837-2.861-3.314-4.81-4.301-.693-.355-1.423-.645-2.172-.869h-.005c.119.063.24.132.345.201.12.074.239.146.351.225.569.385 1.094.827 1.559 1.33 1.063 1.145 1.797 2.548 2.218 4.041.284.982.434 1.998.495 3.017.044.743.044 1.491-.047 2.229-.149 1.27-.554 2.51-1.228 3.596-.495.803-1.14 1.519-1.903 2.084-1.244.928-2.877 1.482-4.436 1.114-.254-.061-.51-.146-.748-.258-.271-.124-.54-.277-.779-.449-.465-.311-.885-.685-1.244-1.106-.435-.52-.794-1.111-1.049-1.747-.314-.806-.479-1.672-.494-2.54-.03-1.273.225-2.553.854-3.67.42-.744.989-1.396 1.663-1.918.225-.178.464-.333.704-.479l.016-.007c-.466-.105-.96-.151-1.441-.12-.418.029-.823.105-1.228.239-.359.12-.704.271-1.019.45-.255.149-.508.315-.733.495-.211.18-.42.359-.615.555-1.123 1.153-1.768 2.682-2.022 4.256-.15.973-.15 1.961-.091 2.951.105 1.394.391 2.786.945 4.061.344.794.793 1.527 1.348 2.173.854.987 1.934 1.753 3.132 2.231.675.271 1.394.465 2.113.54.074.015.149.015.209.015l-.021-.032zm-2.934-.398c-.164-.07-.314-.149-.45-.228-.149-.083-.3-.168-.449-.259-.585-.362-1.108-.787-1.589-1.275-1.094-1.138-1.827-2.567-2.247-4.081-.284-1.034-.435-2.102-.495-3.172-.044-.703-.029-1.393.046-2.082.135-1.257.495-2.501 1.124-3.58.449-.794 1.063-1.498 1.783-2.053.494-.374 1.049-.69 1.633-.9.824-.299 1.708-.389 2.563-.27.33.045.658.121.959.225.029 0 .029 0 .045.03.015.015.045.015.06.03.045.016.104.045.165.074.239.12.479.271.704.42.899.629 1.633 1.498 2.097 2.502.42.914.615 1.934.631 2.938.014 1.079-.18 2.157-.645 3.146-.555 1.184-1.498 2.188-2.638 2.832.09.03.18.045.271.075.225.044.449.074.688.074 1.468.045 2.892-.659 3.94-1.647.195-.18.375-.375.54-.585.225-.27.435-.539.614-.823.239-.375.435-.75.614-1.154.226-.539.404-1.094.509-1.664.196-1.004.211-2.022.149-3.026-.135-2.022-.673-4.045-1.842-5.724-.18-.254-.359-.494-.555-.719-.329-.375-.689-.719-1.063-1.034-.42-.345-.885-.659-1.363-.915-.493-.223-1.078-.447-1.692-.598l-.3-.06c-.209-.03-.42-.044-.634-.06-.325-.015-.669-.01-1.015.016-.704.045-1.412.16-2.112.337-3.356.866-6.292 3.205-7.855 6.308C.799 7.657.445 8.714.238 9.8c-.239 1.243-.27 2.523-.104 3.775.12 1.02.374 2.023.778 2.977.227.57.511 1.124.825 1.648 1.094 1.783 2.683 3.236 4.51 4.24.688.391 1.408.69 2.157.945.226.074.45.149.689.209l.016-.024z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://commons.wikimedia.org/wiki/File:JSON_vector_logo.svg\",hex:\"000000\"},Jupyter:{title:\"Jupyter\",slug:\"jupyter\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Jupyter icon</title><path d=\"M12.2 18.1c-3.8 0-7.2-1.4-9-3.4.7 1.8 1.9 3.4 3.5 4.5s3.5 1.7 5.5 1.7 3.9-.6 5.5-1.7 2.8-2.7 3.5-4.5c-1.8 2-5.2 3.4-9 3.4zM12.2 4.9c3.8 0 7.2 1.4 9 3.4-.7-1.8-1.9-3.4-3.5-4.5C16 2.6 14.1 2 12.2 2c-2 0-3.9.6-5.5 1.7-1.6 1.2-2.8 2.7-3.5 4.6 1.8-2.1 5.1-3.4 9-3.4zM19.2.10000000000000009A1.4 1.4 0 1 0 19.2 2.9 1.4 1.4 0 1 0 19.2.10000000000000009zM5.1 20.3A1.8 1.8 0 1 0 5.1 23.900000000000002 1.8 1.8 0 1 0 5.1 20.3zM3.6 2.3A1 1 0 1 0 3.6 4.3 1 1 0 1 0 3.6 2.3z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/jupyter/design\",hex:\"F37626\"},JustGiving:{title:\"JustGiving\",slug:\"justgiving\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>JustGiving icon</title><path d=\"M23.716 9.925H15.33l-4.898 4.919h6.727c-.885 1.975-2.865 3.061-5.16 3.061-3.104 0-5.639-2.67-5.639-5.771C6.36 9.02 8.896 6.42 12 6.42c1.134 0 2.189.295 3.061.871l4.542-4.561C17.541 1.031 14.893 0 12 0 5.37 0 0 5.367 0 12c0 6.623 5.37 12 12 12s12-5.115 12-11.738c0-.896-.103-1.35-.284-2.337z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://justgiving.com\",hex:\"AD29B6\"},Kaggle:{title:\"Kaggle\",slug:\"kaggle\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Kaggle icon</title><path d=\"M18.825 23.859c-.022.092-.117.141-.281.141h-3.139c-.187 0-.351-.082-.492-.248l-5.178-6.589-1.448 1.374v5.111c0 .235-.117.352-.351.352H5.505c-.236 0-.354-.117-.354-.352V.353c0-.233.118-.353.354-.353h2.431c.234 0 .351.12.351.353v14.343l6.203-6.272c.165-.165.33-.246.495-.246h3.239c.144 0 .236.06.285.18.046.149.034.255-.036.315l-6.555 6.344 6.836 8.507c.095.104.117.208.07.358\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.kaggle.com/contact\",hex:\"20BEFF\"},KaiOS:{title:\"KaiOS\",slug:\"kaios\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>KaiOS icon</title><path d=\"M4.47 0a2.81 2.81 0 0 0-2.84 2.78v18.43A2.8 2.8 0 0 0 4.47 24a2.8 2.8 0 0 0 2.85-2.78V2.78A2.83 2.83 0 0 0 4.47 0zm9.4 8.54a2.8 2.8 0 0 0-3.89-.66 2.68 2.68 0 0 0-.68 3.8l8 11.15a2.81 2.81 0 0 0 3.88.66 2.68 2.68 0 0 0 .74-3.72l-.06-.09-7.98-11.14zm3.65-1.18a3.71 3.71 0 0 0 3.74-3.67A3.71 3.71 0 0 0 17.52.02a3.71 3.71 0 0 0-3.75 3.67 3.71 3.71 0 0 0 3.75 3.67z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.dropbox.com/sh/2qihtgrzllws8ki/AABmo9X1KMT6lHnvh4Em7dpWa?dl=0\",hex:\"6F02B5\"},Kaspersky:{title:\"Kaspersky\",slug:\"kaspersky\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Kaspersky icon</title><path d=\"M10.812 12.01c0 .909-.555 1.34-1.25 1.34H9.14v-.55h.392c.42 0 .7-.224.7-.795 0-.563-.265-.842-.712-.842-.43 0-.736.264-.736.83v2.284H8.2V10.69h.579V11h.08a.94.94 0 0 1 .777-.377c.641 0 1.176.466 1.176 1.387zm-3.804-.237l-.384-.039c-.303-.027-.462-.109-.462-.287 0-.21.205-.33.497-.33.302 0 .497.144.512.345h.555c-.023-.52-.423-.839-1.063-.839-.645 0-1.08.342-1.08.843 0 .42.264.691.866.75l.392.038c.237.023.396.07.396.299 0 .206-.147.354-.54.354-.36 0-.539-.164-.601-.385h-.601c.057.5.48.89 1.202.89.68 0 1.119-.358 1.119-.89-.004-.461-.31-.702-.808-.75zm6.044.753c-.089.21-.306.366-.617.366-.422 0-.737-.277-.737-.871 0-.566.29-.882.745-.882.404 0 .633.24.656.606h-1.04v.42h1.611v-.275c0-.766-.508-1.263-1.23-1.263-.672 0-1.317.46-1.317 1.394 0 .936.645 1.394 1.316 1.394.613 0 1.056-.38 1.192-.89zm-9.126-1.903c-.633 0-1.107.331-1.165.839h.621c.043-.186.213-.326.54-.326.419 0 .555.22.555.49v.908c-.237.271-.513.396-.788.396-.288 0-.485-.14-.485-.384 0-.238.155-.385.45-.385h.461v-.416h-.48c-.662 0-1.033.331-1.033.839 0 .474.356.831.946.831.33 0 .621-.132.84-.29h.08v.224h.579v-1.774c.016-.656-.43-.952-1.122-.952zM0 13.348h.579V9.712H0zm2.43-2.658h-.706L.883 11.8v.346l.864 1.202h.718L1.45 11.971zm20.93 0l-.473 1.051c-.117.253-.225.501-.26.669h-.082c-.035-.168-.148-.408-.264-.66l-.474-1.06h-.641l1.115 2.388-.551 1.202h.617L24 10.69zm-2.321 0h-.707l-.842 1.107v.345l.865 1.203h.719l-1.014-1.378zm-3.627 1.083l-.383-.039c-.304-.027-.462-.109-.462-.287 0-.21.205-.33.497-.33.302 0 .496.144.511.346h.555c-.023-.521-.422-.84-1.063-.84-.645 0-1.08.342-1.08.843 0 .42.265.691.866.75l.393.038c.236.023.396.07.396.299 0 .206-.148.354-.54.354-.361 0-.54-.164-.601-.385h-.603c.059.5.481.89 1.204.89.68 0 1.118-.358 1.118-.89 0-.461-.31-.702-.808-.75zm1.196 1.576h.578V9.712h-.578zM14.788 11h-.082v-.31h-.578v2.66h.578v-1.391c0-.473.218-.749.653-.749h.365v-.587h-.213c-.4 0-.571.153-.723.377z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.kaspersky.com\",hex:\"009982\"},Kentico:{title:\"Kentico\",slug:\"kentico\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Kentico icon</title><path d=\"M0 0v25h25V0H0zm14.5 8.8l3-3s2.2 1.3.9 2.6l-2.1 2.1c-1.2 1.1-2.9-.6-1.8-1.7zm-.8-3.3v3c0 1.5-2.5 1.5-2.5 0V4.3s2.5-.6 2.5 1.2zM8.4 6.7l2.1 2.1c1.1 1.1-.6 2.8-1.7 1.7l-3-3s1.3-2.1 2.6-.8zm-2.9 4.6h3c1.5 0 1.5 2.5 0 2.5H4.3c0-.1-.6-2.5 1.2-2.5zm5 4.9l-3 3s-2.2-1.3-.9-2.6l2.1-2.1c1.2-1.1 2.9.6 1.8 1.7zm3.2 4.5s-2.5.6-2.5-1.2v-3c0-1.5 2.5-1.5 2.5 0v4.2zm-1.2-6.4c-1 0-1.8-.8-1.8-1.8s.8-1.8 1.8-1.8 1.8.8 1.8 1.8-.8 1.8-1.8 1.8zm4.1 4l-2.1-2.1c-1.1-1.1.6-2.8 1.7-1.7l3 3s-1.3 2.1-2.6.8zm2.9-4.6h-3c-1.5 0-1.5-2.5 0-2.5h4.2c0 .1.6 2.5-1.2 2.5z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://brand.kentico.com\",hex:\"F05A22\"},Keras:{title:\"Keras\",slug:\"keras\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Keras icon</title><path d=\"M24 0H0v24h24V0zM8.45 5.16l.2.17v6.24l6.46-6.45h1.96l.2.4-5.14 5.1 5.47 7.94-.2.3h-1.94l-4.65-6.88-2.16 2.08v4.6l-.19.2H7l-.2-.2V5.33l.17-.17h1.48z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://keras.io/\",hex:\"D00000\"},Keybase:{title:\"Keybase\",slug:\"keybase\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Keybase icon</title><path d=\"M10.446 21.371c0 .528-.428.953-.954.953-.525 0-.954-.425-.954-.953 0-.526.428-.954.953-.954.524 0 .951.431.951.955m5.922-.001c0 .528-.428.953-.955.953-.526 0-.952-.425-.952-.953 0-.526.423-.954.949-.954s.954.431.954.955M20.904 12.213l-.156-.204c-.046-.06-.096-.116-.143-.175-.045-.061-.094-.113-.141-.169-.104-.12-.209-.239-.319-.359l-.076-.08-.091-.099-.135-.131c-.015-.018-.032-.034-.05-.053-1.16-1.139-2.505-1.986-3.955-2.504l-.23-.078c.012-.027.024-.055.035-.083.41-1.064.367-2.223-.12-3.255-.491-1.035-1.356-1.8-2.438-2.16-.656-.216-1.23-.319-1.711-.305-.033-.105-.1-.577.496-1.848L10.663 0l-.287.399c-.33.455-.648.895-.945 1.328-.328-.345-.766-.552-1.245-.58L6.79 1.061h-.012c-.033-.003-.07-.003-.104-.003-.99 0-1.81.771-1.87 1.755l-.088 1.402v.003c-.061 1.029.727 1.915 1.755 1.979l1.002.061c-.065.84.073 1.62.405 2.306-1.346.562-2.586 1.401-3.66 2.484C.913 14.391.913 18.051.913 20.994v1.775l1.305-1.387c.266.93.652 1.807 1.145 2.615H5.06c-.833-1.114-1.419-2.426-1.68-3.848l1.913-2.03-.985 3.091 1.74-1.268c3.075-2.234 6.744-2.75 10.91-1.529 1.805.532 3.56.039 4.473-1.257l.104-.165c.091.498.141.998.141 1.496 0 1.563-.255 3.687-1.38 5.512h1.611c.776-1.563 1.181-3.432 1.181-5.512-.001-2.199-.786-4.421-2.184-6.274zM8.894 6.191c.123-1.002.578-1.949 1.23-2.97.025.05.054.097.084.144.264.398.713.625 1.199.605.217-.008.605.025 1.233.232.714.236 1.286.744 1.608 1.425s.349 1.442.079 2.149c-.173.445-.454.82-.806 1.109l-.408-.502-.002-.003c-.279-.341-.694-.535-1.134-.535-.335 0-.664.117-.925.33-.334.27-.514.66-.534 1.058-1.2-.541-1.8-1.643-1.628-3.041l.004-.001zm4.304 5.11l-.519.425c-.046.036-.095.053-.146.053-.066 0-.133-.03-.177-.085l-.111-.135c-.083-.1-.067-.25.034-.334l.51-.42-1.055-1.299c-.109-.133-.091-.33.044-.436.058-.048.126-.072.194-.072.091 0 .181.038.24.113l2.963 3.645c.109.135.09.33-.042.436-.039.029-.082.053-.126.063-.023.006-.045.009-.07.009-.09 0-.178-.04-.24-.113l-.295-.365-1.045.854c-.046.037-.1.055-.154.055-.068 0-.139-.03-.186-.09l-.477-.579c-.082-.102-.068-.252.035-.336l1.051-.857-.426-.533-.002.001zM7.753 4.866l-1.196-.075c-.255-.015-.45-.235-.435-.488l.09-1.401c.014-.245.216-.436.461-.436h.024l1.401.091c.123.006.236.06.317.152.083.094.123.21.116.336l-.007.101c-.32.567-.585 1.134-.773 1.72h.002zm12.524 11.481c-.565.805-1.687 1.081-2.924.718-3.886-1.141-7.396-.903-10.468.701l1.636-5.123-5.291 5.609c.099-3.762 2.453-6.966 5.758-8.311.471.373 1.034.66 1.673.841.16.044.322.074.48.102-.183.458-.119.997.21 1.407l.075.09c-.172.45-.105.975.221 1.374l.475.582c.266.325.659.513 1.079.513.321 0 .635-.111.886-.314l.285-.232c.174.074.367.113.566.113.113 0 .222-.01.33-.035.218-.05.424-.15.598-.291.623-.51.72-1.435.209-2.06l-1.67-2.056c.145-.117.281-.244.408-.381.135.037.271.078.4.12.266.097.533.198.795.315 1.005.445 1.954 1.1 2.771 1.897.029.03.059.055.085.083l.17.175c.038.039.076.079.111.12.079.085.16.175.239.267l.126.15c.045.053.086.104.13.16l.114.15c.04.051.079.102.117.154.838 1.149.987 2.329.404 3.157v.005zM7.719 4.115l-.835-.051.053-.835.834.051-.052.835z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/keybase/client/tree/master/media/logos\",hex:\"33A0FF\"},KeyCDN:{title:\"KeyCDN\",slug:\"keycdn\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>KeyCDN icon</title><path d=\"M2.305 19.065c.226.01.454.04.667.12v-.003l.032.012 2.81-2.74.102.137c.146.2.3.38.464.56l.06.068c.043.043.077.086.12.13l.326.325.077.07.07.06c1.305 1.107 2.937 1.734 4.655 1.777 1.417.034 2.8-.326 4.01-1.04l.216.224c.25.266.507.533.756.8-1.495.96-3.23 1.442-5.017 1.4-2.01-.053-3.926-.774-5.463-2.063l.01-.016-1.803 1.777c.067.21.093.43.096.65 0 1.242-1.006 2.248-2.247 2.248S0 22.552 0 21.31c0-1.24 1.005-2.246 2.246-2.246h.058zM19.48 7.477c.885 1.452 1.323 3.127 1.28 4.828-.05 2.08-.833 4.063-2.208 5.618l.01.01 1.107 1.176c.446-.06.892.094 1.202.42.524.558.507 1.435-.052 1.967-.558.524-1.435.507-1.967-.052-.31-.326-.438-.782-.352-1.22-.514-.55-1.425-1.52-1.95-2.07l-.11-.12.128-.103c.335-.266.644-.558.928-.885 1.177-1.323 1.838-3.006 1.88-4.776.035-1.34-.283-2.653-.927-3.813l1.03-.98zM3.828 2.226c.395-.006.765.15 1.04.432.31.326.44.782.353 1.22L7.35 6.11l-.128.104c-.335.266-.644.558-.928.885-1.177 1.322-1.838 3.005-1.89 4.775-.034 1.34.283 2.654.928 3.822l-1.022.996c-.893-1.46-1.34-3.135-1.288-4.853.044-2.068.85-4.066 2.204-5.622L4.053 4.994c-.447.06-.893-.095-1.203-.42-.524-.56-.507-1.436.052-1.968.217-.204.497-.335.794-.37.044-.006.09-.007.133-.01zM21.753.442C22.993.442 24 1.448 24 2.69s-1.006 2.246-2.247 2.246c-.24.003-.474-.04-.7-.112l-.002.002-.033-.012-3.05 2.895-.102-.138c-.163-.215-.344-.43-.533-.627l-.034-.043-.266-.266-.12-.103-.077-.07-.06-.05-.077-.07c-1.297-1.09-2.92-1.71-4.62-1.752-1.418-.033-2.8.32-4.004 1.04l-.98-1.022c1.496-.962 3.23-1.443 5.017-1.4 2.01.052 3.927.773 5.464 2.07h.017l2.02-1.917c-.07-.216-.1-.443-.103-.67 0-1.242 1.006-2.248 2.247-2.248zM11.96 5.458c.254 0 .507.02.76.05 3.624.455 6.192 3.762 5.746 7.387-.455 3.625-3.762 6.193-7.387 5.747-3.626-.455-6.194-3.762-5.748-7.387.432-3.363 3.258-5.785 6.628-5.797zm-.1 2.84c-1.466.116-2.528 1.226-2.566 2.7.027 1.053.565 1.94 1.505 2.425l-.512 2.4h3.423l-.51-2.4c.935-.507 1.49-1.346 1.505-2.423-.02-1.522-1.198-2.668-2.706-2.706l-.14.004zm.052-.016h-.01H11.912z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.keycdn.com/logos\",hex:\"3686BE\"},\"Khan Academy\":{title:\"Khan Academy\",slug:\"khanacademy\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Khan Academy icon</title><path d=\"M21.724 4.973L13.418.328a3.214 3.214 0 0 0-2.828 0L2.276 4.973A3.05 3.05 0 0 0 .862 7.371v9.256a3.05 3.05 0 0 0 1.414 2.4l8.306 4.645a3.214 3.214 0 0 0 2.828 0l8.314-4.645a3.05 3.05 0 0 0 1.414-2.4V7.373a3.05 3.05 0 0 0-1.414-2.4zM12 4.921a2.571 2.571 0 1 1 .001 5.143A2.571 2.571 0 0 1 12 4.92zm3.094 13.627a9.119 9.119 0 0 1-3.103.549 8.972 8.972 0 0 1-3.076-.55 8.493 8.493 0 0 1-5.486-7.987v-.857c4.646.017 8.074 3.823 8.074 8.51v.198h.926v-.197c0-4.688 3.445-8.51 8.056-8.51.026.29.043.582.086.856a8.502 8.502 0 0 1-5.477 7.988z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://khanacademy.zendesk.com/hc/en-us/articles/202483630-Press-room\",hex:\"14BF96\"},Kibana:{title:\"Kibana\",slug:\"kibana\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Kibana icon</title><path d=\"M21.04 23.99H4.18l9.88-11.86c4.23 2.76 6.98 7.04 6.98 11.86zm0-23.95H3.08v21.55z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.elastic.co/brand\",hex:\"005571\"},Kickstarter:{title:\"Kickstarter\",slug:\"kickstarter\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Kickstarter icon</title><path d=\"M9.604 8.18l4.4-6.38C14.838.6 15.91 0 17.231 0c1.072 0 2.002.381 2.789 1.144.783.765 1.176 1.675 1.176 2.738 0 .784-.207 1.479-.624 2.079l-3.967 5.769 4.853 6.153c.484.612.727 1.33.727 2.15 0 1.086-.381 2.018-1.145 2.798-.762.779-1.686 1.169-2.771 1.169-1.189 0-2.097-.387-2.721-1.16l-5.943-7.417v4.089c0 1.168-.202 2.074-.607 2.722C8.261 23.411 7.195 24 5.785 24c-1.282 0-2.276-.436-2.979-1.299-.66-.799-.99-1.856-.99-3.172V4.365c0-1.245.336-2.274 1.004-3.083C3.518.428 4.488 0 5.726 0c1.179 0 2.16.428 2.946 1.282.438.475.715.953.831 1.44.07.3.105.858.105 1.68V8.18h-.004z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.kickstarter.com/help/brand_assets\",hex:\"2BDE73\"},Kik:{title:\"Kik\",slug:\"kik\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Kik icon</title><path d=\"M11.482 16.752c-.01.688-.56 1.242-1.238 1.242-.689 0-1.23-.541-1.244-1.23h-.016v-6.243H9v-.029c0-.693.556-1.256 1.237-1.256s1.236.563 1.236 1.258v.045h.016v6.225h-.016l.009-.012zm11.137-4.889c.75 0 1.381.618 1.381 1.377 0 .76-.631 1.375-1.381 1.375-.766 0-1.395-.615-1.395-1.379 0-.766.615-1.381 1.379-1.381l.016.008zm-2.084 4.186c.121.195.193.432.193.686 0 .703-.553 1.26-1.244 1.26-.463 0-.869-.256-1.08-.631l-2.053-2.746-.631.586v1.635h-.014c-.039.652-.57 1.168-1.225 1.168-.674 0-1.221-.553-1.221-1.238v-.025h-.016v-9.45h.027v-.047c0-.69.551-1.253 1.23-1.253.674 0 1.225.562 1.225 1.253v.07h.016l.01 4.597 2.311-2.261c.229-.255.559-.405.928-.405.689 0 1.248.57 1.248 1.26 0 .346-.133.646-.344.871l.012.015-1.621 1.605 2.281 3.061-.016.016-.016-.027zm-13.246 0c.12.195.195.432.195.686 0 .703-.555 1.26-1.244 1.26-.466 0-.871-.256-1.081-.631l-2.054-2.746-.63.586v1.631H2.46c-.036.654-.57 1.17-1.221 1.17-.676 0-1.225-.555-1.225-1.238v-.027H0V7.29h.031c-.004-.015-.004-.029-.004-.044 0-.69.551-1.252 1.23-1.252.675 0 1.225.559 1.225 1.25v.07h.016l.01 4.6 2.311-2.261c.23-.255.562-.405.931-.405.687 0 1.245.57 1.245 1.26 0 .33-.131.646-.346.871l.016.015-1.627 1.605 2.271 3.061-.016.016-.004-.027z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://www.kik.com/press\",hex:\"82BC23\"},Kirby:{title:\"Kirby\",slug:\"kirby\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Kirby icon</title><path d=\"M12 0L1.428 6v12L12 24l10.573-6V6L12 0zm4.709 12.255l-2.963 1.598v.219h2.965v2.325H7.29v-2.312h2.955v-.225l-2.963-1.605V9.39L12 11.933l4.715-2.545v2.865l-.006.002z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://getkirby.com/assets/images/logo.svg\",hex:\"FF0100\"},Klout:{title:\"Klout\",slug:\"klout\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Klout icon</title><path d=\"M0 2.673v14.72h16.17L24 21.327V2.673H0zm9.827 8.42h-1.17l-2.88 4.054H2.35l3.94-5.265-3.638-5.07h3.336l2.66 3.885h1.18v2.397zm8.407 4.053l-2.88-4.053h-1.966v4.053h-2.73V4.812h2.734v3.885h1.965l2.658-3.885h3.33l-3.636 5.07 3.94 5.265h-3.416z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://klout.com/s/developers/styleguide\",hex:\"E44600\"},Known:{title:\"Known\",slug:\"known\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Known icon</title><path d=\"M24 12c0 6.6-5.4 12-12 12S0 18.6 0 12 5.4 0 12 0s12 5.4 12 12zM12 1.8C6.3 1.8 1.8 6.3 1.8 12S6.3 22.2 12 22.2 22.2 17.7 22.2 12 17.7 1.8 12 1.8zm5.6 5.4l-.2.2c.1-.1.3-.2.4-.2h-.2zm.2 0h.5V5.3h-5.5v1.9h.9c.2 0 .3.1.3.3 0 .1 0 .2-.1.2l-3.8 3.8H10c-.1 0-.2-.1-.2-.2V7.9c0-.4.3-.7.7-.7h.8V5.3H5.4v1.9h.7c.4 0 .7.3.7.7v8.4c0 .4-.3.7-.7.7h-.7v2h5.9v-2h-.8c-.4 0-.7-.3-.7-.7v-1.4c0-.1 0-.2.1-.3l1.5-1.5s.1-.1.2-.1.2 0 .2.1l2.1 3.3v.2c0 .2-.1.3-.3.3h-.9v2H19v-2h-.7c-.2 0-.4-.1-.5-.3v-.1L14.1 11c0-.1-.1-.1-.1-.2s0-.2.1-.2l3.2-3.2c.2-.2.3-.2.5-.2z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://withknown.com/img/logo_k.png\",hex:\"333333\"},Kodi:{title:\"Kodi\",slug:\"kodi\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Kodi icon</title><path d=\"M12.03.047c-.226 0-.452.107-.669.324-.922.922-1.842 1.845-2.763 2.768-.233.233-.455.48-.703.695-.31.267-.405.583-.399.988.02 1.399.008 2.799.008 4.198 0 1.453-.002 2.907 0 4.36 0 .11.002.223.03.327.087.337.303.393.546.15 1.31-1.31 2.618-2.622 3.928-3.933l4.449-4.453c.43-.431.43-.905 0-1.336L12.697.37c-.216-.217-.442-.324-.668-.324zm7.224 7.23c-.223 0-.445.104-.65.309L14.82 11.37c-.428.429-.427.895 0 1.322l3.76 3.766c.44.44.908.44 1.346.002 1.215-1.216 2.427-2.433 3.644-3.647.182-.18.353-.364.43-.615v-.33c-.077-.251-.246-.436-.428-.617-1.224-1.22-2.443-2.445-3.666-3.668-.205-.205-.429-.307-.652-.307zM4.18 7.611c-.086.014-.145.094-.207.157L.209 11.572c-.28.284-.278.677.004.96l2.043 2.046c.59.59 1.177 1.182 1.767 1.772.169.168.33.139.416-.084.044-.114.062-.242.063-.364.004-1.283.004-2.567.004-3.851h-.002V8.184c0-.085-.01-.169-.022-.252-.019-.135-.072-.258-.207-.309a.186.186 0 0 0-.095-.012zm7.908 6.838c-.224 0-.447.106-.656.315L7.66 18.537c-.433.434-.433.899.002 1.334 1.215 1.216 2.43 2.43 3.643 3.649.18.18.361.354.611.433h.33c.244-.069.423-.226.598-.402 1.222-1.23 2.45-2.453 3.676-3.68.43-.43.427-.905-.004-1.338l-3.772-3.773c-.208-.208-.432-.311-.656-.31z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://kodi.tv/\",hex:\"17B2E7\"},Koding:{title:\"Koding\",slug:\"koding\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Koding icon</title><path d=\"M.8 0H23v6H1V0zm0 9H18v6H.7V9zm0 9H23v6H1v-6z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://koding.com/About\",hex:\"00B057\"},Kotlin:{title:\"Kotlin\",slug:\"kotlin\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Kotlin icon</title><path d=\"M1.3 24l11.3-11.5L24 24zM0 0h12L0 12.5zM13.4 0L0 14v10l12-12L24 0z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://resources.jetbrains.com/storage/products/kotlin/docs/kotlin_logos.zip\",hex:\"0095D5\"},\"Ko-fi\":{title:\"Ko-fi\",slug:\"ko-fi\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Ko-fi icon</title><path d=\"M23.881 8.948c-.773-4.085-4.859-4.593-4.859-4.593H.723c-.604 0-.679.798-.679.798s-.082 7.324-.022 11.822c.164 2.424 2.586 2.672 2.586 2.672s8.267-.023 11.966-.049c2.438-.426 2.683-2.566 2.658-3.734 4.352.24 7.422-2.831 6.649-6.916zm-11.062 3.511c-1.246 1.453-4.011 3.976-4.011 3.976s-.121.119-.31.023c-.076-.057-.108-.09-.108-.09-.443-.441-3.368-3.049-4.034-3.954-.709-.965-1.041-2.7-.091-3.71.951-1.01 3.005-1.086 4.363.407 0 0 1.565-1.782 3.468-.963 1.904.82 1.832 3.011.723 4.311zm6.173.478c-.928.116-1.682.028-1.682.028V7.284h1.77s1.971.551 1.971 2.638c0 1.913-.985 2.667-2.059 3.015z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://ko-fi.com/home/about\",hex:\"F16061\"},Krita:{title:\"Krita\",slug:\"krita\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Krita icon</title><path d=\"M.652.76a.625.625 0 00-.5.246c-.352.448-.035.898.362 1.262.206.189 1.77 1.794 3.428 3.527a11.054 11.054 0 011.815-1.983C3.667 2.515 1.694 1.266 1.461 1.1 1.201.914.917.762.652.76zm5.105 3.052c1.848 1.148 3.786 2.332 4.693 2.84 1.469.821 3.758 2.684 4.092 4.434.535.466 2.182 1.916 2.596 2.413.698-.211 1.518.133 2.06 1.12.866 1.583.227 3.747-1.968 4.988a5.42 5.42 0 01-.296.267l.296-.267c1.14-1.468-.714-2.44-1.175-3.864a2.06 2.06 0 01-.11-.78c-.533-.282-2.11-1.452-2.795-1.965-1.801.16-4.207-1.773-5.35-3.08-.7-.802-2.32-2.517-3.858-4.123a11.052 11.052 0 00-2.046 6.393A11.052 11.052 0 1012.948 1.136c-2.64.004-5.19.954-7.19 2.676zm8.71 7.552c-.515.126-.968.831-1.118 1.306-.038.115-.04.303.066.342.802.592 1.556 1.168 2.4 1.7.162-.393.746-.963 1.096-1.2zm-11.53 1.639c.812 1.898 5.798 7.17 12.06 2.695a2.07 2.07 0 00.114.715c.46 1.42 2.36 2.427 1.238 3.89-2.135 1.364-5 1.201-6.989.528-3.558-1.204-5.914-4.332-6.424-7.828zm13.782.7a.771.771 0 00-.065.049c-.004.003-.008.008-.011.008.003-.003.007-.008.01-.008.024-.015.044-.034.066-.048z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://krita.org/en/about/press/\",hex:\"3BABFF\"},Kubernetes:{title:\"Kubernetes\",slug:\"kubernetes\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Kubernetes icon</title><path d=\"M10.204 14.35l.007.01-.999 2.413a5.171 5.171 0 0 1-2.075-2.597l2.578-.437.004.005a.44.44 0 0 1 .484.606zm-.833-2.129a.44.44 0 0 0 .173-.756l.002-.011L7.585 9.7a5.143 5.143 0 0 0-.73 3.255l2.514-.725.002-.009zm1.145-1.98a.44.44 0 0 0 .699-.337l.01-.005.15-2.62a5.144 5.144 0 0 0-3.01 1.442l2.147 1.523.004-.002zm.76 2.75l.723.349.722-.347.18-.78-.5-.623h-.804l-.5.623.179.779zm1.5-3.095a.44.44 0 0 0 .7.336l.008.003 2.134-1.513a5.188 5.188 0 0 0-2.992-1.442l.148 2.615.002.001zm10.876 5.97l-5.773 7.181a1.6 1.6 0 0 1-1.248.594l-9.261.003a1.6 1.6 0 0 1-1.247-.596l-5.776-7.18a1.583 1.583 0 0 1-.307-1.34L2.1 5.573c.108-.47.425-.864.863-1.073L11.305.513a1.606 1.606 0 0 1 1.385 0l8.345 3.985c.438.209.755.604.863 1.073l2.062 8.955c.108.47-.005.963-.308 1.34zm-3.289-2.057c-.042-.01-.103-.026-.145-.034-.174-.033-.315-.025-.479-.038-.35-.037-.638-.067-.895-.148-.105-.04-.18-.165-.216-.216l-.201-.059a6.45 6.45 0 0 0-.105-2.332 6.465 6.465 0 0 0-.936-2.163c.052-.047.15-.133.177-.159.008-.09.001-.183.094-.282.197-.185.444-.338.743-.522.142-.084.273-.137.415-.242.032-.024.076-.062.11-.089.24-.191.295-.52.123-.736-.172-.216-.506-.236-.745-.045-.034.027-.08.062-.111.088-.134.116-.217.23-.33.35-.246.25-.45.458-.673.609-.097.056-.239.037-.303.033l-.19.135a6.545 6.545 0 0 0-4.146-2.003l-.012-.223c-.065-.062-.143-.115-.163-.25-.022-.268.015-.557.057-.905.023-.163.061-.298.068-.475.001-.04-.001-.099-.001-.142 0-.306-.224-.555-.5-.555-.275 0-.499.249-.499.555l.001.014c0 .041-.002.092 0 .128.006.177.044.312.067.475.042.348.078.637.056.906a.545.545 0 0 1-.162.258l-.012.211a6.424 6.424 0 0 0-4.166 2.003 8.373 8.373 0 0 1-.18-.128c-.09.012-.18.04-.297-.029-.223-.15-.427-.358-.673-.608-.113-.12-.195-.234-.329-.349-.03-.026-.077-.062-.111-.088a.594.594 0 0 0-.348-.132.481.481 0 0 0-.398.176c-.172.216-.117.546.123.737l.007.005.104.083c.142.105.272.159.414.242.299.185.546.338.743.522.076.082.09.226.1.288l.16.143a6.462 6.462 0 0 0-1.02 4.506l-.208.06c-.055.072-.133.184-.215.217-.257.081-.546.11-.895.147-.164.014-.305.006-.48.039-.037.007-.09.02-.133.03l-.004.002-.007.002c-.295.071-.484.342-.423.608.061.267.349.429.645.365l.007-.001.01-.003.129-.029c.17-.046.294-.113.448-.172.33-.118.604-.217.87-.256.112-.009.23.069.288.101l.217-.037a6.5 6.5 0 0 0 2.88 3.596l-.09.218c.033.084.069.199.044.282-.097.252-.263.517-.452.813-.091.136-.185.242-.268.399-.02.037-.045.095-.064.134-.128.275-.034.591.213.71.248.12.556-.007.69-.282v-.002c.02-.039.046-.09.062-.127.07-.162.094-.301.144-.458.132-.332.205-.68.387-.897.05-.06.13-.082.215-.105l.113-.205a6.453 6.453 0 0 0 4.609.012l.106.192c.086.028.18.042.256.155.136.232.229.507.342.84.05.156.074.295.145.457.016.037.043.09.062.129.133.276.442.402.69.282.247-.118.341-.435.213-.71-.02-.039-.045-.096-.065-.134-.083-.156-.177-.261-.268-.398-.19-.296-.346-.541-.443-.793-.04-.13.007-.21.038-.294-.018-.022-.059-.144-.083-.202a6.499 6.499 0 0 0 2.88-3.622c.064.01.176.03.213.038.075-.05.144-.114.28-.104.266.039.54.138.87.256.154.06.277.128.448.173.036.01.088.019.13.028l.009.003.007.001c.297.064.584-.098.645-.365.06-.266-.128-.537-.423-.608zM16.4 9.701l-1.95 1.746v.005a.44.44 0 0 0 .173.757l.003.01 2.526.728a5.199 5.199 0 0 0-.108-1.674A5.208 5.208 0 0 0 16.4 9.7zm-4.013 5.325a.437.437 0 0 0-.404-.232.44.44 0 0 0-.372.233h-.002l-1.268 2.292a5.164 5.164 0 0 0 3.326.003l-1.27-2.296h-.01zm1.888-1.293a.44.44 0 0 0-.27.036.44.44 0 0 0-.214.572l-.003.004 1.01 2.438a5.15 5.15 0 0 0 2.081-2.615l-2.6-.44-.004.005z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/kubernetes/kubernetes/tree/master/logo\",hex:\"326CE5\"},Laravel:{title:\"Laravel\",slug:\"laravel\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Laravel icon</title><path d=\"M23.644 5.43c.009.032.014.065.014.099v5.15c0 .135-.073.26-.189.326l-4.323 2.49v4.934c0 .135-.072.258-.188.326L9.931 23.95c-.021.012-.043.02-.066.027-.008.002-.016.008-.024.01-.063.018-.13.018-.192 0-.011-.002-.02-.008-.029-.012-.021-.008-.043-.014-.063-.025L.534 18.755c-.117-.068-.189-.191-.189-.326V2.974c0-.033.005-.066.014-.098.003-.012.01-.021.014-.032.006-.02.014-.04.023-.058.004-.013.015-.022.023-.033.012-.016.021-.031.033-.045.012-.01.025-.018.037-.027.014-.012.027-.024.041-.034h.001L5.044.05c.115-.067.259-.067.375 0l4.512 2.597h.002c.015.01.027.021.041.033.012.009.025.018.037.027.013.014.021.029.033.045.008.011.02.021.025.033.011.019.017.038.024.058.003.011.011.021.013.032.01.031.014.064.014.098v9.652l3.76-2.164V5.527c0-.033.005-.066.014-.098.003-.011.009-.021.013-.032.007-.02.014-.039.024-.059.007-.012.018-.021.025-.033.012-.015.021-.03.033-.043.012-.012.025-.02.037-.028.014-.011.026-.023.041-.032h.001l4.513-2.598c.116-.067.259-.067.375 0l4.513 2.598c.016.01.027.021.042.031.012.01.025.018.036.028.013.014.022.029.034.044.008.012.019.021.024.033.011.02.018.039.024.059.006.011.012.022.015.033zm-.74 5.032V6.179l-1.578.908-2.182 1.256v4.283l3.76-2.164zm-4.511 7.75v-4.287l-2.146 1.225-6.127 3.498v4.326l8.273-4.762zM1.095 3.624v14.588l8.273 4.762v-4.326l-4.322-2.445-.002-.003h-.002c-.014-.01-.025-.021-.04-.031-.011-.01-.024-.018-.035-.027l-.001-.002c-.013-.012-.021-.025-.031-.039-.01-.012-.021-.023-.028-.037h-.002c-.008-.014-.013-.031-.02-.047-.006-.016-.014-.027-.018-.043-.004-.018-.006-.037-.008-.057-.002-.014-.006-.027-.006-.041V5.789l-2.18-1.257-1.578-.908zM5.231.81l-3.76 2.164 3.76 2.164 3.758-2.164L5.231.81zm1.956 13.505l2.182-1.256V3.624l-1.58.909-2.182 1.256v9.435l1.58-.909zM18.769 3.364l-3.76 2.164 3.76 2.163 3.759-2.164-3.759-2.163zm-.376 4.979l-2.182-1.256-1.579-.908v4.283l2.182 1.256 1.579.908V8.343zm-8.65 9.654l5.514-3.148 2.756-1.572-3.757-2.163-4.324 2.489-3.941 2.27 3.752 2.124z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/laravel/art\",hex:\"FF2D20\"},\"Laravel Horizon\":{title:\"Laravel Horizon\",slug:\"laravelhorizon\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Laravel Horizon icon</title><path d=\"M20.486 3.516C15.8-1.171 8.202-1.172 3.516 3.513A11.963 11.963 0 0 0 0 11.998a11.975 11.975 0 0 0 4.2 9.13h.01a12 12 0 0 0 16.274-.642c4.687-4.685 4.688-12.283.002-16.97zM16 13.998c-4 0-4-4-8-4-2.5 0-3.44 1.565-4.765 2.74H3.23a8.801 8.801 0 0 1 17.54-1.48c-1.33 1.175-2.27 2.74-4.77 2.74z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://horizon.laravel.com/\",hex:\"405263\"},\"Laravel Nova\":{title:\"Laravel Nova\",slug:\"laravelnova\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Laravel Nova icon</title><path d=\"M21.333 4.319C16.56.386 9.453.632 4.973 5.057a7.571 7.571 0 0 0 0 10.8c3.018 2.982 7.912 2.982 10.931 0a3.245 3.245 0 0 0 0-4.628 3.342 3.342 0 0 0-4.685 0 1.114 1.114 0 0 1-1.561 0 1.082 1.082 0 0 1 0-1.543 5.57 5.57 0 0 1 7.808 0 5.408 5.408 0 0 1 0 7.714c-3.881 3.834-10.174 3.834-14.055 0a9.734 9.734 0 0 1-.015-13.87C5.596 1.35 8.638 0 12 0c3.75 0 7.105 1.68 9.333 4.319zm-.714 16.136A12.184 12.184 0 0 1 12 24a12.18 12.18 0 0 1-9.333-4.319c4.772 3.933 11.88 3.687 16.36-.738a7.571 7.571 0 0 0 0-10.8c-3.018-2.982-7.912-2.982-10.931 0a3.245 3.245 0 0 0 0 4.628 3.342 3.342 0 0 0 4.685 0 1.114 1.114 0 0 1 1.561 0 1.082 1.082 0 0 1 0 1.543 5.57 5.57 0 0 1-7.808 0 5.408 5.408 0 0 1 0-7.714c3.881-3.834 10.174-3.834 14.055 0a9.734 9.734 0 0 1 .03 13.855z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://nova.laravel.com/\",hex:\"252D37\"},LastPass:{title:\"LastPass\",slug:\"lastpass\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>LastPass icon</title><path d=\"M22.629,6.857c0-0.379,0.304-0.686,0.686-0.686C23.693,6.171,24,6.483,24,6.857 v10.286c0,0.379-0.304,0.686-0.686,0.686c-0.379,0-0.686-0.312-0.686-0.686V6.857z M2.057,10.286c1.136,0,2.057,0.921,2.057,2.057 S3.193,14.4,2.057,14.4S0,13.479,0,12.343S0.921,10.286,2.057,10.286z M9.6,10.286c1.136,0,2.057,0.921,2.057,2.057 S10.736,14.4,9.6,14.4s-2.057-0.921-2.057-2.057S8.464,10.286,9.6,10.286z M17.143,10.286c1.136,0,2.057,0.921,2.057,2.057 S18.279,14.4,17.143,14.4s-2.057-0.921-2.057-2.057S16.007,10.286,17.143,10.286z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://lastpass.com/press-room/\",hex:\"D32D27\"},\"Last.fm\":{title:\"Last.fm\",slug:\"last-dot-fm\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Last.fm icon</title><path d=\"M10.599 17.211l-.881-2.393s-1.433 1.596-3.579 1.596c-1.9 0-3.249-1.652-3.249-4.296 0-3.385 1.708-4.596 3.388-4.596 2.418 0 3.184 1.568 3.845 3.578l.871 2.751c.871 2.672 2.523 4.818 7.285 4.818 3.41 0 5.722-1.045 5.722-3.801 0-2.227-1.276-3.383-3.635-3.935l-1.757-.384c-1.217-.274-1.577-.771-1.577-1.597 0-.936.736-1.487 1.952-1.487 1.323 0 2.028.495 2.147 1.679l2.749-.33c-.225-2.479-1.937-3.494-4.745-3.494-2.479 0-4.897.936-4.897 3.934 0 1.873.902 3.058 3.185 3.605l1.862.443c1.397.33 1.863.916 1.863 1.713 0 1.021-.992 1.441-2.869 1.441-2.779 0-3.936-1.457-4.597-3.469l-.901-2.75c-1.156-3.574-3.004-4.896-6.669-4.896C2.147 5.327 0 7.879 0 12.235c0 4.179 2.147 6.445 6.003 6.445 3.108 0 4.596-1.457 4.596-1.457v-.012z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://www.last.fm/about/resources\",hex:\"D51007\"},LaTeX:{title:\"LaTeX\",slug:\"latex\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>LaTeX icon</title><path d=\"M2.176 2.813c.233.42.477.779.73 1.09h-.002a2.313 2.313 0 0 0-.357-.026 2.702 2.702 0 0 0-.791.13c.494.415.912.717 1.281.95.905.294 1.912.782 2.77 1.328.429.273.812.543 1.113.78.301.236.567.471.621.574.054.102-.001.139-.082.06-.081-.078-.302-.319-.6-.553a14.203 14.203 0 0 0-1.107-.775c-.775-.49-1.982-.96-2.715-1.414-.57-.182-1.182-.207-1.902.135.526.33.967.568 1.353.746 1.104.155 2.259.695 3.225 1.308.483.308.905.616 1.22.868.158.125.29.237.39.328.098.09.176.155.198.21.03.074-.02.104-.085.057-.032-.022-.085-.102-.182-.191a7.475 7.475 0 0 0-.385-.326c-.312-.25-.73-.553-1.21-.858-.894-.561-2.233-1.012-3.175-1.396-.601-.11-1.223-.06-1.904.389.449.2.837.35 1.182.464-.566.02-1.128.197-1.676.717.477.118.885.198 1.244.25-.44.09-.87.3-1.289.72.324.07.616.123.883.163-.329.159-.64.406-.924.783.373.03.703.042 1 .043-.36.166-.696.428-.996.85.533.026.979.024 1.363.002-.422.172-.812.464-1.144.969a11.66 11.66 0 0 0 1.629-.077l-.008.002c.99-.073 2.3.127 2.965.848.052.057-.024.118-.073.074-.648-.58-1.494-.827-2.892-.922-.544.15-1.047.447-1.461 1.075.535.007.981-.011 1.365-.047-.47.255-.871.643-1.137 1.304.483-.091.888-.19 1.237-.293-.363.265-.669.636-.873 1.194.324-.072.611-.146.87-.221a2.52 2.52 0 0 0-.513 1.096c.351-.13.655-.256.926-.38h.002c.283-.23.71-.457 1.289-.622.506-.145 1.082-.284 1.652-.301a3.63 3.63 0 0 1 .244 0c.1.003.063.104.006.103-.728-.008-1.302.132-1.873.295a9.8 9.8 0 0 0-1.318.526 2.5 2.5 0 0 0-.551 1.191c.495-.198.899-.388 1.238-.568-.311.333-.543.76-.635 1.357a11.794 11.794 0 0 0 1.442-.744c-.432.362-.764.844-.879 1.588a10.81 10.81 0 0 0 1.766-.957c-.184.372-.281.807-.235 1.35.762-.585 1.245-1.056 1.604-1.473a2.67 2.67 0 0 0 .076.885c.449-.772.897-1.093 1.353-1.358-.563.37-.464.671-.464 1.014.683-.72 1.636-1.483 1.927-1.961-.39.585-.547 1.14-.65 1.629-1.994 1.055-3.21 1.33-4.57 1.752.528.194 1.095.383.861.652l-.625.623c.399-.124.805-.3 1.158-.058-.034.327-.448.493-.8.683.62-.224.756-.173.92-.12.08.391-.203.602-.387.86 1.565-1.19 3.606-2.128 5.045-2.521 2.022-.681 4.632-1.39 5.341-3.117.235-.946.478-1.905.707-2.842-.111-.035-.245-.063-.35-.133a.655.655 0 0 1-.234-.299c-.252.066-.441.031-.56-.088-.118-.117-.168-.294-.203-.49-.204.042-.364.017-.47-.076-.114-.102-.17-.26-.198-.443l-.006-.041.037-.014a.84.84 0 0 0 .3-.195.256.256 0 0 0 .071-.225l-.006-.037.03-.016c.163-.093.346-.168.43-.279a.277.277 0 0 0 .05-.21.886.886 0 0 0-.154-.36l-.028-.04.04-.027c.118-.09.246-.176.31-.257.032-.041.046-.077.045-.11 0-.033-.015-.071-.065-.119l-.097-.094.135.006c.212.009.396-.006.539-.053a.5.5 0 0 0 .296-.224.455.455 0 0 1-.005-.074.455.455 0 0 1 .455-.455.455.455 0 0 1 .455.455.455.455 0 0 1-.022.132c.184.016.359.008.524-.064l.037-.012c.236-.084.333.045.72-.459-1.69-2.191-4.158-.632-4.978 1.625-.21.577-1.405.577-1.752-.002-1.37-2.95-5.531-6.067-9.072-7.216zm.732 1.091c.252-.009 1.13.453 1.31.52a23.6 23.6 0 0 1 1.567.967c.505.336.961.663 1.274.902.156.12.277.218.351.285.037.034.064.057.08.082a.079.079 0 0 1 .01.022.056.056 0 0 1-.004.045c-.01.02-.03.03-.043.03a.075.075 0 0 1-.027 0c-.057.001-.202-.163-.496-.415a23.427 23.427 0 0 0-2.758-1.826c-.504-.28-.956-.54-1.264-.612zM1.766 6.691c.812 0 1.89.365 2.931.92C5.74 8.168 6.74 8.83 7.223 9.39c.066.076-.019.123-.077.068-.52-.496-1.462-1.206-2.498-1.758-.637-.336-2.148-1.005-2.882-1.008zm-.428.967c1.116.015 2.348.446 3.432.996.541.275 1.024.57 1.396.832.372.263.673.523.734.657.062.133-.019.13-.086.054a4.404 4.404 0 0 0-.705-.627 11.496 11.496 0 0 0-1.384-.824c-.963-.482-2.284-.926-3.387-1.088zm.162.815c.066-.003.133 0 .201.006.822.071 1.719.366 2.533.748 1.087.509 2.035 1.157 2.434 1.666.035.045-.011.133-.078.064-.428-.44-1.32-1.132-2.397-1.637C3.28 8.9 1.91 8.45.93 8.541c.188-.024.373-.061.57-.068zm16.541.013c-.365.475-.53.425-.701.465.093.431.35.587.586.772 2.02-.372 4.29-.274 6.08-.225l-5.963-1.01-.002-.002zm-.803.494c-.19.077-.387.079-.584.06a.455.455 0 0 1-.39.224.455.455 0 0 1-.414-.268.616.616 0 0 1-.301.21 1.57 1.57 0 0 1-.492.054c.02.035.054.067.054.103a.275.275 0 0 1-.07.174c-.073.093-.188.172-.295.25a.946.946 0 0 1 .149.361.388.388 0 0 1-.07.284c-.106.14-.287.211-.438.295a.374.374 0 0 1-.092.267.886.886 0 0 1-.297.197c.027.157.074.283.154.354.086.076.212.104.426.049l.055-.016.01.055c.034.207.088.386.187.484.1.099.243.135.502.055l.049-.016.015.05a.53.53 0 0 0 .21.282c.087.06.25.112.36.147.798-.868 1.525-1.772 1.884-2.86-.225-.176-.508-.335-.612-.795zM1.44 9.348a6.683 6.683 0 0 1 2.77.64c.92.43 1.658.939 1.975 1.307.074.087-.02.122-.073.074a8.186 8.186 0 0 0-1.947-1.29c-.904-.416-2.196-.646-3.16-.718.145-.01.29-.014.435-.013zm.432.816c.61.02 1.24.155 1.807.352.756.262 1.42.614 1.746.98.044.05-.005.13-.072.07-.349-.304-.962-.694-1.707-.953-.575-.195-1.616-.367-2.27-.396.196-.021.293-.06.496-.053zm.893 1.781c.05 0 .103.004.156.008.424.034.886.133 1.342.406.043.026.049.136-.05.09-.856-.402-1.327-.489-2.458-.308.338-.113.652-.199 1.01-.196zm.416.784c.3.004.613.062.998.216.044.018.08.126-.033.094-.857-.243-1.167-.328-2.288.104.281-.229.62-.367 1.022-.403.1-.009.2-.013.3-.011zm1.459.681c.156 0 .311.009.46.026.053.005.055.102-.007.1a7.9 7.9 0 0 0-1.838.114c-.243.046-.422.044-1.404.46.286-.234.795-.451 1.386-.56.444-.08.934-.142 1.403-.14zm1.336.906c.035-.005.105.084.017.1-.73.136-1.244.268-1.795.455-.216.074-.579.207-1.242.588.259-.269.655-.494 1.213-.684a10.65 10.65 0 0 1 1.807-.459zm.31.508c.075-.012.099.087.022.102-1.217.24-1.76.556-2.541 1.144.503-.523 1.296-1.05 2.52-1.246zm.596.447a.095.095 0 0 1 .03 0c.06.011.069.089-.009.1-.872.13-1.479.555-2.257 1.332.295-.494 1.006-1.242 2.236-1.432zm.371.391c.046-.005.116.073.025.1-.193.056-.433.15-.67.3-.182.118-.302.202-.6.508.112-.245.299-.435.546-.591.246-.157.507-.293.699-.317z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/latex3/branding\",hex:\"008080\"},Launchpad:{title:\"Launchpad\",slug:\"launchpad\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Launchpad icon</title><path d=\"M21.999 18.676l-4.432-2.556-4.783 2.764V24l9.215-5.324zM11.216 24v-5.119l-4.785-2.762-4.43 2.557L11.216 24zm.779-6.475l4.789-2.765V9.236l-4.785-2.76-4.783 2.76v5.527l4.781 2.761-.002.001zM1.22 6.682v10.641l4.432-2.559V9.239L1.219 6.68l.001.002zm19.615 1.121l-2.484 1.436v5.522l4.43 2.559V6.678l-1.946 1.125zM2.001 5.324l4.435 2.559 4.781-2.762V.003L2.001 5.324zm15.566 2.559l4.434-2.559L12.782 0v5.121l4.785 2.762z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://help.launchpad.net/logo/submissions\",hex:\"F8C300\"},LeetCode:{title:\"LeetCode\",slug:\"leetcode\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>LeetCode icon</title><path d=\"M16.102 17.93l-2.697 2.607c-.466.467-1.111.662-1.823.662s-1.357-.195-1.824-.662l-4.332-4.363c-.467-.467-.702-1.15-.702-1.863s.235-1.357.702-1.824l4.319-4.38c.467-.467 1.125-.645 1.837-.645s1.357.195 1.823.662l2.697 2.606c.514.515 1.365.497 1.9-.038.535-.536.553-1.387.039-1.901l-2.609-2.636a5.055 5.055 0 0 0-2.445-1.337l2.467-2.503c.516-.514.498-1.366-.037-1.901-.535-.535-1.387-.552-1.902-.038l-10.1 10.101c-.981.982-1.494 2.337-1.494 3.835 0 1.498.513 2.895 1.494 3.875l4.347 4.361c.981.979 2.337 1.452 3.834 1.452s2.853-.512 3.835-1.494l2.609-2.637c.514-.514.496-1.365-.039-1.9s-1.386-.553-1.899-.039zM20.811 13.01H10.666c-.702 0-1.27.604-1.27 1.346s.568 1.346 1.27 1.346h10.145c.701 0 1.27-.604 1.27-1.346s-.569-1.346-1.27-1.346z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://leetcode.com\",hex:\"F89F1B\"},Lenovo:{title:\"Lenovo\",slug:\"lenovo\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Lenovo icon</title><path d=\"M20.254 11.421a.81.81 0 00-.815.866.839.839 0 00.827.867.816.816 0 00.815-.867A.838.838 0 0020.254 11.421zM13.744 11.421a.81.81 0 00-.815.866.839.839 0 00.827.867.816.816 0 00.815-.867A.838.838 0 0013.744 11.421zM6.733 11.369a.786.786 0 00-.651.307.987.987 0 00-.171.736L7.388 11.8A.709.709 0 006.733 11.369z M0,8v8H24V8Zm5.006,5.827H2.227v-4h.857v3.224H5.006Zm1.817-.621a1.289,1.289,0,0,0,.884-.326l.534.411a2.025,2.025,0,0,1-1.431.588A1.594,1.594,0,1,1,6.717,10.7a1.543,1.543,0,0,1,1.216.5,1.671,1.671,0,0,1,.37.86l-2.162.9A.937.937,0,0,0,6.823,13.206Zm4.883.621h-.845V12.075a.679.679,0,0,0-.712-.651.66.66,0,0,0-.7.651v1.752H8.606V10.748h.846v.441h0a1.278,1.278,0,0,1,1-.493,1.185,1.185,0,0,1,1.25,1.222Zm1.984.052a1.593,1.593,0,1,1,1.66-1.592A1.6,1.6,0,0,1,13.69,13.879Zm2.8-.053-1.267-3.078h.966l.764,2.1.764-2.1h.966l-1.267,3.078Zm3.711.053a1.593,1.593,0,1,1,1.66-1.592A1.6,1.6,0,0,1,20.2,13.879Zm2-.418H22.06v.366h-.085v-.366h-.137v-.077H22.2Zm.541.366h-.082v-.315l-.137.213H22.51l-.136-.213v.315h-.082v-.443h.09l.134.21.134-.21h.088Z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.lenovopartnernetwork.com/us/branding/\",hex:\"E2231A\"},\"Let’s Encrypt\":{title:\"Let’s Encrypt\",slug:\"letsencrypt\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Let&apos;s Encrypt icon</title><path d=\"M18.197 24H5.804a.965.965 0 0 1-.962-.962V13.87c0-.529.433-.962.962-.962h1.164v-1.482c0-2.775 2.258-5.032 5.032-5.032s5.032 2.258 5.032 5.032v1.482h1.164c.529 0 .962.433.962.962v9.168a.965.965 0 0 1-.962.962zm-5.569-5.072A1.274 1.274 0 0 0 12 16.544a1.275 1.275 0 0 0-.628 2.384v1.242a.628.628 0 1 0 1.256 0v-1.242zm-2.774-6.02h4.293v-1.482c0-1.183-.963-2.146-2.146-2.146s-2.146.963-2.146 2.146v1.482zM4.547 11.542h-2.99a.878.878 0 1 1 0-1.756h2.99a.878.878 0 1 1 0 1.756zM6.654 6.838a.87.87 0 0 1-.557-.2L3.732 4.693a.878.878 0 1 1 1.116-1.357l2.365 1.945a.878.878 0 0 1-.559 1.556zM12 4.77a.878.878 0 0 1-.878-.878V.878a.878.878 0 1 1 1.756 0v3.014A.878.878 0 0 1 12 4.77zM17.346 6.838a.877.877 0 0 1-.559-1.556l2.365-1.945a.878.878 0 0 1 1.116 1.357l-2.365 1.945a.876.876 0 0 1-.557.2zM22.443 11.542h-3.019a.878.878 0 1 1 0-1.756h3.019a.878.878 0 1 1 0 1.756z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://letsencrypt.org/trademarks/\",hex:\"003A70\"},Letterboxd:{title:\"Letterboxd\",slug:\"letterboxd\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Letterboxd icon</title><path d=\"M8.29 16.752V7.2H6.546V4.8h6.328v2.4h-1.746v9.574h3.925v-2.618h2.839V19.2H6.545v-2.448h1.746zM0 12c0 6.628 5.372 12 12 12s12-5.372 12-12S18.628 0 12 0 0 5.372 0 12z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://letterboxd.com/about/logos/\",hex:\"00D735\"},LGTM:{title:\"LGTM\",slug:\"lgtm\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>LGTM icon</title><path d=\"M12.008 4.866c-2.914 0-5.377.679-6.995 2.11-.05-.088-.085-.163-.141-.253-.17-.273-.328-.583-.828-.89a2.699 2.699 0 0 0-1.014-.387 2.14 2.14 0 0 0-.47-.001l.099-.013c-.91 0-1.442.546-1.788 1.016-.344.47-.566.999-.71 1.577-.285 1.155-.289 2.651.81 3.767.575.588 1.251.863 1.863 1.027.118.032.223.04.336.063.399 1.892 1.58 3.492 3.158 4.381v.001h.002c.929.522 1.81.761 2.472 1.014.924.357 1.9.751 3.036.85l.06.006h.15c1.306 0 2.296-.527 3.152-.855.655-.25 1.54-.482 2.477-1.008a6.156 6.156 0 0 0 1.196-.88 6.759 6.759 0 0 0 1.967-3.45 3.913 3.913 0 0 0 2.19-1.15c1.098-1.115 1.094-2.611.809-3.766-.144-.578-.366-1.106-.71-1.577-.345-.47-.879-1.016-1.788-1.016l.1.013a2.14 2.14 0 0 0-.472.002 2.695 2.695 0 0 0-1.01.385c-.499.307-.658.616-.827.888-.055.089-.09.163-.139.249-1.617-1.426-4.076-2.103-6.985-2.103zm.023 1.37c3.557 0 6.013 1.065 7.057 2.97.63-.243 1.093-1.89 1.612-2.209.42-.26.665-.195.665-.195.95 0 1.93 2.797.712 4.032-.644.657-1.83.842-2.422.795-.045 1.906-1.155 3.626-2.624 4.45-.748.42-1.552.64-2.296.924-.921.352-1.786.763-2.662.763h-.092c-.872-.076-1.74-.407-2.662-.763-.744-.285-1.548-.51-2.296-.93-1.46-.824-2.571-2.54-2.616-4.445-.587.05-1.788-.132-2.436-.794-1.217-1.235-.238-4.032.712-4.032 0 0 .246-.064.666.195.521.321.987 1.984 1.62 2.214C6.013 7.3 8.47 6.236 12.032 6.236zm-3.876 2.33a3.053 3.053 0 1 0 0 6.105 3.053 3.053 0 0 0 0-6.105zm7.751 0a3.052 3.052 0 1 0 0 6.105 3.052 3.052 0 0 0 0-6.105zM8.591 10.28a1.357 1.357 0 0 1 0 2.713 1.356 1.356 0 0 1-1.313-1.694.57.57 0 0 0 1.098-.216.57.57 0 0 0-.547-.57 1.35 1.35 0 0 1 .762-.233zm6.888 0a1.357 1.357 0 0 1 0 2.713 1.356 1.356 0 0 1-1.314-1.694.57.57 0 1 0 .552-.785 1.35 1.35 0 0 1 .762-.234zM11.52 14.93c-.239.02-.377.146-.377.476 0 .21.138.365.378.365a.143.143 0 0 0 .033-.282c-.022-.005-.13-.044-.13-.136 0-.093 0-.125.183-.15.078-.012.116-.105.092-.18-.024-.075-.094-.1-.18-.093zm1.023 0c-.085-.006-.156.018-.18.093-.024.075.015.168.093.18.182.025.182.057.182.15 0 .092-.107.131-.13.136a.143.143 0 0 0 .033.282c.24 0 .379-.155.379-.365 0-.33-.139-.456-.377-.476z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://lgtm.com/\",hex:\"FFFFFF\"},LibraryThing:{title:\"LibraryThing\",slug:\"librarything\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>LibraryThing icon</title><path d=\"M10.4 4.78v-.43l-.03-.46c0-.13-.05-.33-.14-.6-.09-.26-.13-.49-.13-.69a.4.4 0 0 1 .17-.33l.35-.28a.94.94 0 0 1 .61-.18c.16 0 .41.02.77.07.31 0 .54-.07.7-.2l.37-.26c.17-.14.26-.29.26-.46 0-.29-.16-.52-.48-.7A2.52 2.52 0 0 0 11.63 0l-1.36.1c-.31 0-.9.07-1.77.21-.87.15-1.54.22-2.03.22-.2 0-.54-.04-1.02-.12A7.61 7.61 0 0 0 4.3.3l-.75.24c-.26.08-.38.2-.38.35l.06.3c.14.28.34.5.6.65l.27.14c.13.04.24.06.33.06.11 0 .28 0 .5-.03a1 1 0 0 1 .5.13l.37.33c.18.2.3.4.38.58.08.18.12.35.12.5 0 .12-.02.3-.07.57-.04.26-.06.47-.06.62 0 .2.05.49.15.86.1.37.15.68.15.92-.03.38-.04.75-.04 1.12v1.12c0 .29.03.66.07 1.12.04.46.07.83.07 1.1l-.07 1.37-.03 2.21-.1 1.81c0 .25.04.56.13.96.09.4.13.71.13.95 0 .25-.03.55-.1.93a3.56 3.56 0 0 0-.07 1.32c.03.17.03.3 0 .4a.8.8 0 0 1-.18.37l-.31.38c-.2.24-.43.43-.67.56-.24.13-.59.2-1.03.23-.45.02-.77.11-.97.28-.2.16-.3.29-.3.38 0 .57.53.85 1.6.85l.23-.03 1.92-.2c.32-.02.7-.03 1.12-.03h.4l1.2.03h3.2l.88-.08c.28-.03.53-.05.75-.05.29 0 .69.07 1.2.22.51.14.94.19 1.3.14l.38-.1c.24-.06.46-.1.69-.1l.45.06c.27.03.5.05.68.05.09 0 .24-.03.47-.07.55-.11.94-.32 1.16-.63.16-.22.24-.42.24-.62a5.27 5.27 0 0 1-.1-1.35c.1-.22.23-.44.36-.66.11-.29.2-.68.24-1.17.04-.5.08-.83.11-.99.04-.16.13-.42.29-.76.15-.34.23-.63.23-.87 0-.26-.06-.5-.17-.7-.1-.19-.25-.29-.43-.29-.11 0-.29.1-.53.3-.11.09-.2.25-.29.5-.07.23-.14.4-.18.49-.27.4-.53.78-.8 1.15a5.4 5.4 0 0 0-.33.62c-.23.47-.4.78-.54.96a4.3 4.3 0 0 1-.53.5c-.11.08-.22.2-.32.34s-.24.37-.41.68l-.57.3-.4.1c-.13.01-.31.07-.53.16-.23.08-.4.14-.5.16-.11.02-.26.03-.44.03-.2 0-.5-.03-.9-.1-.4-.06-.72-.1-.96-.1l-.7.04c-.8 0-1.4-.43-1.77-1.29a9.37 9.37 0 0 1-.48-4.67c.05-.36.08-.64.08-.86v-2.3l.03-.76c.03-.31.04-.53.04-.66a3.05 3.05 0 0 0-.17-1.06 1.77 1.77 0 0 1-.13-.56c0-.1.02-.26.06-.46.05-.2.07-.35.07-.46l-.03-.99c-.03-.42-.04-.75-.04-.99 0-.28.05-.63.14-1.05.09-.42.13-.76.13-1.02z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://twitter.com/LibraryThing/status/1054466649271656448\",hex:\"251A15\"},LibreOffice:{title:\"LibreOffice\",slug:\"libreoffice\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>LibreOffice icon</title><path d=\"M16.365 0a.597.597 0 00-.555.352.582.582 0 00.128.635l4.985 4.996a.605.605 0 00.635.133.59.59 0 00.363-.53V.577A.605.605 0 0021.335 0zM2.661 0a.59.59 0 00-.582.59v22.82a.59.59 0 00.582.59h18.67a.59.59 0 00.59-.59V8.716a.59.59 0 00-.17-.42L13.674.182a.59.59 0 00-.42-.181zm.59 1.184h9.754l7.733 7.77v13.863H3.251z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://wiki.documentfoundation.org/Marketing/Branding\",hex:\"18A303\"},Liberapay:{title:\"Liberapay\",slug:\"liberapay\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Liberapay icon</title><path d=\"M2.32 0A2.321 2.321 0 0 0 0 2.32v19.36A2.321 2.321 0 0 0 2.32 24h19.36A2.32 2.32 0 0 0 24 21.68V2.32A2.32 2.32 0 0 0 21.68 0zm9.208 3.98l-2.27 9.405a2.953 2.953 0 0 0-.073.539.853.853 0 0 0 .09.432.7.7 0 0 0 .334.302c.157.077.378.126.661.147l-.49 2.008c-.772 0-1.38-.1-1.82-.3-.441-.203-.757-.477-.947-.826a2.391 2.391 0 0 1-.278-1.2c.005-.452.068-.933.188-1.445l2.074-8.67zm3.9 3.888c.61 0 1.135.092 1.576.277.44.185.802.438 1.085.76.283.32.493.696.629 1.126.136.43.204.89.204 1.379v.001c0 .794-.13 1.52-.392 2.179a5.16 5.16 0 0 1-1.086 1.706 4.84 4.84 0 0 1-1.665 1.118c-.648.267-1.353.4-2.114.4-.37 0-.74-.033-1.11-.098l-.735 2.956H9.403l2.71-11.298c.435-.13.934-.248 1.494-.351a10.045 10.045 0 0 1 1.821-.155zm-.31 2.041a4.67 4.67 0 0 0-.98.098l-1.143 4.752c.185.044.413.065.685.065.425 0 .812-.079 1.16-.237a2.556 2.556 0 0 0 .89-.661c.244-.283.435-.623.571-1.02a4.03 4.03 0 0 0 .204-1.315c0-.468-.104-.865-.31-1.192-.207-.326-.566-.49-1.077-.49z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://liberapay.com/assets/liberapay/icon-v2_yellow-r.svg\",hex:\"F6C915\"},Line:{title:\"Line\",slug:\"line\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Line icon</title><path d=\"M19.365 9.863c.349 0 .63.285.63.631 0 .345-.281.63-.63.63H17.61v1.125h1.755c.349 0 .63.283.63.63 0 .344-.281.629-.63.629h-2.386c-.345 0-.627-.285-.627-.629V8.108c0-.345.282-.63.63-.63h2.386c.346 0 .627.285.627.63 0 .349-.281.63-.63.63H17.61v1.125h1.755zm-3.855 3.016c0 .27-.174.51-.432.596-.064.021-.133.031-.199.031-.211 0-.391-.09-.51-.25l-2.443-3.317v2.94c0 .344-.279.629-.631.629-.346 0-.626-.285-.626-.629V8.108c0-.27.173-.51.43-.595.06-.023.136-.033.194-.033.195 0 .375.104.495.254l2.462 3.33V8.108c0-.345.282-.63.63-.63.345 0 .63.285.63.63v4.771zm-5.741 0c0 .344-.282.629-.631.629-.345 0-.627-.285-.627-.629V8.108c0-.345.282-.63.63-.63.346 0 .628.285.628.63v4.771zm-2.466.629H4.917c-.345 0-.63-.285-.63-.629V8.108c0-.345.285-.63.63-.63.348 0 .63.285.63.63v4.141h1.756c.348 0 .629.283.629.63 0 .344-.282.629-.629.629M24 10.314C24 4.943 18.615.572 12 .572S0 4.943 0 10.314c0 4.811 4.27 8.842 10.035 9.608.391.082.923.258 1.058.59.12.301.079.766.038 1.08l-.164 1.02c-.045.301-.24 1.186 1.049.645 1.291-.539 6.916-4.078 9.436-6.975C23.176 14.393 24 12.458 24 10.314\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://line.me/en/logo\",hex:\"00C300\"},\"LINE WEBTOON\":{title:\"LINE WEBTOON\",slug:\"linewebtoon\",svg:'<svg xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" viewBox=\"0 0 24 24\"><title>LINE WEBTOON icon</title><path d=\"M15.023 15.26c.695 0 1.014-.404 1.014-1.051 0-.551-.308-1.01-.984-1.01-.58 0-.912.404-.912 1.016 0 .543.32 1.045.882 1.045zM10.135 15.447c.764 0 1.113-.443 1.113-1.154 0-.604-.338-1.109-1.082-1.109-.637 0-1.002.445-1.002 1.115 0 .597.352 1.148.971 1.148zM24 10.201l-3.15.029.83-9.686L1.958 3.605l1.686 6.248H0l3.734 11.488 8.713-1.283v3.396l10.113-4.641L24 10.201zm-9.104-3.594c0-.049.039-.092.088-.094l1.879-.125.446-.029c.524-.035 1.634.063 1.634 1.236 0 .83-.619 1.184-.619 1.184s.75.189.707 1.092c0 1.602-1.943 1.389-1.943 1.389l-.225-.006-1.908-.053a.089.089 0 0 1-.086-.09l.027-4.504zm-3.675.243c0-.047.039-.09.088-.092l3.064-.203a.08.08 0 0 1 .087.08v.943c0 .049-.039.09-.087.092l-1.9.08a.094.094 0 0 0-.088.09l-.005.394a.083.083 0 0 0 .086.084l1.646-.066a.082.082 0 0 1 .086.084l-.02 1.012a.089.089 0 0 1-.089.086h-1.63a.089.089 0 0 0-.088.088v.416c0 .047.039.088.088.088l1.87.033a.09.09 0 0 1 .087.09v.951a.084.084 0 0 1-.087.084l-3.063-.123a.09.09 0 0 1-.087-.09l.042-4.121zm-6.01.312l.975-.064a.101.101 0 0 1 .105.08l.458 2.205c.01.047.027.047.039 0l.576-2.281a.132.132 0 0 1 .108-.09l.921-.061a.108.108 0 0 1 .109.078l.564 2.342c.012.047.029.047.041 0l.6-2.424a.131.131 0 0 1 .108-.092l.996-.064c.048-.004.077.031.065.078l-1.09 4.104a.113.113 0 0 1-.109.082l-1.121-.031a.12.12 0 0 1-.109-.086l-.535-1.965c-.012-.047-.033-.047-.045 0l-.522 1.934a.12.12 0 0 1-.11.082l-1.109-.031a.123.123 0 0 1-.108-.088l-.873-3.618c-.011-.047.019-.088.066-.09zm-.288 9.623v-3.561a.089.089 0 0 0-.087-.088l-1.252-.029a.095.095 0 0 1-.091-.09l-.046-1.125a.082.082 0 0 1 .083-.086l4.047.096c.048 0 .087.041.085.088l-.022 1.088a.093.093 0 0 1-.089.088l-1.139.004a.09.09 0 0 0-.087.088v3.447c0 .049-.039.09-.087.092l-1.227.07a.08.08 0 0 1-.088-.082zm2.834-2.379c0-1.918 1.321-2.482 2.416-2.482s2.339.73 2.339 2.316c0 1.9-1.383 2.482-2.416 2.482-1.033.001-2.339-.724-2.339-2.316zm5.139-.115c0-1.746 1.166-2.238 2.162-2.238s2.129.664 2.129 2.107c0 1.729-1.259 2.26-2.198 2.26s-2.093-.68-2.093-2.129zm7.259 1.711a.175.175 0 0 1-.139-.064l-1.187-1.631c-.029-.039-.053-.031-.053.018v1.67c0 .047-.039.09-.086.092l-1.052.061a.082.082 0 0 1-.087-.082l.039-3.842c0-.047.039-.086.088-.084l.881.02a.2.2 0 0 1 .137.074l1.293 1.902c.027.041.051.033.051-.014l.032-1.846a.087.087 0 0 1 .089-.086l.963.029c.047 0 .085.041.083.09l-.138 3.555a.097.097 0 0 1-.091.092l-.823.046zM16.258 8.23l.724-.014s.47.018.47-.434c0-.357-.411-.33-.411-.33l-.782.008a.09.09 0 0 0-.088.088v.598a.083.083 0 0 0 .087.084zM16.229 10.191h.99c.024 0 .35-.051.35-.404 0-.293-.229-.402-.441-.398l-.898.029a.089.089 0 0 0-.087.09v.596a.086.086 0 0 0 .086.087z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://webtoons.com/\",hex:\"00D564\"},LinkedIn:{title:\"LinkedIn\",slug:\"linkedin\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>LinkedIn icon</title><path d=\"M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://brand.linkedin.com\",hex:\"0077B5\"},Linode:{title:\"Linode\",slug:\"linode\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Linode icon</title><path d=\"M22 10.68a.15.15 0 00-.07-.15l-3.26-1.82a.14.14 0 00-.14 0l-2.77 1.69a.17.17 0 00-.07.13v1.45l-1.13-.74a.14.14 0 00-.15 0l-1.62 1-.07-1.64a.19.19 0 00-.07-.12L11 9.39l1.51-.78a.16.16 0 00.08-.14l-.27-6.27a.16.16 0 00-.08-.13L8 0h-.1L2.08 1.81A.16.16 0 002 2l1.27 6.23a.22.22 0 000 .08L5.1 9.69l-1.26.6a.16.16 0 00-.08.17l1 4.7a.18.18 0 000 .07L6 16.37l-.8.49a.15.15 0 00-.06.16l.75 3.64a.11.11 0 000 .07l3 3.22a.14.14 0 00.2 0l3.92-3.12a.16.16 0 00.06-.12L13 18.59l1.32 1.1a.14.14 0 00.18 0l3.14-2.51a.24.24 0 00.06-.11l.09-1.57 1 .67a.14.14 0 00.17 0l2.57-2a.14.14 0 00.05-.1zm-9.62.15l.07 1.57.12 2.78-4.23 2.87-.66-4.53zm-.35-8.42l.25 5.91-5 2.59-.9-6.32zM3.54 8.12L2.33 2.26l3.74 2.32.93 6.2-1.58-1.2zM5 15.05l-.88-4.26 3.28 2.74.6 4.38-1.68-1.62zm1.14 5.51l-.65-3.14 2.89 2.85.47 3.16zm3 3l-.49-3.33 4-2.87.14 3.28zM13 18.2v-1.08a.16.16 0 00-.05-.11l-1.13-.92 1-.7a.14.14 0 00.06-.12v-.26l1.39 1.06v3.21zm4.44-1.2l-2.86 2.28v-3.22l3.07-2.2zm1.29-1.21l-.9-.63.09-1.59a.11.11 0 000-.06.1.1 0 000-.05l-1.93-1.27V10.8l3 1.89zm2.55-1.86L19 15.74l.26-3.06L21.69 11z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.linode.com/company/press/\",hex:\"00A95C\"},Linux:{title:\"Linux\",slug:\"linux\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Linux icon</title><path d=\"M12.503 0c-.155 0-.315.008-.479.021-4.227.333-3.106 4.807-3.17 6.298-.077 1.093-.3 1.954-1.051 3.021-.885 1.051-2.127 2.75-2.716 4.521-.278.832-.41 1.684-.287 2.489-.039.034-.076.068-.111.135-.26.268-.449.601-.662.839-.199.199-.485.267-.797.4-.313.136-.658.269-.864.681-.09.188-.136.393-.132.601 0 .199.027.401.055.536.058.399.116.729.039.97-.248.68-.279 1.146-.105 1.485.174.334.535.469.939.601.811.2 1.91.135 2.775.599.926.467 1.866.671 2.616.47.526-.115.97-.463 1.208-.945.587-.003 1.23-.269 2.26-.334.699-.058 1.574.267 2.578.199.025.135.063.199.114.334l.003.003c.391.778 1.113 1.132 1.884 1.071.771-.06 1.592-.536 2.257-1.306.631-.765 1.683-1.084 2.378-1.503.348-.199.629-.469.649-.853.023-.4-.199-.812-.714-1.377v-.097l-.003-.003c-.17-.2-.25-.535-.338-.926-.085-.401-.182-.786-.492-1.046h-.003c-.059-.054-.123-.067-.188-.135-.056-.038-.121-.062-.19-.064.431-1.278.264-2.55-.173-3.694-.533-1.41-1.465-2.638-2.175-3.483-.796-1.005-1.576-1.957-1.561-3.369.027-2.152.237-6.133-3.544-6.139zm.529 3.405h.013c.213 0 .396.062.584.198.191.135.33.332.439.533.105.259.158.459.166.724 0-.02.006-.04.006-.059v.104c-.002-.007-.004-.015-.004-.021l-.004-.024c-.002.243-.053.483-.15.706-.047.125-.119.24-.213.335-.029-.016-.057-.03-.088-.042-.105-.045-.199-.064-.285-.133-.071-.028-.145-.051-.219-.066.049-.059.145-.133.182-.198.053-.128.082-.264.088-.402v-.019c.002-.135-.018-.271-.061-.4-.045-.135-.101-.201-.183-.334-.084-.066-.167-.132-.267-.132h-.016c-.093 0-.176.03-.262.132-.095.094-.166.207-.205.334-.053.127-.084.264-.09.4v.019c.002.089.008.179.02.267-.193-.067-.438-.135-.607-.202-.01-.065-.016-.132-.018-.199v-.02c-.008-.264.043-.526.15-.769.082-.219.232-.406.43-.533.171-.129.379-.199.594-.199zm-2.962.059h.036c.142 0 .27.048.399.135.146.129.264.288.344.465.09.199.141.401.153.667v.004c.007.134.006.201-.002.266v.08c-.03.007-.056.018-.083.024-.152.055-.274.135-.393.2.012-.089.013-.179.003-.267v-.015c-.012-.133-.039-.199-.082-.333-.031-.102-.088-.193-.166-.267-.049-.045-.115-.068-.183-.064h-.021c-.071.006-.13.041-.186.132-.064.077-.105.171-.12.27-.027.108-.035.219-.023.331v.014c.012.135.037.201.081.334.045.134.097.2.165.268.011.009.021.018.034.024-.07.057-.117.07-.176.136-.037.028-.08.06-.131.068-.104-.125-.196-.26-.275-.402-.096-.21-.146-.438-.155-.667-.017-.226.011-.452.08-.668.055-.197.152-.379.283-.535.128-.133.26-.2.418-.2zm1.371 1.706c.331 0 .732.065 1.215.399.293.2.523.269 1.053.468h.003c.255.136.405.266.478.399v-.131c.073.147.078.318.016.47-.123.311-.516.644-1.064.843v.002c-.268.135-.501.333-.775.465-.276.135-.588.292-1.012.267-.152.008-.305-.015-.448-.067-.11-.06-.218-.126-.322-.198-.195-.135-.363-.332-.612-.465v-.005h-.005c-.4-.246-.616-.512-.686-.711-.069-.268-.005-.469.193-.6.224-.135.38-.271.483-.336.104-.074.143-.102.176-.131h.002v-.003c.169-.202.436-.469.839-.601.139-.036.294-.065.466-.065zm2.799 2.143c.359 1.417 1.197 3.475 1.736 4.473.286.534.855 1.659 1.102 3.024.156-.005.329.018.513.064.646-1.671-.546-3.467-1.089-3.966-.221-.201-.232-.335-.123-.335.589.534 1.365 1.572 1.646 2.757.129.535.159 1.104.021 1.67.067.028.135.061.205.067 1.032.534 1.413.938 1.23 1.537v-.043c-.061-.003-.12 0-.181 0h-.015c.151-.467-.182-.825-1.065-1.224-.915-.4-1.646-.336-1.771.465-.007.043-.012.066-.017.135-.068.023-.139.053-.209.064-.43.268-.662.669-.793 1.187-.13.533-.17 1.156-.205 1.869v.003c-.021.334-.171.838-.319 1.351-1.5 1.072-3.58 1.538-5.349.334-.111-.193-.246-.374-.402-.533-.074-.125-.168-.237-.275-.334.182 0 .338-.029.465-.067.145-.067.257-.188.314-.334.108-.267 0-.697-.345-1.163-.345-.467-.931-.995-1.788-1.521-.63-.399-.986-.87-1.15-1.396-.165-.534-.143-1.085-.015-1.645.245-1.07.873-2.11 1.274-2.763.107-.065.037.135-.408.974-.396.751-1.141 2.497-.122 3.854.038-.989.258-1.965.647-2.876.564-1.278 1.743-3.504 1.836-5.268.048.036.217.135.289.202.218.133.38.333.59.465.211.201.477.335.876.335.039.003.075.006.111.006.411 0 .729-.134.996-.268.29-.134.521-.334.74-.4h.005c.467-.135.836-.402 1.045-.7zm2.186 8.958c.037.601.343 1.245.882 1.377.588.134 1.434-.333 1.791-.765l.211-.009c.315-.008.577.01.847.267l.003.003c.208.199.305.531.391.876.085.401.154.78.409 1.066.486.527.645.906.636 1.14l.003-.006v.018l-.003-.012c-.015.262-.185.396-.498.595-.63.401-1.746.712-2.457 1.57-.618.737-1.371 1.139-2.036 1.191-.664.053-1.237-.2-1.574-.898l-.005-.003c-.21-.401-.12-1.025.056-1.69.176-.668.428-1.345.463-1.898.037-.714.076-1.335.195-1.814.12-.465.308-.797.641-.984l.045-.022zm-10.815.049h.01c.053 0 .105.005.157.014.376.055.706.333 1.023.752l.91 1.664.003.003c.243.533.754 1.064 1.189 1.638.434.598.77 1.131.729 1.57v.006c-.057.744-.479 1.148-1.125 1.294-.645.135-1.52.002-2.395-.464-.968-.536-2.118-.469-2.857-.602-.369-.066-.611-.201-.723-.401-.111-.199-.113-.601.123-1.23v-.003l.002-.003c.117-.334.03-.753-.027-1.119-.055-.401-.083-.709.043-.94.16-.334.396-.399.689-.533.295-.135.641-.202.916-.469h.002v-.003c.256-.268.445-.601.668-.838.19-.201.38-.336.663-.336zm7.159-9.074c-.435.201-.945.535-1.488.535-.542 0-.97-.267-1.279-.466-.155-.134-.28-.268-.374-.335-.164-.134-.144-.334-.074-.334.109.016.129.135.199.201.096.066.215.199.361.333.291.2.68.467 1.166.467.485 0 1.053-.267 1.398-.466.195-.135.445-.334.648-.467.156-.137.149-.268.279-.268.129.016.034.134-.147.333-.181.135-.461.335-.69.468v-.001zm-1.082-1.584V5.64c-.006-.019.013-.042.029-.05.074-.043.18-.027.26.004.063 0 .16.067.15.135-.006.049-.085.066-.135.066-.055 0-.092-.043-.141-.068-.052-.018-.146-.008-.163-.065zm-.551 0c-.02.058-.113.049-.166.066-.047.025-.086.068-.139.068-.051 0-.131-.019-.137-.068-.009-.066.088-.133.15-.133.081-.031.184-.047.259-.005.019.009.036.03.03.05v.021h.003z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://www.linuxfoundation.org/about/about-linux\",hex:\"FCC624\"},\"Linux Foundation\":{title:\"Linux Foundation\",slug:\"linuxfoundation\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Linux Foundation icon</title><path d=\"M4.8 9.6v9.6h9.6V24H0V9.6h4.8zM24 0v24h-7.2v-4.8h2.4V4.8H4.8v2.4H0V0h24z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://www.linuxfoundation.org/about/about-linux\",hex:\"009BEE\"},LiveJournal:{title:\"LiveJournal\",slug:\"livejournal\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>LiveJournal icon</title><path d=\"M18.09 14.696c-1.512.664-2.726 1.885-3.381 3.399l4.27.883-.886-4.282h-.003zM2.475 8.317L0 5.85C1.125 3.237 3.216 1.14 5.823 0h.006l2.469 2.463c1.368-.591 2.876-.921 4.463-.921C18.967 1.542 24 6.569 24 12.771 24 18.973 18.967 24 12.761 24 6.551 24 1.52 18.976 1.52 12.771c0-1.591.355-3.081.952-4.451l9.143 9.114c1.125-2.613 3.218-4.71 5.823-5.85l-9.135-9.12h-.008c-2.606 1.14-4.695 3.24-5.823 5.85l.003.003z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://www.livejournal.com\",hex:\"00B0EA\"},Livestream:{title:\"Livestream\",slug:\"livestream\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Livestream icon</title><path d=\"M20.987 6.248l.041.002.039.006.04.011.039.015.038.02.039.022.035.03.035.029.037.045.046.045.03.045.044.045.075.119.029.06.029.075.03.074.031.074.028.074.029.09.029.09.03.09.031.089.029.104.028.104.031.105.03.104.029.104.029.104.03.12.03.118.029.135.015.12.029.134.03.134.017.135.028.149.015.148.015.149.031.149.015.149.016.148.015.165.015.164.015.163.015.165.015.164.016.179.015.343.016.179.015.179.015.18.015.18.015.193.015.193.015.193.016.195.015.193v.388l.016.209.015.209v.403l.015.208v.611l.015.419.015.625v1.269l.015.373.03.269.046.179.043.119.047.104.059.09.045.044.045.045.044.045.062.029.089.046.089.029.096.03.142.029.193.011.269-.016h.1v2.253l-.239.029-.566.026-.61-.029-.448-.067-.344-.089-.254-.089-.237-.119-.236-.15-.208-.184-.134-.134-.136-.149-.17-.269-.15-.313-.119-.342-.082-.403-.054-.456-.015-.508v-1.938l-.015-.418v-.865l-.015-.402v-.287l-.016-.199v-.397l-.015-.194v-.193l-.008-.193-.015-.194-.014-.179-.003-.18-.015-.179-.015-.183v-.178l-.015-.18-.017-.179-.012-.179-.014-.17-.017-.17-.015-.164-.015-.169-.015-.16-.014-.163-.015-.164-.017-.15-.015-.148-.016-.158-.015-.141-.015-.135-.044-.278-.016-.134-.015-.135-.03-.125-.026-.135-.029-.118-.03-.12-.031-.119-.034-.103-.029-.104-.025-.103-.045-.09-.029-.104-.029-.089-.022-.09-.029-.089-.031-.09-.03-.074-.029-.076-.029-.074-.03-.059-.03-.061-.029-.06-.044-.06-.03-.045-.036-.045-.031-.044-.041-.03-.028-.029-.046-.03-.028-.015-.046-.016-.049-.012-.044-.016-.03-.015h-.03 2.552l-.051.031zM.008 3.082l1.169.021 1.089.026.97.015.851.03.73.029.642.029.567.03.506.029.463.046.418.044.387.046.357.044.329.046.313.044.283.061.27.059.252.059.24.06.223.06.209.06.194.075.194.059.179.074.163.076.166.074.148.074.164.074.148.09.135.09.135.09.119.088.119.09.119.09.119.09.104.09.104.104.104.09.105.104.09.104.09.104.104.105.09.104.09.104.074.104.09.105.074.119.074.104.074.119.075.12.074.119.074.12.06.119.061.119.074.119.06.119.06.119.06.119.06.12.045.118.048.12.06.135.05.118.06.135.06.119.044.119.061.135.054.135.044.119.051.134.045.12.045.133.045.135.045.135.045.134.044.135.03.134.045.135.039.135.029.133.039.135.029.135.041.134.029.134.045.135.029.119.045.135v.014l.029.12.031.127.029.134.029.135.03.119.03.135.029.133.045.12.029.134.03.119.03.135.029.119.029.119.03.12.03.119.029.12.03.119.03.119.029.119.029.119.03.119.03.119.014.12.03.104.046.223.029.105.029.104.03.104.022.104.029.104.016.104.029.104.03.104.015.104.029.105.03.09.03.097.015.089.03.09.015.09.015.089.015.09.015.075.016.09.015.085.016.075.014.074.016.078.024.074.015.074.015.075.015.068.016.06.023.074.023.061.016.065.015.06.016.06.015.06.015.06.015.06.015.045.03.051.015.045.015.045.016.044.029.046.015.044.038.075.015.038.03.061.015.029.015.03.015.029.016.03.015.015.015.015.015.015.016.015.015.016.029.016.016.004.015.015h.03-7.027l-.051-.015-.057-.016-.057-.014-.06-.016-.06-.015h-.016l-.052-.024-.056-.015-.057-.031-.061-.03-.044-.029-.06-.03-.045-.029-.061-.03-.044-.045-.044-.045-.061-.045-.045-.045-.06-.044-.06-.06-.06-.056-.044-.06-.061-.054-.06-.045-.06-.06-.061-.06-.044-.06-.062-.005-.059-.06-.045-.068-.054-.065-.119-.148-.059-.075-.045-.074-.061-.09-.059-.074-.061-.09-.06-.075-.06-.088-.06-.09-.06-.09-.061-.09-.059-.09-.061-.09-.06-.089-.06-.104-.059-.09-.046-.104-.06-.105-.06-.104-.06-.105-.061-.104-.059-.104-.06-.104-.06-.104-.061-.104-.059-.104-.061-.104-.059-.104-.061-.119-.06-.12-.06-.119-.061-.12-.059-.119-.061-.119-.059-.119-.06-.119-.135-.028-.049-.126-.059-.123-.061-.123-.059-.125-.064-.125-.06-.127-.06-.119-.064-.119-.06-.119-.063-.119-.06-.119-.06-.15-.06-.134-.063-.119-.063-.12-.06-.134-.063-.119-.061-.135-.06-.119-.06-.135-.06-.134-.06-.134-.058-.134-.059-.135-.061-.119-.059-.134-.059-.133-.059-.135-.06-.135-.06-.134-.119-.268-.06-.149-.06-.12-.059-.134-.061-.12-.06-.119-.073-.118-.06-.135-.074-.12-.06-.118-.074-.12-.061-.119-.059-.12-.06-.119-.06-.119-.059-.137-.12-.239-.06-.119-.061-.119-.074-.119-.074-.119-.135-.229-.058-.119-.074-.11-.076-.12-.059-.112-.061-.104-.125-.208-.074-.106-.061-.103-.058-.105-.061-.089-.06-.105-.063-.104-.066-.09-.059-.09-.074-.09-.076-.088-.059-.089-.075-.09-.088-.117-.067-.076-.069-.078-.059-.074-.058-.1-.074-.074-.066-.06-.075-.069-.062-.065-.075-.081-.065-.06-.065-.06-.068-.058-.067-.053-.069-.045-.07-.045L.672 3.4l-.075-.046-.06-.044-.074-.044-.067-.03-.068-.03-.07-.03-.071-.03-.068-.031-.059-.023L0 3.086h.008v-.004z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://livestream.com/press\",hex:\"CF202E\"},LLVM:{title:\"LLVM\",slug:\"llvm\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>LLVM icon</title><path d=\"M20.83 2.976l-.085.095a16.246 16.246 0 00-1.19 1.487 5.773 5.773 0 00-.446.719 2.88 2.88 0 00-.249.597.497.497 0 00-.033.177v.004a.297.297 0 00-.21.29.3.3 0 00.187.284c.038.371.08 1.142.07 2.2l-.004.142a8.002 8.002 0 01-.434 2.327c-.016-.01-.03-.014-.04-.013-.03.003-.111.12-.19.251-.058.09-.119.195-.154.291a.37.37 0 00-.03.14.249.249 0 00.01.088c.01.037.022.058.022.058a6.837 6.837 0 01-.003.007.144.144 0 00-.028.067l-.012.029a6.837 6.837 0 01-.258.527l-.077.142a6.837 6.837 0 01-.07.115.157.157 0 00-.022-.014.16.16 0 00-.113.024c-.047.035-.151.194-.498.368-.118.059-.226.093-.32.114a14.102 14.102 0 00.248-2.07 5.072 5.072 0 00-.064-1.057c.003-.01.003-.017.003-.017l-.005.01a4.345 4.345 0 00-.104-.458 3.554 3.554 0 00-.724-1.385c-.631-.754-1.496-1.14-2.256-1.165l-.125-.002c0-.008 0-.015.002-.022.021-.098.024-.127-.087-.032a.872.872 0 00-.057.054c-.053.001-.101.004-.146.007a.716.716 0 01-.003-.108c.004-.076.024-.127-.087-.032a.553.553 0 00-.142.167c-.05.008-.08.015-.08.015l.045-.002-.047.008c-.016-.042-.053-.105-.048-.16.01-.118.043-.14-.037-.065-.098.09-.202.226-.22.299l-.096.03c-.018-.018-.074-.07-.086-.178-.013-.11-.012-.166-.08-.051a1.14 1.14 0 00-.13.349c-.032.015-.063.03-.093.046a.27.27 0 01-.057-.173c-.005-.144.04-.261-.067-.068a1.634 1.634 0 00-.146.406c-.036.025-.071.051-.105.079a2.7 2.7 0 01-.008-.17c-.002-.142.021-.295-.067-.025-.026.079-.053.192-.07.321-.404.385-.65.917-.644 1.572v.007c-.001.117.005.228.014.33.02.238.057.438.107.605-.095.13-.103.689-.01.818.073.104.496.35.586.399a.367.367 0 01.094.093c.115.188.115.567.027.762-.107.238.107.285.285.32.178.036.415-.023.463-.118.047-.095-.154-.309-.237-.748-.084-.439.13-.474.13-.474s.095.024.237.249c.11.175.227.313.336.413a.727.727 0 01-.201.172c.12.005.24-.051.304-.087a.77.77 0 00.071.045 1.015 1.015 0 01-.05.05.506.506 0 00.108-.022.295.295 0 00.084.022c.155.012.57-.368.57-.439 0-.018-.015-.04-.038-.063-.042-.045-.12-.1-.207-.177a1.03 1.03 0 01-.11-.116.723.723 0 01-.141-.374v-.01l-.003-.031s.007-.007.016-.02v.004l.004-.01c.052-.08.15-.379-.47-1.078a3.045 3.045 0 00-.924-.706c-.042-.472.15-.913.626-1.13l-.005.005.008-.006c.227-.102.517-.155.877-.136.69.036 1.22.359 1.59.845.514.712.738 1.78.575 2.856-.068.065-.055.075-.013.077a4.616 4.616 0 01-.055.273l-.027.015c-.123.074-.071.073 0 .092l-.006.02c-.02.065-.043.13-.066.193a.956.956 0 00-.087.03c-.135.053-.08.06-.012.091l.044.022c-.032.08-.066.16-.101.237a.746.746 0 00-.08.017c-.142.036-.088.05-.024.09a.52.52 0 01.04.027 6.784 6.784 0 01-.107.214.76.76 0 00-.153.025c-.14.036-.087.05-.023.09.034.02.06.041.081.059a8.022 8.022 0 01-.095.165l-.023.036a.59.59 0 00-.206.024c-.142.036-.088.05-.024.09a.67.67 0 01.104.079 8.61 8.61 0 01-.126.18.514.514 0 00-.23-.005c-.144.02-.092.04-.033.086.068.053.101.099.118.118l-.062.084c-.044-.058-.149-.124-.246-.193a.85.85 0 00-.29-.13c-.048 0-.199.268-1.017.197-.819-.071-.87-.15-.942-.15-.07 0-.223.057-.228.059l-.034-.02a11.031 11.031 0 01-.972-.674c-.464-.37-.72-.647-.72-.647s.137-.125-.047-.284a3.32 3.32 0 00-.338-.277 2.157 2.157 0 00-.242-.166 3.57 3.57 0 01-.088-.127 11.486 11.486 0 01-.363-.628 10.456 10.456 0 01-.25-.527c-.16-.36-.27-.682-.346-.964a5.621 5.621 0 01-.148-.923 2.257 2.257 0 01.004-.242.411.411 0 00.158-.323.411.411 0 00-.358-.407c-.204-.427-.982-1.477-3.882-3.68l-.127-.098.005.004-.036-.027c2.954 2.53 3.53 3.519 3.682 3.932a.411.411 0 00-.027.033 18.692 18.692 0 00-.018-.013c.018 0 .025-.005.025-.005s-.672-.546-1.787-1.23c-1.119-.687-1.749-.849-1.88-.877l-.027-.006s.206.19.174.285c-.01.032-.168.022-.421.028a3.948 3.948 0 00-.725.07 4.1 4.1 0 00-1.567.63C.237 7.783-.001 8.4-.001 8.4s.55-.768 1.58-1.305c-.014.337-.047 1.969.445 4.12.531 2.32 1.531 4.487 1.614 4.665.004.178.016.272.016.272s.148-1.79.756-3.647c.175.283.758 1.117 2.076 2.096 1.628 1.21 2.37 1.536 2.4 1.548.001.157.005.24.005.24s.005-.1.018-.263c.044-.065.298-.43.552-.67a3.58 3.58 0 01.54-.435c.032.11.063.204.093.276-.02-.097-.036-.19-.052-.282.107.01.538.066 1.206.393.343.168.609.395.798.595a.167.167 0 00-.014.006s.123.112.269.403a2.416 2.416 0 00-.73.084 2.913 2.913 0 00-.098-.189.484.484 0 00-.039-.135c-.027-.061-.095-.1-.164-.14a.397.397 0 00-.104-.073.225.225 0 01-.055-.073c-.084-.184-.798.012-.942.18-.175.204-.209.464-.14.608.021.045.07.082.138.11.002.221.137.75.404 1.134a4.964 4.964 0 01-.108-.667c-.009-.16 0-.274.015-.35.047.328.174.684.577 1.125-.248-.54-.22-.862-.195-1.144l.009-.044.006-.001c.036.263.142.534.482.964a.412.412 0 01-.014-.028l.014.021a1.626 1.626 0 01-.167-1.03l.008-.003c.046.03.091.07.134.126.128.172.188.349.212.47a.528.528 0 00.067.384c-.245.179-.485.346-.72.501-.23.149-.49.313-.757.47-.14.08-.279.158-.414.23l-.135-.077h.002l-.008-.004c-.97-.559-1.69-.932-2.518-1.082-.931-.167-1.787.283-1.983 1.082a1.284 1.284 0 00.552 1.38l.012.008c.013.01.026.017.04.026l.06.036h.002c.192.11.424.191.691.237l.028.005h.006a3.5 3.5 0 00.412.044c.975.047 2.156-.408 3.323-.982.1.054.202.108.306.166 2.547 1.403 4.098 1.585 6.154.728-.502.151-1.208.356-2.094.344a.05.05 0 00-.02-.006l.001.006a5.461 5.461 0 01-.648-.05v-.001l-.03-.003v-.003a.267.267 0 00-.001.002 6.25 6.25 0 01-1.556-.436 7.793 7.793 0 01-.745-.362 57.07 57.07 0 01-1.006-.569c.348-.178.692-.363 1.026-.545.355-.189.672-.362.918-.5l.009-.004.007-.001s.083-.018.16-.042c.17-.052.41-.149.695-.283.028.117.095.215.195.253.235.091.407.027.522-.102l.018-.01.047-.037c.05-.03.107-.067.156-.09a1.14 1.14 0 01.053-.022c.04-.01.078-.023.116-.037l.033-.01c-.145.297-.091.581-.091.581.043-.371.22-.608.392-.715.064-.027.13-.05.2-.067.064 0 .116.023.144.07.07.12.217.194.364.226.024.15-.045.404-.4.866l.09-.062.004-.003.072-.053c.143-.108.252-.21.334-.305a.97.97 0 00.191-.305c.012.2-.043.507-.311 1.036 0 0 .317-.276.514-.63.006.191-.01.443-.063.785.345-.673.325-1.085.239-1.326l-.01-.036a.433.433 0 00-.01-.065l.042-.057c.118-.166-.048-.344-.154-.415-.06-.04-.2-.154-.454-.157-.225-.27-.51-.15-.958.145a1.297 1.297 0 01-.166.093.725.725 0 00-.055-.117c.16-.096.326-.199.494-.308.317-.207.553-.416.728-.615.51-.517.69-1.02 1.21-1.446l-.013.001.06-.032c.854-.458 1.307-.547 1.339-.553l-.003.128.018-.125a1.795 1.795 0 01.481.344 2.12 2.12 0 01.362.487l.044.301s0-.117-.01-.33c.153-.152 1.02-1.044 1.724-2.467.694-1.404.944-2.523 1.017-2.924a18.19 18.19 0 01.665 2.466s-.002-.133-.031-.374c.097-.336.516-1.872.627-3.756.1-1.681-.065-2.78-.14-3.174.648.537.995 1.307.995 1.307s-.04-.163-.188-.437l.02.027s-.236-.455-.644-.905a6.45 6.45 0 00-.157-.172c-.432-.459-.854-.617-1.17-.672-.1-.02-.203-.03-.308-.03h-.019c-.125-.003-.201.002-.207-.026-.02-.095.11-.285.11-.285s-.177.046-.554.33c-.23.167-.52.41-.853.76a13.69 13.69 0 00-.89.995l-.075.095a.203.203 0 00-.023-.017c.076-.331.362-1.118 1.788-3.112zM11.92 14.09a.351.351 0 01.012.006l-.012-.006zm-.263 2.606c.088.044.19.106.303.194h-.005a.484.484 0 00-.155.07.956.956 0 01-.126-.224l-.017-.04zm-4.855 1.57c.132 0 .276.014.432.048l.02.005.017.004c.11.027.223.062.337.102l.057.021c.191.074.395.156.611.248.32.139.619.277.838.375l.183.088c-.221.106-.424.196-.577.261-1.014.416-1.83.536-2.338.391-.945-.269-.76-1.536.42-1.542z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://llvm.org/Logo.html\",hex:\"262D3A\"},Logstash:{title:\"Logstash\",slug:\"logstash\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Logstash icon</title><path d=\"M12.6 7.2V24c-5.2 0-10.8-4-10.8-9.3V0h3.6c3.8 0 7.2 3.4 7.2 7.2zm2.4 6V24h7.2V13.2z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.elastic.co/brand\",hex:\"005571\"},Loop:{title:\"Loop\",slug:\"loop\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Loop icon</title><path d=\"M12,0C5.371,0,0,5.371,0,12s5.371,12,12,12s12-5.371,12-12C24.011,5.371,18.629,0,12,0z M12.7,22.611 C6.837,22.611,2.089,17.863,2.089,12S6.837,1.389,12.7,1.389S23.311,6.137,23.311,12S18.563,22.611,12.7,22.611z M7.045,3.413 c-4.747,2.735-6.366,8.795-3.632,13.542c2.735,4.737,8.806,6.366,13.542,3.632c4.747-2.735,6.366-8.806,3.632-13.542 C17.852,2.297,11.792,0.678,7.045,3.413z M16.868,19.034c-4.08,2.352-9.287,0.952-11.639-3.118 c-2.352-4.08-0.952-9.287,3.118-11.639c4.08-2.352,9.287-0.952,11.639,3.118C22.337,11.464,20.948,16.682,16.868,19.034z  M5.229,8.084c-2.166,3.741-0.875,8.532,2.866,10.687c3.741,2.166,8.532,0.875,10.698-2.866s0.875-8.532-2.866-10.687 C12.175,3.063,7.384,4.343,5.229,8.084z M18.071,14.702c-1.827,3.161-5.863,4.244-9.025,2.417 c-3.161-1.827-4.244-5.863-2.418-9.025s5.863-4.244,9.025-2.418C18.815,7.493,19.898,11.541,18.071,14.702z M6.093,12 c0,3.271,2.647,5.918,5.918,5.918s5.918-2.647,5.918-5.918s-2.647-5.918-5.918-5.918C8.74,6.082,6.093,8.729,6.093,12z  M16.704,11.3c0,2.593-2.1,4.693-4.693,4.693s-4.693-2.1-4.693-4.693s2.1-4.693,4.693-4.693C14.593,6.607,16.704,8.707,16.704,11.3 z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://loop.frontiersin.org/\",hex:\"F29400\"},Lua:{title:\"Lua\",slug:\"lua\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Lua icon</title><path d=\"M.38 10.377l-.272-.037c-.048.344-.082.695-.101 1.041l.275.016c.018-.34.051-.682.098-1.02zM4.136 3.289l-.184-.205c-.258.232-.509.48-.746.734l.202.188c.231-.248.476-.49.728-.717zM5.769 2.059l-.146-.235c-.296.186-.586.385-.863.594l.166.219c.27-.203.554-.399.843-.578zM1.824 18.369c.185.297.384.586.593.863l.22-.164c-.205-.271-.399-.555-.58-.844l-.233.145zM1.127 16.402l-.255.104c.129.318.274.635.431.943l.005.01.245-.125-.005-.01c-.153-.301-.295-.611-.421-.922zM.298 9.309l.269.063c.076-.332.168-.664.272-.986l-.261-.087c-.108.332-.202.672-.28 1.01zM.274 12.42l-.275.01c.012.348.04.699.083 1.043l.273-.033c-.042-.336-.069-.68-.081-1.02zM.256 14.506c.073.34.162.682.264 1.014l.263-.08c-.1-.326-.187-.658-.258-.99l-.269.056zM11.573.275L11.563 0c-.348.012-.699.039-1.044.082l.034.273c.338-.041.68-.068 1.02-.08zM23.221 8.566c.1.326.186.66.256.992l.27-.059c-.072-.34-.16-.682-.262-1.014l-.264.081zM17.621 1.389c-.309-.164-.627-.314-.947-.449l-.107.252c.314.133.625.281.926.439l.128-.242zM15.693.572c-.332-.105-.67-.199-1.01-.277l-.063.268c.332.076.664.168.988.273l.085-.264zM6.674 1.545c.298-.15.606-.291.916-.418L7.486.873c-.317.127-.632.272-.937.428l-.015.008.125.244.015-.008zM23.727 11.588l.275-.01a11.797 11.797 0 0 0-.082-1.045l-.273.033c.041.338.068.682.08 1.022zM13.654.105c-.346-.047-.696-.08-1.043-.098l-.014.273c.339.018.683.051 1.019.098l.038-.273zM9.544.527l-.058-.27c-.34.072-.681.16-1.014.264l.081.262c.325-.099.659-.185.991-.256zM1.921 5.469l.231.15c.185-.285.384-.566.592-.834l-.217-.17c-.213.276-.417.563-.606.854zM.943 7.318l.253.107c.132-.313.28-.625.439-.924l-.243-.128c-.163.307-.314.625-.449.945zM18.223 21.943l.145.234c.295-.186.586-.385.863-.594l-.164-.219c-.272.204-.557.4-.844.579zM21.248 19.219l.217.17c.215-.273.418-.561.607-.854l-.23-.148c-.186.285-.385.564-.594.832zM19.855 20.715l.184.203c.258-.23.51-.479.746-.732l-.201-.188c-.23.248-.477.488-.729.717zM22.359 17.504l.244.129c.162-.307.314-.625.449-.945l-.254-.107a11.27 11.27 0 0 1-.439.923zM23.617 13.629l.273.039c.049-.346.082-.695.102-1.043l-.275-.014c-.018.338-.051.682-.1 1.018zM23.156 15.621l.264.086c.107-.332.201-.67.279-1.01l-.268-.063c-.077.333-.169.665-.275.987zM22.453 6.672c.154.303.297.617.424.932l.256-.104c-.131-.322-.277-.643-.436-.953l-.244.125zM8.296 23.418c.331.107.67.201 1.009.279l.062-.268c-.331-.076-.663-.168-.986-.273l-.085.262zM10.335 23.889c.345.049.696.082 1.043.102l.014-.275c-.339-.018-.682-.051-1.019-.098l-.038.271zM17.326 22.449c-.303.154-.613.297-.926.424l.104.256c.318-.131.639-.275.947-.434l.004-.002-.123-.246-.006.002zM4.613 21.467c.274.213.562.418.854.605l.149-.23c-.285-.184-.565-.385-.833-.592l-.17.217zM12.417 23.725l.009.275c.348-.014.699-.041 1.045-.084l-.035-.271c-.336.041-.68.068-1.019.08zM6.37 22.604c.307.162.625.314.946.449l.107-.254c-.313-.133-.624-.279-.924-.439l-.129.244zM3.083 20.041c.233.258.48.51.734.746l.188-.201c-.249-.23-.49-.477-.717-.729l-.205.184zM14.445 23.475l.059.27c.34-.074.68-.162 1.014-.266l-.082-.262c-.325.099-.659.185-.991.258zM21.18.129A2.689 2.689 0 1 0 21.18 5.507 2.689 2.689 0 1 0 21.18.129zM15.324 15.447c0 .471.314.66.852.66.67 0 1.297-.396 1.297-1.016v-.645c-.23.107-.379.141-1.107.24-.735.109-1.042.306-1.042.761zM12 2.818c-5.07 0-9.18 4.109-9.18 9.18 0 5.068 4.11 9.18 9.18 9.18 5.07 0 9.18-4.111 9.18-9.18 0-5.07-4.11-9.18-9.18-9.18zm-2.487 13.77H5.771v-6.023h.769v5.346h2.974v.677zm4.13 0h-.619v-.67c-.405.57-.811.793-1.446.793-.843 0-1.38-.463-1.38-1.182v-3.271h.686v3c0 .52.347.85.893.85.719 0 1.181-.578 1.181-1.461v-2.389h.686v4.33zm-.53-8.393c0-1.484 1.205-2.689 2.689-2.689s2.688 1.205 2.688 2.689-1.203 2.688-2.688 2.688-2.689-1.203-2.689-2.688zm5.567 7.856v.52c-.223.059-.33.074-.471.074-.34 0-.637-.238-.711-.57-.381.406-.918.637-1.471.637-.877 0-1.422-.463-1.422-1.248 0-.527.256-.916.76-1.123.266-.107.414-.141 1.389-.264.545-.066.719-.191.719-.48v-.182c0-.412-.348-.645-.967-.645-.645 0-.957.24-1.016.77h-.693c.041-1 .686-1.404 1.734-1.404 1.066 0 1.627.412 1.627 1.182v2.412c0 .215.133.338.373.338.041-.002.074-.002.149-.017z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.lua.org/docs.html\",hex:\"2C2D72\"},Lufthansa:{title:\"Lufthansa\",slug:\"lufthansa\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Lufthansa icon</title><path d=\"M24,12c0-6.648-5.352-12-12-12C5.376,0,0,5.352,0,12c0,6.624,5.376,12,12,12C18.648,24,24,18.624,24,12z M23.136,12c0,6.12-4.992,11.136-11.136,11.136C5.88,23.136,0.864,18.121,0.864,12C0.864,5.856,5.88,0.864,12,0.864 C18.144,0.864,23.136,5.856,23.136,12z M16.248,11.28c-0.264,0-0.6,0-1.032,0.024l0.312-0.528h0.504c1.8,0,3.144,0.096,4.368,0.312 l0.552-0.528c-1.368-0.24-3.024-0.384-4.704-0.384H15.84l0.264-0.504h0.456c1.752,0,3.336,0.144,4.872,0.432l0.576-0.552 c-1.728-0.336-3.576-0.503-5.568-0.503c-0.849,0.003-1.698,0.043-2.544,0.12c-0.96,2.063-2.496,3.264-4.224,3.24 C9,12.384,8.159,12.097,7.08,11.52l-1.008-0.576l0.312-0.288l2.328,1.008l0.504-0.384L4.512,9.144l-0.72,0.552L2.112,9l0.024,0.696 c2.256,1.032,3.192,1.608,5.568,3.312c3.096,2.208,5.856,3.408,9.696,4.176l1.008-0.96h-0.24c-2.544,0-4.824-0.84-6.144-2.256 c1.104-0.672,2.471-0.983,4.368-0.983c0.504,0,1.224,0.047,1.896,0.119l0.576-0.552c-0.9-0.11-1.805-0.166-2.712-0.168 c-0.609-0.001-1.217,0.023-1.824,0.072l0.432-0.528c0.511-0.03,1.024-0.046,1.536-0.048c1.272,0,2.112,0.048,3.072,0.192 l0.552-0.528C18.912,11.377,17.52,11.28,16.248,11.28z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.lufthansa.com/\",hex:\"05164D\"},Lumen:{title:\"Lumen\",slug:\"lumen\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Lumen icon</title><path d=\"M11.652 0a.75.75 0 0 0-.342.072l-4.878 2.23a.75.75 0 1 0 .624 1.366l4.878-2.23A.75.75 0 0 0 11.652 0zm5.624.354a.75.75 0 0 0-.341.074L6.428 5.306a.75.75 0 0 0 .632 1.362L17.566 1.79a.75.75 0 0 0-.29-1.436zm0 3.002a.75.75 0 0 0-.341.074L6.428 8.308A.75.75 0 0 0 7.06 9.67l10.506-4.88a.75.75 0 0 0-.29-1.435zm0 3.002a.75.75 0 0 0-.341.074L6.428 11.31a.75.75 0 0 0 .632 1.361l10.506-4.878a.75.75 0 0 0-.29-1.435zm.009 3.002a.75.75 0 0 0-.342.07l-3.753 1.688a.75.75 0 0 0-.442.685v3.518a.75.75 0 0 0 .001.047h-1.503a.75.75 0 0 0 0-.047v-2.58a.75.75 0 0 0-.761-.761.75.75 0 0 0-.74.761v2.58a.75.75 0 0 0 .002.047h-.94a.461.461 0 0 0-.47.555l.19 1.14a.687.687 0 0 0 .656.556h2.28l-2.537.476a.375.375 0 1 0 .139.737l6.003-1.126a.375.375 0 0 0 .307-.41.625.625 0 0 0 .092-.232l.19-1.141a.461.461 0 0 0-.47-.555h-.94a.75.75 0 0 0 .002-.047v-3.033l3.31-1.49a.75.75 0 0 0-.274-1.438zm-2.292 9.384a.375.375 0 0 0-.063.007l-6.004 1.126a.375.375 0 1 0 .139.737l6.003-1.125a.375.375 0 0 0-.075-.745zm0 1.876a.375.375 0 0 0-.063.008l-6.004 1.125a.375.375 0 1 0 .139.737l6.003-1.125a.375.375 0 0 0-.075-.745zm-.743 1.876a.375.375 0 0 0-.064.006l-4.471.751a.375.375 0 1 0 .124.74l4.472-.75a.375.375 0 0 0-.061-.747z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://lumen.laravel.com/\",hex:\"E74430\"},Lyft:{title:\"Lyft\",slug:\"lyft\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Lyft icon</title><path d=\"M24 11.122v-3.512h-1.253c-0.524-2.76-3.424-4.575-6.34-3.483-1.624 0.606-2.944 2.546-2.944 4.282v7.981h0.14c0.003 0 0.003 0 0.006 0s0.003 0 0.006 0c0.904-0.038 1.75-0.421 2.38-1.077 0.632-0.659 0.981-1.522 0.981-2.432h1.463v-3.515h-1.463v-0.966c0-0.375 0.199-0.726 0.527-0.907 0.899-0.501 1.815 0.143 1.815 0.995v3.22c0 1.273 0.48 2.456 1.352 3.331 0.834 0.834 1.964 1.314 3.179 1.352 0 0 0.003 0 0.003 0s0 0 0.003 0v0h0.143v-3.512c0 0 0 0 0 0-0.656-0.003-1.171-0.53-1.171-1.171v-0.585zM3.512 13.463v-9.366h-3.512v8.78c0 2.412 1.592 3.512 3.073 3.512v0c0.442 0 0.884-0.102 1.279-0.287 0.059-0.026 0.152-0.085 0.152-0.085s-0.088-0.094-0.126-0.135c-0.562-0.641-0.866-1.472-0.866-2.42zM9.073 12.375c0 0.146-0.070 0.287-0.19 0.369-0.471 0.331-0.981-0.003-0.981-0.451v-4.683h-3.512v5.854c0 1.613 1.314 2.927 2.927 2.927 0.697 0 1.373-0.249 1.902-0.702-0.056 0.433-0.293 0.79-0.691 1.039-0.372 0.234-0.858 0.357-1.402 0.357-0.562 0-1.133-0.132-1.651-0.38 0 0-0.094-0.044-0.211-0.111v3.12c0.781 0.316 1.639 0.483 2.467 0.483 1.311 0 2.508-0.41 3.372-1.156 0.969-0.834 1.481-2.055 1.481-3.527v-7.902h-3.512z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.lyft.com/press\",hex:\"FF00BF\"},\"Macy’s\":{title:\"Macy’s\",slug:\"macys\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Macy’s icon</title><path d=\"M12.015.624L9.19 9.293H0l7.445 5.384-2.819 8.673L12 17.986l7.422 5.393-2.835-8.713L24 9.292h-9.162L12.015.622v.002z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://www.macysinc.com/press-room/logo-photo-gallery/logos-macys-inc/default.aspx\",hex:\"E21A2C\"},Magento:{title:\"Magento\",slug:\"magento\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Magento icon</title><path d=\"M12 24l-4.455-2.572v-12l2.97-1.715v12.001l1.485.902 1.485-.902V7.713l2.971 1.715v12L12 24zM22.391 6v12l-2.969 1.714V7.713L12 3.43 4.574 7.713v12.001L1.609 18V6L12 0l10.391 6z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://magento.com\",hex:\"EE672F\"},Magisk:{title:\"Magisk\",slug:\"magisk\",svg:'<svg xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" viewBox=\"0 0 24 24\"><title>Magisk icon</title><path d=\"M10.857 14.458s.155.921-.034 2.952c-.236 2.546.97 6.59.97 6.59s1.645-4.052 1.358-6.67c-.236-2.152.107-2.904.034-2.803-1.264 1.746-2.328-.069-2.328-.069zM13.939 16.643c.206 1.591-.023 2.462-.32 4.164-.15.861 3.068-2.589 4.302-4.645.206-.343-1.18 1.337-2.551.137-.951-.832-1.114-1.085-1.853-1.808-.249-.244.277 1.014.423 2.151zM10.427 14.618c-.739.723-.903.976-1.853 1.808-1.371 1.2-2.757-.48-2.551-.137 1.234 2.057 4.452 5.506 4.302 4.645-.297-1.703-.526-2.574-.32-4.164.147-1.137.673-2.395.423-2.151zM13.593 11.779c1.504.434 2.088 2.523 3.606 2.781.314.053.667.148 1.079.128.77-.037 1.744-.472 3.045-2.318.385-.546-.955 3.514-4.313 3.563-2.46.036-2.747-2.408-4.387-2.482-.592-.027-.629-1.156-.629-1.156s.706-.774 1.598-.517zM10.407 11.767c-1.504.434-2.088 2.523-3.606 2.781-.314.053-.667.148-1.079.128-.77-.037-1.744-.472-3.045-2.318-.385-.546.955 3.514 4.313 3.563 2.46.036 2.747-2.408 4.387-2.482.592-.027.629-1.156.629-1.156s-.706-.774-1.598-.517zM16.033 11.747c1.513 1.146 1.062 2.408 1.911 2.048 2.859-1.212 2.359-7.434 2.128-6.682-1.303 4.242-4.143 4.48-6.876 2.528-.534-.381 1.985 1.459 2.837 2.105zM10.793 9.641C8.06 11.592 5.22 11.355 3.917 7.113c-.231-.752-.731 5.469 2.128 6.682.849.36.398-.902 1.911-2.048.852-.646 3.371-2.486 2.837-2.105zM16.319 10.225c3.3-.136 3.909-5.545 3.65-4.885-1.165 2.963-5.574 1.848-5.995 3.718-.083.367.747 1.233 2.345 1.167zM10.015 9.058c-.421-1.87-4.831-.755-5.995-3.718-.259-.66.35 4.749 3.65 4.885 1.599.066 2.428-.8 2.345-1.167zM13.768 8.234s1.794-.964 3.33-1.384c1.435-.393 2.512-1.359 2.631-2.38.089-.76-1.11-2.197-1.11-2.197s-.841 2.334-1.945 3.501c-1.201 1.27-.745 1.099-2.906 2.46zM7.315 5.774C6.211 4.607 5.37 2.273 5.37 2.273S4.171 3.709 4.26 4.47c.12 1.021 1.196 1.987 2.631 2.38 1.536.421 3.33 1.384 3.33 1.384-2.162-1.361-1.705-1.19-2.906-2.46zM13.55 8.086c1.943-1.594 2.976-3.673 4.657-5.949.317-.429-1.419-1.465-2.105-1.533S14.84 3.057 14.775 4.54c-.059 1.354-1.486 3.761-1.224 3.547zM9.214 4.539C9.149 3.056 8.573.535 7.887.603S5.465 1.707 5.782 2.136c1.681 2.276 2.713 4.356 4.657 5.949.261.214-1.165-2.193-1.224-3.547zM13.745 2.937c.137-1.098.631-1.9 1.613-2.574-.868-.29-1.591-.526-1.968-.217s-1.403 1.342-1.266 3.023.007 7.962.305 7.846c.16-4.302 1.522-5.538 1.316-8.077zM11.559 11.014c.297.116.167-6.165.305-7.846S10.976.454 10.598.145C10.221-.164 9.499.072 8.63.362c.983.674 1.476 1.476 1.613 2.574-.206 2.539 1.156 3.775 1.316 8.077z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/topjohnwu/Magisk/blob/master/app/src/main/res/drawable/ic_magisk.xml\",hex:\"00AF9C\"},MailChimp:{title:\"MailChimp\",slug:\"mailchimp\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>MailChimp icon</title><path d=\"M17.98 11.341c.165-.021.332-.021.497 0 .089-.205.104-.558.024-.942-.12-.571-.28-.917-.613-.863-.333.054-.346.468-.226 1.039.067.321.186.596.319.766zM15.12 11.793c.239.105.385.174.442.114.037-.038.026-.11-.03-.203-.118-.193-.36-.388-.617-.497a1.677 1.677 0 0 0-1.634.196c-.16.117-.31.28-.29.378.008.032.031.056.087.064.132.015.591-.217 1.12-.25.374-.023.684.094.922.199zm-.48.274c-.31.05-.481.152-.591.247-.094.082-.152.173-.152.237l.024.057.051.02c.07 0 .228-.064.228-.064a1.975 1.975 0 0 1 1-.104c.155.018.23.028.263-.026.01-.015.023-.049-.008-.1-.073-.118-.387-.317-.814-.266zM17.015 13.073c.21.104.442.063.518-.09.076-.155-.034-.364-.245-.467-.21-.104-.442-.063-.518.09-.076.155.034.364.245.467zm1.355-1.186c-.171-.003-.314.185-.317.421-.004.235.131.428.302.431.171.003.314-.185.318-.42.003-.235-.132-.428-.303-.432zM6.866 16.13c-.042-.053-.112-.037-.18-.021a.646.646 0 0 1-.16.022.347.347 0 0 1-.292-.148c-.078-.12-.073-.299.012-.504l.04-.092c.138-.308.368-.825.11-1.317-.194-.37-.511-.602-.892-.65a1.145 1.145 0 0 0-.983.355c-.379.418-.438.988-.364 1.19.027.073.069.094.099.098.065.009.16-.038.22-.2l.017-.052c.026-.085.076-.243.157-.37a.688.688 0 0 1 .953-.2c.266.175.368.5.255.811-.059.161-.154.468-.133.72.043.512.357.717.638.74.274.01.466-.145.514-.258.03-.066.005-.107-.01-.125v.001zM22.691 15.194c-.01-.037-.078-.286-.172-.586l-.19-.51c.375-.563.381-1.066.332-1.35-.054-.353-.2-.654-.496-.964-.295-.312-.9-.63-1.75-.868l-.445-.124c-.002-.018-.023-1.053-.043-1.497-.013-.32-.041-.822-.196-1.315-.185-.669-.507-1.253-.91-1.627 1.11-1.152 1.803-2.422 1.801-3.511-.003-2.095-2.571-2.73-5.736-1.416l-.67.285a666.1 666.1 0 0 0-1.23-1.207C9.376-2.65-1.905 9.912 1.701 12.964l.789.668a3.885 3.885 0 0 0-.22 1.793c.085.84.517 1.644 1.218 2.266.665.59 1.54.965 2.389.964 1.403 3.24 4.61 5.228 8.37 5.34 4.034.12 7.42-1.776 8.84-5.182.093-.24.486-1.317.486-2.267 0-.956-.539-1.352-.882-1.352zm-16.503 2.55a1.94 1.94 0 0 1-.374.027c-1.218-.033-2.534-1.131-2.665-2.435-.145-1.44.59-2.548 1.89-2.81a2.22 2.22 0 0 1 .547-.04c.729.04 1.803.6 2.048 2.191.217 1.408-.128 2.843-1.446 3.068zm-1.36-6.08c-.81.157-1.524.617-1.96 1.252-.261-.218-.747-.64-.833-.804-.697-1.325.76-3.902 1.778-5.357C6.33 3.159 10.268.437 12.093.931c.296.084 1.278 1.224 1.278 1.224s-1.823 1.013-3.514 2.426c-2.278 1.757-3.999 4.311-5.03 7.083zm12.787 5.542a.072.072 0 0 0 .042-.071.067.067 0 0 0-.074-.06s-1.908.283-3.711-.379c.196-.639.718-.408 1.508-.344a11.01 11.01 0 0 0 3.64-.394c.816-.235 1.888-.698 2.722-1.356.28.618.38 1.298.38 1.298s.217-.039.399.073c.171.106.297.326.211.895-.175 1.063-.626 1.926-1.384 2.72a5.698 5.698 0 0 1-1.663 1.244 7.018 7.018 0 0 1-1.085.46c-2.858.935-5.784-.093-6.727-2.3a3.582 3.582 0 0 1-.19-.522c-.401-1.455-.06-3.2 1.007-4.299.065-.07.132-.153.132-.256 0-.087-.055-.178-.102-.243-.373-.542-1.666-1.466-1.406-3.254.186-1.285 1.308-2.189 2.353-2.135l.265.015c.453.027.848.085 1.222.101.624.027 1.185-.064 1.85-.619.224-.187.404-.35.708-.401.032-.005.111-.034.27-.026a.892.892 0 0 1 .456.146c.533.355.608 1.215.636 1.845.016.36.059 1.228.074 1.478.034.57.183.65.486.75.17.057.329.099.562.164.705.199 1.123.4 1.387.659.158.161.23.333.253.497.084.608-.47 1.359-1.938 2.041-1.605.746-3.55.935-4.895.785l-.471-.053c-1.076-.145-1.689 1.247-1.044 2.201.416.615 1.55 1.015 2.683 1.015 2.6 0 4.598-1.111 5.341-2.072l.06-.085c.036-.055.006-.085-.04-.054-.607.416-3.304 2.069-6.19 1.571 0 0-.35-.057-.67-.182-.254-.099-.786-.344-.85-.891 2.328.721 3.793.039 3.793.039zm-3.688-.436l.001.001v-.002zM9.473 6.74c.895-1.036 1.996-1.936 2.982-2.441.034-.017.07.02.052.053-.079.142-.23.447-.277.677a.04.04 0 0 0 .061.042c.614-.419 1.681-.868 2.618-.925.04-.003.06.049.027.074-.154.119-.293.258-.411.413a.04.04 0 0 0 .031.064c.657.005 1.584.235 2.188.575.04.023.012.102-.034.092-.914-.21-2.41-.37-3.964.01-1.387.339-2.446.862-3.218 1.425-.04.029-.086-.023-.055-.06z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://mailchimp.com/about/brand-assets\",hex:\"FFE01B\"},\"Mail.Ru\":{title:\"Mail.Ru\",slug:\"mail-dot-ru\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Mail.Ru icon</title><path d=\"M11.585 5.267c1.834 0 3.558.811 4.824 2.08v.004c0-.609.41-1.068.979-1.068h.145c.891 0 1.073.842 1.073 1.109l.005 9.475c-.063.621.64.941 1.029.543 1.521-1.564 3.342-8.038-.946-11.79-3.996-3.497-9.357-2.921-12.209-.955-3.031 2.091-4.971 6.718-3.086 11.064 2.054 4.74 7.931 6.152 11.424 4.744 1.769-.715 2.586 1.676.749 2.457-2.776 1.184-10.502 1.064-14.11-5.188C-.977 13.521-.847 6.093 5.62 2.245 10.567-.698 17.09.117 21.022 4.224c4.111 4.294 3.872 12.334-.139 15.461-1.816 1.42-4.516.037-4.498-2.031l-.019-.678c-1.265 1.256-2.948 1.988-4.782 1.988-3.625 0-6.813-3.189-6.813-6.812 0-3.659 3.189-6.885 6.814-6.885zm4.561 6.623c-.137-2.653-2.106-4.249-4.484-4.249h-.09c-2.745 0-4.268 2.159-4.268 4.61 0 2.747 1.842 4.481 4.256 4.481 2.693 0 4.464-1.973 4.592-4.306l-.006-.536z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://corp.mail.ru/en/press/identity/\",hex:\"168DE2\"},MakerBot:{title:\"MakerBot\",slug:\"makerbot\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>MakerBot icon</title><path d=\"M23.055 7.328c-.604-1.428-1.47-2.714-2.569-3.813C19.382 2.414 18.1 1.551 16.672.944 15.189.315 13.619 0 12 0c-1.62 0-3.19.318-4.672.945-1.428.604-2.711 1.47-3.813 2.57C2.414 4.615 1.551 5.9.943 7.328.315 8.81 0 10.38 0 12c0 1.619.318 3.189.945 4.671.604 1.429 1.47 2.714 2.569 3.814 1.103 1.1 2.386 1.964 3.813 2.57C8.81 23.686 10.38 24 12 24c1.619 0 3.189-.314 4.671-.944 1.429-.601 2.711-1.471 3.814-2.564 1.1-1.095 1.964-2.386 2.57-3.811.63-1.47.944-3.045.944-4.665 0-1.619-.314-3.18-.944-4.664v-.024zM12 22.335C6.293 22.335 1.665 17.707 1.665 12S6.293 1.665 12 1.665 22.335 6.293 22.335 12 17.707 22.335 12 22.335zm3.242-18.214H8.757c-.922 0-1.7.324-2.333.975-.635.644-.953 1.425-.953 2.334v10.182c0 .449.135.81.4 1.095.267.269.615.42 1.051.42.445 0 .805-.135 1.079-.405.272-.271.409-.63.409-1.08V7.08h2.141v10.529c0 .445.131.806.391 1.08.259.273.611.411 1.059.411.446 0 .799-.138 1.059-.411.26-.274.39-.635.39-1.08V7.08h2.142v10.529c0 .445.135.806.408 1.08.275.273.635.411 1.08.411.435 0 .783-.141 1.05-.423.268-.28.401-.638.401-1.069V7.426c0-.91-.318-1.688-.953-2.336-.633-.648-1.41-.975-2.334-.975v.006z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://www.makerbot.com/makerbot-press-assets\",hex:\"FF1E0D\"},ManageIQ:{title:\"ManageIQ\",slug:\"manageiq\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>ManageIQ icon</title><path d=\"M12.096.1l-.001.001A11.547 11.547 0 00.538 11.658c0 2.069.548 4.005 1.496 5.683l2.869-2.867a7.676 7.676 0 01-.54-2.816c0-4.261 3.47-7.73 7.732-7.73 4.261 0 7.732 3.469 7.732 7.73 0 4.262-3.47 7.732-7.732 7.732a7.67 7.67 0 01-2.6-.459L6.597 21.83a11.514 11.514 0 005.499 1.388c2.316 0 4.468-.686 6.275-1.856l2.393 2.392L24 20.512l-2.349-2.349a11.51 11.51 0 002-6.505C23.651 5.368 18.644.26 12.393.1c-.08-.003-.18 0-.297 0zm-.001 9.34c-1.226 0-2.215.991-2.215 2.217 0 1.225.99 2.216 2.215 2.216a2.215 2.215 0 100-4.432zm-4.241 3.368l-.214.214L0 20.662l3.239 3.24 7.855-7.856z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.manageiq.org/logo/\",hex:\"EF2929\"},Manjaro:{title:\"Manjaro\",slug:\"manjaro\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Manjaro icon</title><path d=\"M0 0v24h6.75V6.75h8.625V0H0zm8.625 8.625V24h6.75V8.625h-6.75zM17.25 0v24H24V0h-6.75z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://commons.wikimedia.org/wiki/File:Manjaro-logo.svg\",hex:\"35BF5C\"},Mapbox:{title:\"Mapbox\",slug:\"mapbox\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Mapbox icon</title><path d=\"M12 0C5.372 0 0 5.372 0 12s5.372 12 12 12 12-5.372 12-12S18.628 0 12 0zm5.696 14.943c-4.103 4.103-11.433 2.794-11.433 2.794S4.94 10.421 9.057 6.304c2.281-2.281 6.061-2.187 8.45.189s2.471 6.168.189 8.45zm-4.319-7.91l-1.174 2.416-2.416 1.174 2.416 1.174 1.174 2.416 1.174-2.416 2.416-1.174-2.416-1.174-1.174-2.416z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.mapbox.com/about/press/brand-guidelines\",hex:\"000000\"},Markdown:{title:\"Markdown\",slug:\"markdown\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Markdown icon</title><path d=\"M22.269 19.385H1.731a1.73 1.73 0 0 1-1.73-1.73V6.345a1.73 1.73 0 0 1 1.73-1.73h20.538a1.73 1.73 0 0 1 1.73 1.73v11.308a1.73 1.73 0 0 1-1.73 1.731zm-16.5-3.462v-4.5l2.308 2.885 2.307-2.885v4.5h2.308V8.078h-2.308l-2.307 2.885-2.308-2.885H3.461v7.847zM21.231 12h-2.308V8.077h-2.307V12h-2.308l3.461 4.039z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/dcurtis/markdown-mark\",hex:\"000000\"},Marketo:{title:\"Marketo\",slug:\"marketo\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Marketo icon</title><path d=\"M16.146 0v24l6.134-4.886V3.334zM13.293 18.758l-4.939 2.157V2.086l4.939 1.462zM1.721 18.205l3.78-.999V5.188l-3.762-.606z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.marketo.com/\",hex:\"5C4C9F\"},MasterCard:{title:\"MasterCard\",slug:\"mastercard\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>MasterCard icon</title><path d=\"M11.343 18.031c.058.049.12.098.181.146-1.177.783-2.59 1.238-4.107 1.238C3.32 19.416 0 16.096 0 12c0-4.095 3.32-7.416 7.416-7.416 1.518 0 2.931.456 4.105 1.238-.06.051-.12.098-.165.15C9.6 7.489 8.595 9.688 8.595 12c0 2.311 1.001 4.51 2.748 6.031zm5.241-13.447c-1.52 0-2.931.456-4.105 1.238.06.051.12.098.165.15C14.4 7.489 15.405 9.688 15.405 12c0 2.31-1.001 4.507-2.748 6.031-.058.049-.12.098-.181.146 1.177.783 2.588 1.238 4.107 1.238C20.68 19.416 24 16.096 24 12c0-4.094-3.32-7.416-7.416-7.416zM12 6.174c-.096.075-.189.15-.28.231C10.156 7.764 9.169 9.765 9.169 12c0 2.236.987 4.236 2.551 5.595.09.08.185.158.28.232.096-.074.189-.152.28-.232 1.563-1.359 2.551-3.359 2.551-5.595 0-2.235-.987-4.236-2.551-5.595-.09-.08-.184-.156-.28-.231z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://brand.mastercard.com/brandcenter/mastercard-brand-mark/downloads.html\",hex:\"EB001B\"},Mastodon:{title:\"Mastodon\",slug:\"mastodon\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Mastodon icon</title><path d=\"M23.193 7.879c0-5.206-3.411-6.732-3.411-6.732C18.062.357 15.108.025 12.041 0h-.076c-3.068.025-6.02.357-7.74 1.147 0 0-3.411 1.526-3.411 6.732 0 1.192-.023 2.618.015 4.129.124 5.092.934 10.109 5.641 11.355 2.17.574 4.034.695 5.535.612 2.722-.15 4.25-.972 4.25-.972l-.09-1.975s-1.945.613-4.129.539c-2.165-.074-4.449-.233-4.799-2.891a5.499 5.499 0 0 1-.048-.745s2.125.52 4.817.643c1.646.075 3.19-.097 4.758-.283 3.007-.359 5.625-2.212 5.954-3.905.517-2.665.475-6.507.475-6.507zm-4.024 6.709h-2.497V8.469c0-1.29-.543-1.944-1.628-1.944-1.2 0-1.802.776-1.802 2.312v3.349h-2.483v-3.35c0-1.536-.602-2.312-1.802-2.312-1.085 0-1.628.655-1.628 1.944v6.119H4.832V8.284c0-1.289.328-2.313.987-3.07.68-.758 1.569-1.146 2.674-1.146 1.278 0 2.246.491 2.886 1.474L12 6.585l.622-1.043c.64-.983 1.608-1.474 2.886-1.474 1.104 0 1.994.388 2.674 1.146.658.757.986 1.781.986 3.07v6.304z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://source.joinmastodon.org/mastodon/joinmastodon/blob/master/public/press-kit.zip\",hex:\"3088D4\"},\"Material Design\":{title:\"Material Design\",slug:\"materialdesign\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Material Design icon</title><path d=\"M12 0C5.377 0 0 5.377 0 12s5.377 12 12 12 12-5.377 12-12S18.623 0 12 0zm0 .75c2.871 0 5.482 1.082 7.469 2.85H4.53A11.197 11.197 0 0 1 12 .75zm-7.186 3.6h14.372L12 18.723 4.814 4.35zM3.6 4.53V19.47A11.197 11.197 0 0 1 .75 12c0-2.87 1.082-5.481 2.85-7.468zm16.8 0A11.197 11.197 0 0 1 23.25 12c0 2.871-1.082 5.482-2.85 7.469V4.53zM4.35 5.1l7.275 14.55H4.35V5.1zm15.3 0v14.55h-7.275L19.651 5.1zM4.533 20.4H19.469A11.197 11.197 0 0 1 12 23.25a11.197 11.197 0 0 1-7.468-2.85z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://material.io/design/\",hex:\"757575\"},Mathworks:{title:\"Mathworks\",slug:\"mathworks\",svg:'<svg xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" viewBox=\"0 0 24 24\"><title>Mathworks icon</title><path d=\"M4.323 16.248C3.13 15.354 1.64 14.31 0 13.118l5.814-2.236 2.385 1.789c-1.789 2.087-2.981 2.832-3.876 3.578zm15.95-6.26c-.447-1.193-.745-2.385-1.193-3.578-.447-1.342-.894-2.534-1.64-3.578-.298-.447-.894-1.491-1.64-1.491-.149 0-.298.149-.447.149-.447.149-1.043 1.043-1.193 1.64-.447.745-1.342 1.938-1.938 2.683-.149.298-.447.596-.596.745-.447.298-.894.745-1.491 1.043-.149 0-.298.149-.447.149-.447 0-.745.298-1.043.447-.447.447-.894 1.043-1.342 1.491 0 .149-.149.298-.298.447l2.236 1.64c1.64-1.938 3.578-3.876 4.919-7.602 0 0-.447 4.025-4.025 8.348-2.236 2.534-4.025 3.876-4.323 4.174 0 0 .596-.149 1.193.149 1.193.447 1.789 2.087 2.236 3.279.298.894.745 1.64 1.043 2.534 1.193-.298 1.938-.745 2.683-1.491s1.491-1.64 2.236-2.385c1.342-1.64 2.981-3.727 5.068-2.683.298.149.745.447.894.596.447.298.745.596 1.193 1.043.745.596 1.043 1.043 1.64 1.342-1.491-2.981-2.534-5.963-3.727-9.093z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.mathworks.com/brand/visual-design/mathworks-logo.html\",hex:\"0076A8\"},Matrix:{title:\"Matrix\",slug:\"matrix\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Matrix icon</title><path d=\"M.632.55v22.9H2.28V24H0V0h2.28v.55zm7.043 7.26v1.157h.033c.309-.443.683-.784 1.117-1.024.433-.245.936-.365 1.5-.365.54 0 1.033.107 1.481.314.448.208.785.582 1.02 1.108.254-.374.6-.706 1.034-.992.434-.287.95-.43 1.546-.43.453 0 .872.056 1.26.167.388.11.716.286.993.53.276.245.489.559.646.951.152.392.23.863.23 1.417v5.728h-2.349V11.52c0-.286-.01-.559-.032-.812a1.755 1.755 0 0 0-.18-.66 1.106 1.106 0 0 0-.438-.448c-.194-.11-.457-.166-.785-.166-.332 0-.6.064-.803.189a1.38 1.38 0 0 0-.48.499 1.946 1.946 0 0 0-.231.696 5.56 5.56 0 0 0-.06.785v4.768h-2.35v-4.8c0-.254-.004-.503-.018-.752a2.074 2.074 0 0 0-.143-.688 1.052 1.052 0 0 0-.415-.503c-.194-.125-.476-.19-.854-.19-.111 0-.259.024-.439.074-.18.051-.36.143-.53.282-.171.138-.319.337-.439.595-.12.259-.18.6-.18 1.02v4.966H5.46V7.81zm15.693 15.64V.55H21.72V0H24v24h-2.28v-.55z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://matrix.org\",hex:\"000000\"},Mattermost:{title:\"Mattermost\",slug:\"mattermost\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Mattermost icon</title><path d=\"M12.081 0C7.048-.034 2.339 3.125.637 8.153c-2.125 6.276 1.24 13.086 7.516 15.21 6.276 2.125 13.086-1.24 15.21-7.516 1.727-5.1-.172-10.552-4.311-13.557l.126 2.547c2.065 2.282 2.88 5.512 1.852 8.549-1.534 4.532-6.594 6.915-11.3 5.321-4.708-1.593-7.28-6.559-5.745-11.092 1.031-3.046 3.655-5.121 6.694-5.67l1.642-1.94A4.87 4.87 0 0 0 12.08 0zm3.528 1.094a.284.284 0 0 0-.123.024l-.004.001a.33.33 0 0 0-.109.071c-.145.142-.657.828-.657.828L13.6 3.4l-1.3 1.585-2.232 2.776s-1.024 1.278-.798 2.851c.226 1.574 1.396 2.34 2.304 2.648.907.307 2.302.408 3.438-.704 1.135-1.112 1.098-2.75 1.098-2.75l-.087-3.56-.07-2.05-.047-1.775s.01-.856-.02-1.057a.33.33 0 0 0-.035-.107l-.006-.012-.007-.011a.277.277 0 0 0-.229-.14z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.mattermost.org/brand-guidelines/\",hex:\"0072C6\"},Matternet:{title:\"Matternet\",slug:\"matternet\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Matternet icon</title><path d=\"M19.229 4.18l-4.066 2.327V1.826L11.993 0 8.827 1.83v4.677L4.78 4.17 1.606 6v3.664L5.657 12l-4.054 2.343V18l3.165 1.831 4.044-2.338v4.681L11.983 24l3.174-1.831v-4.676l4.052 2.327 3.173-1.829v-3.646L18.339 12l4.058-2.336V6l-3.164-1.82h-.004zm.373 3.429V5.715l1.639.942v1.905l-1.636-.953h-.003zm1.638 9.286l-6.075-3.504 1.65-.945L21.239 15v1.896l.001-.001zm-6.827-3.95L12.763 12l6.452-3.726 1.641.944-6.446 3.727h.003zM3.134 9.219l1.641-.944L11.228 12l-1.639.945-6.455-3.726zm5.69 4.17l-6.075 3.508V15l4.435-2.555 1.641.945v-.001zM2.749 8.564V6.66l1.64-.945v1.898l-1.64.951zm9.627 0V1.55l1.641.937V7.61l-1.641.953v.001zm-2.402-.96V2.493l1.64-.944v7.004l-1.64-.949zm8.866-1.889v1.898l-6.456 3.734V9.442l6.456-3.727zm-7.228 3.724v1.897L5.153 7.609V5.715l6.46 3.721-.001.003zm-2.403 6.513l-4.435 2.555-1.64-.944 6.074-3.508v1.897zm.765-2.343l1.64-.945v7.453l-1.64.959v-7.467zm3.656 8.115l-1.639.954-1.64-.951 1.64-.946 1.639.946v-.003zm.394-.657l-1.648-.95v-7.441l1.648.944v7.458-.011zm6.831-3.504l-1.641.944-4.425-2.555v-1.897l6.075 3.508h-.009z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://mttr.net\",hex:\"261C29\"},McAfee:{title:\"McAfee\",slug:\"mcafee\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>McAfee icon</title><path d=\"M12 4.843L1.608.033v19.124L12 23.967l10.392-4.81V.033zm6.155 11.594l-6.126 2.835-6.127-2.835V6.704l6.127 2.834 6.126-2.834z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.mcafee.com/\",hex:\"C01818\"},\"MDN Web Docs\":{title:\"MDN Web Docs\",slug:\"mdnwebdocs\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>MDN Web Docs icon</title><path d=\"M0 0v24h24V0zm10.564 4.969c.667-.047 1.001.066 1.59.242l.436.13.152.046.557.17c.365.099.748.105 1.115.017a2.033 2.033 0 011.48.174c.409.233.684.648.737 1.115.048.413.288.78.648.989.537.293 1.096.538 1.672.736.407.156.815.331 1.219.488.2.077.377.203.514.37a.87.87 0 01.197.49c.025.359.068.722.086 1.084h-.002c.028.5-.08.997-.317 1.439-.087.165-.183.321-.263.486a.616.616 0 01-.635.367.417.417 0 00-.277.09c-.246.161-.497.32-.75.471-.35.193-.77.216-1.141.06a5.36 5.36 0 00-1.908-.351 2.11 2.11 0 00-1.7.775 2.62 2.62 0 00-.38.77c-.223.55-.414 3.838-.414 4.676 0 0-3.161-.615-6.13-3.653l.774-2.03H5.4l1.754-1.856H4.14l1.752-1.858H3.029l3.188-3.383a7.349 7.349 0 013.549-1.95c.318-.055.576-.089.798-.104z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://developer.mozilla.org/\",hex:\"000000\"},MediaFire:{title:\"MediaFire\",slug:\"mediafire\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>MediaFire icon</title><path d=\"M11.13 7.171c-.496.42 2.943-.458 2.6 1.239-.332 1.633-3.62-.343-7.223-.176-1.594.073-3.054.53-3.985 1.668.973-1.108 2.901-.844 2.398-.081-1.172 1.776-3.376.497-4.92 3.975.185-.4.685-1.196 2.843-1.526 1.586-.242 4.214-.016 5.054 1.297.924 1.444-3.759 1.28-1.167 1.573 3.593.406 6.299 3.31 9.813 3.311 4.55 0 7.422-2.324 7.457-6.146.063-6.923-9.101-8.318-12.87-5.134zm6.768 7.554c-1.195-.033-2.404-.512-3.364-.98-2.365-1.155-3.338-1.553-3.338-1.608 0-.067 1.42.484 3.813-.789 1.383-.735 1.432-1.377 2.89-1.505 1.73-.152 2.962 1.13 2.962 2.478 0 1.349-1.222 2.453-2.963 2.404z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.mediafire.com/press/\",hex:\"1299F3\"},MediaTemple:{title:\"MediaTemple\",slug:\"mediatemple\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>MediaTemple icon</title><path d=\"M4.839 10.145v.57h.034c1.021-.615 2.07-.666 2.7-.666 1.695 0 2.28.479 2.49.66.39-.225 1.229-.676 2.685-.676 2.896 0 2.896 1.141 2.896 1.59v2.7H13.32v-2.384c0-.494 0-1.045-1.24-1.045-.612 0-1.242.187-1.463.46-.206.234-.291.446-.291.964v2.021H8.001v-2.303c0-.711.015-1.14-1.206-1.14-.615 0-1.242.162-1.48.405-.186.185-.307.379-.307.996v2.04H2.67v-4.2h2.16l.009.008zm16.431.929h-1.69v1.68c0 .593 0 .786.691.786.328 0 .618-.037.929-.096l.07-.009.22.854c-.817.15-1.711.166-1.966.166-.76 0-1.742-.111-2.105-.425-.309-.255-.346-.506-.346-1.141v-1.82h-1.145v-.877h1.144v-.827l2.52-.65v1.479h1.696v.877l-.018.003zM1.54 16.71C.615 15.313 0 13.65 0 11.979 0 10.005.775 8.4 1.561 7.27h.936c-.695 1.54-1.168 2.85-1.168 4.752 0 2.182.774 3.865 1.125 4.627.012 0 .034.045.034.061H1.54zm20.919-9.42C23.385 8.688 24 10.35 24 12.021c0 1.971-.776 3.58-1.561 4.709h-.936c.694-1.541 1.17-2.85 1.17-4.752 0-2.184-.777-3.863-1.129-4.629-.012-.01-.031-.049-.031-.06h.946z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://mediatemple.net/company/about-us\",hex:\"000000\"},Medium:{title:\"Medium\",slug:\"medium\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Medium icon</title><path d=\"M0 0v24h24V0H0zm19.938 5.686L18.651 6.92a.376.376 0 0 0-.143.362v9.067a.376.376 0 0 0 .143.361l1.257 1.234v.271h-6.322v-.27l1.302-1.265c.128-.128.128-.165.128-.36V8.99l-3.62 9.195h-.49L6.69 8.99v6.163a.85.85 0 0 0 .233.707l1.694 2.054v.271H3.815v-.27L5.51 15.86a.82.82 0 0 0 .218-.707V8.027a.624.624 0 0 0-.203-.527L4.019 5.686v-.27h4.674l3.613 7.923 3.176-7.924h4.456v.271z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://medium.design/logos-and-brand-guidelines-f1a01a733592\",hex:\"12100E\"},Meetup:{title:\"Meetup\",slug:\"meetup\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Meetup icon</title><path d=\"M6.9805.5547a.518.518 0 00-.1055.0117c-.2873.0619-.4704.3437-.4082.6309.0619.2868.344.47.6309.4082a.5327.5327 0 00.4082-.6328c-.0542-.251-.2782-.4206-.5254-.418zm6.455.6387a.9836.9836 0 00-.5136.1425c-.4698.2818-.6237.8898-.3418 1.3594.2822.4696.8919.6216 1.3613.3399.4698-.2821.6217-.8901.3399-1.3594a.9919.9919 0 00-.8458-.4824zm-3.0292 2.2363c-.9744.0047-1.9565.292-2.8204.8887-.8745.6041-1.4965 1.436-1.8476 2.3593-.5085.0689-1.0096.239-1.461.5508-1.4918 1.0307-1.886 3.0391-.9394 4.5625-1.2846 1.1762-1.5815 3.1356-.6055 4.6485.579.897 1.4882 1.437 2.4649 1.5976.018.732.238 1.466.6855 2.1133 1.224 1.7709 3.6526 2.2157 5.4238.9922.0677-.047.1198-.1061.1836-.1563.9872.8809 2.4708 1.0255 3.6075.2403.6065-.4189.9929-1.0292 1.162-1.6914.8895.0326 1.7956-.1935 2.584-.7383 1.8916-1.3067 2.3995-3.8615 1.1895-5.789.9713-.819 1.1798-2.2514.4336-3.3087-.3327-.4718-.8028-.7806-1.3164-.9336.0752-.984-.1704-1.9979-.7754-2.873-1.1792-1.7058-3.3327-2.3315-5.1953-1.6563a5.1058 5.1058 0 00-2.7735-.8066zm-5.6036.8164a.7589.7589 0 00-.4238.1348c-.3447.2383-.4317.7097-.1934 1.0546.2384.3447.7116.4317 1.0567.1934a.7574.7574 0 00.1933-1.0547.7581.7581 0 00-.6328-.3281zM20.797 6.617a.8419.8419 0 00-.4707.1505.8453.8453 0 101.1758.2148.8452.8452 0 00-.7051-.3652zm-8.1504 1.0274c.0629.0004.1244.0053.1816.0137.2286.0336.3655.119.4512.1875.1682.1342.2726.2412.4316.3926.2394.2275.4132.089.5332.0195.208-.1209.3692-.2181.9844-.207.6332.011 1.3626.2366 1.5137 1.3164.1682 1.1994-1.9656 4.2891-1.8164 5.7226.1054 1.0103 1.8146.2987 1.959 1.2207.1872 1.197-2.1353.752-2.666.4922-.832-.4077-1.337-1.3399-1.1211-2.2597.1612-.6882 1.7-3.4979 1.7578-3.9297.0587-.4404-.1773-.477-.3242-.4844-.1895-.0098-.3394.0808-.5254.3613-.1692.2558-2.082 4.0856-2.248 4.3985-.2969.5594-.6698.6938-1.045.6738-.5472-.0285-.7978-.3206-.7188-.8477.0467-.31 1.2594-3.0491 1.3223-3.4765.0387-.2643-.0132-.5452-.2754-.6797-.2625-.1346-.5713.0704-.664.2266-.128.2154-1.8482 4.7065-2.0313 5.039-.3168.576-.6508.7594-1.1523.7832-1.1862.0562-2.0656-.919-1.6778-2.1152.173-.5328 1.3159-4.5716 1.8946-5.5996C7.799 8.2015 8.8782 7.676 9.627 8c.3878.1679.9252.4377 1.084.5078.366.1622.7594-.2776.914-.4121.1549-.1345.3017-.2765.4902-.3574.1412-.0605.3426-.0947.5313-.0938zm10.8808 2.0567a.4683.4683 0 00-.0937.0117.4671.4671 0 00-.3594.5547.4696.4696 0 00.5567.3594c.2523-.0546.414-.3044.3593-.5567a.4696.4696 0 00-.4629-.3691zm-22.5195.8105a.9972.9972 0 00-.832.4336c-.3123.4553-.1977 1.0784.2578 1.3906.4555.3123 1.0783.1956 1.3906-.2597s.1977-1.0765-.2578-1.3887a.9992.9992 0 00-.5586-.1758zm21.295 2.0938a.635.635 0 00-.127.0136.6268.6268 0 00-.4805.7461.6278.6278 0 00.7461.4825c.3393-.0733.5558-.407.4824-.7461a.6295.6295 0 00-.621-.4961zM4.0624 18.703a.453.453 0 00-.0918.0117c-.2507.0543-.4117.3018-.3574.5528.054.251.302.4097.5527.3554a.4644.4644 0 00.3555-.5527.4655.4655 0 00-.459-.3672zm13.6758 1.5508a1.0444 1.0444 0 00-.584.1856c-.4758.3287-.5945.9813-.2656 1.457.3288.4756.9809.5943 1.457.2656.4758-.3287.5945-.9814.2656-1.457a1.0444 1.0444 0 00-.873-.4512zm-6.338 1.9004a.6427.6427 0 00-.3593.1152.6456.6456 0 00-.164.8985.6457.6457 0 00.8984.164.6456.6456 0 00.164-.8984.646.646 0 00-.539-.2793Z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.meetup.com/media/\",hex:\"ED1C40\"},MEGA:{title:\"MEGA\",slug:\"mega\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>MEGA icon</title><path d=\"M12 0C5.372 0 0 5.372 0 12s5.372 12 12 12 12-5.372 12-12S18.628 0 12 0zm6.23 16.244a.371.371 0 0 1-.373.372H16.29a.371.371 0 0 1-.372-.372v-4.828c0-.04-.046-.06-.08-.033l-3.32 3.32a.742.742 0 0 1-1.043 0l-3.32-3.32c-.027-.027-.08-.007-.08.033v4.828a.371.371 0 0 1-.372.372H6.136a.371.371 0 0 1-.372-.372V7.757c0-.206.166-.372.372-.372h1.076a.75.75 0 0 1 .525.22l4.13 4.13a.18.18 0 0 0 .26 0l4.13-4.13c.14-.14.325-.22.525-.22h1.075c.206 0 .372.166.372.372z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://en.wikipedia.org/wiki/File:01_mega_logo.svg\",hex:\"D9272E\"},Mendeley:{title:\"Mendeley\",slug:\"mendeley\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Mendeley icon</title><path d=\"M11.973 9.191h.019a2.349 2.349 0 011.5 4.155 1.803 1.803 0 01-.854.451 2.342 2.342 0 01-.647.092h-.019c-.224 0-.441-.033-.647-.092a1.808 1.808 0 01-.854-.451 2.34 2.34 0 01-.849-1.806 2.352 2.352 0 012.351-2.349m-9.948 9.45c1.262.158 2.382-.76 2.501-2.052a2.438 2.438 0 00-.213-1.233c-1.768-3.879 6.955-3.968 5.481-.307l-.01.016c-.697 1.115-.319 2.563.839 3.232.426.248.898.35 1.359.33.461.02.933-.082 1.359-.33 1.158-.67 1.536-2.117.839-3.232l-.01-.016c-1.474-3.661 7.25-3.572 5.48.307a2.44 2.44 0 00-.212 1.233c.12 1.292 1.239 2.21 2.502 2.052a2.339 2.339 0 001.421-.735s.587-.487.578-1.729c-.008-1.013-.578-1.574-.578-1.574a2.206 2.206 0 00-1.81-.644c-1.619-.036-1.859-1.304-1.402-3.694.168-.424.241-.878.226-1.332a3.408 3.408 0 00-2.125-3.287c-.039-.017-.078-.03-.118-.046a1.51 1.51 0 00-.134-.046 3.407 3.407 0 00-3.994 1.449c-.815.895-1.184 1.438-2.022 1.438-.797 0-1.208-.543-2.022-1.438a3.404 3.404 0 00-4.127-1.404c-.04.016-.079.029-.119.046A3.407 3.407 0 003.59 8.932c-.016.454.058.908.225 1.332.457 2.391.217 3.658-1.401 3.694-.793-.085-1.385.242-1.983.841-.6.598-.55 2.2 0 2.899.399.509.94.861 1.594.943\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.mendeley.com/\",hex:\"9D1620\"},Mercedes:{title:\"Mercedes\",slug:\"mercedes\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Mercedes icon</title><path d=\"M12.005 0c6.623 0 12 5.377 12 12s-5.377 12-12 12-12-5.377-12-12 5.377-12 12-12zM3.25 17.539a10.357 10.357 0 0 0 8.755 4.821c3.681 0 6.917-1.924 8.755-4.821l-8.755-3.336-8.755 3.336zm10.663-6.641l7.267 5.915A10.306 10.306 0 0 0 22.365 12c0-5.577-4.417-10.131-9.94-10.352l1.488 9.25zm-2.328-9.25C6.062 1.869 1.645 6.423 1.645 12c0 1.737.428 3.374 1.185 4.813l7.267-5.915 1.488-9.25z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.mercedes-benz.com/\",hex:\"242424\"},Messenger:{title:\"Messenger\",slug:\"messenger\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Messenger icon</title><path d=\"M0 11.64C0 4.95 5.24 0 12 0s12 4.95 12 11.64-5.24 11.64-12 11.64c-1.21 0-2.38-.16-3.47-.46a.96.96 0 0 0-.64.05L5.5 23.92a.96.96 0 0 1-1.35-.85l-.07-2.14a.97.97 0 0 0-.32-.68A11.39 11.39 0 0 1 0 11.64zm8.32-2.19l-3.52 5.6c-.35.53.32 1.14.82.75l3.79-2.87c.26-.2.6-.2.87 0l2.8 2.1c.84.63 2.04.4 2.6-.48l3.52-5.6c.35-.53-.32-1.13-.82-.75l-3.79 2.87c-.25.2-.6.2-.86 0l-2.8-2.1a1.8 1.8 0 0 0-2.61.48z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://en.facebookbrand.com/assets/messenger/\",hex:\"00B2FF\"},Meteor:{title:\"Meteor\",slug:\"meteor\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Meteor icon</title><path d=\"M0 .234l21.912 20.537s.412.575-.124 1.151c-.535.576-1.236.083-1.236.083L0 .234zm6.508 2.058l17.01 15.638s.413.576-.123 1.152c-.534.576-1.235.083-1.235.083L6.508 2.292zM1.936 6.696l17.01 15.638s.412.576-.123 1.152-1.235.082-1.235.082L1.936 6.696zm10.073-2.635l11.886 10.927s.287.401-.087.805-.863.058-.863.058L12.009 4.061zm-8.567 7.737l11.886 10.926s.285.4-.088.803c-.375.403-.863.059-.863.059L3.442 11.798zm14.187-5.185l5.426 4.955s.142.188-.044.377c-.185.188-.428.027-.428.027l-4.954-5.358v-.001zM6.178 17.231l5.425 4.956s.144.188-.042.377-.427.026-.427.026l-4.956-5.359z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://logo.meteorapp.com/\",hex:\"DE4F4F\"},\"Micro.blog\":{title:\"Micro.blog\",slug:\"micro-dot-blog\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Micro.blog icon</title><path d=\"M21.4 17.7c-2 2.6-1 4.8-.3 5.9.3.4-.1.4-.3.4a6 6 0 0 1-4-2.7c-.2-.1-.3-.2-.5-.1-1.4.4-2.8.7-4.3.6C5.4 21.8 0 17 0 11 0 5 5.4 0 12 0s12 4.9 12 11c0 2.5-1 4.8-2.6 6.7zM12 14l3.2 2.2a.4.4 0 0 0 .6-.4L14.6 12l3.1-2.4a.4.4 0 0 0-.2-.6h-3.9l-1.3-3.8a.4.4 0 0 0-.6 0L10.4 9h-4a.4.4 0 0 0-.1.7l3 2.4-1 3.7a.4.4 0 0 0 .5.4L12 14z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://twitter.com/BradEllis/status/943956921886715904\",hex:\"FD8308\"},Microgenetics:{title:\"Microgenetics\",slug:\"microgenetics\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Microgenetics icon</title><path d=\"M12.008 6c2.595 0 4.31 1.263 5.583 2.726l.248.293c.082.101.164.2.242.3.434.569.809 1.146 1.17 1.674.24.356.465.693.689 1.008l.227.32c.074.105.148.211.24.31.928 1.171 1.889 1.9 3.283 1.991.195-.845.301-1.721.301-2.621s-.105-1.776-.301-2.621c-1.395.091-2.355.819-3.301 1.991-.18-.246-.357-.51-.555-.796-.375-.566-.809-1.208-1.32-1.845 1.006-1.169 2.25-2.175 3.932-2.557C20.453 2.49 16.523 0 12.008 0c-4.5 0-8.44 2.49-10.49 6.173 1.681.384 2.923 1.388 3.931 2.556.086.09.168.18.249.285l.237.3c.479.615.914 1.245 1.305 1.845l.555.826.24.329c.074.104.165.21.239.315 1.051 1.439 2.115 2.43 3.75 2.43 1.65 0 2.701-.99 3.765-2.43l.375.555c.451.66.932 1.38 1.455 2.055-1.273 1.471-3 2.73-5.595 2.73-2.594 0-4.304-1.275-5.579-2.73l-.24-.3-.24-.3c-.435-.57-.81-1.154-1.17-1.68-.239-.36-.465-.69-.689-1.006l-.226-.33c-.074-.104-.149-.21-.24-.314C2.664 10.2 1.703 9.465.309 9.375c-.195.849-.3 1.725-.3 2.625s.102 1.776.29 2.621c1.398-.091 2.355-.819 3.295-1.991.172.246.354.51.544.796.375.566.806 1.208 1.313 1.845-1.009 1.169-2.253 2.175-3.93 2.557C3.566 21.51 7.494 24 12.008 24c4.515 0 8.441-2.49 10.49-6.173-1.68-.384-2.922-1.388-3.93-2.556-.086-.09-.17-.18-.25-.285l-.236-.3c-.48-.615-.916-1.245-1.305-1.845L16.223 12c-.074-.111-.154-.225-.23-.33-.078-.111-.154-.219-.232-.325-1.051-1.44-2.1-2.431-3.75-2.431s-2.699.99-3.75 2.431l-.375-.56c-.436-.669-.916-1.38-1.456-2.059C7.703 7.263 9.383 6 12.008 6\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://microgenetics.co.uk/\",hex:\"FF0000\"},Microsoft:{title:\"Microsoft\",slug:\"microsoft\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Microsoft icon</title><path d=\"M11.4 24H0V12.6h11.4V24zM24 24H12.6V12.6H24V24zM11.4 11.4H0V0h11.4v11.4zm12.6 0H12.6V0H24v11.4z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://ratnacahayarina.files.wordpress.com/2014/03/microsoft.pdf\",hex:\"666666\"},\"Microsoft Access\":{title:\"Microsoft Access\",slug:\"microsoftaccess\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Microsoft Access icon</title><path d=\"M24 15.019c-.051.542-.773.975-2.165 1.29-1.392.32-3.138.479-5.24.479-.621 0-1.216-.008-1.785-.026v3.283c.569.033 1.164.053 1.785.053 2.094-.02 3.84-.205 5.234-.563s2.12-.808 2.171-1.351v-3.165zm-7.432-2.367c-.603 0-1.199-.016-1.784-.051l.026 3.345c.57.016 1.163.03 1.785.03 2.1-.015 3.848-.195 5.239-.555 1.392-.346 2.115-.795 2.165-1.335V10.86c-.051.543-.776.978-2.178 1.305-1.399.33-3.15.495-5.254.495v-.008zm0-4.122c-.603 0-1.199-.019-1.784-.053v3.335c.585.034 1.182.053 1.784.053 2.101-.019 3.855-.203 5.254-.555 1.401-.354 2.127-.803 2.178-1.346V6.759c-.051.544-.776.976-2.178 1.294-1.399.317-3.15.479-5.254.479V8.53zm0-4.627c-.603 0-1.199.025-1.784.077v3.697c.585.034 1.182.05 1.784.05 2.101-.015 3.855-.199 5.254-.548 1.402-.348 2.127-.8 2.178-1.351-.051-.542-.776-.995-2.178-1.356-1.399-.36-3.15-.54-5.254-.556v-.013zM6.474 9.111c-.032.197-.171.824-.412 1.875l-.45 1.834 1.8.025-.42-1.835c-.256-1.069-.421-1.709-.451-1.89h-.06l-.007-.009zM0 3.153v17.759l13.545 2.338V.75L0 3.153zm8.284 13.234l-.504-2.002-2.494-.09-.479 1.886-1.591-.105 2.419-8.475 1.85-.104 2.639 8.995-1.845-.105h.005z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.office.com\",hex:\"BA141A\"},\"Microsoft Azure\":{title:\"Microsoft Azure\",slug:\"microsoftazure\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Microsoft Azure icon</title><path d=\"M5.483 21.3H24L14.025 4.013l-3.038 8.347 5.836 6.938L5.483 21.3zM13.23 2.7L6.105 8.677 0 19.253h5.505v.014L13.23 2.7z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://upload.wikimedia.org/wikipedia/commons/a/a8/Microsoft_Azure_Logo.svg\",hex:\"0089D6\"},\"Microsoft Edge\":{title:\"Microsoft Edge\",slug:\"microsoftedge\",svg:'<svg xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" viewBox=\"0 0 24 24\"><title>Microsoft Edge icon</title><path d=\"M23.158 14.25H7.821c0 .578.086 1.103.262 1.575.188.465.431.881.743 1.245.31.364.675.675 1.102.938.413.262.863.48 1.343.648.476.173.975.3 1.48.383a10.078 10.078 0 0 0 3.311-.026c.564-.105 1.111-.244 1.651-.42.54-.177 1.061-.387 1.583-.627.525-.24 1.057-.502 1.605-.795v5.085c-.612.3-1.212.552-1.812.769-.6.21-1.2.394-1.81.54-.612.15-1.23.263-1.865.33a18.41 18.41 0 0 1-1.957.105c-.9 0-1.77-.105-2.606-.311a10.217 10.217 0 0 1-2.355-.893 9.869 9.869 0 0 1-2.018-1.417 8.957 8.957 0 0 1-2.595-4.148 9.359 9.359 0 0 1-.356-2.61c0-.986.135-1.924.405-2.82.274-.9.66-1.717 1.17-2.467a8.92 8.92 0 0 1 1.856-1.999A9.82 9.82 0 0 1 9.426 5.91a5.206 5.206 0 0 0-1.163 1.774 7.671 7.671 0 0 0-.536 2.055h8.542c0-.863-.086-1.613-.262-2.258-.176-.645-.458-1.181-.851-1.605-.39-.427-.893-.75-1.512-.96-.618-.214-1.365-.322-2.238-.322-1.032 0-2.063.15-3.094.461-1.031.3-2.01.731-2.94 1.275-.93.551-1.785 1.2-2.565 1.942-.78.75-1.436 1.557-1.969 2.43a14 14 0 0 1 .649-2.913C1.798 6.863 2.21 6 2.706 5.2a11.606 11.606 0 0 1 1.74-2.152c.663-.645 1.398-1.2 2.212-1.65C7.472.949 8.334.585 9.272.34A13.4 13.4 0 0 1 12.257 0c.615 0 1.226.056 1.837.165.612.113 1.208.263 1.79.458 1.154.397 2.185.952 3.093 1.657a10.553 10.553 0 0 1 2.287 2.449c.62.926 1.088 1.95 1.41 3.063.323 1.114.488 2.273.488 3.477v2.981z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://compass-ssl.microsoft.com/assets/86/b5/86b52157-162f-4130-ab00-3db03397c46d.svg?n=edge.svg\",hex:\"0078D7\"},\"Microsoft Excel\":{title:\"Microsoft Excel\",slug:\"microsoftexcel\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Microsoft Excel icon</title><path d=\"M23.553 3.102h-8.04V4.59h2.37v2.354h-2.37v.75h2.37v2.357h-2.37v.771h2.37v2.229h-2.37v.893h2.37v2.234h-2.37v.893h2.37v2.247h-2.37v1.639h8.04c.127-.038.233-.188.318-.448.085-.262.129-.475.129-.636V3.374c0-.128-.044-.205-.129-.232-.085-.026-.191-.04-.318-.04zM22.51 19.316h-3.857v-2.245h3.857v2.247-.002zm0-3.138h-3.857v-2.235h3.857v2.235zm0-3.128h-3.857v-2.219h3.857v2.221-.002zm0-3h-3.857V7.696h3.857v2.355-.001zm0-3.119h-3.857v-2.34h3.857v2.355-.015zM0 2.731v18.601l14.16 2.449V.219L0 2.739v-.008zm8.393 14.071c-.054-.146-.308-.766-.758-1.863-.449-1.096-.72-1.734-.799-1.916h-.025l-1.519 3.615-2.03-.137 2.408-4.5-2.205-4.5 2.07-.109 1.368 3.521h.027l1.545-3.681 2.139-.135-2.547 4.87 2.625 4.968-2.299-.135v.002z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.office.com\",hex:\"217346\"},\"Microsoft Office\":{title:\"Microsoft Office\",slug:\"microsoftoffice\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Microsoft Office icon</title><path d=\"M14.85 0L2 5V19.4L6.6 17.45V6.1L14.95 4.2V21.05L2 19.4L14.85 24L22 21.7V2.4L14.85 0Z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.office.com/\",hex:\"E74025\"},\"Microsoft OneDrive\":{title:\"Microsoft OneDrive\",slug:\"microsoftonedrive\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Microsoft OneDrive icon</title><path d=\"M4.92 17.562c-.499.305-1.059.457-1.68.457-.92-.029-1.68-.346-2.287-.951-.607-.601-.922-1.367-.953-2.282.016-.862.291-1.594.83-2.192.54-.601 1.225-.948 2.058-1.05-.03-.178-.042-.367-.042-.566.03-1.14.42-2.084 1.17-2.819.754-.735 1.7-1.125 2.842-1.155.719 0 1.364.165 1.934.51.48-.766 1.096-1.395 1.861-1.859.779-.465 1.65-.705 2.609-.721 1.291.03 2.385.436 3.314 1.215.93.78 1.516 1.785 1.756 3.03h-.285c-.465 0-.869.06-1.23.194-.479-.51-1.035-.898-1.664-1.169-.615-.271-1.29-.39-2.011-.39-.66 0-1.29.104-1.89.33-.6.225-1.14.539-1.62.959-.42.36-.765.766-1.05 1.23s-.48.96-.585 1.485c-.36.075-.705.179-1.021.314-.51.239-.944.569-1.289 1.005-.33.375-.586.811-.75 1.305-.165.496-.256 1.006-.256 1.545 0 .6.091 1.156.301 1.666l-.062-.091zm16.848-3.747c1.576.391 2.318 1.32 2.225 2.781-.092 1.463-.943 2.287-2.555 2.471H8.7c-2.104-.277-3.138-1.365-3.102-3.263.034-1.905 1.104-2.954 3.21-3.135.275-2.04 1.316-3.3 3.12-3.78 1.806-.494 3.342.061 4.612 1.681.436-.36.986-.511 1.65-.466.668.045 1.234.181 1.697.436.6.314 1.08.765 1.396 1.336.313.568.479 1.215.479 1.919l.006.02z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://msdn.microsoft.com/en-us/onedrive/dn673556.aspx\",hex:\"094AB2\"},\"Microsoft OneNote\":{title:\"Microsoft OneNote\",slug:\"microsoftonenote\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Microsoft OneNote icon</title><path d=\"M23.947 10.184v3.593c0 .139-.05.258-.149.359-.1.098-.22.15-.357.15h-.779V9.674h.779c.138 0 .258.05.357.149.099.102.149.219.149.361zm-.507 4.634c.138 0 .258.05.357.149s.149.22.149.357v3.607c0 .14-.05.258-.149.36-.1.097-.22.146-.357.146h-.779v-4.621h.779zm0-10.29c.138 0 .267.051.384.15.117.102.176.221.176.36v3.594c0 .147-.061.271-.176.365-.117.09-.246.135-.384.135h-1.289v11.084c0 .135-.053.24-.157.331-.105.075-.224.12-.364.12h-6.704v-2.265h5.207v-1.081h-5.207v-1.273h5.207v-1.021h-5.207v-1.305h5.207v-1.005h-5.207v-1.274h5.207v-1.006h-5.207V9.132h5.207v-1.02h-5.207V6.837h5.207V5.772h-5.207V3.239h6.887c.016 0 .075.044.169.135.095.094.152.209.17.344v.811h1.288zM13.646.664v22.672L0 20.98V3.081L13.647.665l-.001-.001zm-3.893 6.72l-1.601.105v2.979c-.018 1.745-.018 2.753 0 3.021L4.962 7.67l-1.629.064v8.256l1.274.104v-6.092l3.44 6.265 1.705.104V7.384z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.office.com\",hex:\"80397B\"},\"Microsoft Outlook\":{title:\"Microsoft Outlook\",slug:\"microsoftoutlook\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Microsoft Outlook icon</title><path d=\"M24 7.387v10.478c0 .23-.08.424-.238.576-.158.154-.352.23-.58.23h-8.547v-6.959l1.6 1.229c.102.085.229.126.379.126.148 0 .277-.041.389-.127L24 7.387zm-9.365-2.021h8.547c.211 0 .393.063.543.192.15.128.234.3.248.51l-7.369 5.876-1.969-1.549V5.366zM13.404.864v22.271L0 20.819V3.244L13.406.864h-.002zm-4.049 11.18c-.02-1.133-.313-2.072-.879-2.814-.555-.74-1.275-1.131-2.131-1.164-.824.033-1.529.423-2.1 1.164-.57.742-.855 1.682-.87 2.814.015 1.117.315 2.047.885 2.791.571.74 1.274 1.133 2.101 1.176.855-.035 1.574-.424 2.145-1.17.57-.748.87-1.68.885-2.797h-.036zm-3.12-2.482c.431.02.794.256 1.083.717.285.461.435 1.045.435 1.752 0 .721-.149 1.307-.435 1.771-.301.464-.66.704-1.096.704s-.795-.226-1.095-.69-.435-1.05-.435-1.754c0-.705.135-1.291.435-1.74.284-.45.646-.69 1.081-.721l.027-.039z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.office.com\",hex:\"0072C6\"},\"Microsoft PowerPoint\":{title:\"Microsoft PowerPoint\",slug:\"microsoftpowerpoint\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Microsoft PowerPoint icon</title><path d=\"M23.484 4h-8.542v3.186c.515-.39 1.132-.588 1.855-.588v3.098h3.074c-.015.869-.315 1.602-.901 2.193-.584.592-1.318.896-2.188.916-.675-.02-1.29-.223-1.829-.615v2.129h6.719v1.045h-6.721v1.293h6.715v1.032h-6.719v2.34h8.543c.346 0 .51-.182.51-.537V4.51c0-.342-.164-.51-.51-.51h-.006zM17.28 9.186V6.062c.87.02 1.6.322 2.188.91.586.588.891 1.326.906 2.214H17.28zm-9.024.052c-.053-.201-.14-.357-.263-.472-.12-.112-.282-.194-.483-.246-.225-.061-.457-.09-.69-.09l-.72.014v2.999h.026c.261.016.535.016.825 0 .285-.015.555-.09.809-.225.313-.225.5-.525.561-.914.06-.391.039-.766-.064-1.111v.045zM0 3.059v17.946l13.688 2.365V.63L0 3.059zm10.213 8.087c-.375.869-.935 1.425-1.684 1.665-.749.239-1.558.332-2.429.279v3.422l-1.801-.209V6.901l2.859-.149c.53-.033 1.054.025 1.566.18.515.152.922.459 1.223.922.3.461.469.996.51 1.605.037.609-.043 1.172-.244 1.687z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.office.com\",hex:\"D24726\"},\"Microsoft Word\":{title:\"Microsoft Word\",slug:\"microsoftword\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Microsoft Word icon</title><path d=\"M23.999 3.733V20.28c0 .141-.05.255-.149.346-.101.094-.221.138-.36.138h-8.559v-2.295h6.982v-1.045h-6.988v-1.279h6.982v-1.044H14.93v-1.29h6.98v-1.032h-6.98v-1.293h6.98v-1.044h-6.98V9.163h6.98V8.12h-6.98V6.815h6.98v-.994h-6.98V3.228h8.562c.149 0 .27.048.358.149.105.099.15.22.149.356zM13.65.641v22.722L0 21.001V3.067L13.65.637v.004zm-2.06 6.708l-1.709.105-1.096 6.785H8.76c-.054-.321-.255-1.445-.615-3.367l-.639-3.263-1.604.08-.642 3.183c-.375 1.854-.584 2.933-.639 3.236h-.015l-.975-6.25-1.47.078 1.575 7.883 1.634.105.615-3.068c.36-1.8.57-2.846.615-3.132h.045c.061.305.256 1.374.615 3.21l.615 3.158 1.77.105 1.98-8.85h-.035z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.office.com\",hex:\"2B579A\"},\"Microsoft Teams\":{title:\"Microsoft Teams\",slug:\"microsoftteams\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Microsoft Teams icon</title><path d=\"M9.254 5.596h2.364c.61 0 1.103.494 1.103 1.104v1.582a3.496 3.496 0 1 0-3.467-2.686zm11.048 2.688h.002a2.404 2.404 0 1 0 .004-4.808 2.404 2.404 0 0 0-.006 4.808zm-8.084 9.033V7.12c0-.563-.456-1.02-1.019-1.021H1a1.021 1.021 0 0 0-1.018 1.02v10.199a1.02 1.02 0 0 0 1.019 1.019h10.2a1.02 1.02 0 0 0 1.018-1.02zm-3.492-7.49H6.73v5.693H5.46V9.826H3.474V8.721h5.252zm14.287-.231H12.722v8.14c0 .61-.495 1.104-1.104 1.104H7.4a6.122 6.122 0 0 0 7.946 3.437 6.122 6.122 0 0 0 3.26-3.034 3.684 3.684 0 0 0 1.684.405h.027a3.701 3.701 0 0 0 3.701-3.701v-5.346c0-.555-.45-1.005-1.006-1.005z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://docs.microsoft.com/media/logos/logo_MSTeams.svg\",hex:\"6264A7\"},MicroStrategy:{title:\"MicroStrategy\",slug:\"microstrategy\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>MicroStrategy icon</title><path d=\"M9.103 2.596h5.811v18.808h-5.81zm-9.072 0h5.81v18.808H.032zm18.127 0v18.806h5.811V8.339z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.microstrategy.com/us/company/press-kit\",hex:\"D9232E\"},Minds:{title:\"Minds\",slug:\"minds\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Minds icon</title><path d=\"M15.495 18.38a.052.052 0 00.03-.033l.693-2.217 3.192-4.79a.052.052 0 00.003-.004.052.052 0 00.001-.002.052.052 0 00.001-.002.052.052 0 00.002-.005.052.052 0 000-.003.052.052 0 00.002-.003.052.052 0 000-.004.052.052 0 000-.005.052.052 0 000-.003.052.052 0 000-.003l-.416-6.946a.052.052 0 000-.001.052.052 0 00-.001-.005.052.052 0 000-.002.052.052 0 00-.003-.008.052.052 0 00-.002-.005.052.052 0 00-.002-.004.052.052 0 00-.003-.005.052.052 0 00-.003-.003.052.052 0 000-.001L14.818.018l-.001-.002a.052.052 0 00-.004-.003.052.052 0 00-.003-.002.052.052 0 00-.003-.002.052.052 0 00-.002-.001.052.052 0 00-.002-.001.052.052 0 00-.002-.001.052.052 0 00-.001 0 .052.052 0 000-.001.052.052 0 00-.002 0 .052.052 0 00-.002-.001.052.052 0 00-.001 0 .052.052 0 00-.005-.002.052.052 0 00-.004 0 .052.052 0 00-.002 0 .052.052 0 00-.001 0 .052.052 0 00-.001 0 .052.052 0 00-.003 0 .052.052 0 00-.001 0 .052.052 0 00-.001 0H9.22a.052.052 0 00-.003 0 .052.052 0 00-.004 0 .052.052 0 00-.004 0 .052.052 0 00-.003.001.052.052 0 00-.003.001.052.052 0 00-.005.002.052.052 0 00-.004.003.052.052 0 00-.004.002.052.052 0 00-.001 0 .052.052 0 00-.003.004.052.052 0 00-.001 0 .052.052 0 00-.003.003l-4.17 4.31a.052.052 0 00-.003.004.052.052 0 00-.006.009.052.052 0 00-.002.005.052.052 0 00-.002.008.052.052 0 000 .002.052.052 0 00-.001.003.052.052 0 000 .003l-.417 6.95a.052.052 0 000 .001.052.052 0 000 .001.052.052 0 000 .004.052.052 0 000 .004.052.052 0 000 .002.052.052 0 000 .005.052.052 0 00.001 0 .052.052 0 000 .003.052.052 0 00.001.002.052.052 0 00.001.002.052.052 0 00.001.002.052.052 0 00.001.001.052.052 0 00.002.003.052.052 0 00.001.003l3.194 4.79.692 2.214v.002a.052.052 0 000 .001.052.052 0 00.001.002.052.052 0 00.002.003.052.052 0 000 .001.052.052 0 00.001.002.052.052 0 000 .001.052.052 0 00.002.001.052.052 0 00.001.003.052.052 0 00.001.001.052.052 0 00.001.001.052.052 0 00.002.002.052.052 0 00.003.004.052.052 0 00.002.001.052.052 0 00.002.002.052.052 0 00.001 0 .052.052 0 00.003.003.052.052 0 00.001 0 .052.052 0 00.002.001.052.052 0 00.002.002.052.052 0 00.001 0 .052.052 0 00.001 0 .052.052 0 00.001.001.052.052 0 00.002 0 .052.052 0 00.001.001.052.052 0 00.001 0 .052.052 0 00.003.001.052.052 0 00.002 0 .052.052 0 000 .001.052.052 0 00.003 0 .052.052 0 00.002 0 .052.052 0 00.003.001.052.052 0 00.001 0 .052.052 0 00.002 0h6.952a.052.052 0 00.02-.004zm-.058-.1H8.89l7.201-2.095zm.618-2.193L8.62 18.249l2.703-5.677zm.068-.08l-4.733-3.516 5.139-4.124zm.11-.087l.4-7.54 2.668 2.936zm-7.699 2.27l-.646-2.069 3.231-3.36zm-.697-2.166l-3.094-4.64 6.456 1.143zm11.47-4.857l-2.655-2.92 2.256-3.717zm-7.974 1.236L9.3 5.284l7.187 2.983zm-.102.024l-6.507-1.152L9.198 5.31zm5.284-4.26l-7.2-2.99L14.748.152zm.095-.052L14.87.219l4.015 4.149zM4.694 11.14l.403-6.718 4.03.806zm4.473-6.01l-4.014-.803L9.167.18zm.104-.056V.103h5.376zm-.747 13.357v4.143l1.671-1.403zm.057 4.232l1.53.612 1.808.723-1.67-2.737zm3.5 1.335l3.338-1.335-1.67-1.402zm3.394-1.424v-4.143l-1.67 2.74zm-6.858-4.191L12 23.93l3.382-5.547z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.minds.com/\",hex:\"FED12F\"},Minetest:{title:\"Minetest\",slug:\"minetest\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Minetest icon</title><path d=\"M23.69 12.436l-.406.24-2.31 1.355v.558l-1.087.667v1.11l-1.087.664v2.857l4.89-2.872v-4.044zm-.543.96v3.298l-3.803 2.234v-1.583l1.087-.666v-1.11l1.086-.666v-.551zm-3.77-7.854l-1.128.792v4.746l.139.08 1.004.577 1.03-.603V6.152zm.026.654l.475.278v4.339l-.49.286-.597-.344v-4.13zM6.215 0l-4.24 2.491V7.03l.136.08 2.907 1.708v2.205l.134.08 1.061.637 1.196-.717V8.816l2.662-1.565V2.327zm-.003.643l3.316 2V6.93L6.213 8.878 2.52 6.708V2.812zm.654 8.492v1.57l-.653.39-.651-.39V9.135l.651.383zm8.947 2.074l-7.88 4.54v1.434l.869.5v1.107l3.208 1.881 6.79-4.102v-1.166l1.087-.666v-1.15zm-.002.638l3.533 2.061v.515l-1.086.665v1.164l-6.251 3.777-2.66-1.56v-1.11l-.87-.5v-.785zm-2.98-9.03a.258.258 0 00-.143.038l-2.616 1.543v.64l2.753-1.624 3.529 2.067-4.317 2.533a.28.28 0 00-.001.48l3.23 1.92-7.058 4.069-7.067-4.175 3.202-1.89-.544-.32-3.337 1.97a.28.28 0 000 .48l7.608 4.494c.083.049.185.05.27 0l7.606-4.382a.28.28 0 00.003-.482l-3.235-1.922 4.32-2.535a.28.28 0 000-.48L12.96 2.853a.312.312 0 00-.13-.038zm4.207 2.427zm.1.104zm.033.137a.275.275 0 01-.136.237l-.407.24v.468l-3.515 2.062.542.322 3.38-1.983a.279.279 0 00.136-.24zm-14.128 8.17v1.1l-1.086-.665v3.978l6.412 3.82v-1.752l-.924-.555V18.47l-1.141-.666v-2.218zm.544.963l2.173 1.286v2.22l1.141.667V19.9l.925.554v.467L2.5 17.75v-2.681l1.087.666v-.49zM11.88 3.33l-1.809 1.065v.003l1.81-1.067zM3.79 8.095L.309 10.147v6.979L11.99 24l11.681-7.042v-6.7l-3.25-1.909v.64l2.707 1.59v6.062l-11.141 6.716L.85 16.805v-6.027l-.389-.23a.28.28 0 010-.48L3.8 8.098zm19.9 4.34l-.406.24-2.31 1.356v.558l-1.087.666v1.11l-1.087.665v2.857l4.89-2.872v-4.044zm-.543.96v3.3l-3.803 2.233v-1.584l1.086-.665v-1.11l1.087-.666v-.551zm-3.77-7.853l-1.129.792v4.746l.14.08 1.003.577 1.031-.603V6.152zm.025.654l.476.278v4.338l-.49.287-.597-.344v-4.13zM6.216 0l-4.24 2.491V7.03l.136.08L5.02 8.817v2.205l.134.08 1.06.637 1.197-.717V8.815l2.662-1.564V2.327zm-.003.643l3.316 2V6.93L6.214 8.878 2.52 6.708V2.812zm.654 8.492v1.57l-.653.39-.651-.39V9.135l.651.383zm8.947 2.074l-7.88 4.54v1.434l.869.5v1.107l3.208 1.881 6.79-4.102v-1.166l1.087-.666v-1.15zm-.002.638l3.533 2.061v.515l-1.087.665v1.164l-6.25 3.777-2.661-1.56v-1.11l-.87-.5v-.786zm-2.98-9.03a.258.258 0 00-.143.038l-2.616 1.543v.64l2.753-1.624 3.529 2.067-4.318 2.533a.28.28 0 000 .48l3.23 1.92-7.059 4.068-7.067-4.174 3.203-1.89-.544-.32-3.337 1.97a.28.28 0 000 .48L8.07 15.04c.084.05.186.05.27.001l7.607-4.382a.28.28 0 00.003-.482l-3.235-1.922 4.32-2.535a.28.28 0 000-.481L12.96 2.854a.31.31 0 00-.13-.038zm4.207 2.427zm.1.104zm.033.137a.275.275 0 01-.136.236l-.407.24v.47l-3.515 2.061.542.322 3.38-1.983a.279.279 0 00.136-.24zm0 .968v.137c0 .1-.052.191-.136.24l-.156.092 1.37.8v-.64zm3.252 1.897v.64l2.725 1.59v.512l-1.984 1.195-1.764 1.03-3.316-1.949v-.95c0-.098-.05-.19-.135-.24l-2.295-1.363-.543.319 2.43 1.444v.95c0 .1.052.192.137.242l3.586 2.107c.083.05.186.05.27.001l1.901-1.11h.004l1.709-1.03v.902l.001.026c.002.02.007.038.011.054.003.007.007.02.011.027.005.007.007.015.012.026l.014.023c.023.03.048.055.079.075l.022.015.026.011a.08.08 0 00.026.007.264.264 0 00.16-.007l.026-.011c.015-.007.034-.019.047-.027.007-.007.015-.01.022-.019.007-.007.011-.015.018-.018l.019-.023c.004-.007.011-.015.015-.023a.139.139 0 00.022-.05c.003-.008.004-.02.007-.027l.004-.027a.239.239 0 00.001-.026v-2.222c0-.1-.051-.192-.136-.242zm-17.38 5.305v1.1l-1.086-.665v3.978l6.412 3.819v-1.751l-.925-.555v-1.112l-1.14-.666v-2.218zm.544.963l2.173 1.286v2.22l1.14.667v1.107l.925.555v.467l-5.325-3.17v-2.681l1.087.666v-.49zM11.88 3.33l-1.808 1.065v.003l1.81-1.067zM3.792 8.095L.308 10.147v6.978L11.992 24l11.681-7.043v-6.699l-3.25-1.909v.64l2.707 1.59v6.062l-11.141 6.716L.852 16.805v-6.028l-.389-.23a.28.28 0 010-.48L3.8 8.1z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.minetest.net/\",hex:\"53AC56\"},\"Linux Mint\":{title:\"Linux Mint\",slug:\"linuxmint\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Linux Mint icon</title><path d=\"M0 1.693v4.193h1.828c1.276 0 1.502.865 1.502 2.058l.01 7.412c0 3.84 3.44 6.951 7.68 6.951h10.464c1.342 0 2.516-.83 2.516-2.108V8.706c0-3.84-3.44-6.95-7.683-6.95h-4.405v-.013L0 1.693zm5.723 2.566h2.102V14.82c0 1.413.984 2.51 2.139 2.51l7.17.03c1.496 0 2.661-1.01 2.661-2.206l-.012-5.607a1.2 1.2 0 0 0-.386-.91 1.224 1.224 0 0 0-.917-.384c-.374 0-.65.12-.918.384a1.2 1.2 0 0 0-.386.91v4.798h-2.223V9.548c0-.364-.124-.648-.389-.91a1.208 1.208 0 0 0-.917-.384c-.366 0-.647.12-.914.384-.265.262-.39.546-.39.91v4.798H10.12V9.548c0-.95.36-1.792 1.042-2.466a3.445 3.445 0 0 1 2.485-1.022c.937 0 1.752.345 2.413.97a3.448 3.448 0 0 1 2.42-.97c.954 0 1.803.348 2.485 1.022a3.385 3.385 0 0 1 1.041 2.466l.009 5.991c-.105 1.004-.539 1.894-1.28 2.637h-.002a4.367 4.367 0 0 1-3.174 1.314H9.574v-.038c-.976-.103-1.846-.519-2.57-1.217-.845-.825-1.281-1.846-1.281-3.01V4.26z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://commons.wikimedia.org/wiki/File:Linux_Mint_logo_without_wordmark.svg\",hex:\"87CF3E\"},Minutemailer:{title:\"Minutemailer\",slug:\"minutemailer\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Minutemailer icon</title><path d=\"M5.564 2.703l3.45 3.734-2.434 4.798 5.14-.921 2.34 5.646L24 2.926 5.564 2.703zm-.636 8.088l.957-.787-1.234.39-.126-.18.51-.495-.669.27C1.813 10.979 0 13.455 0 16.35c0 1.951.822 3.705 2.133 4.947-.563-.99-.885-2.134-.885-3.355 0-2.865 1.809-5.415 4.315-6.42l.315-.766-.75.331-.211-.285.011-.011zm4.364-1.97L10.89 6l9.398-2.201L9.292 8.821z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://minutemailer.com/press\",hex:\"3ABFE6\"},Mix:{title:\"Mix\",slug:\"mix\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Mix icon</title><path d=\"M4.8 6.1v15.15c0 1.35-1.05 2.35-2.4 2.35-1.35 0-2.4-1.05-2.4-2.35V0h24v13.35c0 1.3-1.1 2.35-2.4 2.35-1.35 0-2.45-1.05-2.45-2.35v-1.2c0-1.35-1.05-2.35-2.4-2.35-1.137 0-2.121.803-2.35 1.875V15.5c0 1.35-1.1 2.35-2.4 2.35-1.35 0-2.4-1.05-2.4-2.35V6.25c0-1.3-1.1-2.35-2.4-2.35a2.4 2.4 0 0 0-2.4 2.2z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://mix.com\",hex:\"FF8126\"},Mixcloud:{title:\"Mixcloud\",slug:\"mixcloud\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Mixcloud icon</title><path d=\"M21.95 19.062c-.154 0-.31-.045-.445-.135-.369-.25-.465-.75-.225-1.11.738-1.094 1.125-2.381 1.125-3.719s-.387-2.625-1.125-3.721c-.249-.368-.145-.866.216-1.106.375-.249.87-.146 1.108.214.917 1.365 1.396 2.97 1.396 4.62 0 1.648-.479 3.254-1.396 4.619-.135.239-.39.359-.645.359l-.009-.021zM19.66 17.768c-.153 0-.308-.045-.445-.139-.369-.239-.463-.734-.215-1.094.489-.721.747-1.545.747-2.43 0-.855-.258-1.695-.747-2.431-.248-.36-.154-.854.215-1.095s.857-.15 1.106.225c.669.99 1.021 2.145 1.021 3.314 0 1.201-.352 2.34-1.021 3.315-.146.24-.406.36-.661.36v-.025zm-3.73-7.153c-.314-3.197-3.016-5.699-6.3-5.699-2.721 0-5.13 1.748-5.995 4.283C1.588 9.501 0 11.269 0 13.4c0 2.344 1.912 4.254 4.26 4.254h10.908c1.964 0 3.566-1.594 3.566-3.557 0-1.706-1.2-3.129-2.805-3.48v-.002zm-.762 5.446H4.263c-1.466 0-2.669-1.191-2.669-2.658 0-1.465 1.193-2.658 2.669-2.658.71 0 1.381.285 1.886.781.3.314.811.314 1.125 0 .3-.301.3-.811 0-1.125-.555-.542-1.231-.931-1.965-1.111.75-1.665 2.43-2.774 4.305-2.774 2.609 0 4.74 2.129 4.74 4.738 0 .512-.075 1.006-.24 1.486-.135.42.09.869.51 1.02.074.03.165.045.24.045.33 0 .645-.211.75-.54.105-.315.18-.63.225-.96.734.285 1.26 1.005 1.26 1.83 0 1.096-.885 1.979-1.965 1.979l.034-.053z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.mixcloud.com/branding\",hex:\"314359\"},Mixer:{title:\"Mixer\",slug:\"mixer\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Mixer icon</title><path d=\"M2.456 1.375a2.461 2.461 0 0 0-1.65.642C-.134 2.884-.21 4.348.553 5.38l4.917 6.59-4.946 6.65c-.762 1.032-.702 2.496.254 3.363a2.45 2.45 0 0 0 3.617-.344l6.904-9.28a.65.65 0 0 0 0-.763L4.423 2.361a2.432 2.432 0 0 0-1.967-.986zm19.089 0a2.432 2.432 0 0 0-1.968.986l-6.86 9.22a.65.65 0 0 0 0 .762l6.89 9.296a2.45 2.45 0 0 0 3.617.344c.956-.867 1.016-2.331.254-3.363l-4.947-6.65 4.917-6.59c.762-1.032.687-2.496-.254-3.363a2.459 2.459 0 0 0-1.65-.641z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/mixer/branding-kit/\",hex:\"002050\"},Mojang:{title:\"Mojang\",slug:\"mojang\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Mojang icon</title><path d=\"M6.912 0A6.913 6.913 0 000 6.912V24h17.088A6.912 6.912 0 0024 17.088V0h-4.992zm10.111 2.594c.566 0 1.024 2.505 1.024 3.07a1.024 1.024 0 11-2.047 0c0-.565.459-3.07 1.023-3.07zM14.41 5.498c.69.19 2.082 3.77 3.637 2.215 1.448-1.448 2.049 7.164 2.049 7.164l-2.05-1.022s.002-2.048-3.07-4.095c-3.809-2.54-8.189-.867-8.189 3.07 0 8.033 13.309 5.12 13.309 5.12s-.002 2.046-2.05 2.046H5.765c-2.047 0-2.05-2.047-2.05-2.047V7.713c0-2.048 2.05-2.049 2.05-2.049h4.093c2.048 0 4.096 2.049 4.096 2.049 0-1.49.117-2.098.328-2.205a.175.175 0 01.13-.01z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.mojang.com/\",hex:\"DB1F29\"},Monero:{title:\"Monero\",slug:\"monero\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Monero icon</title><path d=\"M12 0C5.365 0 0 5.373 0 12.015c0 1.335.228 2.607.618 3.81h3.577V5.729L12 13.545l7.805-7.815v10.095h3.577c.389-1.203.618-2.475.618-3.81C24 5.375 18.635 0 12 0zm-1.788 15.307l-3.417-3.421v6.351H1.758C3.87 21.689 7.678 24 12 24s8.162-2.311 10.245-5.764h-5.04v-6.351l-3.386 3.421-1.788 1.79-1.814-1.79h-.005z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://getmonero.org\",hex:\"FF6600\"},MongoDB:{title:\"MongoDB\",slug:\"mongodb\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>MongoDB icon</title><path d=\"M17.18 9.518c-1.263-5.56-4.242-7.387-4.562-8.086C12.266.939 11.885 0 11.885 0c-.002.019-.004.031-.005.049v.013h-.001c-.002.015-.003.025-.004.039v.015h-.002c0 .01-.002.018-.002.026v.026h-.003c-.001.008-.001.018-.003.025v.021h-.002c0 .007 0 .015-.002.021v.02h-.002c0 .01-.001.022-.002.032v.002c-.003.017-.006.034-.009.05v.008h-.002c-.001.004-.003.008-.003.012v.017h-.003v.022h-.005v.018h-.005v.021h-.004v.019h-.004v.017h-.006v.014h-.004v.018h-.004v.014h-.005v.013H11.8v.015h-.004c-.001.001-.001.003-.001.004v.01h-.003c-.001.002-.001.004-.001.006v.006h-.002c-.001.003-.002.008-.002.01-.003.007-.007.014-.01.021v.002c-.002.002-.004.005-.005.007v.008h-.004v.008h-.005v.008h-.003v.01h-.006v.014h-.004v.004h-.004v.008h-.004v.011h-.004v.008h-.006v.011h-.004v.008h-.005v.008h-.003v.01h-.005v.008h-.004v.006h-.004v.008h-.006V.76h-.004v.006h-.005v.008h-.004v.011h-.005v.004h-.003v.008h-.006v.004h-.004v.01h-.004v.004h-.004v.008h-.005v.006h-.003l-.002.004v.004h-.002c-.001.002-.002.002-.002.004v.001h-.001c-.001.003-.002.005-.004.007v.003h-.001c-.005.006-.008.012-.012.018v.001c-.002.002-.007.006-.009.01v.002h-.001c-.001.001-.003.002-.003.003v.003h-.002l-.003.003v.001h-.001c0 .001-.002.002-.003.004v.004h-.003l-.002.002v.002h-.002c0 .002-.002.002-.002.003v.003h-.004c0 .001-.001.002-.002.003V.92h-.003v.004h-.004V.93h-.004v.008h-.005V.93h-.005v.004h-.004V.94h-.005v.008h-.005v.004h-.004v.006h-.004v.004h-.004V.97h-.006v.004h-.004V.98h-.005v.004h-.004v.005h-.005v.01h-.002v.004h-.006v.005h-.004v.002h-.004v.004h-.005v.01h-.004v.004h-.005v.004h-.004v.006h-.005v.004h-.005v.004h-.004v.004h-.004v.01h-.004v.005h-.006v.004h-.004v.004h-.005v.006h-.004v.004h-.005v.007h-.004v.004h-.006V1.1h-.002v.004h-.004v.004h-.005v.004h-.004v.006h-.005v.004h-.003c-.001.001-.001.002-.001.002v.002h-.002l-.004.004s-.002.002-.004.003v.006h-.004v.005h-.004v.004h-.004v.004h-.003l-.003.003v.003h-.002l-.002.002v.003h-.002c-.005.006-.007.01-.014.016-.002.002-.008.007-.012.01-.012.008-.027.021-.039.032-.008.005-.016.012-.022.017v.001h-.001c-.016.013-.031.025-.049.039v.001c-.024.02-.047.039-.074.062V1.34h-.002c-.057.047-.117.1-.186.159V1.5h-.001c-.169.148-.37.338-.595.568l-.015.015-.004.004C9 3.494 6.857 6.426 6.631 11.164c-.02.392-.016.773.006 1.144v.009c.109 1.867.695 3.461 1.428 4.756v.001c.292.516.607.985.926 1.405v.001c1.102 1.455 2.227 2.317 2.514 2.526.441 1.023.4 2.779.4 2.779l.644.215s-.131-1.701.053-2.522c.057-.257.192-.476.349-.662.106-.075.42-.301.797-.645.018-.019.028-.036.044-.054 1.521-1.418 4.362-4.91 3.388-10.599z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.mongodb.com/pressroom\",hex:\"47A248\"},\"Monkey tie\":{title:\"Monkey tie\",slug:\"monkeytie\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Monkey tie icon</title><path d=\"M20.001 0h-16C1.791 0 0 1.791 0 4.001v15.998C0 22.209 1.791 24 4.001 24h16C22.209 24 24 22.209 24 19.999V4.001C24 1.791 22.209 0 20.001 0zm-7.666 16.295l-.866-6.759-2.579 4.638-2.583-4.623-.858 6.744h-1.93l1.4-10.086H6.43L8.888 10.8l2.454-4.591h1.514l1.397 10.086h-1.918zm6.529-5.736h-1.585v3.257c0 1.095.087 1.151 1.096 1.151h.49l-.171 1.472h-1.293c-1.354 0-1.93-.95-1.93-1.89v-3.997h-1.027l.156-1.47h.855V7.504l1.79-.188v1.775h1.588v1.467h.031zm1.677 5.88h-1.484l.159-1.485h1.487l-.172 1.479.01.006z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.monkey-tie.com/presse\",hex:\"FFC619\"},Monogram:{title:\"Monogram\",slug:\"monogram\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Monogram icon</title><path d=\"M23.158 0v23.503c0 .451-.533.668-.83.338L12 12.38 3.301 2.73.842 0h22.316zM11.029 13.46L1.672 23.841c-.297.33-.83.111-.83-.338V0l10.187 13.46z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://monogram.me\",hex:\"FDB22A\"},Monster:{title:\"Monster\",slug:\"monster\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Monster icon</title><path d=\"M0 0V24H5.42V12.39L12 18.19L18.58 12.39V24H24V0L12 11.23L0 0Z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.monster.com/\",hex:\"6E46AE\"},Monzo:{title:\"Monzo\",slug:\"monzo\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Monzo icon</title><path d=\"M11.99 17.26H12l5.93-5.92v11.04a.45.45-180 0 0 .76.31l4.98-4.97a1.11 1.11-180 0 0 .32-.8V5.29l.01-.01-3.98-3.97a.44.44-180 0 0-.63 0L12 8.69l-7.41-7.4a.44.44-180 0 0-.63 0L0 5.28h.01H0v11.66a1.11 1.11-180 0 0 .32.79l4.97 4.98a.45.45-180 0 0 .76-.32l.01-11.06 5.93 5.94z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://monzo.com/press/\",hex:\"14233C\"},Moo:{title:\"Moo\",slug:\"moo\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Moo icon</title><path d=\"M11.964 24c-2.525 0-4.801-1.107-6.34-3.138-1.109-1.417-1.661-3.078-1.661-4.86 0-.555.06-1.109.185-1.602.299-1.785 1.59-4.678 3.93-8.678C9.805 2.767 11.215.554 11.289.554c.123-.246.308-.554.675-.554.372 0 .555.308.741.555 0 0 1.477 2.215 3.199 5.168 2.342 4 3.631 6.893 3.939 8.678.131.492.193 1.045.193 1.6 0 1.785-.555 3.445-1.65 4.861C16.766 22.834 14.424 24 11.964 24zm0-2.092c1.905 0 3.629-.861 4.801-2.341.799-1.044 1.229-2.337 1.229-3.69 0-.432-.059-.801-.123-1.229-.246-1.354-1.293-3.692-3.074-6.833-1.357-2.399-2.525-4.121-2.525-4.121l-.31-.433-.254.37s-1.171 1.785-2.521 4.125c-1.843 3.149-2.893 5.474-3.072 6.839-.061.431-.123.8-.123 1.229 0 1.355.429 2.587 1.229 3.693 1.11 1.538 2.831 2.399 4.74 2.399l.003-.008z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.moo.com/uk/about/press.html\",hex:\"00945E\"},Mozilla:{title:\"Mozilla\",slug:\"mozilla\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Mozilla icon</title><path d=\"M0 24V0h24v24H0zM16.39 6.76l-.23.03-.22.04-.21.06-.2.07-.2.07-.19.09-.18.1-.17.11-.17.12-.16.13-.15.14-.14.15-.13.16-.13.17-.11.17-.11.19-.1.19-.09.21-.08-.22-.1-.21-.1-.2-.12-.19-.13-.17-.14-.16-.15-.15-.15-.14-.17-.13-.17-.11-.19-.11-.18-.09-.2-.08-.2-.07-.2-.06-.21-.05-.22-.04-.22-.02-.22-.02h-.43l-.21.02-.2.02-.2.03-.19.05-.18.05-.18.06-.18.07-.16.08-.17.08-.15.1-.15.1-.14.11-.14.12-.13.13-.12.13-.12.14-.11.15-.1.16L7 8.5V6.95H2.65v2.22h1.37v5.86H2.65v2.26h6.33v-2.26H7v-3.81l.01-.21.03-.2.03-.19.04-.18.05-.18.06-.16.07-.16.08-.14.09-.14.11-.12.11-.11.12-.1.14-.09.15-.08.15-.06.17-.05.19-.04.19-.02.21-.01h.17l.16.02.16.03.14.04.14.05.13.06.12.07.11.09.1.1.1.11.08.12.08.14.06.16.06.16.05.19.04.19.03.21.03.23.01.25v6.09h4.3v-2.26H13.7v-3.6l.01-.21.01-.21.02-.2.04-.19.04-.18.05-.18.06-.16.07-.16.08-.14.09-.14.1-.12.12-.11.12-.1.14-.09.14-.08.16-.06.17-.05.19-.04.19-.02.21-.01h.17l.16.02.16.03.14.04.14.05.13.06.12.07.11.09.1.1.09.11.09.12.08.14.06.16.06.16.05.19.04.19.03.21.03.23.01.25v6.09h4.3v-2.26h-1.37v-4.72l-.01-.36-.04-.33-.06-.32-.08-.3-.1-.28-.12-.26-.14-.24-.16-.23-.18-.2-.18-.19-.21-.16-.21-.15-.23-.13-.24-.12-.25-.09-.25-.08-.27-.06-.26-.04-.28-.03h-.52l-.23.02z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://mozilla.ninja/our-logo\",hex:\"000000\"},\"Mozilla Firefox\":{title:\"Mozilla Firefox\",slug:\"mozillafirefox\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Mozilla Firefox icon</title><path d=\"M8.855 7.333c.008 0 .004 0 0 0zM6.082 5.947c.007 0 .004 0 0 0zm16.59 2.14c-.5-1.203-1.514-2.503-2.31-2.914.648 1.27 1.023 2.544 1.166 3.495l.002.02c-1.302-3.246-3.51-4.555-5.314-7.404-.09-.145-.182-.289-.27-.441a3.51 3.51 0 01-.128-.238 2.097 2.097 0 01-.171-.456.03.03 0 00-.027-.03.038.038 0 00-.021 0l-.006.002a.037.037 0 00-.009.005.038.038 0 01.005-.007c-2.56 1.5-3.622 4.126-3.894 5.797a6.136 6.136 0 00-2.282.582.294.294 0 00-.146.366.29.29 0 00.392.169 5.567 5.567 0 011.988-.519l.067-.005A5.636 5.636 0 0112 6.5a5.79 5.79 0 011.652.229l.094.03a5.757 5.757 0 01.265.088 5.839 5.839 0 01.191.075c.052.02.103.041.154.063a5.676 5.676 0 01.235.111l.106.054a5.776 5.776 0 01.224.123 5.165 5.165 0 01.141.086 5.895 5.895 0 012.014 2.083c-.615-.432-1.716-.859-2.776-.674 4.142 2.07 3.03 9.201-2.71 8.932a5.113 5.113 0 01-1.498-.29 6.347 6.347 0 01-.339-.137 4.37 4.37 0 01-.194-.093c-1.406-.727-2.567-2.1-2.712-3.768 0 0 .531-1.981 3.806-1.981.354 0 1.366-.988 1.385-1.274-.005-.094-2.009-.891-2.79-1.66-.418-.412-.616-.61-.791-.76a3.436 3.436 0 00-.299-.225 5.335 5.335 0 01-.032-2.814c-1.183.539-2.103 1.39-2.772 2.142h-.006c-.456-.578-.424-2.486-.398-2.884-.006-.025-.34.174-.385.204a8.395 8.395 0 00-1.125.964 10.086 10.086 0 00-1.075 1.29v0A9.72 9.72 0 00.819 9.9c-.003.013-.11.482-.188 1.062a12.736 12.736 0 00-.037.27 7.724 7.724 0 00-.068.66l-.002.034a28.326 28.326 0 00-.023.383l-.001.06c0 6.358 5.156 11.513 11.516 11.513 5.695 0 10.424-4.135 11.35-9.566.02-.147.035-.295.052-.444.23-1.974-.025-4.05-.746-5.786zm-7.862 3.455z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://mozilla.design/firefox/logos-usage/\",hex:\"FF7139\"},MuseScore:{title:\"MuseScore\",slug:\"musescore\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>MuseScore icon</title><path d=\"M11.777 23.997a11.989 11.989 0 0 1-8.98-4.296 12.013 12.013 0 0 1-2.406-4.655A12.1 12.1 0 0 1 .273 9.44a11.926 11.926 0 0 1 1.72-4.064 12.056 12.056 0 0 1 4.056-3.799 11.94 11.94 0 0 1 4.13-1.44 12.211 12.211 0 0 1 3.693.007c1.708.27 3.302.89 4.751 1.848.873.577 1.692 1.29 2.385 2.08a11.966 11.966 0 0 1 2.68 5.196c.402 1.718.416 3.556.039 5.291a12.004 12.004 0 0 1-4.024 6.643 12.013 12.013 0 0 1-4.655 2.407c-.743.195-1.499.316-2.29.367a17.83 17.83 0 0 1-.809.026l-.172-.003zm-6.924-6.684a.488.488 0 0 0 .23-.133.548.548 0 0 0 .139-.232c.013-.043.014-.178.018-2.363.004-2.12.005-2.327.018-2.438.033-.298.076-.51.146-.72.101-.303.224-.516.406-.705.14-.144.26-.232.434-.315a1.76 1.76 0 0 1 .504-.148c.114-.017.382-.024.493-.012a1.803 1.803 0 0 1 1.308.807c.166.25.271.528.327.866l.017.106.004 2.438c.004 2.324.005 2.44.019 2.485a.555.555 0 0 0 .133.226.5.5 0 0 0 .201.128c.052.019.068.021.167.021a.462.462 0 0 0 .37-.145.507.507 0 0 0 .149-.3c.006-.042.008-.774.008-2.407 0-1.542.003-2.375.008-2.428.047-.48.222-.889.523-1.225.183-.204.464-.39.73-.482.21-.074.394-.101.626-.095.304.01.55.066.8.186.284.136.514.341.668.597.178.294.28.662.299 1.083.002.053.013.491.023.973.022 1.002.024 1.063.04 1.238.072.787.307 1.426.711 1.935.087.11.311.333.417.417.435.344.944.555 1.532.634.177.024.507.03.68.012.797-.082 1.53-.463 2.015-1.046.373-.45.606-.99.704-1.64.046-.302.043-.143.046-2.506.003-2.417.007-2.223-.054-2.346a.484.484 0 0 0-.332-.251.584.584 0 0 0-.416.06c-.1.06-.19.183-.22.304-.009.031-.012.478-.016 2.22-.005 2.415 0 2.23-.055 2.51-.18.917-.81 1.522-1.73 1.66a2.358 2.358 0 0 1-.512-.008c-.464-.07-.84-.256-1.13-.557-.332-.345-.53-.816-.601-1.432-.018-.151-.026-.387-.043-1.212-.018-.853-.026-1.05-.047-1.24-.129-1.123-.68-1.983-1.548-2.417a2.773 2.773 0 0 0-1.121-.294c-.55-.035-1.136.12-1.671.441a2.949 2.949 0 0 0-.813.707l-.038.049-.028-.038a2.542 2.542 0 0 0-.235-.261c-.457-.433-1.1-.722-1.78-.8a3.877 3.877 0 0 0-.65-.001c-.635.07-1.141.286-1.559.666-.48.437-.795 1.103-.912 1.926-.056.393-.057.436-.054 2.915l.002 2.184.022.064a.525.525 0 0 0 .359.339c.078.02.188.02.267 0zm11.99-8.863a.687.687 0 0 0 .546-.505.849.849 0 0 0 .008-.3.685.685 0 0 0-.455-.516.678.678 0 0 0-.895.649c0 .055.005.11.012.142a.684.684 0 0 0 .783.53zm-2.667-.138a.495.495 0 0 0 .32-.265c.046-.092.06-.158.067-.343a2.224 2.224 0 0 1 .617-1.49 1.934 1.934 0 0 1 1.146-.587c.145-.022.434-.024.581-.004.307.043.58.143.822.3.244.16.474.4.634.663.202.333.326.763.327 1.127 0 .1.012.184.036.26a.507.507 0 0 0 .94.068c.053-.111.06-.15.059-.35 0-.198-.01-.318-.043-.514-.217-1.298-1.165-2.294-2.426-2.545a2.47 2.47 0 0 0-.625-.055 3.031 3.031 0 0 0-2.738 1.638 3.3 3.3 0 0 0-.366 1.43c-.01.265.037.418.167.544a.509.509 0 0 0 .482.123z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://musescore.org/en/about/logos-and-graphics\",hex:\"1A70B8\"},\"MX Linux\":{title:\"MX Linux\",slug:\"mxlinux\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>MX Linux icon</title><path d=\"M12.001 13.301l3.277 3.819-.75.9-2.133-2.521-1.131-1.338.737-.86zM24 2.41v19.182c0 .655-.531 1.186-1.186 1.186H1.186A1.186 1.186 0 0 1 0 21.591V2.409c0-.655.531-1.186 1.186-1.186h21.628c.655 0 1.186.53 1.186 1.186zm-2.241 17.09l-2.116-2.542-2.115-2.541-.586.704-3.25-3.788 4.913-5.73-1.175-1.008-4.76 5.549-4.743-5.527-1.947 1.67 5 5.827-.73.851-1.24-1.465-3.384 4-3.385 4h19.518z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://mxlinux.org/art/\",hex:\"000000\"},Myspace:{title:\"Myspace\",slug:\"myspace\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Myspace icon</title><path d=\"M19.803 12.274c2.108 0 3.818-1.703 3.818-3.804s-1.71-3.795-3.818-3.795c-2.109 0-3.818 1.71-3.818 3.81 0 2.101 1.709 3.811 3.818 3.811v-.022zm-8.603.705c1.897 0 3.436-1.533 3.436-3.424S13.098 6.13 11.2 6.13 7.764 7.676 7.764 9.566C7.764 11.457 9.299 13 11.2 13v-.021zm-7.8.635c1.71 0 3.093-1.38 3.093-3.081 0-1.704-1.395-3.084-3.105-3.084C1.681 7.449.3 8.829.3 10.539c0 1.7 1.387 3.078 3.095 3.078l.005-.003zm0 .705c-1.96 0-3.4 1.717-3.4 3.495v1.196c0 .17.138.31.31.31h6.18c.171 0 .309-.14.309-.31v-1.196c0-1.779-1.437-3.5-3.398-3.5l-.001.005zm7.8-.56c-2.179 0-3.78 1.915-3.78 3.891v1.331c0 .188.156.344.345.344h6.871c.188 0 .342-.155.342-.344V17.65c0-1.976-1.598-3.891-3.778-3.891zm8.603-.617c-2.422 0-4.197 2.126-4.197 4.323v1.477c0 .21.172.381.382.381h7.63c.21 0 .383-.171.383-.381v-1.477c-.001-2.197-1.776-4.323-4.198-4.323z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://myspace.com/pressroom/assetslogos\",hex:\"030303\"},MySQL:{title:\"MySQL\",slug:\"mysql\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>MySQL icon</title><path d=\"M16.405 5.676c-.115 0-.193.014-.274.033v.013h.014c.054.104.146.18.214.273.054.107.1.214.154.32l.014-.015c.094-.066.14-.172.14-.333-.04-.047-.046-.094-.08-.14-.04-.067-.126-.1-.18-.153zM5.77 18.87h-.927c-.03-1.562-.123-3.03-.27-4.41h-.008l-1.41 4.41H2.45l-1.4-4.41h-.01c-.103 1.323-.168 2.793-.195 4.41H0c.055-1.966.192-3.81.41-5.53h1.15l1.335 4.064h.008L4.25 13.34h1.095c.242 2.015.384 3.86.428 5.53zm4.017-4.08c-.378 2.045-.876 3.533-1.492 4.46-.482.716-1.01 1.073-1.583 1.073-.153 0-.34-.046-.566-.138v-.494c.11.017.24.026.386.026.268 0 .483-.075.647-.222.197-.18.295-.382.295-.605 0-.155-.077-.47-.23-.944L6.23 14.79h.91l.727 2.36c.164.536.233.91.205 1.123.4-1.064.678-2.227.835-3.483h.88zM22.112 18.87h-2.63v-5.53h.885v4.85h1.745zM18.792 19.005l-1.016-.5c.09-.076.177-.158.255-.25.433-.506.648-1.258.648-2.253 0-1.83-.718-2.746-2.155-2.746-.704 0-1.254.232-1.65.697-.43.508-.646 1.256-.646 2.245 0 .972.19 1.686.574 2.14.35.41.877.615 1.583.615.264 0 .506-.033.725-.098l1.325.772.36-.622zM15.5 17.763c-.225-.36-.337-.94-.337-1.736 0-1.393.424-2.09 1.27-2.09.443 0 .77.167.977.5.224.362.336.936.336 1.723 0 1.404-.424 2.108-1.27 2.108-.445 0-.77-.167-.978-.5zM13.842 17.338c0 .47-.172.856-.516 1.156s-.803.45-1.384.45c-.543 0-1.064-.172-1.573-.515l.237-.476c.438.22.833.328 1.19.328.332 0 .593-.073.783-.22.188-.147.3-.354.3-.615 0-.33-.23-.61-.648-.845-.388-.213-1.163-.657-1.163-.657-.422-.307-.632-.636-.632-1.177 0-.45.157-.81.47-1.085.315-.278.72-.415 1.22-.415.512 0 .98.136 1.4.41l-.213.476c-.36-.152-.715-.23-1.064-.23-.283 0-.502.068-.654.206-.153.136-.248.31-.248.524 0 .328.234.61.666.85.393.215 1.187.67 1.187.67.433.305.648.63.648 1.168zM23.224 11.486c-.535-.014-.95.04-1.297.188-.1.04-.26.04-.274.167.055.053.063.14.11.214.08.134.218.313.346.407.14.11.28.216.427.31.26.16.555.255.81.416.145.094.293.213.44.313.073.05.12.14.214.172v-.02c-.046-.06-.06-.147-.105-.214-.067-.067-.134-.127-.2-.193-.194-.26-.435-.487-.695-.675-.214-.146-.682-.35-.77-.595l-.013-.014c.146-.013.32-.066.46-.106.227-.06.435-.047.67-.106.106-.027.213-.06.32-.094v-.06c-.12-.12-.21-.283-.334-.395-.34-.295-.717-.582-1.104-.823-.21-.134-.476-.22-.697-.334-.08-.04-.214-.06-.26-.127-.12-.146-.19-.34-.275-.514-.192-.368-.38-.775-.547-1.163-.12-.262-.193-.523-.34-.763-.69-1.137-1.437-1.826-2.586-2.5-.247-.14-.543-.2-.856-.274-.167-.008-.334-.02-.5-.027-.11-.047-.216-.174-.31-.235-.38-.24-1.364-.76-1.644-.072-.18.434.267.862.422 1.082.115.153.26.328.34.5.047.116.06.235.107.356.106.294.207.622.347.897.073.14.153.287.247.413.054.073.146.107.167.227-.094.136-.1.334-.154.5-.24.757-.146 1.693.194 2.25.107.166.362.534.703.393.3-.12.234-.5.32-.835.02-.08.007-.133.048-.187v.015c.094.188.188.367.274.555.206.328.566.668.867.895.16.12.287.328.487.402v-.02h-.015c-.043-.058-.1-.086-.154-.133-.12-.12-.255-.267-.35-.4-.28-.377-.527-.79-.747-1.218-.11-.21-.202-.436-.29-.643-.04-.08-.04-.2-.107-.24-.1.146-.247.273-.32.453-.127.288-.14.642-.188 1.01-.027.007-.014 0-.027.014-.214-.052-.287-.274-.367-.46-.2-.475-.233-1.238-.06-1.785.047-.14.247-.582.167-.716-.042-.127-.174-.2-.247-.303-.087-.124-.18-.285-.24-.427-.16-.374-.24-.788-.414-1.162-.08-.173-.22-.354-.334-.513-.127-.18-.267-.307-.368-.52-.033-.073-.08-.194-.027-.274.014-.054.042-.075.094-.09.088-.072.335.022.422.062.247.1.455.194.662.334.094.066.195.193.315.226h.14c.214.047.455.014.655.073.355.114.675.28.962.46.876.556 1.596 1.345 2.085 2.286.08.154.115.295.188.455.14.33.313.663.455.982.14.315.275.636.476.897.1.14.502.213.682.286.133.06.34.115.46.188.23.14.454.3.67.454.11.076.443.243.463.378z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.mysql.com/about/legal/logos.html\",hex:\"4479A1\"},NativeScript:{title:\"NativeScript\",slug:\"nativescript\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>NativeScript icon</title><path d=\"M1.77 1.76A5.68 5.68 0 0 1 5.8 0h12.6c1.37 0 2.65.6 3.83 1.76A5.43 5.43 0 0 1 24 5.7v12.77c0 1.34-.56 2.58-1.68 3.73A5.77 5.77 0 0 1 18.25 24H5.87a6.3 6.3 0 0 1-4.1-1.57C.69 21.45.1 20.03 0 18.13V5.73a5.21 5.21 0 0 1 1.77-3.97zm6.25 8.3l7.93 10.06h2.12c.49-.06.88-.2 1.17-.43.3-.23.5-.56.64-1v-4.94c.08-.95.67-1.54 1.77-1.75-1.1-.4-1.69-1.02-1.77-1.86V5.42c-.12-.44-.33-.8-.64-1.07a1.83 1.83 0 0 0-1.09-.47H16v10.2L8.02 3.87H5.79c-.56.1-.97.3-1.25.6S4.08 5.25 4 5.9v4.85c-.35.69-.9 1.1-1.65 1.25.85.16 1.4.61 1.65 1.36v4.77c.02.55.2 1 .54 1.37.33.36.7.53 1.1.5H8l.02-9.94z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://docs.nativescript.org/\",hex:\"3655FF\"},NEC:{title:\"NEC\",slug:\"nec\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>NEC icon</title><path d=\"M.08 9.27H2c.44 0 .95.4 1.19.63l3.36 3.69V9.27H7.7v5.9h-2c-.36-.02-.71-.1-1.12-.49l-3.36-3.7v4.18H.08V9.27zM23.92 15.2c-1.37.19-2.75.2-4.14.09a6.21 6.21 0 01-2.34-.61c-.92-.48-1.22-1.54-1.2-2.5 0-.88.27-1.83 1.07-2.35A4.33 4.33 0 0119 9.27c1.62-.28 3.25-.22 4.84-.04v.84c-1.87-.36-3.85-.27-4.52.58a2.25 2.25 0 00-.48 1.5c0 .8.28 2 1.92 2.24 1.07.15 2.13.03 3.16-.15v.96zM12.2 14.28c.16 0 2.74.02 3.63 0v.88c-1.79.07-3.5.1-5.3.03-1.53-.06-1.8-.82-1.82-1.55V9.27h7.03v.84H11.2v1.5h4.15v.82h-4.15l.02 1.03c.02.57.3.78.99.82z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://commons.wikimedia.org/wiki/File:NEC_logo.svg\",hex:\"1414A0\"},Neo4j:{title:\"Neo4j\",slug:\"neo4j\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Neo4j icon</title><path d=\"M22.717 8.417c-.014 2.959-2.412 5.321-5.391 5.309-2.946-.014-5.306-2.424-5.291-5.407.014-2.9 2.458-5.287 5.391-5.265 2.926.022 5.304 2.434 5.291 5.363zM9.813 24c-2.357.008-4.337-1.965-4.361-4.344-.024-2.33 1.955-4.33 4.295-4.34 2.438-.01 4.395 1.916 4.395 4.326.003 2.383-1.952 4.35-4.329 4.358zM8.923 2.84c0 1.562-1.286 2.847-2.841 2.839C4.533 5.672 3.221 4.35 3.246 2.82 3.271 1.268 4.588-.022 6.126 0c1.531.023 2.797 1.308 2.797 2.84zM21.9 11.948c-2.697 2.356-5 2.779-7.42 1.36-2.14-1.254-3.196-3.721-2.654-6.197.587-2.68 2.506-4.085 6.197-4.467C15.222.642 12.26.025 9.008.821c-.421.102-.241.261-.126.473.786 1.447.383 3.207-.942 4.151-1.325.943-3.126.755-4.218-.49-.322-.367-.427-.269-.654.063C.56 8.691.705 13.697 3.44 17.203c.492.631 1.027 1.219 1.691 1.71.75-3.208 3.394-4.251 5.519-3.888 2.593.442 4.002 2.602 3.758 5.787 3.516-.43 7.927-5.65 7.492-8.864zm-9.088-9.853c.462-.023.87.365.881.835.009.456-.347.827-.807.843-.506.017-.862-.32-.866-.818-.005-.476.328-.837.792-.86zM5.076 6.629c.48.009.853.401.832.876-.019.452-.398.804-.859.798-.46-.006-.821-.366-.828-.827-.007-.483.369-.855.855-.847zm-.721 3.099c.003-.451.374-.824.829-.835.461-.011.825.335.844.803.02.489-.337.878-.813.887-.473.007-.863-.381-.86-.855zm.515 2.371c.023-.46.396-.806.858-.797.479.01.822.391.802.891-.019.468-.384.813-.846.797-.478-.014-.838-.409-.814-.891zm1.992 3.034c-.5.007-.857-.345-.851-.838.006-.46.371-.832.818-.836.47-.004.873.391.869.853-.002.452-.371.813-.836.821zm3.831-12.11c-.469.012-.868-.38-.866-.849.002-.481.384-.84.876-.826.462.013.814.376.813.837-.001.449-.372.827-.823.838zm5.008 15.122c-.494-.004-.856-.375-.838-.858.018-.446.402-.81.855-.808.479.004.85.393.833.875-.015.462-.37.792-.85.791zm1.534-1.77c-.482.011-.872-.367-.866-.84.005-.462.363-.822.825-.833.485-.011.864.356.863.841.001.455-.362.821-.822.832z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://neo4j.com/style-guide/\",hex:\"008CC1\"},Netflix:{title:\"Netflix\",slug:\"netflix\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Netflix icon</title><path d=\"M5.39.004l4.75 13.46v-.007l.376 1.06c2.088 5.908 3.21 9.075 3.216 9.082.004 0 .32.02.702.04 1.156.05 2.59.18 3.676.31.25.03.466.04.48.03l-4.71-13.36-.436-1.23-2.423-6.85c-.46-1.3-.85-2.408-.87-2.45L10.12 0H5.395zM13.898.012l-.01 5.306-.008 5.306-.437-1.232V9.39l-.565 11.81c.555 1.567.852 2.403.855 2.407.004.004.32.024.702.042 1.157.05 2.59.18 3.68.31.25.03.467.04.48.03s.02-5.42.017-12.01L18.604.01h-4.706zM5.39.002v11.99c0 6.594.007 11.995.015 12.003s.416-.03.907-.086c.49-.06 1.17-.13 1.51-.16.518-.05 2.068-.15 2.248-.15.052 0 .056-.27.063-5.08l.008-5.08.38 1.06.13.376.57-11.8-.19-.546-.88-2.44-.03-.087H5.39z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://commons.wikimedia.org/wiki/File:Netflix_2014_logo.svg\",hex:\"E50914\"},Netlify:{title:\"Netlify\",slug:\"netlify\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Netlify icon</title><path d=\"M16.934 8.519a1.044 1.044 0 0 1 .303.23l2.349-1.045-2.192-2.171-.491 2.954zM12.06 6.546a1.305 1.305 0 0 1 .209.574l3.497 1.482a1.044 1.044 0 0 1 .355-.177l.574-3.55-2.13-2.234-2.505 3.852v.053zm11.933 5.491l-3.748-3.748-2.548 1.044 6.264 2.662s.053.042.032.042zm-.627.606l-6.013-2.569a1.044 1.044 0 0 1-.7.407l-.647 3.957a1.044 1.044 0 0 1 .303.731l3.633.762 3.33-3.31v-.062zM15.4 9.25L12.132 7.86a1.2 1.2 0 0 1-1.044.543h-.199L8.185 12.58l7.225-3.132v.01a.887.887 0 0 1 0-.167.052.052 0 0 0-.01-.041zm3.967 7.308l-3.195-.658a1.096 1.096 0 0 1-.46.344l-.761 4.72 4.437-4.396s-.01.02-.021.02zm-4.469-.324a1.044 1.044 0 0 1-.616-.71l-5.95-1.222-.084.136 5.398 7.81.323-.324.919-5.67s.031.022.01.011zm-6.441-2.652l5.878 1.211a1.044 1.044 0 0 1 .824-.522l.637-3.894-.135-.115-7.308 3.132a1.817 1.817 0 0 1 .104.188zm-2.464.981l-.125-.125-2.537 1.044 1.232 1.222 1.399-2.172zm1.67.397a1.368 1.368 0 0 1-.563.125 1.389 1.389 0 0 1-.45-.073l-1.544 2.245 6.765 6.702 1.19-1.18zm-.95-2.641a1.702 1.702 0 0 1 .314 0 1.378 1.378 0 0 1 .344 0l2.735-4.25a1.19 1.19 0 0 1-.334-.824 1.242 1.242 0 0 1 0-.271l-3.32-1.535-2.672 2.6zm.303-7.402l3.237 1.378a1.242 1.242 0 0 1 .835-.282 1.357 1.357 0 0 1 .397.063l2.526-3.947L11.923.041 7.016 4.854s-.01.052 0 .063zm-1.21 8.164a1.566 1.566 0 0 1 .24-.334L3.278 8.613 0 11.797l5.804 1.284zm-.262.7L.533 12.735l2.203 2.235 2.777-1.18z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.netlify.com/press/\",hex:\"00C7B7\"},\"Next.js\":{title:\"Next.js\",slug:\"next-dot-js\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Next.js icon</title><path d=\"M17.813 22.502c-.089.047-.084.066.005.021a.228.228 0 0 0 .07-.047c0-.016-.002-.014-.075.026zm.178-.094c-.042.033-.042.035.009.009.028-.014.052-.03.052-.035 0-.019-.012-.014-.061.026zm.117-.071c-.042.033-.042.035.009.009.028-.014.052-.03.052-.035 0-.019-.012-.014-.061.026zm.117-.07c-.042.033-.042.035.009.009.028-.014.052-.03.052-.035 0-.019-.012-.014-.061.026zm.162-.105c-.082.052-.108.087-.035.047.052-.03.136-.094.122-.096a.466.466 0 0 0-.087.049zM11.214.006c-.052.005-.216.021-.364.033-3.408.307-6.601 2.146-8.623 4.973a11.876 11.876 0 0 0-2.118 5.243c-.096.659-.108.854-.108 1.748s.012 1.088.108 1.748c.652 4.506 3.859 8.292 8.208 9.695.779.251 1.6.422 2.533.525.364.04 1.935.04 2.299 0 1.611-.178 2.977-.577 4.323-1.264.206-.106.246-.134.218-.157a231.73 231.73 0 0 1-1.954-2.62l-1.919-2.592-2.404-3.558a332.01 332.01 0 0 0-2.421-3.556c-.009-.002-.019 1.579-.023 3.509-.007 3.38-.009 3.516-.052 3.596a.424.424 0 0 1-.206.213c-.075.038-.141.045-.495.045H7.81l-.108-.068a.442.442 0 0 1-.157-.171l-.049-.106.005-4.703.007-4.705.073-.091a.637.637 0 0 1 .174-.143c.096-.047.134-.052.54-.052.479 0 .558.019.683.155a466.83 466.83 0 0 1 2.895 4.361c1.558 2.362 3.687 5.587 4.734 7.171l1.9 2.878.096-.063a12.34 12.34 0 0 0 2.465-2.163 11.94 11.94 0 0 0 2.824-6.134c.096-.659.108-.854.108-1.748s-.012-1.088-.108-1.748c-.652-4.506-3.859-8.292-8.208-9.695a12.552 12.552 0 0 0-2.498-.523c-.225-.023-1.776-.049-1.97-.03zm4.912 7.258a.471.471 0 0 1 .237.277c.019.061.023 1.365.019 4.304l-.007 4.218-.744-1.14-.746-1.14v-3.066c0-1.982.009-3.096.023-3.15a.484.484 0 0 1 .232-.296c.096-.049.131-.054.5-.054.347 0 .408.005.486.047z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://nextjs.org/\",hex:\"000000\"},Nextcloud:{title:\"Nextcloud\",slug:\"nextcloud\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Nextcloud icon</title><path d=\"M12.018 6.537c-2.5 0-4.6 1.712-5.241 4.015-.56-1.232-1.793-2.105-3.225-2.105A3.569 3.569 0 0 0 0 12a3.569 3.569 0 0 0 3.552 3.553c1.432 0 2.664-.874 3.224-2.106.641 2.304 2.742 4.016 5.242 4.016 2.487 0 4.576-1.693 5.231-3.977.569 1.21 1.783 2.067 3.198 2.067A3.568 3.568 0 0 0 24 12a3.569 3.569 0 0 0-3.553-3.553c-1.416 0-2.63.858-3.199 2.067-.654-2.284-2.743-3.978-5.23-3.977zm0 2.085c1.878 0 3.378 1.5 3.378 3.378 0 1.878-1.5 3.378-3.378 3.378A3.362 3.362 0 0 1 8.641 12c0-1.878 1.5-3.378 3.377-3.378zm-8.466 1.91c.822 0 1.467.645 1.467 1.468s-.644 1.467-1.467 1.468A1.452 1.452 0 0 1 2.085 12c0-.823.644-1.467 1.467-1.467zm16.895 0c.823 0 1.468.645 1.468 1.468s-.645 1.468-1.468 1.468A1.452 1.452 0 0 1 18.98 12c0-.823.644-1.467 1.467-1.467z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://nextcloud.com/press/\",hex:\"0082C9\"},Nextdoor:{title:\"Nextdoor\",slug:\"nextdoor\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Nextdoor icon</title><path d=\"M23.993 9.816L12 2.473l-4.12 2.524V2.473H4.124v4.819L.004 9.816l1.961 3.202 2.16-1.315v9.826h15.749v-9.826l2.159 1.315 1.96-3.202\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://nextdoor.com/newsroom/\",hex:\"00B246\"},NGINX:{title:\"NGINX\",slug:\"nginx\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>NGINX icon</title><path d=\"M12 0L1.605 6v12L12 24l10.395-6V6L12 0zm6 16.59c0 .705-.646 1.29-1.529 1.29-.631 0-1.351-.255-1.801-.81l-6-7.141v6.66c0 .721-.57 1.29-1.274 1.29H7.32c-.721 0-1.29-.6-1.29-1.29V7.41c0-.705.63-1.29 1.5-1.29.646 0 1.38.255 1.83.81l5.97 7.141V7.41c0-.721.6-1.29 1.29-1.29h.075c.72 0 1.29.6 1.29 1.29v9.18H18z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.nginx.com/\",hex:\"269539\"},Nim:{title:\"Nim\",slug:\"nim\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Nim icon</title><path d=\"M12.095 2.9s-.92.778-1.857 1.55c-.964-.032-2.856.199-3.88.598C5.412 4.408 4.582 3.7 4.582 3.7s-.709 1.305-1.154 2.07c-.662.377-1.325.8-1.917 1.36C.824 6.84.026 6.482 0 6.471c.911 1.966 1.524 3.935 3.19 5.119 2.654-4.483 14.983-4.07 17.691-.025 1.75-.977 2.43-3.078 3.119-5.018-.075.026-1.012.362-1.619.61-.363-.423-1.217-1.072-1.702-1.385a96.008 96.008 0 00-1.131-2.122s-.794.632-1.715 1.322c-1.243-.246-2.747-.544-4.012-.47A52.988 52.988 0 0112.095 2.9z M.942 10.65l2.189 5.671c3.801 5.366 13.508 5.739 17.74.104 1.001-2.415 2.352-5.808 2.352-5.808-1.086 1.721-2.852 2.909-3.94 3.549-.774.453-2.558.727-2.558.727l-4.684-2.597-4.71 2.545s-1.761-.303-2.558-.701c-1.608-.919-2.69-2.004-3.83-3.49z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://nim-lang.org\",hex:\"FFE953\"},Nintendo:{title:\"Nintendo\",slug:\"nintendo\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Nintendo icon</title><path d=\"M0 .6h7.1l9.85 15.9V.6H24v22.8h-7.04L7.06 7.5v15.9H0V.6\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://en.wikipedia.org/wiki/Nintendo#/media/File:Nintendo.svg\",hex:\"8F8F8F\"},\"Nintendo 3DS\":{title:\"Nintendo 3DS\",slug:\"nintendo3ds\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Nintendo 3DS icon</title><path d=\"M17.653 16.63a.712.712 0 1 0 1.424 0 .712.712 0 1 0-1.424 0m-9.45 4.238h7.575c.3 0 .524-.225.544-.524v-5.175c-.02-.282-.263-.525-.544-.507H8.203a.54.54 0 0 0-.544.525v5.156c0 .301.244.525.544.525zm13.051-3.525a.729.729 0 0 0 .73-.729.73.73 0 1 0-.73.729zm-1.443-.019a.714.714 0 1 0 .001 1.427.714.714 0 0 0-.001-1.427zm-.713-2.137a.712.712 0 1 0 1.424 0 .712.712 0 1 0-1.424 0M2.54 16.612a1.65 1.65 0 1 0 3.3 0 1.65 1.65 0 1 0-3.3 0M21.272 0H2.728A2.73 2.73 0 0 0-.01 2.72v18.542C.009 22.781 1.228 24 2.728 24h18.526a2.753 2.753 0 0 0 2.756-2.719V2.737C23.991 1.219 22.772 0 21.272 0zm1.913 21.281a1.92 1.92 0 0 1-1.912 1.912H2.728a1.92 1.92 0 0 1-1.913-1.912v-8.456h22.369v8.456zm0-9.694H.815v-8.85A1.92 1.92 0 0 1 2.728.824h18.544c1.049 0 1.912.863 1.912 1.913v8.85 M17.409 3.112H6.534c-.3 0-.544.263-.544.563V9.15c0 .3.226.563.544.563h10.875a.548.548 0 0 0 .544-.563V3.656a.543.543 0 0 0-.544-.544z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.nintendo.de/\",hex:\"D12228\"},\"Nintendo GameCube\":{title:\"Nintendo GameCube\",slug:\"nintendogamecube\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Nintendo GameCube icon</title><path d=\"M6.815 15.128l4.704 2.715V12.41L6.813 9.696v5.433zM4.79 16.296l6.73 3.883V24L1.48 18.207V6.617l3.31 1.91v7.77zM12 6.146L7.297 8.864 12 11.58l4.705-2.717L12 6.147zM12 3.813l5.66 3.275 3.31-1.91L12 0 1.973 5.79 5.28 7.697 12 3.813zm7.208 12.483v-3.948l-2.023 1.167v1.614l-4.704 2.715v.005-5.436L22.52 6.62v11.588l-10.04 5.795v-3.817l6.728-3.888z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.nintendo.com/consumer/systems/nintendogamecube/index.jsp\",hex:\"6A5FBB\"},\"Nintendo Switch\":{title:\"Nintendo Switch\",slug:\"nintendoswitch\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Nintendo Switch icon</title><path d=\"M14.176 24h3.674c3.376 0 6.15-2.774 6.15-6.15V6.15C24 2.775 21.226 0 17.85 0H14.1c-.074 0-.15.074-.15.15v23.7c-.001.076.075.15.226.15zm4.574-13.199c1.351 0 2.399 1.125 2.399 2.398 0 1.352-1.125 2.4-2.399 2.4-1.35 0-2.4-1.049-2.4-2.4-.075-1.349 1.05-2.398 2.4-2.398zM11.4 0H6.15C2.775 0 0 2.775 0 6.15v11.7C0 21.226 2.775 24 6.15 24h5.25c.074 0 .15-.074.15-.149V.15c.001-.076-.075-.15-.15-.15zM9.676 22.051H6.15c-2.326 0-4.201-1.875-4.201-4.201V6.15c0-2.326 1.875-4.201 4.201-4.201H9.6l.076 20.102zM3.75 7.199c0 1.275.975 2.25 2.25 2.25s2.25-.975 2.25-2.25c0-1.273-.975-2.25-2.25-2.25s-2.25.977-2.25 2.25z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://www.nintendo.co.uk/\",hex:\"E60012\"},\"Node.js\":{title:\"Node.js\",slug:\"node-dot-js\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Node.js icon</title><path d=\"M11.998,24c-0.321,0-0.641-0.084-0.922-0.247l-2.936-1.737c-0.438-0.245-0.224-0.332-0.08-0.383 c0.585-0.203,0.703-0.25,1.328-0.604c0.065-0.037,0.151-0.023,0.218,0.017l2.256,1.339c0.082,0.045,0.197,0.045,0.272,0l8.795-5.076 c0.082-0.047,0.134-0.141,0.134-0.238V6.921c0-0.099-0.053-0.192-0.137-0.242l-8.791-5.072c-0.081-0.047-0.189-0.047-0.271,0 L3.075,6.68C2.99,6.729,2.936,6.825,2.936,6.921v10.15c0,0.097,0.054,0.189,0.139,0.235l2.409,1.392 c1.307,0.654,2.108-0.116,2.108-0.89V7.787c0-0.142,0.114-0.253,0.256-0.253h1.115c0.139,0,0.255,0.112,0.255,0.253v10.021 c0,1.745-0.95,2.745-2.604,2.745c-0.508,0-0.909,0-2.026-0.551L2.28,18.675c-0.57-0.329-0.922-0.945-0.922-1.604V6.921 c0-0.659,0.353-1.275,0.922-1.603l8.795-5.082c0.557-0.315,1.296-0.315,1.848,0l8.794,5.082c0.57,0.329,0.924,0.944,0.924,1.603 v10.15c0,0.659-0.354,1.273-0.924,1.604l-8.794,5.078C12.643,23.916,12.324,24,11.998,24z M19.099,13.993 c0-1.9-1.284-2.406-3.987-2.763c-2.731-0.361-3.009-0.548-3.009-1.187c0-0.528,0.235-1.233,2.258-1.233 c1.807,0,2.473,0.389,2.747,1.607c0.024,0.115,0.129,0.199,0.247,0.199h1.141c0.071,0,0.138-0.031,0.186-0.081 c0.048-0.054,0.074-0.123,0.067-0.196c-0.177-2.098-1.571-3.076-4.388-3.076c-2.508,0-4.004,1.058-4.004,2.833 c0,1.925,1.488,2.457,3.895,2.695c2.88,0.282,3.103,0.703,3.103,1.269c0,0.983-0.789,1.402-2.642,1.402 c-2.327,0-2.839-0.584-3.011-1.742c-0.02-0.124-0.126-0.215-0.253-0.215h-1.137c-0.141,0-0.254,0.112-0.254,0.253 c0,1.482,0.806,3.248,4.655,3.248C17.501,17.007,19.099,15.91,19.099,13.993z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://nodejs.org/en/about/resources/\",hex:\"339933\"},Nodemon:{title:\"Nodemon\",slug:\"nodemon\",svg:'<svg viewBox=\"0 0 24 24\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\"><title>Nodemon icon</title><path d=\"M22.33 7.851l-.716-.398c1.101-1.569 1.758-3.927.934-7.453 0 0-1.857 5.029-5.59 4.863l-4.37-2.431a1.171 1.171 0 0 0-.536-.15h-.101a1.183 1.183 0 0 0-.538.15L7.042 4.863C3.309 5.03 1.452 0 1.452 0c-.825 3.526-.166 5.884.934 7.453l-.716.398a1.133 1.133 0 0 0-.589.988l.022 14.591c0 .203.109.392.294.491a.58.58 0 0 0 .584 0l5.79-3.204c.366-.211.589-.582.589-.987v-6.817c0-.406.223-.783.588-.984l2.465-1.372a1.19 1.19 0 0 1 .59-.154c.2 0 .407.05.585.154l2.465 1.372c.365.201.588.578.588.984v6.817c0 .405.226.779.59.987l5.788 3.204a.59.59 0 0 0 .589 0 .564.564 0 0 0 .292-.491l.019-14.591a1.129 1.129 0 0 0-.589-.988z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://nodemon.io/\",hex:\"76D04B\"},Nokia:{title:\"Nokia\",slug:\"nokia\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Nokia icon</title><path d=\"M1.163 13.954H.008v-3.89h1.997l2.292 2.904v-2.904h1.155v3.89H3.495L1.163 11v2.954m9.814-1.203c0 .54-.097.727-.257.906-.244.266-.6.346-1.288.346H7.46c-.686 0-1.043-.08-1.288-.346-.16-.179-.256-.365-.256-.906v-1.5c0-.54.096-.726.256-.905.245-.266.602-.347 1.288-.347h1.972c.687 0 1.044.08 1.288.347.16.179.257.365.257.906v1.499m-1.593.267c.264 0 .356-.016.42-.073.059-.053.085-.121.085-.35v-1.187c0-.229-.026-.297-.085-.35-.064-.058-.156-.073-.42-.073H7.509c-.264 0-.357.015-.42.073-.06.053-.085.121-.085.35v1.187c0 .229.026.297.085.35.063.057.156.073.42.073h1.875m3.271-2.954v3.89h-1.207v-3.89h1.207m2.039 0h1.593l-2.15 1.82 2.425 2.07h-1.705l-2.202-2.029 2.039-1.86m2.09 0h1.207v3.889h-1.207m5.808 0l-.357-.678H19.9l-.353.678h-1.333l2.139-3.89h1.5l2.139 3.89h-1.4m-2.273-1.522h1.5l-.75-1.409-.75 1.409\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.nokia.com/\",hex:\"124191\"},\"Node-RED\":{title:\"Node-RED\",slug:\"node-red\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Node-RED icon</title><path d=\"M3 0C1.338 0 0 1.338 0 3v6.107h2.858c1.092 0 1.97.868 1.964 1.96v.021c.812-.095 1.312-.352 1.674-.683.416-.382.69-.91 1.016-1.499.325-.59.71-1.244 1.408-1.723.575-.395 1.355-.644 2.384-.686v-.45c0-1.092.88-1.976 1.972-1.976h7.893c1.091 0 1.974.884 1.974 1.976v1.942c0 1.091-.883 2.029-1.974 2.029h-7.893c-1.092 0-1.972-.938-1.972-2.03v-.453c-.853.037-1.408.236-1.798.504-.48.33-.774.802-1.086 1.368-.312.565-.63 1.22-1.222 1.763l-.077.069c3.071.415 4.465 1.555 5.651 2.593 1.39 1.215 2.476 2.275 6.3 2.288v-.46c0-1.092.894-1.946 1.986-1.946H24V3c0-1.662-1.338-3-3-3zm10.276 5.41c-.369 0-.687.268-.687.637v1.942c0 .368.318.636.687.636h7.892a.614.614 0 0 0 .635-.636V6.047a.614.614 0 0 0-.635-.636zM0 10.448v3.267h2.858a.696.696 0 0 0 .678-.69v-1.942c0-.368-.31-.635-.678-.635zm4.821 1.67v.907A1.965 1.965 0 0 1 2.858 15H0v6c0 1.662 1.338 3 3 3h18c1.662 0 3-1.338 3-3v-1.393h-2.942c-1.092 0-1.986-.913-1.986-2.005v-.445c-4.046-.032-5.598-1.333-6.983-2.544-1.437-1.257-2.751-2.431-7.268-2.496zM21.058 15a.644.644 0 0 0-.647.66v1.942c0 .368.278.612.647.612H24V15z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://nodered.org/about/resources/\",hex:\"8F0000\"},Notion:{title:\"Notion\",slug:\"notion\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Notion icon</title><path d=\"M4.459 4.208c.746.606 1.026.56 2.428.466l13.215-.793c.28 0 .047-.28-.046-.326L17.86 1.968c-.42-.326-.981-.7-2.055-.607L3.01 2.295c-.466.046-.56.28-.374.466zm.793 3.08v13.904c0 .747.373 1.027 1.214.98l14.523-.84c.841-.046.935-.56.935-1.167V6.354c0-.606-.233-.933-.748-.887l-15.177.887c-.56.047-.747.327-.747.933zm14.337.745c.093.42 0 .84-.42.888l-.7.14v10.264c-.608.327-1.168.514-1.635.514-.748 0-.935-.234-1.495-.933l-4.577-7.186v6.952L12.21 19s0 .84-1.168.84l-3.222.186c-.093-.186 0-.653.327-.746l.84-.233V9.854L7.822 9.76c-.094-.42.14-1.026.793-1.073l3.456-.233 4.764 7.279v-6.44l-1.215-.139c-.093-.514.28-.887.747-.933zM1.936 1.035l13.31-.98c1.634-.14 2.055-.047 3.082.7l4.249 2.986c.7.513.934.653.934 1.213v16.378c0 1.026-.373 1.634-1.68 1.726l-15.458.934c-.98.047-1.448-.093-1.962-.747l-3.129-4.06c-.56-.747-.793-1.306-.793-1.96V2.667c0-.839.374-1.54 1.447-1.632z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.notion.so/\",hex:\"000000\"},Notist:{title:\"Notist\",slug:\"notist\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Notist icon</title><path d=\"M5.934 3.801c-1.099.11-2.288.4-3.038.74-1.069.499-1.259.869-.909 1.868.36 1.04.19 2.308-1 7.505C.109 17.79-.04 18.6.01 19.32c.04.47.09.63.29.79.22.179.33.189 1.688.129 3.408-.17 4.057-.22 4.267-.34.24-.13.25-.2.44-1.758.32-2.868 1.788-7.155 3.027-8.894 1.06-1.479 2.359-2.128 3.098-1.549.78.62.76 1.559-.13 4.147-.68 1.999-.79 2.428-.909 3.617-.15 1.46.13 2.489.96 3.408.849.94 2.118 1.409 3.846 1.409 1.64 0 2.968-.41 4.377-1.339 1.29-.86 2.828-2.608 3.008-3.428.1-.41-.07-.859-.35-.969-.41-.15-.65-.04-1.389.63-.859.78-1.249.949-2.008.889-1.01-.08-1.45-.66-1.45-1.919 0-.899.09-1.349.65-3.317.79-2.728.93-3.967.58-5.027-.57-1.768-2.978-2.538-5.646-1.798-1.449.41-3.238 1.449-4.597 2.688-.38.34-.68.59-.68.56 0-.02.07-.35.16-.72.34-1.499.2-2.248-.479-2.598-.39-.2-1.599-.26-2.828-.13z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://noti.st/\",hex:\"333333\"},NPM:{title:\"NPM\",slug:\"npm\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>NPM icon</title><path d=\"M0 7.334v8h6.666v1.332H12v-1.332h12v-8H0zm6.666 6.664H5.334v-4H3.999v4H1.335V8.667h5.331v5.331zm4 0v1.336H8.001V8.667h5.334v5.332h-2.669v-.001zm12.001 0h-1.33v-4h-1.336v4h-1.335v-4h-1.33v4h-2.671V8.667h8.002v5.331zM10.665 10H12v2.667h-1.335V10z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/npm/logos\",hex:\"CB3837\"},Nucleo:{title:\"Nucleo\",slug:\"nucleo\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Nucleo icon</title><path d=\"M7.247 22.499c1.488.661 3.058 1.075 4.794 1.075 1.736 0 3.39-.414 4.795-1.075-1.57-1.075-3.224-2.397-4.795-3.803-1.57 1.406-3.224 2.728-4.794 3.803zm14.715-4.63A11.75 11.75 0 0 0 23.532 12c0-1.736-.413-3.39-1.074-4.795-1.736 2.563-4.216 5.456-7.027 8.267-.579.579-1.24 1.24-1.902 1.819-.248-.248-.496-.496-.826-.744a20.637 20.637 0 0 0 1.901-1.902c3.059-3.058 5.622-6.117 7.275-8.68 1.901-2.893 2.397-4.712 1.57-5.621-.082-.166-.495-.331-.909-.331-.992 0-2.645.744-4.63 2.067-1.735-.992-3.72-1.654-5.869-1.654-2.15 0-4.133.579-5.87 1.654C4.189.757 2.535.013 1.543.013 1.046.013.716.178.468.426-1.516 2.41 4.684 10.1 9.313 14.728c5.456 5.456 10.913 9.259 13.227 9.259.496 0 .827-.165 1.075-.413.827-.827.33-2.728-1.57-5.622l-.083-.083zm.578-16.781c.083 0 .248 0 .331.082.248.248.165 1.323-1.488 3.968-.661-.909-1.488-1.818-2.48-2.48 1.653-.992 2.893-1.57 3.637-1.57zM2.7 5.138C1.294 2.906.88 1.501 1.212 1.17c.082-.082.248-.082.33-.082.744 0 1.984.578 3.638 1.57a17.58 17.58 0 0 0-2.48 2.48zM22.87 22.83c-.083.082-.248.082-.33.082-.745 0-1.985-.578-3.638-1.57.91-.662 1.819-1.488 2.48-2.48 1.653 2.645 1.736 3.72 1.488 3.968zm-12.152-5.374c-.744-.661-1.488-1.323-2.15-2.067-2.728-2.728-5.373-5.786-7.027-8.266C.881 8.61.468 10.264.468 11.917c0 2.15.578 4.134 1.57 5.87l-.082.082C.054 20.763-.442 22.582.385 23.491c.248.248.661.413 1.075.413 1.818 0 5.539-2.314 9.672-5.952a3.13 3.13 0 0 1-.413-.496zm-9.177 5.456c-.082 0-.248 0-.33-.082-.248-.248-.166-1.323 1.488-3.968.661.909 1.488 1.736 2.48 2.48-1.654.992-2.894 1.57-3.638 1.57z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://nucleoapp.com/wp-content/themes/nucleo-webapp-12/img/logo.svg\",hex:\"766DCC\"},NuGet:{title:\"NuGet\",slug:\"nuget\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>NuGet icon</title><path d=\"M17.67 21.633a3.995 3.995 0 1 1 0-7.99 3.995 3.995 0 0 1 0 7.99m-7.969-9.157a2.497 2.497 0 1 1 0-4.994 2.497 2.497 0 0 1 0 4.994m8.145-7.795h-6.667a6.156 6.156 0 0 0-6.154 6.155v6.667a6.154 6.154 0 0 0 6.154 6.154h6.667A6.154 6.154 0 0 0 24 17.503v-6.667a6.155 6.155 0 0 0-6.154-6.155M3.995 2.339a1.998 1.998 0 1 1-3.996 0 1.998 1.998 0 0 1 3.996 0\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/NuGet/Media\",hex:\"004880\"},Nutanix:{title:\"Nutanix\",slug:\"nutanix\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Nutanix icon</title><path d=\"M.393 3.617A.395.395 0 000 4.012c0 .12.054.225.139.297l8.507 7.404a.39.39 0 01-.013.588l-8.52 7.412a.393.393 0 00.28.67h4.86c.103 0 .195-.04.265-.104l9.17-7.98a.396.396 0 00.001-.596L5.518 3.721a.386.386 0 00-.264-.104H.393zm18.359 0a.389.389 0 00-.273.113l-4.717 4.106a.392.392 0 00-.04.564l2.428 2.114a.393.393 0 00.291.129.394.394 0 00.278-.118l7.127-6.203a.389.389 0 00.154-.31.395.395 0 00-.393-.395h-4.855zm-2.31 9.742c-.116 0-.22.05-.292.13l-2.427 2.113a.392.392 0 00.039.564l4.717 4.104c.07.07.166.113.273.113h4.855a.393.393 0 00.239-.705l-7.127-6.203a.393.393 0 00-.278-.116Z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.nutanix.com/content/dam/nutanix/en/cmn/documents/nutanix-brandbook.pdf\",hex:\"024DA1\"},\"Nuxt.js\":{title:\"Nuxt.js\",slug:\"nuxt-dot-js\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Nuxt.js icon</title><path d=\"M19.724 20.272l.023-.045a.74.74 0 0 0 .053-.117l.002-.005a1.16 1.16 0 0 0 .054-.607l.001.007a1.795 1.795 0 0 0-.235-.623l.005.008-5.317-9.353-.812-1.42-.807 1.42-5.314 9.353a1.85 1.85 0 0 0-.204.604l-.001.011a1.257 1.257 0 0 0 .08.713l-.003-.008a.809.809 0 0 0 .05.102l-.002-.004c.16.275.5.602 1.25.602h9.898c.157 0 .925-.032 1.28-.637zm-6.227-9.316l4.859 8.548H8.64zm10.249 7.934L16.73 6.53c-.072-.13-.477-.787-1.182-.787-.317 0-.772.135-1.142.785l-.907 1.59.807 1.42 1.25-2.212 6.941 12.18h-2.64a1.187 1.187 0 0 1-.058.608l.003-.008a.772.772 0 0 1-.057.126l.002-.004-.023.045c-.355.605-1.122.637-1.272.637h4.129c.152 0 .917-.032 1.272-.637.157-.275.27-.737-.107-1.382zM7.304 20.307a.989.989 0 0 1-.045-.092l-.002-.006a1.228 1.228 0 0 1-.084-.712l-.001.007H1.501L9.93 4.672l2.767 4.864.802-1.42-2.412-4.249c-.067-.122-.475-.777-1.177-.777-.317 0-.772.137-1.142.787L.23 18.889c-.072.13-.425.812-.075 1.417.16.275.5.602 1.25.602h7.151c-.745 0-1.09-.322-1.25-.602z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://nuxtjs.org/\",hex:\"00C58E\"},NVIDIA:{title:\"NVIDIA\",slug:\"nvidia\",svg:'<svg xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" viewBox=\"0 0 24 24\"><title>NVIDIA icon</title><path d=\"M8.948 8.798v-1.43a6.7 6.7 0 0 1 .424-.018c3.922-.124 6.493 3.374 6.493 3.374s-2.774 3.851-5.75 3.851c-.398 0-.787-.062-1.158-.185v-4.346c1.528.185 1.837.857 2.747 2.385l2.04-1.714s-1.492-1.952-4-1.952a6.016 6.016 0 0 0-.796.035m0-4.735v2.138l.424-.027c5.45-.185 9.01 4.47 9.01 4.47s-4.08 4.964-8.33 4.964c-.37 0-.733-.035-1.095-.097v1.325c.3.035.61.062.91.062 3.957 0 6.82-2.023 9.593-4.408.459.371 2.34 1.263 2.73 1.652-2.633 2.208-8.772 3.984-12.253 3.984-.335 0-.653-.018-.971-.053v1.864H24V4.063zm0 10.326v1.131c-3.657-.654-4.673-4.46-4.673-4.46s1.758-1.944 4.673-2.262v1.237H8.94c-1.528-.186-2.73 1.245-2.73 1.245s.68 2.412 2.739 3.11M2.456 10.9s2.164-3.197 6.5-3.533V6.201C4.153 6.59 0 10.653 0 10.653s2.35 6.802 8.948 7.42v-1.237c-4.84-.6-6.492-5.936-6.492-5.936z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.nvidia.com/etc/designs/nvidiaGDC/clientlibs_base/images/NVIDIA-Logo.svg\",hex:\"76B900\"},\"OBS Studio\":{title:\"OBS Studio\",slug:\"obsstudio\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>OBS Studio icon</title><path d=\"M12,24C5.383,24,0,18.617,0,12S5.383,0,12,0s12,5.383,12,12S18.617,24,12,24z M12,1.109 C5.995,1.109,1.11,5.995,1.11,12C1.11,18.005,5.995,22.89,12,22.89S22.89,18.005,22.89,12C22.89,5.995,18.005,1.109,12,1.109z M6.182,5.99c0.352-1.698,1.503-3.229,3.05-3.996c-0.269,0.273-0.595,0.483-0.844,0.78c-1.02,1.1-1.48,2.692-1.199,4.156 c0.355,2.235,2.455,4.06,4.732,4.028c1.765,0.079,3.485-0.937,4.348-2.468c1.848,0.063,3.645,1.017,4.7,2.548 c0.54,0.799,0.962,1.736,0.991,2.711c-0.342-1.295-1.202-2.446-2.375-3.095c-1.135-0.639-2.529-0.802-3.772-0.425 c-1.56,0.448-2.849,1.723-3.293,3.293c-0.377,1.25-0.216,2.628,0.377,3.772c-0.825,1.429-2.315,2.449-3.932,2.756 c-1.244,0.261-2.551,0.059-3.709-0.464c1.036,0.302,2.161,0.355,3.191-0.011c1.381-0.457,2.522-1.567,3.024-2.935 c0.556-1.49,0.345-3.261-0.591-4.54c-0.7-1.007-1.803-1.717-3.002-1.969c-0.38-0.068-0.764-0.098-1.148-0.134 c-0.611-1.231-0.834-2.66-0.528-3.996L6.182,5.99z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://upload.wikimedia.org/wikipedia/commons/7/78/OBS.svg\",hex:\"302E31\"},OCaml:{title:\"OCaml\",slug:\"ocaml\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>OCaml icon</title><path d=\"M12.186 21.63c-.085-.169-.186-.523-.254-.675-.067-.135-.27-.506-.37-.625-.22-.253-.27-.27-.338-.607-.119-.574-.405-1.587-.76-2.295-.186-.372-.49-.676-.76-.946-.236-.236-.776-.624-.877-.607-.895.169-1.165 1.046-1.586 1.738-.237.388-.473.709-.659 1.114-.168.371-.152.793-.439 1.114a2.95 2.95 0 0 0-.624 1.097c-.034.084-.101.928-.186 1.13l1.317-.084c1.232.085.877.557 2.785.456l3.02-.101a5.372 5.372 0 0 0-.27-.709zm8.776-20.084H3.038a3.018 3.018 0 0 0-3.021 3.02v6.583c.439-.152 1.046-1.08 1.249-1.3.337-.388.405-.894.574-1.198.388-.709.455-1.215 1.333-1.215.405 0 .574.101.844.473.186.253.523.742.675 1.063.186.371.473.86.608.962.1.067.185.135.27.169.135.05.253-.051.354-.119.118-.1.169-.286.287-.556.169-.389.338-.827.439-.996.169-.27.236-.608.422-.76.27-.236.641-.253.742-.27.557-.118.81.27 1.08.507.186.168.422.489.608.91.135.338.304.66.388.845.068.185.237.49.338.86.101.321.337.574.439.743 0 0 .152.405 1.03.777a7.5 7.5 0 0 0 .81.286c.388.135.759.119 1.231.068.338 0 .524-.49.676-.878.084-.236.185-.894.236-1.08.05-.185-.085-.32.034-.49.135-.185.219-.202.286-.438.17-.523 1.114-.54 1.654-.54.456 0 .389.439 1.148.287.439-.085.86.05 1.317.185.388.102.76.22.979.473.135.169.489.996.135 1.03.033.033.067.118.118.151-.085.321-.422.085-.625.051-.253-.05-.439 0-.692.118-.439.186-1.063.169-1.451.49-.32.27-.32.86-.473 1.198 0 0-.422 1.063-1.316 1.721-.237.17-.692.574-1.671.726-.439.068-.86.068-1.317.05-.219-.016-.438-.016-.658-.016-.135 0-.574-.017-.557.034l-.05.118a.6.6 0 0 0 .033.169c.017.1.017.185.034.27 0 .185-.017.388 0 .574.017.388.169.742.186 1.147.017.439.236.912.455 1.266.085.135.203.152.254.32.067.186 0 .406.033.608.118.794.355 1.637.71 2.363v.017c.438-.067.894-.236 1.468-.32 1.063-.153 2.531-.085 3.476-.17 2.397-.219 3.697.98 5.84.49V4.567a3.043 3.043 0 0 0-3.038-3.021zm-8.945 14.177c0-.034 0-.034 0 0zM5.553 18.49c.169-.371.27-.777.405-1.148.135-.354.337-.86.692-1.046-.05-.05-.743-.068-.928-.085-.203-.017-.406-.05-.608-.084a22.96 22.96 0 0 1-1.148-.236c-.22-.051-.979-.321-1.13-.389-.389-.168-.642-.658-.929-.607-.185.034-.371.101-.49.287-.1.152-.134.422-.202.607-.084.203-.22.405-.32.608-.237.354-.625.675-.794 1.03-.033.084-.05.168-.084.253v4.067c.202.034.405.068.624.135 1.688.456 2.093.49 3.747.304l.152-.017c.118-.27.22-1.164.304-1.434.067-.22.152-.389.186-.591.033-.203 0-.405-.017-.59-.034-.49.354-.66.54-1.064z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://ocaml.org/img/OCaml_Sticker.svg\",hex:\"EC6813\"},Octave:{title:\"Octave\",slug:\"octave\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Octave icon</title><path d=\"M10.492.008C8.08-.082 5.837.723 4.21 2.492c-1.3 1.413-2.024 3.255-2.225 5.274h-.42C.702 7.766 0 8.468 0 9.33v4.74c0 .862.702 1.565 1.564 1.565h2.09a16.887 16.887 0 0 0 2.567 3.685c4.458 4.845 10.69 6.032 14.552 3.014h2.1c.577 0 1.05-.473 1.05-1.05V18.42a1.03 1.03 0 0 0-.257-.668c.857-3.431-.045-7.637-2.518-11.211.002-.017.01-.032.01-.049V4.48a.821.821 0 0 0-.816-.818H18.64C16.13 1.372 13.208.11 10.492.008zm1.748 2.178c1.78-.009 3.688.621 5.422 1.85a.796.796 0 0 0-.15.444v2.012c0 .448.368.819.816.819h2.014a.787.787 0 0 0 .392-.116c2.246 3.3 2.733 7.317 1.239 10.174H20.01c-.578 0-1.051.474-1.051 1.05v1.792c-2.989 1.3-7 .222-9.957-2.99a12.734 12.734 0 0 1-1.549-2.096c.256-.279.416-.647.416-1.055V9.33c0-.862-.702-1.564-1.564-1.564h-.409c.237-1.363.78-2.61 1.686-3.594 1.224-1.33 2.878-1.978 4.658-1.986zm6.088 2.01h2.014c.162 0 .283.122.283.284v2.012c0 .163-.12.285-.283.285h-2.014a.28.28 0 0 1-.285-.285V4.48a.28.28 0 0 1 .285-.285zM1.564 8.298h4.74c.577 0 1.032.455 1.032 1.031v4.74c0 .576-.455 1.032-1.031 1.032h-4.74A1.023 1.023 0 0 1 .532 14.07V9.33c0-.576.455-1.031 1.031-1.031zm18.446 9.603h2.863c.291 0 .52.226.52.518v2.863a.512.512 0 0 1-.52.518H20.01a.51.51 0 0 1-.518-.518V18.42a.51.51 0 0 1 .518-.518z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.gnu.org/software/octave/\",hex:\"0790C0\"},\"Octopus Deploy\":{title:\"Octopus Deploy\",slug:\"octopusdeploy\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Octopus Deploy icon</title><path d=\"M2.18 18.212c1.805-1.162 3.928-3.162 3.122-5.51-.437-1.282-1.046-2.379-1.127-3.762a8.478 8.478 0 0 1 .515-3.46C6.31 1.14 11.126-.917 15.481.389c4.03 1.216 6.808 5.893 5.119 9.973-.965 2.356-1.395 4.173.755 6.006.582.496 2 1.24 1.992 2.123 0 1.163-2.27-.244-2.522-.445.286.503 3.138 3.487 1.325 3.688-1.67.194-3.147-2.139-4.15-3.142-1.686-1.682-1.395 2.042-1.403 2.81 0 1.212-.868 3.676-2.41 2.072-1.27-1.321-.775-3.433-1.674-4.905-.968-1.612-2.58 1.612-2.983 2.2-.45.66-2.713 3.844-3.596 2.147-.725-1.38.434-3.538 1.007-4.785-.209.453-1.685 1.123-2.115 1.34a5.738 5.738 0 0 1-3.057.706c-2.267-.163-.527-1.368.387-1.96l.023-.005z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://octopus.com/company/brand\",hex:\"2F93E0\"},Oculus:{title:\"Oculus\",slug:\"oculus\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Oculus icon</title><path d=\"M18.135 13.949c-.319.221-.675.355-1.057.416s-.761.049-1.142.049H8.063c-.382 0-.762.014-1.145-.049-.381-.063-.734-.195-1.057-.416-.643-.451-1.027-1.17-1.027-1.951 0-.796.387-1.515 1.029-1.95.314-.225.674-.359 1.049-.42s.75-.061 1.141-.061h7.875c.375 0 .765-.014 1.14.046s.735.194 1.051.405c.645.434 1.02 1.17 1.02 1.949 0 .78-.391 1.5-1.035 1.95l.031.032zm3.174-7.555c-.845-.678-1.812-1.146-2.865-1.398-.6-.146-1.203-.211-1.822-.23-.449-.015-.899-.01-1.364-.01H8.76c-.457 0-.915-.005-1.372.01-.618.021-1.222.083-1.825.23-1.051.254-2.025.723-2.865 1.4C.99 7.761 0 9.82 0 12c0 2.182.99 4.241 2.689 5.606.846.678 1.815 1.146 2.865 1.4.603.146 1.206.211 1.823.229.45.016.9.012 1.365.012h6.496c.449 0 .914.004 1.364-.012.615-.018 1.215-.082 1.814-.229 1.05-.256 2.011-.723 2.866-1.402C23.01 16.24 24 14.18 24 12c0-2.181-.99-4.241-2.691-5.606z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.oculus.com/en-us/press-kit\",hex:\"1C1E20\"},Odnoklassniki:{title:\"Odnoklassniki\",slug:\"odnoklassniki\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Odnoklassniki icon</title><path d=\"M14.505 17.44c1.275-.29 2.493-.794 3.6-1.49.834-.558 1.058-1.686.5-2.52-.536-.802-1.604-1.044-2.435-.553-2.55 1.595-5.79 1.595-8.34 0-.847-.534-1.965-.28-2.5.565 0 .002 0 .004-.002.005-.534.847-.28 1.966.567 2.5l.002.002c1.105.695 2.322 1.2 3.596 1.488l-3.465 3.465c-.707.695-.72 1.83-.028 2.537l.03.03c.344.354.81.53 1.274.53.465 0 .93-.176 1.275-.53L12 20.065l3.404 3.406c.72.695 1.87.676 2.566-.045.678-.703.678-1.818 0-2.52l-3.465-3.466zM12 12.388c3.42-.004 6.19-2.774 6.195-6.193C18.195 2.78 15.415 0 12 0S5.805 2.78 5.805 6.197c.005 3.42 2.776 6.19 6.195 6.192zm0-8.757c1.416.002 2.563 1.15 2.564 2.565 0 1.416-1.148 2.563-2.564 2.565-1.415-.002-2.562-1.148-2.565-2.564C9.437 4.78 10.585 3.633 12 3.63z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://v.ok.ru/logo.html\",hex:\"F4731C\"},\"Open Access\":{title:\"Open Access\",slug:\"openaccess\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Open Access icon</title><path d=\"M18.972 13.487a7.56 7.56 0 0 0-.54-1.043V6.416a6.376 6.376 0 0 0-1.88-4.536A6.375 6.375 0 0 0 12.016 0h-.002a6.375 6.375 0 0 0-4.536 1.878 6.376 6.376 0 0 0-1.88 4.538v.877h2.57v-.877c0-1.027.4-1.993 1.127-2.72a3.822 3.822 0 0 1 2.72-1.126 3.852 3.852 0 0 1 3.847 3.846v3.508A7.52 7.52 0 0 0 12 8.866a7.54 7.54 0 0 0-5.35 2.216 7.54 7.54 0 0 0-2.217 5.35 7.54 7.54 0 0 0 2.216 5.35A7.54 7.54 0 0 0 12 24.002a7.54 7.54 0 0 0 5.35-2.216 7.54 7.54 0 0 0 2.217-5.351c0-1.021-.2-2.012-.595-2.946zM12 21.43c-2.755 0-4.997-2.242-4.997-4.997S9.245 11.436 12 11.436s4.997 2.241 4.997 4.997S14.755 21.43 12 21.43zm2.145-4.974a2.12 2.12 0 1 1-4.24 0 2.12 2.12 0 0 1 4.24 0z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://commons.wikimedia.org/wiki/File:Open_Access_logo_PLoS_white.svg\",hex:\"F68212\"},\"OpenAPI Initiative\":{title:\"OpenAPI Initiative\",slug:\"openapiinitiative\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>OpenAPI Initiative icon</title><path d=\"M21.039 0a2.959 2.959 0 00-2.65 4.274l-6.447 6.447a2.96 2.96 0 101.335 1.336l6.447-6.447A2.959 2.959 0 1021.04 0zM10.628 2.745c-.072 0-.143.003-.214.004-.072.002-.143.002-.215.005-.447.018-.893.064-1.335.138l-.03.005-.185.033-.105.02a7.718 7.718 0 00-.289.062l-.032.008a10.69 10.69 0 00-2.55.95l-.155.089c-.063.034-.125.07-.187.105-.046.027-.093.051-.14.079H5.19l-.01.005-.036.02v.002l.111.184 3.15 5.23a4.168 4.168 0 01.38-.202 4.294 4.294 0 011.628-.413c.071-.004.143-.008.214-.008zm.428.01v6.333c.325.034.647.103.96.209l4.66-4.66c-.173-.12-.348-.237-.528-.347l-.026-.015c-.056-.035-.112-.067-.168-.1l-.098-.056-.099-.055a12.735 12.735 0 00-.171-.092l-.027-.014a10.628 10.628 0 00-1.425-.617c-.69-.241-1.403-.41-2.128-.505l-.089-.012-.09-.01a6.56 6.56 0 00-.17-.019l-.049-.004-.204-.017a6.44 6.44 0 00-.255-.015c-.031-.003-.062-.003-.093-.004zM4.782 4.498a9.92 9.92 0 00-1.36 1.062l4.461 4.461.018.018c.049-.04.098-.078.149-.116l-.011-.018zm-1.67 1.36c-.05.05-.098.103-.147.154l-.149.155c-.33.357-.63.73-.902 1.118l-.039.056a10.588 10.588 0 00-.216.326 10.6 10.6 0 00-1.65 5.276l-.006.215-.003.214h6.317c0-.072.007-.143.01-.214.005-.072.006-.144.013-.215.081-.822.399-1.625.952-2.3.045-.055.096-.106.144-.16.048-.052.093-.107.144-.158zm16.255 1.464l-4.663 4.663c.106.312.175.634.21.959h6.332l-.004-.094a11.579 11.579 0 00-.032-.456l-.005-.052a13.044 13.044 0 00-.026-.241v-.009l-.033-.24v-.009a10.618 10.618 0 00-.327-1.493l-.003-.01a15.839 15.839 0 00-.07-.228l-.01-.03a14.111 14.111 0 00-.069-.204l-.02-.055a5.65 5.65 0 00-.153-.405 7.84 7.84 0 00-.093-.227 16.67 16.67 0 00-.063-.144l-.037-.081a13.776 13.776 0 00-.08-.171l-.024-.052-.096-.194-.014-.027a11.2 11.2 0 00-.112-.212l-.004-.008a10.615 10.615 0 00-.604-.98zm-4.43 6.05c0 .071-.006.142-.01.214-.003.072-.005.143-.012.214a4.29 4.29 0 01-.952 2.301c-.045.055-.096.107-.144.16-.048.053-.093.108-.144.159l4.467 4.467c.051-.051.099-.104.148-.155.05-.052.1-.103.148-.155.331-.358.633-.733.905-1.122l.032-.046.098-.144.085-.13.04-.063a10.597 10.597 0 001.647-5.272c.003-.071.004-.143.006-.214.001-.071.004-.143.004-.214zM.01 13.8l.004.093.01.179.005.076.017.206.005.046c.007.076.015.153.024.228l.003.022a9.605 9.605 0 00.033.248c.072.505.182 1.005.327 1.497l.002.006c.022.077.047.154.071.23l.004.014.005.014a15.737 15.737 0 00.153.439l.03.08.059.148a7.702 7.702 0 00.093.228l.062.14.038.084.078.169.027.054a10.677 10.677 0 00.225.441l.025.043 5.408-3.258.02-.012a4.314 4.314 0 01-.395-1.414h-.025zm.505 2.846l-.206.058.002.005zm6.425-1.052l-5.415 3.262c.083.139.17.273.259.406l.008.014.004.005.008.014h.001c.007.012.014.022.022.032l.001.002v.001a10.634 10.634 0 00.298.417l.006.008a9.963 9.963 0 00.29.368l.033.04c.043.052.086.103.13.153l.057.065.112.127.064.069.029.031.083.09.035.035c.049.051.098.103.149.153L7.58 16.42a3.86 3.86 0 01-.285-.321 4.422 4.422 0 01-.356-.505zm6.416 1.111c-.05.04-.1.079-.15.116l.011.018 3.257 5.407c.151-.099.3-.2.446-.307.315-.232.62-.484.914-.756l-4.46-4.46zm-5.457.003l-.015.015-4.46 4.46a8.966 8.966 0 00.195.176c.022.02.043.04.065.058l.152.13a10.622 10.622 0 00.215.174l.023.017.191.148.008.005c.268.2.547.389.834.564l.03.018.164.097.101.057a5.458 5.458 0 00.27.148c.008.004.016.01.025.013.162.085.327.164.493.24l.158-.385 2.243-5.448.009-.02a4.328 4.328 0 01-.701-.467zm4.951.353c-.061.037-.124.07-.187.104a4.318 4.318 0 01-3.271.336c-.069-.02-.135-.047-.203-.071-.067-.024-.136-.044-.202-.072l-2.242 5.444-.088.213-.075.183v.001l.017.007a.137.137 0 00.019.007l.005.003c.052.021.106.04.159.06.067.027.133.053.2.077l.102.04c.702.247 1.43.42 2.168.518l.087.012.09.01.172.019a7.173 7.173 0 00.252.022c.023.001.048.001.071.003l.184.011.112.005a7.06 7.06 0 00.358.007h.05a10.667 10.667 0 001.793-.15l.185-.034.105-.02.109-.023.18-.04.032-.008a10.684 10.684 0 002.55-.95c.052-.028.104-.06.156-.089.063-.034.125-.07.187-.105.043-.024.087-.047.13-.073h.001l.002-.002.002-.001.002-.001.007-.004.042-.025-.11-.183-.11-.184zm3.262 5.414l-.042.025.042-.024zm-.05.029h-.001.002zm-.005.004h-.002z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.openapis.org/faq/style-guide\",hex:\"6BA539\"},\"Open Collective\":{title:\"Open Collective\",slug:\"opencollective\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Open Collective icon</title><path d=\"M21.86 5.17a11.94 11.94 0 0 1 0 13.66l-3.1-3.1a7.68 7.68 0 0 0 0-7.46l3.1-3.1zm-3.03-3.03l-3.1 3.1a7.71 7.71 0 1 0 0 13.51l3.1 3.11a12 12 0 1 1 0-19.73 M21.86 5.17a11.94 11.94 0 0 1 0 13.66l-3.1-3.1a7.68 7.68 0 0 0 0-7.46l3.1-3.1z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://docs.opencollective.com/help/about#media-logo\",hex:\"7FADF2\"},OpenID:{title:\"OpenID\",slug:\"openid\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>OpenID icon</title><path d=\"M14.54 .887L10.91 2.66V20.83C6.76 20.31 3.64 18.05 3.64 15.33C3.64 12.75 6.44 10.58 10.27 9.92V7.61C4.42 8.32 0 11.5 0 15.33C0 19.29 4.74 22.57 10.91 23.11L14.54 21.4V.886M15.18 7.61V9.92C16.61 10.17 17.89 10.62 18.94 11.23L16.97 12.34L24 13.87L23.5 8.66L21.63 9.72C19.89 8.66 17.67 7.91 15.18 7.61Z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://openid.net/add-openid/logos/\",hex:\"F78C40\"},OpenSSL:{title:\"OpenSSL\",slug:\"openssl\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>OpenSSL icon</title><path d=\"M1.961,13.532c-0.303,0-0.575-0.052-0.818-0.157c-0.243-0.105-0.448-0.25-0.616-0.437 c-0.168-0.187-0.298-0.408-0.389-0.664C0.046,12.018,0,11.741,0,11.442c0-0.299,0.046-0.576,0.137-0.832 c0.091-0.256,0.221-0.477,0.389-0.664C0.695,9.759,0.9,9.613,1.143,9.508c0.243-0.105,0.516-0.157,0.818-0.157 c0.303,0,0.575,0.052,0.818,0.157c0.243,0.105,0.448,0.25,0.616,0.437c0.168,0.187,0.298,0.408,0.389,0.664 c0.091,0.256,0.137,0.533,0.137,0.832c0,0.299-0.046,0.576-0.137,0.832c-0.092,0.256-0.221,0.477-0.389,0.664 c-0.168,0.187-0.374,0.333-0.616,0.437C2.536,13.479,2.264,13.532,1.961,13.532z M1.961,13.089c0.235,0,0.443-0.042,0.622-0.126 s0.331-0.199,0.454-0.345c0.123-0.146,0.216-0.319,0.277-0.521c0.062-0.202,0.092-0.42,0.092-0.656 c0-0.235-0.031-0.454-0.092-0.656c-0.062-0.202-0.154-0.376-0.277-0.524c-0.123-0.148-0.275-0.263-0.454-0.347 S2.197,9.789,1.961,9.789c-0.235,0-0.443,0.042-0.622,0.126c-0.179,0.084-0.331,0.2-0.454,0.347 c-0.123,0.148-0.216,0.322-0.277,0.524c-0.062,0.202-0.092,0.42-0.092,0.656c0,0.235,0.031,0.454,0.092,0.656 c0.062,0.202,0.154,0.375,0.277,0.521c0.123,0.146,0.275,0.261,0.454,0.345C1.519,13.047,1.726,13.089,1.961,13.089z M4.455,10.551 h0.454v0.409H4.92c0.108-0.149,0.237-0.266,0.387-0.35c0.149-0.084,0.331-0.126,0.544-0.126c0.183,0,0.351,0.035,0.504,0.104 c0.153,0.069,0.284,0.168,0.392,0.297c0.108,0.129,0.193,0.289,0.255,0.479c0.062,0.191,0.092,0.405,0.092,0.644 c0,0.232-0.029,0.442-0.087,0.63c-0.058,0.189-0.141,0.349-0.249,0.482c-0.108,0.133-0.241,0.234-0.398,0.305 c-0.157,0.071-0.333,0.106-0.527,0.106c-0.198,0-0.37-0.032-0.516-0.095c-0.146-0.063-0.278-0.174-0.398-0.331H4.909v1.557H4.455 V10.551z M5.8,13.151c0.138,0,0.26-0.029,0.364-0.087c0.105-0.058,0.191-0.137,0.261-0.238c0.069-0.101,0.12-0.22,0.154-0.359 c0.034-0.138,0.05-0.289,0.05-0.454c0-0.161-0.017-0.311-0.05-0.451c-0.034-0.14-0.085-0.261-0.154-0.364 c-0.069-0.103-0.155-0.183-0.258-0.241c-0.103-0.058-0.223-0.087-0.361-0.087c-0.157,0-0.294,0.03-0.412,0.09 c-0.118,0.06-0.214,0.142-0.289,0.247c-0.075,0.105-0.131,0.226-0.168,0.364c-0.037,0.138-0.056,0.286-0.056,0.443 c0,0.157,0.017,0.305,0.05,0.443c0.034,0.138,0.087,0.259,0.16,0.361c0.073,0.103,0.167,0.184,0.283,0.244 C5.49,13.121,5.632,13.151,5.8,13.151z M8.837,13.526c-0.22,0-0.417-0.04-0.591-0.12c-0.174-0.08-0.32-0.19-0.44-0.328 c-0.12-0.138-0.211-0.3-0.275-0.485c-0.064-0.185-0.095-0.382-0.095-0.591c0-0.209,0.033-0.406,0.098-0.591 c0.065-0.185,0.159-0.346,0.28-0.485c0.121-0.138,0.266-0.247,0.434-0.328c0.168-0.08,0.355-0.12,0.56-0.12 c0.217,0,0.408,0.04,0.574,0.12c0.166,0.08,0.305,0.192,0.417,0.336c0.112,0.144,0.197,0.316,0.255,0.516 c0.058,0.2,0.087,0.419,0.087,0.658H7.901c0.007,0.146,0.034,0.282,0.078,0.409c0.045,0.127,0.106,0.237,0.185,0.331 c0.078,0.093,0.174,0.166,0.286,0.219c0.112,0.052,0.241,0.078,0.387,0.078c0.213,0,0.387-0.049,0.521-0.148 c0.134-0.099,0.228-0.247,0.28-0.445h0.443c-0.067,0.314-0.209,0.555-0.426,0.723C9.438,13.442,9.165,13.526,8.837,13.526z M8.809,10.837c-0.134,0-0.254,0.023-0.359,0.07c-0.105,0.047-0.193,0.112-0.266,0.196c-0.073,0.084-0.133,0.183-0.179,0.297 c-0.047,0.114-0.078,0.236-0.092,0.367h1.743c-0.015-0.291-0.094-0.519-0.238-0.684C9.273,10.919,9.07,10.837,8.809,10.837z M11.12,10.932h0.011c0.105-0.138,0.231-0.247,0.378-0.328c0.148-0.08,0.328-0.12,0.541-0.12c0.303,0,0.541,0.079,0.714,0.238 c0.174,0.159,0.261,0.389,0.261,0.692v2.034h-0.454v-1.995c0-0.191-0.058-0.336-0.174-0.437c-0.116-0.101-0.276-0.151-0.482-0.151 c-0.116,0-0.222,0.02-0.319,0.059c-0.097,0.039-0.181,0.093-0.252,0.163c-0.071,0.069-0.126,0.153-0.165,0.252 c-0.039,0.099-0.059,0.208-0.059,0.328v1.782h-0.454v-2.897h0.454V10.932z M15.409,13.53c-0.549,0-0.972-0.116-1.271-0.347 c-0.299-0.231-0.456-0.561-0.47-0.989h0.8c0.03,0.244,0.116,0.418,0.259,0.521c0.143,0.103,0.359,0.155,0.648,0.155 c0.105,0,0.205-0.009,0.299-0.028c0.094-0.019,0.177-0.049,0.248-0.09c0.071-0.041,0.129-0.095,0.172-0.161 c0.043-0.066,0.065-0.146,0.065-0.24c0-0.098-0.024-0.178-0.07-0.242c-0.047-0.064-0.114-0.117-0.2-0.161 c-0.086-0.043-0.191-0.081-0.313-0.113c-0.122-0.032-0.26-0.065-0.414-0.099c-0.18-0.041-0.354-0.087-0.521-0.138 c-0.167-0.051-0.314-0.119-0.44-0.206c-0.126-0.086-0.227-0.197-0.304-0.332c-0.077-0.135-0.116-0.308-0.116-0.518 c0-0.199,0.038-0.374,0.116-0.524c0.077-0.15,0.184-0.276,0.321-0.378c0.137-0.101,0.3-0.178,0.487-0.228 c0.188-0.051,0.394-0.076,0.62-0.076c0.454,0,0.82,0.107,1.096,0.321c0.276,0.214,0.429,0.526,0.459,0.935h-0.783 c-0.023-0.203-0.105-0.355-0.248-0.456c-0.143-0.101-0.319-0.152-0.53-0.152c-0.222,0-0.398,0.043-0.53,0.13 c-0.132,0.086-0.197,0.201-0.197,0.344c0,0.083,0.018,0.151,0.054,0.206c0.036,0.055,0.09,0.102,0.163,0.144 c0.073,0.041,0.164,0.077,0.273,0.107c0.109,0.03,0.238,0.062,0.389,0.096c0.207,0.045,0.401,0.095,0.583,0.149 c0.182,0.055,0.342,0.127,0.479,0.217c0.137,0.09,0.245,0.205,0.324,0.344c0.079,0.139,0.118,0.318,0.118,0.535 c0,0.203-0.039,0.384-0.118,0.544c-0.079,0.16-0.188,0.293-0.327,0.4c-0.139,0.107-0.304,0.189-0.496,0.245 C15.843,13.501,15.635,13.53,15.409,13.53z M19.168,13.53c-0.549,0-0.972-0.116-1.271-0.347s-0.456-0.561-0.47-0.989h0.8 c0.03,0.244,0.116,0.418,0.259,0.521c0.143,0.103,0.359,0.155,0.648,0.155c0.105,0,0.205-0.009,0.299-0.028 c0.094-0.019,0.177-0.049,0.248-0.09c0.071-0.041,0.129-0.095,0.172-0.161c0.043-0.066,0.065-0.146,0.065-0.24 c0-0.098-0.024-0.178-0.07-0.242c-0.047-0.064-0.114-0.117-0.2-0.161c-0.086-0.043-0.191-0.081-0.313-0.113 c-0.122-0.032-0.26-0.065-0.414-0.099c-0.18-0.041-0.354-0.087-0.521-0.138c-0.167-0.051-0.314-0.119-0.44-0.206 c-0.126-0.086-0.227-0.197-0.304-0.332c-0.077-0.135-0.116-0.308-0.116-0.518c0-0.199,0.038-0.374,0.116-0.524 c0.077-0.15,0.184-0.276,0.321-0.378c0.137-0.101,0.3-0.178,0.487-0.228c0.188-0.051,0.394-0.076,0.62-0.076 c0.454,0,0.82,0.107,1.096,0.321c0.276,0.214,0.429,0.526,0.459,0.935h-0.783c-0.023-0.203-0.105-0.355-0.248-0.456 c-0.143-0.101-0.319-0.152-0.53-0.152c-0.222,0-0.398,0.043-0.53,0.13c-0.132,0.086-0.197,0.201-0.197,0.344 c0,0.083,0.018,0.151,0.054,0.206c0.036,0.055,0.09,0.102,0.163,0.144c0.073,0.041,0.164,0.077,0.273,0.107 c0.109,0.03,0.238,0.062,0.389,0.096c0.207,0.045,0.401,0.095,0.583,0.149c0.182,0.055,0.342,0.127,0.479,0.217 c0.137,0.09,0.245,0.205,0.324,0.344c0.079,0.139,0.118,0.318,0.118,0.535c0,0.203-0.039,0.384-0.118,0.544 c-0.079,0.16-0.188,0.293-0.327,0.4c-0.139,0.107-0.304,0.189-0.496,0.245C19.602,13.501,19.393,13.53,19.168,13.53z M21.29,9.41 h0.817v3.347H24v0.682h-2.71V9.41z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.openssl.org/\",hex:\"721412\"},OpenStreetMap:{title:\"OpenStreetMap\",slug:\"openstreetmap\",svg:'<svg xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" viewBox=\"0 0 24 24\"><title>OpenStreetMap icon</title><path d=\"M2.672 23.969c-.352-.089-.534-.234-1.471-1.168C.085 21.688.014 21.579.018 20.999c0-.645-.196-.414 3.368-3.986 3.6-3.608 3.415-3.451 4.064-3.449.302 0 .378.016.62.14l.277.14 1.744-1.744-.218-.343c-.425-.662-.825-1.629-1.006-2.429a7.657 7.657 0 0 1 1.479-6.44c2.49-3.12 6.959-3.812 10.26-1.588 1.812 1.218 2.99 3.099 3.328 5.314.07.467.07 1.579 0 2.074a7.554 7.554 0 0 1-2.205 4.402 6.712 6.712 0 0 1-1.943 1.401c-.959.483-1.775.71-2.881.803-1.573.131-3.32-.305-4.656-1.163l-.343-.218-1.744 1.744.14.28c.125.241.14.316.14.617.003.651.156.467-3.426 4.049-2.761 2.756-3.186 3.164-3.398 3.261-.271.125-.69.171-.945.106zM17.485 13.95a6.425 6.425 0 0 0 4.603-3.51c1.391-2.899.455-6.306-2.227-8.108-.638-.43-1.529-.794-2.367-.962-.581-.117-1.809-.104-2.414.025a6.593 6.593 0 0 0-2.452 1.064c-.444.315-1.177 1.048-1.487 1.487a6.384 6.384 0 0 0 .38 7.907 6.406 6.406 0 0 0 3.901 2.136c.509.078 1.542.058 2.065-.037zm-3.738 7.376a80.97 80.97 0 0 1-2.196-.651c-.025-.028 1.207-4.396 1.257-4.449.023-.026 4.242 1.152 4.414 1.236.062.026-.003.288-.525 2.102a398.513 398.513 0 0 0-.635 2.236c-.025.087-.069.156-.097.156-.028-.003-1.028-.287-2.219-.631zm2.912.524c0-.053 1.227-4.333 1.246-4.347.047-.034 4.324-1.23 4.341-1.211.019.019-1.199 4.337-1.23 4.36-.02.019-4.126 1.191-4.259 1.218-.054.011-.098 0-.098-.019zm-7.105-1.911c.846-.852 1.599-1.627 1.674-1.728.171-.218.405-.732.472-1.015.026-.118.053-.352.058-.522l.011-.307.182-.051c.103-.028.193-.044.202-.034.023.025-1.207 4.321-1.246 4.36-.02.016-.677.213-1.464.436l-1.425.405 1.537-1.542zm8.289-3.06a1.371 1.371 0 0 1-.059-.187l-.044-.156.156-.028c1.339-.227 2.776-.856 3.908-1.713.16-.125.252-.171.265-.134.054.165.272.95.265.959-.034.034-4.48 1.282-4.492 1.261zm-15.083-1.3c-.05-.039-1.179-3.866-1.264-4.29-.016-.084.146-.044 2.174.536 2.121.604 2.192.629 2.222.74.028.098.011.129-.125.223-.084.059-.769.724-1.523 1.479a63.877 63.877 0 0 1-1.39 1.367c-.016 0-.056-.025-.093-.054zm.821-4.378c-1.188-.343-2.164-.623-2.167-.626-.016-.012 1.261-4.433 1.285-4.46.022-.022 4.422 1.211 4.469 1.252.009.009-.269 1.017-.618 2.239-.576 2.02-.643 2.224-.723 2.22-.05-.003-1.059-.285-2.247-.626zm2.959.538c.012-.031.212-.723.444-1.534l.42-1.476.056.321c.093.556.265 1.188.464 1.741.106.296.187.539.181.545-.008.006-.332.101-.719.212-.389.109-.741.21-.786.224-.058.016-.075.006-.059-.034zM4.905 6.112c-1.187-.339-2.167-.635-2.18-.654-.04-.062-1.246-4.321-1.23-4.338.026-.025 4.31 1.204 4.351 1.246.047.051 1.28 4.379 1.246 4.376L4.91 6.113zm2.148-1.713l-.519-1.806-.078-.28 1.693-.483c.934-.265 1.724-.495 1.76-.508.034-.016-.083.14-.26.336A8.729 8.729 0 0 0 7.69 5.23a4.348 4.348 0 0 0-.132.561c0 .293-.115-.025-.505-1.39z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.openstreetmap.org\",hex:\"7EBC6F\"},openSUSE:{title:\"openSUSE\",slug:\"opensuse\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>openSUSE icon</title><path d=\"M21.51 8.107a.976.976 0 0 0-.708.264.993.993 0 0 0 .64 1.714.991.991 0 0 0 1.024-.954.992.992 0 0 0-.955-1.024zm.162 1.082c-.242 0-.438-.131-.438-.292 0-.163.196-.293.438-.293.243 0 .44.13.44.293 0 .16-.197.292-.44.292zm2.306 1.18c.007-.006.024-.02.022-.034-.055-.343-.565-2.004-.952-2.404-.106-.109-.191-.216-.364-.317-1.398-.814-4.713-1.306-4.869-1.328 0 0-.015-.004-.026.007-.009.008-.01.024-.01.024l-.015.764c-.339-.114-2.8-.91-5.108-.99C10.7 6.024 7.85 5.77 4.072 8.093l-.111.07C2.184 9.27.957 10.637.316 12.224c-.201.5-.472 1.628-.204 2.688.116.464.331.93.621 1.347.656.943 1.757 1.568 2.943 1.674 1.674.15 2.941-.602 3.392-2.01.31-.971 0-2.397-1.188-3.124-.967-.591-2.006-.457-2.609-.058-.523.347-.819.886-.814 1.477.012 1.05.917 1.608 1.567 1.61.189 0 .378-.033.592-.103a.921.921 0 0 0 .227-.1l.025-.015.015-.01-.005.003a.535.535 0 0 0 .217-.587.533.533 0 0 0-.612-.377l-.036.008-.05.015-.072.025c-.15.037-.262.04-.286.041-.076-.005-.45-.117-.45-.527v-.005c0-.151.06-.257.093-.314.117-.183.435-.362.866-.325.565.05.973.34 1.243.886.25.508.185 1.134-.17 1.592-.35.454-.976.647-1.809.557a2.48 2.48 0 0 1-1.946-1.327c-.389-.735-.41-1.607-.055-2.276.85-1.604 2.455-1.587 3.334-1.435 1.302.226 2.784 1.427 3.309 2.814.085.22.128.396.166.556l.057.24 1.47.718c.032.015.043.02.055.011.016-.011.007-.042.007-.042-.01-.033-.03-.063-.065-.475-.027-.365-.084-1.365.42-1.86.195-.195.492-.367.728-.423.964-.235 2.094-.073 3.163 1.164.553.64.823.93.959 1.061 0 0 .03.03.047.043.018.015.03.027.055.041.045.025 1.838.85 1.838.85s.022.011.037-.008c.016-.02.001-.038.001-.038-.012-.014-1.137-1.468-.937-2.665.158-.954.917-.867 1.967-.749.343.04.733.085 1.137.094 1.127.007 2.342-.201 3.09-.529.485-.21.794-.35.988-.526.07-.058.106-.152.143-.253l.027-.066c.031-.082.077-.254.097-.348.009-.042.018-.083-.016-.11-.032-.024-.104.02-.104.02-.329.198-1.15.573-1.919.589-.954.019-2.887-.966-3.087-1.07-.134-.32-.268-.639-.404-.957 1.383.911 2.53 1.415 3.408 1.492.977.088 1.74-.446 2.07-.668.043-.028.086-.06.126-.092zm-3.923-1.311c.014-.379.173-.73.45-.988a1.414 1.414 0 0 1 1.017-.38 1.423 1.423 0 0 1 1.37 1.468c-.015.379-.174.73-.45.987-.277.26-.638.394-1.019.381a1.424 1.424 0 0 1-1.368-1.468z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://en.opensuse.org/Portal:Artwork\",hex:\"73BA25\"},OpenVPN:{title:\"OpenVPN\",slug:\"openvpn\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>OpenVPN icon</title><path d=\"M12 .365C5.385.365 0 5.697 0 12.26c0 4.36 2.358 8.154 5.896 10.205l.77-5.076A7.046 7.046 0 0 1 4.82 12.67c0-3.897 3.18-7.076 7.13-7.076 3.948 0 7.126 3.179 7.126 7.076 0 1.847-.717 3.488-1.846 4.77l.77 5.078c3.59-2.051 6-5.899 6-10.258C24 5.697 18.615.365 12 .365zm-.05 8.156a3.786 3.786 0 0 0-3.796 3.795 3.738 3.738 0 0 0 2.461 3.54L9.13 23.65h5.64l-1.435-7.795c1.385-.564 2.41-1.898 2.41-3.539a3.786 3.786 0 0 0-3.795-3.795z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://openvpn.net/wp-content/themes/openvpn/assets/images/logo.svg\",hex:\"EA7E20\"},Opera:{title:\"Opera\",slug:\"opera\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Opera icon</title><path d=\"M8.051 5.238c-1.328 1.566-2.186 3.883-2.246 6.48v.564c.061 2.598.918 4.912 2.246 6.479 1.721 2.236 4.279 3.654 7.139 3.654 1.756 0 3.4-.537 4.807-1.471C17.879 22.846 15.074 24 12 24c-.192 0-.383-.004-.57-.014C5.064 23.689 0 18.436 0 12 0 5.371 5.373 0 12 0h.045c3.055.012 5.84 1.166 7.953 3.055-1.408-.93-3.051-1.471-4.81-1.471-2.858 0-5.417 1.42-7.14 3.654h.003zM24 12c0 3.556-1.545 6.748-4.002 8.945-3.078 1.5-5.946.451-6.896-.205 3.023-.664 5.307-4.32 5.307-8.74 0-4.422-2.283-8.075-5.307-8.74.949-.654 3.818-1.703 6.896-.205C22.455 5.25 24 8.445 24 12z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/operasoftware/logo\",hex:\"FF1B2D\"},Opsgenie:{title:\"Opsgenie\",slug:\"opsgenie\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Opsgenie icon</title><path d=\"M12.002 0a5.988 5.988 0 1 1 0 11.975 5.988 5.988 0 0 1 0-11.975zm9.723 13.026h-.03l-4.527-2.242a.671.671 0 0 0-.876.268 22.408 22.408 0 0 1-4.306 5.217 22.407 22.407 0 0 1-4.286-5.2.671.671 0 0 0-.876-.269l-4.535 2.226h-.03a.671.671 0 0 0-.248.902 28.85 28.85 0 0 0 4.55 5.933l-.002.001c.024.025.05.048.075.072.335.335.676.664 1.027.981.081.074.165.144.247.217.315.278.632.555.96.82.144.117.295.227.441.341.277.216.552.434.837.639.44.318.888.625 1.346.917a.963.963 0 0 0 1.007.017c.487-.312.962-.64 1.428-.98.068-.05.132-.103.2-.153.358-.266.713-.537 1.06-.82.234-.19.46-.39.688-.588.17-.147.34-.291.506-.442.295-.268.58-.545.864-.825.061-.06.127-.118.188-.179l-.004-.002a28.852 28.852 0 0 0 4.565-5.949.671.671 0 0 0-.269-.902z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.atlassian.com/company/news/press-kit\",hex:\"172B4D\"},Oracle:{title:\"Oracle\",slug:\"oracle\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Oracle icon</title><path d=\"M16.412 4.412h-8.82a7.588 7.588 0 0 0-.008 15.176h8.828a7.588 7.588 0 0 0 0-15.176zm-.193 12.502H7.786a4.915 4.915 0 0 1 0-9.828h8.433a4.914 4.914 0 1 1 0 9.828z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.oracle.com/webfolder/s/brand/identity/index.html\",hex:\"F80000\"},ORCID:{title:\"ORCID\",slug:\"orcid\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>ORCID icon</title><path d=\"M12 0C5.372 0 0 5.372 0 12s5.372 12 12 12 12-5.372 12-12S18.628 0 12 0zM7.369 4.378c.525 0 .947.431.947.947s-.422.947-.947.947a.95.95 0 0 1-.947-.947c0-.525.422-.947.947-.947zm-.722 3.038h1.444v10.041H6.647V7.416zm3.562 0h3.9c3.712 0 5.344 2.653 5.344 5.025 0 2.578-2.016 5.025-5.325 5.025h-3.919V7.416zm1.444 1.303v7.444h2.297c3.272 0 4.022-2.484 4.022-3.722 0-2.016-1.284-3.722-4.097-3.722h-2.222z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://orcid.org/trademark-and-id-display-guidelines\",hex:\"A6CE39\"},Origin:{title:\"Origin\",slug:\"origin\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Origin icon</title><path d=\"M12.588 3.11c1.189.071 2.352.384 3.417.919 1.031.514 1.95 1.225 2.706 2.094.751.865 1.322 1.853 1.715 2.963.391 1.109.548 2.278.464 3.502-.033.636-.135 1.252-.306 1.848-.167.588-.393 1.159-.674 1.703-.439.849-.929 1.652-1.47 2.412-.538.759-1.125 1.465-1.762 2.118-.638.653-1.313 1.254-2.032 1.802-.719.544-1.471 1.038-2.254 1.479l-.037.026c-.033.018-.071.026-.109.023-.063-.015-.118-.048-.159-.097-.041-.05-.063-.111-.062-.173 0-.029.004-.059.012-.085.008-.023.021-.044.037-.062.277-.393.506-.806.686-1.235.181-.434.303-.885.368-1.359 0-.032-.015-.064-.038-.085-.021-.025-.053-.038-.085-.038-.264.032-.528.053-.795.062-.266.009-.532-.003-.796-.037-1.189-.071-2.353-.385-3.418-.918-1.031-.515-1.949-1.226-2.705-2.095-.754-.87-1.336-1.875-1.715-2.963-.394-1.123-.552-2.314-.465-3.502.033-.636.135-1.252.306-1.848.171-.598.396-1.155.675-1.68.439-.864.931-1.676 1.469-2.436.539-.757 1.125-1.464 1.761-2.118.639-.652 1.314-1.252 2.033-1.8.72-.546 1.47-1.039 2.253-1.479l.038-.025c.033-.02.07-.027.109-.025.065.016.119.051.158.098.043.051.062.106.062.174.001.027-.003.057-.012.084-.007.023-.02.043-.036.061-.273.386-.505.801-.687 1.237-.181.433-.3.885-.366 1.358 0 .033.012.063.036.086.022.024.054.037.085.037.262-.033.527-.053.795-.061.272-.009.536.003.798.035zm-.807 12.367c.922.079 1.838-.231 2.521-.855.72-.639 1.109-1.438 1.176-2.4.078-.928-.232-1.846-.856-2.535-.601-.708-1.472-1.131-2.4-1.162-.927-.078-1.845.232-2.534.855-.709.602-1.132 1.473-1.164 2.4-.078.926.228 1.842.846 2.535.628.725 1.432 1.115 2.411 1.162z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.origin.com/gbr/en-us/store\",hex:\"F56C2D\"},\"Open Source Initiative\":{title:\"Open Source Initiative\",slug:\"opensourceinitiative\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Open Source Initiative icon</title><path d=\"M-.102 12.53C.01 5.956 4.613 1.277 10.248.52c6.718-.9 12.371 3.67 13.456 9.735 1.03 5.75-2.13 11.133-7.339 13.263-.45.184-.697.082-.87-.373l-2.587-6.728c-.15-.392-.048-.64.34-.814 1.17-.532 1.901-1.423 2.095-2.7a3.46 3.46 0 0 0-3.122-3.98 3.463 3.463 0 0 0-3.75 2.89c-.253 1.598.536 3.084 2.027 3.76.464.214.556.418.377.892l-2.6 6.772c-.125.334-.4.45-.75.315a11.98 11.98 0 0 1-6.33-5.76c-1.206-2.383-1.22-4.247-1.297-5.263zm1.012-.092c.02.32.03.692.063 1.07.305 3.48 2.4 6.946 6.34 8.862.156.073.214.04.272-.11q1.082-2.84 2.178-5.68c.063-.16.03-.231-.116-.323-1.53-.963-2.29-2.348-2.207-4.163.048-1.045.45-1.96 1.152-2.725 1.452-1.583 3.727-1.927 5.59-.852a4.436 4.436 0 0 1 2.188 4.376c-.174 1.48-.934 2.609-2.212 3.378-.13.078-.17.14-.11.29q1.102 2.847 2.187 5.698c.058.15.116.184.27.11 1.72-.802 3.157-1.95 4.265-3.484 1.685-2.333 2.377-4.932 2.048-7.793-.663-5.687-5.78-10.397-12.368-9.584-5.135.63-9.453 4.96-9.54 10.93z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://opensource.org/logo-usage-guidelines\",hex:\"3DA639\"},OSMC:{title:\"OSMC\",slug:\"osmc\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>OSMC icon</title><path d=\"M22.768 12.002c0 5.935-4.829 10.768-10.768 10.768-5.935-.005-10.763-4.833-10.763-10.768 0-5.94 4.828-10.767 10.768-10.767 5.934 0 10.763 4.828 10.763 10.767m.292-4.673a11.913 11.913 0 0 0-2.57-3.813 11.963 11.963 0 0 0-3.813-2.57A11.857 11.857 0 0 0 12.005 0a11.926 11.926 0 0 0-8.486 3.516A11.963 11.963 0 0 0 .948 7.33C.318 8.811.002 10.38.002 12.002s.316 3.192.942 4.673a11.913 11.913 0 0 0 2.57 3.813A11.963 11.963 0 0 0 12 24c1.619 0 3.191-.32 4.673-.942a11.913 11.913 0 0 0 3.813-2.57 11.963 11.963 0 0 0 3.512-8.486c0-1.623-.311-3.191-.938-4.673M8.566 14.631V9.263l2.574 2.684-2.574 2.684zM7.327 6.296v11.422l8.116-8.455v6.767c0 .343.279.618.617.618a.622.622 0 0 0 .622-.622v-9.74l-4.677 4.77-4.678-4.76z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/osmc/osmc/tree/master/assets\",hex:\"17394A\"},Overcast:{title:\"Overcast\",slug:\"overcast\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Overcast icon</title><path d=\"M12 24C5.389 24.018.017 18.671 0 12.061V12C0 5.35 5.351 0 12 0s12 5.35 12 12c0 6.649-5.351 12-12 12zm0-4.751l.9-.899-.9-3.45-.9 3.45.9.899zm-1.15-.05L10.4 20.9l1.05-1.052-.6-.649zm2.3 0l-.6.601 1.05 1.051-.45-1.652zm.85 3.102L12 20.3l-2 2.001c.65.1 1.3.199 2 .199s1.35-.05 2-.199zM12 1.5C6.201 1.5 1.5 6.201 1.5 12c-.008 4.468 2.825 8.446 7.051 9.899l2.25-8.35c-.511-.372-.809-.968-.801-1.6 0-1.101.9-2.001 2-2.001s2 .9 2 2.001c0 .649-.301 1.2-.801 1.6l2.25 8.35c4.227-1.453 7.06-5.432 7.051-9.899 0-5.799-4.701-10.5-10.5-10.5zm6.85 15.7c-.255.319-.714.385-1.049.15-.313-.207-.4-.628-.194-.941.014-.021.028-.04.044-.06 0 0 1.35-1.799 1.35-4.35s-1.35-4.35-1.35-4.35c-.239-.289-.198-.719.091-.957.02-.016.039-.031.06-.044.335-.235.794-.169 1.049.15.1.101 1.65 2.15 1.65 5.2S18.949 17.1 18.85 17.2zm-3.651-1.95c-.3-.3-.249-.85.051-1.15 0 0 .75-.799.75-2.1s-.75-2.051-.75-2.1c-.3-.301-.3-.801-.051-1.15.232-.303.666-.357.969-.125.029.022.056.047.082.074C16.301 8.75 17.5 10 17.5 12s-1.199 3.25-1.25 3.301c-.301.299-.75.25-1.051-.051zm-6.398 0c-.301.301-.75.35-1.051.051C7.699 15.199 6.5 14 6.5 12s1.199-3.199 1.25-3.301c.301-.299.801-.299 1.051.051.3.3.249.85-.051 1.15 0 .049-.75.799-.75 2.1s.75 2.1.75 2.1c.3.3.351.799.051 1.15zm-2.602 2.101c-.335.234-.794.169-1.05-.15C5.051 17.1 3.5 15.05 3.5 12s1.551-5.1 1.649-5.2c.256-.319.715-.386 1.05-.15.313.206.4.628.194.941-.013.02-.028.04-.043.059C6.35 7.65 5 9.449 5 12s1.35 4.35 1.35 4.35c.25.3.15.75-.151 1.001z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://overcast.fm\",hex:\"FC7E0F\"},Overleaf:{title:\"Overleaf\",slug:\"overleaf\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Overleaf icon</title><path d=\"M7.362 6.029a11.685 11.685 0 00-5.694 9.606 8.368 8.368 0 1011.355-7.823 7.724 7.724 0 00-2.97-.562 12.346 12.346 0 00-4.21 4.87 5.496 5.496 0 114.193 9.027 5.496 5.496 0 01-4.192-1.93 6.602 6.602 0 01-1.585-5.563c1.073-6.42 8.764-10.117 14.458-11.553a59.17 59.17 0 00-7.592 4.374c6.883 2.657 7.989-3.136 11.207-5.728C19.13-.507 7.379-.969 7.362 6.03z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.overleaf.com/for/press/media-resources\",hex:\"47A141\"},OVH:{title:\"OVH\",slug:\"ovh\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>OVH icon</title><path d=\"M19.881 10.095l2.563-4.45C23.434 7.389 24 9.404 24 11.555c0 2.88-1.017 5.523-2.71 7.594h-6.62l2.04-3.541h-2.696l3.176-5.513h2.691zm-2.32-5.243L9.333 19.14l.003.009H2.709C1.014 17.077 0 14.435 0 11.555c0-2.152.57-4.17 1.561-5.918L5.855 13.1 10.6 4.852h6.961z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.ovh.com/fr/news/logo-ovh.xml\",hex:\"123F6D\"},Pagekit:{title:\"Pagekit\",slug:\"pagekit\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Pagekit icon</title><path d=\"M2.401 0v24h9.6v-3.527H5.929V3.526h12.146v13.421h-6.073v3.525H21.6V0H2.401z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://pagekit.com/logo-guide\",hex:\"212121\"},Palantir:{title:\"Palantir\",slug:\"palantir\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Palantir icon</title><path d=\"M20.147 18L12 21.178 3.853 18 2.5 20.343 12 24l9.5-3.657L20.147 18zM12 0a9.5 9.5 0 1 0 0 19 9.5 9.5 0 0 0 0-19zm0 16.078a6.568 6.568 0 1 1 0-13.136 6.568 6.568 0 0 1 0 13.136z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/palantir/conjure/blob/master/docs/media/palantir-logo.svg\",hex:\"101113\"},\"Palo Alto Software\":{title:\"Palo Alto Software\",slug:\"paloaltosoftware\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Palo Alto Software icon</title><path d=\"M1.576 14.448l6.323-6.434 1.649-1.678a3.419 3.419 0 0 1 4.825 0l1.609 1.608 6.433 6.434.84-.84c.909-.839.909-2.237.07-3.146L13.603.742c-.91-.91-2.308-.91-3.217 0l-9.65 9.65c-.91.909-.91 2.307 0 3.216zm12.028-7.273c-.91-.91-2.308-.91-3.217 0l-8.042 8.042-1.608 1.608c-.91.91-.91 2.308 0 3.217l3.216 3.217c.91.909 2.308.909 3.217 0l4.825-4.826 4.826 4.826c.909.909 2.307.909 3.216 0l3.217-3.217c.91-.839.91-2.308.07-3.217z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://press.paloalto.com/logos\",hex:\"83DA77\"},Pandora:{title:\"Pandora\",slug:\"pandora\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Pandora icon</title><path d=\"M19.051 0H4.949C2.25 0 0 2.221 0 4.95v14.101C0 21.75 2.22 24 4.949 24h14.102C21.779 24 24 21.779 24 19.051V4.95C24 2.25 21.779 0 19.051 0zm-6.676 15.811h-1.229V18.6c0 .361-.301.646-.646.646H6.646V4.756H13.2c3.181 0 5.642 1.65 5.642 5.4 0 3.555-2.73 5.654-6.451 5.654h-.016z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://blog.pandora.com/us/the-color-of-music-unveiling-a-new-pandora-look-that-reflects-your-music-experience/\",hex:\"005483\"},Pantheon:{title:\"Pantheon\",slug:\"pantheon\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Pantheon icon</title><path d=\"M7.258 0l2.205 5.171H6.656l.929 2.276h5.689L7.258-.001zm-.169 7.973c-.315 0-.487 0-.629.456C6.289 8.974 6.27 10 6.27 12s.02 3.027.19 3.571c.142.456.314.456.629.456h3.585l-1.775-4.203h1.589l-.891-2.1h.427l.892 2.101h1.894l-1.637-3.853H7.09zm3.398 3.851l.001.002.003-.002h-.003zm1.089-3.851l.743 1.752h3.175c.069 0 .23-.085.23-.877s-.16-.876-.23-.876h-3.919zm.892 2.1l.743 1.752h2.632c.07 0 .23-.085.23-.877s-.16-.876-.23-.876h-3.376zM9.47 12.175l1.858 4.377H8.021l6.115 7.449-2.205-5.172h2.806l-.939-2.276h-1.302l-1.86-4.377H9.469zm1.594 0l.743 1.752h4.038c.07 0 .23-.085.23-.876s-.161-.877-.231-.877h-4.78zm.89 2.101l.745 1.751h2.797c.069 0 .23-.085.23-.876s-.163-.876-.231-.876h-3.54zm5.046.509a.718.718 0 0 0-.286.06l.005-.002a.744.744 0 0 0-.386.383l-.002.005a.682.682 0 0 0-.058.279v.007c0 .101.021.197.06.284l-.002-.004a.744.744 0 0 0 .383.386l.005.002a.71.71 0 0 0 .571-.002l-.005.002a.744.744 0 0 0 .386-.383l.002-.005a.71.71 0 0 0-.002-.571l.002.005a.744.744 0 0 0-.383-.386l-.005-.002a.705.705 0 0 0-.283-.058H17zm.002.129c.084 0 .164.017.237.049l-.004-.002a.608.608 0 0 1 .318.315l.002.004a.587.587 0 0 1-.002.47l.002-.004a.605.605 0 0 1-.315.318l-.004.002a.587.587 0 0 1-.47-.002l.004.002a.605.605 0 0 1-.318-.315l-.002-.004a.573.573 0 0 1-.047-.23v-.004h.001v-.005c0-.082.017-.16.048-.231l-.001.004a.605.605 0 0 1 .315-.318l.004-.001a.587.587 0 0 1 .233-.047h.001zm.073.178h-.006l-.027.001h.001-.321l-.001.001v.832h.153v-.341h.112l.207.341h.16l-.215-.353a.234.234 0 0 0 .142-.065.222.222 0 0 0 .057-.148l-.001-.018V15.328a.241.241 0 0 0-.072-.171.325.325 0 0 0-.189-.066zm-.201.136h.183a.199.199 0 0 1 .065.014h-.001c.019.008.034.02.046.035a.126.126 0 0 1 0 .129v-.001a.12.12 0 0 1-.045.035h-.001a.187.187 0 0 1-.063.014h-.184v-.227z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://projects.invisionapp.com/boards/8UOJQWW2J3G5#/1145336\",hex:\"EFD01B\"},\"Parse.ly\":{title:\"Parse.ly\",slug:\"parse-dot-ly\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Parse.ly icon</title><path d=\"M9.623,19.131c0-0.064,0-0.123-0.023-0.191c-0.103-0.741-0.375-1.449-0.796-2.07c-0.268-0.34-0.577-0.646-0.92-0.912 c-0.101-0.078-0.189-0.041-0.193,0.082l-0.087,1.281c0,0.123-0.147,0.128-0.184,0L6.849,15.52c-0.026-0.065-0.066-0.125-0.115-0.175 c-0.05-0.05-0.109-0.09-0.175-0.117c-0.382-0.131-0.773-0.236-1.169-0.315c-0.525-0.091-1.284-0.141-1.284-0.141 c-0.129,0-0.17,0.077-0.097,0.178l0.782,1.409c0.074,0.105,0,0.205-0.11,0.123l-1.703-1.368c-0.159-0.103-0.337-0.172-0.524-0.203 c-0.187-0.031-0.378-0.024-0.562,0.021c-0.377,0.059-0.92,0.173-0.92,0.173c-0.059,0.013-0.112,0.047-0.147,0.096 c-0.037,0.047-0.055,0.105-0.051,0.164c0,0,0.041,0.547,0.087,0.912c0.005,0.186,0.049,0.369,0.128,0.537 c0.079,0.168,0.192,0.319,0.332,0.443l1.772,1.254c0.11,0.073,0.032,0.182-0.087,0.137l-1.578-0.351 c-0.12-0.046-0.189,0-0.152,0.137c0,0,0.262,0.711,0.492,1.181c0.195,0.368,0.416,0.721,0.663,1.058 c0.044,0.055,0.098,0.1,0.16,0.133c0.062,0.034,0.129,0.055,0.199,0.063l1.905,0.046c0.124,0,0.156,0.141,0.041,0.178l-1.219,0.456 c-0.12,0.036-0.129,0.128-0.028,0.205c0.357,0.252,0.743,0.461,1.15,0.62c0.72,0.231,1.483,0.295,2.232,0.187 c0.557-0.078,1.106-0.208,1.638-0.388c-0.02-0.151-0.031-0.303-0.032-0.456c0.002-0.488,0.106-0.97,0.307-1.416 c0.2-0.446,0.493-0.845,0.858-1.173 M23.217,15.388c0.002-0.059-0.016-0.117-0.051-0.164c-0.036-0.049-0.088-0.083-0.147-0.096 c0,0-0.543-0.114-0.92-0.169c-0.183-0.045-0.373-0.053-0.559-0.022c-0.186,0.031-0.364,0.099-0.522,0.2l-1.703,1.368 c-0.101,0.082-0.184,0-0.11-0.123l0.778-1.409c0.078-0.1,0.037-0.182-0.092-0.178c0,0-0.759,0.05-1.284,0.141 c-0.396,0.079-0.787,0.184-1.169,0.315c-0.065,0.027-0.125,0.067-0.175,0.117c-0.05,0.05-0.089,0.109-0.115,0.175l-0.571,1.796 c-0.037,0.119-0.179,0.114-0.184,0l-0.092-1.281c0-0.123-0.087-0.16-0.189-0.082c-0.343,0.266-0.652,0.572-0.92,0.912 c-0.42,0.615-0.693,1.316-0.796,2.052c0,0.068,0,0.128,0,0.191c0.365,0.327,0.657,0.727,0.857,1.173 c0.2,0.446,0.303,0.929,0.303,1.417c-0.001,0.152-0.012,0.305-0.032,0.456c0.534,0.179,1.084,0.309,1.643,0.388 c0.749,0.108,1.512,0.044,2.232-0.187c0.408-0.16,0.794-0.368,1.15-0.62c0.101-0.077,0.092-0.169-0.028-0.205l-1.219-0.456 c-0.115-0.036-0.083-0.173,0.041-0.178l1.901-0.046c0.071-0.006,0.14-0.027,0.203-0.06c0.063-0.034,0.117-0.08,0.161-0.136 c0.227-0.328,0.431-0.671,0.612-1.026c0.235-0.456,0.497-1.181,0.497-1.181c0.037-0.118-0.032-0.182-0.152-0.137l-1.578,0.351 c-0.124,0.046-0.198-0.064-0.092-0.137l1.785-1.254c0.14-0.124,0.253-0.275,0.332-0.443c0.079-0.169,0.123-0.351,0.128-0.537 c0.046-0.378,0.087-0.912,0.087-0.912 M18.229,9.429c0-0.196-0.129-0.269-0.304-0.16l-1.841,0.994c-0.17,0.109-0.207-0.1-0.083-0.26 l1.758-2.325c0.064-0.091,0.107-0.195,0.126-0.305c0.018-0.11,0.012-0.222-0.02-0.329c-0.23-0.627-0.505-1.236-0.824-1.824 c-0.321-0.516-0.678-1.01-1.068-1.477c-0.124-0.155-0.276-0.128-0.341,0.059l-0.86,2.129c-0.064,0.187-0.226,0.182-0.221,0 l0.101-3.342c-0.002-0.237-0.094-0.465-0.258-0.638c0,0-0.511-0.511-0.92-0.884c-0.409-0.374-1.173-0.966-1.173-0.966 C12.22,0.036,12.117,0,12.012,0c-0.106,0-0.208,0.036-0.29,0.102c0,0-0.722,0.561-1.192,0.966c-0.469,0.406-0.92,0.88-0.92,0.88 c-0.166,0.166-0.264,0.387-0.276,0.62L9.439,5.91c0,0.201-0.156,0.205-0.226,0l-0.86-2.106c-0.06-0.187-0.216-0.214-0.341-0.055 C7.601,4.245,7.227,4.771,6.895,5.322C6.592,5.877,6.33,6.453,6.112,7.045C6.083,7.15,6.076,7.261,6.094,7.368 c0.017,0.108,0.058,0.211,0.12,0.301l1.767,2.334c0.124,0.16,0.087,0.369-0.087,0.26L6.052,9.27C5.882,9.16,5.74,9.233,5.744,9.429 c0.015,0.645,0.12,1.285,0.313,1.901c0.435,1.115,1.13,2.111,2.029,2.909c1.182,1.209,2.14,2.615,2.83,4.153 c0.702-0.225,1.457-0.225,2.158,0c0.688-1.534,1.639-2.938,2.812-4.149c0.823-0.731,1.479-1.628,1.924-2.63 c0.253-0.701,0.394-1.436,0.419-2.179 M14.308,21.721c0,0.451-0.135,0.892-0.388,1.266c-0.253,0.375-0.612,0.667-1.033,0.84 c-0.42,0.173-0.883,0.218-1.329,0.13c-0.446-0.088-0.856-0.305-1.178-0.624c-0.322-0.319-0.541-0.725-0.63-1.167 c-0.089-0.442-0.043-0.9,0.131-1.317c0.174-0.417,0.469-0.773,0.847-1.023c0.378-0.25,0.823-0.384,1.278-0.384 c0.61,0,1.195,0.24,1.627,0.668C14.066,20.536,14.308,21.116,14.308,21.721z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.parse.ly/\",hex:\"5BA745\"},Pastebin:{title:\"Pastebin\",slug:\"pastebin\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Pastebin icon</title><path d=\"M17.02 0a2.096 2.096 0 00-.723.123L2.623 5.003A2.101 2.101 0 001.35 7.69l5.324 14.916a2.101 2.101 0 002.685 1.272l7.746-2.765c.792-.307 1.345-.534 1.464-.608.543-.314.962-.817 1.964-2.334.904-1.362 1.859-3.323 2.097-4.28.24-.97.239-1.48-.502-3.675h.001l-3.147-8.82A2.102 2.102 0 0017.02 0zm-.084.414c.72-.031 1.4.403 1.657 1.12l3.147 8.82.008-.003c.271.763.497 1.415.526 1.54.102.433-.282 1.147-.737 1.35-.2.1-.71.293-1.142.429-1.397.464-2.05.879-2.458 1.548-.363.591-.315 1.18.16 2.377.462 1.142.533 1.864.225 2.4-.113.188-.301.322-1.354.733l-.002-.005-7.746 2.765a1.68 1.68 0 01-2.157-1.022L1.74 7.55a1.68 1.68 0 011.022-2.157L16.436.513c.165-.06.334-.092.5-.099zM15.9 2.25l-.708.515-.495.37.113.314.074.205.523-.316.4 1.112.403 1.123-.359.129-.337.12c.045.145.216.642.238.664l2.166-.779-.238-.663-.244.088-.443.16-.334-.93zm-3.29 1.182l-.709.515-.494.37.113.314.073.205.524-.316.4 1.112.403 1.123-.36.129-.337.121c.046.144.216.64.238.663l2.167-.778-.238-.663-.244.087-.443.16-.334-.93zM9.084 4.786a1.532 1.532 0 00-.8.223c-.732.448-.85 1.383-.332 2.558.337.776.873 1.218 1.462 1.215 1.345-.007 1.86-1.399 1.085-2.95-.307-.66-.837-1.036-1.415-1.046zm-.191.672c.168-.009.357.085.539.279.145.155.347.51.437.787.35.998.164 1.688-.414 1.546C8.854 7.93 8.21 6 8.62 5.585a.407.407 0 01.273-.127zm-3.765.75a1.532 1.532 0 00-.8.223c-.732.448-.85 1.382-.332 2.557.337.777.873 1.218 1.462 1.215 1.344-.007 1.86-1.398 1.085-2.95-.307-.66-.838-1.036-1.415-1.045zm-.192.672c.168-.01.358.085.54.278.145.155.347.51.437.787.35.999.164 1.689-.415 1.547-.6-.141-1.243-2.072-.834-2.485a.407.407 0 01.272-.127zm13.362.655a1.533 1.533 0 00-.8.223c-.732.448-.85 1.382-.332 2.558.337.776.873 1.218 1.462 1.215 1.345-.007 1.86-1.399 1.085-2.95-.307-.66-.837-1.036-1.415-1.046zm-.191.672c.168-.009.357.085.539.278.145.155.347.51.437.787.35.999.164 1.689-.414 1.547-.601-.141-1.244-2.072-.835-2.485a.407.407 0 01.273-.127zm-3.766.75a1.532 1.532 0 00-.8.222c-.73.448-.848 1.383-.331 2.558.337.776.873 1.218 1.462 1.215 1.344-.007 1.86-1.398 1.085-2.95-.307-.66-.838-1.036-1.416-1.045zm-.19.671c.167-.009.357.085.539.279.145.155.347.51.437.787.35.998.164 1.688-.415 1.547-.6-.142-1.244-2.072-.835-2.485a.408.408 0 01.273-.128zm-3.746.743a1.533 1.533 0 00-.8.223c-.732.448-.85 1.382-.332 2.557.337.777.873 1.219 1.462 1.216 1.345-.007 1.86-1.399 1.085-2.951-.307-.66-.838-1.036-1.415-1.045zm-.192.672c.169-.01.358.085.54.278.145.155.347.51.437.787.35.999.164 1.689-.414 1.547-.601-.141-1.244-2.072-.835-2.485a.407.407 0 01.272-.127zm-3.515.616l-.708.515-.495.369.113.314.074.206.524-.316.399 1.112.403 1.122-.359.13-.337.12c.045.145.216.641.238.663l2.166-.778-.238-.663-.244.088-.443.159-.334-.93zm15.664 1.33c.034 0 .049.047.064.135.023.11-.064.545-.195.957-.469 1.436-2.052 4.224-3.079 5.397l-.408.47.051-.667c.03-.567-.016-.812-.377-1.71-.496-1.263-.533-1.73-.158-2.31.341-.514 1.028-.907 2.448-1.371.72-.238 1.175-.463 1.385-.664.132-.145.207-.22.253-.235a.05.05 0 01.015-.003zm-6.429 1.477l-.708.515-.495.37.113.314.074.205.523-.316.4 1.112.403 1.123-.359.129-.337.12c.045.145.216.642.238.664l2.166-.779-.238-.662-.244.087-.443.16-.334-.93zm-3.579 1.33a1.532 1.532 0 00-.8.223c-.731.448-.849 1.382-.332 2.558.337.776.873 1.218 1.462 1.215 1.345-.007 1.86-1.399 1.086-2.95-.307-.66-.838-1.036-1.416-1.046zm-.191.672c.168-.009.358.085.54.279.144.154.346.51.437.787.35.998.164 1.688-.415 1.546-.6-.141-1.244-2.072-.835-2.485a.407.407 0 01.273-.127zm-3.515.616l-.71.515-.494.37.113.313.074.206.524-.316.4 1.112.403 1.122-.36.13-.337.12c.045.145.216.642.238.664l2.166-.779-.238-.663-.244.088-.443.16-.334-.93z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://pastebin.com/\",hex:\"02456C\"},Patreon:{title:\"Patreon\",slug:\"patreon\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Patreon icon</title><path d=\"M15.386.524c-4.764 0-8.64 3.876-8.64 8.64 0 4.75 3.876 8.613 8.64 8.613 4.75 0 8.614-3.864 8.614-8.613C24 4.4 20.136.524 15.386.524M.003 23.537h4.22V.524H.003\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.patreon.com/brand/downloads\",hex:\"F96854\"},PayPal:{title:\"PayPal\",slug:\"paypal\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>PayPal icon</title><path d=\"M6.908 24H3.804c-.664 0-1.086-.529-.936-1.18l.149-.674h2.071c.666 0 1.336-.533 1.482-1.182l1.064-4.592c.15-.648.816-1.18 1.48-1.18h.883c3.789 0 6.734-.779 8.84-2.34s3.16-3.6 3.16-6.135c0-1.125-.195-2.055-.588-2.789 0-.016-.016-.031-.016-.046l.135.075c.75.465 1.32 1.064 1.711 1.814.404.75.598 1.68.598 2.791 0 2.535-1.049 4.574-3.164 6.135-2.1 1.545-5.055 2.324-8.834 2.324h-.9c-.66 0-1.334.525-1.484 1.186L8.39 22.812c-.149.645-.81 1.17-1.47 1.17L6.908 24zm-2.677-2.695H1.126c-.663 0-1.084-.529-.936-1.18L4.563 1.182C4.714.529 5.378 0 6.044 0h6.465c1.395 0 2.609.098 3.648.289 1.035.189 1.92.519 2.684.99.736.465 1.322 1.072 1.697 1.818.389.748.584 1.68.584 2.797 0 2.535-1.051 4.574-3.164 6.119-2.1 1.561-5.056 2.326-8.836 2.326h-.883c-.66 0-1.328.524-1.478 1.169L5.7 20.097c-.149.646-.817 1.172-1.485 1.172l.016.036zm7.446-17.369h-1.014c-.666 0-1.332.529-1.48 1.178l-.93 4.02c-.15.648.27 1.179.93 1.179h.766c1.664 0 2.97-.343 3.9-1.021.929-.686 1.395-1.654 1.395-2.912 0-.83-.301-1.445-.9-1.84-.6-.404-1.5-.605-2.686-.605l.019.001z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.paypal-marketing.com/html/partner/na/portal-v2/pdf/PP_Masterbrandguidelines_v21_mm.pdf\",hex:\"00457C\"},PeerTube:{title:\"PeerTube\",slug:\"peertube\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>PeerTube icon</title><path d=\"M3,0v12l9-6L3,0z M3,12v12l9-6L3,12z M12,6v12l9-6L12,6z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/Chocobozzz/PeerTube/tree/develop/client/src/assets/images\",hex:\"F1680D\"},Periscope:{title:\"Periscope\",slug:\"periscope\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Periscope icon</title><path d=\"M12.135 24c1.875 0 9.314-8.439 9.314-14.096C21.449 4.49 17.22 0 12.135 0 6.78 0 2.551 4.488 2.551 9.904 2.551 15.56 9.99 24 12.135 24zM10.639 3.846c.485-.12.995-.185 1.524-.185 3 0 5.581 2.551 5.581 5.865 0 2.985-2.581 5.535-5.596 5.535-3.345 0-5.925-2.55-5.925-5.535 0-1.396.45-2.64 1.229-3.63v.03c0 1.245 1.006 2.234 2.25 2.234C10.948 8.161 12 7.14 12 5.896c0-.919-.56-1.708-1.359-2.053l-.002.003z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.periscope.tv/press\",hex:\"40A4C4\"},PHP:{title:\"PHP\",slug:\"php\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>PHP icon</title><path d=\"M7.01 10.207h-.944l-.515 2.648h.838c.556 0 .97-.105 1.242-.314.272-.21.455-.559.55-1.049.092-.47.05-.802-.124-.995-.175-.193-.523-.29-1.047-.29zM12 5.688C5.373 5.688 0 8.514 0 12s5.373 6.313 12 6.313S24 15.486 24 12c0-3.486-5.373-6.312-12-6.312zm-3.26 7.451c-.261.25-.575.438-.917.551-.336.108-.765.164-1.285.164H5.357l-.327 1.681H3.652l1.23-6.326h2.65c.797 0 1.378.209 1.744.628.366.418.476 1.002.33 1.752a2.836 2.836 0 0 1-.305.847c-.143.255-.33.49-.561.703zm4.024.715l.543-2.799c.063-.318.039-.536-.068-.651-.107-.116-.336-.174-.687-.174H11.46l-.704 3.625H9.388l1.23-6.327h1.367l-.327 1.682h1.218c.767 0 1.295.134 1.586.401s.378.7.263 1.299l-.572 2.944h-1.389zm7.597-2.265a2.782 2.782 0 0 1-.305.847c-.143.255-.33.49-.561.703a2.44 2.44 0 0 1-.917.551c-.336.108-.765.164-1.286.164h-1.18l-.327 1.682h-1.378l1.23-6.326h2.649c.797 0 1.378.209 1.744.628.366.417.477 1.001.331 1.751zM17.766 10.207h-.943l-.516 2.648h.838c.557 0 .971-.105 1.242-.314.272-.21.455-.559.551-1.049.092-.47.049-.802-.125-.995s-.524-.29-1.047-.29z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://php.net/download-logos.php\",hex:\"777BB4\"},\"Picarto.TV\":{title:\"Picarto.TV\",slug:\"picarto-dot-tv\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Picarto.TV icon</title><path d=\"M12 0C5.373 0 0 5.373 0 12s5.373 12 12 12c6.628 0 12-5.373 12-12S18.628 0 12 0zM7.08 4.182h2.781c.233 0 .42.21.42.47v14.696c0 .26-.187.47-.42.47h-2.78c-.233 0-.42-.21-.42-.47V4.652c0-.26.187-.47.42-.47zm4.664 0a.624.624 0 0 1 .326.091c.355.209 7.451 4.42 8.057 4.78a.604.604 0 0 1 0 1.039c-.436.264-7.558 4.495-8.074 4.789a.577.577 0 0 1-.873-.512v-1.812c0-1.712 2.962-2.201 3.398-2.465a.604.604 0 0 0 0-1.04c-.605-.36-3.398-.746-3.398-2.452V4.79c0-.334.251-.605.564-.61z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://picarto.tv/site/press\",hex:\"1DA456\"},Pinboard:{title:\"Pinboard\",slug:\"pinboard\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Pinboard icon</title><path d=\"M13.352 14.585l-4.509 4.614.72-4.062L3.428 7.57 0 7.753 7.58 0v2.953l7.214 6.646 4.513-1.105-4.689 4.982L24 24l-10.648-9.415z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://commons.wikimedia.org/wiki/File:Feedbin-Icon-share-pinboard.svg\",hex:\"0000FF\"},Pingdom:{title:\"Pingdom\",slug:\"pingdom\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Pingdom icon</title><path d=\"M11.96 17.804l7.959-3.396-7.049 7.241c-.124-1.315-.432-2.61-.91-3.844v-.001zM24 11.118c-5.101-.236-10.208.414-15.087 1.92 1.024 1.073 1.881 2.292 2.535 3.621 4.042-2.25 9.646-5.123 12.552-5.531v-.015.005zm-12.574.275l.207-.06c1.538-.459 3.049-1.015 4.523-1.656 1.492-.585 2.896-1.38 4.159-2.367 1.345-1.069 2.355-2.499 2.915-4.122.12-.267.211-.549.267-.837-2.024 2.76-10.041 3.048-10.041 3.048l1.89-1.734C9.84 3.684 4.47 5.424 0 8.645c3.03.322 5.877 1.596 8.139 3.634 1.086-.336 2.196-.576 3.286-.879v-.006l.001-.001z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://tools.pingdom.com\",hex:\"FFF000\"},Pingup:{title:\"Pingup\",slug:\"pingup\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Pingup icon</title><path d=\"M13.667 0H1.721v24h7.536V9.717h-2.76c-.504 0-.65-.314-.32-.698l4.324-5.044c.327-.384.867-.384 1.195 0l4.324 5.044c.314.384.18.698-.33.698h-2.759v6.676h.73c6.225 0 8.617-4.309 8.617-8.481C22.291 3.906 19.666 0 13.667 0\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://pingup.com/resources\",hex:\"00B1AB\"},Pinterest:{title:\"Pinterest\",slug:\"pinterest\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Pinterest icon</title><path d=\"M12.017 0C5.396 0 .029 5.367.029 11.987c0 5.079 3.158 9.417 7.618 11.162-.105-.949-.199-2.403.041-3.439.219-.937 1.406-5.957 1.406-5.957s-.359-.72-.359-1.781c0-1.663.967-2.911 2.168-2.911 1.024 0 1.518.769 1.518 1.688 0 1.029-.653 2.567-.992 3.992-.285 1.193.6 2.165 1.775 2.165 2.128 0 3.768-2.245 3.768-5.487 0-2.861-2.063-4.869-5.008-4.869-3.41 0-5.409 2.562-5.409 5.199 0 1.033.394 2.143.889 2.741.099.12.112.225.085.345-.09.375-.293 1.199-.334 1.363-.053.225-.172.271-.401.165-1.495-.69-2.433-2.878-2.433-4.646 0-3.776 2.748-7.252 7.92-7.252 4.158 0 7.392 2.967 7.392 6.923 0 4.135-2.607 7.462-6.233 7.462-1.214 0-2.354-.629-2.758-1.379l-.749 2.848c-.269 1.045-1.004 2.352-1.498 3.146 1.123.345 2.306.535 3.55.535 6.607 0 11.985-5.365 11.985-11.987C23.97 5.39 18.592.026 11.985.026L12.017 0z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://business.pinterest.com/en/brand-guidelines\",hex:\"BD081C\"},\"Pivotal Tracker\":{title:\"Pivotal Tracker\",slug:\"pivotaltracker\",svg:'<svg xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" viewBox=\"0 0 24 24\"><title>Pivotal Tracker icon</title><path d=\"M12.002 0c-6.617 0-12 5.382-12 11.998 0 6.618 5.384 12.002 12 12.002S24 18.616 24 11.998C24 5.382 18.619 0 12.002 0zm0 2.43a9.568 9.568 0 0 1 9.568 9.568c0 5.286-4.283 9.572-9.568 9.572-5.285 0-9.57-4.286-9.57-9.572 0-5.285 4.285-9.568 9.57-9.568zm-.135 1.31L8.822 5.498V5.5l2.68 4.64c.425-.113.888-.08 1.31.118l1.41-2.442-2.355-4.076zm4.17 2.256l-2.68 4.643c.325.324.52.749.557 1.195h2.816l2.356-4.076-3.049-1.762zM4.781 7.984v3.55h.002v-.03h5.36a1.904 1.904 0 0 1 .756-1.08L9.49 7.984H4.781zm2.487 4.182L4.912 16.24l3.049 1.762 2.682-4.645a1.929 1.929 0 0 1-.557-1.191H7.268zm6.59.33a1.904 1.904 0 0 1-.756 1.078l1.41 2.442h4.707v-3.52h-5.362zm-2.67 1.244l-1.41 2.442 2.353 4.076 3.049-1.76-2.68-4.64c-.425.114-.89.08-1.313-.118z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.pivotaltracker.com/branding-guidelines\",hex:\"517A9E\"},\"Pi-hole\":{title:\"Pi-hole\",slug:\"pi-hole\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Pi-hole icon</title><path d=\"M9.375,8.782l-4.442,4.44c-1.451,1.45-1.451,3.803,0,5.253l4.442,4.439c1.45,1.449,3.799,1.449,5.249,0l4.442-4.439c1.451-1.45,1.452-3.803,0-5.253l-4.442-4.44C13.175,7.333,10.825,7.333,9.375,8.782z M10.595,7.38C7.597,7.06,4.577,4.794,4.338,0c4.652,0,7.14,2.754,7.38,7.118c0.88-5.234,5.003-4.621,5.003-4.621c0.196,2.966-2.24,4.765-5.003,4.914c-0.776-1.636-5.426-5.648-5.426-5.648C6.287,1.759,6.278,1.759,6.274,1.765C6.271,1.768,6.27,1.774,6.272,1.778C6.272,1.778,10.759,5.687,10.595,7.38 M11.994,17.684c-2.231,0.165-3.212,1.738-3.148,3.274c-0.003-0.036-0.007-0.07-0.009-0.107c-0.133-1.848,1.327-3.21,1.327-5.005c-0.172-2.322-1.869-3.287-3.462-3.133c0.101-0.012,0.204-0.022,0.313-0.028c1.848-0.133,3.212,1.327,5.005,1.327c2.082-0.157,3.074-1.537,3.146-2.969c0.022,1.75-1.331,3.079-1.331,4.81c0.165,2.23,1.736,3.21,3.271,3.148c-0.036,0.003-0.07,0.007-0.107,0.009C15.151,19.144,13.787,17.684,11.994,17.684z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/pi-hole/web/\",hex:\"F60D1A\"},PJSIP:{title:\"PJSIP\",slug:\"pjsip\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>PJSIP icon</title><path d=\"M5.272 20.562H10.2l2.657 2.657c.873.874 2.114 1.039 2.782.371l7.951-7.951c.668-.668.503-1.909-.37-2.782L11.142.781C10.27-.093 9.029-.258 8.36.41L.41 8.36c-.668.668-.503 1.909.37 2.782l4.492 4.492zm2.142-2.142v-3.768l-.88-.88h.016l-2.507-2.507c-.873-.873-1.039-2.114-.371-2.782l4.811-4.811c.668-.668 1.909-.502 2.782.371l8.692 8.692c.873.873 1.039 2.114.371 2.782l-4.811 4.811c-.438.438-1.12.511-1.786.269a1.218 3.063 25.325 00.557-2.845 1.218 3.063 25.325 00-1.557.033 1.218 3.063 25.325 00-.931 1.252l-.618-.617zM5.172 11.24a1.628 1.628 0 002.302 0 1.628 1.628 0 000-2.302 1.628 1.628 0 00-2.303 0 1.628 1.628 0 000 2.302z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.pjsip.org/favicon.ico\",hex:\"F86001\"},PlanGrid:{title:\"PlanGrid\",slug:\"plangrid\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>PlanGrid icon</title><path d=\"M16.6 0c2.6 0 4.262.009 5.828 1.574C23.99 3.141 24 4.794 24 7.401v9.2c0 2.6-.01 4.261-1.574 5.828C20.859 23.991 19.207 24 16.598 24h-9.2c-2.599 0-4.26-.009-5.827-1.574C.01 20.861 0 19.207 0 16.599v-9.2C0 4.8.01 3.138 1.574 1.572 3.141.01 4.793 0 7.4 0h9.201-.001zm4.398 11.151C20.57 6.578 16.684 3.002 12 3.002c-4.971 0-9 4.027-9 8.998 0 4.801 3.752 8.734 8.485 9h7.136c1.313-.003 2.375-1.066 2.379-2.381v-7.47l-.002.002zm-2.285 8.589c-.564 0-1.023-.46-1.023-1.024 0-.566.459-1.024 1.023-1.024.566 0 1.025.458 1.025 1.024 0 .564-.459 1.024-1.025 1.024zM12 18.949C8.163 18.945 5.055 15.836 5.051 12 5.055 8.164 8.163 5.055 12 5.051c3.836.004 6.945 3.113 6.949 6.949-.004 3.836-3.113 6.945-6.949 6.949z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://plangrid.com/en/\",hex:\"0085DE\"},\"Player.me\":{title:\"Player.me\",slug:\"player-dot-me\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Player.me icon</title><path d=\"M11.981 0a8.957 8.957 0 0 0-8.956 8.957v.363C3.283 15.828 10.082 24 10.082 24V13.205c-1.638-.747-2.756-2.369-2.756-4.253a4.66 4.66 0 1 1 6.152 4.416l-.033.01v4.427c4.296-.713 7.531-4.401 7.531-8.845A8.959 8.959 0 0 0 12.017.001h-.038.002z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://player.me/p/about-us\",hex:\"C0379A\"},\"Player FM\":{title:\"Player FM\",slug:\"playerfm\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Player FM icon</title><path d=\"M11.976 0a12 12 0 00-.347.012c-.323.021-.771.063-1.129.11-3.29.448-6.096 2.1-7.993 4.56a12.027 12.027 0 00-1.22 1.94 12 12 0 00-.173.358c-.092.198-.179.4-.261.603a12 12 0 00-.288.788l-.045.143A12 12 0 000 11.986v.037A12 12 0 0012 24a12 12 0 0011.939-10.79l.003-.024A12 12 0 0024 12.018v-.048a12 12 0 00-.769-4.182c-.04-.105-.081-.21-.125-.313a12 12 0 00-.226-.507c-1.487-3.15-4.299-5.59-7.698-6.506-.76-.208-1.978-.39-2.813-.444A12 12 0 0012.024 0h-.048zm2.321 2.88c.166.001.377.056.675.159 1.782.611 3.773 2.157 4.856 3.764.752 1.118 1.337 2.428 1.337 2.987 0 .358-.35.681-.725.681-.35 0-.708-.305-.804-.68-.13-.525-.83-1.852-1.345-2.534-.917-1.205-2.332-2.262-3.72-2.777-.979-.367-1.232-.795-.778-1.336.152-.182.29-.267.504-.265zm-3.885 1.4c.26.001.495.056.7.165 1.31.664 1.24 2.568-.122 3.092-1.686.637-2.533 1.319-3.084 2.437-1.153 2.34-.21 5.1 2.123 6.218 1.712.821 3.668.533 5.03-.725.62-.576.961-1.074 1.267-1.878.428-1.126.917-1.545 1.79-1.545 1.119 0 1.887.943 1.66 2.026-.463 2.13-2.253 4.27-4.42 5.275-1.196.55-1.851.69-3.362.69-1.485 0-2.131-.131-3.284-.655-3.144-1.424-5.075-4.83-4.673-8.21a8.123 8.123 0 015.511-6.734c.315-.105.603-.157.864-.156zm3.463.96c.217.004.499.105.914.306 1.686.803 3.083 2.279 3.834 4.035.28.672.14 1.109-.41 1.283-.42.123-.7-.104-1.066-.864-.681-1.441-1.65-2.437-3.013-3.11-.795-.384-.891-.471-.97-.847-.035-.2 0-.314.184-.532.157-.184.31-.276.527-.271zm-.398 2.443c.23-.001.496.108.84.334.961.629 2.044 1.983 2.044 2.55 0 .289-.28.656-.559.725-.376.097-.646-.087-1.04-.707-.427-.655-.925-1.153-1.44-1.415-.446-.227-.577-.402-.577-.769a.58.58 0 01.245-.515.727.727 0 01.487-.203z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://player.fm/\",hex:\"C8122A\"},PlayStation:{title:\"PlayStation\",slug:\"playstation\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>PlayStation icon</title><path d=\"M8.985 2.596v17.548l3.915 1.261V6.688c0-.69.304-1.151.794-.991.636.181.76.814.76 1.505v5.876c2.441 1.193 4.362-.002 4.362-3.153 0-3.237-1.126-4.675-4.438-5.827-1.307-.448-3.728-1.186-5.391-1.502h-.002zm4.656 16.242l6.296-2.275c.715-.258.826-.625.246-.818-.586-.192-1.637-.139-2.357.123l-4.205 1.499v-2.385l.24-.085s1.201-.42 2.913-.615c1.696-.18 3.785.029 5.437.661 1.848.601 2.041 1.472 1.576 2.072s-1.622 1.036-1.622 1.036l-8.544 3.107v-2.297l.02-.023zM1.808 18.6c-1.9-.545-2.214-1.668-1.352-2.321.801-.585 2.159-1.051 2.159-1.051l5.616-2.013v2.313L4.206 17c-.705.271-.825.632-.239.826.586.195 1.637.15 2.343-.12L8.248 17v2.074c-.121.029-.256.044-.391.073-1.938.331-3.995.196-6.037-.479l-.012-.068z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://uk.playstation.com/media/DPBjbK0o/CECH-4202_4203%20PS3_QSG_GB_Eastern_3_web_vf1.pdf\",hex:\"003791\"},\"PlayStation 3\":{title:\"PlayStation 3\",slug:\"playstation3\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>PlayStation 3 icon</title><path d=\"M15.363 9.438h-3.148c-.97 0-1.447.6-1.447 1.38v2.366c0 .483-.228.83-.71.83H7.304c-.02 0-.035.017-.035.035v.47c0 .02.01.032.03.032h3.11c.97 0 1.45-.597 1.45-1.377V10.81c0-.484.225-.832.71-.832h2.782c.02 0 .04-.014.04-.033V9.47c0-.02-.02-.035-.04-.035zm-9.267 0H.038c-.022 0-.038.017-.038.035v.477c0 .02.016.036.038.036h5.694c.48 0 .71.347.71.83s-.228.83-.71.83H1.228c-.7 0-1.227.587-1.227 1.366v1.513c0 .02.02.037.04.037h1.03c.02 0 .04-.016.04-.037v-1.513c0-.48.28-.82.68-.82H6.1c.97 0 1.444-.595 1.444-1.375 0-.778-.473-1.38-1.442-1.38zm17.454 2.498c-.015-.015-.015-.04 0-.056.3-.25.45-.627.45-1.062 0-.778-.474-1.38-1.446-1.38h-6.057c-.02 0-.036.018-.036.038v.475c0 .02.02.04.04.04h5.7c.48 0 .715.35.715.83s-.23.83-.712.83h-5.7c-.02 0-.036.02-.036.04v.48c0 .02.016.034.037.034h5.7c.63.007.71.62.71.93v.06c0 .485-.23.833-.71.833h-5.7c-.02 0-.036.015-.036.034v.477c0 .02.015.037.036.037h6.05c.973 0 1.446-.645 1.446-1.38v-.057c0-.47-.15-.916-.45-1.19z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://commons.wikimedia.org/wiki/File:PlayStation_3_Logo_neu.svg#/media/File:PS3.svg\",hex:\"003791\"},\"PlayStation 4\":{title:\"PlayStation 4\",slug:\"playstation4\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>PlayStation 4 icon</title><path d=\"M12.305 13.18v-2.387c0-.487.227-.835.712-.835h2.99c.017 0 .035-.018.035-.036v-.475c0-.004 0-.008-.003-.012h-3.66c-.792.1-1.18.653-1.18 1.358v2.386c0 .483-.233.832-.71.832H7.335c-.018 0-.036.012-.036.036v.475c0 .02.01.035.023.04h3.584c.933-.025 1.393-.62 1.393-1.386zM.025 14.565h1.05c.013-.005.025-.02.025-.04v-1.52c0-.488.275-.824.676-.824H6.1c.974 0 1.446-.6 1.446-1.384 0-.706-.387-1.258-1.18-1.358H.006c0 .003-.006.005-.006.01v.475c0 .024.013.036.037.036h5.698c.484 0 .712.35.712.834s-.227.836-.712.836H1.227c-.7 0-1.226.592-1.226 1.373v1.52c0 .02.01.036.028.04zm16-.55h5.74c.017 0 .03.012.03.024v.483c0 .024.017.036.035.036h1.035c.018 0 .036-.01.036-.036v-.475c0-.018.02-.036.04-.036h1.028c.024 0 .036-.018.036-.036v-.484c0-.018-.01-.036-.035-.036h-1.03c-.02 0-.037-.017-.037-.035V9.958c0-.283-.104-.463-.28-.523h-.3c-.093.024-.195.067-.303.132l-6.182 3.817c-.24.15-.323.318-.263.445.048.104.185.182.454.182zm.896-.637l4.79-2.963c.03-.024.09-.018.09.048v2.963c0 .018-.015.036-.033.036H16.95c-.04 0-.06-.012-.065-.024-.006-.024.005-.042.036-.06z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://commons.wikimedia.org/wiki/File:PlayStation_4_logo_and_wordmark.svg\",hex:\"003791\"},Plesk:{title:\"Plesk\",slug:\"plesk\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Plesk icon</title><path d=\"M6.102 7.021v7.353h.736V7.02zm13.655.01v7.343h.735V7.032zm.735 4.633l2.479 2.71h1.019l-2.574-2.731L24 9.122h-.987zm-4.008-2.636c-.536 0-.972.125-1.31.378-.337.252-.505.609-.505 1.07 0 .26.049.474.148.642.1.168.226.306.38.415.154.108.328.198.522.267.194.07.39.134.59.19.175.049.342.1.5.152.158.052.297.117.418.194.12.077.216.17.286.278.07.109.104.244.104.405 0 .21-.095.388-.286.535-.19.147-.484.221-.88.221-.609 0-1.104-.245-1.485-.735l-.572.504c.286.315.59.54.913.678.322.136.693.204 1.11.204.272 0 .527-.033.766-.1a1.89 1.89 0 00.621-.294c.176-.13.316-.288.419-.478.102-.189.153-.402.153-.64 0-.26-.051-.474-.153-.646a1.46 1.46 0 00-.402-.436 2.284 2.284 0 00-.545-.289 13.019 13.019 0 00-.594-.205c-.161-.049-.317-.1-.467-.152a2.013 2.013 0 01-.397-.184.923.923 0 01-.275-.252.598.598 0 01-.104-.357c0-.203.075-.371.225-.504.15-.133.413-.2.787-.2.293 0 .546.055.759.163.213.109.41.278.594.51l.011.01.54-.494c-.272-.315-.556-.535-.853-.661a2.586 2.586 0 00-1.018-.19zm-14.688.041c-.588 0-1.187.095-1.796.284v7.626h.725v-2.72c.182.048.364.087.546.115a3.539 3.539 0 001.586-.11c.336-.102.635-.261.898-.478.263-.217.474-.494.636-.83.16-.336.241-.739.241-1.208 0-.385-.067-.742-.2-1.071a2.42 2.42 0 00-.572-.851 2.636 2.636 0 00-.898-.557c-.35-.133-.739-.2-1.166-.2zm8.886 0c-.322 0-.627.055-.914.163-.287.11-.54.275-.756.5a2.391 2.391 0 00-.515.845c-.126.34-.189.74-.189 1.202 0 .35.052.683.157.998.106.315.263.596.473.84.21.246.473.44.788.583.315.144.683.216 1.103.216.455 0 .844-.068 1.166-.205.322-.137.605-.338.85-.604l-.44-.462c-.204.224-.431.387-.683.488a2.226 2.226 0 01-.84.153c-.554 0-.992-.175-1.314-.526-.322-.35-.493-.822-.514-1.417h3.939c.013-.904-.176-1.592-.568-2.064-.392-.473-.973-.71-1.743-.71zm.031.62c.26 0 .487.04.683.121.196.08.355.187.478.32.122.133.217.295.284.484.066.189.1.392.1.609H9.074a2.126 2.126 0 01.494-1.103c.111-.126.264-.23.456-.31.193-.08.422-.12.688-.12zM1.86 9.7c.616 0 1.094.188 1.434.563.34.374.51.866.51 1.475 0 .659-.185 1.165-.552 1.518-.368.354-.863.53-1.486.53-.168 0-.342-.018-.52-.057a4.836 4.836 0 01-.52-.142V9.868c.182-.063.367-.107.557-.132.189-.024.38-.036.577-.036zm2.377 6.588v.692H8.66v-.692z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.plesk.com/brand/\",hex:\"52BBE6\"},Plex:{title:\"Plex\",slug:\"plex\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Plex icon</title><path d=\"M11.643 0H4.68l7.679 12L4.68 24h6.963l7.677-12-7.677-12\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://brand.plex.tv/d/qxmJ3odkK0fj/plex-style-guide\",hex:\"E5A00D\"},Pluralsight:{title:\"Pluralsight\",slug:\"pluralsight\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Pluralsight icon</title><path d=\"M15.72 1.755C10.08-.301 3.811 2.625 1.771 8.25c-2.071 5.699.854 11.956 6.494 14.01 5.655 2.055 11.956-.87 14.01-6.51 2.057-5.67-.87-11.939-6.524-13.995h-.031zM12 24C5.4 24 0 18.6 0 12S5.4 0 12 0s12 5.4 12 12-5.4 12-12 12M8.926 5.805v12.391L19.68 12 8.926 5.805zm1.049 1.769L17.625 12l-7.65 4.426V7.574M6.449 7.155v9.689L14.85 12 6.449 7.155zm1.051 1.8L12.811 12 7.5 15.061V8.939\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.pluralsight.com/newsroom/brand-assets\",hex:\"F15B2A\"},Plurk:{title:\"Plurk\",slug:\"plurk\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Plurk icon</title><path d=\"M12.902 1.906a10.065 10.065 0 0 0-7.88 3.707 10.18 10.18 0 0 0-.283.357l.004-.003c.232-.196.473-.345.717-.445l.058-.023c.299-.112.602-.147.9-.088 1.44.289 2.19 2.609 1.675 5.183-.515 2.574-2.1 4.427-3.54 4.139-1.01-.202-1.678-1.405-1.812-2.992v-.005.052c-.003.132-.003.266 0 .4v.073l.002.059c.005.149.013.296.024.443.005.067.012.134.019.2a10.032 10.032 0 0 0 .961 3.443c.06.126.03.276-.078.363l-.277.226a.906.906 0 0 0-.29.97c0 .006.003.01.006.017a.955.955 0 0 0 .059.142l.05-.039.23-.174a.261.261 0 1 1 .316.416l-.245.186-.037.028 1.177 1.448a.91.91 0 0 0 1.275.131l.258-.21a.298.298 0 0 1 .374 0 10.05 10.05 0 0 0 6.527 2.181 10.042 10.042 0 0 0 5.572-1.855.298.298 0 0 1 .38.025l.163.156a.909.909 0 0 0 1.179.059l-.004-.004-.21-.197a.262.262 0 0 1 .358-.382l.225.21 1.26-1.326a.91.91 0 0 0-.033-1.282l-.263-.25a.297.297 0 0 1-.054-.36 10.06 10.06 0 0 0 1.103-6.671c.301-.278.853-.824 1.069-1.292.231-.502.29-1.02-.323-.792-.476.177-.842.291-1.286.19-1.417-3.593-4.847-6.193-8.851-6.4a9.71 9.71 0 0 0-.473-.014zM2.265 6.247a1.228 1.228 0 0 0-1.082 1.764 1.23 1.23 0 1 0 .754 2.236c.177-.124.306-.289.395-.47.186.342.46.627.778.823a5.59 5.59 0 0 0 .017.6c.102 1.228.62 2.16 1.401 2.316 1.114.223 2.34-1.21 2.738-3.2.399-1.99-.181-3.784-1.295-4.007-.434-.087-.885.08-1.298.432-.45.383-.854.988-1.14 1.73-.01-.002-.02-.003-.03-.007-.14-.04-.215-.131-.312-.152a1.23 1.23 0 0 0-.926-2.065zm2.862 1.244c.054 0 .107.004.16.015.726.143 1.104 1.312.844 2.608-.259 1.298-1.058 2.23-1.783 2.085-.493-.098-.824-.67-.905-1.433.181.07.37.113.56.122.527.024.871-.154 1.14-.513.346-.465.084-1.753-.374-1.92-.356-.13-.567.027-.884.05.16-.298.351-.544.557-.72.219-.185.453-.292.686-.295z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.plurk.com/brandInfo\",hex:\"FF574D\"},Pocket:{title:\"Pocket\",slug:\"pocket\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Pocket icon</title><path d=\"M18.813 10.259l-5.646 5.419c-.32.305-.73.458-1.141.458-.41 0-.821-.153-1.141-.458l-5.646-5.419c-.657-.628-.677-1.671-.049-2.326.63-.657 1.671-.679 2.325-.05l4.511 4.322 4.517-4.322c.66-.631 1.697-.607 2.326.049.631.645.615 1.695-.045 2.326l-.011.001zm5.083-7.546c-.299-.858-1.125-1.436-2.041-1.436H2.179c-.9 0-1.717.564-2.037 1.405-.094.25-.142.511-.142.774v7.245l.084 1.441c.348 3.277 2.047 6.142 4.682 8.139.045.036.094.07.143.105l.03.023c1.411 1.03 2.989 1.728 4.694 2.072.786.158 1.591.24 2.389.24.739 0 1.481-.067 2.209-.204.088-.029.176-.045.264-.06.023 0 .049-.015.074-.029 1.633-.36 3.148-1.036 4.508-2.025l.029-.031.135-.105c2.627-1.995 4.324-4.862 4.686-8.148L24 10.678V3.445c0-.251-.031-.5-.121-.742l.017.01z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://getpocket.com/blog/press/\",hex:\"EF3F56\"},\"Pocket Casts\":{title:\"Pocket Casts\",slug:\"pocketcasts\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Pocket Casts icon</title><path d=\"M12,0C5.372,0,0,5.372,0,12c0,6.628,5.372,12,12,12c6.628,0,12-5.372,12-12 C24,5.372,18.628,0,12,0z M15.564,12c0-1.968-1.596-3.564-3.564-3.564c-1.968,0-3.564,1.595-3.564,3.564 c0,1.968,1.595,3.564,3.564,3.564V17.6c-3.093,0-5.6-2.507-5.6-5.6c0-3.093,2.507-5.6,5.6-5.6c3.093,0,5.6,2.507,5.6,5.6H15.564z M19,12c0-3.866-3.134-7-7-7c-3.866,0-7,3.134-7,7c0,3.866,3.134,7,7,7v2.333c-5.155,0-9.333-4.179-9.333-9.333 c0-5.155,4.179-9.333,9.333-9.333c5.155,0,9.333,4.179,9.333,9.333H19z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://blog.pocketcasts.com/press/\",hex:\"F43E37\"},PostgreSQL:{title:\"PostgreSQL\",slug:\"postgresql\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>PostgreSQL icon</title><path d=\"M17.128 0a10.134 10.134 0 0 0-2.755.403l-.063.02A10.922 10.922 0 0 0 12.6.258C11.422.238 10.41.524 9.594 1 8.79.721 7.122.24 5.364.336 4.14.403 2.804.775 1.814 1.82.827 2.865.305 4.482.415 6.682c.03.607.203 1.597.49 2.879s.69 2.783 1.193 4.152c.503 1.37 1.054 2.6 1.915 3.436.43.419 1.022.771 1.72.742.49-.02.933-.235 1.315-.552.186.245.385.352.566.451.228.125.45.21.68.266.413.103 1.12.241 1.948.1.282-.047.579-.139.875-.27.011.33.024.653.037.98.041 1.036.067 1.993.378 2.832.05.137.187.843.727 1.466.54.624 1.598 1.013 2.803.755.85-.182 1.931-.51 2.649-1.532.71-1.01 1.03-2.459 1.093-4.809.016-.127.035-.235.055-.336l.169.015h.02c.907.041 1.891-.088 2.713-.47.728-.337 1.279-.678 1.68-1.283.1-.15.21-.331.24-.643s-.149-.8-.446-1.025c-.595-.452-.969-.28-1.37-.197a6.27 6.27 0 0 1-1.202.146c1.156-1.947 1.985-4.015 2.458-5.845.28-1.08.437-2.076.45-2.947.013-.871-.058-1.642-.58-2.309C21.36.6 19.067.024 17.293.004c-.055-.001-.11-.002-.165-.001zm-.047.64c1.678-.016 3.822.455 5.361 2.422.346.442.449 1.088.437 1.884-.013.795-.16 1.747-.429 2.79-.522 2.02-1.508 4.375-2.897 6.488a.756.756 0 0 0 .158.086c.29.12.951.223 2.27-.048.332-.07.575-.117.827.075a.52.52 0 0 1 .183.425.704.704 0 0 1-.13.336c-.255.383-.758.746-1.403 1.045-.571.266-1.39.405-2.116.413-.364.004-.7-.024-.985-.113l-.018-.007c-.11 1.06-.363 3.153-.528 4.108-.132.77-.363 1.382-.804 1.84-.44.458-1.063.734-1.901.914-1.038.223-1.795-.017-2.283-.428-.487-.41-.71-.954-.844-1.287-.092-.23-.14-.528-.186-.926-.046-.398-.08-.885-.103-1.434a51.426 51.426 0 0 1-.03-2.523 3.061 3.061 0 0 1-1.552.76c-.689.117-1.304.002-1.671-.09a2.276 2.276 0 0 1-.52-.201c-.17-.091-.332-.194-.44-.397a.56.56 0 0 1-.057-.381.61.61 0 0 1 .218-.331c.198-.161.46-.251.855-.333.719-.148.97-.249 1.123-.37.13-.104.277-.314.537-.622a1.16 1.16 0 0 1-.003-.041 2.96 2.96 0 0 1-1.33-.358c-.15.158-.916.968-1.85 2.092-.393.47-.827.74-1.285.759-.458.02-.872-.211-1.224-.552-.703-.683-1.264-1.858-1.753-3.186-.488-1.328-.885-2.807-1.167-4.067-.283-1.26-.45-2.276-.474-2.766-.105-2.082.382-3.485 1.217-4.37.836-.885 1.982-1.22 3.099-1.284 2.005-.115 3.909.584 4.294.734.742-.504 1.698-.818 2.892-.798a7.39 7.39 0 0 1 1.681.218l.02-.009a6.854 6.854 0 0 1 .739-.214A9.626 9.626 0 0 1 17.08.642zm.152.67h-.146a8.74 8.74 0 0 0-1.704.192c1.246.552 2.187 1.402 2.85 2.25a8.44 8.44 0 0 1 1.132 1.92c.11.264.184.487.226.66.021.087.035.16.04.236.002.038.004.077-.012.144 0 .003-.005.01-.006.013.03.876-.187 1.47-.213 2.306-.02.606.135 1.318.173 2.095.036.73-.052 1.532-.526 2.319.04.048.076.096.114.144 1.254-1.975 2.158-4.16 2.64-6.023.258-1.003.395-1.912.407-2.632.01-.72-.124-1.242-.295-1.46-1.342-1.716-3.158-2.153-4.68-2.165zm-4.79.256c-1.182.003-2.03.36-2.673.895-.663.553-1.108 1.31-1.4 2.085-.347.92-.466 1.81-.513 2.414l.013-.008c.357-.2.826-.4 1.328-.516.502-.115 1.043-.151 1.533.039s.895.637 1.042 1.315c.704 3.257-.219 4.468-.559 5.382a9.61 9.61 0 0 0-.331 1.013c.043-.01.086-.022.129-.026.24-.02.428.06.54.108.342.142.577.44.704.78.033.089.057.185.071.284a.336.336 0 0 1 .02.127 55.14 55.14 0 0 0 .013 3.738c.023.538.057 1.012.1 1.386.043.373.104.657.143.753.128.32.315.739.653 1.024.338.284.823.474 1.709.284.768-.165 1.242-.394 1.559-.723.316-.329.505-.787.626-1.488.181-1.05.545-4.095.589-4.668-.02-.432.044-.764.182-1.017.142-.26.362-.419.552-.505.095-.043.184-.072.257-.093a5.956 5.956 0 0 0-.243-.325 4.456 4.456 0 0 1-.666-1.099 8.296 8.296 0 0 0-.257-.483c-.133-.24-.301-.54-.477-.877-.352-.675-.735-1.493-.934-2.29-.198-.796-.227-1.62.281-2.201.45-.516 1.24-.73 2.426-.61-.035-.105-.056-.192-.115-.332a7.817 7.817 0 0 0-1.041-1.764c-1.005-1.285-2.632-2.559-5.146-2.6h-.115zm-6.642.052c-.127 0-.254.004-.38.011-1.01.058-1.965.351-2.648 1.075-.684.724-1.134 1.911-1.036 3.876.019.372.181 1.414.459 2.652.277 1.238.67 2.695 1.142 3.982.473 1.287 1.046 2.407 1.59 2.937.274.265.512.372.728.363.217-.01.478-.135.797-.518a43.244 43.244 0 0 1 1.81-2.048 3.497 3.497 0 0 1-1.167-3.15c.103-.739.117-1.43.105-1.976-.012-.532-.05-.886-.05-1.107a.336.336 0 0 1 0-.019v-.005l-.001-.006v-.001a9.893 9.893 0 0 1 .592-3.376c.28-.744.697-1.5 1.322-2.112-.614-.202-1.704-.51-2.884-.568a7.603 7.603 0 0 0-.38-.01zM18.199 6.9c-.679.009-1.06.184-1.26.413-.283.325-.31.895-.134 1.597.175.703.537 1.489.877 2.142.17.327.335.621.468.86.134.24.232.41.292.555.055.134.116.252.178.362.263-.555.31-1.1.283-1.668-.035-.703-.198-1.422-.174-2.15.027-.851.195-1.405.21-2.063a5.793 5.793 0 0 0-.74-.048zm-8.234.115a2.82 2.82 0 0 0-.616.074 4.665 4.665 0 0 0-1.153.449 2.417 2.417 0 0 0-.349.228l-.022.02c.006.146.035.5.047 1.021.012.57-.002 1.297-.112 2.084-.239 1.71 1.002 3.126 2.46 3.128.085-.351.225-.707.365-1.082.406-1.094 1.205-1.892.532-5.006-.11-.51-.328-.716-.628-.832a1.474 1.474 0 0 0-.524-.084zm7.917.204h.05c.066.002.127.009.18.022.054.012.1.03.138.055a.164.164 0 0 1 .075.11l-.001.008h.001-.001a.24.24 0 0 1-.035.135.668.668 0 0 1-.11.15.677.677 0 0 1-.386.212.59.59 0 0 1-.41-.103.608.608 0 0 1-.13-.118.26.26 0 0 1-.063-.127.17.17 0 0 1 .042-.128.384.384 0 0 1 .117-.09c.096-.054.226-.094.373-.116.055-.008.109-.012.16-.013zm-7.82.168c.053 0 .109.005.166.013.153.021.289.062.393.122a.446.446 0 0 1 .133.106.223.223 0 0 1 .054.17.302.302 0 0 1-.075.154.649.649 0 0 1-.143.13.64.64 0 0 1-.448.113.728.728 0 0 1-.42-.228.71.71 0 0 1-.118-.164.28.28 0 0 1-.041-.177c.015-.108.104-.164.191-.195a.866.866 0 0 1 .307-.04zm9.06 7.343l-.003.001c-.147.053-.268.075-.37.12a.452.452 0 0 0-.239.214c-.063.115-.117.319-.101.666a.51.51 0 0 0 .148.07c.171.052.458.086.778.081.638-.007 1.423-.156 1.84-.35a3.95 3.95 0 0 0 .943-.615h-.001c-1.393.288-2.18.211-2.663.012a1.315 1.315 0 0 1-.332-.2zm-8.031.094h-.021c-.053.005-.13.023-.279.188-.348.39-.47.635-.757.864-.287.228-.66.35-1.405.503-.236.048-.371.101-.461.144.029.024.026.03.07.053.109.06.249.113.362.142.32.08.846.173 1.395.08.549-.094 1.12-.357 1.607-1.04.084-.118.093-.292.024-.479-.07-.187-.223-.348-.331-.393a.653.653 0 0 0-.204-.06z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://wiki.postgresql.org/wiki/Logo\",hex:\"336791\"},Postman:{title:\"Postman\",slug:\"postman\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Postman icon</title><path d=\"M13.527.099C6.955-.744.942 3.9.099 10.473c-.843 6.572 3.8 12.584 10.373 13.428 6.573.843 12.587-3.801 13.428-10.374C24.744 6.955 20.101.943 13.527.099zm2.471 7.485a.855.855 0 0 0-.593.25l-4.453 4.453-.307-.307-.643-.643c4.389-4.376 5.18-4.418 5.996-3.753zm-4.863 4.861l4.44-4.44a.62.62 0 1 1 .847.903l-4.699 4.125-.588-.588zm.33.694l-1.1.238a.06.06 0 0 1-.067-.032.06.06 0 0 1 .01-.073l.645-.645.512.512zm-2.803-.459l1.172-1.172.879.878-1.979.426a.074.074 0 0 1-.085-.039.072.072 0 0 1 .013-.093zm-3.646 6.058a.076.076 0 0 1-.069-.083.077.077 0 0 1 .022-.046h.002l.946-.946 1.222 1.222-2.123-.147zm2.425-1.256a.228.228 0 0 0-.117.256l.203.865a.125.125 0 0 1-.211.117h-.003l-.934-.934-.294-.295 3.762-3.758 1.82-.393.874.874c-1.255 1.102-2.971 2.201-5.1 3.268zm5.279-3.428h-.002l-.839-.839 4.699-4.125a.952.952 0 0 0 .119-.127c-.148 1.345-2.029 3.245-3.977 5.091zm3.657-6.46l-.003-.002a1.822 1.822 0 0 1 2.459-2.684l-1.61 1.613a.119.119 0 0 0 0 .169l1.247 1.247a1.817 1.817 0 0 1-2.093-.343zm2.578 0a1.714 1.714 0 0 1-.271.218h-.001l-1.207-1.207 1.533-1.533c.661.72.637 1.832-.054 2.522zM18.855 6.05a.143.143 0 0 0-.053.157.416.416 0 0 1-.053.45.14.14 0 0 0 .023.197.141.141 0 0 0 .084.03.14.14 0 0 0 .106-.05.691.691 0 0 0 .087-.751.138.138 0 0 0-.194-.033z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.getpostman.com/resources/media-assets/\",hex:\"FF6C37\"},Postwoman:{title:\"Postwoman\",slug:\"postwoman\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Postwoman icon</title><path d=\"M2.534 9.287C2.534 15.46 7.56 24 12 24c4.18 0 9.466-8.539 9.466-14.713C21.467 3.113 17.228 0 12 0 6.772 0 2.534 3.113 2.534 9.287zm11.926 4.565a4.649 4.649 0 014.257-1.261 4.649 4.649 0 01-1.262 4.256 4.649 4.649 0 01-4.257 1.262 4.649 4.649 0 011.262-4.257zm-9.177-1.261a4.649 4.649 0 014.258 1.261 4.649 4.649 0 011.261 4.257 4.649 4.649 0 01-4.257-1.262 4.649 4.649 0 01-1.262-4.256z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/liyasthomas/postwoman\",hex:\"50FA7B\"},PowerShell:{title:\"PowerShell\",slug:\"powershell\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>PowerShell icon</title><path d=\"M23.181 3.077c.568 0 .923.463.792 1.035l-3.659 15.981c-.13.572-.697 1.035-1.265 1.035H.819c-.568 0-.923-.463-.792-1.035L3.686 4.112c.13-.572.697-1.035 1.265-1.035h18.23zm-8.375 9.345c.251-.394.227-.905-.09-1.243L9.122 5.228c-.38-.405-1.037-.407-1.466-.004-.429.403-.468 1.057-.088 1.461l4.662 4.96v.11l-7.42 5.373c-.45.327-.533.977-.187 1.453.346.476.991.597 1.44.27l8.229-5.909c.28-.197.438-.366.514-.52zm-2.796 4.399a.928.928 0 0 0-.934.923c0 .51.418.923.934.923h4.433a.928.928 0 0 0 .934-.923.928.928 0 0 0-.934-.923H12.01z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/PowerShell/PowerShell\",hex:\"5391FE\"},PrestaShop:{title:\"PrestaShop\",slug:\"prestashop\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>PrestaShop icon</title><path d=\"M11.558 1.034C5.174 1.034 0 6.21 0 12.592c0 1.258.201 2.47.574 3.597l.002-.007a12.415 12.415 0 01.53-1.787l.011-.03c.085-.222.179-.442.277-.66l.084-.181c.08-.171.165-.34.253-.507.036-.068.07-.136.108-.203.02-.038.044-.073.064-.11.094-.166.19-.332.29-.493l.075-.114c.125-.195.256-.386.393-.573l.035-.05c.144-.193.295-.38.451-.563l.1-.118c.155-.177.315-.35.481-.517l.099-.097a10.321 10.321 0 01.546-.503c.74-2.48 3.005-4.285 5.686-4.285 1.079 0 2.152.31 3.071.873a6.017 6.017 0 012.211 2.407l.007.015.04.074v.003l.004.002a9.925 9.925 0 011.567 1.198c.04.037.081.071.12.109.002 0 .006.005.007.006l-.002-.006-.001-.004v-.003l.042-.084c.377-2.384 1.43-4.102 2.67-4.102.934 0 1.762.975 2.276 2.476l.005.016.001.002c.145.158.287.331.424.521l.007.01.021.067-.02-.078c-1.542-4.569-5.863-7.857-10.952-7.857zM9.927 5.477C7.586 5.52 5.34 7.132 4.574 9.365l-.012.034a10.14 10.14 0 011.315-.895c2.806-1.656 6.479-1.646 9.278.016-.895-1.653-2.631-2.819-4.5-3.004a5.14 5.14 0 00-.728-.039zm9.834.5a1.36 1.36 0 00-.39.067c-1.265.562-1.719 2.073-2.031 3.303l-.016.072c.365-.62.808-1.215 1.396-1.642.835-.687 2.105-.655 2.916.053.308.326.141.008.031-.22-.342-.75-1.025-1.653-1.906-1.634zM21.67 7.98zm-9.32.335l-1.07 3.27-.002.005-.006.002-4.498 1.112h-.009l4.456 1.087c.105.11.227.205.36.28h.002c.042.024.085.045.129.065l.01.005c.041.018.083.033.126.047l.021.008c.04.013.08.023.12.032l.033.008a1.677 1.677 0 00.318.033 1.546 1.546 0 001.43-.948c.08-.186.123-.39.123-.604v-.011l-.001-.012c-.001-.054-.004-.107-.01-.16l-.001-.002a1.506 1.506 0 00-.026-.153l-.001-.004a1.511 1.511 0 00-.096-.288v-.003a1.521 1.521 0 00-.348-.49v-.003zm3.148.626c.048 1.008.036 2.046-.1 3.057-.17 2.018-1.19 3.798-1.972 5.616l-.03.08-.035.086c1.51-1.522 3.17-3.04 3.969-5.082.383-.636.118-1.342-.115-1.976-.17-.877-1.069-1.278-1.717-1.781zm6.172.572l-.588 2.688a1.764 1.764 0 00-.047.2c-.002.02-.007.04-.01.06a1.76 1.76 0 00-.016.222l-.002.031h.003c0 .628.297 1.136.663 1.137a.41.41 0 00.182-.045l.027-.015a.537.537 0 00.07-.047c.013-.01.024-.022.036-.033a.752.752 0 00.137-.168l.03-.054a1.23 1.23 0 00.052-.108l.017-.04c.02-.053.038-.108.053-.166l.002-.002.001-.003.404-.451-.407-.456v.001l-.02-.063zm-4.381.856c.69 1.716.85 3.707.091 5.43-.49 1.368-1.587 2.463-1.874 3.905.73.115 1.468.176 2.21.186 2.166.029 4.332-.42 6.284-1.365-2.04-2.869-4.121-5.755-6.711-8.156zm-4.948.977a.583.583 0 110 1.166.583.583 0 010-1.166zm9.352.37c.138 0 .249.19.249.426s-.111.426-.249.426c-.137 0-.248-.19-.248-.426 0-.235.11-.426.248-.426zm-4.044.184c-.016.112-.033.209-.05.29l-.006.023c-.01.05-.022.094-.033.128-.48 1.417-1.275 2.52-2.36 3.697-.147.16-.301.32-.459.484a58.883 58.883 0 01-1.196 1.205c-.112.11-.259.261-.425.436-.103.287-.22.61-.318.95-.044-.016-.086-.031-.131-.049-2.108-.815-3.519-1.904-3.519-1.904s1.086 1.414 2.915 2.74c.177.129.351.24.522.339-.075 1.194.452 2.34 2.83 2.682a4.81 4.81 0 001.228.008l-.01-.029a.062.062 0 00-.004-.01s-.167-.133-.379-.377a3.842 3.842 0 01-.584-.897 3.382 3.382 0 01-.266-.862 3.176 3.176 0 01-.006-.972c.017-.12.04-.241.072-.366.093-.374.255-.772.507-1.192l.002-.003.241-.404c1.103-1.86 1.797-3.275 1.506-5.441a8.943 8.943 0 00-.078-.476zm4.668.576l.001.008-.001-.008zm.013.203l.003.036v.01c0 .013-.003.025-.003.038 0-.014.003-.028.003-.043 0-.014-.002-.026-.003-.04zm-.012.275v.001l-.002.01-.002.014.004-.025zm1.353 5.928c-2.553 1.138-5.44 1.44-8.192 1.007-.14 1.108.384 2.218 1.214 2.93l.012.01c2.703-.433 4.975-2.168 6.966-3.946z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.prestashop.com/en/media-kit\",hex:\"DF0067\"},Prettier:{title:\"Prettier\",slug:\"prettier\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Prettier icon</title><path d=\"M8.571 23.429A.571.571 0 0 1 8 24H2.286a.571.571 0 0 1 0-1.143H8c.316 0 .571.256.571.572zM8 20.57H6.857a.571.571 0 0 0 0 1.143H8a.571.571 0 0 0 0-1.143zm-5.714 1.143H4.57a.571.571 0 0 0 0-1.143H2.286a.571.571 0 0 0 0 1.143zM8 18.286H2.286a.571.571 0 0 0 0 1.143H8a.571.571 0 0 0 0-1.143zM16 16H5.714a.571.571 0 0 0 0 1.143H16A.571.571 0 0 0 16 16zM2.286 17.143h1.143a.571.571 0 0 0 0-1.143H2.286a.571.571 0 0 0 0 1.143zm17.143-3.429H16a.571.571 0 0 0 0 1.143h3.429a.571.571 0 0 0 0-1.143zM9.143 14.857h4.571a.571.571 0 0 0 0-1.143H9.143a.571.571 0 0 0 0 1.143zm-6.857 0h4.571a.571.571 0 0 0 0-1.143H2.286a.571.571 0 0 0 0 1.143zM20.57 11.43H11.43a.571.571 0 0 0 0 1.142h9.142a.571.571 0 0 0 0-1.142zM9.714 12a.571.571 0 0 0-.571-.571H5.714a.571.571 0 0 0 0 1.142h3.429A.571.571 0 0 0 9.714 12zm-7.428.571h1.143a.571.571 0 0 0 0-1.142H2.286a.571.571 0 0 0 0 1.142zm19.428-3.428H16a.571.571 0 0 0 0 1.143h5.714a.571.571 0 0 0 0-1.143zM2.286 10.286H8a.571.571 0 0 0 0-1.143H2.286a.571.571 0 0 0 0 1.143zm13.143-2.857c0 .315.255.571.571.571h5.714a.571.571 0 0 0 0-1.143H16a.571.571 0 0 0-.571.572zm-8.572-.572a.571.571 0 0 0 0 1.143H8a.571.571 0 0 0 0-1.143H6.857zM2.286 8H4.57a.571.571 0 0 0 0-1.143H2.286a.571.571 0 0 0 0 1.143zm16.571-2.857c0 .315.256.571.572.571h1.142a.571.571 0 0 0 0-1.143H19.43a.571.571 0 0 0-.572.572zm-1.143 0a.571.571 0 0 0-.571-.572H12.57a.571.571 0 0 0 0 1.143h4.572a.571.571 0 0 0 .571-.571zm-15.428.571h8a.571.571 0 0 0 0-1.143h-8a.571.571 0 0 0 0 1.143zm5.143-2.857c0 .316.255.572.571.572h11.429a.571.571 0 0 0 0-1.143H8a.571.571 0 0 0-.571.571zm-5.143.572h3.428a.571.571 0 0 0 0-1.143H2.286a.571.571 0 0 0 0 1.143zm0-2.286H16A.571.571 0 0 0 16 0H2.286a.571.571 0 0 0 0 1.143z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/prettier/prettier-logo/tree/master/images\",hex:\"F7B93E\"},Prismic:{title:\"Prismic\",slug:\"prismic\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Prismic icon</title><path d=\"M7.83 3.866H6.785a2.915 2.915 0 0 0-2.92 2.92v8.553a7.912 7.912 0 0 0 3.13 1.043 1.965 1.965 0 0 1-.21-.835V8.663c-.104-.104-.104-2.607 1.044-4.797zM20.24 7.829V6.786a2.915 2.915 0 0 0-2.92-2.92H8.872A7.912 7.912 0 0 0 7.83 6.995c.21-.209.522-.209.835-.209h6.78c.104 0 2.607 0 4.797 1.043zm-4.067 12.412h1.043a2.915 2.915 0 0 0 2.92-2.92V8.871a7.912 7.912 0 0 0-3.13-1.043c.21.209.21.521.21.834v6.78c0 .104 0 2.607-1.043 4.798zM3.761 16.173v1.043a2.915 2.915 0 0 0 2.92 2.92h8.448a7.912 7.912 0 0 0 1.043-3.129c-.208.209-.521.209-.834.209H8.56c-.104 0-2.607 0-4.797-1.043zM13.253.007h-7.51C2.614.007.007 2.614.007 5.743c0 0 .209 5.528 2.399 8.135.104.209.313.313.521.522V6.682a3.85 3.85 0 0 1 3.86-3.86h1.668c.313-.417.626-.73.939-1.042.939-.73 2.399-1.356 3.86-1.773zM23.996 13.253v-7.51c0-3.129-2.607-5.736-5.736-5.736 0 0-5.528.208-8.136 2.398a1.257 1.257 0 0 0-.521.522h7.718a3.85 3.85 0 0 1 3.859 3.859v1.669c.417.313.73.626 1.043.939.73.938 1.356 2.398 1.773 3.859zM10.75 23.995h7.51c3.128 0 5.736-2.607 5.736-5.736 0 0-.209-5.528-2.399-8.135-.104-.209-.313-.313-.521-.522v7.718a3.85 3.85 0 0 1-3.86 3.86h-1.668c-.313.417-.626.73-.939 1.042-.939.73-2.399 1.356-3.86 1.773zM.007 10.75v7.509c0 3.129 2.607 5.736 5.736 5.736 0 0 5.528-.208 8.136-2.398.208-.105.313-.313.521-.522H6.786a3.85 3.85 0 0 1-3.859-3.859v-1.669c-.417-.313-.73-.626-1.043-.939C1.05 13.67.424 12.21.007 10.75z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://prismic.io/\",hex:\"484A7A\"},Probot:{title:\"Probot\",slug:\"probot\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Probot icon</title><path d=\"M12 .04a1.743 1.743 0 0 0-.537 3.401l-.631 2.579H2.456A2.456 2.456 0 0 0 0 8.476v13.029a2.456 2.456 0 0 0 2.456 2.456h19.088c1.356 0 2.456-1.1 2.456-2.456V8.476c0-1.356-1.1-2.456-2.456-2.456h-8.403l-.616-2.575A1.743 1.743 0 0 0 11.999.04zM3.933 7.881h16.136c1.101 0 1.994.893 1.994 1.994v10.117a1.994 1.994 0 0 1-1.994 1.994H3.933a1.994 1.994 0 0 1-1.994-1.994V9.875c0-1.101.893-1.994 1.994-1.994zm3.254 2.312a4.575 4.575 0 1 0 0 9.15 4.575 4.575 0 0 0 0-9.15zm9.743 0a4.575 4.575 0 1 0 0 9.15 4.575 4.575 0 0 0 0-9.15zm-9.743 1.07a3.506 3.506 0 1 1 0 7.011 3.506 3.506 0 0 1 0-7.011zm9.743 0a3.506 3.506 0 1 1 0 7.011 3.506 3.506 0 0 1 0-7.011zm-9.743 1.663a1.843 1.843 0 1 0 0 3.686 1.843 1.843 0 0 0 0-3.686zm9.743 0a1.843 1.843 0 1 0 0 3.686 1.843 1.843 0 0 0 0-3.686zm-6.927 6.5v2.159h.706v-2.159h-.706zm1.077 0v2.159h.705v-2.159h-.705zm1.076 0v2.159h.706v-2.159h-.706zm1.077 0v2.159h.706v-2.159h-.706zm1.077.03v2.1a1.08 1.08 0 0 0 .829-1.049v-.001c0-.51-.354-.937-.829-1.05zm-4.678.028a1.08 1.08 0 0 0-.731 1.021v.001c0 .474.306.876.731 1.021v-2.043z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/probot/probot\",hex:\"00B0D8\"},ProcessWire:{title:\"ProcessWire\",slug:\"processwire\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>ProcessWire icon</title><path d=\"M21.939 5.27C21.211 4.183 20 2.941 18.784 2.137 16.258.407 13.332-.207 10.744.061c-2.699.291-5.01 1.308-6.91 3.004C2.074 4.637.912 6.559.4 8.392c-.518 1.833-.449 3.53-.264 4.808.195 1.297.841 2.929.841 2.929.132.313.315.44.41.493.472.258 1.247.031 1.842-.637.03-.041.046-.098.03-.146-.166-.639-.226-1.12-.285-1.492-.135-.736-.195-1.969-.105-3.109.045-.617.165-1.277.375-1.969.406-1.367 1.262-2.794 2.6-3.98 1.441-1.277 3.289-2.066 5.046-2.27.616-.074 1.788-.145 3.199.203.301.075 1.593.412 2.975 1.348 1.006.684 1.816 1.528 2.374 2.363.568.797 1.185 2.141 1.366 3.125.256 1.12.256 2.307.074 3.463-.225 1.158-.631 2.284-1.262 3.275-.435.768-1.337 1.783-2.403 2.545-.961.676-2.058 1.164-3.184 1.434-.57.135-1.142.221-1.728.24-.521.016-1.212 0-1.697-.082-.721-.115-.871-.299-1.036-.549 0 0-.115-.18-.147-.662.011-4.405.009-3.229.009-5.516 0-.646-.021-1.232-.015-1.764.03-.873.104-1.473.728-2.123.451-.479 1.082-.768 1.777-.768.211 0 .938.01 1.577.541.685.572.8 1.354.827 1.563.156 1.223-.652 2.134-.962 2.365-.384.288-.729.428-.962.51-.496.166-1.041.214-1.531.182-.075-.005-.143.044-.158.119l-.165.856c-.161.65.2.888.41.972.671.207 1.266.293 1.971.24 1.081-.076 2.147-.502 3.052-1.346.77-.732 1.209-1.635 1.359-2.645.15-1.121-.045-2.328-.556-3.35-.562-1.127-1.532-2.068-2.81-2.583-1.291-.508-2.318-.526-3.642-.188l-.015.005c-.86.296-1.596.661-2.362 1.452-.525.546-.955 1.207-1.217 1.953-.26.752-.33 1.313-.342 2.185-.016.646.015 1.246.015 1.808v3.701c0 1.184-.04 1.389 0 1.998.022.404.078.861.255 1.352.182.541.564 1.096.826 1.352.367.391.834.705 1.293.9 1.051.467 2.478.541 3.635.496.766-.029 1.536-.135 2.291-.314 1.51-.359 2.96-1.012 4.235-1.918 1.367-.963 2.555-2.277 3.211-3.393.841-1.326 1.385-2.814 1.668-4.343.255-1.532.243-3.103-.099-4.612-.27-1.4-.991-2.936-1.823-4.176l.038.037z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/processwire\",hex:\"EF145F\"},\"Product Hunt\":{title:\"Product Hunt\",slug:\"producthunt\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Product Hunt icon</title><path d=\"M13.604 8.4h-3.405V12h3.405c.995 0 1.801-.806 1.801-1.801 0-.993-.805-1.799-1.801-1.799zM12 0C5.372 0 0 5.372 0 12s5.372 12 12 12 12-5.372 12-12S18.628 0 12 0zm1.604 14.4h-3.405V18H7.801V6h5.804c2.319 0 4.2 1.88 4.2 4.199 0 2.321-1.881 4.201-4.201 4.201z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.producthunt.com/branding\",hex:\"DA552F\"},Prometheus:{title:\"Prometheus\",slug:\"prometheus\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Prometheus icon</title><path d=\"M12 0C5.373 0 0 5.372 0 12c0 6.627 5.373 12 12 12s12-5.373 12-12c0-6.628-5.373-12-12-12zm0 22.46c-1.885 0-3.414-1.26-3.414-2.814h6.828c0 1.553-1.528 2.813-3.414 2.813zm5.64-3.745H6.36v-2.046h11.28v2.046zm-.04-3.098H6.391c-.037-.043-.075-.086-.111-.13-1.155-1.401-1.427-2.133-1.69-2.879-.005-.025 1.4.287 2.395.511 0 0 .513.119 1.262.255-.72-.843-1.147-1.915-1.147-3.01 0-2.406 1.845-4.508 1.18-6.207.648.053 1.34 1.367 1.387 3.422.689-.951.977-2.69.977-3.755 0-1.103.727-2.385 1.454-2.429-.648 1.069.168 1.984.894 4.256.272.854.237 2.29.447 3.201.07-1.892.395-4.652 1.595-5.605-.529 1.2.079 2.702.494 3.424.671 1.164 1.078 2.047 1.078 3.716a4.642 4.642 0 01-1.11 2.996c.792-.149 1.34-.283 1.34-.283l2.573-.502s-.374 1.538-1.81 3.019z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://prometheus.io/\",hex:\"E6522C\"},\"Proto.io\":{title:\"Proto.io\",slug:\"proto-dot-io\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Proto.io icon</title><path d=\"M12 11.997c-.728 0-1.316-.59-1.316-1.317S11.272 9.363 12 9.363s1.316.589 1.316 1.316-.588 1.318-1.316 1.318zm2.916-.021c0-2.828-1.109-5.397-2.916-7.298-1.807 1.9-2.916 4.47-2.916 7.298 0 1.297.234 2.535.66 3.683-.618.9-1.074 2.16-1.275 3.616.639-.767 1.422-1.306 2.292-1.591.363.555.78 1.096 1.239 1.574.461-.494.876-1.02 1.239-1.59.87.271 1.653.826 2.29 1.576-.199-1.456-.655-2.716-1.275-3.615.427-1.155.66-2.385.66-3.69l.002.037zM12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10zm0-22C5.373 0 0 5.373 0 12s5.373 12 12 12 12-5.373 12-12S18.627 0 12 0z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://proto.io/en/presskit\",hex:\"34A7C1\"},ProtonMail:{title:\"ProtonMail\",slug:\"protonmail\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>ProtonMail icon</title><path d=\"M12 20.352s-1.096-.108-1.955-.705c-.86-.596-6.58-4.688-6.58-4.688v8.098S3.513 24 4.55 24h14.9c1.036 0 1.085-.942 1.085-.942v-8.1s-5.723 4.092-6.58 4.69c-.86.595-1.955.704-1.955.704zM12 .002S4.925-.23 3.465 7.624v5.35s.06.572 1.67 1.735c1.607 1.162 5.773 4.436 6.867 4.436 1.088 0 5.254-3.273 6.865-4.437 1.607-1.164 1.668-1.737 1.668-1.737v-5.35C19.075-.228 12 .004 12 .004zm4.846 10.536h-9.69V7.624C8.14 3.724 12 3.67 12 3.67s3.863.054 4.846 3.954v2.914z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://protonmail.com/media-kit\",hex:\"8B89CC\"},Proxmox:{title:\"Proxmox\",slug:\"proxmox\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Proxmox icon</title><path d=\"M4.928 1.825c-1.09.553-1.09.64-.07 1.78 5.655 6.295 7.004 7.782 7.107 7.782.139.017 7.971-8.542 8.058-8.801.034-.07-.208-.312-.519-.536-.415-.312-.864-.433-1.712-.467-1.59-.104-2.144.242-4.115 2.455-.899 1.003-1.66 1.833-1.66 1.833-.017 0-.76-.813-1.642-1.798S8.473 2.1 8.127 1.91c-.796-.45-2.421-.484-3.2-.086zM1.297 4.367C.45 4.695 0 5.007 0 5.248c0 .121 1.331 1.678 2.94 3.459 1.625 1.78 2.939 3.268 2.939 3.302 0 .035-1.331 1.522-2.94 3.303C1.314 17.11.017 18.683.035 18.822c.086.467 1.504 1.055 2.541 1.055 1.678-.018 2.058-.312 5.603-4.202 1.78-1.954 3.233-3.614 3.233-3.666 0-.069-1.435-1.694-3.199-3.63-2.3-2.508-3.423-3.632-3.96-3.874-.812-.398-2.126-.467-2.956-.138zm18.467.12c-.502.26-1.764 1.505-3.943 3.891-1.763 1.937-3.199 3.562-3.199 3.631 0 .07 1.453 1.712 3.234 3.666 3.544 3.89 3.925 4.184 5.602 4.202 1.038 0 2.455-.588 2.542-1.055.017-.156-1.28-1.712-2.905-3.493-1.608-1.78-2.94-3.285-2.94-3.32 0-.034 1.332-1.539 2.94-3.32C22.72 6.91 24.017 5.352 24 5.214c-.087-.45-1.366-.968-2.473-1.038-.795-.034-1.21.035-1.763.312zM7.954 16.973c-2.144 2.369-3.908 4.374-3.943 4.46-.034.07.208.312.52.537.414.311.864.432 1.711.467 1.574.103 2.161-.26 4.15-2.508.864-.968 1.608-1.78 1.625-1.78s.761.812 1.643 1.798c2.023 2.248 2.559 2.576 4.132 2.49.848-.035 1.297-.156 1.712-.467.311-.225.553-.467.519-.536-.087-.26-7.92-8.819-8.058-8.801-.069 0-1.867 1.954-4.011 4.34z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.proxmox.com/en/news/media-kit\",hex:\"E57000\"},Publons:{title:\"Publons\",slug:\"publons\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Publons icon</title><path d=\"M0 0v24h24V0zm10.34 5.1c.083.014.114.096.156.158.054.354.1.71.154 1.065.157-.162.31-.328.49-.464.867-.666 2.05-.94 3.11-.63.72.21 1.315.72 1.756 1.316.187.263.348.547.45.855.198.582.225 1.206.198 1.815-.053 1.12-.433 2.244-1.169 3.103a4.029 4.029 0 01-2.616 1.41 4.418 4.418 0 01-2.188-.317c.019 1.01.032 2.018.038 3.028.021.465-.021.938.087 1.396.031.14.123.292.28.308.302.036.608.013.912.02.057 0 .13.037.126.101.004.186.009.373-.004.56-.046.092-.17.07-.255.072a44.358 44.358 0 00-4.437 0l-.07-.056c-.004-.22-.063-.467.034-.671.3-.035.606.02.904-.032.191-.048.268-.26.295-.434.04-.32.027-.642.042-.963V8.348c0-.156.006-.31-.008-.465a.888.888 0 00-.34-.656c-.203-.158-.438-.265-.662-.388-.082-.052-.181-.097-.229-.187a.985.985 0 01.008-.337c.056-.066.144-.086.219-.122.73-.315 1.456-.636 2.185-.952.17-.068.346-.144.533-.144zm1.99 1.146c-.053 0-.104 0-.156.013a2.12 2.12 0 00-1.493.86c.005 1.44 0 2.88.003 4.32.005.327.073.676.302.924.524.512 1.302.692 2.014.593.577-.096 1.037-.538 1.279-1.054.344-.736.395-1.571.335-2.371-.053-.655-.181-1.312-.449-1.915-.184-.407-.442-.793-.811-1.054a1.717 1.717 0 00-1.024-.313z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://publons.com/about/logos\",hex:\"336699\"},PureScript:{title:\"PureScript\",slug:\"purescript\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>PureScript icon</title><path d=\"M19.16 4.6l-1.24 1.24 3.97 3.97-3.97 3.97 1.24 1.24 4.58-4.6a.87.87 0 000-1.23L19.16 4.6zM6.95 6.74l1.87 1.75h8.23l-1.87-1.75H6.95zm-2.1 2.24l-4.6 4.6a.87.87 0 000 1.23l4.6 4.59 1.23-1.24-3.97-3.97 3.97-3.97-1.24-1.24zm3.97 2.14l-1.87 1.76h8.23l1.87-1.76H8.82zm-1.87 4.39l1.87 1.75h8.23l-1.87-1.75H6.95z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/purescript/logo\",hex:\"14161A\"},PyPI:{title:\"PyPI\",slug:\"pypi\",svg:'<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" role=\"img\"><title>PyPI icon</title><path d=\"M23.922 13.58v3.912L20.55 18.72l-.078.055.052.037 3.45-1.256.026-.036v-3.997l-.053-.036-.025.092z M23.621 5.618l-3.04 1.107v3.912l3.339-1.215V5.509zM23.92 13.457V9.544l-3.336 1.215v3.913zM20.47 14.71V10.8L17.17 12v3.913zM17.034 19.996v-3.912l-3.313 1.206v3.912zM17.17 16.057v3.868l3.314-1.206V14.85l-3.314 1.206zm2.093 1.882c-.367.134-.663-.074-.663-.463s.296-.814.663-.947c.365-.133.662.075.662.464s-.297.814-.662.946z M13.225 9.315l.365-.132-3.285-1.197-3.323 1.21.102.037 3.184 1.16zM20.507 10.664V6.751L17.17 7.965v3.913zM17.058 11.918V8.005l-3.302 1.202v3.912zM13.643 9.246l-3.336 1.215v3.913l3.336-1.215zM6.907 13.165l3.322 1.209v-3.913L6.907 9.252z M10.34 7.873l3.281 1.193V5.198l-3.28-1.193zM20.507 2.715L17.19 3.922v3.913l3.317-1.207zM16.95 3.903L13.724 2.73l-3.269 1.19 3.225 1.174zM15.365 4.606l-1.624.592v3.868l3.317-1.207V3.991l-1.693.615zm-.391 2.778c-.367.134-.662-.074-.662-.464s.295-.813.662-.946c.366-.133.663.074.663.464s-.297.813-.663.946z M10.229 18.41v-3.914l-3.322-1.209V17.2zM13.678 17.182v-3.913l-3.371 1.227v3.913z M13.756 17.154l3.3-1.2V12.04l-3.3 1.2zM13.678 21.217l-3.371 1.227v-3.912h-.078v3.912l-3.322-1.209v-3.913l-.053-.058-.025-.06-3.336-1.21v-3.948l.034.013 3.287 1.196.015-.078-3.261-1.187 3.26-1.187v-.109L3.876 9.62l-.307-.112 3.26-1.188v.877l.079-.055V6.769l3.257 1.185.058-.061L7.084 6.75l-.102-.037 3.24-1.179v-.083L6.854 6.677v.018l-.025.018v1.523L3.44 9.47v.02l-.025.017v4.007l-3.39 1.233v.019L0 14.784v3.995l.025.037 3.4 1.237.008-.006.007.01 3.4 1.238.008-.006.006.01 3.4 1.237.014-.009.012.01 3.45-1.256.026-.037-.078-.027zM3.493 9.563l3.257 1.185-3.257 1.187V9.562zM3.4 19.96L.078 18.752v-3.913l2.361.86.96.349v3.913zm.015-3.99L.335 14.85l-.182-.066 3.262-1.187v2.374zm3.399 5.231l-3.321-1.209v-3.912l3.321 1.209v3.912zM23.791 5.434l-3.21-1.17v2.338zM20.387 2.643l-3.24-1.18-3.27 1.19 3.247 1.182z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://pypi.org/\",hex:\"3775A9\"},Python:{title:\"Python\",slug:\"python\",svg:'<svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" role=\"img\"><title>Python icon</title><path d=\"M14.31.18l.9.2.73.26.59.3.45.32.34.34.25.34.16.33.1.3.04.26.02.2-.01.13V8.5l-.05.63-.13.55-.21.46-.26.38-.3.31-.33.25-.35.19-.35.14-.33.1-.3.07-.26.04-.21.02H8.83l-.69.05-.59.14-.5.22-.41.27-.33.32-.27.35-.2.36-.15.37-.1.35-.07.32-.04.27-.02.21v3.06H3.23l-.21-.03-.28-.07-.32-.12-.35-.18-.36-.26-.36-.36-.35-.46-.32-.59-.28-.73-.21-.88-.14-1.05L0 11.97l.06-1.22.16-1.04.24-.87.32-.71.36-.57.4-.44.42-.33.42-.24.4-.16.36-.1.32-.05.24-.01h.16l.06.01h8.16v-.83H6.24l-.01-2.75-.02-.37.05-.34.11-.31.17-.28.25-.26.31-.23.38-.2.44-.18.51-.15.58-.12.64-.1.71-.06.77-.04.84-.02 1.27.05 1.07.13zm-6.3 1.98l-.23.33-.08.41.08.41.23.34.33.22.41.09.41-.09.33-.22.23-.34.08-.41-.08-.41-.23-.33-.33-.22-.41-.09-.41.09-.33.22zM21.1 6.11l.28.06.32.12.35.18.36.27.36.35.35.47.32.59.28.73.21.88.14 1.04.05 1.23-.06 1.23-.16 1.04-.24.86-.32.71-.36.57-.4.45-.42.33-.42.24-.4.16-.36.09-.32.05-.24.02-.16-.01h-8.22v.82h5.84l.01 2.76.02.36-.05.34-.11.31-.17.29-.25.25-.31.24-.38.2-.44.17-.51.15-.58.13-.64.09-.71.07-.77.04-.84.01-1.27-.04-1.07-.14-.9-.2-.73-.25-.59-.3-.45-.33-.34-.34-.25-.34-.16-.33-.1-.3-.04-.25-.02-.2.01-.13v-5.34l.05-.64.13-.54.21-.46.26-.38.3-.32.33-.24.35-.2.35-.14.33-.1.3-.06.26-.04.21-.02.13-.01h5.84l.69-.05.59-.14.5-.21.41-.28.33-.32.27-.35.2-.36.15-.36.1-.35.07-.32.04-.28.02-.21V6.07h2.09l.14.01.21.03zm-6.47 14.25l-.23.33-.08.41.08.41.23.33.33.23.41.08.41-.08.33-.23.23-.33.08-.41-.08-.41-.23-.33-.33-.23-.41-.08-.41.08-.33.23z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.python.org/community/logos/\",hex:\"3776AB\"},PyTorch:{title:\"PyTorch\",slug:\"pytorch\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>PyTorch icon</title><path d=\"M12.005.04l-7.03 7.03a9.832 9.832 0 0 0 0 13.975 9.833 9.833 0 0 0 13.976 0c3.97-3.887 3.972-10.171.084-13.976l-1.738 1.737c2.895 2.895 2.895 7.608 0 10.503-2.894 2.894-7.608 2.894-10.503 0C3.9 16.414 3.9 11.7 6.794 8.806l4.632-4.631.58-.663zm3.556 3.886a1.323 1.323 0 0 0-1.323 1.323 1.323 1.323 0 0 0 1.323 1.323 1.323 1.323 0 0 0 1.323-1.323 1.323 1.323 0 0 0-1.323-1.323z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/pytorch/pytorch/tree/master/docs/source/_static/img\",hex:\"EE4C2C\"},PyUp:{title:\"PyUp\",slug:\"pyup\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>PyUp icon</title><path d=\"M12 0L1.608 6v12l3.984 2.3v-12L12 4.6l6.408 3.7v7.4L12 19.4l-2.95-1.705v4.602L12 24l10.392-6V6zm0 8.593l-2.95 1.703v3.408L12 15.407l2.95-1.703v-3.408z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://pyup.io/\",hex:\"9F55FF\"},QEMU:{title:\"QEMU\",slug:\"qemu\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>QEMU icon</title><path d=\"M12.003.064C5.376.064 0 5.407 0 12s5.376 11.936 12.003 11.936c2.169 0 4.2-.57 5.955-1.57l.624 1.57h4.841l-1.893-4.679A11.845 11.845 0 0024 12C24 5.407 18.63.064 12.003.064zM8.818 2.03c.398.339.324.198.86.134.61-.397.893.942 1.147.195.748.097 1.542.34 2.25.584a3.447 3.447 0 011.859 1.128l-.014.007.35.463c.045.08.082.164.12.248.142 1.205 1.48 1.19 2.377 1.625.767.272 1.69.686 1.785 1.611-.193-.042-.941-.921-1.53-1.007a3.919 3.919 0 01-1.094-.255L14.86 6.38v-.007a3.035 3.035 0 01-.309-.053v.013l-2.927-.362c.048.033.1.077.148.12l3 .585v-.007l.209.053.839.188c.166.016.334.043.47.067.856.236 1.868.194 2.571.792-.184.352-1.21.153-1.719.108-.062-.012-.131-.023-.194-.034l-.034-.007c-.696-.113-1.411-.12-2.081.088h-.007a3.193 3.193 0 00-.671.302c-.968.563-2.164.767-2.967 1.577-.787.847-.739 2.012-.604 3.095h.033v.275c.013.095.028.19.04.282.41 2.19 1.5 4.2 1.84 6.412.065.843.203 1.932.309 2.618-.306-.091-.475-1.462-.544-1.007a38.196 38.196 0 00-3.565-5.25c-.853-1.004-1.697-2.06-2.712-2.894-.685-.528-.468-1.55-.537-2.302-.23-.926-.094-1.848.06-2.773.313-.963.418-1.968.846-2.893.653-.581.669-1.63 1.303-2.135.094.058.157.085.2.1l.068.008h.007c.09-.095-.888-1.116.02-.712.035-.537.854-.128.866-.597zm3.847 2.182c-.323.009-.574.13-.645.335-.114.33.273.755.866.96.594.205 1.168.109 1.282-.221.114-.33-.272-.762-.866-.967a1.842 1.842 0 00-.637-.107z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://wiki.qemu.org/Logo\",hex:\"FF6600\"},Qgis:{title:\"Qgis\",slug:\"qgis\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Qgis icon</title><path d=\"M12.879 13.006v3.65l-3.004-3.048v-3.495h3.582l2.852 2.893h-3.43zm10.886 7.606V24h-3.654l-5.73-5.9v-3.55h3.354l6.03 6.062zm-10.828-1.448l3.372 3.371c-1.309.442-2.557.726-4.325.726C5.136 23.26 0 18.243 0 11.565 0 4.92 5.136 0 11.984 0 18.864 0 24 4.952 24 11.565c0 2.12-.523 4.076-1.457 5.759l-3.625-3.725a8.393 8.393 0 0 0 .24-2.005c0-4.291-3.148-7.527-7.1-7.527-3.954 0-7.248 3.236-7.248 7.527s3.33 7.6 7.247 7.6c.548 0 .661.017.88-.03z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.qgis.org/en/site/getinvolved/styleguide.html\",hex:\"589632\"},Qiita:{title:\"Qiita\",slug:\"qiita\",svg:'<svg xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" viewBox=\"0 0 24 24\"><title>Qiita icon</title><path d=\"M7.883 11.615c0-1.92-1.474-3.904-3.974-3.904C1.987 7.71 0 9.183 0 11.679c0 1.92 1.474 3.905 3.973 3.905.801 0 1.602-.256 2.275-.736L7.402 16l.513-.512-1.09-1.088c.673-.736 1.058-1.696 1.058-2.785zm-3.974-3.2c1.827 0 3.269 1.408 3.269 3.232 0 1.569-1.218 3.233-3.237 3.233-2.018 0-3.236-1.632-3.236-3.2 0-2.049 1.634-3.265 3.204-3.265zm5.864 1.568h.673v5.44h-.673zm.32-.736a.574.574 0 0 1-.576-.576c0-.32.256-.576.576-.576.32 0 .577.256.577.576 0 .32-.256.576-.577.576zm2.724 0a.574.574 0 0 1-.577-.576c0-.32.257-.576.577-.576.32 0 .577.256.577.576 0 .32-.256.576-.577.576zm-.32.736h.673v5.44h-.673zm4.71 5.537c-1.25 0-1.987-.96-1.987-1.92V8.479h.673v1.504h2.371v.672h-2.37v2.977c0 .608.48 1.248 1.313 1.248.224 0 .449-.064.64-.192l.065-.032.32.576-.064.032c-.288.16-.64.256-.961.256zm4.454.032c-1.827 0-2.916-1.44-2.916-2.848 0-1.825 1.442-2.913 2.852-2.913.737 0 1.314.256 1.73.736v-.544H24v5.44h-.673v-.607c-.384.48-.961.736-1.666.736zm-.064-5.089c-1.09 0-2.18.832-2.18 2.24 0 1.089.834 2.177 2.244 2.177.64 0 1.282-.288 1.698-.8v-2.817a2.29 2.29 0 0 0-1.762-.8z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.qiita.com\",hex:\"55C500\"},Qualcomm:{title:\"Qualcomm\",slug:\"qualcomm\",svg:'<svg xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" viewBox=\"0 0 24 24\"><title>Qualcomm icon</title><path d=\"M12 0C6.22933 0 1.5761 4.48645 1.5761 10.47394c0 6.00417 4.65323 10.47394 10.4239 10.47394.98402 0 1.93468-.13343 2.8353-.3836l1.13412 2.9187c.11675.31688.35025.51702.7672.51702h1.80125c.43364 0 .75052-.28353.55038-.83391l-1.46768-3.81932c2.88534-1.81793 4.80333-5.03683 4.80333-8.8895C22.4239 4.48644 17.77067 0 12 0m4.53648 16.5615l-1.31758-3.41904c-.11675-.28353-.35024-.55038-.85059-.55038h-1.71786c-.43363 0-.7672.28353-.56706.83391l1.73454 4.48645c-.56706.1501-1.18416.21682-1.81793.21682-4.2196 0-7.22168-3.31897-7.22168-7.65532C4.77832 6.1376 7.7804 2.81862 12 2.81862s7.22168 3.31898 7.22168 7.65532c0 2.5351-1.01737 4.70327-2.6852 6.08756\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.qualcomm.com\",hex:\"3253DC\"},Quantopian:{title:\"Quantopian\",slug:\"quantopian\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Quantopian icon</title><path d=\"M1.5 0h21c.828 0 1.5.672 1.5 1.5v21c0 .828-.672 1.5-1.5 1.5h-21C.672 24 0 23.328 0 22.5v-21C0 .672.672 0 1.5 0zM3 3v18h18V3H3zm2.4 10.8h2.4v4.8H5.4v-4.8zM9 9h2.4v9.6H9V9zm3.6 2.4H15v7.2h-2.4v-7.2zm3.599-6h2.4v13.2h-2.4V5.4z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.quantopian.com\",hex:\"C50000\"},Quantcast:{title:\"Quantcast\",slug:\"quantcast\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Quantcast icon</title><path d=\"M15.11 20.474A10.024 10.024 0 0 0 19.737 12c0-5.523-4.419-10-9.869-10S0 6.477 0 12s4.418 10 9.868 10H24v-1.526h-8.89z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://branding.quantcast.com/logouse/\",hex:\"1E262C\"},Quarkus:{title:\"Quarkus\",slug:\"quarkus\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Quarkus icon</title><path d=\"M12.788 15.963l3.872-2.236v-4.47l-3.872 2.235v4.471zm.37.214L16.66 18.2v-4.043l-3.502 2.021zm3.291-7.714V4.42L12.947 6.44l3.502 2.022zm-3.872-1.808L8.704 8.891l3.873 2.236 3.872-2.236-3.872-2.236zm-.371-.214L8.704 4.42v4.043l3.502-2.022zm4.825 3.03v4.042l3.501-2.021-3.501-2.022zm-4.665 6.492v-4.471L8.494 9.256v4.471l3.872 2.236zM8.123 9.47L4.62 11.492l3.502 2.021V9.47zm.37 4.686v4.043l3.502-2.022-3.501-2.021z M20.007.134H3.979C1.79.134 0 1.902 0 4.064v15.832c0 2.161 1.79 3.93 3.979 3.93h10.976l-2.962-7.108-2.15 4.488H3.98c-.72 0-1.327-.6-1.327-1.31V4.064c0-.71.608-1.31 1.327-1.31h16.028c.719 0 1.327.6 1.327 1.31v15.832c0 .71-.608 1.31-1.327 1.31h-3.478l1.092 2.62h2.386c2.188 0 3.979-1.769 3.979-3.93V4.064c0-2.162-1.79-3.93-3.979-3.93z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://design.jboss.org/quarkus/\",hex:\"4695EB\"},QuickTime:{title:\"QuickTime\",slug:\"quicktime\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>QuickTime icon</title><path d=\"M12 0A12 12 0 1 0 18.63 22L20.61 23.97H23.75L24 23.72V20.57L22 18.59A11.94 11.94 0 0 0 24 12A12 12 0 0 0 12 0M12 4.2A7.8 7.8 0 0 1 18.95 15.53L13.7 10.27A2.4 2.4 0 1 0 10.3 13.67L15.57 18.93A7.76 7.76 0 0 1 12 19.8A7.8 7.8 0 0 1 12 4.2Z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://support.apple.com/quicktime\",hex:\"1C69F0\"},Quip:{title:\"Quip\",slug:\"quip\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Quip icon</title><path d=\"M22.154 22.154H12a10.06 10.06 0 01-7.4-3.201C2.66 16.89 1.69 14.19 1.868 11.35c.315-5.091 4.39-9.168 9.482-9.484.22-.014.44-.02.657-.02A10.058 10.059 0 0118.952 4.6a10.058 10.059 0 013.202 7.4zm-1.938-18.9C17.778.963 14.59-.186 11.236.024 5.218.399.398 5.219.024 11.237c-.207 3.353.94 6.543 3.231 8.98A12.047 12.048 0 0012 24h11.077c.51 0 .923-.413.923-.922V12a12.047 12.048 0 00-3.784-8.745m-4.062 11.976H7.846a.923.923 0 000 1.846h8.308a.923.923 0 000-1.846M7.846 8.77h8.308a.923.923 0 000-1.847H7.846a.923.923 0 000 1.847m-2.769 2.308a.923.923 0 000 1.845h13.846a.923.923 0 000-1.846H5.077Z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://quip.com/\",hex:\"F27557\"},Quora:{title:\"Quora\",slug:\"quora\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Quora icon</title><path d=\"M12.738 18.701c-.831-1.635-1.805-3.287-3.708-3.287-.362 0-.727.061-1.059.209l-.646-1.289c.786-.678 2.058-1.214 3.693-1.214 2.544 0 3.851 1.229 4.888 2.792.613-1.335.904-3.14.904-5.375 0-5.582-1.744-8.447-5.822-8.447-4.018 0-5.757 2.865-5.757 8.447 0 5.553 1.739 8.389 5.757 8.389.64 0 1.22-.069 1.75-.225zm.996 1.947c-.881.237-1.817.366-2.743.366-5.352 0-10.59-4.269-10.59-10.478C.402 4.271 5.639 0 10.991 0c5.441 0 10.628 4.238 10.628 10.537 0 3.504-1.635 6.351-4.01 8.191.764 1.148 1.543 1.914 2.652 1.914 1.199 0 1.68-.915 1.77-1.649h1.557c.092.974-.402 5.007-4.766 5.007-2.652 0-4.047-1.528-5.096-3.328l.008-.024z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.quora.com\",hex:\"B92B27\"},Qwiklabs:{title:\"Qwiklabs\",slug:\"qwiklabs\",svg:'<svg xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" viewBox=\"0 0 24 24\"><title>Qwiklabs icon</title><path d=\"M14.346 18.205A6.464 6.464 0 0 0 12 5.72a6.462 6.462 0 0 0-2.346 12.485.69.69 0 0 0 .961-.623v-5.4a1.385 1.385 0 1 1 2.77 0v5.4a.692.692 0 0 0 .961.623zm.809 5.558C20.252 22.378 24 17.718 24 12.182c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.536 3.748 10.196 8.845 11.581a.7.7 0 0 0 .049.013l.059.016.001-.002a1.385 1.385 0 0 0 .635-2.695 9.231 9.231 0 1 1 4.824-.001 1.385 1.385 0 0 0 .635 2.695l.001.002.059-.016.049-.013z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.qwiklabs.com\",hex:\"F5CD0E\"},Qzone:{title:\"Qzone\",slug:\"qzone\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Qzone icon</title><path d=\"M23.985 9.202c-.032-.099-.127-.223-.334-.258-.207-.036-7.351-1.406-7.351-1.406s-.105-.022-.198-.07c-.092-.047-.127-.167-.127-.167S12.447.956 12.349.77C12.25.583 12.104.532 12 .532c-.104 0-.251.051-.349.238-.098.186-3.626 6.531-3.626 6.531s-.035.12-.128.167c-.092.047-.197.07-.197.07S.556 8.908.348 8.943c-.208.036-.302.16-.333.258a.477.477 0 0 0 .125.449l5.362 5.49s.072.08.119.172c.016.104.005.21.005.21s-1.189 7.242-1.22 7.45.075.369.159.43c.083.062.233.106.421.013.189-.093 6.812-3.261 6.812-3.261s.098-.044.201-.061c.103-.017.201.061.201.061s6.623 3.168 6.812 3.261c.188.094.338.049.421-.013a.463.463 0 0 0 .159-.43c-.021-.14-.93-5.677-.93-5.677.876-.54 1.425-1.039 1.849-1.747-2.594.969-6.006 1.717-9.415 1.866-.915.041-2.41.097-3.473-.015-.678-.071-1.17-.144-1.243-.438-.053-.215.054-.46.545-.831a2640.5 2640.5 0 0 1 2.861-2.155c1.285-.968 3.559-2.47 3.559-2.731 0-.285-2.144-.781-4.037-.781-1.945 0-2.275.132-2.811.168-.488.034-.769.005-.804-.138-.06-.248.183-.389.588-.568.709-.314 1.86-.594 1.984-.626.194-.052 3.082-.805 5.618-.535 1.318.14 3.244.668 3.244 1.276 0 .342-1.721 1.494-3.225 2.597-1.149.843-2.217 1.561-2.217 1.688 0 .342 3.533 1.241 6.689 1.01l.003-.022c.048-.092.119-.172.119-.172l5.362-5.49a.477.477 0 0 0 .127-.449z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://qzone.qq.com/\",hex:\"FECE00\"},R:{title:\"R\",slug:\"r\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>R icon</title><path d=\"M12 18.82c-6.627 0-12-3.598-12-8.037s5.373-8.037 12-8.037 12 3.599 12 8.037-5.373 8.037-12 8.037zm1.837-12.932c-5.038 0-9.121 2.46-9.121 5.495s4.083 5.494 9.12 5.494 8.756-1.682 8.756-5.494-3.718-5.495-8.755-5.495zM18.275 15.194a9.038 9.038 0 0 1 1.149.433 2.221 2.221 0 0 1 .582.416 1.573 1.573 0 0 1 .266.383l2.863 4.826-4.627.002-2.163-4.063a5.229 5.229 0 0 0-.716-.982.753.753 0 0 0-.549-.25h-1.099v5.292l-4.093.001V7.737h8.221s3.744.067 3.744 3.63a3.822 3.822 0 0 1-3.578 3.827zm-1.78-4.526l-2.479-.001v2.298h2.479a1.134 1.134 0 0 0 1.148-1.17 1.07 1.07 0 0 0-1.148-1.127z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.r-project.org/logo/\",hex:\"276DC3\"},RabbitMQ:{title:\"RabbitMQ\",slug:\"rabbitmq\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>RabbitMQ icon</title><path d=\"M22.2,9.739h-7.09c-0.567-0.068-0.999-0.567-0.999-1.155v-7.44C14.112,0.51,13.597,0,12.968,0h-2.481 C9.852,0,9.342,0.515,9.342,1.145v7.518C9.311,9.23,8.843,9.687,8.281,9.739H6.424C5.878,9.672,5.456,9.214,5.42,8.662V1.145 C5.42,0.51,4.905,0,4.276,0H1.794C1.16,0,0.65,0.515,0.65,1.145v9.739v11.971C0.65,23.49,1.165,24,1.794,24h2.481h6.211h2.481 h9.238c0.635,0,1.144-0.515,1.144-1.145V10.884C23.345,10.249,22.835,9.739,22.2,9.739z M18.934,17.949 c0,0.635-0.515,1.145-1.144,1.145h-2.481c-0.635,0-1.144-0.515-1.144-1.145v-2.341c0-0.635,0.515-1.145,1.144-1.145h2.481 c0.635,0,1.144,0.515,1.144,1.145V17.949z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.rabbitmq.com/\",hex:\"FF6600\"},RadioPublic:{title:\"RadioPublic\",slug:\"radiopublic\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>RadioPublic icon</title><path d=\"M13.938 4.073c3.256-.284 6.512-1.977 9.768-.536v19.889c-4.491-1.989-8.983 1.989-13.474 0v-3.151-.347c-3.313.27-6.625 1.987-9.938.539V.578c4.548 1.989 9.096-1.989 13.644 0zm2.48 10.797c.393-.086.784-.174 1.176-.259 1.735-.379 2.427-1.403 2.426-3.014V9c0-1.585-.447-2.59-2.556-2.135-1.176.257-2.35.543-3.527.645v12.968c.827-.072 1.654-.235 2.482-.414zm0-2.11V9.1l.467-.102c.58-.129.633.156.635.627v2.161c0 .401-.055.744-.635.872l-.466.102zm-9.887 4.35v-5.542l.522-.114c.504-.11.652.015.653.625v3.783c0 .575.094.834.224.946.828-.173 1.654-.323 2.481-.377v-.087c-.092-.15-.205-.385-.204-.944v-4.41c0-.962-.673-1.33-1.064-1.4.465-.272 1.101-.802 1.1-1.88V5.638c0-1.391-.764-2.126-2.276-1.805-1.305.272-2.612.606-3.918.718V17.52c.827-.072 1.654-.232 2.482-.409zm0-7.686V6.147c.186-.04.373-.08.56-.122.503-.11.615.041.615.599v1.76c0 .61-.185.824-.69.934l-.485.106z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://help.radiopublic.com/hc/en-us/articles/360002546754-RadioPublic-logos\",hex:\"CE262F\"},Rails:{title:\"Rails\",slug:\"rails\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Rails icon</title><path d=\"M20.8848485 15.8107143v1.1635714h1.9818182c.4060606 0 1.1030303-.315 1.1272727-1.19571427v-.45c0-.75214286-.5818182-1.1957143-1.1272727-1.1957143h-.9878788v-.54h1.9575757v-1.17h-1.8787878c-.4848485 0-1.1333334.42428573-1.1333334 1.215v.405c0 .7907143.6424243 1.1957143 1.1333334 1.1957143 1.3636363.00642857-.3272728 0 .9333333 0v.56571428l-2.0060606.0064286zm-10.6181818-.28285716s1.060606-.09642857 1.060606-1.5492857c0-1.45285715-1.2848485-1.58785715-1.2848485-1.58785715H7.72727273v4.5835714H8.8909091v-1.1057143l1.0060606 1.1057142h1.7212121l-1.3515151-1.4464286zm-.44848488-.93857143H8.8909091v-1.0478571h.93333332s.26060608.1028572.26060608.5207143c0 .4178572-.26666668.5271429-.26666668.5271429zM14.2 12.4228572h-1.1818182c-.8424242 0-1.1272727.81-1.1272727 1.1957143v3.35571427h1.1818182v-.8035714h1.1090909v.8035714h1.1454545V13.6185715c0-.97714286-.8363636-1.1957143-1.1272727-1.1957143zm-.0181818 2.44928572h-1.1151515V13.76s0-.2507143.3696969-.2507143h.4060606c.3272728 0 .3333334.2507143.3333334.2507143v1.11214286h.0060606zm1.6848485-2.44928573h1.230303v4.5514285h-1.230303v-4.5514285zm2.9575757 3.375v-3.375H17.6v4.5514285h2.8787879v-1.1764285h-1.6545455zM.42424242 16.9742857h4.7878788S4.2969697 12.545 7.3272727 10.75142858c.66060607-.34071428 2.76363638-1.61357143 6.20606058 1.08642857.1090909-.09642857.2121212-.17357143.2121212-.17357143s-3.1515151-3.33642856-6.66060602-2.9635714c-1.76363636.16714284-3.93333333 1.87071427-5.2060606 4.12071427-1.27272726 2.25-1.45454546 4.1528571-1.45454546 4.1528571zM.42424242 16.9742857h4.7878788S4.2969697 12.545 7.3272727 10.75142858c.66060607-.34071428 2.76363638-1.61357143 6.20606058 1.08642857.1090909-.09642857.2121212-.17357143.2121212-.17357143s-3.1515151-3.33642856-6.66060602-2.9635714c-1.76363636.16714284-3.93333333 1.87071427-5.2060606 4.12071427-1.27272726 2.25-1.45454546 4.1528571-1.45454546 4.1528571zM.42424242 16.9742857h4.7878788S4.2969697 12.545 7.3272727 10.75142858c.66060607-.34071428 2.76363638-1.61357143 6.20606058 1.08642857.1090909-.09642857.2121212-.17357143.2121212-.17357143s-3.1515151-3.33642856-6.66060602-2.9635714c-1.76969696.16714284-3.93939393 1.87071427-5.2121212 4.12071427C.6 15.0714285.4242424 16.9742857.4242424 16.9742857zM10.4 9.0607143L10.4242424 8.63c-.0545454-.03214286-.2060606-.1092857-.58787876-.225l-.02424243.4242857c.2.0707143.3939394.14785716.5878788.2314286zM9.82424242 10.42357143l-.02424242.405c.2.00642857.4.03214286.6.07714286l.0242424-.3985715c-.2060606-.045-.4060606-.0707143-.59999998-.0835715zm-2.24242424-2.0057143h.06060606l-.12121212-.39214284c-.1878788 0-.38181818.0128571-.58181818.0385714l.1151515.3792857c.1757576-.0192857.35151517-.0257143.52727274-.0257143zm.2909091 2.3657143l.13939393.44357143c.1757576-.09.3515152-.16714286.5272728-.225l-.1333333-.42428572c-.2060606.06428572-.3818182.135-.5333333.2057143zM5.1212121 9.09285713l-.27272727-.44357142c-.15151515.0835715-.3090909.1735715-.47272727.2764286l.27878787.45c.15757576-.1028571.3090909-.1992857.46666667-.2828571zm1.24242424 2.89285716l.2909091.4628571c.1030303-.1607143.22424242-.3085715.35757575-.4564286L6.7393939 11.555c-.13939394.135-.26666667.28285714-.37575758.4307143zm-.87878788 2.07l.4909091.4114285C6 14.2164285 6.04242424 13.9657143 6.1030303 13.715l-.43636363-.36642857c-.07878788.23785714-.13333334.47571428-.1818182.70714286zM2.830303 11.0021428L2.4 10.60357142c-.15757576.1607143-.3090909.32142858-.44848485.48214287L2.41818182 11.51c.12727273-.17357143.26666666-.34714286.4121212-.50785714zM1 13.8757143l-.6969697-.27c-.1151515.27642856-.24242424.59785713-.3030303.77142856l.6969697.27C.77575758 14.42857143.9030303 14.11357143 1 13.8757143zm4.3939394 1.81285713c.0121212.34071428.04242424.61714286.07272727.81L6.1939394 16.775c-.05454546-.2507143-.10909092-.53357143-.14545455-.8357143l-.65454546-.25071427z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://rubyonrails.org/images/rails-logo.svg\",hex:\"CC0000\"},\"Raspberry Pi\":{title:\"Raspberry Pi\",slug:\"raspberrypi\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Raspberry Pi icon</title><path d=\"M16.111 17.338c-.857.989-1.334 2.79-.709 3.371.596.449 2.201.391 3.385-1.23.86-1.08.569-2.893.081-3.372-.73-.555-1.778.164-2.757 1.243v-.012zm-8.057.3c-.908-1.04-2.088-1.658-2.851-1.199-.51.382-.605 1.685.123 2.967 1.078 1.524 2.596 1.679 3.221 1.307.659-.488.3-2.137-.493-3.075zm4.105 3.145c-1.103-.026-2.798.439-2.776 1.032-.018.403 1.331 1.572 2.705 1.513 1.326.03 2.699-1.139 2.682-1.649-.004-.523-1.498-.927-2.607-.884l-.004-.012zm-.075-13.944c-1.275-.032-2.502.933-2.502 1.493-.004.68 1.008 1.376 2.51 1.394 1.543.01 2.518-.559 2.532-1.26.016-.794-1.394-1.639-2.518-1.627h-.022zm-3.071.532c-2.135-.345-3.913.9-3.842 3.192.07.884 4.63-3.041 3.843-3.177l-.001-.015zm9.749 3.251c.071-2.277-1.709-3.521-3.844-3.176-.787.135 3.772 4.061 3.844 3.176zm.364.824c-1.239-.329-.42 5.049.588 4.615 1.109-.869 1.466-3.446-.588-4.6v-.015zM4.228 16.121c1.007.45 1.827-4.929.589-4.6-2.053 1.153-1.698 3.73-.589 4.615v-.015zm9.415-5.948c-1.146.75-1.354 2.428-.461 3.746.891 1.318 2.543 1.813 3.691 1.078 1.146-.733 1.353-2.412.462-3.746-.892-1.333-2.545-1.813-3.692-1.063v-.015zm-3.096.135c-1.146-.734-2.799-.254-3.689 1.064-.892 1.334-.686 3.012.461 3.761s2.799.269 3.691-1.064c.885-1.318.675-2.997-.465-3.745l.002-.016zm4.369 7.162c-.009-1.393-1.252-2.518-2.781-2.502-1.527.016-2.761 1.139-2.754 2.532v.029c.01 1.394 1.254 2.517 2.783 2.502 1.527 0 2.756-1.138 2.742-2.517v-.029l.01-.015zm3.209-15.133c-2.307 1.184-3.652 2.128-4.389 2.938.377 1.498 2.344 1.558 3.063 1.512-.147-.06-.271-.149-.315-.269.18-.12.821-.016 1.268-.255-.171-.03-.252-.061-.329-.195.419-.135.875-.24 1.141-.465-.143 0-.278.03-.467-.09.377-.194.778-.359 1.095-.658-.196 0-.406 0-.466-.075.346-.21.635-.435.877-.704-.272.045-.39.016-.454-.03.261-.255.593-.479.749-.81-.203.076-.391.09-.522 0 .091-.194.47-.314.69-.779-.215.03-.441.046-.486 0 .098-.389.269-.613.435-.854-.457 0-1.15 0-1.117-.029l.283-.285c-.448-.12-.904.015-1.236.12-.149-.105 0-.255.185-.405-.39.061-.733.135-1.034.256-.164-.15.105-.285.24-.436-.599.12-.839.27-1.094.42-.18-.165-.015-.314.104-.449-.449.164-.674.374-.914.568-.09-.104-.209-.179-.06-.449-.314.18-.554.39-.734.629-.194-.134-.119-.299-.119-.449-.33.27-.54.54-.794.811-.061-.031-.105-.15-.135-.346-.779.75-1.889 2.623-.285 3.356 1.349-1.094 2.981-1.903 4.779-2.503l.041-.075zm-12.259 0c1.798.6 3.419 1.408 4.777 2.518 1.596-.75.493-2.623-.282-3.356-.041.194-.085.329-.135.359-.255-.27-.462-.54-.788-.81 0 .15.077.33-.117.45-.175-.239-.41-.45-.725-.63.149.256.025.33-.056.449-.24-.225-.465-.434-.899-.599.12.149.3.3.12.465-.239-.149-.494-.3-1.078-.42.135.149.404.3.238.45-.315-.122-.66-.212-1.035-.258.181.15.342.289.192.405-.345-.12-.806-.255-1.255-.135l.284.284c.03.037-.659.03-1.121.035.165.225.337.449.435.854-.045.045-.27.016-.483 0 .225.449.599.57.688.765-.135.096-.314.075-.523 0 .164.314.494.539.748.81-.074.044-.18.074-.464.037.239.26.524.494.869.704-.06.07-.271.069-.479.075.314.304.719.464 1.094.663-.195.136-.33.105-.465.105.255.225.72.329 1.139.464-.09.135-.164.165-.344.195.449.254 1.078.135 1.258.27-.045.119-.164.209-.314.27.719.045 2.697-.015 3.072-1.514-.736-.807-2.084-1.752-4.391-2.921l.04.016zM7.6.103c.236-.007.436.135.652.201.529-.17.65.063.91.159.577-.12.752.141 1.029.419l.322-.009c.869.507 1.305 1.536 1.457 2.065.152-.529.584-1.559 1.457-2.065l.321.007c.277-.283.453-.539 1.029-.418.261-.105.38-.33.911-.166.33-.104.62-.375 1.057-.045.368-.149.726-.195 1.045.09.495-.06.653.061.774.21.108 0 .809-.104 1.132.36.81-.09 1.064.464.774.988.165.255.337.494-.05.975.15.269.062.553-.27.913.091.374-.074.63-.374.839.06.51-.48.81-.629.914-.061.3-.181.584-.795.734-.089.449-.464.523-.824.614 1.185.675 2.188 1.558 2.188 3.731l.181.299c1.349.809 2.562 3.402.674 5.514-.119.659-.329 1.124-.511 1.648-.269 2.113-2.082 3.101-2.561 3.221-.689.525-1.438 1.02-2.442 1.363-.942.961-1.976 1.336-2.994 1.336h-.092c-1.033 0-2.063-.375-3.012-1.335-1.007-.344-1.754-.838-2.447-1.363-.479-.12-2.283-1.107-2.562-3.221-.187-.524-.394-1.004-.518-1.662-1.894-2.113-.681-4.705.666-5.515l.172-.3c0-2.172 1.005-3.057 2.188-3.73-.359-.09-.72-.165-.823-.615-.615-.15-.735-.434-.795-.734-.15-.105-.689-.404-.629-.928-.3-.211-.465-.465-.375-.854-.314-.346-.404-.645-.27-.915-.39-.479-.209-.733-.045-.974C3.236 1.329 3.491.76 4.3.85 4.614.385 5.32.491 5.423.491c.121-.15.285-.285.779-.225.314-.285.675-.24 1.049-.102.151-.12.286-.164.406-.164L7.6.103z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.raspberrypi.org/trademark-rules\",hex:\"C51A4A\"},React:{title:\"React\",slug:\"react\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>React icon</title><path d=\"M12 9.861A2.139 2.139 0 1 0 12 14.139 2.139 2.139 0 1 0 12 9.861zM6.008 16.255l-.472-.12C2.018 15.246 0 13.737 0 11.996s2.018-3.25 5.536-4.139l.472-.119.133.468a23.53 23.53 0 0 0 1.363 3.578l.101.213-.101.213a23.307 23.307 0 0 0-1.363 3.578l-.133.467zM5.317 8.95c-2.674.751-4.315 1.9-4.315 3.046 0 1.145 1.641 2.294 4.315 3.046a24.95 24.95 0 0 1 1.182-3.046A24.752 24.752 0 0 1 5.317 8.95zM17.992 16.255l-.133-.469a23.357 23.357 0 0 0-1.364-3.577l-.101-.213.101-.213a23.42 23.42 0 0 0 1.364-3.578l.133-.468.473.119c3.517.889 5.535 2.398 5.535 4.14s-2.018 3.25-5.535 4.139l-.473.12zm-.491-4.259c.48 1.039.877 2.06 1.182 3.046 2.675-.752 4.315-1.901 4.315-3.046 0-1.146-1.641-2.294-4.315-3.046a24.788 24.788 0 0 1-1.182 3.046zM5.31 8.945l-.133-.467C4.188 4.992 4.488 2.494 6 1.622c1.483-.856 3.864.155 6.359 2.716l.34.349-.34.349a23.552 23.552 0 0 0-2.422 2.967l-.135.193-.235.02a23.657 23.657 0 0 0-3.785.61l-.472.119zm1.896-6.63c-.268 0-.505.058-.705.173-.994.573-1.17 2.565-.485 5.253a25.122 25.122 0 0 1 3.233-.501 24.847 24.847 0 0 1 2.052-2.544c-1.56-1.519-3.037-2.381-4.095-2.381zM16.795 22.677c-.001 0-.001 0 0 0-1.425 0-3.255-1.073-5.154-3.023l-.34-.349.34-.349a23.53 23.53 0 0 0 2.421-2.968l.135-.193.234-.02a23.63 23.63 0 0 0 3.787-.609l.472-.119.134.468c.987 3.484.688 5.983-.824 6.854a2.38 2.38 0 0 1-1.205.308zm-4.096-3.381c1.56 1.519 3.037 2.381 4.095 2.381h.001c.267 0 .505-.058.704-.173.994-.573 1.171-2.566.485-5.254a25.02 25.02 0 0 1-3.234.501 24.674 24.674 0 0 1-2.051 2.545zM18.69 8.945l-.472-.119a23.479 23.479 0 0 0-3.787-.61l-.234-.02-.135-.193a23.414 23.414 0 0 0-2.421-2.967l-.34-.349.34-.349C14.135 1.778 16.515.767 18 1.622c1.512.872 1.812 3.37.824 6.855l-.134.468zM14.75 7.24c1.142.104 2.227.273 3.234.501.686-2.688.509-4.68-.485-5.253-.988-.571-2.845.304-4.8 2.208A24.849 24.849 0 0 1 14.75 7.24zM7.206 22.677A2.38 2.38 0 0 1 6 22.369c-1.512-.871-1.812-3.369-.823-6.854l.132-.468.472.119c1.155.291 2.429.496 3.785.609l.235.02.134.193a23.596 23.596 0 0 0 2.422 2.968l.34.349-.34.349c-1.898 1.95-3.728 3.023-5.151 3.023zm-1.19-6.427c-.686 2.688-.509 4.681.485 5.254.987.563 2.843-.305 4.8-2.208a24.998 24.998 0 0 1-2.052-2.545 24.976 24.976 0 0 1-3.233-.501zM12 16.878c-.823 0-1.669-.036-2.516-.106l-.235-.02-.135-.193a30.388 30.388 0 0 1-1.35-2.122 30.354 30.354 0 0 1-1.166-2.228l-.1-.213.1-.213a30.3 30.3 0 0 1 1.166-2.228c.414-.716.869-1.43 1.35-2.122l.135-.193.235-.02a29.785 29.785 0 0 1 5.033 0l.234.02.134.193a30.006 30.006 0 0 1 2.517 4.35l.101.213-.101.213a29.6 29.6 0 0 1-2.517 4.35l-.134.193-.234.02c-.847.07-1.694.106-2.517.106zm-2.197-1.084c1.48.111 2.914.111 4.395 0a29.006 29.006 0 0 0 2.196-3.798 28.585 28.585 0 0 0-2.197-3.798 29.031 29.031 0 0 0-4.394 0 28.477 28.477 0 0 0-2.197 3.798 29.114 29.114 0 0 0 2.197 3.798z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://facebook.github.io/react/\",hex:\"61DAFB\"},ReactOS:{title:\"ReactOS\",slug:\"reactos\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>ReactOS icon</title><path d=\"M20.21 24c-1.148-.007-2.477-.334-3.89-.915-2.823-1.163-6.04-3.372-9.036-6.367C4.289 13.723 2.075 10.505.913 7.68-.25 4.857-.383 2.36.988.989 2.358-.38 4.855-.248 7.679.915c.306.125.617.265.932.415-.331.113-.658.24-.974.383l-.141-.058C4.832.558 2.698.519 1.607 1.609.517 2.7.557 4.83 1.653 7.494c1.097 2.663 3.235 5.793 6.147 8.704 2.91 2.911 6.044 5.05 8.708 6.147 2.664 1.097 4.79 1.136 5.88.045 1.091-1.09 1.056-3.22-.041-5.884-.108-.263-.23-.531-.358-.803.134-.317.25-.642.354-.973.282.54.53 1.07.744 1.589 1.163 2.823 1.292 5.32-.079 6.691-.685.685-1.651.997-2.799.99zM3.79 24c-1.148.008-2.117-.305-2.802-.99-1.37-1.37-1.238-3.868-.075-6.691.235-.572.517-1.16.836-1.76.098.333.212.66.34.978a17.67 17.67 0 00-.436.969C.556 19.169.521 21.3 1.611 22.39c1.091 1.091 3.221 1.051 5.885-.045.922-.38 3.021-1.69 4.026-2.308.216.162.433.32.649.474-1.157.733-3.415 2.13-4.492 2.574-1.412.581-2.74.907-3.888.915zm9.753-4.458c-.214-.14-.429-.282-.645-.433a34.547 34.547 0 003.302-2.911c2.912-2.911 5.05-6.04 6.147-8.704 1.097-2.664 1.132-4.794.042-5.885-1.091-1.09-3.217-1.055-5.88.042l-.072.029a10.726 10.726 0 00-.99-.379c.295-.14.587-.272.874-.39 2.824-1.163 5.321-1.292 6.691.078s1.238 3.864.075 6.688c-1.162 2.823-3.376 6.046-6.37 9.04a35.747 35.747 0 01-3.174 2.825zm1.95 1.156c-.325-.17-1.798-1.073-2.135-1.273 1.002-.806 2.423-1.97 3.396-2.944 1.718-1.718 3.981-4.787 5.162-6.555-.008.111-.093 2.49-.105 2.6a9.802 9.802 0 01-6.318 8.172zm-6.928-.034c-3.407-1.308-6.043-4.71-6.287-8.198-.01-.151-.06-.399-.054-.984.007-.602.056-1.423.159-1.283 1.036 1.42 3.976 5.455 5.352 6.83.973.973 1.927 1.624 2.929 2.43a112.45 112.45 0 01-2.1 1.205zm3.43-2.208a33.27 33.27 0 01-3.443-3.01c-2.54-2.54-4.462-5.254-5.568-7.582 1.45-3.597 4.973-6.138 9.087-6.138 4.051 0 7.53 2.465 9.02 5.976-1.093 2.363-3.045 5.145-5.643 7.743a33.161 33.161 0 01-3.452 3.011z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/reactos/press-media\",hex:\"0088CC\"},\"React Router\":{title:\"React Router\",slug:\"reactrouter\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>React Router icon</title><path d=\"M12.118 5.466a2.306 2.306 0 00-.623.08c-.278.067-.702.332-.953.583-.41.423-.49.609-.662 1.469-.08.423.41 1.43.847 1.734.45.317 1.085.502 2.065.608 1.429.16 1.84.636 1.84 2.197 0 1.377-.385 1.747-1.96 1.906-1.707.172-2.58.834-2.765 2.117-.106.781.41 1.76 1.125 2.091 1.627.768 3.15-.198 3.467-2.196.211-1.284.622-1.642 1.998-1.747 1.588-.133 2.409-.675 2.713-1.787.278-1.02-.304-2.157-1.297-2.554-.264-.106-.873-.238-1.35-.291-1.495-.16-1.879-.424-2.038-1.39-.225-1.337-.317-1.562-.794-2.09a2.174 2.174 0 00-1.613-.73zm-4.785 4.36a2.145 2.145 0 00-.497.048c-1.469.318-2.17 2.051-1.35 3.295 1.178 1.774 3.944.953 3.97-1.177.012-1.193-.98-2.143-2.123-2.166zM2.089 14.19a2.22 2.22 0 00-.427.052c-2.158.476-2.237 3.626-.106 4.182.53.145.582.145 1.111.013 1.191-.318 1.866-1.456 1.549-2.607-.278-1.02-1.144-1.664-2.127-1.64zm19.824.008c-.233.002-.477.058-.784.162-1.39.477-1.866 2.092-.98 3.336.557.794 1.96 1.058 2.82.516 1.416-.874 1.363-3.057-.093-3.746-.38-.186-.663-.271-.963-.268z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://reacttraining.com/react-router/\",hex:\"CA4245\"},\"Read the Docs\":{title:\"Read the Docs\",slug:\"readthedocs\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Read the Docs icon</title><path d=\"M2.759 24l.664-.144c.207-.044.412-.085.619-.126.318-.062.637-.123.955-.182.24-.046.48-.085.721-.129l.055-.015c.25-.044.498-.09.747-.12l1.214-.179V-.001h-.042c-.63.004-1.256.016-1.884.036-.689.018-1.394.06-2.084.105-.299.021-.6.046-.899.07H2.78v23.784L2.759 24zM8.911.015v22.942c.861-.1 1.72-.182 2.582-.246 2.121-.161 4.248-.211 6.373-.151 1.128.034 2.253.099 3.374.192V1.503c-1.004-.229-2.012-.432-3.028-.607-1.968-.342-3.955-.581-5.947-.731C11.151.084 10.032.033 8.913.016h-.002zm10.763 14.797l-.046-.004-.561-.061c-1.399-.146-2.805-.242-4.207-.291-1.407-.045-2.815-.03-4.223.016h-.044c-.045 0-.091 0-.135-.016-.101-.03-.195-.074-.267-.149-.127-.136-.186-.315-.156-.495.008-.061.029-.105.054-.166.027-.044.063-.104.104-.134.043-.045.09-.075.143-.104.061-.03.121-.046.18-.061h.09c.195 0 .391-.016.57-.016 1.395-.029 2.773-.029 4.169.03 1.439.06 2.864.165 4.288.33l.151.015c.044.016.089.016.135.03.105.046.194.105.255.181.044.044.074.104.105.164.029.061.044.12.044.18.015.165-.044.33-.164.45-.046.046-.091.075-.135.105-.047.03-.105.044-.166.06-.03.016-.045.016-.089.016h-.047l-.048-.08zm.035-2.711c-.044 0-.044 0-.09-.006l-.555-.071c-1.395-.179-2.804-.3-4.198-.359-1.395-.075-2.805-.09-4.214-.06l-.046-.016c-.045-.015-.09-.015-.135-.029-.09-.03-.194-.09-.254-.166-.03-.045-.076-.104-.09-.148-.075-.166-.075-.361.014-.525.031-.061.061-.105.105-.15s.09-.09.15-.104c.061-.03.119-.06.18-.06l.09-.016.585-.015c1.396-.016 2.774.015 4.153.09 1.439.075 2.865.21 4.289.39l.149.016.091.014c.105.031.194.075.27.166.12.119.18.284.165.449 0 .061-.016.121-.045.165-.029.06-.061.104-.09.15-.03.044-.074.075-.136.12-.044.029-.104.045-.164.061l-.091.014H19.8l-.091.09zm0-2.711c-.044 0-.044 0-.09-.006l-.555-.08c-1.395-.19-2.789-.334-4.198-.428-1.395-.092-2.805-.135-4.214-.129h-.046l-.09-.016c-.059-.016-.104-.036-.164-.068-.15-.092-.256-.254-.285-.438 0-.061 0-.12.016-.18.014-.061.029-.117.059-.17.031-.054.076-.102.121-.144.074-.075.18-.126.285-.15.045-.011.089-.015.135-.015h.569c1.439.009 2.879.064 4.304.172 1.395.105 2.774.26 4.153.457l.15.021c.046.007.061.007.09.019.06.02.12.046.165.08.061.033.104.075.135.123.031.048.061.101.09.158.062.156.045.334-.029.479-.029.055-.061.105-.105.146-.075.074-.164.127-.27.15-.029.012-.046.012-.091.014l-.044.005h-.091zm0-2.712c-.044 0-.044 0-.09-.007l-.555-.09c-1.395-.225-2.789-.391-4.198-.496-1.395-.119-2.805-.179-4.214-.209h-.046l-.105-.014c-.061-.015-.115-.045-.165-.074-.053-.031-.099-.076-.14-.121-.036-.045-.068-.104-.094-.149-.02-.06-.037-.12-.044-.181-.016-.18.053-.371.181-.494.074-.075.176-.125.279-.15.045-.015.09-.015.135-.015.189 0 .38.005.57.008 1.437.034 2.871.113 4.304.246 1.387.119 2.77.3 4.145.524l.135.016c.04 0 .052 0 .09.014.062.016.112.046.165.076.046.029.09.074.125.119.091.135.135.301.105.465-.015.061-.031.105-.061.166-.03.045-.074.104-.12.135-.074.074-.165.119-.271.149h-.135l.004.082zm-15.67-.509c-.09 0-.181-.021-.271-.063-.194-.095-.314-.293-.329-.505 0-.057.015-.111.03-.165.014-.068.045-.133.09-.19.045-.065.104-.12.164-.162.077-.05.167-.076.241-.092l.48-.044c.659-.058 1.305-.105 1.949-.144h.06c.105.004.195.024.271.071.194.103.314.305.314.519 0 .055-.015.109-.029.161-.016.067-.045.132-.091.189-.044.075-.104.12-.165.165-.074.045-.15.074-.24.09-.104.015-.209.015-.314.03-.136.015-.286.015-.436.031l-1.168.088-.285.031c-.061.015-.122.015-.196.015l-.075-.025zm15.655-2.201l-.091-.01-.554-.1c-1.395-.234-2.805-.425-4.214-.564-1.395-.138-2.804-.225-4.214-.271h-.045l-.09-.018c-.061-.015-.105-.038-.165-.071-.045-.03-.091-.072-.135-.121-.12-.138-.165-.33-.12-.506.016-.061.045-.12.074-.18.031-.061.076-.105.121-.15.074-.076.18-.121.285-.15.045-.015.089-.015.135-.015l.584.015c1.395.061 2.774.15 4.154.301 1.439.148 2.864.359 4.288.6l.15.014c.046 0 .061 0 .09.016.06.015.12.045.165.074.135.105.225.256.239.421.016.06 0 .12-.015.181 0 .059-.029.119-.059.164-.031.045-.062.09-.105.135-.076.076-.181.12-.286.135l-.086.014h-.046l-.06.086zM4.022 3.199c-.086 0-.171-.019-.25-.056-.07-.033-.134-.079-.187-.137-.045-.053-.086-.112-.111-.181-.02-.049-.034-.101-.039-.156-.022-.214.078-.427.255-.546.078-.054.167-.086.26-.099.158-.014.314-.014.473-.029.65-.045 1.301-.075 1.949-.105h.048c.091.016.181.03.256.075.179.105.3.315.3.524 0 .061-.016.121-.03.166-.03.074-.06.135-.104.195-.047.06-.107.12-.182.15-.075.045-.165.075-.255.075-.104.014-.21.014-.33.014l-.449.031c-.405.029-.795.045-1.186.074l-.3.016c-.075.015-.134.015-.194.015l.076-.026z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/rtfd/readthedocs.org/blob/master/media/readthedocsbranding.ai\",hex:\"8CA1AF\"},Realm:{title:\"Realm\",slug:\"realm\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Realm icon</title><path d=\"M12.004.059A12.122 12.122 0 0 0 3.52 3.564v.002C1.295 5.79.004 8.887.004 12.03c0 3.142 1.285 6.244 3.516 8.465l.001.002A12.168 12.168 0 0 0 12 24.002h.004c3.148 0 6.255-1.283 8.482-3.508l.002-.002a12.08 12.08 0 0 0 3.516-8.457v-.004c0-3.141-1.287-6.243-3.518-8.465A12.116 12.116 0 0 0 12.004.06zm0 1.336c.48 0 .96.046 1.435.113-2.03.566-3.765 1.622-5.554 1.949a7.352 7.352 0 0 1-2.225.045c1.826-1.338 4.084-2.107 6.344-2.107zm4.135 1.072c.173 0 .348.011.521.023a10.59 10.59 0 0 1 2.883 2.022c.092.091.173.194.262.289a10.278 10.278 0 0 1-4.442 1.178c-2.43.06-4.958-.794-7.69-.823a12.662 12.662 0 0 0-4.362.744c.32-.457.672-.893 1.062-1.293 1.223.322 2.5.39 3.748.164h.002c2.264-.412 4.133-1.625 6.049-2.08a8.342 8.342 0 0 1 1.967-.224zm4.535 3.404a10.87 10.87 0 0 1 1.433 2.824c-.435-.243-.884-.46-1.35-.644h-.001a11.305 11.305 0 0 0-6.62-.492h-.003c-1.489.344-2.841.967-4.154 1.523-.468.198-.933.383-1.399.553a10.83 10.83 0 0 0-1.445-.256h-.002a9.578 9.578 0 0 0-4.194.549 8.125 8.125 0 0 1-1.244-.535 10.9 10.9 0 0 1 .53-1.557c1.671-.877 3.552-1.364 5.433-1.344 2.445.026 4.992.89 7.738.822h.004a11.626 11.626 0 0 0 5.274-1.443zm-4.031 2.742c1.233 0 2.463.229 3.625.682a9.895 9.895 0 0 1 2.283 1.281c.036.252.064.504.082.758-.734-.187-1.488-.3-2.244-.328a10.28 10.28 0 0 0-3.201.38c-.697.198-1.353.463-1.989.759-1.087-.371-2.166-.86-3.277-1.336a35.107 35.107 0 0 0-1.324-.538c1.3-.552 2.554-1.113 3.834-1.41a9.968 9.968 0 0 1 2.21-.248zM5.877 10.676c.374-.016.75-.005 1.125.031 1.475.148 2.935.704 4.393 1.33.717.309 1.453.625 2.203.928-1.1.604-2.156 1.225-3.237 1.701-1.05-.394-2.131-.758-3.302-.918-1.835-.25-3.717.06-5.387.828a10.467 10.467 0 0 1-.32-2.3c.403-.3.828-.57 1.28-.79a8.264 8.264 0 0 1 3.245-.81zm14.463 1.666c.775.029 1.547.16 2.29.379a10.709 10.709 0 0 1-.304 1.894c-.67.438-1.383.807-2.139 1.08-1.828.657-3.85.79-5.75.373-.78-.17-1.557-.45-2.341-.75 1.889-.973 3.598-2.119 5.457-2.646h.002a8.954 8.954 0 0 1 2.785-.33zM5.508 15.006c.458-.016.916.005 1.369.066 2.354.322 4.617 1.718 7.275 2.301.357.078.717.134 1.078.178-.35.1-.698.21-1.043.332v.002h-.001c-1.283.462-2.455 1.042-3.637 1.388-2.151.625-4.443.54-6.543-.23a10.723 10.723 0 0 1-1.926-3.18 8.615 8.615 0 0 1 3.428-.857zm16.144 1.5c-.067.145-.133.291-.207.433-.221-.017-.442-.039-.664-.048.298-.112.584-.251.871-.385zm-1.7 1.703c.231-.001.464.007.696.016-.333.465-.696.912-1.105 1.324h-.002v.002c-1.966 1.963-4.754 3.113-7.535 3.113a10.814 10.814 0 0 1-5.793-1.725c1.57.189 3.173.065 4.71-.382h.003c1.332-.391 2.526-.987 3.71-1.414a16.091 16.091 0 0 1 5.315-.934z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://realm.io/press\",hex:\"39477F\"},Reason:{title:\"Reason\",slug:\"reason\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Reason icon</title><path d=\"M0 0v24h24V0H0zm11.52 21.89l-1.33-2.54H8.4v2.54H6v-9.2h4.13c2.44 0 3.83 1.19 3.83 3.24 0 1.39-.58 2.4-1.64 2.96l1.92 3h-2.72zm11.36 0H15.5v-9.2h7.24v1.92H17.9v1.72h4.38v1.9l-4.38.01v1.73h4.99v1.92zM11.68 16c0 .93-.56 1.43-1.53 1.43H8.4v-2.82h1.75c.97 0 1.53.49 1.53 1.4z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://reasonml.github.io/img/reason.svg\",hex:\"DD4B39\"},\"Reason Studios\":{title:\"Reason Studios\",slug:\"reasonstudios\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Reason Studios icon</title><path d=\"M2.49,5.114l8.299-4.79c0.739-0.427,1.647-0.432,2.391-0.017l0.03,0.017 l8.299,4.79c0.74,0.427,1.2,1.212,1.211,2.065V7.21v9.58c0,0.854-0.451,1.644-1.184,2.08l-0.027,0.016l-8.299,4.79 c-0.739,0.427-1.647,0.432-2.391,0.017l-0.03-0.017l-8.299-4.79c-0.74-0.427-1.199-1.213-1.21-2.065V16.79V7.21 c0-0.854,0.45-1.644,1.184-2.08L2.49,5.114l8.299-4.79L2.49,5.114z M12,4.026L5.092,8.013v7.974L12,19.974V12l6.908-3.987L12,4.026 z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.reasonstudios.com/press\",hex:\"FFFFFF\"},Redbubble:{title:\"Redbubble\",slug:\"redbubble\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Redbubble icon</title><path d=\"M16.633 16.324h-3.199a.321.321 0 0 1-.32-.322V7.974a.32.32 0 0 1 .32-.32H16.4c2.226 0 2.693 1.31 2.693 2.408 0 .636-.169 1.14-.504 1.511.816.337 1.256 1.096 1.256 2.194 0 1.601-1.201 2.557-3.212 2.557m-4.644 0H5.345a.32.32 0 0 1-.32-.322V7.974a.32.32 0 0 1 .32-.32h3.103c1.939 0 3.096 1.043 3.096 2.791 0 1.163-.585 2.077-1.527 2.448l2.21 2.897a.322.322 0 0 1-.24.533M12 0C5.373 0 0 5.373 0 12s5.373 12 12 12c6.628 0 12-5.373 12-12S18.63 0 12.001 0\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.redbubble.com/explore/client/4196122a442ab3f429ec802f71717465.svg\",hex:\"E41321\"},Reddit:{title:\"Reddit\",slug:\"reddit\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Reddit icon</title><path d=\"M2.204 14.049c-.06.276-.091.56-.091.847 0 3.443 4.402 6.249 9.814 6.249 5.41 0 9.812-2.804 9.812-6.249 0-.274-.029-.546-.082-.809l-.015-.032c-.021-.055-.029-.11-.029-.165-.302-1.175-1.117-2.241-2.296-3.103-.045-.016-.088-.039-.126-.07-.026-.02-.045-.042-.067-.064-1.792-1.234-4.356-2.008-7.196-2.008-2.815 0-5.354.759-7.146 1.971-.014.018-.029.033-.049.049-.039.033-.084.06-.13.075-1.206.862-2.042 1.937-2.354 3.123 0 .058-.014.114-.037.171l-.008.015zm9.773 5.441c-1.794 0-3.057-.389-3.863-1.197-.173-.174-.173-.457 0-.632.176-.165.46-.165.635 0 .63.629 1.685.943 3.228.943 1.542 0 2.591-.3 3.219-.929.165-.164.45-.164.629 0 .165.18.165.465 0 .645-.809.808-2.065 1.198-3.862 1.198l.014-.028zm-3.606-7.573c-.914 0-1.677.765-1.677 1.677 0 .91.763 1.65 1.677 1.65s1.651-.74 1.651-1.65c0-.912-.739-1.677-1.651-1.677zm7.233 0c-.914 0-1.678.765-1.678 1.677 0 .91.764 1.65 1.678 1.65s1.651-.74 1.651-1.65c0-.912-.739-1.677-1.651-1.677zm4.548-1.595c1.037.833 1.8 1.821 2.189 2.904.45-.336.719-.864.719-1.449 0-1.002-.815-1.816-1.818-1.816-.399 0-.778.129-1.09.363v-.002zM2.711 9.963c-1.003 0-1.817.816-1.817 1.818 0 .543.239 1.048.644 1.389.401-1.079 1.172-2.053 2.213-2.876-.302-.21-.663-.329-1.039-.329v-.002zm9.217 12.079c-5.906 0-10.709-3.205-10.709-7.142 0-.275.023-.544.068-.809C.494 13.598 0 12.729 0 11.777c0-1.496 1.227-2.713 2.725-2.713.674 0 1.303.246 1.797.682 1.856-1.191 4.357-1.941 7.112-1.992l1.812-5.524.404.095s.016 0 .016.002l4.223.993c.344-.798 1.138-1.36 2.065-1.36 1.229 0 2.231 1.004 2.231 2.234 0 1.232-1.003 2.234-2.231 2.234s-2.23-1.004-2.23-2.23l-3.851-.912-1.467 4.477c2.65.105 5.047.854 6.844 2.021.494-.464 1.144-.719 1.833-.719 1.498 0 2.718 1.213 2.718 2.711 0 .987-.54 1.886-1.378 2.365.029.255.059.494.059.749-.015 3.938-4.806 7.143-10.72 7.143l-.034.009zm8.179-19.187c-.74 0-1.34.599-1.34 1.338 0 .738.6 1.34 1.34 1.34.732 0 1.33-.6 1.33-1.334 0-.733-.598-1.332-1.347-1.332l.017-.012z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://worldvectorlogo.com/logo/reddit-2\",hex:\"FF4500\"},\"Red Hat\":{title:\"Red Hat\",slug:\"redhat\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Red Hat icon</title><path d=\"M16.009 13.386c1.577 0 3.86-.326 3.86-2.202a1.765 1.765 0 0 0-.04-.431l-.94-4.08c-.216-.898-.406-1.305-1.982-2.093-1.223-.625-3.888-1.658-4.676-1.658-.733 0-.947.946-1.822.946-.842 0-1.467-.706-2.255-.706-.757 0-1.25.515-1.63 1.576 0 0-1.06 2.99-1.197 3.424a.81.81 0 0 0-.028.245c0 1.162 4.577 4.974 10.71 4.974m4.101-1.435c.218 1.032.218 1.14.218 1.277 0 1.765-1.984 2.745-4.593 2.745-5.895.004-11.06-3.451-11.06-5.734a2.326 2.326 0 0 1 .19-.925C2.746 9.415 0 9.794 0 12.217c0 3.969 9.405 8.861 16.851 8.861 5.71 0 7.149-2.582 7.149-4.62 0-1.605-1.387-3.425-3.887-4.512\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.redhat.com/en/about/brand/new-brand/details\",hex:\"EE0000\"},Redis:{title:\"Redis\",slug:\"redis\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Redis icon</title><path d=\"M23.99414 14.34005c-.01.229-.313.485-.935.81-1.281.667-7.916 3.396-9.328 4.132-1.413.736-2.197.729-3.313.195-1.116-.533-8.176-3.386-9.448-3.993-.635-.304-.959-.56-.97-.802v2.426c0 .242.334.499.97.803 1.272.608 8.333 3.46 9.448 3.993 1.116.534 1.9.541 3.313-.196 1.412-.736 8.047-3.464 9.328-4.132.651-.339.939-.603.939-.842 0-.226.001-2.392.001-2.392-.001-.001-.004-.001-.005-.002zM23.99314 10.38505c-.011.229-.313.484-.934.809-1.281.667-7.916 3.396-9.328 4.132-1.413.736-2.197.729-3.313.196-1.116-.533-8.176-3.386-9.448-3.994-.635-.303-.959-.56-.97-.801v2.426c0 .242.334.498.97.802 1.272.608 8.332 3.46 9.448 3.993 1.116.534 1.9.541 3.313-.195 1.412-.736 8.047-3.465 9.328-4.132.651-.34.939-.604.939-.843 0-.226.001-2.392.001-2.392-.001-.001-.004 0-.006-.001zM23.99314 6.28305c.012-.244-.307-.458-.949-.694-1.248-.457-7.843-3.082-9.106-3.545-1.263-.462-1.777-.443-3.261.089-1.484.533-8.506 3.287-9.755 3.776-.625.246-.931.473-.92.715v2.426c0 .242.334.498.97.802 1.272.608 8.332 3.461 9.448 3.994 1.116.533 1.9.54 3.313-.196 1.412-.736 8.047-3.465 9.328-4.132.651-.34.939-.604.939-.843 0-.225.001-2.392.001-2.392h-.008zm-15.399 2.296l5.561-.854-1.68 2.463-3.881-1.609zm12.299-2.218l-3.288 1.299-.357.14-3.287-1.299 3.642-1.44 3.29 1.3zm-9.655-2.383l-.538-.992 1.678.656 1.582-.518-.428 1.025 1.612.604-2.079.216-.466 1.12-.752-1.249-2.401-.216 1.792-.646zm-4.143 1.399c1.642 0 2.972.516 2.972 1.152 0 .636-1.331 1.152-2.972 1.152s-2.973-.517-2.973-1.152c0-.636 1.331-1.152 2.973-1.152z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://redis.io/images/redis-logo.svg\",hex:\"D82C20\"},Redux:{title:\"Redux\",slug:\"redux\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Redux icon</title><path d=\"M16.633 16.504c.869-.075 1.543-.84 1.499-1.754-.046-.914-.795-1.648-1.708-1.648h-.061c-.943.031-1.678.824-1.648 1.769.03.479.226.869.494 1.153-1.048 2.038-2.621 3.536-5.004 4.795-1.603.838-3.296 1.154-4.944.929-1.378-.194-2.456-.81-3.116-1.798-.988-1.499-1.078-3.116-.255-4.734.601-1.169 1.499-2.023 2.099-2.443-.15-.389-.33-1.048-.42-1.542-4.436 3.177-3.985 7.521-2.637 9.574 1.004 1.498 3.057 2.456 5.304 2.456.599 0 1.229-.044 1.843-.194 3.896-.749 6.847-3.086 8.54-6.532l.014-.031zM21.981 12.758c-2.321-2.727-5.738-4.225-9.634-4.225h-.51c-.253-.554-.837-.899-1.497-.899h-.045c-.943 0-1.678.81-1.647 1.753.03.898.794 1.648 1.708 1.648h.074c.675-.03 1.259-.45 1.498-1.049h.555c2.309 0 4.495.674 6.488 1.992 1.527 1.004 2.622 2.322 3.236 3.896.538 1.288.509 2.547-.045 3.597-.854 1.647-2.293 2.517-4.195 2.517-1.199 0-2.367-.375-2.967-.644-.359.298-.959.793-1.394 1.093 1.318.598 2.652.943 3.94.943 2.922 0 5.093-1.647 5.918-3.236.898-1.798.824-4.824-1.469-7.416l-.014.03zM6.49 17.042c.029.899.793 1.648 1.708 1.648h.06c.959-.03 1.693-.823 1.648-1.768 0-.899-.779-1.647-1.693-1.647h-.061c-.06 0-.149 0-.225.029-1.243-2.098-1.768-4.346-1.572-6.771.119-1.828.719-3.417 1.797-4.735.899-1.124 2.592-1.679 3.746-1.708 3.236-.061 4.585 3.971 4.689 5.574l1.498.449c-.345-4.914-3.4-7.492-6.322-7.492-2.742 0-5.273 1.993-6.293 4.915-1.393 3.896-.479 7.641 1.229 10.638-.149.195-.239.539-.209.868z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/reactjs/redux/tree/master/logo\",hex:\"764ABC\"},Renren:{title:\"Renren\",slug:\"renren\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Renren icon</title><path d=\"M5.661 9.601V5.303a6.793 6.793 0 0 0-4.053 11.084c2.378-1.152 4.041-3.755 4.053-6.786zM6.793 13.715c-.423 1.752-1.687 3.249-3.262 4.244a6.759 6.759 0 0 0 3.261.833 6.771 6.771 0 0 0 3.262-.833c-1.575-.995-2.838-2.493-3.261-4.244zM11.977 7.613a6.789 6.789 0 0 0-4.052-2.31v4.265c0 3.044 1.666 5.662 4.051 6.817a6.766 6.766 0 0 1-1.607-4.386 6.754 6.754 0 0 1 1.608-4.386zM11.977 7.613c1.003 1.183 1.655 2.714 1.655 4.387s-.652 3.202-1.655 4.387l-.001-.001.001.001c2.378-1.151 4.087-3.755 4.099-6.786V5.303a6.9 6.9 0 0 0-4.099 2.31zM18.34 9.568c0 3.045 1.666 5.662 4.052 6.818A6.792 6.792 0 0 0 18.34 5.304v4.264zM17.208 13.715c-.423 1.752-1.687 3.249-3.262 4.244a6.759 6.759 0 0 0 3.261.833 6.771 6.771 0 0 0 3.262-.833c-1.574-.995-2.838-2.493-3.261-4.244z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://seeklogo.com/vector-logo/184137/renren-inc\",hex:\"217DC6\"},\"repl.it\":{title:\"repl.it\",slug:\"repl-dot-it\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>repl.it icon</title><path d=\"M12.265.002a11.911 11.911 0 00-2.437.204c13.876 1.704 10.27 17.94 1.717 17.819 0 0 12.453 1.625 11.673-10.215A11.911 11.911 0 0012.265.002zM8.213.827c-.2.002-.402.008-.61.016A11.856 11.856 0 00.146 13.608C2.93-.421 18.805 4.122 17.9 12.688c0 0 2.85-12.014-9.688-11.861zm1.454 5.035C6.002 5.886.691 7.45.816 16.344a12.013 12.013 0 002.897 4.33c.052.051.108.1.162.149a12.02 12.02 0 001.137.926c.061.044.12.092.181.135a11.93 11.93 0 001.312.779c.132.068.266.13.4.193a11.854 11.854 0 001.199.486c.1.034.195.077.297.109a11.874 11.874 0 001.49.353c.153.027.307.05.461.07a12.016 12.016 0 001.578.123l.06.003c.4 0 .792-.021 1.18-.06-13.949-3.327-8.645-18.924-.114-17.68 0 0-1.469-.41-3.389-.398zm2.436 2.762a3.355 3.355 0 103.354 3.356 3.355 3.355 0 00-3.354-3.356zm-5.95 2.192S2.82 23.09 16.172 23.196a11.978 11.978 0 007.743-9.992c.033-.319.043-.644.05-.97.001-.085.013-.168.013-.255 0-.371-.023-.737-.056-1.1-3.527 13.887-19.132 8.448-17.77-.063z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://repl.it/\",hex:\"667881\"},ResearchGate:{title:\"ResearchGate\",slug:\"researchgate\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>ResearchGate icon</title><path d=\"M7.843,13.76c-0.461,0.005-0.921-0.013-1.38-0.052V8.64c0.263-0.018,0.581-0.027,0.981-0.03 l0.591-0.002c1.724,0,2.695,0.889,2.695,2.49c0,1.622-1.102,2.661-2.886,2.661H7.843z M21.001,0h-18c-1.657,0-3,1.343-3,3v18 c0,1.657,1.343,3,3,3h18c1.657,0,3-1.343,3-3V3C24.001,1.343,22.658,0,21.001,0z M15.151,20.831l-0.089,0.135 c-0.252,0.115-0.653,0.184-1.038,0.184c-1.23,0-2.266-0.474-2.959-1.308c-0.825-0.951-2.051-2.769-3.204-4.824 c-0.664,0-0.912-0.005-1.233-0.021l-0.162-0.012v3.394c0,1.143,0.184,1.451,0.741,1.535l1.104,0.15l0.13,0.15v0.617l-0.156,0.15 c-0.904-0.037-1.808-0.058-2.712-0.063c-0.573,0-1.169,0.015-1.865,0.038L3.01,20.982l-0.154-0.15v-0.618l0.123-0.147l0.806-0.15 c0.564-0.107,0.75-0.409,0.75-1.533V9.99c0-1.124-0.186-1.427-0.747-1.534L2.98,8.305L2.851,8.16V7.542l0.156-0.15 C4.238,7.427,5.47,7.423,6.7,7.381C7.441,7.359,7.885,7.35,8.418,7.35c2.683,0,4.419,1.305,4.419,3.642 c0,1.65-1.251,3.25-2.919,3.737c0.921,1.606,2.078,3.184,3.112,4.317c0.614,0.663,1.329,1.08,1.971,1.08l0.15,0.15V20.831z  M20.392,7.086c0,0.454-0.008,0.67-0.034,0.91C20.335,8.24,20.29,8.48,20.223,8.715c-0.186,0.576-0.483,0.99-0.935,1.299 c-0.45,0.307-1.027,0.473-1.65,0.473c-0.638,0-1.181-0.147-1.626-0.443c-0.448-0.297-0.769-0.74-0.96-1.32 c-0.038-0.112-0.068-0.227-0.09-0.344c-0.055-0.315-0.087-0.633-0.096-0.953c-0.016-0.505-0.016-1.01,0-1.515 c0.011-0.319,0.043-0.638,0.098-0.952c0.022-0.119,0.051-0.233,0.089-0.344c0.192-0.581,0.513-1.023,0.961-1.32 c0.445-0.297,0.99-0.444,1.628-0.444c0.328,0,0.625,0.039,0.892,0.116c0.266,0.078,0.504,0.184,0.713,0.322s0.387,0.297,0.537,0.48 c0.148,0.18,0.27,0.375,0.362,0.571c0.073,0.13,0.045,0.27-0.105,0.36l-0.76,0.311c-0.14,0.078-0.282,0.027-0.351-0.111 c-0.186-0.341-0.318-0.505-0.516-0.63c-0.229-0.147-0.499-0.218-0.771-0.203c-0.345,0-0.504,0.053-0.759,0.233 c-0.237,0.161-0.413,0.399-0.496,0.673c-0.056,0.171-0.09,0.348-0.102,0.528c-0.047,0.779-0.047,1.561,0,2.34 c0.012,0.18,0.046,0.357,0.102,0.528c0.065,0.248,0.222,0.462,0.438,0.6c0.241,0.163,0.527,0.245,0.818,0.235 c0.292,0.008,0.579-0.073,0.825-0.231c0.201-0.136,0.349-0.337,0.418-0.57l0.042-0.146c0.026-0.093,0.047-0.188,0.062-0.284 c0.021-0.13,0.026-0.24,0.026-0.529H17.86l-0.003-0.005c-0.153,0-0.255-0.102-0.255-0.255V6.48c0-0.151,0.102-0.255,0.255-0.255 h2.28c0.151,0,0.255,0.104,0.255,0.255V7.086z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://c5.rgstatic.net/m/428059296771819/images/favicon/favicon.svg\",hex:\"00CCBB\"},ReverbNation:{title:\"ReverbNation\",slug:\"reverbnation\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>ReverbNation icon</title><path d=\"M24 9.324l-9.143-.03L11.971.57 9.143 9.294 0 9.324h.031l7.367 5.355-2.855 8.749h.029l7.459-5.386 7.396 5.386-2.855-8.73L24 9.315\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.reverbnation.com\",hex:\"E43526\"},Riot:{title:\"Riot\",slug:\"riot\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Riot icon</title><path d=\"M5.905 0a3.418 3.418 0 0 0-1.943.628l.011-.007a3.433 3.433 0 0 0-1.345 3.704l-.005-.024v16.266c0 1.9 1.534 3.433 3.433 3.433s3.433-1.533 3.433-3.433v-3.433h1.865l3.768 5.383a3.41 3.41 0 0 0 4.767.85 3.408 3.408 0 0 0 .85-4.766l-2.385-3.407a8.55 8.55 0 0 0 3.135-6.626c0-4.733-3.866-8.566-8.583-8.566h-6.85l-.047.001L5.907 0h-.002zm2.314.868h4.687c4.25.067 7.666 3.567 7.599 7.816a7.708 7.708 0 0 1-2.694 5.735l-.454-.648a6.85 6.85 0 0 0-4.452-12.053H8.913a3.253 3.253 0 0 0-.167-.265l.007.011a3.48 3.48 0 0 0-.532-.592L8.217.869zm1.044 1.7h3.643c3.316 0 6 2.683 6 6a5.983 5.983 0 0 1-2.037 4.505l-.489-.699a5.154 5.154 0 0 0-3.474-8.956H9.372a3.45 3.45 0 0 0-.114-.874l.005.024zm.004 1.717h3.639c2.367.05 4.25 2 4.2 4.383a4.303 4.303 0 0 1-1.255 2.949l-.244-.349a3.51 3.51 0 0 0-.277-.347 3.399 3.399 0 0 0 .927-2.27 3.453 3.453 0 0 0-3.366-3.516H8.922c.143-.245.262-.527.342-.826l.005-.024zM3.49 5.83c.243.249.523.461.832.627l.018.009v14.101c0 .95.767 1.717 1.717 1.717.933 0 1.7-.767 1.716-1.733v-5.133h2.38l.607.867H8.623v4.283a2.568 2.568 0 0 1-5.133 0V5.831zm5.133.154h4.283a2.575 2.575 0 0 1 2.583 2.583c0 .719-.29 1.366-.759 1.833a3.408 3.408 0 0 0-.825-.413 1.7 1.7 0 0 0 .734-1.404c0-.967-.783-1.733-1.733-1.733H9.473v3.45h1.548a3.44 3.44 0 0 0-.945.85H8.623V5.984zm-.867.363v5.671h1.839a3.46 3.46 0 0 0-.2.85H6.906V6.725c.323-.095.605-.224.864-.386l-.014.008zm-2.566.432c.23.055.493.086.764.086l.108-.002h-.005v6.854h3.355c.042.289.117.574.235.85h-2.74v6a.88.88 0 0 1-.85.867.858.858 0 0 1-.867-.85V6.779zm5.133.922h2.567c.483 0 .866.383.866.866s-.367.883-.85.883l-2.583-.017V7.7z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/vector-im/logos/tree/master/riot\",hex:\"368BD6\"},Ripple:{title:\"Ripple\",slug:\"ripple\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Ripple icon</title><path d=\"M20.55 14.65c-.846-.486-1.805-.632-2.752-.666-.79-.023-1.974-.541-1.974-1.985 0-1.072.868-1.94 1.985-1.985.947-.034 1.906-.18 2.752-.666A5.018 5.018 0 0022.4 2.502 5.04 5.04 0 0015.53.674a4.993 4.993 0 00-2.504 4.343c0 .97.35 1.861.79 2.696.372.699.553 1.996-.71 2.73-.948.54-2.132.202-2.719-.745-.496-.801-1.094-1.545-1.94-2.03C6.045 6.28 2.977 7.104 1.6 9.495A5.018 5.018 0 003.44 16.34a5.025 5.025 0 005.008 0c.846-.485 1.444-1.23 1.94-2.03.406-.654 1.433-1.489 2.718-.744.948.541 1.241 1.737.711 2.73-.44.823-.79 1.725-.79 2.695A5.011 5.011 0 0018.034 24a5.011 5.011 0 005.008-5.008 4.982 4.982 0 00-2.492-4.343z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.ripple.com/media-kit/\",hex:\"0085C0\"},Riseup:{title:\"Riseup\",slug:\"riseup\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Riseup icon</title><path d=\"M12.165 5.427s-.353-.685-.377-.78a82.888 82.888 0 0 1-.212-1.061l.236-.425.518-.779.753-.59.189-.07 1.813-.685.165-.165-.188-.284-.26-.141-.475-.122-1.19-.122-.925.01-.636.141-.565-.212-.707-.094L9.268.024 8.75 0l-.872.33L6.56 1.864l-.165.59-.094.52-.448.967-.283.92-.14.992v.212l-.684 1.038-.377.78V8.99l.118 2.29.212.826.424.755.542.495.235.968.895 1.982 1.06 1.275.07.07.377 1.912-1.295 2.36-.353.543-.33.213-.518-.071-.306.118-.353-.023-.236.188-.447-.118-.448-.07-.377.235-.094.401.26-.236.4-.07v.377l.635-.142.354.023.612.142s.542.023.636.023c.094 0 .66.118.66.118h.423l.212.118.306-.047.307.189h.47l.095-.307v-.165l.306.141.235.236.142.26.023-.307-.165-.377s-.117-.213-.212-.213c-.094 0-.447-.118-.447-.118l-.26.071-.258-.142-.283.119-.235-.119-.094-.235-.165-.071.141-.425.424-.968.565-.944.495-.59.188-.236s.236-.354.236-.448c0-.095.047-1.086.047-1.086l-.306-.637-.142-.52 2.732.662h.165l2.332 1.675.33.425.117 1.628-.047.378-.165.307-.188.188-.07.331-.095.165-.448.071-.423-.141-.26-.071h-.494l-.236.188-.117.26.023.283.141-.26.165-.165.142-.023-.024.236.165.142.4-.118h.189l.023.26.566.07.4-.07.306.094.448.118.164-.023.142-.094.141.448.07-.472-.117-.566-.26-.213.095-.354-.212-.401.024-1.487 1.177 1.393 1.555 1.227s1.06.377 1.154.377c.094 0 .824-.094.824-.094l.471-.778-.353-1.062.141-.355-.754-.99-1.596-1.626-.382-1.277.024-.874-.354-.92-.4-.732.235-.731-.188-1.062-.803-1.808.297-.05-.498-.862.323-.103-.569-.927.24-.128-.427-.7.14-.078-.516-.418.188-.098-1.342-.94z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://riseup.net/en/about-us/images\",hex:\"5E9EE3\"},\"rollup.js\":{title:\"rollup.js\",slug:\"rollup-dot-js\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>rollup.js icon</title><path d=\"M3.42 0a.37.37 0 0 0-.369.37v19.516c.577-1.488 1.557-3.617 3.138-6.53 5.7-10.48 6.447-11.537 9.416-11.537 1.56 0 3.134.704 4.152 1.955A7.962 7.962 0 0 0 13.102 0zm12.72 2.544c-1.19.01-2.257.466-2.698 1.498-.967 2.256 1.624 4.767 2.757 4.568 1.442-.255-.255-3.563-.255-3.563 2.205 4.156 1.697 2.884-2.29 6.7S5.596 23.62 5.002 23.958a.477.477 0 0 1-.08.043h15.637a.373.373 0 0 0 .33-.538l-4.088-8.092a.37.37 0 0 1 .144-.488A7.96 7.96 0 0 0 20.95 7.97c0-1.425-.373-2.761-1.03-3.92-.927-.952-2.43-1.516-3.779-1.506z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://rollupjs.org/\",hex:\"EC4A3F\"},Roots:{title:\"Roots\",slug:\"roots\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Roots icon</title><path d=\"M10.285 7.975V4.041c0-.135-.109-.244-.244-.245-.137.001-.245.11-.245.245.007 2.524-.991 4.946-2.775 6.732L1.383 16.43c-.076.076-.095.194-.045.29.262.507.559.995.889 1.46.041.059.106.096.178.103h.021c.065 0 .128-.026.173-.073l5.915-5.938c1.138-1.139 1.776-2.686 1.771-4.297zM17.998.779c-.076-.043-.169-.043-.243 0-.076.045-.123.125-.123.213V11.91c0 1.622.63 3.148 1.774 4.296l1.995 2.007c.046.046.108.073.175.073l.021-.003c.07-.006.137-.044.179-.101 1.448-2.038 2.226-4.476 2.223-6.976-.007-4.295-2.293-8.262-6.001-10.426V.779zM6.367 4.041V.992c0-.086-.045-.168-.119-.213-.076-.045-.17-.045-.246 0C2.292 2.943.008 6.911 0 11.205c0 .342.018.709.057 1.12.01.095.072.177.16.21.027.01.057.014.084.015.064-.001.126-.027.172-.073l4.123-4.138c1.139-1.14 1.775-2.685 1.771-4.296v-.002zm10.614 14.6c-1.784-1.784-2.784-4.207-2.778-6.73V7.975c.001-.136-.109-.247-.244-.248-.136.002-.245.112-.245.248 0 2.543-.986 4.935-2.776 6.732l-5.914 5.937c-.097.096-.098.252-.002.349.01.011.02.02.031.026 2.023 1.455 4.455 2.238 6.947 2.235 2.492.003 4.923-.78 6.947-2.235.059-.042.095-.106.098-.18.009-.07-.016-.144-.067-.195l-1.997-2.003z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://roots.io/\",hex:\"525DDC\"},Roundcube:{title:\"Roundcube\",slug:\"roundcube\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Roundcube icon</title><path d=\"M19.9 8.6c0 1.2-.3 2.3-.7 3.3l.7-.4 3.4-2L20.6 8c-.3-4.5-4-8-8.6-8S3.7 3.5 3.4 8L.7 9.6l3.1 1.8.9.5c-.5-1-.7-2.1-.7-3.3C4 4.2 7.6.7 11.9.7c4.5 0 8 3.5 8 7.9zM.1 17.3L11.7 24v-7.4L.1 9.9zm12.2-.7V24l11.6-6.7V9.9z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://roundcube.net/images/roundcube_logo_icon.svg\",hex:\"37BEFF\"},RSS:{title:\"RSS\",slug:\"rss\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>RSS icon</title><path d=\"M19.199 24C19.199 13.467 10.533 4.8 0 4.8V0c13.165 0 24 10.835 24 24h-4.801zM3.291 17.415c1.814 0 3.293 1.479 3.293 3.295 0 1.813-1.485 3.29-3.301 3.29C1.47 24 0 22.526 0 20.71s1.475-3.294 3.291-3.295zM15.909 24h-4.665c0-6.169-5.075-11.245-11.244-11.245V8.09c8.727 0 15.909 7.184 15.909 15.91z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://en.wikipedia.org/wiki/Feed_icon\",hex:\"FFA500\"},RStudio:{title:\"RStudio\",slug:\"rstudio\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>RStudio icon</title><path d=\"M12.178.002a12.002 12.002 0 0 0-8.662 3.515 12.002 12.002 0 0 0 0 16.97 12.002 12.002 0 0 0 16.97 0 12.002 12.002 0 0 0 0-16.97A12.002 12.002 0 0 0 12.179.002zM7.77 5.995c.562.128 1.05.217 1.663.217.921 0 1.863-.217 2.786-.217 1.79 0 3.45.814 3.45 2.8 0 1.54-.921 2.517-2.35 2.93l2.788 4.107h1.301v1.01h-1.986l-3.293-4.934h-1.757v3.924h1.718v1.01H7.77v-1.01h1.483V7.134L7.77 6.951v-.957zm4.466 1.012c-.596 0-1.213.053-1.864.127v3.798l.941.02c2.298.034 3.183-.85 3.183-2.026 0-1.376-.997-1.919-2.26-1.919z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.rstudio.com/about/logos/\",hex:\"75AADB\"},Ruby:{title:\"Ruby\",slug:\"ruby\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Ruby icon</title><path d=\"M20.156.083c3.033.525 3.893 2.598 3.829 4.77L24 4.822 22.635 22.71 4.89 23.926h.016C3.433 23.864.15 23.729 0 19.139l1.645-3 2.819 6.586.503 1.172 2.805-9.144-.03.007.016-.03 9.255 2.956-1.396-5.431-.99-3.9 8.82-.569-.615-.51L16.5 2.114 20.159.073l-.003.01zM0 19.089v.026-.029.003zM5.13 5.073c3.561-3.533 8.157-5.621 9.922-3.84 1.762 1.777-.105 6.105-3.673 9.636-3.563 3.532-8.103 5.734-9.864 3.957-1.766-1.777.045-6.217 3.612-9.75l.003-.003z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.ruby-lang.org/en/about/logo/\",hex:\"CC342D\"},RubyGems:{title:\"RubyGems\",slug:\"rubygems\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>RubyGems icon</title><path d=\"M7.81 7.9l-2.97 2.95 7.19 7.18 2.96-2.95 4.22-4.23-2.96-2.96v-.01H7.8zM12 0L1.53 6v12L12 24l10.47-6V6L12 0zm8.47 16.85L12 21.73l-8.47-4.88V7.12L12 2.24l8.47 4.88v9.73z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://rubygems.org/pages/about\",hex:\"E9573F\"},Runkeeper:{title:\"Runkeeper\",slug:\"runkeeper\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Runkeeper icon</title><path d=\"M13.475 16.634c1.887-.257 3.258-1.114 4.537-2.57 1.5-1.757 1.93-4.112 1.327-6.34-.6-2.143-2.31-3.814-4.54-4.116-2.757-.426-5.618.9-7.638 2.704-.045.04-.165.126-.21.21-.21-.384-.482-.77-.77-1.07-.385-.557-1.24-1.458-1.285-1.5-.17-.214-.47-.257-.64-.342-.527-.113-.888-.29-1.114-.42-.012-.018-.027-.034-.045-.054L.914.824C.7.65.44.61.227.824c-.17.214-.214.472 0 .686L2.37 3.824l.02.02.03-.002c.077.136.348.362.453.83.045.21.166.466.377.767 0 0 1.506 1.625 2.108 2.725.558 1.114.693 1.46.768 1.67 0 .03-.557-.646-1.204-1.113-2.485 2.83-4.293 6.22-4.82 9.894-.557 3.765 1.506 4.76 3.043 4.714 1.234 0 3.81-1.325 5.18-4.623C9.65 15.5 9.44 11.81 8.1 8.6c1.28-1.294 3.644-2.83 5.948-2.785 1.716 0 2.575 1.49 2.696 1.627 1.324 2.394-.227 4.548-.227 4.548-.858 1.295-2.35 1.898-3.133 2.107-.587.166-1.702.12-1.973 0-.164-.045-.21-.136-.21-.256 0-.18.136-.255.256-.255.166 0 .256.12.256.256v.138c.437.12 1.28.03 1.627 0-.272-.644-.86-.987-1.643-.987h-.036c-1.01.008-1.823.833-1.815 1.844 0 .77.437 1.415 1.07 1.67.332.13 1.326.258 2.56.13zm-6.82-.427c-.86 3.772-3.256 5.1-3.9 4.884-.642-.213-.856-2.1.428-5.27.216-.47 1.5-3.427 3.172-5.27-.045.086.943 2.872.3 5.657zM23.186 16.938L24 13.85c.03-.256-.09-.557-.348-.6-.256-.043-.557.088-.586.344l-.81 2.977h-.095c-.017.022-.03.044-.044.066-.12.214-.346.558-.678.814-.256.214-.377.47-.377.47-.12.128-.978 2.83-3.673 2.957-3.18.128-3.81-3.427-3.855-3.727-.678.127-2.048-.174-2.606-.43.166 1.97 1.115 4.327 2.786 5.442 1.928 1.328 4.926 1.328 6.988 0 1.19-.815 1.973-1.843 2.484-3.172l.045-.11.015-.033c.016-.037.016-.074.046-.113v-.045c-.03 0 0-.257-.075-.513-.164-.683-.03-1.113-.03-1.24z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://runkeeper.com/partnerships\",hex:\"2DC9D7\"},Rust:{title:\"Rust\",slug:\"rust\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Rust icon</title><path d=\"M23.687 11.709l-.995-.616a13.559 13.559 0 0 0-.028-.29l.855-.797a.344.344 0 0 0-.114-.571l-1.093-.409a8.392 8.392 0 0 0-.086-.282l.682-.947a.342.342 0 0 0-.223-.538l-1.152-.187a9.243 9.243 0 0 0-.139-.259l.484-1.063c.05-.108.039-.234-.027-.332s-.178-.156-.297-.152l-1.17.041a6.662 6.662 0 0 0-.185-.224l.269-1.139a.343.343 0 0 0-.412-.412l-1.139.269a13.847 13.847 0 0 0-.225-.185l.041-1.17a.34.34 0 0 0-.484-.324l-1.063.485c-.086-.047-.172-.094-.259-.139l-.188-1.153a.344.344 0 0 0-.538-.223l-.948.682a8.383 8.383 0 0 0-.282-.085L14.562.596a.344.344 0 0 0-.571-.114l-.797.856a9.18 9.18 0 0 0-.29-.028l-.616-.995a.342.342 0 0 0-.582 0l-.616.995c-.097.008-.194.018-.29.028l-.798-.856a.342.342 0 0 0-.571.114l-.409 1.093c-.095.027-.188.056-.282.085l-.947-.682a.344.344 0 0 0-.538.223l-.188 1.153a9.243 9.243 0 0 0-.259.139l-1.063-.485a.342.342 0 0 0-.484.324l.041 1.17c-.076.06-.151.122-.225.185l-1.139-.269a.343.343 0 0 0-.412.412l.268 1.139c-.062.074-.124.149-.184.224l-1.17-.041a.342.342 0 0 0-.324.484l.485 1.063a9.055 9.055 0 0 0-.139.259l-1.152.187a.344.344 0 0 0-.223.538l.682.947c-.03.094-.058.187-.086.282L.59 9.435a.344.344 0 0 0-.114.571l.855.797a9.18 9.18 0 0 0-.028.29l-.995.616a.34.34 0 0 0 0 .582l.995.616c.008.097.018.194.028.29l-.855.798a.342.342 0 0 0 .114.571l1.093.409c.027.095.056.189.086.282l-.682.947a.341.341 0 0 0 .224.538l1.152.187c.045.087.091.173.139.259l-.485 1.063a.342.342 0 0 0 .324.484l1.169-.041c.061.076.122.151.185.225l-.268 1.14a.342.342 0 0 0 .412.411l1.139-.268c.074.063.149.124.225.184l-.041 1.17a.34.34 0 0 0 .484.323l1.063-.484c.086.048.172.094.259.139l.188 1.152a.344.344 0 0 0 .538.224l.947-.682c.094.03.187.059.282.086l.409 1.093a.341.341 0 0 0 .571.114l.798-.855c.096.011.193.02.29.029l.616.995a.343.343 0 0 0 .582 0l.616-.995c.097-.009.194-.018.29-.029l.797.855a.344.344 0 0 0 .571-.114l.409-1.093c.095-.027.189-.056.282-.086l.947.682a.341.341 0 0 0 .538-.224l.188-1.152c.087-.045.173-.092.259-.139l1.063.484a.343.343 0 0 0 .484-.323l-.041-1.17c.076-.06.151-.121.224-.184l1.139.268a.343.343 0 0 0 .412-.411l-.268-1.14c.062-.074.124-.149.184-.225l1.17.041a.34.34 0 0 0 .324-.484l-.484-1.063c.047-.086.094-.172.139-.259l1.152-.187a.344.344 0 0 0 .223-.538l-.682-.947.086-.282 1.093-.409a.342.342 0 0 0 .114-.571l-.855-.798c.01-.096.02-.193.028-.29l.995-.616a.34.34 0 0 0 0-.582zm-6.659 8.253a.705.705 0 0 1 .295-1.379.705.705 0 1 1-.296 1.379zm-.338-2.286a.641.641 0 0 0-.762.494l-.353 1.648c-1.09.495-2.3.77-3.575.77a8.63 8.63 0 0 1-3.65-.804l-.353-1.648a.64.64 0 0 0-.762-.493l-1.455.312a8.615 8.615 0 0 1-.752-.887h7.08c.08 0 .134-.014.134-.087v-2.505c0-.073-.053-.087-.134-.087h-2.071v-1.588h2.24c.204 0 1.093.058 1.377 1.194.089.349.284 1.486.418 1.85.133.408.675 1.223 1.253 1.223h3.528a.74.74 0 0 0 .128-.013 8.68 8.68 0 0 1-.802.941l-1.489-.32zm-9.793 2.252a.705.705 0 1 1-.296-1.379.705.705 0 0 1 .296 1.379zM4.211 9.036a.705.705 0 1 1-1.288.572.705.705 0 0 1 1.288-.572zm-.825 1.957l1.516-.674a.642.642 0 0 0 .326-.848l-.312-.706h1.228v5.534H3.667a8.668 8.668 0 0 1-.28-3.307zm6.652-.537V8.825h2.924c.151 0 1.066.175 1.066.859 0 .568-.702.772-1.279.772h-2.711zm10.626 1.468c0 .216-.008.431-.024.643h-.889c-.089 0-.125.058-.125.146v.408c0 .961-.542 1.17-1.017 1.223-.452.051-.953-.189-1.015-.466-.267-1.5-.711-1.821-1.413-2.374.871-.553 1.777-1.369 1.777-2.461 0-1.179-.809-1.922-1.36-2.287-.773-.51-1.629-.612-1.86-.612H5.545a8.658 8.658 0 0 1 4.847-2.736l1.084 1.137a.64.64 0 0 0 .907.021l1.212-1.16a8.668 8.668 0 0 1 5.931 4.224l-.83 1.875a.644.644 0 0 0 .326.848l1.598.71c.028.284.042.57.042.861zm-9.187-9.482a.703.703 0 1 1 .972 1.019.705.705 0 0 1-.972-1.019zm8.237 6.628c.157-.356.573-.516.928-.358a.705.705 0 1 1-.929.359z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.rust-lang.org/\",hex:\"000000\"},Safari:{title:\"Safari\",slug:\"safari\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Safari icon</title><path d=\"M12 24C5.373 24 0 18.627 0 12S5.373 0 12 0s12 5.373 12 12-5.373 12-12 12zm0-.75c6.213 0 11.25-5.037 11.25-11.25S18.213.75 12 .75.75 5.787.75 12 5.787 23.25 12 23.25zM12 2a.25.25 0 0 1 .25.25v1a.25.25 0 1 1-.5 0v-1A.25.25 0 0 1 12 2zm0 18.5a.25.25 0 0 1 .25.25v1a.25.25 0 1 1-.5 0v-1a.25.25 0 0 1 .25-.25zm7.071-15.571a.25.25 0 0 1 0 .353l-.707.708a.25.25 0 0 1-.354-.354l.708-.707a.25.25 0 0 1 .353 0zM5.99 18.01a.25.25 0 0 1 0 .354l-.708.707a.25.25 0 1 1-.353-.353l.707-.708a.25.25 0 0 1 .354 0zM4.929 4.93a.25.25 0 0 1 .353 0l.708.707a.25.25 0 0 1-.354.354l-.707-.708a.25.25 0 0 1 0-.353zM18.01 18.01a.25.25 0 0 1 .354 0l.707.708a.25.25 0 1 1-.353.353l-.708-.707a.25.25 0 0 1 0-.354zM2 12a.25.25 0 0 1 .25-.25h1a.25.25 0 1 1 0 .5h-1A.25.25 0 0 1 2 12zm18.5 0a.25.25 0 0 1 .25-.25h1a.25.25 0 1 1 0 .5h-1a.25.25 0 0 1-.25-.25zm-4.593-9.205a.25.25 0 0 1 .133.328l-.391.92a.25.25 0 1 1-.46-.195l.39-.92a.25.25 0 0 1 .328-.133zM8.68 19.825a.25.25 0 0 1 .132.327l-.39.92a.25.25 0 0 1-.46-.195l.39-.92a.25.25 0 0 1 .328-.133zM21.272 8.253a.25.25 0 0 1-.138.325l-.927.375a.25.25 0 1 1-.188-.464l.927-.374a.25.25 0 0 1 .326.138zm-17.153 6.93a.25.25 0 0 1-.138.326l-.927.374a.25.25 0 1 1-.188-.463l.927-.375a.25.25 0 0 1 .326.138zM8.254 2.728a.25.25 0 0 1 .325.138l.375.927a.25.25 0 0 1-.464.188l-.374-.927a.25.25 0 0 1 .138-.326zm6.93 17.153a.25.25 0 0 1 .326.138l.374.927a.25.25 0 1 1-.463.188l-.375-.927a.25.25 0 0 1 .138-.326zM2.795 8.093a.25.25 0 0 1 .328-.133l.92.391a.25.25 0 0 1-.195.46l-.92-.39a.25.25 0 0 1-.133-.328zm17.03 7.228a.25.25 0 0 1 .327-.132l.92.39a.25.25 0 1 1-.195.46l-.92-.39a.25.25 0 0 1-.133-.328zM12.879 12.879L11.12 11.12l-4.141 5.9 5.899-4.142zm6.192-7.95l-5.834 8.308-8.308 5.834 5.834-8.308 8.308-5.834z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://images.techhive.com/images/article/2014/11/safari-favorites-100530680-large.jpg\",hex:\"000000\"},Sahibinden:{title:\"Sahibinden\",slug:\"sahibinden\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Sahibinden icon</title><path d=\"M0 0v24h24V0zm11.517 4.723c.563-.007 1.13-.004 1.69.063 2.412.054 4.853 2.18 4.879 4.508h-3.319c.009-.694-.603-1.555-1.279-1.732-1.105-.269-2.46-.355-3.43.294-.738.445-1.065 1.672-.095 2.056 2.288 1.083 5.158.846 7.224 2.372 1.698 1.21 1.598 3.666.274 5.086-1.718 1.84-4.636 2.132-7.099 1.782-2.448-.117-4.755-2.245-4.819-4.562h3.311c-.056.832.638 1.557 1.46 1.822 1.27.275 2.726.358 3.93-.19.96-.323 1.024-1.544.284-2.103-1.595-.897-3.565-.924-5.297-1.518-2.012-.39-3.643-2.278-3.26-4.197.424-2.342 3.127-3.727 5.546-3.681z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.sahibinden.com/favicon.ico\",hex:\"FFE800\"},Salesforce:{title:\"Salesforce\",slug:\"salesforce\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Salesforce icon</title><path d=\"M10.005 5.416c.75-.796 1.845-1.306 3.046-1.306 1.56 0 2.954.9 3.689 2.205.63-.3 1.35-.45 2.101-.45 2.849 0 5.159 2.34 5.159 5.22s-2.311 5.22-5.176 5.22c-.345 0-.689-.044-1.02-.104-.645 1.17-1.875 1.95-3.3 1.95-.6 0-1.155-.15-1.65-.375-.659 1.546-2.189 2.624-3.975 2.624-1.859 0-3.45-1.169-4.05-2.819-.27.061-.54.075-.825.075-2.204 0-4.005-1.8-4.005-4.05 0-1.5.811-2.805 2.01-3.51-.255-.57-.39-1.2-.39-1.846 0-2.58 2.1-4.649 4.65-4.649 1.53 0 2.85.704 3.72 1.8\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.salesforce.com/\",hex:\"00A1E0\"},SaltStack:{title:\"SaltStack\",slug:\"saltstack\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>SaltStack icon</title><path d=\"M6.396 0L1.05.002v5.346h5.347V0zm5.94 2.697c-1.033 0-1.959.1-2.791.291v3.783c.645-.374 1.471-.568 2.5-.568 1.001 0 1.838.17 2.514.508 1.01.512 1.555 1.375 1.629 2.59h4.056c-.073-2.147-.874-3.783-2.394-4.912-1.522-1.127-3.36-1.692-5.514-1.692zM4.496 8.51c-.01.16-.023.322-.023.488 0 1.982.679 3.438 2.04 4.371.806.558 2.281 1.072 4.43 1.547l2.186.482c1.28.274 2.215.589 2.805.946.59.365.884.882.884 1.549 0 1.142-.603 1.922-1.806 2.341-.635.22-1.458.33-2.475.33-1.697 0-2.896-.417-3.596-1.248-.382-.457-.638-1.147-.767-2.07h-4.03c0 2.102.762 3.754 2.286 4.955C7.953 23.402 10.042 24 12.7 24c2.603 0 4.619-.609 6.045-1.828 1.427-1.22 2.14-2.751 2.14-4.596 0-1.8-.601-3.173-1.804-4.125-.776-.611-1.94-1.102-3.494-1.467l-3.543-.836c-1.367-.319-2.264-.596-2.686-.835-.655-.356-.982-.894-.982-1.616 0-.065.017-.124.021-.187H4.496zM21.92 21.844a1.077 1.077 0 000 2.152 1.077 1.077 0 000-2.152zm-.014.177a.898.898 0 01.014 0 .898.898 0 010 1.793.898.898 0 01-.014-1.793zm-.42.258v1.272h.221v-.49h.248l.256.49h.234v-.01l-.285-.531a.392.392 0 00.174-.133.356.356 0 00.06-.213.42.42 0 00-.033-.166.31.31 0 00-.088-.121.4.4 0 00-.144-.074.695.695 0 00-.195-.024h-.448zm.221.178h.227a.338.338 0 01.107.016.174.174 0 01.117.109.266.266 0 010 .176.175.175 0 01-.047.066.21.21 0 01-.072.045.314.314 0 01-.105.016h-.227v-.428z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.saltstack.com/resources/brand/\",hex:\"00EACE\"},Samsung:{title:\"Samsung\",slug:\"samsung\",svg:'<svg xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" viewBox=\"0 0 24 24\"><title>Samsung icon</title><path d=\"M19.8166 10.2808l.0459 2.6934h-.023l-.7793-2.6934h-1.2837v3.3925h.8481l-.0458-2.785h.023l.8366 2.785h1.2264v-3.3925zm-16.149 0l-.6418 3.427h.9284l.4699-3.1175h.0229l.4585 3.1174h.9169l-.6304-3.4269zm5.1805 0l-.424 2.6132h-.023l-.424-2.6132H6.5788l-.0688 3.427h.8596l.023-3.0832h.0114l.573 3.0831h.8711l.5731-3.083h.023l.0228 3.083h.8596l-.0802-3.4269zm-7.2664 2.4527c.0343.0802.0229.1949.0114.2522-.0229.1146-.1031.2292-.3324.2292-.2177 0-.3438-.126-.3438-.3095v-.3323H0v.2636c0 .7679.6074.9971 1.2493.9971.6189 0 1.1346-.2178 1.2149-.7794.0458-.298.0114-.4928 0-.5616-.1605-.722-1.467-.9283-1.5588-1.3295-.0114-.0688-.0114-.1375 0-.1834.023-.1146.1032-.2292.3095-.2292.2063 0 .321.126.321.3095v.2063h.8595v-.2407c0-.745-.6762-.8596-1.1576-.8596-.6074 0-1.1117.2063-1.2034.7564-.023.149-.0344.2866.0114.4585.1376.7106 1.364.9169 1.5358 1.3524m11.152 0c.0343.0803.0228.1834.0114.2522-.023.1146-.1032.2292-.3324.2292-.2178 0-.3438-.126-.3438-.3095v-.3323h-.917v.2636c0 .7564.596.9857 1.2379.9857.6189 0 1.1232-.2063 1.2034-.7794.0459-.298.0115-.4814 0-.5616-.1375-.7106-1.4327-.9284-1.5243-1.318-.0115-.0688-.0115-.1376 0-.1835.0229-.1146.1031-.2292.3094-.2292.1948 0 .321.126.321.3095v.2063h.848v-.2407c0-.745-.6647-.8596-1.146-.8596-.6075 0-1.1004.1948-1.192.7564-.023.149-.023.2866.0114.4585.1376.7106 1.341.9054 1.513 1.3524m2.8882.4585c.2407 0 .3094-.1605.3323-.2522.0115-.0343.0115-.0917.0115-.126v-2.533h.871v2.4642c0 .0688 0 .1948-.0114.2292-.0573.6419-.5616.8482-1.192.8482-.6303 0-1.1346-.2063-1.192-.8482 0-.0344-.0114-.1604-.0114-.2292v-2.4642h.871v2.533c0 .0458 0 .0916.0115.126 0 .0917.0688.2522.3095.2522m7.1518-.0344c.2522 0 .3324-.1605.3553-.2522.0115-.0343.0115-.0917.0115-.126v-.4929h-.3553v-.5043H24v.917c0 .0687 0 .1145-.0115.2292-.0573.6303-.596.8481-1.2034.8481-.6075 0-1.1461-.2178-1.2034-.8481-.0115-.1147-.0115-.1605-.0115-.2293v-1.444c0-.0574.0115-.172.0115-.2293.0802-.6419.596-.8482 1.2034-.8482s1.1347.2063 1.2034.8482c.0115.1031.0115.2292.0115.2292v.1146h-.8596v-.1948s0-.0803-.0115-.1261c-.0114-.0802-.0802-.2521-.3438-.2521-.2521 0-.321.1604-.3438.2521-.0115.0458-.0115.1032-.0115.1605v1.5702c0 .0458 0 .0916.0115.126 0 .0917.0917.2522.3323.2522\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.samsung.com/us\",hex:\"1428A0\"},\"Samsung Pay\":{title:\"Samsung Pay\",slug:\"samsungpay\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Samsung Pay icon</title><path d=\"M23.978 10.702c-.133-3.828-1.139-6.909-3.408-8.592S14.89-.157 10.604.047C8.658.141 6.902.394 5.477.964c-1.47.59-2.606 1.421-3.437 2.578C.369 5.867-.148 9.377.035 13.422c.174 3.84 1.169 6.878 3.465 8.535 2.284 1.647 5.996 2.17 9.909 2.005 3.798-.16 6.883-1.167 8.535-3.466 1.649-2.295 2.175-5.683 2.034-9.794zM6.602 14.77h-.495v-1.063h.495c.946 0 1.636-.732 1.636-1.636 0-.903-.732-1.636-1.636-1.636H5.003a.13.13 0 0 0-.124.093v5.802h-1.03v-5.802c0-.638.517-1.155 1.155-1.155h1.599c1.49 0 2.725 1.208 2.725 2.698S8.175 14.77 6.602 14.77zm8.702.001H14.26v-2.78c-.021-.784-.853-1.565-1.739-1.565-.996 0-1.729.85-1.729 1.646 0 1.126.794 1.641 1.729 1.641h.368v1.058h-.368c-1.538-.001-2.785-.985-2.785-2.699 0-1.398 1.247-2.699 2.785-2.699 1.389 0 2.739 1.165 2.783 2.618v2.78zm1.324-5.221l1.361 2.788-.592 1.203-1.949-3.99h1.18zm1.261 6.971h-1.181l3.426-6.971h1.181l-3.426 6.971z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://pay.samsung.com/developers/resource/brand\",hex:\"1428A0\"},SAP:{title:\"SAP\",slug:\"sap\",svg:'<svg xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" viewBox=\"0 0 24 24\"><title>SAP icon</title><path d=\"M0 6.064v11.872h12.13L24 6.064zm3.264 2.208h.005c.863.001 1.915.245 2.676.633l-.82 1.43c-.835-.404-1.255-.442-1.73-.467-.708-.038-1.064.215-1.069.488-.007.332.669.633 1.305.838.964.306 2.19.715 2.377 1.9L7.77 8.437h2.046l2.064 5.576-.007-5.575h2.37c2.257 0 3.318.764 3.318 2.519 0 1.575-1.09 2.514-2.936 2.514h-.763l-.01 2.094-3.588-.003-.25-.908c-.37.122-.787.189-1.23.189-.456 0-.885-.071-1.263-.2l-.358.919-2 .006.09-.462c-.029.025-.057.05-.087.074-.535.43-1.208.629-2.037.644l-.213.002a5.075 5.075 0 0 1-2.581-.675l.73-1.448c.79.467 1.286.572 1.956.558.347-.007.598-.07.761-.239a.557.557 0 0 0 .156-.369c.007-.376-.53-.553-1.185-.756-.531-.164-1.135-.389-1.606-.735-.559-.41-.825-.924-.812-1.65a1.99 1.99 0 0 1 .566-1.377c.519-.537 1.357-.863 2.363-.863zm10.597 1.67v1.904h.521c.694 0 1.247-.23 1.248-.964 0-.709-.554-.94-1.248-.94zm-5.087.767l-.748 2.362c.223.085.481.133.757.133.268 0 .52-.047.742-.126l-.736-2.37z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://support.sap.com/content/dam/support/sap-logo.svg\",hex:\"008FD3\"},Sass:{title:\"Sass\",slug:\"sass\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Sass icon</title><path d=\"M12 0c6.627 0 12 5.373 12 12s-5.373 12-12 12S0 18.627 0 12 5.373 0 12 0zM9.615 15.998c.175.645.156 1.248-.024 1.792l-.065.18c-.024.061-.052.12-.078.176-.14.29-.326.56-.555.81-.698.759-1.672 1.047-2.09.805-.45-.262-.226-1.335.584-2.19.871-.918 2.12-1.509 2.12-1.509v-.003l.108-.061zm9.911-10.861c-.542-2.133-4.077-2.834-7.422-1.645-1.989.707-4.144 1.818-5.693 3.267C4.568 8.48 4.275 9.98 4.396 10.607c.427 2.211 3.457 3.657 4.703 4.73v.006c-.367.18-3.056 1.529-3.686 2.925-.675 1.47.105 2.521.615 2.655 1.575.436 3.195-.36 4.065-1.649.84-1.261.766-2.881.404-3.676.496-.135 1.08-.195 1.83-.104 2.101.24 2.521 1.56 2.43 2.1-.09.539-.523.854-.674.944-.15.091-.195.12-.181.181.015.09.091.09.21.075.165-.03 1.096-.45 1.141-1.471.045-1.29-1.186-2.729-3.375-2.7-.9.016-1.471.091-1.875.256-.03-.045-.061-.075-.105-.105-1.35-1.455-3.855-2.475-3.75-4.41.03-.705.285-2.564 4.8-4.814 3.705-1.846 6.661-1.335 7.171-.21.733 1.604-1.576 4.59-5.431 5.024-1.47.165-2.235-.404-2.431-.615-.209-.225-.239-.24-.314-.194-.12.06-.045.255 0 .375.12.3.585.825 1.396 1.095.704.225 2.43.359 4.5-.45 2.324-.899 4.139-3.405 3.614-5.505l.073.067z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://sass-lang.com/styleguide/brand\",hex:\"CC6699\"},\"Sauce Labs\":{title:\"Sauce Labs\",slug:\"saucelabs\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Sauce Labs icon</title><path d=\"M2.93 15.475l6.396.004-3.582 6.758C2.178 20.057.002 16.18 0 12 0 5.383 5.383 0 12 0c1.761 0 3.436.381 4.94 1.064L5.428 12.58h10.25l-7.539 7.614 3.115-5.876H3.795C3.455 13.164 3.477 12 3.477 12c.006-4.713 3.831-8.529 8.544-8.523.093 0 .187.002.28.005l1.094-1.099c-.455-.065-.915-.098-1.375-.098-5.356 0-9.73 4.357-9.73 9.715-.001 0-.061 1.719.64 3.475zM18.255 1.764C21.82 3.943 23.997 7.82 24 12c0 6.616-5.384 12-12 12-1.704.003-3.389-.36-4.941-1.065l11.426-11.513H8.205l7.656-7.616-3.115 5.876h7.46c.319 1.079.319 2.318.319 2.318-.008 4.714-3.834 8.529-8.547 8.522-.105 0-.21-.002-.314-.006l-1.084 1.096c5.314.777 10.256-2.901 11.032-8.218.067-.461.103-.928.103-1.395 0-1.189-.22-2.369-.647-3.479h-6.394l3.581-6.756z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://saucelabs.com/\",hex:\"E2231A\"},Scala:{title:\"Scala\",slug:\"scala\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Scala icon</title><path d=\"M4.589 24c4.537 0 13.81-1.516 14.821-3v-5.729c-.957 1.408-10.284 2.912-14.821 2.912V24zM4.589 16.365c4.537 0 13.81-1.516 14.821-3V7.636c-.957 1.408-10.284 2.912-14.821 2.912v5.817zM4.589 8.729c4.537 0 13.81-1.516 14.821-3V0C18.453 1.408 9.126 2.912 4.589 2.912v5.817z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.scala-lang.org/\",hex:\"DC322F\"},Scaleway:{title:\"Scaleway\",slug:\"scaleway\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Scaleway icon</title><path d=\"M16.61 11.11v5.72a1.77 1.77 0 0 1-1.54 1.69h-4a1.43 1.43 0 0 1-1.31-1.22 1.09 1.09 0 0 1 0-.18 1.37 1.37 0 0 1 1.37-1.36h1.74a1 1 0 0 0 1-1v-3.62a1.4 1.4 0 0 1 1.18-1.39h.17a1.37 1.37 0 0 1 1.39 1.36zm-6.46 1.74V9.26a1 1 0 0 1 1-1H13a1.37 1.37 0 0 0 1.37-1.37 1 1 0 0 0 0-.17 1.45 1.45 0 0 0-1.41-1.2H9a1.81 1.81 0 0 0-1.58 1.66v5.7a1.37 1.37 0 0 0 1.37 1.37H9a1.4 1.4 0 0 0 1.15-1.4zm12-4.29V20A4.53 4.53 0 0 1 18 24h-7.58a8.57 8.57 0 0 1-8.56-8.57V4.54A4.54 4.54 0 0 1 6.4 0h7.18a8.56 8.56 0 0 1 8.56 8.56zm-2.74 0a5.83 5.83 0 0 0-5.82-5.82H6.4a1.79 1.79 0 0 0-1.8 1.8v10.89a5.83 5.83 0 0 0 5.82 5.8h7.44a1.79 1.79 0 0 0 1.54-1.48z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.scaleway.com\",hex:\"4F0599\"},Scribd:{title:\"Scribd\",slug:\"scribd\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Scribd icon</title><path d=\"M14.839 21.059c0-2.123 1.572-3.939 3.543-4.307-.094-1.973-.924-3.328-2.219-4.343-1.305-1.016-3.121-1.785-5.088-2.557-2.13-.832-3.721-1.569-3.721-3.172 0-1.352 1.17-2.369 3.137-2.369 1.201 0 1.974.185 2.371.399 0 .093-.029.216-.09.309-.061.123-.09.276-.09.493 0 1.354.983 2.555 2.738 2.555 1.602 0 2.555-1.201 2.555-2.957 0-1.477-.832-2.77-2.188-3.663C14.409.555 12.487 0 10.312 0 8.06.155 6.123.985 4.77 2.217 3.415 3.447 2.615 5.111 2.615 7.08c0 2.187.77 3.603 2.031 4.683 1.262 1.077 3.078 1.846 5.265 2.616 2.372.764 3.757 1.561 3.757 3.137 0 1.59-1.385 2.551-3.572 2.551-1.141 0-2.124-.193-2.957-.764.219-.406.219-.813.219-1.201 0-1.143-1.006-2.568-2.764-2.568-1.56 0-2.73 1.201-2.73 2.957 0 1.471.93 2.867 2.445 3.844C5.794 23.354 7.88 24 10.132 24c1.982 0 3.768-.375 5.148-1.365-.21-.406-.39-.992-.39-1.607l-.051.031zm7.299 0c0 1.572-1.275 2.773-2.777 2.773-1.5 0-2.746-1.201-2.746-2.771 0-1.5 1.23-2.732 2.73-2.732 1.502 0 2.764 1.232 2.764 2.748l.029-.018z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.scribd.com\",hex:\"1A7BBA\"},\"Scrutinizer CI\":{title:\"Scrutinizer CI\",slug:\"scrutinizerci\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Scrutinizer CI icon</title><path d=\"M14.86 0L6.877.06a6.139 6.127 0 0 0-3.744 2.508 6.36 6.36 0 0 0-1.357 2.64l-.12.553-.119.857c-.06.799-.06 1.351.12 1.471h5.275c.06 0-.186-.246-.186-.672 0-.738.252-.924.552-1.23.552-.426 2.945-.12 4.728-.246 2.448 0 4.602-.06 4.848-.12 2.7-.427 5.03-2.388 5.522-4.536.12-.547.12-1.105.06-1.165C22.396 0 21.417 0 14.858 0zM9.192 9.007c-3.758-.015-7.47 0-7.53.06-.126.126-.06.798.06 1.35a5.64 5.64 0 0 0 1.843 2.761 7.549 7.549 0 0 0 3.312 1.59c.366.126 1.044.126 4.597.126 4.236 0 4.915.06 5.22.24a1.842 1.836 0 0 1 .372.372c.18.24.181.307.181.979 0 .672-.066.732-.186 1.044a1.47 1.47 0 0 1-.426.366c-.186.12-.307.119-4.357.179-4.67 0-5.155 0-6.319.432a6.445 6.433 0 0 0-2.46 1.35c-1.164 1.039-1.842 2.203-1.962 3.428l.06.611a283.022 282.613 0 0 0 15.404 0l.492-.12a4.543 4.537 0 0 0 .737-.245l.367-.18a7.735 7.723 0 0 0 3.499-4.297 8.407 8.395 0 0 0-.373-6.061 8.527 8.521 0 0 0-2.328-2.88 6.937 6.925 0 0 0-2.394-.984c-.246-.06-4.051-.106-7.81-.121z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://scrutinizer-ci.com\",hex:\"8A9296\"},Seagate:{title:\"Seagate\",slug:\"seagate\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Seagate icon</title><path d=\"M8.315 1.735c.277-.166.554-.333.831-.443.111.277.277.554.388.83-.61.333-1.219.61-1.772.997-8.149 4.948-6.9 10.574-3.379 11.077 2.399.45 5.343-1.094 7.422-2.326 1.575-.985 2.99-1.926 2.99-3.046 0-.713-.824-1.053-1.495-.942-2.167.542-5.07 3.545-7.477 3.545-1.097 0-1.895-.842-1.772-1.828.154-1.843 1.891-3.229 3.49-4.154 2.585-1.696 6.02-3.199 9.082-3.046 7.647.264 12.227 9.815-.997 18.167-1.501.948-3.92 1.99-4.43 2.16-.222-.997-.554-1.994-.776-2.991 2.421-1.14 3.145-1.281 5.816-3.323 2.243-1.795 4.4-3.917 4.763-6.813.055-.664.055-1.274-.111-1.938-.901-3.09-5.07-6.275-12.905-1.052-.815.475-2.16 1.436-2.16 2.381 0 .222.166.499.388.554 1.204.516 3.881-2.192 6.535-3.102 2.08-.734 4.175.047 4.542 1.884.055.498.055.996-.11 1.44-.594 1.541-2.025 2.658-3.49 3.6-1.53.842-3.087 2.042-6.48 2.935-2.315.631-5.267.29-6.48-1.772-.499-.776-.72-1.717-.72-2.603.055-1.053.277-2.105.72-3.047.775-1.606 1.938-3.046 3.323-4.209a23.121 23.121 0 0 1 4.32-2.99z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.seagate.com\",hex:\"72BE4F\"},Sega:{title:\"Sega\",slug:\"sega\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Sega icon</title><path d=\"M21.229 4.14l-.006 3.33h-10.6c-.219 0-.397.181-.397.399 0 .221.18.399.397.399l2.76-.016c4.346 0 7.868 3.525 7.868 7.869 0 4.348-3.522 7.869-7.869 7.869L2.748 24l.005-3.375h10.635c2.487 0 4.504-2.016 4.504-4.504 0-2.49-2.017-4.506-4.506-4.506l-2.771-.03c-2.06 0-3.727-1.666-3.727-3.72 0-2.061 1.666-3.726 3.723-3.726h10.618zM2.763 19.843l-.004-3.331h10.609c.21 0 .383-.175.383-.387 0-.213-.173-.385-.384-.385h-2.744c-4.345 0-7.867-3.525-7.867-7.871S6.278 0 10.623 0l10.6.003.006 3.35-10.604.003c-2.49 0-4.5 2.019-4.5 4.507 0 2.489 2.024 4.504 4.515 4.504l2.775.03c2.055 0 3.72 1.668 3.72 3.724 0 2.055-1.665 3.719-3.72 3.719H2.765l-.002.003z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://en.wikipedia.org/wiki/Sega#/media/File:Sega_logo.svg\",hex:\"0089CF\"},Sellfy:{title:\"Sellfy\",slug:\"sellfy\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Sellfy icon</title><path d=\"M23.179.818C15.533-.273 8.406-.273.8.818-.266 8.377-.266 15.424.8 22.946 4.511 23.491 8.22 24 12.005 24c3.748 0 7.459-.51 11.17-1.017 1.1-7.56 1.1-14.607 0-22.165h.004zm-11.54 18.314c-2.055 0-4.226-.689-5.179-1.199l.807-3.126c1.064.705 2.682 1.395 4.446 1.395 1.395 0 2.24-.436 2.24-1.305 0-.615-.435-.975-1.575-1.26l-2.279-.631c-2.416-.66-3.557-1.891-3.557-3.855 0-2.365 1.83-4.256 5.619-4.256 1.99 0 3.973.545 5.07 1.092l-.951 2.976c-1.104-.615-2.79-1.125-4.226-1.125-1.365 0-1.95.436-1.95 1.092 0 .619.404.87 1.291 1.092l2.488.734c2.566.736 3.707 1.966 3.707 3.885-.076 2.701-2.461 4.517-5.957 4.517l.006-.026z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://sellfy.com/about/\",hex:\"21B352\"},\"Semaphore CI\":{title:\"Semaphore CI\",slug:\"semaphoreci\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Semaphore CI icon</title><path d=\"M21.864 5.266a.595.595 0 01.61.257s.467.76.744 1.365c.275.604.542 1.453.542 1.453a.592.592 0 01-.208.628l-1.505 1.073a.757.757 0 00-.284.646s.084.573.096 1.066c.01.485-.04 1.045-.04 1.045a.752.752 0 00.316.628l1.561.993c.192.122.3.398.24.618 0 0-.222.862-.467 1.48-.242.62-.668 1.4-.668 1.4a.592.592 0 01-.595.287l-1.819-.337a.76.76 0 00-.66.245s-.381.489-.754.861c-.414.415-.997.857-.997.857a.76.76 0 00-.254.658l.306 1.824a.592.592 0 01-.298.59s-.79.412-1.414.645c-.623.233-1.488.44-1.488.44a.592.592 0 01-.61-.251l-.967-1.576a.756.756 0 00-.624-.328s-.496.04-.949.025c-.466-.015-.986-.09-.986-.09a.754.754 0 00-.646.281L8.97 23.555a.593.593 0 01-.628.207s-.85-.267-1.456-.543c-.605-.276-1.362-.74-1.362-.74a.592.592 0 01-.256-.61l.385-1.599c.08-.331.338-.796.579-1.037l3.98-3.993a3.7 3.7 0 005.026-5.025l3.988-3.989c.241-.24.705-.5 1.036-.579zM2.134 18.733a.595.595 0 01-.61-.257s-.467-.758-.743-1.364c-.276-.605-.543-1.453-.543-1.453a.592.592 0 01.207-.628l1.506-1.073a.757.757 0 00.283-.646s-.082-.573-.095-1.066c-.01-.485.04-1.046.04-1.046a.752.752 0 00-.316-.628L.303 9.58a.592.592 0 01-.241-.617S.285 8.1.528 7.48c.244-.617.67-1.4.67-1.4a.592.592 0 01.594-.286l1.819.337a.76.76 0 00.661-.244s.38-.489.753-.862c.414-.414.997-.855.997-.855a.76.76 0 00.254-.66L5.97 1.688a.592.592 0 01.298-.591S7.058.685 7.682.45C8.305.219 9.17.012 9.17.012a.592.592 0 01.612.25l.966 1.578a.756.756 0 00.624.326s.496-.039.949-.024c.466.015.986.091.986.091a.754.754 0 00.646-.283L15.028.445a.593.593 0 01.628-.208s.85.268 1.456.544c.605.275 1.362.74 1.362.74a.593.593 0 01.256.61l-.385 1.599a2.59 2.59 0 01-.578 1.036L13.786 8.76a3.7 3.7 0 00-5.026 5.026l-3.988 3.987c-.24.242-.705.5-1.036.58z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://semaphoreci.com/\",hex:\"19A974\"},Sensu:{title:\"Sensu\",slug:\"sensu\",svg:'<svg xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" viewBox=\"0 0 24 24\"><title>Sensu icon</title><path d=\"M24 12L12 0 0 12l12 12 12-12zM12 3.197l4.418 4.418c-1.445-.386-2.93-.586-4.418-.586s-2.974.199-4.418.588L12 3.196zM8.069 16.87c1.19-.658 2.534-1.008 3.931-1.008s2.741.35 3.931 1.008L12 20.804 8.069 16.87zm9.509-1.647c-1.697-1.08-3.636-1.622-5.578-1.622s-3.881.542-5.578 1.622l-3.103-3.101C5.822 10.284 8.834 9.29 12 9.29s6.178.994 8.681 2.832l-3.103 3.101z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/sensu/sensu-go/blob/master/dashboard/src/assets/logo/graphic/green.svg\",hex:\"89C967\"},Sentry:{title:\"Sentry\",slug:\"sentry\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Sentry icon</title><path d=\"M23.663 21.572c.449-.748.449-1.496 0-2.244l-9.72-16.897c-.447-.747-1.195-1.048-1.943-1.048s-1.495.449-1.943 1.048L6.916 7.963l.748.449c2.393 1.346 4.336 3.289 5.682 5.682 1.197 2.094 1.944 4.336 2.094 6.73h-2.243c-.149-1.945-.748-3.889-1.794-5.684-1.047-2.093-2.692-3.738-4.785-4.935l-.749-.447-2.99 5.084.747.449c1.944 1.195 3.29 3.139 3.589 5.383H2.28c-.149 0-.3-.15-.3-.15s-.148-.15 0-.299l1.348-2.393c-.449-.447-1.048-.748-1.646-.896L.336 19.329c-.449.748-.449 1.496 0 2.244.448.746 1.046 1.045 1.943 1.045h6.879v-.896c0-1.645-.449-3.141-1.196-4.637-.599-1.195-1.496-2.093-2.542-2.84L6.467 12.3c1.347 1.046 2.543 2.243 3.439 3.739 1.047 1.793 1.496 3.738 1.496 5.682v.896h5.831v-.896c0-2.99-.747-5.982-2.392-8.673-1.197-2.394-3.141-4.337-5.385-5.833L11.7 3.328c.151-.15.3-.15.3-.15.15 0 .15 0 .299.15l9.721 16.896c.148.148 0 .299 0 .299s-.15.15-.3.15h-2.243v1.795h2.243c.896.149 1.495-.15 1.943-.896z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://sentry.io/branding/\",hex:\"FB4226\"},\"Server Fault\":{title:\"Server Fault\",slug:\"serverfault\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Server Fault icon</title><path d=\"M24 18.185v2.274h-4.89v-2.274H24zm-24-.106h11.505v2.274H0v-2.279.005zm12.89 0h4.89v2.274h-4.89v-2.279.005zm6.221-3.607H24v2.274h-4.89l.001-2.274zM0 14.367h11.505v2.274H0v-2.274zm12.89 0h4.89v2.274h-4.89v-2.274zm6.221-3.346H24v2.273h-4.89l.001-2.273zM0 10.916h11.505v2.271H0v-2.271zm12.89 0h4.89v2.271h-4.89v-2.271zm6.22-3.609H24v2.279h-4.89V7.307zM0 7.206h11.505V9.48H0V7.201v.005zm12.89 0h4.89V9.48h-4.89V7.201v.005zm6.221-3.556H24v2.276h-4.89v-2.28l.001.004zM0 3.541h11.505v2.274H0V3.541zm12.89 0h4.89v2.274h-4.89V3.541z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://stackoverflow.com/company/logos\",hex:\"E7282D\"},Shazam:{title:\"Shazam\",slug:\"shazam\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Shazam icon</title><path d=\"M12 0C5.373 0-.001 5.371-.001 12c0 6.625 5.374 12 12.001 12s12-5.375 12-12c0-6.629-5.373-12-12-12M9.872 16.736c-1.287 0-2.573-.426-3.561-1.281-1.214-1.049-1.934-2.479-2.029-4.024-.09-1.499.42-2.944 1.436-4.067C6.86 6.101 8.907 4.139 8.993 4.055c.555-.532 1.435-.511 1.966.045.53.557.512 1.439-.044 1.971-.021.02-2.061 1.976-3.137 3.164-.508.564-.764 1.283-.719 2.027.049.789.428 1.529 1.07 2.086.844.73 2.51.891 3.553-.043.619-.559 1.372-1.377 1.38-1.386.52-.567 1.4-.603 1.965-.081.565.52.603 1.402.083 1.969-.035.035-.852.924-1.572 1.572-1.005.902-2.336 1.357-3.666 1.357m8.41-.099c-1.143 1.262-3.189 3.225-3.276 3.309-.27.256-.615.385-.96.385-.368 0-.732-.145-1.006-.43-.531-.559-.512-1.439.044-1.971.021-.02 2.063-1.977 3.137-3.166.508-.563.764-1.283.719-2.027-.048-.789-.428-1.529-1.07-2.084-.844-.73-2.51-.893-3.552.044-.621.556-1.373 1.376-1.38 1.384-.521.566-1.399.604-1.966.084-.564-.521-.604-1.404-.082-1.971.034-.037.85-.926 1.571-1.573 1.979-1.778 5.221-1.813 7.227-.077 1.214 1.051 1.935 2.48 2.028 4.025.092 1.497-.419 2.945-1.434 4.068\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://brandfolder.com/shazam\",hex:\"0088FF\"},Shell:{title:\"Shell\",slug:\"shell\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Shell icon</title><path d=\"M12 .863C5.34.863 0 6.251 0 12.98c0 .996.038 1.374.246 2.33l3.662 2.71.57 4.515h6.102l.326.227c.377.262.705.375 1.082.375.352 0 .732-.101 1.024-.313l.39-.289h6.094l.563-4.515 3.695-2.71c.208-.956.246-1.334.246-2.33C24 6.252 18.661.863 12 .863zm.996 2.258c.9 0 1.778.224 2.512.649l-2.465 12.548 3.42-12.062c1.059.36 1.863.941 2.508 1.814l.025.034-4.902 10.615 5.572-9.713.033.03c.758.708 1.247 1.567 1.492 2.648l-6.195 7.666 6.436-6.5.01.021c.253.563.417 1.36.417 1.996 0 .509-.024.712-.164 1.25l-3.554 2.602-.467 3.71h-4.475l-.517.395c-.199.158-.482.266-.682.266-.199 0-.483-.108-.682-.266l-.517-.394H6.322l-.445-3.61-3.627-2.666c-.11-.436-.16-.83-.16-1.261 0-.72.159-1.49.426-2.053l.013-.024 6.45 6.551L2.75 9.621c.25-1.063.874-2.09 1.64-2.713l5.542 9.776L4.979 6.1c.555-.814 1.45-1.455 2.546-1.827l3.424 12.069L8.355 3.816l.055-.03c.814-.45 1.598-.657 2.457-.657.195 0 .286.004.528.03l.587 13.05.46-13.059c.224-.025.309-.029.554-.029z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://en.wikipedia.org/wiki/File:Shell_logo.svg\",hex:\"FFD500\"},Shopify:{title:\"Shopify\",slug:\"shopify\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Shopify icon</title><path d=\"M15.337 23.979l7.216-1.561s-2.604-17.613-2.625-17.73c-.018-.116-.114-.192-.211-.192s-1.929-.136-1.929-.136-1.275-1.274-1.439-1.411c-.045-.037-.075-.057-.121-.074l-.914 21.104h.023zM11.71 11.305s-.81-.424-1.774-.424c-1.447 0-1.504.906-1.504 1.141 0 1.232 3.24 1.715 3.24 4.629 0 2.295-1.44 3.76-3.406 3.76-2.354 0-3.54-1.465-3.54-1.465l.646-2.086s1.245 1.066 2.28 1.066c.675 0 .975-.545.975-.932 0-1.619-2.654-1.694-2.654-4.359-.034-2.237 1.571-4.416 4.827-4.416 1.257 0 1.875.361 1.875.361l-.945 2.715-.02.01zM11.17.83c.136 0 .271.038.405.135-.984.465-2.064 1.639-2.508 3.992-.656.213-1.293.405-1.889.578C7.697 3.75 8.951.84 11.17.84V.83zm1.235 2.949v.135c-.754.232-1.583.484-2.394.736.466-1.777 1.333-2.645 2.085-2.971.193.501.309 1.176.309 2.1zm.539-2.234c.694.074 1.141.867 1.429 1.755-.349.114-.735.231-1.158.366v-.252c0-.752-.096-1.371-.271-1.871v.002zm2.992 1.289c-.02 0-.06.021-.078.021s-.289.075-.714.21c-.423-1.233-1.176-2.37-2.508-2.37h-.115C12.135.209 11.669 0 11.265 0 8.159 0 6.675 3.877 6.21 5.846c-1.194.365-2.063.636-2.16.674-.675.213-.694.232-.772.87-.075.462-1.83 14.063-1.83 14.063L15.009 24l.927-21.166z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://press.shopify.com/brand\",hex:\"7AB55C\"},Showpad:{title:\"Showpad\",slug:\"showpad\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Showpad icon</title><path d=\"M24 12V11.66l-.03-.24a5.48 5.48 0 0 0-4.88-4.89l-.24-.01h-.05l-.27-.01a5.45 5.45 0 0 0-3.88 1.6L12.8 9.97l1.35 1.36 1.35-1.35h-.01l.5-.51a3.55 3.55 0 0 1 2.53-1.05h.2l.16.01a3.58 3.58 0 0 1 3.2 3.19V12.35a3.58 3.58 0 0 1-2 2.84l-.03.02-.1.04-.07.03-.06.03-.11.04h-.03a3.58 3.58 0 0 1-3.69-.84l-.5-.5-3.37-3.36-5.38-5.39-1.35 1.35L0 12l1.35 1.35 5.39 5.39 1.34-1.35 3.37-3.37-1.34-1.35-3.37 3.37L2.7 12l4.04-4.04 2.02 2.02 5.39 5.39.5.5a5.46 5.46 0 0 0 5.65 1.3l.05-.01.16-.07.1-.04.11-.04.16-.07.05-.03a5.47 5.47 0 0 0 3.04-4.35v-.01l.02-.24v-.04V12H24z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.showpad.com/\",hex:\"2D2E83\"},Siemens:{title:\"Siemens\",slug:\"siemens\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Siemens icon</title><path d=\"M.086 13.761v-.722c.41.13.775.195 1.09.195.437 0 .654-.115.654-.347a.278.278 0 0 0-.096-.216c-.063-.063-.23-.148-.499-.258-.479-.198-.794-.365-.939-.507a.934.934 0 0 1-.283-.695c0-.36.139-.637.414-.825.27-.188.626-.28 1.062-.28.24 0 .589.043 1.045.133v.692a2.58 2.58 0 0 0-.945-.202c-.41 0-.613.112-.613.339 0 .084.04.15.124.205.067.042.257.134.565.273.446.197.742.368.891.516a.904.904 0 0 1 .264.673.992.992 0 0 1-.517.904c-.278.17-.64.256-1.083.256a4.88 4.88 0 0 1-1.134-.134zm3.31-3.592h1.018v3.65H3.395zm1.953 3.65v-3.65h2.616v.66H6.332v.826h1.422v.602H6.332v.866h1.675v.697zm3.325 0v-3.65h1.322l.917 2.333.943-2.333h1.257v3.65h-.969v-2.584l-1.07 2.622h-.631l-1.05-2.622v2.585h-.72zm5.373 0v-3.65h2.615v.66H15.03v.826h1.421v.602H15.03v.866h1.676v.697zm3.33 0v-3.65h1.18l1.255 2.445V10.17h.72v3.65H19.38l-1.285-2.475v2.476zm3.878-.058v-.722c.406.13.77.195 1.09.195.436 0 .653-.115.653-.347a.293.293 0 0 0-.091-.216c-.066-.063-.234-.148-.503-.258-.48-.196-.794-.364-.94-.507a.936.936 0 0 1-.284-.698c0-.359.138-.634.413-.822.272-.188.626-.28 1.061-.28.249 0 .566.038.956.116l.09.017v.692a2.583 2.583 0 0 0-.945-.202c-.409 0-.613.112-.613.339 0 .084.04.15.124.204.066.042.254.133.57.274.443.196.738.368.887.516a.903.903 0 0 1 .263.673c0 .396-.17.698-.51.904-.283.17-.644.256-1.089.256-.381 0-.76-.046-1.132-.134z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://siemens.com/\",hex:\"009999\"},Signal:{title:\"Signal\",slug:\"signal\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Signal icon</title><path d=\"M12.012 2.598c-5.22 0-9.452 3.9-9.452 8.709 0 3.016 1.219 5.301 3.155 6.774H5.71l.234 3.042v.004c0 .017 0 .031.004.046v.006c.024.144.15.255.301.255.053 0 .1-.015.144-.035l.011-.008L9.3 19.717c.854.196 1.767.299 2.71.299 5.22 0 9.452-3.899 9.452-8.71 0-4.81-4.233-8.709-9.454-8.709l.004.001zM10.39.72c.525-.065 1.061-.104 1.605-.104.38 0 .75.02 1.119.052l.057-.614C12.781.019 12.392 0 11.997 0c-.57 0-1.135.036-1.691.109l.083.612.001-.001zm3.797.094c.915.165 1.785.436 2.61.795l.252-.567c-.132-.056-.263-.112-.397-.165-.762-.3-1.551-.524-2.355-.671l-.11.608zm9.169 10.556c-.015.915-.155 1.806-.405 2.655l.59.175c.267-.903.416-1.854.431-2.831l-.616.001zM6.745 1.814c.811-.389 1.678-.698 2.586-.902L9.196.308c-.631.141-1.251.329-1.853.569-.297.117-.586.245-.867.381l.269.556zm13.65 1.399c-.706-.649-1.485-1.207-2.329-1.673l-.311.541c.811.445 1.561.981 2.224 1.596l.416-.462v-.002zm-5.244 18.838c.945-.24 1.845-.591 2.686-1.03l-.315-.533c-.786.413-1.631.738-2.521.967l.15.596zM3.677 4.005c.63-.638 1.347-1.2 2.13-1.675l-.327-.529c-.698.422-1.35.914-1.945 1.473-.102.094-.2.191-.3.289l.439.441.003.001zm19.48 11.28l-.568-.236c-.349.833-.803 1.614-1.354 2.332l.495.369c.577-.758 1.061-1.586 1.424-2.465h.003zM20.726 4.433c.606.675 1.122 1.425 1.534 2.228l.555-.275c-.435-.852-.979-1.645-1.627-2.366l-.465.413h.003zm2.554 3.003l-.568.244c.313.828.521 1.703.604 2.61l.615-.061c-.088-.956-.305-1.892-.651-2.793zM6.386 22.849l-.969.425-.332-1.025-.585.19.438 1.347c.029.083.09.151.167.188.041.017.083.026.126.026s.084-.009.123-.026l1.283-.563-.251-.562zm3.823-1.193c-.078-.016-.157-.027-.237-.041l-.465-.079c-.061-.009-.12 0-.172.023l-1.951.853.271.554 1.845-.803c.125.021.25.041.371.059.068.017.139.026.209.038l.129-.604zm3.728.02c-.633.104-1.281.156-1.942.156-.273 0-.525-.015-.772-.038l-.019.615c.251.024.511.04.791.04.698 0 1.383-.058 2.048-.166l-.104-.606-.002-.001zM1.517 7.116c.37-.825.852-1.598 1.425-2.302l-.47-.407c-.61.745-1.116 1.557-1.508 2.427l-.01.021.563.261zM20.532 18.21c-.612.651-1.31 1.229-2.07 1.728l.339.515c.806-.524 1.541-1.14 2.19-1.829l-.459-.414zM.97 14.551c-.188-.796-.293-1.676-.323-2.671H.031c.03 1.071.145 2.005.345 2.843l.594-.172zM.538 7.925c-.297.91-.468 1.853-.51 2.813l.615.03c.042-.923.209-1.816.487-2.662l-.592-.181zm4.199 13.26l-.59-1.815c-.02-.06-.056-.109-.105-.147-.232-.182-.449-.366-.66-.558l-.422.446c.194.184.408.362.629.541l.561 1.717.587-.184zm-2.105-3.292c-.591-.691-1.037-1.449-1.355-2.315l-.573.229c.041.107.083.216.126.322.33.796.771 1.509 1.342 2.175l.46-.411z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://play.google.com/store/apps/details?id=org.thoughtcrime.securesms\",hex:\"2592E9\"},\"Simple Icons\":{title:\"Simple Icons\",slug:\"simpleicons\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Simple Icons icon</title><path d=\"M12 12v-1.5c-2.484 0-4.5-2.016-4.5-4.5S9.516 1.5 12 1.5s4.5 2.016 4.5 4.5H18c0-3.312-2.688-6-6-6S6 2.688 6 6s2.688 6 6 6zM15.037 12.826c2.858 1.678 3.816 5.355 2.138 8.214h1.68c.423-.954.642-1.987.643-3.03.003-4.144-3.352-7.505-7.494-7.51V12c1.066 0 2.113.286 3.033.826zM12.003 10.5H12h.003M6.828 21.04C6.3 20.148 6 19.11 6 18v-.03H4.5V18c-.002 1.047.218 2.084.645 3.04h1.683zM15 22.5v-6h1.5V15h-9v1.5H9v6H4.5V24h15v-1.5H15zm-1.5 0h-3v-6h3v6zM9.078 5.922C9.035 7.58 10.343 8.957 12 9c1.597-.04 2.88-1.326 2.922-2.922C14.965 4.42 13.656 3.043 12 3c-1.597.04-2.88 1.326-2.922 2.922zm4.422.08c0 .828-.672 1.5-1.5 1.5-.83 0-1.5-.673-1.5-1.502 0-.83.67-1.5 1.5-1.5.828 0 1.5.672 1.5 1.5z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://simpleicons.org/\",hex:\"111111\"},\"Sina Weibo\":{title:\"Sina Weibo\",slug:\"sinaweibo\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Sina Weibo icon</title><path d=\"M10.098 20.323c-3.977.391-7.414-1.406-7.672-4.02-.259-2.609 2.759-5.047 6.74-5.441 3.979-.394 7.413 1.404 7.671 4.018.259 2.6-2.759 5.049-6.737 5.439l-.002.004zM9.05 17.219c-.384.616-1.208.884-1.829.602-.612-.279-.793-.991-.406-1.593.379-.595 1.176-.861 1.793-.601.622.263.82.972.442 1.592zm1.27-1.627c-.141.237-.449.353-.689.253-.236-.09-.313-.361-.177-.586.138-.227.436-.346.672-.24.239.09.315.36.18.601l.014-.028zm.176-2.719c-1.893-.493-4.033.45-4.857 2.118-.836 1.704-.026 3.591 1.886 4.21 1.983.64 4.318-.341 5.132-2.179.8-1.793-.201-3.642-2.161-4.149zm7.563-1.224c-.346-.105-.57-.18-.405-.615.375-.977.42-1.804 0-2.404-.781-1.112-2.915-1.053-5.364-.03 0 0-.766.331-.571-.271.376-1.217.315-2.224-.27-2.809-1.338-1.337-4.869.045-7.888 3.08C1.309 10.87 0 13.273 0 15.348c0 3.981 5.099 6.395 10.086 6.395 6.536 0 10.888-3.801 10.888-6.82 0-1.822-1.547-2.854-2.915-3.284v.01zm1.908-5.092c-.766-.856-1.908-1.187-2.96-.962-.436.09-.706.511-.616.932.09.42.511.691.932.602.511-.105 1.067.044 1.442.465.376.421.466.977.316 1.473-.136.406.089.856.51.992.405.119.857-.105.992-.512.33-1.021.12-2.178-.646-3.035l.03.045zm2.418-2.195c-1.576-1.757-3.905-2.419-6.054-1.968-.496.104-.812.587-.706 1.081.104.496.586.813 1.082.707 1.532-.331 3.185.15 4.296 1.383 1.112 1.246 1.429 2.943.947 4.416-.165.48.106 1.007.586 1.157.479.165.991-.104 1.157-.586.675-2.088.241-4.478-1.338-6.235l.03.045z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://en.wikipedia.org/wiki/Sina_Weibo\",hex:\"E6162D\"},SitePoint:{title:\"SitePoint\",slug:\"sitepoint\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>SitePoint icon</title><path d=\"M2.471 10.533l1.771 1.688 5.598 5.141 2.4-2.291c.21-.297.194-.705-.046-.985L9.99 12.184l.01-.005-2.371-2.266c-.279-.314-.27-.78.021-1.079l6.39-6.076L11.146 0 2.475 8.238c-.664.633-.664 1.66 0 2.295h-.004zm19.056 2.937l-1.77-1.691-5.595-5.142-2.411 2.291c-.221.3-.207.705.045.985l2.205 1.891h-.006l2.369 2.265c.27.314.27.766-.029 1.064l-6.391 6.075L12.855 24l8.67-8.238c.664-.633.666-1.659 0-2.295l.002.003z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://www.sitepoint.com\",hex:\"258AAF\"},Sketch:{title:\"Sketch\",slug:\"sketch\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Sketch icon</title><path d=\"M12 1.25l6.75 6.637V2L12 1.25zm0 0l-6.05 7h12.1l-6.05-7zm0 0L5.25 2v5.887L12 1.25zM5.25 2L0 9l4.416-.68L5.25 2zM0 9l11.959 13.703.008-.014L4.443 9H0zm18.75-7l.834 6.32L24 9l-5.25-7zM24 9h-4.506l-7.523 13.69.029.06L24 9zM12 22.75l-.031-.057-.008.012.039.045zM5.436 9l6.533 13.686L18.564 9H5.436Z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.sketch.com/press/\",hex:\"F7B500\"},Skillshare:{title:\"Skillshare\",slug:\"skillshare\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Skillshare icon</title><path d=\"M10.542 23.91c-2.14-.278-4.344-1.196-5.95-2.48C.98 18.545-.662 13.994.276 9.468c.405-1.952 1.45-4.008 2.79-5.487a11.637 11.637 0 0 1 3.509-2.688C8.338.398 10.027-.005 12.019-.005c1.432 0 2.579.187 3.897.636a12.012 12.012 0 0 1 7.458 7.458c.703 2.065.834 4.26.383 6.435-.357 1.72-1.283 3.65-2.425 5.05-.47.577-1.545 1.608-2.113 2.028a12.203 12.203 0 0 1-5.782 2.31c-.615.076-2.298.074-2.895-.003zm3.27-1.004a11.17 11.17 0 0 0 7.254-4.533c2.027-2.851 2.571-6.67 1.425-10.001-.27-.784-.937-2.086-1.424-2.775-.544-.77-1.888-2.115-2.659-2.66-.75-.529-2.031-1.174-2.902-1.462a11.065 11.065 0 0 0-9.498 1.212 11.498 11.498 0 0 0-3.29 3.288 11.068 11.068 0 0 0-1.21 9.498c.287.871.933 2.152 1.462 2.902.545.771 1.889 2.116 2.66 2.66.689.486 1.99 1.154 2.774 1.424 1.725.593 3.573.746 5.409.447zm-4.155-4.023a4.223 4.223 0 0 1-1.584-.58c-.431-.277-3.706-3.482-3.866-3.784-.182-.345.137-.97.594-1.16l.215-.09-.66-.673c-.363-.37-.707-.763-.763-.874-.128-.25-.134-.784-.011-1.022.05-.098.17-.245.267-.327.16-.136.174-.18.157-.516-.016-.3.01-.415.14-.639.187-.318.574-.536.953-.537.208 0 .265-.03.353-.185.234-.41.908-.558 1.42-.31l.276.133.139-.13c.186-.175.56-.326.807-.326.492 0 1.187.566 1.187.966 0 .475-.434.557-.862.163-.288-.265-.43-.293-.547-.107-.058.092.08.258.922 1.106.838.843.99 1.026.99 1.186a.49.49 0 0 1-.473.463c-.152 0-.402-.22-1.554-1.368-1.174-1.17-1.39-1.358-1.483-1.3-.253.16-.168.277 1.207 1.656.747.75 1.36 1.415 1.36 1.476 0 .132-.117.367-.215.432a.61.61 0 0 1-.255.047c-.16.001-.406-.218-1.716-1.524s-1.546-1.516-1.64-1.457c-.256.162-.172.275 1.326 1.78.814.817 1.498 1.548 1.52 1.625.042.14-.052.388-.179.473a.622.622 0 0 1-.259.048c-.163 0-.365-.176-1.448-1.26-1.04-1.042-1.285-1.258-1.415-1.244-.377.043-.244.212 1.693 2.153 1.679 1.682 1.895 1.921 1.895 2.096 0 .139-.05.237-.166.328-.302.238-.42.183-1.177-.55-.387-.373-.787-.732-.89-.796-.191-.12-.675-.169-.767-.076-.03.029.685.782 1.586 1.675 1.503 1.488 1.678 1.641 2.119 1.853.85.41 1.768.413 2.619.008 1.263-.6 1.962-2.064 1.618-3.388-.172-.659-.386-.977-1.256-1.869-1-1.025-1.23-1.306-1.474-1.797-.273-.55-.393-1.085-.393-1.756 0-.721.076-1.05.396-1.724.306-.646.94-1.32 1.57-1.67 1.236-.685 2.86-.628 4.04.142.235.153 1.082.949 2.136 2.006 1.567 1.572 1.747 1.773 1.747 1.956 0 .425-.348.898-.733.994-.148.038-.118.08.538.745.383.387.739.808.791.934.186.443.104.874-.232 1.222-.174.18-.195.244-.2.603-.006.317-.04.448-.163.629-.206.3-.547.486-.891.487-.242 0-.291.026-.41.21-.273.421-.986.568-1.446.297l-.23-.137-.165.157c-.365.348-.95.395-1.396.112-.359-.228-.625-.543-.625-.742 0-.175.256-.464.41-.464.148 0 .35.115.575.328.227.214.421.213.452-.005.017-.117-.17-.34-.928-1.103-.797-.803-.95-.986-.949-1.143a.61.61 0 0 1 .048-.255c.084-.127.325-.218.474-.18.081.02.74.63 1.464 1.354.725.725 1.363 1.318 1.42 1.318.161 0 .264-.16.19-.295-.035-.062-.646-.694-1.358-1.404-1.115-1.11-1.294-1.316-1.293-1.479a.61.61 0 0 1 .047-.259c.065-.097.3-.214.432-.214.062 0 .795.682 1.633 1.517 1.539 1.534 1.652 1.62 1.813 1.364.06-.094-.15-.33-1.456-1.64-1.349-1.352-1.526-1.553-1.526-1.729 0-.124.052-.248.138-.327.288-.269.371-.213 1.758 1.167 1.313 1.308 1.432 1.394 1.59 1.145.058-.094-.207-.386-1.835-2.019-1.774-1.78-1.903-1.925-1.903-2.132 0-.31.18-.46.527-.437.064.004.437.319.827.7.39.38.81.735.935.787.245.102.53.12.654.042.117-.075-3.127-3.267-3.546-3.489a3.012 3.012 0 0 0-4.163 1.383c-.201.434-.23.56-.255 1.12-.024.527-.006.693.107 1.027.202.597.381.843 1.29 1.773.984 1.008 1.172 1.241 1.423 1.778.702 1.501.404 3.233-.756 4.392-.884.884-2.084 1.3-3.276 1.136z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://company-89494.frontify.com/d/Tquwc3XMiaBb/skillshare-style-guide\",hex:\"17C5CB\"},Skyliner:{title:\"Skyliner\",slug:\"skyliner\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Skyliner icon</title><path d=\"M7.961 17.563c-.182-.037-.366.044-.461.203-.475 1.02-1.576 1.592-2.684 1.395-.203-1.108.373-2.213 1.397-2.681.204-.125.271-.392.146-.597-.067-.111-.182-.188-.311-.205-1.577-.297-3.193.262-4.252 1.469C.545 18.865.074 21.03.5 23.113c.031.185.175.329.359.359.498.081 1.002.12 1.508.12 1.834.102 3.625-.581 4.931-1.873.89-1.054 1.259-2.452 1.007-3.808-.021-.187-.161-.337-.345-.375l.001.027zM23.778.203c-.171-.169-.522-.089-.522-.089C22.621.04 21.98.003 21.339.001c-4.154-.043-8.153 1.576-11.106 4.497-.36.362-.7.742-1.02 1.139-1.402-.65-3.008-.709-4.455-.165-2.287.984-3.623 3.787-4.729 6.671-.087.224.025.476.249.562.144.055.304.031.425-.064 1.566-1.163 3.618-1.445 5.44-.749L5.6 13.856c-.05.184.026.377.187.479 1.466 1.096 2.767 2.395 3.863 3.857.103.163.298.239.482.188l1.963-.539c.719 1.826.436 3.893-.749 5.456-.148.188-.116.463.071.61.121.096.285.12.428.064 2.883-1.109 5.686-2.443 6.665-4.722.544-1.446.487-3.049-.161-4.451.395-.326.772-.672 1.133-1.036 3.381-3.44 5-8.241 4.392-13.026 0 0 .076-.352-.096-.524V.203zM21.339.87c.563 0 1.127.029 1.688.088.079.771.103 1.548.07 2.322-.611-.066-1.184-.34-1.623-.771-.438-.437-.713-1.009-.777-1.623.209-.011.422-.018.636-.018l.006.002zM10.846 5.112C13.262 2.716 16.438 1.24 19.828.94c.07.677.33 1.318.749 1.855l-2.698 2.697c-1.529-1.203-3.742-.939-4.946.59-1.005 1.278-1.005 3.078 0 4.356l-3.147 3.147c-.811-.785-1.689-1.498-2.626-2.131.662-2.394 1.932-4.58 3.686-6.342zm7.524 3.159c.001 1.469-1.188 2.66-2.657 2.66-1.469.002-2.659-1.188-2.66-2.656 0-1.47 1.189-2.66 2.657-2.661h.003c1.467 0 2.656 1.19 2.657 2.657zM1.314 11.269c.941-2.254 2.09-4.268 3.779-4.994 1.154-.428 2.428-.396 3.559.09C7.639 7.78 6.871 9.36 6.387 11.033c-1.645-.667-3.498-.581-5.074.233l.001.003zm8.891 6.19c-1.074-1.37-2.311-2.604-3.683-3.677l.395-1.434c1.845 1.275 3.444 2.874 4.722 4.718l-1.434.393zm7.508 1.425c-.727 1.698-2.737 2.848-4.989 3.789.811-1.578.893-3.432.225-5.074 1.677-.488 3.259-1.26 4.679-2.278.484 1.134.515 2.412.083 3.566l.002-.003zm-5.186-2.06c-.629-.937-1.34-1.816-2.123-2.628l3.147-3.148c1.528 1.203 3.743.939 4.945-.59 1.006-1.278 1.006-3.078 0-4.356l2.698-2.698c.535.418 1.177.677 1.85.75-.299 3.387-1.772 6.563-4.166 8.979-1.763 1.754-3.947 3.022-6.343 3.684l-.008.007z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.skyliner.io/help\",hex:\"2FCEA0\"},Skype:{title:\"Skype\",slug:\"skype\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Skype icon</title><path d=\"M12.069 18.874c-4.023 0-5.82-1.979-5.82-3.464 0-.765.561-1.296 1.333-1.296 1.723 0 1.273 2.477 4.487 2.477 1.641 0 2.55-.895 2.55-1.811 0-.551-.269-1.16-1.354-1.429l-3.576-.895c-2.88-.724-3.403-2.286-3.403-3.751 0-3.047 2.861-4.191 5.549-4.191 2.471 0 5.393 1.373 5.393 3.199 0 .784-.688 1.24-1.453 1.24-1.469 0-1.198-2.037-4.164-2.037-1.469 0-2.292.664-2.292 1.617s1.153 1.258 2.157 1.487l2.637.587c2.891.649 3.624 2.346 3.624 3.944 0 2.476-1.902 4.324-5.722 4.324m11.084-4.882l-.029.135-.044-.24c.015.045.044.074.059.12.12-.675.181-1.363.181-2.052 0-1.529-.301-3.012-.898-4.42-.569-1.348-1.395-2.562-2.427-3.596-1.049-1.033-2.247-1.856-3.595-2.426-1.318-.631-2.801-.93-4.328-.93-.72 0-1.444.07-2.143.204l.119.06-.239-.033.119-.025C8.91.274 7.829 0 6.731 0c-1.789 0-3.47.698-4.736 1.967C.729 3.235.032 4.923.032 6.716c0 1.143.292 2.265.844 3.258l.02-.124.041.239-.06-.115c-.114.645-.172 1.299-.172 1.955 0 1.53.3 3.017.884 4.416.568 1.362 1.378 2.576 2.427 3.609 1.034 1.05 2.247 1.857 3.595 2.442 1.394.6 2.877.898 4.404.898.659 0 1.334-.06 1.977-.179l-.119-.062.24.046-.135.03c1.002.569 2.126.871 3.294.871 1.783 0 3.459-.69 4.733-1.963 1.259-1.259 1.962-2.951 1.962-4.749 0-1.138-.299-2.262-.853-3.266\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://blogs.skype.com/?attachment_id=56273\",hex:\"00AFF0\"},Slack:{title:\"Slack\",slug:\"slack\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Slack icon</title><path d=\"M5.042 15.165a2.528 2.528 0 0 1-2.52 2.523A2.528 2.528 0 0 1 0 15.165a2.527 2.527 0 0 1 2.522-2.52h2.52v2.52zM6.313 15.165a2.527 2.527 0 0 1 2.521-2.52 2.527 2.527 0 0 1 2.521 2.52v6.313A2.528 2.528 0 0 1 8.834 24a2.528 2.528 0 0 1-2.521-2.522v-6.313zM8.834 5.042a2.528 2.528 0 0 1-2.521-2.52A2.528 2.528 0 0 1 8.834 0a2.528 2.528 0 0 1 2.521 2.522v2.52H8.834zM8.834 6.313a2.528 2.528 0 0 1 2.521 2.521 2.528 2.528 0 0 1-2.521 2.521H2.522A2.528 2.528 0 0 1 0 8.834a2.528 2.528 0 0 1 2.522-2.521h6.312zM18.956 8.834a2.528 2.528 0 0 1 2.522-2.521A2.528 2.528 0 0 1 24 8.834a2.528 2.528 0 0 1-2.522 2.521h-2.522V8.834zM17.688 8.834a2.528 2.528 0 0 1-2.523 2.521 2.527 2.527 0 0 1-2.52-2.521V2.522A2.527 2.527 0 0 1 15.165 0a2.528 2.528 0 0 1 2.523 2.522v6.312zM15.165 18.956a2.528 2.528 0 0 1 2.523 2.522A2.528 2.528 0 0 1 15.165 24a2.527 2.527 0 0 1-2.52-2.522v-2.522h2.52zM15.165 17.688a2.527 2.527 0 0 1-2.52-2.523 2.526 2.526 0 0 1 2.52-2.52h6.313A2.527 2.527 0 0 1 24 15.165a2.528 2.528 0 0 1-2.522 2.523h-6.313z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://slack.com/brand-guidelines\",hex:\"4A154B\"},Slashdot:{title:\"Slashdot\",slug:\"slashdot\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Slashdot icon</title><path d=\"M19.777 0L7.037 24H1.868L14.605 0h5.172zm2.354 19.801c0 2.268-1.841 4.105-4.109 4.105s-4.107-1.838-4.107-4.105 1.839-4.107 4.107-4.107 4.109 1.839 4.109 4.107z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://commons.wikimedia.org/wiki/File:Slashdot_wordmark_and_logo.svg\",hex:\"026664\"},SlickPic:{title:\"SlickPic\",slug:\"slickpic\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>SlickPic icon</title><path d=\"M21.483 18.308L6.056 14.085l2.52-9.201L24 9.104l-2.517 9.204zm-13.414-5.37l12.263 3.354 1.654-6.033L9.72 6.9l-1.65 6.034v.004zM8.526 15.795l-4.891 1.311-1.625-6.045 4.146-1.11.501-1.835L0 9.902l2.478 9.215 9.178-2.467\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.slickpic.com/\",hex:\"FF880F\"},Slides:{title:\"Slides\",slug:\"slides\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Slides icon</title><path d=\"M0 0v24h24V0H0zm14.176 15.794c-.644.584-1.41.87-2.31.87-.9 0-1.664-.137-2.324-.406-.646-.27-.976-.525-.976-.78l-.076.095c0-.13.08-.324.244-.585.163-.26.31-.39.44-.39.014 0 .12.06.314.184.195.125.472.247.837.372.364.123.804.185 1.317.185.525 0 .945-.147 1.275-.44.33-.292.495-.69.495-1.19s-.15-.89-.436-1.17c-.285-.28-.87-.544-1.74-.79-.87-.25-1.5-.564-1.89-.946-.39-.386-.586-.968-.586-1.748s.3-1.435.9-1.962c.6-.54 1.38-.795 2.34-.795.675 0 1.26.074 1.785.254.524.165.78.36.78.555 0 .164-.075.39-.226.644-.15.27-.285.39-.39.39-.017 0-.09-.045-.257-.12-.435-.24-.93-.36-1.484-.36s-.976.105-1.29.33c-.3.225-.45.525-.45.885s.12.644.344.854.615.39 1.17.57c1.23.375 2.055.78 2.49 1.23.436.45.66 1.126.66 2.025.002.9-.312 1.65-.958 2.234z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://slides.com/about\",hex:\"E4637C\"},\"Smashing Magazine\":{title:\"Smashing Magazine\",slug:\"smashingmagazine\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Smashing Magazine icon</title><path d=\"M7.734 12.002c.766.524 1.662 1.01 2.708 1.443 1.785.742 2.985 1.387 3.601 1.936.615.547.928 1.248.928 2.104-.005 1.457-1.023 2.189-3.076 2.189-1.977 0-3.75-.627-5.326-1.875l-1.871 4.186c1.422.761 2.58 1.257 3.475 1.496l.141.033-1.798.416c-1.271.292-2.539-.503-2.832-1.771L.061 6.5c-.291-1.271.5-2.539 1.773-2.835l4.375-1.009c-.158.155-.307.316-.441.485l-.018.021c-.753.949-1.131 2.115-1.131 3.505 0 2.101 1.03 3.87 3.079 5.296l.046.029-.01.01zm10.358.072c-.84-.672-1.904-1.268-3.24-1.786-1.98-.784-3.271-1.41-3.871-1.872-.6-.465-.914-.981-.914-1.557 0-1.459.914-2.19 2.76-2.19 2.041 0 3.646.494 4.786 1.476l1.515-4.08c-1.095-.556-2.235-.96-3.405-1.216l-.06-.015c-.256-.061-.525-.12-.811-.164l2.625-.602c1.275-.285 2.535.511 2.836 1.771l3.63 15.647c.284 1.274-.51 2.551-1.784 2.835l-2.985.69c.824-1.051 1.245-2.34 1.245-3.87 0-1.575-.437-2.911-1.306-4.021-.285-.346-.615-.676-1.006-1.006l-.044-.029.029-.011z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.smashingmagazine.com/\",hex:\"E85C33\"},SmugMug:{title:\"SmugMug\",slug:\"smugmug\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>SmugMug icon</title><path d=\"M18.31 0l-.35.01c-1.55.13-2.46 1.2-2.6 2.28-.15 1.2.65 2.4 2.58 2.28 2.15-.12 3.09-1.2 3.1-2.28.02-1.15-1-2.28-2.73-2.29zM7.21.34A2.66 2.66 0 004.56 2.6C4.41 3.73 5.12 4.87 7 4.85c2.23-.04 3.31-1.37 3.16-2.57-.12-1-1.09-1.92-2.94-1.94zm12.35 8.71a7 7 0 00-.4.02c-5.28.54-5.54.6-15.26.82C-.2 9.9.62 24 9.38 24c8.2 0 18.12-15.15 10.18-14.95zm-1.1 2.7c3.18-.07-2.9 9.53-8.8 9.56-7.46 0-6.44-8.8-5.18-8.85 8.67-.35 10.88-.64 13.98-.71Z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://help.smugmug.com/using-smugmug's-logo-HJulJePkEBf\",hex:\"6DB944\"},Snapchat:{title:\"Snapchat\",slug:\"snapchat\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Snapchat icon</title><path d=\"M12.206.793c.99 0 4.347.276 5.93 3.821.529 1.193.403 3.219.299 4.847l-.003.06c-.012.18-.022.345-.03.51.075.045.203.09.401.09.3-.016.659-.12 1.033-.301.165-.088.344-.104.464-.104.182 0 .359.029.509.09.45.149.734.479.734.838.015.449-.39.839-1.213 1.168-.089.029-.209.075-.344.119-.45.135-1.139.36-1.333.81-.09.224-.061.524.12.868l.015.015c.06.136 1.526 3.475 4.791 4.014.255.044.435.27.42.509 0 .075-.015.149-.045.225-.24.569-1.273.988-3.146 1.271-.059.091-.12.375-.164.57-.029.179-.074.36-.134.553-.076.271-.27.405-.555.405h-.03c-.135 0-.313-.031-.538-.074-.36-.075-.765-.135-1.273-.135-.3 0-.599.015-.913.074-.6.104-1.123.464-1.723.884-.853.599-1.826 1.288-3.294 1.288-.06 0-.119-.015-.18-.015h-.149c-1.468 0-2.427-.675-3.279-1.288-.599-.42-1.107-.779-1.707-.884-.314-.045-.629-.074-.928-.074-.54 0-.958.089-1.272.149-.211.043-.391.074-.54.074-.374 0-.523-.224-.583-.42-.061-.192-.09-.389-.135-.567-.046-.181-.105-.494-.166-.57-1.918-.222-2.95-.642-3.189-1.226-.031-.063-.052-.15-.055-.225-.015-.243.165-.465.42-.509 3.264-.54 4.73-3.879 4.791-4.02l.016-.029c.18-.345.224-.645.119-.869-.195-.434-.884-.658-1.332-.809-.121-.029-.24-.074-.346-.119-1.107-.435-1.257-.93-1.197-1.273.09-.479.674-.793 1.168-.793.146 0 .27.029.383.074.42.194.789.3 1.104.3.234 0 .384-.06.465-.105l-.046-.569c-.098-1.626-.225-3.651.307-4.837C7.392 1.077 10.739.807 11.727.807l.419-.015h.06z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.snapchat.com/brand-guidelines\",hex:\"FFFC00\"},Snapcraft:{title:\"Snapcraft\",slug:\"snapcraft\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Snapcraft icon</title><path d=\"M13.804 13.367V5.69l5.292 2.362-5.292 5.315zM3.701 23.514l6.49-12.22 2.847 2.843L3.7 23.514zM0 .486l13.355 4.848v8.484L0 .486zM21.803 5.334H14.11L24 9.748z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/snapcore/snap-store-badges\",hex:\"82BEA0\"},Snyk:{title:\"Snyk\",slug:\"snyk\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Snyk icon</title><path d=\"M15.3.002C15.291 0 15.285 0 15.281.004c-.047.055-.25 1.273-.449 2.706-.204 1.47-.468 2.851-.604 3.17l-.243.566-.555-.11c-.707-.14-2.091-.14-2.787-.003-.515.102-.548.089-.795-.326-.186-.311-.356-1.157-.612-3.037C9.042 1.538 8.852.256 8.814.123c-.053-.189-.157-.088-.469.456-.625 1.092-1.756 3.65-1.998 4.52l-.219.787.487 1.296.486 1.296-.142 1.405a29.787 29.787 0 0 0-.141 2.39c0 .95.021 1.02.569 1.834l.569.847-.314 2.847c-.3 2.73-.304 2.855-.08 3.025.128.097.27.178.314.18.045.003.188-1.05.317-2.34.13-1.29.277-2.344.328-2.344.207 0 .25 2.075.074 3.516-.137 1.117-.146 1.538-.036 1.654.082.085.88.683 1.776 1.328s1.645 1.176 1.666 1.18c.021.004 1.077-.737 2.345-1.645 1.269-.908 2.321-1.66 2.34-1.672.018-.011-.11-1.32-.283-2.906l-.315-2.885.575-.859c.661-.986.672-1.08.433-3.899l-.144-1.693.48-1.276.48-1.275-.282-.939C17.306 3.873 15.524.105 15.3.002zm.358 2.252c.133 0 .78 1.414 1.205 2.629.264.757.28.912.136 1.391-.089.296-.214.539-.277.539-.267 0-1.12-2.348-1.183-3.257-.047-.676.01-1.302.12-1.302zm-7.27.093c.005 0 .01 0 .013.004.34.341.021 2.34-.598 3.74-.167.378-.362.724-.433.768-.07.043-.203-.186-.294-.51-.131-.47-.132-.702-.005-1.138.283-.967 1.155-2.854 1.316-2.864zm1.556 1.86v.359c.001.197.063.578.137.847.15.541.162.544 1.205.352a3.976 3.976 0 0 1 1.54.009c.976.177 1.093.092 1.22-.882l.09-.684H12.04zm-4.038.542l-.814.22-.814.22-.028 6.64-.029 6.642 1.257.878c.69.483 1.285.848 1.321.812.036-.035.192-1.222.347-2.636l.282-2.571-.377-.555c-.777-1.144-.802-1.29-.623-3.759l.162-2.23-.425-1.125c-.362-.96-.412-1.23-.342-1.831zm12.244 0l.078.674c.066.57.006.864-.387 1.91-.256.681-.438 1.355-.404 1.499.146.63.29 3.699.197 4.209-.057.309-.309.865-.56 1.237l-.458.676.3 2.605c.164 1.433.304 2.622.31 2.642.022.066.448-.212 1.51-.986l1.043-.76V5.188l-.814-.22zm-9.203.437c.03-.002.052.096.09.27.087.416.104.45.599 1.246l.295.476.523-.18c.287-.1.76-.218 1.048-.265.476-.076.526-.057.526.194 0 .221-.079.277-.394.277-.216 0-.727.117-1.135.26-.408.143-.755.26-.773.26-.017 0-.186-.263-.375-.586-.189-.322-.358-.586-.377-.586-.018 0-.23.308-.47.684-.314.492-.441.848-.454 1.27-.01.323-.065 1.452-.124 2.51l-.107 1.923.493.714c.27.393.505.715.521.715.312 0 .91-.398 1.302-.866.366-.439.525-.55.597-.42.131.237.176 3.206.056 3.667-.124.479.247.924.681.815.267-.067.299-.029.299.36a.954.954 0 0 1-.302.72c-.39.367-1.11.373-1.568.013-.389-.305-.67-1.163-.808-2.466-.081-.768-.161-.943-.859-1.88-.423-.57-.807-1.185-.853-1.368-.046-.184-.01-1.314.079-2.512s.127-2.235.085-2.304c-.043-.069.154-.484.438-.923.284-.44.618-1.102.743-1.474.127-.377.184-.543.224-.544zm5.562 4.778c.205.012.32.134.32.366 0 .311-.039.327-.88.364-.483.02-.878.009-.878-.027s.261-.22.58-.406c.36-.21.654-.31.858-.297zm-4.992.02c.356-.007.888.193 1.143.475.234.26.23.261-.56.261-.65 0-.822-.045-.93-.246-.099-.184-.082-.289.065-.41a.457.457 0 0 1 .282-.08zm.747 1.257c.288 0 .25.486-.05.647-.359.192-.495.17-.79-.125-.344-.344-.33-.55.032-.498.202.029.28.116.252.28-.03.172.026.226.195.191.139-.028.22-.14.198-.271-.022-.131.045-.224.163-.224zm4.299 0c.288 0 .25.486-.051.647-.358.192-.495.17-.79-.125-.344-.344-.33-.55.032-.498.202.029.28.116.252.28-.029.172.026.226.196.191.138-.028.22-.14.198-.271-.023-.131.045-.224.163-.224zm-1.27 1.696c.062.003.347.263.663.605.417.451.758.694 1.068.76.661.14.701.192.398.514-.32.341-.528.988-.528 1.644 0 .699-.37 1.806-.72 2.156-.685.685-1.885.23-1.885-.716 0-.36.038-.412.254-.343.395.125.84-.387.714-.825-.102-.356-.078-3.684.028-3.793.002-.002.005-.003.009-.002zm-1.265 6.38c.637 0 .857.154.446.312s-1.097.037-1.097-.192c0-.066.293-.12.651-.12zm-1.326.087l.413.348c.556.468 1.266.472 1.815.01.383-.322.401-.326.401-.068 0 .148-.144.363-.32.479-.784.513-2.167.236-2.264-.454z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://snyk.io/press-kit\",hex:\"4C4A73\"},Society6:{title:\"Society6\",slug:\"society6\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Society6 icon</title><path d=\"M12 0C5.373 0 0 5.373 0 12s5.373 12 12 12 12-5.373 12-12S18.627 0 12 0zm7.928 4.966l.042.876-.916.157c-.705.194-1.32.465-1.843.813s-.966.73-1.33 1.148a6.147 6.147 0 0 0-.888 1.339l-.016.036c-.243.506-.459 1.04-.65 1.599a4.992 4.992 0 0 1 1.31-.812l.033-.012c.521-.223 1.141-.335 1.864-.335.839 0 1.543.296 2.111.884s.853 1.355.853 2.298c0 1.409-.541 2.628-1.624 3.659s-2.414 1.547-3.992 1.547c-1.255 0-2.256-.374-3.003-1.122s-1.12-1.743-1.12-2.981c0-2.363.84-4.387 2.52-6.073s3.895-2.692 6.65-3.023zM7.925 9.103c.435 0 .838.027 1.211.081.388.055.739.159 1.065.307l-.024-.01c.286.13.524.322.705.56l.003.004c.169.232.252.513.252.844s-.118.614-.356.852c-.237.238-.549.356-.933.356-.332 0-.607-.091-.828-.272s-.399-.394-.537-.642c-.137-.253-.247-.516-.327-.784s-.146-.493-.197-.674c-.401.024-.765.178-1.094.459s-.495.629-.495 1.046c0 .253.039.452.116.596s.184.265.311.358l.003.002c.162.115.348.217.544.296l.018.006c.151.069.431.177.714.279l.132.041c.778.288 1.365.635 1.76 1.038.321.328.509.742.569 1.241-.008-.117.117 1.109.018.183.002.056.006.113.006.171 0 .433-.097.847-.289 1.245s-.464.728-.818.992a4.26 4.26 0 0 1-1.336.646l-.03.007c-.516.147-1.172.221-1.967.221-.722 0-1.318-.061-1.789-.184s-.845-.282-1.12-.474c-.281-.193-.473-.398-.575-.617s-.155-.425-.155-.617c0-.349.125-.655.373-.916s.58-.391.991-.391c.344 0 .631.092.863.278.236.193.43.426.574.691l.006.012c.136.244.259.528.352.824l.009.032c.035.09.106.322.172.556l.034.139c.647 0 1.137-.144 1.469-.436s.498-.691.498-1.196c0-.222-.05-.408-.15-.558s-.234-.283-.399-.398c-.166-.108-.377-.213-.635-.315s-.513-.198-.765-.289c-.693-.246-1.24-.587-1.644-1.023s-.605-.978-.605-1.628v-.013c0-.391.093-.76.259-1.087l-.006.014c.17-.34.434-.654.794-.944.355-.276.804-.496 1.348-.661s1.179-.249 1.906-.249zm8.017 1.874c-.329 0-.64.066-.933.199s-.605.397-.934.792c-.04.183-.109.534-.21 1.055s-.152 1.162-.152 1.923c0 .778.123 1.384.365 1.82s.566.655.968.655c.626 0 1.168-.432 1.628-1.295h.002c.46-.864.69-1.912.69-3.144 0-.618-.134-1.108-.402-1.468s-.608-.538-1.022-.538z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://blog.society6.com/app/themes/society6/dist/images/mark.svg\",hex:\"000000\"},\"Socket.io\":{title:\"Socket.io\",slug:\"socket-dot-io\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Socket.io icon</title><path d=\"M11.936.016a12.17 12.17 0 0 0-2.975.378C4.281 1.557.567 5.797.091 10.604c-.59 4.549 1.708 9.286 5.644 11.635 3.861 2.418 9.093 2.32 12.874-.223 3.397-2.206 5.512-6.228 5.386-10.285-.058-4.016-2.31-7.917-5.759-9.98C16.354.59 14.143.007 11.936.016zm-.063 1.696c4.945-.007 9.789 3.814 10.282 8.925.945 5.66-3.753 11.413-9.488 11.58-5.454.544-10.725-4.08-10.88-9.557C1.38 8.226 4.303 3.825 8.485 2.36a9.113 9.113 0 0 1 3.388-.647zm5.091 3.225c-2.687 2.085-5.26 4.308-7.889 6.457 1.203.017 2.412.016 3.621.01 1.41-2.165 2.859-4.301 4.268-6.467zm-5.665 7.654c-1.41 2.166-2.86 4.309-4.27 6.474 2.693-2.08 5.255-4.32 7.902-6.456a255.425 255.425 0 0 0-3.632-.018z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://socket.io\",hex:\"010101\"},Sogou:{title:\"Sogou\",slug:\"sogou\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Sogou icon</title><path d=\"M16.801 22.74L17.79 24c1.561-.676 2.926-1.62 4.051-2.851l-.946-1.318c-1.11 1.289-2.475 2.279-4.08 2.909h-.014zM12 22.199c-5.775 0-10.455-4.619-10.455-10.35C1.545 6.15 6.225 1.53 12 1.53s10.456 4.65 10.456 10.35c0 2.55-.946 4.891-2.507 6.69l.945 1.261C22.801 17.729 24 14.939 24 11.88 24 5.295 18.63 0 12 0S0 5.311 0 11.85c0 6.57 5.37 11.88 12 11.88 1.71 0 3.33-.346 4.801-.99l-.961-1.26c-1.2.45-2.49.719-3.84.719zM18 12.646c-2.25-1.86-5.34-2.101-7.801-3.556-.75-.479-.148-1.395.602-1.425 2.699-.45 5.369.63 7.889 1.5l.151-2.655c-3.151-1.14-6.57-1.875-9.901-1.35-1.2.3-2.4.675-3.254 1.56-1.171 1.2-.961 3.36.389 4.32 2.236 1.755 5.176 2.011 7.621 3.36.96.39.555 1.68-.391 1.77-2.925.555-5.805-.721-8.325-2.1-.03 1.02-.06 2.01-.06 3 3.195 1.409 6.75 2.069 10.2 1.529 1.17-.225 2.37-.6 3.225-1.454 1.229-1.2 1.111-3.511-.33-4.5H18z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.sogou.com/\",hex:\"FB6022\"},Solus:{title:\"Solus\",slug:\"solus\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Solus icon</title><path d=\"M7.453 0c-.18.587-.369 1.167-.565 1.75A11.638 11.638 0 0 0 0 12.364a11.638 11.638 0 0 0 .516 3.403l-.339.598L0 16.73l.279.143a3.448 3.448 0 0 0 .741.222A11.638 11.638 0 0 0 2 18.868c4.034.343 8.55.512 12.446-.056 3.192-.463 5.94-1.423 7.735-3.117.252-.233.474-.474.674-.722.019-.038.037-.053.06-.076.011 0 .026-.037.038-.052.015 0 .03-.038.041-.057.008 0 .015-.038.023-.038.33-.444.587-.892.801-1.31l.181-.365-.365-.365a5.936 5.936 0 0 0-.361-.35A11.638 11.638 0 0 0 11.635.722a11.638 11.638 0 0 0-3.211.463C7.96.508 7.596.041 7.453 0zm.365 1.637C9.06 3.82 10.13 5.06 11.454 7.457c.132 1.524.67 9.45.727 10.181-.392-.037-2.485-.24-5.104-.515-1.43-.147-2.899-.316-4.092-.49l-1.9-.447c2.149-3.787 5.551-9.727 6.737-14.548zm4.543 6.18s4.991 3.927 7.092 8.73c-2.56 1.26-4.916 1.098-6.361 1.09 1.023-2.634 1.023-6.21-.73-9.82zm3.456 2.184a45.14 45.14 0 0 1 2.91.907c1.768.629 3.417 1.49 4.365 2.364a6.956 6.956 0 0 1-2.91 2.91c.151-1.495-.39-2.933-1.456-4.002-.787-.787-1.822-1.453-2.91-2.183zm6.707 6.478c-2.352 1.667-5.126 2.68-7.965 3.112a41.026 41.026 0 0 1-3.715.34h-.323a53.48 53.48 0 0 1-3.727 0 85.763 85.763 0 0 1-4.178-.23h-.003c2.555 3.255 6.993 4.893 11.092 4.102a11.367 11.367 0 0 0 4.498-1.852 11.638 11.638 0 0 0 .007 0c.312-.214.614-.444.903-.685a11.638 11.638 0 0 0 .038-.037 11.555 11.555 0 0 0 3.376-4.762zM2.511 19.584a11.638 11.638 0 0 0 .023.038c-.008 0-.015-.038-.023-.038z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://getsol.us/branding/\",hex:\"5294E2\"},SonarCloud:{title:\"SonarCloud\",slug:\"sonarcloud\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>SonarCloud icon</title><path d=\"M22.406 10.9a7.088 7.088 0 00-3.377-2.358v-.085c0-4.035-3.156-7.324-7.047-7.324-3.893 0-7.05 3.282-7.05 7.325v.1C2.081 9.492 0 12.268 0 15.542c0 4.035 3.159 7.325 7.05 7.325a6.907 6.907 0 004.952-2.108 6.885 6.885 0 004.947 2.108c3.884 0 7.051-3.282 7.051-7.325a7.572 7.572 0 00-1.594-4.643zM16.95 21.014c-2.903 0-5.267-2.456-5.267-5.474a.91.91 0 00-.89-.924.906.906 0 00-.892.925c0 1.368.367 2.651.994 3.748a5.156 5.156 0 01-3.845 1.733c-2.904 0-5.27-2.457-5.27-5.474 0-3.016 2.366-5.473 5.27-5.473.63 0 1.241.117 1.827.335.007 0 .013.007.02.007.203.071.489.21.578.287a.858.858 0 001.249-.1.942.942 0 00-.097-1.3c-.39-.342-.995-.575-1.144-.63a6.814 6.814 0 00-2.425-.443c-.113 0-.225 0-.338.007.12-2.916 2.433-5.247 5.27-5.247 2.903 0 5.267 2.456 5.267 5.474a5.569 5.569 0 01-2.215 4.463.948.948 0 00-.21 1.283c.171.25.45.39.727.39a.86.86 0 00.516-.172 7.381 7.381 0 002.709-4.02c2.035.785 3.449 2.829 3.449 5.139-.007 3.01-2.371 5.466-5.283 5.466z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://sonarcloud.io/about\",hex:\"F3702A\"},SonarLint:{title:\"SonarLint\",slug:\"sonarlint\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>SonarLint icon</title><path d=\"M12.182.033c-.697-.01-1.399.008-1.787.063a12.054 12.054 0 00-6.88 3.414C1.226 5.8 0 8.754 0 12.004c0 3.298 1.26 6.283 3.611 8.568 1.833 1.779 3.991 2.871 6.53 3.293.79.127 2.731.144 3.527.024 2.647-.392 4.94-1.537 6.814-3.412 2.394-2.382 3.635-5.53 3.508-8.895-.12-3.135-1.295-5.842-3.502-8.055C18.673 1.72 16.514.603 13.94.145 13.57.08 12.878.043 12.182.033zm-.026 2.127c.38.007.764.033 1.15.082 2.129.272 4.113 1.255 5.663 2.805 1.88 1.881 2.875 4.286 2.875 6.951 0 2.647-.97 5.011-2.826 6.904-1.387 1.405-3.076 2.328-5.047 2.75-.863.187-2.538.229-3.407.096-2.164-.35-4.021-1.283-5.54-2.809-1.52-1.513-2.45-3.359-2.788-5.517-.096-.621-.096-2.28 0-2.865.38-2.255 1.292-4.02 2.871-5.577 1.92-1.888 4.39-2.867 7.05-2.82zm6.91 7.639c-.095-.023-.2-.013-.357.017-.253.049-.746.61-1.012 1.164-.452.929-.725 1.2-1.123 1.11-.277-.06-.705-.531-1.06-1.17-.38-.675-.447-.76-.743-.91-.602-.308-1.127 0-1.664.982-.373.67-.645.952-.964.994-.248.037-.27.024-.541-.26-.157-.162-.404-.523-.555-.8-.332-.621-.58-.815-1.05-.815-.833 0-1.177.254-1.665 1.23-.35.694-.645 1.085-.826 1.085-.296 0-.573-.324-1.043-1.235-.169-.331-.378-.675-.469-.765-.597-.633-1.7-.097-2.34 1.133-.138.265-.35.663-.47.886-.187.356-.217.47-.217.82 0 .495.085.645.332.585.235-.06.59-.452.957-1.06.506-.839 1.002-1.105 1.412-.755.205.175.41.573.5.983.084.41.441.855.797 1 .253.108.319.115.572.043.398-.103.778-.446 1.11-1.006.488-.82.916-1.093 1.453-.93.331.097.613.405.94 1.014.463.862.844 1.193 1.2 1.043.32-.139.627-.488.977-1.121.374-.682.742-.997 1.164-.997.422 0 .796.314 1.182.977.229.41.656.803.916.857.259.049.608-.055.837-.242.103-.09.34-.415.52-.722.856-1.454 1.404-1.4 2.314.222.217.386.586.7.748.639.109-.042.188-.507.133-.82-.054-.332-.777-1.893-1.115-2.387-.157-.23-.398-.507-.543-.615-.124-.097-.21-.152-.307-.174z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/SonarSource/sonarlint-website/\",hex:\"CC2026\"},SonarQube:{title:\"SonarQube\",slug:\"sonarqube\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>SonarQube icon</title><path d=\"M15.685.386l-.465.766c3.477 2.112 6.305 5.27 7.966 8.89L24 9.67C22.266 5.887 19.313 2.59 15.685.386zM8.462.91l-.305 1.075c6.89 1.976 12.384 7.64 13.997 14.421l1.085-.258C21.535 8.977 15.735 2.997 8.462.909zM0 2.667v1.342c10.963 0 19.883 8.795 19.883 19.605h1.342c0-11.55-9.522-20.947-21.225-20.947z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.sonarqube.org/logos/\",hex:\"4E9BCD\"},SonarSource:{title:\"SonarSource\",slug:\"sonarsource\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>SonarSource icon</title><path d=\"M15.71.4l-.467.737c3.476 2.14 6.284 5.28 7.955 8.89L24 9.694c-1.671-3.81-4.68-7.086-8.29-9.292zM8.49.87l-.333 1.069c6.952 2.006 12.434 7.62 14.039 14.44l1.069-.268C21.527 8.958 15.778 2.942 8.49.87zM0 2.607v1.338c10.964 0 19.922 8.824 19.922 19.654h1.337C21.26 12.034 11.7 2.607 0 2.607z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.sonarsource.com/\",hex:\"CB3032\"},Songkick:{title:\"Songkick\",slug:\"songkick\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Songkick icon</title><path d=\"M6.55 18.779c-1.855 0-3.372-.339-4.598-1.602l1.92-1.908c.63.631 1.74.853 2.715.853 1.186 0 1.739-.391 1.739-1.089 0-.291-.06-.529-.239-.717-.15-.154-.404-.273-.795-.324l-1.455-.205c-1.064-.152-1.891-.51-2.43-1.072-.555-.578-.84-1.395-.84-2.434C2.536 8.066 4.2 6.45 6.96 6.45c1.74 0 3.048.407 4.086 1.448L9.171 9.77c-.765-.766-1.77-.715-2.295-.715-1.039 0-1.465.597-1.465 1.125 0 .152.051.375.24.561.15.153.404.307.832.359l1.467.203c1.09.153 1.875.495 2.385 1.005.645.63.9 1.53.9 2.655 0 2.47-2.127 3.819-4.68 3.819l-.005-.003zM20.813 2.651C19.178 1.432 17.37.612 15.089.237v10.875l3.261-4.539h3.565l-4.095 5.72s.944 1.51 1.515 2.405c.586.899 1.139 1.14 1.965 1.14h.57v2.806h-.872c-1.812 0-2.9-.33-3.72-1.575-.504-.811-2.175-3.436-2.175-3.436v4.995H12.12V-.001H12c-3.852 0-6.509.931-8.811 2.652C-.132 5.137.001 8.451.001 11.997c0 3.547-.133 6.867 3.188 9.352C5.491 23.074 8.148 24 12 24s6.51-.927 8.812-2.651C24.131 18.865 24 15.544 24 11.997c0-3.546.132-6.859-3.188-9.346h.001z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://blog.songkick.com/media-assets\",hex:\"F80046\"},SonicWall:{title:\"SonicWall\",slug:\"sonicwall\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>SonicWall icon</title><path d=\"M23.638 10.303h-.045v-.1h.045c.037 0 .055.019.055.051s-.018.05-.055.05zm.15-.05c0-.059-.038-.112-.127-.112h-.162v.364h.094v-.14h.035l.085.14h.11l-.104-.151a.102.102 0 00.068-.101m-.15.34a.267.267 0 110-.535.267.267 0 010 .535zm0-.574a.307.307 0 100 .614.307.307 0 000-.614m-7.7.1l-.621 1.846-.014.04-.013-.04-.611-1.854h-.497l-.611 1.854-.014.04-.013-.04-.62-1.846h-.616l.981 2.726h.505l.615-1.778.014-.038.013.038.615 1.778h.505l.982-2.726h-.6M1.033 11.355c-.615-.126-.732-.287-.732-.539v-.007c0-.267.254-.46.605-.46.293 0 .526.087.755.285l.021.018.006-.006v-.302a1.303 1.303 0 00-.775-.225c-.49 0-.86.305-.86.708v.008c0 .408.26.627.895.755.598.12.71.277.71.525v.007c0 .287-.257.487-.626.487-.36 0-.616-.106-.91-.378l-.021-.019-.005.005v.312c.283.212.574.309.924.309.522 0 .886-.302.886-.734v-.008c0-.395-.26-.616-.873-.74m10.083-1.23c-.4 0-.732.128-.998.387a1.282 1.282 0 00-.398.956c0 .36.11.667.329.922.261.301.618.452 1.07.452.239 0 .454-.045.647-.135.096-.044.184-.12.264-.183v-.336c-.242.273-.54.41-.894.41-.33 0-.603-.106-.82-.317a1.058 1.058 0 01-.324-.79 1.067 1.067 0 01.554-.963c.176-.1.367-.149.574-.149.189 0 .362.038.52.114.15.072.28.177.39.314v-.35c-.078-.065-.165-.143-.26-.19a1.465 1.465 0 00-.654-.143m6.602.713l.36.927-.074-.003a7.525 7.525 0 00-.65.008zm.903.96l-.645-1.68h-.524l-.64 1.715c-.63.117-1.037.392-.836.936.278.758 1.542 1.212 1.542 1.212s-1.253-.808-.604-1.332c.29-.234.803-.41 1.29-.536l.28.725h.536l-.321-.837c.411-.084.721-.124.721-.124s-.365-.045-.8-.08m3.57-1.678h-.517v2.714h1.547v-.493h-1.03V10.12m-2.095 0h-.517v2.714h1.547v-.493h-1.03V10.12M8.728 12.847h.256v-2.73h-.256v2.73m-1.01-.633l-1.82-2.095h-.06v2.734h.283v-2.07l1.805 2.07h.061v-2.734h-.27v2.095m-2.985-.176c-.095.169-.228.301-.398.398-.17.097-.355.145-.554.145-.3 0-.555-.105-.767-.316a1.05 1.05 0 01-.318-.775c0-.206.047-.394.143-.562a1.07 1.07 0 01.4-.401c.17-.1.351-.149.542-.149.194 0 .377.05.55.149a1.067 1.067 0 01.545.95c0 .206-.048.393-.143.561zm-.964-1.91c-.24 0-.464.06-.67.18-.207.119-.37.284-.49.495-.12.211-.18.44-.18.688 0 .371.132.687.395.949.262.26.584.392.966.392.377 0 .697-.132.959-.394.262-.263.393-.582.393-.96 0-.38-.131-.7-.394-.96a1.336 1.336 0 00-.979-.39\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://brandfolder.com/sonicwall/sonicwall-external\",hex:\"FF6600\"},Sonos:{title:\"Sonos\",slug:\"sonos\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Sonos icon</title><path d=\"M12.988 12.36l-2.813-2.634v4.429h.837V11.7l2.813 2.633V9.905h-.837zM6.464 9.665A2.3 2.3 0 0 0 4.13 12c0 1.257 1.077 2.334 2.334 2.334A2.3 2.3 0 0 0 8.798 12a2.3 2.3 0 0 0-2.334-2.334m0 3.83A1.482 1.482 0 0 1 4.968 12c0-.838.658-1.496 1.496-1.496S7.96 11.162 7.96 12s-.658 1.496-1.496 1.496M2.694 12c-.24-.18-.54-.3-.958-.419-.838-.24-.838-.479-.838-.598 0-.24.299-.48.718-.48.36 0 .658.18.778.24l.06.06.658-.479-.06-.06s-.538-.598-1.436-.598c-.419 0-.838.12-1.137.359-.3.24-.479.598-.479.958s.18.718.479.957c.24.18.538.3.957.42.838.239.838.478.838.598 0 .239-.299.478-.718.478-.359 0-.658-.18-.778-.239l-.06-.06-.658.479.06.06s.538.598 1.436.598c.42 0 .838-.12 1.137-.359.3-.24.48-.598.48-.957 0-.36-.18-.659-.48-.958m14.843-2.334A2.3 2.3 0 0 0 15.202 12a2.337 2.337 0 0 0 2.334 2.334A2.3 2.3 0 0 0 19.87 12a2.337 2.337 0 0 0-2.334-2.334m0 3.83A1.482 1.482 0 0 1 16.04 12c0-.838.658-1.496 1.496-1.496s1.496.658 1.496 1.496-.718 1.496-1.496 1.496m3.77-1.556c.24.18.54.3.958.42.838.239.838.478.838.598 0 .239-.299.478-.718.478-.36 0-.658-.18-.778-.239h-.06l-.658.479.06.06s.538.598 1.436.598c.419 0 .838-.12 1.137-.359s.479-.598.479-.958-.18-.718-.479-.957c-.24-.18-.538-.3-.957-.42-.838-.239-.838-.478-.838-.598 0-.239.299-.478.718-.478.359 0 .658.18.778.239l.06.06.658-.479-.06-.06s-.538-.598-1.436-.598c-.42 0-.838.12-1.137.359-.3.24-.48.598-.48.957-.059.36.12.659.48.898\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.sonos.com/en-gb/home\",hex:\"000000\"},SoundCloud:{title:\"SoundCloud\",slug:\"soundcloud\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>SoundCloud icon</title><path d=\"M1.175 12.225c-.051 0-.094.046-.101.1l-.233 2.154.233 2.105c.007.058.05.098.101.098.05 0 .09-.04.099-.098l.255-2.105-.27-2.154c0-.057-.045-.1-.09-.1m-.899.828c-.06 0-.091.037-.104.094L0 14.479l.165 1.308c0 .055.045.094.09.094s.089-.045.104-.104l.21-1.319-.21-1.334c0-.061-.044-.09-.09-.09m1.83-1.229c-.061 0-.12.045-.12.104l-.21 2.563.225 2.458c0 .06.045.12.119.12.061 0 .105-.061.121-.12l.254-2.474-.254-2.548c-.016-.06-.061-.12-.121-.12m.945-.089c-.075 0-.135.06-.15.135l-.193 2.64.21 2.544c.016.077.075.138.149.138.075 0 .135-.061.15-.15l.24-2.532-.24-2.623c0-.075-.06-.135-.135-.135l-.031-.017zm1.155.36c-.005-.09-.075-.149-.159-.149-.09 0-.158.06-.164.149l-.217 2.43.2 2.563c0 .09.075.157.159.157.074 0 .148-.068.148-.158l.227-2.563-.227-2.444.033.015zm.809-1.709c-.101 0-.18.09-.18.181l-.21 3.957.187 2.563c0 .09.08.164.18.164.094 0 .174-.09.18-.18l.209-2.563-.209-3.972c-.008-.104-.088-.18-.18-.18m.959-.914c-.105 0-.195.09-.203.194l-.18 4.872.165 2.548c0 .12.09.209.195.209.104 0 .194-.089.21-.209l.193-2.548-.192-4.856c-.016-.12-.105-.21-.21-.21m.989-.449c-.121 0-.211.089-.225.209l-.165 5.275.165 2.52c.014.119.104.225.225.225.119 0 .225-.105.225-.225l.195-2.52-.196-5.275c0-.12-.105-.225-.225-.225m1.245.045c0-.135-.105-.24-.24-.24-.119 0-.24.105-.24.24l-.149 5.441.149 2.503c.016.135.121.24.256.24s.24-.105.24-.24l.164-2.503-.164-5.456-.016.015zm.749-.134c-.135 0-.255.119-.255.254l-.15 5.322.15 2.473c0 .15.12.255.255.255s.255-.12.255-.27l.15-2.474-.165-5.307c0-.148-.12-.27-.271-.27m1.005.166c-.164 0-.284.135-.284.285l-.103 5.143.135 2.474c0 .149.119.277.284.277.149 0 .271-.12.284-.285l.121-2.443-.135-5.112c-.012-.164-.135-.285-.285-.285m1.184-.945c-.045-.029-.105-.044-.165-.044s-.119.015-.165.044c-.09.054-.149.15-.149.255v.061l-.104 6.048.115 2.449v.008c.008.06.03.135.074.18.058.061.142.104.234.104.08 0 .158-.044.209-.09.058-.06.091-.135.091-.225l.015-.24.117-2.203-.135-6.086c0-.104-.061-.193-.135-.239l-.002-.022zm1.006-.547c-.045-.045-.09-.061-.15-.061-.074 0-.149.016-.209.061-.075.061-.119.15-.119.24v.029l-.137 6.609.076 1.215.061 1.185c0 .164.148.314.328.314.181 0 .33-.15.33-.329l.15-2.414-.15-6.637c0-.12-.074-.221-.165-.277m8.934 3.777c-.405 0-.795.086-1.139.232-.24-2.654-2.46-4.736-5.188-4.736-.659 0-1.305.135-1.889.359-.225.09-.27.18-.285.359v9.368c.016.18.15.33.33.345h8.185C22.681 17.218 24 15.914 24 14.28s-1.319-2.952-2.938-2.952\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://soundcloud.com/press\",hex:\"FF3300\"},\"Source Engine\":{title:\"Source Engine\",slug:\"sourceengine\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Source Engine icon</title><path d=\"M19.865.718h-.26L7.64.786C5.169.659 2.735 1.264.63 2.475l.002.002a1.211 1.211 0 00.578 2.274c.35 0 .662-.148.883-.383a10.321 10.321 0 018.818-.462c5.275 2.165 7.805 8.22 5.64 13.495a10.283 10.283 0 01-2.495 3.613l.01.013a1.21 1.21 0 101.63 1.69 12.638 12.638 0 003.04-4.419c.049-.118 4.952-12.061 4.964-12.093A3.992 3.992 0 0021.522.998c-.55-.226-1.064-.278-1.657-.28zM6.067 6.853c-2.635 0-5.342.807-5.342 3.941 0 2.16 1.946 2.849 3.893 3.277 2.422.522 3.823.878 3.823 1.899 0 1.188-1.235 1.568-2.208 1.568-1.33 0-2.564-.594-2.588-2.066H.44c.143 3.252 2.92 4.32 5.77 4.32 2.801 0 5.603-1.044 5.603-4.273 0-2.28-1.923-2.992-3.894-3.443-1.923-.451-3.823-.617-3.823-1.828 0-.997 1.116-1.14 1.877-1.14 1.21 0 2.207.357 2.302 1.662h3.205c-.26-3.015-2.73-3.917-5.413-3.917z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://developer.valvesoftware.com/favicon.ico\",hex:\"F79A10\"},SourceForge:{title:\"SourceForge\",slug:\"sourceforge\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>SourceForge icon</title><path d=\"M2.43 11.361c0-.372.303-.705.675-.705h6.968c.271-.003.486-.219.486-.488V8.713c0-.27-.219-.487-.488-.487H2.43C1.088 8.227 0 9.314 0 10.654v2.695c0 1.342 1.086 2.431 2.426 2.431h5.021c.372 0 .676.331.676.706v1.282c0 .371-.304.707-.676.707H.486c-.271 0-.485.217-.485.486v1.453c0 .268.216.486.485.486H8.13c1.34 0 2.426-1.087 2.426-2.427v-2.697c0-1.34-1.086-2.428-2.427-2.428H3.104c-.372 0-.675-.334-.675-.704v-1.283zm21.088-3.13h-5.024V5.525h5.02c.266 0 .483-.217.483-.486V3.585c0-.271-.215-.486-.484-.486h-5.019c-1.34 0-2.427 1.087-2.427 2.427v2.706H13.74c-.27 0-.484.218-.484.485v1.459c0 .268.216.484.483.484h2.325v7.953c0 .24.099.284.303.284.488 0 2.124-.91 2.124-1.688v-6.551h5.024c.266 0 .484-.218.484-.484v-1.46c0-.266-.219-.483-.484-.483h.003z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://sourceforge.net/\",hex:\"535353\"},Sourcegraph:{title:\"Sourcegraph\",slug:\"sourcegraph\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Sourcegraph icon</title><path d=\"M9.341.002a2.56 2.56 0 0 0-.484.069C7.501.379 6.7 1.735 7.007 3.092L8.412 8.14 3.368 6.485C2.073 6.053.655 6.793.223 8.088c-.431 1.295.31 2.714 1.603 3.146l5.853 1.919-4.063 4.556a2.635 2.635 0 0 0-.618 1.666 2.474 2.474 0 0 0 2.467 2.466c.678 0 1.357-.308 1.85-.863l3.563-3.979 1.433 5.151A2.498 2.498 0 0 0 14.716 24h.001c.185 0 .431-.061.617-.123a2.514 2.514 0 0 0 1.726-3.084l-1.38-5.017 4.957 1.625c.309.062.556.123.802.123 1.111 0 2.036-.678 2.343-1.726.433-1.296-.308-2.714-1.603-3.146l-5.728-1.878 4.063-4.537c.925-1.048.863-2.59-.185-3.514-1.049-.926-2.59-.864-3.516.184l-3.571 4.006-1.424-5.178C11.494.655 10.462-.046 9.34.002z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/sourcegraph/about\",hex:\"00B4F2\"},Spacemacs:{title:\"Spacemacs\",slug:\"spacemacs\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Spacemacs icon</title><path d=\"M11.997.011c-1.79.015-3.452.397-4.968 1.093l.005-.002c3.638 2.026 6.955 5.634 8.932 8.241.398.534.753 1.006 1.078 1.434l.004-.019c.412-1.738-.313-5.239-1.518-7.331-.117-.203-.201-.379-.187-.392l.006.002.002-.007c.098.024 1.031.995 1.373 1.433.599.767.832 1.213 1.162 2.23.858 2.645 1.424 4.801 1.901 7.249.239 1.228.675 3.458.731 3.884.007.057-.009.128-.01.143a5.164 5.164 0 0 0-.29-.264c-.645-.568-1.924-1.417-3.183-2.114-1.57-.87-3.118-1.614-6.575-3.162-3.156-1.413-4.61-2.086-5.751-2.661l-1.024-.51c.12.301.249.624.399 1.005 0 0 1.933 1.08 2.174 1.408 0 0 2.322 4.367 3.353 6.955.767 1.949 1.634 4.264 2.155 4.904l.06.069c-1.026-.251-5.745-2.598-5.745-2.598-.518-4.399-1.969-9.61-3.855-14.94a7.259 7.259 0 0 1-.125-.271c.001-.015.141.121.311.303C4.313 8.13 8.368 9.98 12.675 10.775a16.48 16.48 0 0 0 3.533.223c-.307-.392-.64-.821-1.009-1.302-3.418-4.455-6.774-6.326-9.78-7.469-.079-.028-.154-.061-.231-.088A11.902 11.902 0 0 0 .669 8.071a11.97 11.97 0 0 0-.67 4.016l.003-.088c.033 5.018 3.129 9.616 8.052 11.33 1.335.465 2.696.68 4.032.67l-.088-.003c5.018-.033 9.616-3.129 11.33-8.052.465-1.335.68-2.696.67-4.032l-.003.088c-.033-5.018-3.129-9.616-8.052-11.33A11.966 11.966 0 0 0 11.911 0l.088.003zm6.133 6.11l-.002.007c-.001 0 0 0 0 0l.002-.007c.531.511 1.376 1.503 2.336 2.062.789.99 1.216 1.963 1.748 2.629-.219-.188-1.111-.972-1.111-.972s-1.378-1.305-2.141-2.153c-.293-.326-.32-.38-.478-.628-.062-.097-.275-.825-.354-.935h-.001l.002-.007z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://spacemacs.org/\",hex:\"9266CC\"},SpaceX:{title:\"SpaceX\",slug:\"spacex\",svg:'<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" role=\"img\"><title>SpaceX icon</title><path d=\"M23.952 6.965c-.005-.002-.009-.006-.014-.006-.009 0-.016.006-.023.009C8.787 8.491 1.676 15.07 0 16.688l.223.35h2.644c6.872-6.908 16.156-9.201 21.065-9.956l.006.002c.004 0 .006-.004.01-.004.029-.006.052-.028.052-.059 0-.029-.021-.049-.048-.056z M.38 10.508l-.16.302 3.245 2.366a31.761 31.761 0 0 1 2.012-1.073L3.3 10.508H.38zM7.592 13.65c-.536.395-1.084.818-1.674 1.313l2.852 2.078h2.957l.123-.273-4.258-3.118z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.spacex.com/sites/all/themes/spacex2012/images/logo.svg\",hex:\"005288\"},SparkFun:{title:\"SparkFun\",slug:\"sparkfun\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>SparkFun icon</title><path d=\"M17.805 3.852s.34 1.441-.746 1.64c-.754.133-1.973-.617-2.586-1.363-.758-.922-.66-1.649-.075-2.29.883-.98 2.399-.6 2.399-.6s-2.774-2.43-5.66-.438c-2.57 1.77-1.832 4.18.488 6.285 2.09 1.902.422 3.988-1.688 3.719-1.44-.184-2.03-1.344-1.687-2.055.3-.61 1.336-.984 1.336-.984s-1.191-.48-2.59.046c-1.262.473-2.297 1.512-2.215 4.122v12.078s1.301-1.602 2.832-3.235c1.711-1.84 2.492-3.082 4.25-2.937 3.328.207 5.735-1.274 7.371-3.645 3.141-4.562.68-9.66-1.43-10.343zm0 0\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.sparkfun.com/brand_assets\",hex:\"E53525\"},SparkPost:{title:\"SparkPost\",slug:\"sparkpost\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>SparkPost icon</title><path d=\"M16.2 9c-1.351.9-1.8 2.7-1.65 3.9-2.25-2.25 3.45-8.55-3-12.9C15.15 5.4 6 9.75 6 17.4c0 3 1.95 5.701 6 6.6 4.05-.898 6-3.6 6-6.6 0-4.5-2.7-6-1.8-8.4zM12 20.852c-1.8 0-3.45-1.5-3.45-3.451 0-1.801 1.5-3.45 3.45-3.45 1.8 0 3.45 1.5 3.45 3.45-.15 1.951-1.65 3.451-3.45 3.451z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.sparkpost.com/\",hex:\"FA6423\"},SPDX:{title:\"SPDX\",slug:\"spdx\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>SPDX icon</title><path d=\"M0 0v24H8.222l2.089-2.373 2.09-2.374V13.2H18.978l2.51-2.488L24 8.223V0H12zm5.2 5.2h13.791L12.2 12c-3.735 3.74-6.838 6.8-6.896 6.8-.057 0-.104-3.06-.104-6.8zm8.4 8.8v10H24V14h-5.2z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://spdx.org/Resources\",hex:\"4398CC\"},Spectrum:{title:\"Spectrum\",slug:\"spectrum\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Spectrum icon</title><path d=\"M0 10.2A1.8 1.8 0 001.8 12h1.8a8.4 8.4 0 018.4 8.4v1.8a1.8 1.8 0 001.8 1.8h8.4a1.8 1.8 0 001.8-1.8v-1.8C24 9.133 14.867 0 3.6 0H1.8A1.8 1.8 0 000 1.8v8.4z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://spectrum.chat\",hex:\"7B16FF\"},\"Speaker Deck\":{title:\"Speaker Deck\",slug:\"speakerdeck\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Speaker Deck icon</title><path d=\"M11.2 13.598l.02-3.196-2.67 1.61M12.798 10.403l-.015 3.19 2.667-1.608M12.783 13.598v-.004l-.004.002M23.997 4.59c0-.878-.715-1.59-1.597-1.59H1.6C.717 3 0 3.713 0 4.59v14.82C0 20.288.715 21 1.6 21h20.8c.883 0 1.6-.713 1.6-1.59V4.59h-.003zm-6.434 9.54h-.014c0 .586-.466 1.052-1.05 1.065l.036-.016h-9.07c-.58-.01-1.05-.48-1.05-1.06H6.41V9.88h.01c0-.58.463-1.05 1.033-1.06h9.06c.57.017 1.05.48 1.05 1.067v4.244z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://speakerdeck.com/\",hex:\"339966\"},Spotify:{title:\"Spotify\",slug:\"spotify\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Spotify icon</title><path d=\"M12 0C5.4 0 0 5.4 0 12s5.4 12 12 12 12-5.4 12-12S18.66 0 12 0zm5.521 17.34c-.24.359-.66.48-1.021.24-2.82-1.74-6.36-2.101-10.561-1.141-.418.122-.779-.179-.899-.539-.12-.421.18-.78.54-.9 4.56-1.021 8.52-.6 11.64 1.32.42.18.479.659.301 1.02zm1.44-3.3c-.301.42-.841.6-1.262.3-3.239-1.98-8.159-2.58-11.939-1.38-.479.12-1.02-.12-1.14-.6-.12-.48.12-1.021.6-1.141C9.6 9.9 15 10.561 18.72 12.84c.361.181.54.78.241 1.2zm.12-3.36C15.24 8.4 8.82 8.16 5.16 9.301c-.6.179-1.2-.181-1.38-.721-.18-.601.18-1.2.72-1.381 4.26-1.26 11.28-1.02 15.721 1.621.539.3.719 1.02.419 1.56-.299.421-1.02.599-1.559.3z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://developer.spotify.com/design\",hex:\"1ED760\"},Spotlight:{title:\"Spotlight\",slug:\"spotlight\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Spotlight icon</title><path d=\"M15.126 6.408c.008.101.008.194 0 .295-.034.589-.295 1.027-.656 1.388a2.093 2.093 0 0 1-1.464.606 2.106 2.106 0 0 1-1.498-.572 2.126 2.126 0 0 1-.126-2.996l.101-.101c.353-.345.757-.547 1.372-.606a2.112 2.112 0 0 1 1.582.555c.396.37.64.884.69 1.431zm8.465 7.288l-.631 1.22a3.73 3.73 0 0 0-.37 1.144l-.21 1.363a3.692 3.692 0 0 1-2.003 2.752l-1.229.614c-.362.185-.69.421-.976.707l-.968.985a3.703 3.703 0 0 1-3.24 1.052l-1.355-.227a3.625 3.625 0 0 0-1.203 0l-1.355.227a3.71 3.71 0 0 1-3.24-1.052l-.968-.985a3.669 3.669 0 0 0-.976-.707l-1.229-.614a3.71 3.71 0 0 1-2.003-2.752l-.21-1.363a3.58 3.58 0 0 0-.37-1.144l-.64-1.22a3.68 3.68 0 0 1 0-3.4l.631-1.22a3.73 3.73 0 0 0 .37-1.144l.21-1.363a3.692 3.692 0 0 1 2.003-2.752l1.229-.614c.362-.185.69-.421.976-.707l.968-.976a3.703 3.703 0 0 1 3.24-1.052l1.355.227c.396.067.808.067 1.203 0l1.355-.227a3.71 3.71 0 0 1 3.24 1.052l.968.976c.286.286.614.53.976.707l1.229.614a3.71 3.71 0 0 1 2.003 2.752l.21 1.363c.059.404.185.791.37 1.144l.631 1.22a3.703 3.703 0 0 1 .008 3.4zm-7.287-7.33a3.045 3.045 0 0 0-.345-1.296 3.38 3.38 0 0 0-3.223-1.826c-.135.017-.252.025-.37.042a3.316 3.316 0 0 0-1.868 1.052 3.255 3.255 0 0 0-.841 2.44c.076.926.488 1.717 1.086 2.23.438.379.993.715 1.691.816 1.338.202 2.365-.328 3.029-1.052a3.24 3.24 0 0 0 .841-2.407zm-9.736 6.766c.244-.135.48-.278.715-.412-.084-.968-.16-2.011-.236-2.903.985-.412 1.683-1.212 1.994-2.339.252-.909.143-1.977-.32-2.575a1.533 1.533 0 0 0-.597-.488c-.404-.151-.892-.034-1.229.109a2.902 2.902 0 0 0-.522.303c-.32.227-.614.48-.884.774.286 2.491.572 5.108.85 7.657.076-.034.151-.076.227-.126zm.126-7.153c.017-.076.202-.185.269-.236a.857.857 0 0 1 .429-.16c.463-.017.572.379.597.825.017.236.017.471 0 .707-.059.783-.429 1.287-1.043 1.54-.05-.488-.084-1.077-.143-1.641-.025-.227-.059-.53-.093-.799-.008-.076-.017-.151-.017-.236zm-1.136 6.278a6.08 6.08 0 0 0-.421-1.212 4.559 4.559 0 0 1-.37-1.237c-.067-.597.05-1.119.429-1.397-.143-.463-.261-.917-.404-1.372-.825.438-1.397 1.229-1.397 2.407 0 .724.269 1.195.53 1.717.177.345.328.698.446 1.069.118.396.227.833.194 1.245-.067.791-.396 1.346-.825 1.818-.042.05-.185.168-.185.202.025.059.05.109.084.16.168.353.32.656.488 1.001.025.05.05.151.084.168s.101-.067.143-.118c.143-.151.278-.311.404-.48.698-.968 1.119-2.474.799-3.972zm2.777 1.674c.345-.976.673-1.986.926-3.012.076-.303.168-.614.227-.926.008-.034.034-.109 0-.126-.446.135-.909.252-1.346.396-.185 1.523-.64 2.878-1.153 4.148s-1.144 2.44-1.801 3.559c.808.875 1.834 1.54 2.962 2.095.202-.337.421-.665.614-1.01-.69-.421-1.405-.825-1.994-1.346a39.617 39.617 0 0 0 1.565-3.778zm2.625-2.684c-.286-.194-.64-.337-.951-.505-.623 2.39-1.456 4.594-2.255 6.833.278.151.547.32.833.471.539-1.043.867-2.163 1.296-3.299.21-.555.387-1.128.564-1.708s.353-1.186.513-1.792zm2.424 6.993v-.993c0-.227-.008-.48-.017-.875-.597.076-1.203.126-1.792.21-.025.328-.025.673-.042 1.018.261.017.673-.034.934-.034 0 .488 0 .909.008 1.321 0 .16.025.32-.017.454-.059.202-.269.328-.539.303-.311-.034-.555-.353-.69-.614-.463-.909-.311-2.407-.126-3.416a5.324 5.324 0 0 1 .732-1.927c.345-.547.816-1.001 1.489-1.195 0-.278-.017-.656-.034-.968-.008-.143 0-.32-.034-.396-.008-.008-.025.008-.034.008a3.66 3.66 0 0 0-1.128.64 4.8 4.8 0 0 0-1.22 1.414 5.505 5.505 0 0 0-.286.589c-.362.808-.53 1.742-.631 2.777-.076.791-.084 1.515.034 2.23.042.227.109.454.194.673.295.774.867 1.422 2.028 1.262.446-.059.808-.236 1.186-.396 0-.74-.017-1.515-.017-2.087zm3.559-4.477a22.049 22.049 0 0 1-.109-1.691c-.025-.783 0-1.54.042-2.322 0-.008 0-.008-.008-.008-.303.236-.648.48-.976.715a.418.418 0 0 0-.126.118.853.853 0 0 0 0 .202c-.008 1.128.059 2.322.084 3.332-.278.118-.555.269-.833.379a88.942 88.942 0 0 1-.261-3.408c-.37.126-.707.278-1.069.412.076.555.151 1.086.202 1.599.093.816.135 1.632.143 2.449 0 .236 0 .471-.017.707-.034.496-.025 1.001-.059 1.498-.076.959-.067 1.986-.067 2.895.194-.084.379-.194.572-.286.194-.084.379-.185.564-.295 0-.362.017-.648.025-.959.034-1.186.067-2.179.025-3.231.32-.151.64-.303.976-.446.227 1.355.682 2.541 1.094 3.753.345-.261.64-.572.968-.858a22.97 22.97 0 0 1-.614-1.919 13.182 13.182 0 0 1-.555-2.634zm2.583-3.787c.194-.076.37-.194.555-.286s.362-.194.539-.303c-.337-.968-.757-1.851-1.338-2.609a10.081 10.081 0 0 0-1.977-1.986c0-.017-.025 0-.025.008a7.414 7.414 0 0 0-.513.724c-.034.059-.151.21-.143.269.05.067.109.126.177.177.067.067.135.118.185.168.303.311.555.589.833.926.042.05.143.16.143.21a1.388 1.388 0 0 1-.076.269c-.135.48-.227.951-.311 1.456a12.46 12.46 0 0 0-.151 2.962c.076 1.052.278 2.003.505 2.928.109.454.244.909.412 1.346.126.328.252.656.396.951.05.101.076.219.16.295.286-.37.589-.724.867-1.094-.421-.749-.707-1.666-.926-2.617a6.908 6.908 0 0 1-.177-1.01c-.126-1.372-.177-2.861.194-4.157.295.429.522.892.673 1.372z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.spotlight.com/\",hex:\"352A71\"},Spreaker:{title:\"Spreaker\",slug:\"spreaker\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Spreaker icon</title><path d=\"M14.615 0l-5.64 6.54L.529 4.718l8.68 7.372-8.537 7.463 8.411-1.984L14.843 24l.71-8.601 7.918-3.483-7.963-3.33L14.621 0h-.006z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://www.spreaker.com/press\",hex:\"F5C300\"},Spring:{title:\"Spring\",slug:\"spring\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Spring icon</title><path d=\"M21.822 1.248c-.338.806-.766 1.57-1.281 2.272A12.045 12.045 0 0012.03 0C5.431 0 0 5.43 0 12.031c0 3.293 1.35 6.445 3.737 8.717l.444.393a12.041 12.041 0 007.75 2.83c6.275 0 11.55-4.911 11.997-11.172.328-3.065-.572-6.941-2.106-11.55zM5.447 20.817c-.194.24-.49.38-.8.38a1.033 1.033 0 01-1.028-1.03c0-.564.465-1.03 1.028-1.03a1.032 1.032 0 01.8 1.68zm16.325-3.602c-2.969 3.954-9.31 2.622-13.375 2.812 0 0-.722.044-1.447.162 0 0 .272-.115.625-.25 2.853-.992 4.203-1.185 5.937-2.075 3.266-1.66 6.494-5.293 7.166-9.072-1.244 3.636-5.012 6.76-8.447 8.03-2.353.867-6.603 1.71-6.603 1.71l-.172-.09c-2.894-1.408-2.981-7.672 2.278-9.694 2.303-.886 4.507-.4 6.994-.992 2.656-.63 5.728-2.622 6.978-5.219 1.4 4.154 3.085 10.658.066 14.678z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://spring.io/trademarks\",hex:\"6DB33F\"},Sprint:{title:\"Sprint\",slug:\"sprint\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Sprint icon</title><path d=\"M2.13 23.995c5.493-1.808 13.457-6.02 18.996-9.782.465-.314.827-.607.827-1.118 0-.889-1.655-2.08-2.458-2.555-4.359 4.456-13.033 11.134-17.366 13.455M7.225 20.21c3.388-2.304 8.31-6.638 9.975-8.996.393-.554.683-.876.683-1.456 0-.952-1.128-1.65-1.94-2.135-1.946 4.51-6.316 10.125-8.718 12.587M9.816 16.682c2.344-2.967 4.188-6.454 4.188-8.958 0-1.308-.953-2.222-2.196-2.916.024 2.721-.934 9.101-1.992 11.874M10.312 13.82c.438-2.847.18-6.285-.379-8.442-.304-1.174-1.38-2.5-2.376-2.913 1.305 3.643 2.426 8.832 2.755 11.355M9.347 9.825C8.321 7.097 5.763 1.41 2 0c2.45 2.66 6.083 7.935 7.347 9.825\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.sprint.com/\",hex:\"FFCE0A\"},Square:{title:\"Square\",slug:\"square\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Square icon</title><path d=\"M4.01 0A4.01 4.01 0 000 4.01v15.98c0 2.21 1.8 4 4.01 4.01h15.98C22.2 24 24 22.2 24 19.99V4A4.01 4.01 0 0019.99 0H4zm1.62 4.36h12.74c.7 0 1.26.57 1.26 1.27v12.74c0 .7-.56 1.27-1.26 1.27H5.63c-.7 0-1.26-.57-1.26-1.27V5.63a1.27 1.27 0 011.26-1.27zm3.83 4.35a.73.73 0 00-.73.73v5.09c0 .4.32.72.72.72h5.1a.73.73 0 00.73-.72V9.44a.73.73 0 00-.73-.73h-5.1Z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://squareup.com/\",hex:\"3E4348\"},Squarespace:{title:\"Squarespace\",slug:\"squarespace\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Squarespace icon</title><path d=\"M22.655 8.719c-1.802-1.801-4.726-1.801-6.564 0l-7.351 7.35c-.45.45-.45 1.2 0 1.65.45.449 1.2.449 1.65 0l7.351-7.351c.899-.899 2.362-.899 3.264 0 .9.9.9 2.364 0 3.264l-7.239 7.239c.9.899 2.362.899 3.263 0l5.589-5.589c1.836-1.838 1.836-4.763.037-6.563zm-2.475 2.437c-.451-.45-1.201-.45-1.65 0l-7.354 7.389c-.9.899-2.361.899-3.262 0-.45-.45-1.2-.45-1.65 0s-.45 1.2 0 1.649c1.801 1.801 4.726 1.801 6.564 0l7.351-7.35c.449-.487.449-1.239.001-1.688zm-2.439-7.35c-1.801-1.801-4.726-1.801-6.564 0l-7.351 7.351c-.45.449-.45 1.199 0 1.649s1.2.45 1.65 0l7.395-7.351c.9-.899 2.371-.899 3.27 0 .451.45 1.201.45 1.65 0 .421-.487.421-1.199-.029-1.649h-.021zm-2.475 2.437c-.45-.45-1.2-.45-1.65 0l-7.351 7.389c-.899.9-2.363.9-3.265 0-.9-.899-.9-2.363 0-3.264l7.239-7.239c-.9-.9-2.362-.9-3.263 0L1.35 8.719c-1.8 1.8-1.8 4.725 0 6.563 1.801 1.801 4.725 1.801 6.564 0l7.35-7.351c.451-.488.451-1.238 0-1.688h.002z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://squarespace.com/brand-guidelines\",hex:\"000000\"},Stackbit:{title:\"Stackbit\",slug:\"stackbit\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Stackbit icon</title><path d=\"M21.314 13.477l-9.213 5.13-9.396-5.13a.729.729 0 0 0-.993.294.729.729 0 0 0 .294.993l9.746 5.333c.22.128.497.128.717 0l9.562-5.333a.727.727 0 0 0 .276-.993.718.718 0 0 0-.993-.294zM3.845 10.075l8.256-4.67 9.195 5.314a.749.749 0 0 0 1.011-.276.749.749 0 0 0-.276-1.012L12.47 3.915a.749.749 0 0 0-.735 0L1.988 9.43c-.497.276-.497.993 0 1.288l9.746 5.516a.748.748 0 0 0 1.011-.276.749.749 0 0 0-.276-1.011zM.057 13.937v-3.678A2.258 2.258 0 0 1 1.216 8.07l9.745-5.517a2.25 2.25 0 0 1 2.28.019l9.562 5.516a2.296 2.296 0 0 1 1.14 2.17v3.678a2.288 2.288 0 0 1-1.176 2.188l-9.562 5.332a2.281 2.281 0 0 1-2.225 0l-9.746-5.332c-.81-.442-1.232-1.306-1.177-2.188z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.stackbit.com/\",hex:\"3EB0FD\"},\"Stack Exchange\":{title:\"Stack Exchange\",slug:\"stackexchange\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Stack Exchange icon</title><path d=\"M21.728 15.577v1.036c0 1.754-1.395 3.177-3.1 3.177h-.904L13.645 24v-4.21H5.371c-1.704 0-3.099-1.423-3.099-3.181v-1.032h19.456zM2.275 10.463h19.323v3.979H2.275v-3.979zm0-5.141h19.323v3.979H2.275V5.322zM18.575 0c1.681 0 3.023 1.42 3.023 3.178v1.034H2.275V3.178C2.275 1.422 3.67 0 5.375 0h13.2z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://stackoverflow.com/company/logos\",hex:\"1E5397\"},\"Stack Overflow\":{title:\"Stack Overflow\",slug:\"stackoverflow\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Stack Overflow icon</title><path d=\"M18.986 21.865v-6.404h2.134V24H1.844v-8.539h2.13v6.404h15.012zM6.111 19.731H16.85v-2.137H6.111v2.137zm.259-4.852l10.48 2.189.451-2.07-10.478-2.187-.453 2.068zm1.359-5.056l9.705 4.53.903-1.95-9.706-4.53-.902 1.936v.014zm2.715-4.785l8.217 6.855 1.359-1.62-8.216-6.853-1.35 1.617-.01.001zM15.751 0l-1.746 1.294 6.405 8.604 1.746-1.294L15.749 0h.002z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://stackoverflow.com\",hex:\"FE7A16\"},StackPath:{title:\"StackPath\",slug:\"stackpath\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>StackPath icon</title><path d=\"M3.72 7.34C2.71 7.34 1.88 7.57 1.22 8.04C.559 8.5 .23 9.12 .23 9.88C.23 10.66 .506 11.26 1.06 11.67C1.61 12.09 2.46 12.47 3.6 12.83C4.15 13.03 4.53 13.21 4.74 13.39C4.96 13.56 5.06 13.81 5.06 14.13C5.06 14.41 4.96 14.64 4.74 14.81C4.53 15 4.2 15.08 3.77 15.08C3.2 15.08 2.77 14.96 2.5 14.74C2.2 14.5 2.06 14.14 2.06 13.62H.013L0 13.66C-.02 14.63 .346 15.37 1.1 15.89C1.85 16.41 2.74 16.66 3.77 16.66C4.79 16.66 5.61 16.44 6.23 16C6.85 15.54 7.17 14.91 7.17 14.12C7.17 13.33 6.91 12.72 6.39 12.27C5.86 11.82 5.09 11.44 4.06 11.14C3.39 10.89 2.94 10.69 2.69 10.53C2.45 10.37 2.33 10.16 2.33 9.9C2.33 9.62 2.45 9.39 2.69 9.21C2.93 9 3.26 8.92 3.69 8.92C4.12 8.92 4.46 9.04 4.7 9.26C4.95 9.5 5.07 9.78 5.07 10.14H7.11L7.12 10.11C7.15 9.3 6.83 8.63 6.19 8.11C5.55 7.59 4.73 7.34 3.72 7.34M8.5 7.4V16.58H10.65V13.43H11.95C13.04 13.43 13.9 13.16 14.54 12.6C15.18 12.05 15.5 11.32 15.5 10.42C15.5 9.5 15.18 8.79 14.54 8.23C13.9 7.67 13.04 7.4 11.95 7.4H8.5M18.11 7.4L14.93 16.59H16.92L20.18 7.4H18.11M21.93 7.4L18.75 16.59H20.74L24 7.4H21.93M10.65 9.04H11.95C12.41 9.04 12.77 9.17 13 9.43C13.25 9.69 13.37 10 13.37 10.43C13.37 10.83 13.25 11.16 13 11.41C12.77 11.67 12.41 11.79 11.95 11.79H10.65V9.04Z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.stackpath.com/company/logo-and-branding/\",hex:\"000000\"},StackShare:{title:\"StackShare\",slug:\"stackshare\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>StackShare icon</title><path d=\"M17.209 6.697c-.035-.274 0-.594 0-.594v-.01c.141-.714.771-1.254 1.525-1.254.005 0 .009.001.014.001h.002c.859 0 1.557.698 1.557 1.556s-.697 1.556-1.557 1.556c-.003 0-.006-.001-.009-.001h-.007c-.742-.001-1.38-.526-1.525-1.254zM24 1.54v20.92c0 .851-.646 1.54-1.443 1.54H1.444C.647 24 0 23.311 0 22.46V1.54C0 .69.647 0 1.444 0h21.113C23.354 0 24 .69 24 1.54zm-2.303 16.007c0-1.636-1.326-2.962-2.961-2.962-1.317 0-2.477.87-2.844 2.134h-1.758l-2.74-4.717-.002-.004.002-.004 2.736-4.709h1.748c.457 1.571 2.102 2.474 3.673 2.017 1.571-.457 2.475-2.102 2.017-3.673-.457-1.571-2.102-2.474-3.672-2.017a2.9638 2.9638 0 0 0-2.018 2.017h-2.665l-.026-.016-3.227 5.552-.025.042H8.018c-.457-1.571-2.102-2.474-3.673-2.016-1.571.458-2.474 2.102-2.017 3.673.458 1.571 2.103 2.474 3.673 2.017.973-.283 1.733-1.045 2.017-2.017h1.961l3.208 5.52.015-.009h2.69a2.9592 2.9592 0 0 0 2.842 2.134h.002c1.636 0 2.961-1.326 2.961-2.962zm-2.933-1.619c-.743.002-1.381.526-1.527 1.254-.004.029-.004.057-.007.085-.004.017-.015.029-.018.046-.041.301 0 .602 0 .602.173.842.995 1.383 1.837 1.209.573-.118 1.005-.548 1.164-1.088.065-.172.105-.356.105-.551 0-.859-.697-1.557-1.554-1.557zM5.2 10.417c-.858 0-1.556.698-1.556 1.557 0 .006.002.012.002.018 0 .003-.001.005-.001.008.001.854.693 1.547 1.548 1.548.541-.001 1.015-.278 1.292-.698.171-.249.272-.551.272-.875 0-.86-.698-1.558-1.557-1.558z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://stackshare.io/branding\",hex:\"0690FA\"},Stadia:{title:\"Stadia\",slug:\"stadia\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Stadia icon</title><path d=\"M.202 8.668a.482.482 0 0 0-.202.39v.006c0 .064.014.128.04.19l2.298 5.204c.102.23.364.343.602.259 1.504-.536 6.713-2.233 10.083-1.318 0 0-3.381.196-6.438 2.593a.48.48 0 0 0-.142.571l1.029 2.326.396.929c.094.22.395.247.528.047.713-1.074 1.916-1.611 3.072-2.08a17.647 17.647 0 0 1 3.679-1.05 15.993 15.993 0 0 1 4.07-.167.481.481 0 0 0 .503-.335l1.038-3.317a.48.48 0 0 0-.176-.531c-1.158-.838-5.741-3.654-13.802-2.523 0 0 6.878-3.951 15.61.39a.481.481 0 0 0 .673-.288l.915-2.925A.484.484 0 0 0 24 6.902v-.014a.48.48 0 0 0-.243-.41C22.66 5.858 18.95 4 13.846 4 9.934 4 5.203 5.09.202 8.668\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://stadia.dev\",hex:\"CD2640\"},Statamic:{title:\"Statamic\",slug:\"statamic\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Statamic icon</title><path d=\"M3.129 17.941c-.03-.213-.021-.713-.021-.713H2.82c-.662 0-.922-.267-.922-.93v-2.635c0-1.19-.278-1.481-.835-1.664v-.061c.557-.183.835-.486.835-1.676V7.638c0-.663.26-.87.92-.87h.285s.014-.457.045-.724c-.135-.018-.66-.03-.66-.03-1.334 0-1.709.646-1.709 1.979v2.391c0 .978-.569 1.109-.779 1.109v.95c.21 0 .765.132.765 1.094v2.406c0 1.334.374 1.964 1.709 1.964 0 0 .524.046.63.046l.025-.012zM2.318 12.59c.488 0 1.184.168 1.184 1.398v3.063c0 1.698.408 2.549 2.107 2.549h.765v-.908h-.39c-.84 0-1.154-.349-1.154-1.189v-3.359c0-1.515-.479-1.885-1.319-2.12v-.068c.84-.236 1.335-.623 1.335-2.138V6.466c0-.839.314-1.09 1.154-1.09h.389v-.974h-.75c-1.693 0-2.098.824-2.098 2.518v3.058c0 1.244-.689 1.425-1.185 1.425v1.198l-.038-.011zm11.487 3.898c.464-.131.854-.319 1.176-.565.32-.245.57-.548.75-.902.176-.355.266-.749.266-1.185 0-.379-.066-.705-.198-.974-.132-.271-.345-.506-.636-.712-.293-.206-.665-.391-1.118-.551-.452-.16-.999-.32-1.642-.479-.689-.175-1.166-.33-1.434-.465-.271-.14-.405-.362-.405-.672 0-.354.141-.614.423-.772.28-.166.627-.24 1.041-.24.445 0 .893.06 1.34.21.446.134.922.374 1.426.689l.945-1.425c-.551-.344-1.145-.615-1.779-.824-.63-.209-1.273-.3-1.904-.3-.51 0-.988.06-1.424.194-.435.136-.824.33-1.154.586-.332.254-.585.569-.766.929-.179.359-.27.78-.27 1.229 0 .344.06.629.181.885.119.254.299.465.554.659s.585.359 1.005.509c.42.15.914.301 1.499.436.778.18 1.319.345 1.648.51.33.149.495.39.495.705 0 .314-.135.568-.405.733s-.659.255-1.139.255c-1.064 0-2.174-.375-3.313-1.125l-.975 1.619c.271.181.57.346.915.495.345.15.704.271 1.079.375.375.105.765.181 1.17.24.404.06.779.074 1.139.074.569 0 1.08-.074 1.544-.209l-.034.068zm7.461-9.72c.66 0 .853.207.853.87v2.623c0 1.188.209 1.493 1.045 1.679v.052c-.836.185-1.045.476-1.045 1.663v2.643c0 .659-.192.929-.853.929h-.289s-.003.499-.031.71c.116 0 .575-.015.575-.015 1.335 0 1.643-.647 1.643-1.981v-2.398c0-.965.56-1.095.837-1.095v-.958c-.277 0-.837-.133-.837-1.109V7.993c0-1.334-.308-1.981-1.643-1.981 0 0-.47.015-.608.032.029.267.059.726.059.726h.285l.009-.002zM20.444 17.049v-3.063c0-1.229.697-1.397 1.185-1.397v-1.21c-.487 0-1.185-.168-1.185-1.413V6.918c0-1.697-.269-2.518-1.969-2.518h-.82v.975h.449c.84 0 1.086.25 1.086 1.091v3.349c0 1.514.419 1.9 1.259 2.136v.067c-.84.235-1.244.605-1.244 2.119v3.364c0 .843-.24 1.191-1.079 1.191h-.449v.908h.824c1.708 0 1.978-.853 1.978-2.552h-.035z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://statamic.com/press\",hex:\"1F3641\"},Statuspage:{title:\"Statuspage\",slug:\"statuspage\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Statuspage icon</title><path d=\"M12.008 9.597a5.623 5.623 0 1 1 0 11.245 5.623 5.623 0 0 1 0-11.245zM.154 8.717l3.02 3.574a.639.639 0 0 0 .913.068c4.885-4.379 10.97-4.379 15.84 0a.642.642 0 0 0 .916-.068l3.006-3.574a.646.646 0 0 0-.075-.906c-7.1-6.204-16.462-6.204-23.555 0a.65.65 0 0 0-.065.906z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.atlassian.com/company/news/press-kit\",hex:\"172B4D\"},Staticman:{title:\"Staticman\",slug:\"staticman\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Staticman icon</title><path d=\"M17.17 3.046l-.063.002c-.067 0-.133.003-.2.006-.038.002-.078.006-.117.01-.05.003-.1.01-.152.015l-.123.015c-.053.008-.106.018-.16.028-.075.014-.15.03-.224.048-.027.008-.055.014-.083.02l-.174.05c-.01.004-.023.007-.035.01-1.054.333-1.955 1.055-2.51 2.05-.015.023-.03.047-.042.07-.01.023-.024.043-.036.066l-.016.037c-.3.595-.47 1.267-.47 1.978v.8c-.207 0-.373.165-.373.37s.168.373.373.373v2.868c-1.006.1-1.976.436-2.824.98-.243.156-.475.327-.69.508l-.01.01c-.004.003-.01.01-.014.012-.075.07-.146.135-.217.195-.19.162-.39.31-.6.443-.005.003-.007.007-.01.01-.26.16-.474.277-.678.37-.16.07-.322.128-.494.182l-.067.02c-.017.007-.035.012-.054.017-.505.155-1.03.235-1.57.235-1.39 0-2.685-.527-3.66-1.44.455.16.935.243 1.425.243 1.082 0 2.118-.412 2.904-1.13.143.684.444 1.327.878 1.877.196-.06.378-.12.553-.2.058-.026.118-.055.178-.086-.602-.676-.948-1.55-.96-2.463-.002-.16-.107-.3-.26-.35s-.32.007-.414.136c-.668.92-1.745 1.47-2.88 1.47-.998 0-1.957-.424-2.63-1.164-.113-.124-.294-.157-.443-.082s-.23.24-.198.405l.012.055v.003c.883 3.818 3.737 6.984 7.446 8.26.84.29 1.72.483 2.613.57l.037.002c.092 0 .18-.034.25-.096.078-.07.122-.17.122-.276v-1.985c0-.94.19-1.85.57-2.703.262-.588.607-1.132 1.027-1.62l-.407-.242.488.147 2.503.714c.132.06.267.115.404.166v-.8c-.63-.278-1.176-.684-1.59-1.193v-4.07h.15v1.01c0 .733.595 1.33 1.328 1.33h.532c.69 0 1.258-.53 1.323-1.202.004-.02.007-.042.007-.064 0-.18.145-.324.324-.324s.324.145.324.324c0 .022.003.043.006.064.064.674.633 1.203 1.323 1.203h.533c.733 0 1.33-.596 1.33-1.33v-1.01h.146v4.072c-.414.508-.96.914-1.59 1.192v.8c.138-.05.273-.106.404-.167l2.502-.715.005.006.505-.15-.42.248c.365.428.674.897.92 1.4.063.13.193.21.335.21h.022c.15-.01.28-.108.33-.25.103-.297.155-.61.155-.933 0-1.44-1.04-2.624-2.424-2.84V8.994c.206 0 .372-.167.372-.372s-.166-.37-.372-.37v-.8c0-.265-.025-.526-.07-.78-.002-.006 0-.012-.002-.018l-.014-.075-.005-.024c-.172-.837-.582-1.6-1.19-2.21-.268-.27-.57-.504-.893-.693-.033-.02-.067-.036-.1-.055l-.06-.033c-.052-.027-.103-.054-.154-.078-.018-.01-.036-.016-.054-.025-.088-.042-.177-.08-.266-.114-.036-.014-.07-.028-.108-.04-.04-.016-.082-.03-.123-.043-.044-.014-.09-.028-.134-.04-.037-.012-.074-.022-.11-.032-.078-.02-.156-.04-.236-.055-.025-.005-.05-.01-.075-.013-.06-.01-.122-.022-.183-.03-.035-.006-.07-.01-.107-.015l-.157-.016-.11-.008c-.06-.004-.122-.005-.183-.006l-.072-.003zm3.14 1.814s-.076.077-.214.21c-.068.067-.156.143-.254.232-.098.09-.214.185-.34.29-.09.07-.19.145-.29.22.36.723.945 1.193 1.602 1.274.012.12.018.243.018.366v.798h-2.615c-.046-.153-.186-.266-.355-.266H16.48c-.168 0-.31.113-.355.266H13.51v-.798c0-.398.064-.78.182-1.14.117.112.243.212.378.3.04.02.12.063.242.116.173.077.43.162.746.21.158.024.33.037.514.038.045 0 .094 0 .136-.003l.145-.01c.1-.003.193-.02.29-.03s.2-.035.3-.052c.1-.02.2-.048.302-.07.1-.03.202-.06.303-.092.1-.036.202-.07.3-.108.2-.076.398-.16.588-.252l.28-.14.272-.145c.175-.1.344-.198.5-.297.08-.047.155-.1.23-.146s.144-.092.21-.14c.132-.093.258-.173.364-.252.107-.078.203-.143.277-.202.15-.115.24-.178.24-.178zm-3.46 3.87h.64v.212h-.64V8.73zm-2.45.265h1.7v1.01c0 .323-.262.585-.584.585h-.532c-.323 0-.585-.262-.585-.585v-1.01zm3.84 0h1.7v1.01c0 .323-.262.585-.585.585h-.532c-.323 0-.585-.262-.585-.585v-1.01zm-2.99.16c-.234 0-.424.19-.424.424s.19.424.425.424.426-.19.426-.425c0-.07-.018-.132-.046-.19-.04.05-.1.083-.166.083-.117 0-.213-.095-.213-.213 0-.038.012-.073.03-.103l-.03-.003zm3.84 0c-.234 0-.425.19-.425.424s.19.424.425.424.425-.19.425-.425c0-.07-.017-.132-.046-.19-.04.05-.1.083-.168.083-.117 0-.213-.095-.213-.213 0-.038.01-.073.027-.103-.01 0-.02-.003-.028-.003zm-3.436 4.356c-.066.006-.13.03-.186.068-.1.07-.158.183-.158.304v2.02c0 .12.06.235.158.304.064.045.14.068.215.068.042 0 .084-.007.125-.022l1.364-.487 1.364.487c.04.015.083.022.125.022.077 0 .152-.023.216-.068.1-.07.158-.183.158-.304v-2.02c0-.12-.06-.235-.158-.304s-.225-.087-.34-.046l-1.363.487-1.363-.488c-.03-.01-.058-.017-.087-.02-.022-.002-.044-.003-.066 0zm.4.9l.744.266v.432l-.744.266v-.964zm2.233 0v.964l-.744-.266v-.432l.744-.266z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://staticman.net/\",hex:\"000000\"},Steam:{title:\"Steam\",slug:\"steam\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Steam icon</title><path d=\"M11.979 0C5.678 0 .511 4.86.022 11.037l6.432 2.658c.545-.371 1.203-.59 1.912-.59.063 0 .125.004.188.006l2.861-4.142V8.91c0-2.495 2.028-4.524 4.524-4.524 2.494 0 4.524 2.031 4.524 4.527s-2.03 4.525-4.524 4.525h-.105l-4.076 2.911c0 .052.004.105.004.159 0 1.875-1.515 3.396-3.39 3.396-1.635 0-3.016-1.173-3.331-2.727L.436 15.27C1.862 20.307 6.486 24 11.979 24c6.627 0 11.999-5.373 11.999-12S18.605 0 11.979 0zM7.54 18.21l-1.473-.61c.262.543.714.999 1.314 1.25 1.297.539 2.793-.076 3.332-1.375.263-.63.264-1.319.005-1.949s-.75-1.121-1.377-1.383c-.624-.26-1.29-.249-1.878-.03l1.523.63c.956.4 1.409 1.5 1.009 2.455-.397.957-1.497 1.41-2.454 1.012H7.54zm11.415-9.303c0-1.662-1.353-3.015-3.015-3.015-1.665 0-3.015 1.353-3.015 3.015 0 1.665 1.35 3.015 3.015 3.015 1.663 0 3.015-1.35 3.015-3.015zm-5.273-.005c0-1.252 1.013-2.266 2.265-2.266 1.249 0 2.266 1.014 2.266 2.266 0 1.251-1.017 2.265-2.266 2.265-1.253 0-2.265-1.014-2.265-2.265z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://partner.steamgames.com/public/marketing/Steam_Guidelines_02102016.pdf\",hex:\"000000\"},Steamworks:{title:\"Steamworks\",slug:\"steamworks\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Steamworks icon</title><path d=\"M21.928 9.49v2.071h-1.503v1.503h1.503v-1.5H24V9.49zm-5.915.498v1.075h1.075V9.988zm2.326 2.572a.596.596 0 00-.382.144.497.497 0 00-.155.383.437.437 0 00.145.35.627.627 0 00.33.14l.103.015.112.02a1.071 1.071 0 01.163.037.366.366 0 01.102.065.34.34 0 01.1.268.353.353 0 01-.127.29.529.529 0 01-.347.105.736.736 0 01-.285-.05.747.747 0 01-.24-.175l-.098.102a.795.795 0 00.27.193.866.866 0 00.343.06.68.68 0 00.455-.144.508.508 0 00.175-.39.53.53 0 00-.043-.208.423.423 0 00-.12-.16.468.468 0 00-.13-.08.84.84 0 00-.2-.047l-.112-.02-.088-.013a.82.82 0 01-.152-.045.481.481 0 01-.123-.072.323.323 0 01-.095-.25.378.378 0 01.115-.287.442.442 0 01.313-.105.617.617 0 01.252.045.75.75 0 01.195.132l.09-.092a.713.713 0 00-.53-.21.596.596 0 00-.036 0zm-17.664.005a.673.673 0 00-.432.161.542.542 0 00-.175.42.516.516 0 00.132.375.602.602 0 00.359.157l.12.015.105.015a.278.278 0 01.172.076.23.23 0 01.05.155c0 .16-.11.237-.327.237a.783.783 0 01-.251-.037.47.47 0 01-.195-.123l-.233.24a.76.76 0 00.295.195 1.157 1.157 0 00.38.058.764.764 0 00.492-.156.53.53 0 00.193-.431.54.54 0 00-.143-.405.48.48 0 00-.145-.093.988.988 0 00-.21-.052l-.107-.015-.113-.015a.292.292 0 01-.167-.078.194.194 0 01-.058-.135.222.222 0 01.075-.172.305.305 0 01.213-.068.767.767 0 01.205.027.394.394 0 01.172.105l.228-.232a.72.72 0 00-.26-.17.977.977 0 00-.338-.053.673.673 0 00-.037 0zm12.091.003a.612.612 0 00-.238.05.645.645 0 00-.21.146.525.525 0 00-.097.134.607.607 0 00-.05.153 1.387 1.387 0 00-.02.19 8.383 8.383 0 000 .595 1.306 1.306 0 00.02.19.607.607 0 00.05.152.486.486 0 00.097.135.645.645 0 00.21.145.656.656 0 00.251.05.612.612 0 00.251-.05.645.645 0 00.21-.145.525.525 0 00.097-.135.606.606 0 00.05-.152 1.385 1.385 0 00.02-.19 8.36 8.36 0 000-.595 1.305 1.305 0 00-.02-.19.606.606 0 00-.05-.153.486.486 0 00-.097-.134.645.645 0 00-.21-.146.656.656 0 00-.25-.05.612.612 0 00-.014 0zm-10.949.015v.333H2.3v1.575h.36v-1.575h.482v-.333zm1.878 0v1.908h1.218v-.33h-.855v-.464h.727v-.333h-.727v-.448h.855v-.333zm2.298 0l-.673 1.908h.375l.113-.337h.655l.11.337h.377l-.675-1.908zm1.442 0v1.908h.36v-1.11l.355.722h.245l.352-.722v1.11h.36v-1.908h-.354l-.48 1.03-.483-1.03zm2.198 0l.46 1.908h.144l.437-1.66.435 1.66h.143l.46-1.908h-.147l-.39 1.658-.43-1.658H10.6l-.43 1.658-.39-1.658zm4.452 0v1.908h.14v-.882h.508l.44.882h.162l-.445-.882a.49.49 0 00.428-.516.486.486 0 00-.148-.374.55.55 0 00-.382-.136zm1.93 0v1.908h.14v-.515l.44-.553.593 1.068v-.002h.167l-.667-1.177.57-.728h-.168l-.935 1.192v-1.192zm3.188.033v.19h.026v-.128l.045.093h.024l.042-.093v.128h.028v-.19h-.028l-.055.118-.055-.118zm-.165.002v.025h.052v.163h.028v-.163h.052v-.025zm-6.26.08a.489.489 0 01.352.148.45.45 0 01.077.107.485.485 0 01.043.132 1.117 1.117 0 01.018.175 7.48 7.48 0 010 .556 1.117 1.117 0 01-.018.175.485.485 0 01-.043.132.506.506 0 01-.077.107.489.489 0 01-.7 0 .45.45 0 01-.078-.107.589.589 0 01-.042-.132 1.117 1.117 0 01-.018-.175 7.459 7.459 0 010-.556 1.117 1.117 0 01.018-.175.485.485 0 01.042-.132.506.506 0 01.078-.107.489.489 0 01.349-.148zm2.007.015a.433.433 0 01.28.098.35.35 0 01.11.289.358.358 0 01-.113.286.428.428 0 01-.294.098h-.543v-.77h.545a.433.433 0 01.015-.001zm-8.643.433l.228.692h-.46z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://partner.steamgames.com/\",hex:\"1E1E1E\"},Steem:{title:\"Steem\",slug:\"steem\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Steem icon</title><path d=\"M3.927 2.596c.264.045-.397 1.778-.028 3.76.318 1.697 4.313 8.275 4.148 10.529-.128 1.418-3.408 4.74-3.753 4.52-.377-.105.996-2.361.486-4.244C4.19 14.97.673 9.301.677 6.798c0-1.832 3.011-4.32 3.25-4.202zM11.44.005c.336.058-.506 2.271-.034 4.791.405 2.17 5.501 10.555 5.292 13.432-.166 1.809-4.348 6.043-4.789 5.76-.479-.131 1.271-3.008.622-5.406-.755-2.796-5.238-10.026-5.235-13.218 0-2.338 3.842-5.509 4.144-5.359zm7.754 2.591c.27.045-.393 1.778-.023 3.761.318 1.697 4.313 8.275 4.148 10.529-.125 1.418-3.408 4.74-3.754 4.52-.377-.105.996-2.361.488-4.244-.594-2.192-4.11-7.861-4.105-10.363 0-1.832 3.014-4.32 3.248-4.202h-.002z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://steem.io/\",hex:\"4BA2F2\"},Steemit:{title:\"Steemit\",slug:\"steemit\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Steemit icon</title><path d=\"M20.982 7.246a9.659 9.659 0 0 0-3.4-2.202c.721-2.12 3.277-2.892 3.277-2.892A21.632 21.632 0 0 0 8.31.29a10.14 10.14 0 0 0-5.842 3.478 9.152 9.152 0 0 0 .991 12.984c.598.512 1.934 1.308 1.958 1.349-.876 2.226-3.678 2.835-3.678 2.835a23.335 23.335 0 0 0 8.676 2.917 18.256 18.256 0 0 0 4.17.05 10.598 10.598 0 0 0 6.34-3.12 9.525 9.525 0 0 0 .058-13.538zm-1.704 12.058a8.886 8.886 0 0 1-5.137 2.381 16.265 16.265 0 0 1-3.555-.016 16.9 16.9 0 0 1-4.22-1.154 6.277 6.277 0 0 0 1.5-2.145 1.652 1.652 0 0 0-.05-1.308 6.995 6.995 0 0 1 1.426-8.077 7.26 7.26 0 0 1 10.159.057 7.324 7.324 0 0 1-.123 10.262z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://steemit.com/\",hex:\"06D6A9\"},Steinberg:{title:\"Steinberg\",slug:\"steinberg\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Steinberg icon</title><path d=\"M19.481,12.629c0.642-0.371,0.642-1.009,0-1.379l-4.769-2.754 c-0.642-0.371-1.195-0.052-1.195,0.69v5.507c0,0.741,0.553,1.06,1.195,0.69L19.481,12.629z M12.001,2.727 c5.121,0,9.273,4.152,9.273,9.273s-4.152,9.273-9.273,9.273S2.729,17.121,2.729,12S6.88,2.727,12.001,2.727 M12.001,0.002 C5.386,0.002,0.004,5.384,0.004,12c0,6.616,5.382,11.998,11.998,11.998S23.999,18.616,23.999,12 C23.999,5.384,18.617,0.002,12.001,0.002L12.001,0.002z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.steinberg.net/en/company/press.html\",hex:\"C90827\"},Stencyl:{title:\"Stencyl\",slug:\"stencyl\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Stencyl icon</title><path d=\"M14.36,2.675c-0.959,0.12-1.901,0.366-2.783,0.759L9.389,1.622l0.433,2.835 c-0.758,0.567-1.41,1.25-1.935,2.038L4.982,6l1.951,2.352c-0.31,0.817-0.502,1.677-0.589,2.548L3.374,12l2.952,1.099 c0.083,0.883,0.258,1.763,0.565,2.597l-1.894,2.283l2.819-0.426c0.541,0.811,1.229,1.518,2.025,2.08l-0.47,2.751l2.247-1.806 c0.864,0.333,1.78,0.523,2.705,0.597L15.372,24l1.059-2.846c1.418-0.144,2.841-0.46,4.103-1.144 c-0.229-1.019-0.468-2.035-0.692-3.055c-2.042,1.044-4.605,1.442-6.736,0.403c-1.763-0.896-2.773-2.842-2.911-4.785 c-0.152-2.15,0.502-4.51,2.314-5.801c1.724-1.192,4.024-1.208,5.964-0.586c0.428,0.149,0.836,0.353,1.224,0.603 c0.306-1.052,0.616-2.104,0.93-3.154c-1.32-0.674-2.811-0.98-4.291-1.044L15.372,0L14.36,2.675z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://www.stencyl.com/about/press/\",hex:\"8E1C04\"},Stitcher:{title:\"Stitcher\",slug:\"stitcher\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Stitcher icon</title><path d=\"M17.98 6.938h-.359v10.125h.359V6.938zm-.745 1.125h-.36v7.875h.36V8.063zm-1.116 0H0v7.875h16.119V8.063zm7.881 0h-4.508v7.875H24V8.063zm-5.256 0h-.36v7.875h.36V8.063z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.stitcher.com/\",hex:\"000000\"},Storify:{title:\"Storify\",slug:\"storify\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Storify icon</title><path d=\"M22.98 8.566c.32.607.563 1.275.732 2.005.17.73.264 1.495.285 2.292.02.795-.061 1.605-.24 2.416-.18.815-.447 1.611-.797 2.388s-.83 1.515-1.441 2.22c-.613.706-1.313 1.339-2.107 1.901-.781.554-1.74 1.034-2.85 1.409-1.111.39-2.326.645-3.646.795l-.299-.721c.074-.015.164-.045.299-.089.137-.046.375-.135.721-.301.359-.15.689-.329 1.02-.54.33-.21.689-.495 1.08-.87.404-.375.734-.779 1.02-1.215.285-.449.525-.99.721-1.649.195-.66.301-1.365.301-2.115 0-.721-.09-1.381-.285-2.01-.195-.631-.451-1.155-.766-1.621-.314-.449-.674-.885-1.049-1.289-.375-.405-.766-.795-1.141-1.155-.391-.36-.734-.735-1.066-1.095-.314-.361-.584-.766-.779-1.215-.195-.45-.3-.916-.3-1.41 0-.885.361-1.65 1.05-2.28.705-.646 1.664-.96 2.895-.96.361 0 .721.029 1.096.105.375.074.824.209 1.334.435.512.226.992.51 1.455.854.467.346.961.84 1.471 1.455.51.619.977 1.335 1.395 2.145l-.109.115zM1.02 15.451c-.319-.607-.563-1.275-.731-2.006-.169-.731-.265-1.494-.285-2.291-.021-.796.061-1.605.24-2.416.181-.816.445-1.612.795-2.388.352-.777.832-1.516 1.44-2.22.615-.705 1.315-1.34 2.109-1.9.78-.556 1.739-1.035 2.851-1.41C8.55.427 9.765.158 11.085.007l.299.711c-.063.014-.158.044-.285.08-.124.039-.359.135-.712.293-.35.156-.687.334-1.013.537-.322.202-.68.489-1.072.861s-.73.777-1.012 1.215c-.284.439-.521.985-.716 1.64-.196.654-.291 1.355-.291 2.107 0 .71.09 1.375.301 2 .195.625.449 1.162.765 1.613.315.466.675.885 1.05 1.307.375.419.766.794 1.141 1.154.375.359.734.734 1.05 1.096.329.375.585.779.78 1.214.195.45.299.915.299 1.41 0 .899-.359 1.666-1.049 2.296-.706.645-1.667.959-2.897.959-.359 0-.72-.03-1.095-.105-.375-.074-.825-.209-1.32-.435-.51-.226-.99-.51-1.47-.855-.466-.345-.96-.84-1.47-1.455-.51-.614-.975-1.334-1.396-2.144l.048-.055z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://storify.com\",hex:\"3A98D9\"},Storybook:{title:\"Storybook\",slug:\"storybook\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Storybook icon</title><path d=\"M16.34.24l-.12 2.71a.18.18 0 0 0 .29.15l1.06-.8.9.7a.18.18 0 0 0 .28-.14L18.65.1l1.33-.1a1.2 1.2 0 0 1 1.28 1.2v21.6A1.2 1.2 0 0 1 20 24l-16.1-.72a1.2 1.2 0 0 1-1.15-1.16L2 2.32a1.2 1.2 0 0 1 1.13-1.27l13.2-.83.01.02zM13.27 9.3c0 .47 3.16.24 3.59-.08 0-3.2-1.72-4.89-4.86-4.89-3.15 0-4.9 1.72-4.9 4.29 0 4.45 6 4.53 6 6.96 0 .7-.32 1.1-1.05 1.1-.96 0-1.35-.49-1.3-2.16 0-.36-3.65-.48-3.77 0-.27 4.03 2.23 5.2 5.1 5.2 2.79 0 4.97-1.49 4.97-4.18 0-4.77-6.1-4.64-6.1-7 0-.97.72-1.1 1.13-1.1.45 0 1.25.07 1.19 1.87z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/storybookjs/brand\",hex:\"FF4785\"},Strapi:{title:\"Strapi\",slug:\"strapi\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Strapi icon</title><path d=\"M17.295 10.554a.388.388 0 01-.195-.053l-1.527-.894a.39.39 0 01-.192-.334V7.508a.387.387 0 01.193-.335l1.534-.886a.384.384 0 01.385 0l1.538.88a.388.388 0 01.195.336v1.78a.387.387 0 01-.192.335l-1.535.885a.382.382 0 01-.204.05zm-1.14-1.503l1.146.67 1.148-.663V7.725l-1.15-.659-1.15.665zM5.252 13.545a.387.387 0 01-.194-.727l1.344-.774a.387.387 0 11.386.668l-1.344.777a.384.384 0 01-.192.056zm-.292 2.341a.385.385 0 01-.19-.727l2.578-1.477a.387.387 0 11.384.67l-2.585 1.483a.384.384 0 01-.186.05zm.417 1.926a.387.387 0 01-.19-.727l3.117-1.744a.387.387 0 11.378.673l-3.11 1.744a.38.38 0 01-.195.054zM12.956 1.99L11.043.827 1.375 6.421l.019 1.599 3.657 2.11L7.44 8.764l.522-2.541a.392.392 0 01.186-.258l8.414-4.845a.391.391 0 01.387 0l6.278 3.635a.382.382 0 01.194.334l-.012 7.268a.387.387 0 01-.195.335l-8.324 4.78a.388.388 0 01-.298.037l-2.526-.714-2.368 1.378v4.197l1.385.8 9.667-5.593v-2.248l.77-.503v2.972a.385.385 0 01-.191.336l-10.052 5.815a.384.384 0 01-.387 0L9.116 22.93a.385.385 0 01-.194-.334v-4.642a.385.385 0 01.192-.333l2.702-1.572a.385.385 0 01.3-.038l2.532.716 7.995-4.587.012-6.82-5.893-3.41-8.07 4.652-.526 2.528a.387.387 0 01-.187.257l-2.727 1.569a.388.388 0 01-.386 0L.826 8.59a.387.387 0 01-.194-.33L.6 6.207a.385.385 0 01.192-.338L10.854.054a.387.387 0 01.394 0l2.471 1.502z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://strapi.io/\",hex:\"2E7EEA\"},Strava:{title:\"Strava\",slug:\"strava\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Strava icon</title><path d=\"M15.387 17.944l-2.089-4.116h-3.065L15.387 24l5.15-10.172h-3.066m-7.008-5.599l2.836 5.598h4.172L10.463 0l-7 13.828h4.169\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://itunes.apple.com/us/app/strava-running-and-cycling-gps/id426826309\",hex:\"FC4C02\"},Stripe:{title:\"Stripe\",slug:\"stripe\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Stripe icon</title><path d=\"M13.976 9.15c-2.172-.806-3.356-1.426-3.356-2.409 0-.831.683-1.305 1.901-1.305 2.227 0 4.515.858 6.09 1.631l.89-5.494C18.252.975 15.697 0 12.165 0 9.667 0 7.589.654 6.104 1.872 4.56 3.147 3.757 4.992 3.757 7.218c0 4.039 2.467 5.76 6.476 7.219 2.585.92 3.445 1.574 3.445 2.583 0 .98-.84 1.545-2.354 1.545-1.875 0-4.965-.921-6.99-2.109l-.9 5.555C5.175 22.99 8.385 24 11.714 24c2.641 0 4.843-.624 6.328-1.813 1.664-1.305 2.525-3.236 2.525-5.732 0-4.128-2.524-5.851-6.594-7.305h.003z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://stripe.com/about/resources\",hex:\"008CDD\"},strongSwan:{title:\"strongSwan\",slug:\"strongswan\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>strongSwan icon</title><path d=\"M19.565 5.106a4.69 4.69 0 00-.236.006c-.074 0-.148 0-.221.007-.506.111-1.072.246-1.438.634-.552.631-.442 1.69.202 2.222.885.79 1.72 1.657 2.29 2.708.624.965.731 2.259.16 3.274-.63 1.283-1.887 2.18-3.26 2.515.38.998.437 2.3.437 2.3s1.157-.32 1.64-.537c.545-.263 1.117-.507 1.55-.943.434-.295.75-.724 1.035-1.163.32-.512.612-1.048.862-1.595.157-.492.347-.98.374-1.505a6.174 6.174 0 00-.169-2.283c-.378-1.016-1.09-1.875-1.93-2.545.772-.008 1.547.03 2.317-.019.432 0 1.253-.42.544-.754-.385-.12-.782.09-1.16.109-.315-.139-.973-.324-.725-.776.288-.598-.153-1.082-.69-1.277-.484-.278-1.032-.379-1.582-.378zm-6.419.66c-1.18.034-2.404.178-3.425.823-1.054.695-1.908 1.677-2.554 2.757.032-.004.06-.005.07.002.017.01.112.027.213.037.201.024 1.527.4 1.591.451.08.064.656.343.71.343.094 0 .057-.057-.07-.114-.267-.114-.499-.256-.428-.256.131 0 .36.101.542.24.198.154.733.383.979.42.269.037.962.303 1.14.43.088.068.22.152.286.189a.58.58 0 01.145.1c.037.058.078.038.06-.03-.01-.033-.067-.09-.13-.124-.064-.034-.108-.08-.101-.1.007-.021-.135-.129-.32-.236-.182-.108-.34-.226-.35-.26-.014-.03-.034-.057-.047-.057a.467.467 0 01-.131-.1c-.061-.058-.101-.102-.091-.102.023 0 .296.175.32.206.036.043.238.134.265.117.017-.01.054.01.088.048.08.087.097.084.148-.02l.04-.088.07.09c.055.068.078.081.098.044a.172.172 0 00.03-.08c0-.034-.17-.121-.42-.212a1.009 1.009 0 01-.185-.105c-.128-.1-.01-.087.242.03.118.051.303.122.414.152.111.03.25.078.303.101.296.135.384.178.511.263a.515.515 0 00.212.094c.037 0 .078.023.088.05.013.027.034.044.047.034.014-.01.08.02.148.067.067.044.121.071.121.057 0-.01.024.014.054.054.04.057.064.068.094.044.03-.027.06-.017.105.03.033.037.08.064.107.061.04-.01.347.296.347.347 0 .01.064.064.144.117.078.054.152.111.165.132.014.016.04.033.058.033.016 0 .104.054.195.118.087.064.168.114.178.118.044.003.33.222.42.323.125.134.058.097-.188-.101-.333-.273-.535-.36-.535-.232 0 .033-.023.07-.05.084-.047.017-.047.027.003.08.067.075.141.088.08.014-.05-.06-.003-.064.071-.007.03.024.047.057.04.08-.01.024.01.034.051.021.067-.017.242.118.242.185 0 .017.209.168.465.33.454.29.67.45.535.404a.494.494 0 00-.108-.02c-.024 0-.091-.038-.145-.085-.094-.077-.235-.087-.188-.013.01.017-.01.03-.044.03-.04.003-.024.02.05.06.081.044.098.071.071.098-.027.027-.017.047.04.081.044.02.095.06.108.084.014.027.05.047.078.047.027 0 .064.037.087.084.02.044.047.074.064.068.014-.01.034.01.047.047.01.033.148.192.303.35.158.158.286.306.286.323 0 .03-.222.094-.276.077-.017-.003-.027.007-.027.027s-.03.02-.074.003-.077-.04-.074-.057c.003-.047-.06-.101-.145-.121-.11-.03-.094.016.054.151.125.111.128.121.06.138a.09.09 0 01-.022.003c.032.037.063.073.093.111.755-.6 1.66-1.235 1.777-2.276.154-1.283-.886-2.277-1.854-2.94-.592-.432-1-1.091-1.279-1.759-.287-.61-.007-1.883-.007-1.883s-1.418-.112-2.085-.123zm-10.75 2.81a4.102 4.102 0 01-.282.017c-.233.014-.24.014-.223.094.01.054.06.105.155.148.135.068.976.303 1.397.394.12.027.232.06.252.077.064.05.249.071.262.03.01-.026.064-.016.165.031.121.057.441.145.586.158.02.003.043.03.057.064.013.03.07.067.128.08.057.01.097.038.09.058-.016.047-.198.027-.232-.024-.02-.03-.033-.03-.054.003-.023.034-.063.034-.201.003-.098-.023-.175-.053-.175-.07 0-.054-.064-.024-.084.04-.014.037-.037.06-.054.047-.017-.01-.024-.03-.014-.043.007-.017-.107-.091-.262-.165-.219-.111-.407-.165-.912-.276a7.444 7.444 0 00-.65-.121c-.01.01.041.047.115.087.108.06.114.067.037.05-.148-.03-.111.01.094.102.131.057.185.097.172.13-.02.051.047.129.097.119.071-.014.111.007.121.06.017.094-.11.145-.265.108a5.732 5.732 0 00-.23-.047c-.056-.007-.208-.037-.336-.06a3.065 3.065 0 00-.37-.055 1.693 1.693 0 01-.282-.04c-.115-.027-.155-.024-.175.01-.017.027-.088.04-.182.037-.084-.003-.151.01-.151.023 0 .017.127.03.286.03.279 0 .353.014.353.068 0 .05-.121.064-.222.02-.078-.03-.111-.03-.172.007-.064.044-.084.04-.158-.007-.077-.05-.09-.05-.108-.007-.02.057-.13.054-.235-.003-.057-.03-.047-.04.08-.06.172-.027.169-.04-.013-.064-.09-.01-.158 0-.202.033-.06.044-.06.048-.003.051.094 0 .03.067-.064.067a.432.432 0 01-.151-.033C.33 9.72.317 9.72.324 9.754c.01.047-.111.053-.226.01-.037-.017-.057-.017-.043 0 .013.013 0 .043-.03.067-.044.034-.034.04.077.04.074 0 .188.01.259.024.074.013.124.01.124-.01 0-.044.236-.024.367.033.074.034.104.064.09.105-.01.047-.002.054.041.03.04-.023.074-.017.115.02.05.044.074.047.158.01.057-.023.117-.026.144-.01.024.014.152.03.28.034.272.007.373.027.44.08.027.02.081.045.125.048.131.017.239.044.34.08.128.051.7.179.716.162.007-.007-.057-.034-.14-.057-.085-.024-.152-.057-.152-.078 0-.033.097-.02.346.058.142.043.165.047.182.003.01-.027.037-.05.064-.05.027 0 .047-.024.047-.055 0-.027-.013-.04-.034-.03-.016.01-.033.003-.033-.013 0-.02.023-.037.05-.037.03 0 .05.03.05.08 0 .068.02.081.139.101.077.014.148.014.158.003.01-.01-.007-.017-.037-.017s-.057-.016-.057-.033c0-.044-.007-.044.296.03.141.037.35.074.46.088.327.03.435.063.892.265.225.103.468.203.678.283.003-.035.008-.07.013-.106-.124-.046-.24-.106-.247-.136-.01-.04.007-.044.091-.017l.176.052c-.017-.116.406.02.454-.112.028-.076-.691-.282-.664-.372.026-.09.387.062.465-.026.06-.067-.181-.212-.12-.291.04-.053.413.237.468.185.07-.068-.413-.337-.36-.432.041-.072.285.115.372.057.136-.09-.04-.044.066-.17.02-.024.051-.032.09-.032.007-.016.016-.031.024-.047l.058.002c.071-.003.088-.01.051-.03a.327.327 0 00-.08-.027c.005-.007.008-.013.011-.02l.002-.003a25.609 25.609 0 00-.68-.443l-.043-.013a2.61 2.61 0 00-.673-.115c-.333-.017-.333-.017-.152.027.438.101.976.28.976.32 0 .027-.023.037-.057.027-.4-.122-1.38-.39-1.42-.39a.148.148 0 01-.09-.034c-.02-.02-.139-.047-.27-.064a3.189 3.189 0 01-.377-.07c-.077-.025-.148-.038-.158-.028-.037.034.024.121.094.142.058.013.064.026.034.057-.03.03-.054.03-.098-.007-.03-.027-.063-.044-.07-.037-.03.027-.209-.037-.226-.081-.013-.037-.043-.044-.09-.03-.04.013-.081.007-.095-.014-.03-.047-.508-.138-.508-.097 0 .043-.212-.003-.242-.054-.03-.04-.094.03-.094.104 0 .064-.067.054-.242-.04a.603.603 0 00-.202-.078zm4.004.475c.322.097.377.105.377.057 0-.028-.35-.146-.632-.214.082.049.168.102.255.157zm-.255-.157c-.223-.134-.411-.236-.478-.244a.982.982 0 01-.212-.037c-.034-.02-.226.024-.226.054 0 .02.199.067.841.209l.075.018zm.935.6c.077.051.136.092.148.101.013.01.043.031.083.055l.155.007c.243.01.431.044.673.115.364.11.42.12.42.07 0-.03-.416-.168-.706-.232-.399-.088-.627-.139-.742-.17l-.03.053zm.23.156c-.16-.007-.14 0 .005.035l.095.023-.1-.058zm.1.058l.04.02c-.047.027-.29-.109-.437-.109l-.033.062c.304.079.947.257 1.254.35.033.01.057 0 .057-.027 0-.037-.464-.193-.88-.296zm-2.31-.95h-.038c-.03.002-.054.006-.065.013-.047.027.148.068.316.068.07-.003.088-.01.05-.03a.761.761 0 00-.264-.05zm-3.104.148c-.02 0-.024.014-.014.034.01.017.037.033.054.033.02 0 .024-.016.014-.033a.069.069 0 00-.054-.034zm.21.07H2.18c-.037 0-.047.01-.02.021.023.01.053.007.063-.003.01-.008.001-.015-.019-.017zm5.434.136c.005 0 .009 0 .013.003l-.096.045-.01-.005c-.058.042-.118.1-.148.1-.033 0 .067-.133.148-.1.033-.025.066-.044.093-.043zm-1.852.702c.027 0 .04.014.03.034-.01.017-.034.034-.054.034-.017 0-.03-.017-.03-.034 0-.02.023-.034.054-.034zm-4.962.34H.8c-.037 0-.047.01-.02.02.024.01.054.008.064-.002.01-.008.001-.015-.02-.017zm.214.088l.064.07c.034.04.094.081.135.091.037.014.151.054.245.091.145.057.195.06.283.03.084-.03.121-.026.161.007a.65.65 0 00.3.125c.047 0 .04-.014-.024-.064l-.08-.06.14.01a.396.396 0 01.193.05c.027.02.047.027.047.014 0-.014.02-.01.043.007.068.053.189.074.202.033.007-.023.078-.007.195.05.202.095.475.162.663.162.068 0 .232.024.36.054.39.088.693.145.963.182.144.02.346.067.454.104.252.088.323.101.3.06-.014-.016.002-.03.03-.03.03 0 .053.024.053.05 0 .031.02.041.058.028.037-.014.047-.01.03.017-.02.037.017.057.09.043.014 0 .024.01.024.027s.037.037.084.044a.16.16 0 00.06.003l-.024-.003.104-.213c-.07-.04-.18-.085-.305-.12a2.323 2.323 0 01-.33-.132c-.093-.047-.164-.067-.178-.047a.07.07 0 01-.057.034c-.023 0-.02-.017.003-.047.057-.067-.249-.165-.552-.172a4.065 4.065 0 01-.972-.141c-.212-.057-.34-.074-.353-.05-.014.02-.148.007-.39-.044-.202-.04-.438-.084-.522-.094a1.307 1.307 0 01-.202-.037A2.442 2.442 0 002 10.337a7.809 7.809 0 01-.791-.068zm5.153.981l.003.002c-.002.064 0 .128.003.192a.057.057 0 01-.031-.007c-.017-.01-.03-.003-.03.014 0 .008-.01.014-.024.017.142.019.283.03.444.035.303.007.609.104.552.171-.024.03-.027.047-.003.047a.07.07 0 00.057-.033c.013-.02.084 0 .178.047.088.043.236.104.33.13.212.061.383.149.383.193 0 .016.024.023.051.013.027-.013.05-.003.05.017 0 .047-.161.114-.205.084-.017-.01-.03-.003-.03.013 0 .017-.037.024-.084.014-.047-.007-.084-.027-.084-.044 0-.017-.01-.027-.024-.027-.074.014-.11-.007-.09-.044.016-.026.006-.03-.03-.016-.038.013-.058.003-.058-.027 0-.027-.024-.05-.054-.05-.027 0-.044.013-.03.03.023.04-.047.027-.3-.061a2.926 2.926 0 00-.454-.104c-.217-.03-.458-.074-.746-.135-.3.636-.585 1.279-.848 1.932-1.36 2.488-3.238 2.791-3.238 2.791v2.477c1.517-.004 3.034-.009 4.55-.016-.24-2.505 1.376-5.035 3.753-5.863a1.382 1.382 0 01-.177-.103c-.064-.044-.145-.07-.178-.06-.04.01-.165-.048-.323-.145a7.318 7.318 0 00-.306-.182 5.993 5.993 0 01-.505-.326c.08 0 .501.151.69.249.13.067.269.12.31.12a.48.48 0 01.191.075c.067.044.219.138.336.212.056.034.107.067.146.094.14-.047.283-.09.426-.125-.08-.036-.244-.116-.417-.198a6.752 6.752 0 00-.656-.276 3.048 3.048 0 01-.488-.212 10.887 10.887 0 00-.343-.182c-.07-.03-.192-.1-.27-.151a2.275 2.275 0 00-.235-.138c-.067-.027-.087-.054-.07-.094.017-.044.01-.05-.027-.027-.07.044-.121.044-.232.01l-.206-.06c-.084-.027-.1-.024-.09.016.01.047.289.169.447.195.067.01.209.085.42.222.065.04.088.064.051.051a4.883 4.883 0 00-.269-.08 9.769 9.769 0 01-1.094-.428c-.457-.202-.565-.236-.891-.266a3.413 3.413 0 01-.206-.032l-.025.05zm.421-.842l-.043.084c.065.03.182.034.196-.003.007-.02-.034-.047-.091-.057a.269.269 0 01-.062-.023zm1.529 1.754c.03 0 .092.024.249.076.212.074.366.155.992.529.057.033.145.1.199.148l.097.084h-.09c-.145 0-.811-.367-.811-.448 0-.02-.027-.043-.064-.05-.04-.01-.054 0-.037.027.02.03.007.03-.047.003-.081-.044-.098-.088-.02-.057.026.01.05.003.05-.014 0-.02-.03-.034-.067-.034-.037 0-.068-.016-.068-.033 0-.02-.02-.034-.04-.034a.82.82 0 01-.178-.067.844.844 0 00-.179-.068c-.023 0-.033-.016-.023-.033.012-.02.014-.03.037-.03z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.strongswan.org/images/\",hex:\"E00033\"},StubHub:{title:\"StubHub\",slug:\"stubhub\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>StubHub icon</title><path d=\"M23.78 6.566L.21 8.148c-.116.008-.21.107-.21.227V8.4l.725 6.884v.004c.003.036.006.07.006.11 0 .123-.016.243-.048.347L.344 16.84c-.04.122.026.182.146.134l1.805-.75c.002 0 .004 0 .006-.002h.003c.13-.05.27-.076.418-.076h.036l20.04 1.29c.127 0 .23-.097.243-.222L24 6.784v-.02c0-.11-.09-.198-.2-.198h-.02zm-19.245 3.68h.053c.823 0 1.25.304 1.275.892v.045h-.516l-.006-.04c-.027-.26-.273-.386-.753-.386h-.045c-.48.008-.717.152-.717.434v.08c.005.055.03.102.07.136.052.048.117.087.19.11l1.204.403-.007-.005.01.004c.18.057.34.163.46.306.108.138.175.313.175.502v.117c0 .287-.14.54-.36.695-.235.18-.575.268-.997.268s-.75-.093-.99-.268v-.002c-.218-.155-.36-.41-.36-.7v-.07h.516v.05c0 .146.063.255.21.346s.358.137.628.137.49-.048.637-.136.22-.2.22-.346v-.072c0-.167-.098-.277-.3-.344L3.935 12c-.195-.062-.35-.157-.45-.28-.1-.12-.16-.274-.16-.444v-.084c0-.616.403-.935 1.21-.943zm8.292.08h.518v1.448h1.588v-1.447h.52v3.47h-.522v-1.52h-1.585v1.52h-.518v-3.47zm-6.495.007h.5v.945h.535v.51h-.535v.89c0 .208.056.37.168.487l-.002.004c.087.09.202.15.334.17h.035v.485l-.047-.004h-.004c-.265-.016-.504-.13-.68-.308-.203-.21-.305-.492-.305-.834v-2.346zm11.913 0h.5v1.12c.155-.157.367-.24.633-.24.755 0 1.14.395 1.142 1.175v.283c0 .342-.103.624-.305.835s-.486.316-.836.316-.628-.105-.83-.315-.306-.494-.306-.834v-2.337zm-8.084.002h.5v1.12c.156-.16.368-.243.634-.243.76 0 1.14.396 1.144 1.176v.283c0 .342-.105.624-.307.835s-.483.316-.833.316-.627-.105-.83-.315-.307-.494-.307-.834v-2.335zm-2.395.945h.492v1.367c0 .258.04.442.113.545.07.095.204.146.387.146h.016c.185 0 .31-.047.385-.146s.115-.287.115-.545H9.27V11.28h.49v1.367c0 .417-.08.72-.23.902-.146.173-.385.264-.71.272h-.115c-.325-.008-.564-.098-.71-.273-.156-.18-.23-.486-.23-.903V11.28zm8.077 0h.492v1.367c0 .258.04.442.115.545.07.095.2.146.384.146h.025c.18 0 .306-.05.378-.146.075-.104.115-.287.115-.545h-.004V11.28h.49v1.367c0 .417-.083.728-.23.902s-.384.264-.71.272h-.12c-.324-.008-.563-.098-.71-.273-.155-.18-.228-.486-.228-.903V11.28zm-4.548.422c-.207 0-.37.05-.473.156s-.16.285-.16.53v.288c0 .208.062.366.17.486s.26.182.464.182c.203 0 .357-.056.47-.18s.17-.28.17-.488v-.283c0-.247-.056-.423-.163-.53s-.266-.16-.476-.16zm8.083 0c-.207 0-.37.05-.473.156s-.16.285-.16.53v.288c0 .208.06.366.166.486s.267.182.467.182.355-.06.47-.18.17-.285.17-.488v-.283c0-.247-.056-.423-.163-.53s-.267-.16-.477-.16z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://www.stubhub.com\",hex:\"003168\"},\"styled-components\":{title:\"styled-components\",slug:\"styled-components\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>styled-components icon</title><path d=\"M16.214 6.762l-.075.391c-.116.741-.074.953.244 1.228l.307.254-.318 1.418c-.19.846-.423 1.555-.571 1.788-.127.201-.275.497-.307.656-.053.19-.233.381-.508.55-.243.138-.72.508-1.058.805-.27.243-.456.392-.557.456l-.33.261c-.106.17-.166.307-.189.411-.023.107-.01.178.024.23.033.05.09.085.168.107a.954.954 0 00.282.023 3 3 0 00.632-.112c.07-.019.125-.037.173-.053.074-.091.245-.263.548-.562.804-.793 1.111-1.227.794-1.11-.117.042-.064-.064.137-.276.424-.413.667-1.037 1.175-2.994.402-1.545.402-1.567.698-1.567.139 0 .532.024.532.024V6.762h-.902zm3.839 3.165c-.064 0-.17.096-.233.202-.116.19.021.306 1.767 1.396 1.037.657 1.873 1.217 1.852 1.26-.021.031-.868.582-1.883 1.217-1.842 1.142-1.852 1.153-1.683 1.386.212.275 0 .37 2.391-1.122L24 13.155v-.836l-1.937-1.196c-1.047-.656-1.957-1.185-2.01-1.196zm-16.085.117c-.053 0-.963.54-2.01 1.185L0 12.425v.836l1.947 1.217c1.08.666 1.99 1.217 2.032 1.217.042 0 .127-.096.212-.212.127-.201.02-.286-1.768-1.418C.72 12.996.54 12.848.71 12.732c.106-.074.91-.572 1.778-1.111 1.979-1.217 1.873-1.133 1.714-1.387-.063-.105-.17-.2-.233-.19zm8.684.023c-.292-.002-.92.443-2.8 1.978-.081.193-.088.326-.051.412.024.059.068.1.129.13.06.03.138.048.224.055.171.015.373-.012.536-.044l.11-.025a.386.386 0 01.144-.118c.116-.064.603-.508 1.09-.984.857-.868 1.058-1.26.709-1.387a.24.24 0 00-.09-.017zm2.196.603c-.257.007-.72.305-1.513.938-.398.323-.65.497-.785.533l-.524.414c-.197.36-.226.583-.174.706a.25.25 0 00.138.134.644.644 0 00.24.045 2.18 2.18 0 00.58-.085 3.466 3.466 0 00.291-.092l.029-.012.053-.028c.1-.129.33-.372.618-.652.91-.878 1.375-1.502 1.28-1.735-.043-.113-.117-.17-.233-.166zm-2.424 1.08c-.074.008-.24.136-.539.398-.432.382-.903.602-1.066.504a3.97 3.97 0 01-.114.024c-.166.033-.373.06-.558.045a.708.708 0 01-.252-.063.337.337 0 01-.168-.17c-.037-.09-.037-.202.005-.345l-.65.534-1.471 1.217V15.867l4.82-3.797a.41.41 0 01.016-.123c.037-.134.035-.202-.023-.196zm2.074.639c-.073 0-.195.103-.39.31-.265.283-.682.557-.903.613l-.034.018a2.191 2.191 0 01-.11.042c-.06.02-.138.044-.228.068-.18.049-.404.094-.604.089a.732.732 0 01-.275-.054.344.344 0 01-.184-.18c-.058-.139-.035-.334.092-.611L7.61 16.033v1.205h1.868l3.962-3.112c.103-.114.258-.27.467-.465.56-.519.687-.698.687-.963 0-.206-.023-.31-.096-.31zm.943 1.95l-.339.338c-.19.18-.529.402-.761.497l-.046.02-.003.005-.01.01c-.009.007-.013.008-.02.011a3.432 3.432 0 01-.282.093 3.058 3.058 0 01-.65.115 1.035 1.035 0 01-.31-.027.364.364 0 01-.218-.144c-.048-.074-.062-.173-.035-.295a1.11 1.11 0 01.095-.25l-3.197 2.526h4.252l.508-.582c.698-.814 1.016-1.396 1.016-1.894z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.styled-components.com/\",hex:\"DB7093\"},StyleShare:{title:\"StyleShare\",slug:\"styleshare\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>StyleShare icon</title><path d=\"M14.752 7.22a2.04 2.04 0 0 0-2.049 2.048c0 .455.146.89.414 1.241l2.628 3.662c.31.537.124 1.242-.414 1.572-.538.311-1.241.125-1.572-.414a1.154 1.154 0 0 1 .372-1.551l.042-.021c.206-.145.269-.414.124-.621a.467.467 0 0 0-.373-.207.395.395 0 0 0-.207.063l-.041.021c-.951.6-1.262 1.861-.662 2.813.601.953 1.862 1.264 2.813.662.952-.6 1.263-1.861.662-2.813-.041-.063-.082-.104-.104-.166l-2.627-3.683a1.095 1.095 0 0 1-.145-.58c0-.641.517-1.138 1.138-1.138.62 0 1.138.517 1.138 1.138 0 .394-.207.745-.538.973-.021 0-.021.021-.041.021-.207.145-.27.414-.124.621.082.124.228.186.372.207a.4.4 0 0 0 .207-.062l.041-.021c.952-.6 1.263-1.862.662-2.814a2.027 2.027 0 0 0-1.716-.951zM14.752 15.311a.578.578 0 0 0 .579-.58.578.578 0 1 0-1.158 0c0 .332.268.58.579.58zM14.752 8.689a.578.578 0 0 0-.579.58.578.578 0 1 0 1.158 0c-.02-.331-.268-.58-.579-.58zM12 0C5.379 0 0 5.379 0 12c0 6.622 5.379 12 12 12s12-5.379 12-12S18.621 0 12 0zM9.269 17.357a2.613 2.613 0 0 1-2.627-2.605 2.62 2.62 0 0 1 1.593-2.421L7.138 10.8c-.848-1.18-.579-2.814.579-3.642s2.814-.58 3.641.579c.828 1.159.58 2.814-.579 3.642a2.58 2.58 0 0 1-.517.29l1.138 1.615a2.599 2.599 0 0 1-.703 3.619 2.49 2.49 0 0 1-1.428.454zm7.655-4.074c.808 1.199.497 2.813-.703 3.619s-2.814.498-3.621-.703a2.601 2.601 0 0 1 .704-3.621c.145-.104.289-.165.435-.248l-1.117-1.531a2.633 2.633 0 0 1 .579-3.662 2.634 2.634 0 0 1 3.662.58 2.635 2.635 0 0 1-.579 3.662 2.56 2.56 0 0 1-.518.29l1.158 1.614zM8.255 9.827a1.099 1.099 0 0 1-.145-.579c0-.641.517-1.138 1.138-1.138.642 0 1.138.517 1.138 1.138 0 .394-.207.766-.538.973l-.041.021c-.207.145-.269.414-.125.621.083.124.228.186.373.207a.403.403 0 0 0 .207-.062l.041-.021a2.055 2.055 0 0 0 .683-2.814 2.055 2.055 0 0 0-2.814-.684 2.069 2.069 0 0 0-.682 2.814c.042.063.083.125.124.166l2.627 3.663c.104.166.145.373.145.578 0 .643-.497 1.139-1.138 1.16a1.153 1.153 0 0 1-1.158-1.139c0-.393.207-.766.538-.973l.042-.02c.207-.146.269-.414.124-.621a.467.467 0 0 0-.373-.207.393.393 0 0 0-.207.063l-.042.021c-.952.599-1.262 1.863-.662 2.814s1.862 1.262 2.814.662c.6-.373.972-1.035.972-1.738 0-.455-.145-.889-.414-1.242L8.255 9.827zM9.269 15.311c.31 0 .579-.248.579-.58a.58.58 0 0 0-1.159 0c0 .332.249.58.58.58zM9.269 8.689a.575.575 0 0 0-.58.559c0 .311.249.58.559.58.311 0 .58-.249.58-.559a.562.562 0 0 0-.559-.58z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.stylesha.re/\",hex:\"212121\"},Stylus:{title:\"Stylus\",slug:\"stylus\",svg:'<svg viewBox=\"0 0 24 24\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\"><title>Stylus icon</title><path d=\"M13.672 8.86c-.446-.354-1.698.239-2.052 1.118-.445 1.117-1.105 2.747-1.752 3.461-.683.751-.751.171-.683-.262.158-1.02 1.153-3.382 1.697-4.048-.202-.299-1.52-.256-2.436 1.166-.342.537-1.123 2.326-1.99 3.736-.19.305-.428.092-.244-.622.207-.825.818-3.089 1.605-4.872 2.064-.409 4.255-.696 5.934-.702.226-.061.378-.263 0-.275-1.447-.049-3.62.122-5.653.379.391-.782.812-1.404 1.239-1.667-.464-.293-1.404-.177-1.941.617a10.55 10.55 0 0 0-.702 1.245c-1.49.232-2.766.494-3.413.739-.671.256-.598 1.068-.189.915.849-.317 1.996-.647 3.272-.94-.812 1.832-1.447 3.993-1.599 4.872-.379 2.137.946 2.124 1.593 1.282.702-.922 2.167-4.164 2.393-4.505.067-.116.159-.055.11.048-1.636 3.266-1.496 4.53-.171 4.249.598-.128 1.63-1.153 1.899-1.685.055-.128.171-.116.146-.061-1.038 2.693-2.356 4.872-3.241 5.556-.806.616-1.405-.721 1.446-2.638.422-.286.226-.677-.25-.543-1.471.232-5.683 1.569-7.533 2.851-.141.098-.269.177-.263.379.006.116.208.073.306.012 2.393-1.435 4.352-1.996 6.599-2.467.03.013.067.019.097.007.104-.025.098.03.031.073a3.992 3.992 0 0 1-.342.177c-1.514.592-2.43 1.898-2.106 2.564.275.574 1.758.366 2.46-.012 1.722-.934 2.973-2.766 3.828-5.293.745-2.241 1.685-4.78 1.905-4.854zm-9.976 7.235c.623-.745.696-1.514.214-2.943-.305-.903-.812-1.599-.44-2.161.397-.598 1.24-.018.538.781l.14.098c.843.098 1.258-1.056.629-1.386-1.661-.867-3.114.8-2.473 2.729.275.818.66 1.685.348 2.375-.268.592-.787.94-1.135.952-.727.037-.244-1.63.592-2.045.073-.036.177-.085.079-.207-1.031-.116-1.636.36-1.984 1.025-1.013 1.935 1.923 2.65 3.492.782zm19.981-2.064c-2.802-.366-8.845.122-11.513.831-.794.207-.574.628-.171.549.006 0 .177-.043.183-.043 2.192-.427 7.509-.8 10.61-.207.373.067 1.49-1.05.891-1.13zm-9.224-.329c.781-.391 1.941-2.809 2.704-4.133.055-.098.153-.019.098.048-1.929 3.321-1.111 3.706-.348 3.657 1.02-.061 1.96-1.526 2.167-1.856.086-.128.135-.024.086.068-.049.152-.226.421-.391.787-.232.519.012.72.214.812.317.153 1.184.055 1.318-.476-.866-.018 1.209-4.109 1.423-4.359-.58-.336-1.477.031-1.887.836-.872 1.728-1.605 3.12-2.063 3.144-.891.049 1.026-3.852 1.337-3.974-.189-.275-1.404-.159-2.082.891-.244.379-1.733 3.016-2.1 3.45-.647.769-.696.11-.513-.66.061-.262.165-.598.3-.97.427-.965.885-1.27 1.166-1.582 1.886-2.093 2.967-3.791 2.539-4.456-.378-.592-1.642-.33-2.454.891-1.496 2.241-2.875 5.311-3.052 6.716-.171 1.404.848 1.507 1.538 1.166zm7.375-3.297c.238.586.598 1.166.384 1.679-.177.439-.409.623-.665.665-.36.061-.263-1.068.354-1.404.055-.03.134-.177.061-.262-.781-.043-1.221.329-1.459.824-.69 1.447 1.563 1.843 2.668.421.439-.568.458-1.129.036-2.149-.268-.647-.677-1.129-.421-1.557.275-.451.934-.061.44.544l.11.061c.641.036.903-.818.415-1.032-1.288-.549-2.491.836-1.923 2.21zm-6.581-.812c.067-.153.11-.195.226-.452.671-1.477 1.514-3.034 2.094-3.76.36-.379.866.134-.049 1.538a14.17 14.17 0 0 1-1.813 2.265v.006c-.171.189-.324.348-.391.44-.049.061-.104.049-.067-.037z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://stylus-lang.com/img/stylus-logo.svg\",hex:\"333333\"},\"Sublime Text\":{title:\"Sublime Text\",slug:\"sublimetext\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Sublime Text icon</title><path d=\"M21.24,12.06a.72.72,0,0,0-.46-.65L13.4,9.07l7.37-2.34a.73.73,0,0,0,.47-.66V.38A.35.35,0,0,0,20.77,0L3.23,5.58a.68.68,0,0,0-.47.64v5.7a.65.65,0,0,0,.46.62l7.46,2.37L3.22,17.27a.73.73,0,0,0-.46.66v5.69a.34.34,0,0,0,.46.36l17.56-5.57a.65.65,0,0,0,.46-.62Z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.sublimetext.com/images/logo.svg\",hex:\"FF9800\"},Subversion:{title:\"Subversion\",slug:\"subversion\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Subversion icon</title><path d=\"M24 20.753v-6.306c-3.285 1.296-7.362 2.556-12.23 3.786-4.534 1.145-8.458 1.97-11.77 2.475v.045h24zM0 14.078v5.133c3.738-.55 7.116-1.206 10.13-1.967 2.962-.748 5.245-1.475 6.847-2.18 1.602-.703 2.34-1.297 2.22-1.78-.107-.42-.846-.635-2.217-.645-.703.01-1.67.06-2.904.15-1.236.09-2.774.234-4.61.426-2.85.304-5.216.537-7.1.694-.896.075-1.685.132-2.366.17zm1.035 2.95c.06 0 .114.025.16.07.046.046.07.103.07.166 0 .066-.024.12-.07.168-.047.045-.104.066-.164.066-.032 0-.064-.006-.092-.018-.03-.012-.054-.03-.075-.05-.023-.014-.04-.044-.05-.074 0-.015-.016-.045-.016-.09 0-.06.03-.12.075-.165s.105-.06.18-.06zm.81 0c.063 0 .117.025.165.07.045.046.066.103.066.166 0 .066-.022.12-.067.168-.06.045-.106.066-.18.066-.03 0-.06-.006-.09-.018s-.06-.03-.076-.05c-.03-.014-.045-.044-.06-.074-.015-.015-.015-.045-.015-.09 0-.06.014-.12.06-.165s.104-.06.164-.06zm-.81-1.51c.06 0 .114.022.16.07.046.045.07.1.07.165 0 .064-.024.12-.07.165s-.1.07-.164.07c-.065 0-.122-.024-.167-.07-.045-.045-.07-.102-.07-.165 0-.067.016-.123.06-.168s.106-.068.166-.068zm.81 0c.063 0 .117.022.165.07.045.045.066.1.066.165 0 .064-.022.12-.067.165-.06.045-.106.07-.18.07s-.12-.024-.166-.07c-.045-.045-.075-.102-.075-.165 0-.067.014-.123.06-.168s.104-.068.164-.068zM24 4.597V9.41c-1.635.1-3.68.277-6.138.534-2.49.27-4.52.48-6.093.615-1.576.15-2.713.226-3.41.24-1.363.03-2.09-.15-2.195-.554-.105-.45.705-1.05 2.445-1.77 1.74-.735 4.05-1.47 6.9-2.19 2.505-.63 5.34-1.185 8.49-1.65zm-.855-1.35c-3.255.605-6.627 1.35-10.114 2.23C7.587 6.852 3.244 8.22 0 9.573V3.248h23.146z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://subversion.apache.org/logo\",hex:\"809CC9\"},\"Super User\":{title:\"Super User\",slug:\"superuser\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Super User icon</title><path d=\"M20.863 14.479c-1.48.421-2.489 1.287-2.489 2.716v4.081c0 3.048-2.907 2.714-6.517 2.714h-.555c-.225 0-.359-.084-.359-.28v-1.398c0-.194.12-.279.345-.279h.45c2.16 0 3.675.475 3.675-1.26v-3.917c0-1.199.84-2.88 2.521-3.493.119-.031.135-.085.135-.141s-.03-.139-.135-.195c-1.53-.7-2.521-1.844-2.521-3.217V5.385c0-1.707-1.5-3.412-3.659-3.412h-.451c-.225 0-.33-.084-.33-.279V.301c0-.195.15-.281.375-.281h.556c3.6 0 6.54 2.572 6.54 5.62v3.72c0 1.409 1.004 2.22 2.52 2.744.556.165.869.196.869.646v1.17c.03.256-.239.375-.914.57l-.056-.011zM8.092 23.97h-5.59c-.225 0-.336-.056-.336-.252V.279c0-.164.104-.279.33-.279H8.03c.226 0 .36.084.36.279v1.455c0 .195-.121.252-.346.252H5.572c-.305 0-.42.111-.42.307v19.41c0 .196.115.27.367.27h2.517c.226 0 .363.076.363.255v1.484c.029.166-.084.255-.308.255v.003zm4.875-13.034h-1.485c-.362 0-.642-.281-.642-.59V9.003c0-.335.307-.585.642-.585h1.485c.359 0 .642.277.642.585v1.343c0 .336-.31.588-.645.588l.003.002z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://stackoverflow.com/company/logos\",hex:\"2EACE3\"},Svelte:{title:\"Svelte\",slug:\"svelte\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Svelte icon</title><path d=\"M20.68 3.17a7.3 7.3 0 0 0-9.8-2.1l-5.6 3.56a6.36 6.36 0 0 0-2.89 4.3 6.66 6.66 0 0 0 .67 4.33 6.14 6.14 0 0 0-.95 2.4 6.84 6.84 0 0 0 1.16 5.16 7.33 7.33 0 0 0 9.8 2.12l5.6-3.56a6.36 6.36 0 0 0 2.88-4.3 6.66 6.66 0 0 0-.67-4.32 6.79 6.79 0 0 0-.2-7.59zM10.32 21.13a4.43 4.43 0 0 1-4.76-1.77c-.65-.9-.89-2.01-.7-3.11l.11-.53.1-.33.3.2c.66.5 1.4.86 2.19 1.1l.2.07-.02.2c-.02.28.06.59.22.83.33.47.9.7 1.45.55.12-.04.24-.08.34-.14l5.58-3.56c.28-.18.46-.45.53-.77.06-.33-.02-.67-.2-.94-.33-.46-.9-.67-1.45-.53-.12.04-.25.09-.35.15l-2.11 1.34a4.43 4.43 0 0 1-5.9-1.28 4.1 4.1 0 0 1-.7-3.11A3.85 3.85 0 0 1 6.92 6.9l5.57-3.56c.35-.22.73-.38 1.14-.5 1.8-.47 3.7.24 4.76 1.76a4.12 4.12 0 0 1 .57 3.64l-.1.33-.29-.2a7.42 7.42 0 0 0-2.2-1.1l-.2-.06.02-.2c.02-.29-.06-.6-.22-.84-.33-.47-.9-.67-1.45-.53-.12.04-.24.08-.34.14L8.59 9.37c-.28.19-.46.45-.52.78-.06.32.02.67.2.93.32.47.9.67 1.44.53.13-.04.25-.08.35-.14l2.13-1.36c.35-.23.74-.4 1.14-.51 1.81-.47 3.7.24 4.76 1.77.65.9.9 2.01.72 3.1a3.85 3.85 0 0 1-1.75 2.6l-5.58 3.55a4.9 4.9 0 0 1-1.16.51z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/sveltejs/svelte/tree/master/site/static\",hex:\"FF3E00\"},SVG:{title:\"SVG\",slug:\"svg\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>SVG icon</title><path d=\"M12 0c-1.497 0-2.749.965-3.248 2.17a3.45 3.45 0 00-.238 1.416 3.459 3.459 0 00-1.168-.834 3.508 3.508 0 00-1.463-.256 3.513 3.513 0 00-2.367 1.02c-1.06 1.058-1.263 2.625-.764 3.83.179.432.47.82.82 1.154a3.49 3.49 0 00-1.402.252C.965 9.251 0 10.502 0 12c0 1.497.965 2.749 2.17 3.248.437.181.924.25 1.414.236-.357.338-.65.732-.832 1.17-.499 1.205-.295 2.772.764 3.83 1.058 1.06 2.625 1.263 3.83.764.437-.181.83-.476 1.168-.832-.014.49.057.977.238 1.414C9.251 23.035 10.502 24 12 24c1.497 0 2.749-.965 3.248-2.17a3.45 3.45 0 00.238-1.416c.338.356.73.653 1.168.834 1.205.499 2.772.295 3.83-.764 1.06-1.058 1.263-2.625.764-3.83a3.459 3.459 0 00-.834-1.168 3.45 3.45 0 001.416-.238C23.035 14.749 24 13.498 24 12c0-1.497-.965-2.749-2.17-3.248a3.455 3.455 0 00-1.414-.236c.357-.338.65-.732.832-1.17.499-1.205.295-2.772-.764-3.83a3.513 3.513 0 00-2.367-1.02 3.508 3.508 0 00-1.463.256c-.437.181-.83.475-1.168.832a3.45 3.45 0 00-.238-1.414C14.749.965 13.498 0 12 0zm-.041 1.613a1.902 1.902 0 011.387 3.246v3.893L16.098 6A1.902 1.902 0 1118 7.902l-2.752 2.752h3.893a1.902 1.902 0 110 2.692h-3.893L18 16.098A1.902 1.902 0 1116.098 18l-2.752-2.752v3.893a1.902 1.902 0 11-2.692 0v-3.893L7.902 18A1.902 1.902 0 116 16.098l2.752-2.752H4.859a1.902 1.902 0 110-2.692h3.893L6 7.902A1.902 1.902 0 117.902 6l2.752 2.752V4.859a1.902 1.902 0 011.305-3.246z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.w3.org/2009/08/svg-logos.html\",hex:\"FFB13B\"},SVGO:{title:\"SVGO\",slug:\"svgo\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>SVGO icon</title><path d=\"M11.152 0l-.27 1.48c-.644.068-1.271.194-1.876.373L8.192.589l-1.568.65.318 1.469c-.563.307-1.094.664-1.59 1.064l-1.237-.857-1.2 1.2.857 1.238c-.4.495-.757 1.026-1.064 1.589l-1.47-.318-.65 1.567 1.265.815a10.527 10.527 0 00-.372 1.876L0 11.152v1.696l1.48.27c.069.644.194 1.271.373 1.876l-1.264.814.65 1.568 1.469-.318c.307.563.664 1.094 1.064 1.59l-.857 1.237 1.2 1.2 1.238-.857c.495.4 1.026.757 1.589 1.064l-.318 1.47 1.568.65.814-1.264c.605.178 1.232.303 1.877.371L11.152 24h1.696l.27-1.48a10.531 10.531 0 001.876-.372l.814 1.263 1.568-.65-.318-1.469a10.596 10.596 0 001.59-1.064l1.237.857 1.2-1.2-.857-1.238c.4-.495.757-1.026 1.064-1.589l1.47.318.65-1.568-1.264-.814c.178-.605.304-1.232.371-1.877L24 12.848v-1.696l-1.48-.27a10.524 10.524 0 00-.373-1.876l1.264-.815-.65-1.567-1.469.318a10.596 10.596 0 00-1.064-1.59l.857-1.237-1.2-1.2-1.238.857c-.495-.4-1.026-.757-1.589-1.064l.318-1.47-1.568-.65-.814 1.264a10.536 10.536 0 00-1.877-.371L12.848 0zM12 2.805a9.196 9.196 0 110 18.392 9.196 9.196 0 010-18.392zm0 .968a8.227 8.227 0 100 16.454 8.227 8.227 0 000-16.454zm-.475 1.982a.644.644 0 01.644.643.644.644 0 01-.144.405l1.364 1.376a.805.805 0 01.514-.187.805.805 0 01.23.034l.383-.968a.644.644 0 01-.343-.569.644.644 0 01.644-.643.644.644 0 01.644.643.644.644 0 01-.644.644.644.644 0 01-.17-.024l-.384.97a.805.805 0 01.445.718.805.805 0 01-.805.805.805.805 0 01-.57-.238l-1.214 1.013a1.61 1.61 0 01.331.975 1.61 1.61 0 01-.486 1.152l.875.98a1.127 1.127 0 01.699-.243 1.127 1.127 0 011.126 1.126 1.127 1.127 0 01-.033.264l1.556.523a.805.805 0 01.729-.465.805.805 0 01.804.805.805.805 0 01-.804.804.805.805 0 01-.805-.804.805.805 0 01.028-.208l-1.55-.52a1.127 1.127 0 01-1.051.728 1.127 1.127 0 01-.526-.131l-.696 1.288a.805.805 0 01.362.67.805.805 0 01-.804.806.805.805 0 01-.805-.805.805.805 0 01.805-.805.805.805 0 01.319.066l.7-1.294a1.127 1.127 0 01-.482-.922 1.127 1.127 0 01.323-.789l-.876-.981a1.61 1.61 0 01-1.017.364 1.61 1.61 0 01-.883-.265l-.78 1.082a1.127 1.127 0 01.413.87 1.127 1.127 0 01-1.127 1.127 1.127 1.127 0 01-1.127-1.127 1.127 1.127 0 011.127-1.126 1.127 1.127 0 01.6.174l.78-1.083a1.61 1.61 0 01-.613-1.261 1.61 1.61 0 01.045-.368l-1.68-.473a.805.805 0 01-.75.52.805.805 0 01-.805-.804.805.805 0 01.804-.805.805.805 0 01.805.805.805.805 0 01-.014.15l1.677.471a1.61 1.61 0 011.528-1.106 1.61 1.61 0 011.188.527l1.214-1.013a.805.805 0 01-.145-.459.805.805 0 01.19-.52l-1.362-1.375a.644.644 0 01-.401.14.644.644 0 01-.644-.644.644.644 0 01.644-.643z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/svg/svgo\",hex:\"14B9FF\"},Swagger:{title:\"Swagger\",slug:\"swagger\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Swagger icon</title><path d=\"M12 0C5.383 0 0 5.383 0 12s5.383 12 12 12c6.616 0 12-5.383 12-12S18.616 0 12 0zm0 1.144c5.995 0 10.856 4.86 10.856 10.856 0 5.995-4.86 10.856-10.856 10.856-5.996 0-10.856-4.86-10.856-10.856C1.144 6.004 6.004 1.144 12 1.144zM8.37 5.868a6.707 6.707 0 0 0-.423.005c-.983.056-1.573.517-1.735 1.472-.115.665-.096 1.348-.143 2.017-.013.35-.05.697-.115 1.038-.134.609-.397.798-1.016.83a2.65 2.65 0 0 0-.244.042v1.463c1.126.055 1.278.452 1.37 1.629.033.429-.013.858.015 1.287.018.406.073.808.156 1.2.259 1.075 1.307 1.435 2.575 1.218v-1.283c-.203 0-.383.005-.558 0-.43-.013-.591-.12-.632-.535-.056-.535-.042-1.08-.075-1.62-.064-1.001-.175-1.988-1.153-2.625.503-.37.868-.812.983-1.398.083-.41.134-.821.166-1.237.028-.415-.023-.84.014-1.25.06-.665.102-.937.9-.91.12 0 .235-.017.369-.027v-1.31c-.16 0-.31-.004-.454-.006zm7.593.009a4.247 4.247 0 0 0-.813.06v1.274c.245 0 .434 0 .623.005.328.004.577.13.61.494.032.332.031.669.064 1.006.065.669.101 1.347.217 2.007.102.544.475.95.941 1.283-.817.549-1.057 1.333-1.098 2.215-.023.604-.037 1.213-.069 1.822-.028.554-.222.734-.78.748-.157.004-.31.018-.484.028v1.305c.327 0 .627.019.927 0 .932-.055 1.495-.507 1.68-1.412.078-.498.124-1 .138-1.504.032-.461.028-.927.074-1.384.069-.715.397-1.01 1.112-1.057a.972.972 0 0 0 .199-.046v-1.463c-.12-.014-.204-.027-.291-.032-.536-.023-.804-.203-.937-.71a5.146 5.146 0 0 1-.152-.993c-.037-.618-.033-1.241-.074-1.86-.08-1.192-.794-1.753-1.887-1.786zm-6.89 5.28a.844.844 0 0 0-.083 1.684h.055a.83.83 0 0 0 .877-.78v-.046a.845.845 0 0 0-.83-.858zm2.911 0a.808.808 0 0 0-.834.78c0 .027 0 .05.004.078 0 .503.342.826.859.826.507 0 .826-.332.826-.853-.005-.503-.342-.836-.855-.831zm2.963 0a.861.861 0 0 0-.876.835c0 .47.378.849.849.849h.009c.425.074.853-.337.881-.83.023-.457-.392-.854-.863-.854z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://swagger.io/swagger/media/assets/images/swagger_logo.svg\",hex:\"85EA2D\"},Swarm:{title:\"Swarm\",slug:\"swarm\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Swarm icon</title><path d=\"M12.367 8.755l.004-.005c-.03-.058-.138-.3-.16-.364v-.002C8.828 1.474 1.314 1.72.128 4.81c-.91 2.373 3.072 8.026 12.24 3.945zM9.9 19.232c-.596-1.344-.922-2.8-.957-4.26-.964 1.49-1.69 2.987-2.176 4.104-.023.045-.38.93-.482 1.2-.13.33.045.734.383.854.273.104 1.165.42 1.22.45 1.14.374 2.716.84 4.456 1.126-1.035-.992-1.86-2.176-2.445-3.496v.022zM13.89 8.117c5.18-2.306 4.456-6.31 3.116-6.825-1.804-.693-5.08 1.974-3.205 6.62.016.033.09.17.09.205zM23.413 13.186v-.008c-.786-1.764-2.226-3.024-3.897-3.624-.168-.063-.34-.09-.51-.09-.87 0-1.707.723-1.785 1.626-.134 1.506.165 3.04.825 4.516.646 1.46 1.566 2.69 2.75 3.596.31.24.684.36 1.063.36.677 0 1.354-.36 1.623-1.005.688-1.65.722-3.586-.067-5.37zM19.482 20.918h-.004c-1.445-1.11-2.594-2.6-3.41-4.43-.826-1.86-1.164-3.738-1.004-5.586.045-.516.194-1.012.438-1.465l-.137.035c-.764.19-1.5.52-2.156.953-.95.625-1.788 1.55-2.15 2.646-.097.298-.17.62-.193.93-.116 1.48.126 3.01.77 4.462.626 1.404 1.562 2.574 2.687 3.465.684.547 1.92.89 2.93.89.95 0 1.887-.27 2.73-.704.263-.137.84-.493.878-.524-.5-.122-.973-.345-1.38-.66v-.012z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://foursquare.com/about/logos\",hex:\"FFA633\"},Swift:{title:\"Swift\",slug:\"swift\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Swift icon</title><path d=\"M21.984 16.348c.056-.112.056-.224.112-.336 1.346-5.272-1.851-11.44-7.347-14.693 2.412 3.253 3.365 7.122 2.524 10.599-.056.28-.168.617-.28.897a5.173 5.173 0 0 1-.45-.28S11.104 9.17 5.273 3.282c-.169-.168 3.14 4.71 6.841 8.58-1.738-1.01-6.673-4.542-9.758-7.403.337.617.842 1.234 1.346 1.851 2.58 3.309 5.945 7.346 9.983 10.43-2.86 1.74-6.842 1.851-10.88 0-1.01-.448-1.85-1.009-2.804-1.682 1.682 2.636 4.318 5.048 7.459 6.337 3.757 1.627 7.57 1.515 10.318 0h.057c.112-.056.224-.112.336-.224 1.346-.673 3.982-1.402 5.44 1.402.392.785 1.121-2.86-1.626-6.225z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://developer.apple.com/develop/\",hex:\"FA7343\"},Symantec:{title:\"Symantec\",slug:\"symantec\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Symantec icon</title><path d=\"M22.877 0v.738h.738V0h-.738zm0 .738h-.738v.739h.738V.738zm0 .739v.738h.738v-.738h-.738zm-.738 0h-1.477v.738h-.738V3.69h-.738v.74h-1.479v.725A10.572 10.572 0 0011 2.77C5.136 2.77.385 7.52.385 13.385.385 19.248 5.136 24 11 24s10.615-4.752 10.615-10.615c0-2.56-.904-4.906-2.412-6.739h.72v-.738h.74V4.43h.737V3.69h.739v-.738H21.4v-.738h.739v-.738zM19.186 3.69v-.738h-.74v.738h.74zM11 6.154a7.193 7.193 0 014.033 1.23h-.28v.739h-.737c-1.927 2.409-2.414 3.466-3.182 5.414-.871-1.763-1.911-2.978-3.711-3.783l-.02-.006c-.327-.083-.493-.125-.718.19-.23.322-.092.613.183.955a35.212 35.212 0 00.586.703c.547.646 1.095 1.289 1.508 2.035.408.738.877 1.772 1.242 2.574.223.49.406.894.51 1.088.22.406.752.584.955.584.985-.117 1.08-.582 1.242-1.379l.057-.264c.336-1.574.771-3.203 2.824-5.158v-.736h.738V9.6h.74v-.295a7.193 7.193 0 011.26 4.08c0 3.99-3.24 7.23-7.23 7.23s-7.2-3.24-7.2-7.23 3.21-7.23 7.2-7.23z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://commons.wikimedia.org/wiki/File:Symantec_logo10.svg\",hex:\"FDB511\"},Symfony:{title:\"Symfony\",slug:\"symfony\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Symfony icon</title><path d=\"M24 12c0 6.628-5.372 12-12 12S0 18.628 0 12 5.372 0 12 0s12 5.372 12 12zm-6.753-7.561c-1.22.042-2.283.715-3.075 1.644-.878 1.02-1.461 2.229-1.881 3.461-.753-.614-1.332-1.414-2.539-1.761-.966-.297-2.015-.105-2.813.514-.41.319-.71.757-.861 1.254-.36 1.176.381 2.225.719 2.6l.737.79c.15.154.519.56.339 1.138-.193.631-.951 1.037-1.732.799-.348-.106-.848-.366-.734-.73.045-.15.152-.263.21-.391.052-.11.077-.194.095-.242.141-.465-.053-1.07-.551-1.223-.465-.143-.939-.03-1.125.566-.209.68.117 1.913 1.86 2.449 2.04.628 3.765-.484 4.009-1.932.153-.907-.255-1.582-1.006-2.447l-.612-.677c-.371-.37-.497-1.002-.114-1.485.324-.409.785-.584 1.539-.379 1.103.3 1.594 1.063 2.412 1.68-.338 1.11-.56 2.223-.759 3.222l-.123.746c-.585 3.07-1.033 4.757-2.194 5.726-.234.166-.57.416-1.073.434-.266.005-.352-.176-.355-.257-.006-.184.15-.271.255-.353.154-.083.39-.224.372-.674-.016-.532-.456-.994-1.094-.973-.477.017-1.203.465-1.176 1.286.028.85.819 1.485 2.012 1.444.638-.021 2.062-.281 3.464-1.949 1.633-1.911 2.09-4.101 2.434-5.706l.383-2.116c.213.024.441.042.69.048 2.032.044 3.049-1.01 3.064-1.776.01-.464-.304-.921-.744-.91-.386.009-.718.278-.806.654-.094.428.646.813.068 1.189-.41.266-1.146.452-2.184.3l.188-1.042c.386-1.976.859-4.407 2.661-4.467.132-.007.612.006.623.323.003.105-.022.134-.147.375-.115.155-.174.345-.168.537.017.504.4.836.957.816.743-.023.955-.748.945-1.119-.032-.874-.952-1.424-2.17-1.386z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://symfony.com/logo\",hex:\"000000\"},Synology:{title:\"Synology\",slug:\"synology\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Synology icon</title><path d=\"M17.895 11.927a3.196 3.196 0 0 1 .394-1.53l-.008.017a2.677 2.677 0 0 1 1.075-1.108l.014-.007a3.181 3.181 0 0 1 1.523-.382h.05-.003q1.346 0 2.2.871.854.871.86 2.203c0 .895-.29 1.635-.867 2.226s-1.306.886-2.183.886c-.566 0-1.1-.137-1.571-.379l.019.009a2.535 2.535 0 0 1-1.115-1.067l-.007-.013q-.38-.708-.381-1.726zm1.593.083c0 .591.138 1.043.42 1.349a1.365 1.365 0 0 0 2.066.002l.001-.002c.275-.307.413-.764.413-1.357s-.138-1.033-.413-1.342a1.371 1.371 0 0 0-2.066-.001l-.001.002c-.281.306-.42.758-.42 1.345zm-1.602 2.941H16.33v-3.015c0-.635-.032-1.044-.101-1.234a.876.876 0 0 0-.328-.435l-.003-.002a.938.938 0 0 0-.521-.156h-.027.001-.012c-.27 0-.521.084-.727.228l.004-.003a1.115 1.115 0 0 0-.444.576l-.002.008c-.083.248-.121.696-.121 1.359v2.673H12.5V9.027h1.439v.867c.518-.656 1.167-.98 1.952-.98h.021c.335 0 .655.067.946.189l-.016-.006c.261.105.48.268.648.475l.002.003c.141.185.247.404.304.643l.002.012c.057.278.089.597.089.924l-.002.135v-.007zM6.413 9.028h1.654l1.412 4.204 1.376-4.204h1.611l-2.067 5.693-.38 1.038a4.158 4.158 0 0 1-.4.807l.01-.017a1.637 1.637 0 0 1-.422.443l-.005.003c-.17.113-.367.203-.578.26l-.014.003c-.232.064-.499.1-.774.1h-.025.001a4.13 4.13 0 0 1-.911-.105l.028.005-.129-1.229c.198.046.426.074.659.077h.002c.36 0 .628-.106.8-.318a2.27 2.27 0 0 0 .395-.807l.004-.016zM0 12.29l1.592-.149q.147.802.586 1.181.439.379 1.192.375c.528 0 .927-.113 1.197-.335.27-.222.4-.486.4-.782v-.024a.751.751 0 0 0-.167-.474l.001.001c-.113-.132-.309-.252-.59-.347-.193-.074-.631-.191-1.312-.365-.882-.216-1.496-.486-1.85-.804A2.147 2.147 0 0 1 .3 8.936v-.019V8.908c0-.431.132-.831.358-1.163l-.005.007a2.226 2.226 0 0 1 1.003-.826l.015-.005c.442-.184.973-.281 1.602-.281q1.529 0 2.304.676c.516.457.785 1.057.811 1.809l-1.649.055c-.073-.413-.219-.714-.452-.899-.233-.185-.579-.276-1.034-.276-.476 0-.85.098-1.118.298a.59.59 0 0 0-.261.49v.011-.001.002c0 .201.095.379.242.493l.001.001c.205.179.709.36 1.507.546.798.186 1.388.387 1.769.59.374.196.678.48.893.825l.006.01c.214.345.326.786.326 1.305 0 .489-.146.944-.396 1.325l.006-.009c-.264.408-.64.724-1.084.908l-.016.006c-.475.194-1.065.298-1.772.298-1.029 0-1.819-.241-2.373-.722-.554-.481-.879-1.177-.986-2.091z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.synology.com/en-global/company/branding\",hex:\"B6B5B6\"},Tableau:{title:\"Tableau\",slug:\"tableau\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Tableau icon</title><path d=\"M11.654.174V2.377H9.682v.58h1.972V5.16h.696V2.957h1.97v-.58h-1.97V.174h-.348zm6.03 2.262l-.002 1.623v1.623h-2.957v.927h2.957v3.188H18.725l.011-1.582.02-1.576 1.465-.02 1.46-.01v-.927H18.728V2.436h-.522zm-12.407.06V5.686H2.291v.925H5.277V9.801h.985V6.61h3.013v-.925H6.262V2.496H5.77zm6.086 5.27v3.593H8.06v1.188h3.304v3.596h1.28v-3.596H15.953v-1.188H12.643V7.766h-.637zm9.721 1.55v2.221h-2.012v.811h2.012v2.261h.887v-2.261H24v-.811h-2.029V9.317h-.422zm-19.111.131V11.621H0v.621H1.973v2.194H2.64v-2.194h2v-.62H2.609V9.446h-.318zm15.709 4.516v3.254h-3.016v.927h3.016v3.217h1.072v-3.216H21.74v-.928H18.754v-3.254h-.533zm-12.463.008v3.246H2.262v.928h2.957v3.189H6.32v-3.189h2.955v-.928H6.32V13.97h-.55zm6.316 4.578l.002 1.103v1.1H9.566v.812h1.971v2.262h.928l.012-1.119.017-1.143H14.463v-.812h-2V18.549h-.465z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.tableau.com/about/media-download-center\",hex:\"E97627\"},Tails:{title:\"Tails\",slug:\"tails\",svg:'<svg xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" viewBox=\"0 0 24 24\"><title>Tails icon</title><path d=\"M21.356 11.162v3.98c0 .122-.081.154-.181.071l-2.032-1.682a.55.55 0 0 1-.181-.37v-.501l-.635-.516c-.68-.554-1.226-1.677-1.226-2.5 0-.822.549-1.036 1.226-.478l.635.516V9.18c0-.122.081-.154.181-.071l2.032 1.682c.1.082.181.248.181.37zm-2.993-1.265c-.358-.296-.648-.182-.648.253s.29 1.027.648 1.323l.599.486v-1.576l-.599-.486zM21.202 19.934l.013-.01a.334.334 0 0 0 .037-.036l.004-.004a.36.36 0 0 0 .032-.046l.007-.013a.299.299 0 0 0 .019-.042l.004-.01a.329.329 0 0 0 .013-.055v-.014l.003-.027.003-.152-5.223-4.28.022-12.91-.147-.111-.004-.003-.034-.02c-.007-.004-.014-.01-.022-.013l-.03-.01c-.01-.004-.02-.009-.03-.011l-.026-.004c-.013-.002-.026-.005-.039-.005H15.8l-.023.001c-.013 0-.025.001-.037.003l-.03.007c-.01.003-.021.005-.031.01-.01.003-.02.008-.029.012l-.029.015a.202.202 0 0 0-.014.01c-.012.004-.024.007-.035.013l-3.444 1.726.72.57.027 10.067-5.246-4.32-.003-5.241L7.623.328l-.001-.01a.283.283 0 0 0-.004-.035c-.001-.01-.002-.02-.005-.03L7.605.223C7.6.213 7.597.201 7.59.19L7.588.181l-.01-.015c-.006-.01-.012-.021-.02-.031L7.54.112A.354.354 0 0 0 7.466.05.294.294 0 0 0 7.44.035c-.01-.004-.02-.01-.03-.013a.365.365 0 0 0-.061-.016L7.314.002 7.294 0l-.009.001a.3.3 0 0 0-.036.004c-.01.001-.02.002-.03.005-.01.002-.019.006-.029.009a.286.286 0 0 0-.033.012l-.009.004L2.825 2.2l-.016.01a.336.336 0 0 0-.077.061.303.303 0 0 0-.053.078.402.402 0 0 0-.023.06.284.284 0 0 0-.01.065c-.001.006-.003.013-.002.02l.006 10.108v.02l.002.008c0 .015.003.03.006.044l.002.009.004.011a.32.32 0 0 0 .02.054v.001h.001c.009.018.02.034.031.05l.007.01.006.006a.31.31 0 0 0 .031.032l.006.006c.004.003.008.005.01.008.002 0 .003.003.005.004l4.7 3.909-.107 2.673v.038l.004.025.002.015c0 .005.002.01.004.015 0 .004.002.007.003.011l.001.005.003.01c.005.014.01.028.017.04v.002a.32.32 0 0 0 .031.049l.006.008.005.005a.342.342 0 0 0 .037.039l.005.003.003.002.003.004 5.317 4.212c.1.078.236.092.35.035l7.988-4 .004-.002a.321.321 0 0 0 .045-.029zM5.475 10.985L3.819 9.706v1.1l.844.585-1.392.698-.006-9.376 2.176-1.09.023 2.392-1.546-1.236v1.1l1.554 1.235.024 1.182L3.901 5.02v1.1l1.603 1.275-.006 1.283-1.573-1.257v1.1l1.58 1.256.01 1.187zm3.433 6.038l-5.309-4.365 3.668-1.837 5.309 4.365zM6.123 1.282l.733-.367.079 9.34-.733.366zM8.617 8.396l-.001-1.59L9.925 7.83l.001 1.591zM9.926 6.568l-1.31-1.025V3.952l1.309 1.025zM11.018 5.816c.507.646 1.026 1.907 1.026 3.073 0 1.165-.519 1.562-1.026 1.362V5.816z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://tails.boum.org/contribute/how/promote/material/logo/\",hex:\"56347C\"},\"Tailwind CSS\":{title:\"Tailwind CSS\",slug:\"tailwindcss\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Tailwind CSS icon</title><path d=\"M12.001,4.8c-3.2,0-5.2,1.6-6,4.8c1.2-1.6,2.6-2.2,4.2-1.8c0.913,0.228,1.565,0.89,2.288,1.624 C13.666,10.618,15.027,12,18.001,12c3.2,0,5.2-1.6,6-4.8c-1.2,1.6-2.6,2.2-4.2,1.8c-0.913-0.228-1.565-0.89-2.288-1.624 C16.337,6.182,14.976,4.8,12.001,4.8z M6.001,12c-3.2,0-5.2,1.6-6,4.8c1.2-1.6,2.6-2.2,4.2-1.8c0.913,0.228,1.565,0.89,2.288,1.624 c1.177,1.194,2.538,2.576,5.512,2.576c3.2,0,5.2-1.6,6-4.8c-1.2,1.6-2.6,2.2-4.2,1.8c-0.913-0.228-1.565-0.89-2.288-1.624 C10.337,13.382,8.976,12,6.001,12z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://tailwindcss.com/\",hex:\"38B2AC\"},Tapas:{title:\"Tapas\",slug:\"tapas\",svg:'<svg xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" viewBox=\"0 0 24 24\"><title>Tapas icon</title><path d=\"M7.67 1.56c.282-.134.542-.338.81-.513.253-.163.54-.436.894-.33.103.296-.162.503-.331.662-.538.511-1.154.975-1.72 1.456A240.349 240.349 0 0 1 1.5 7.598a7.406 7.406 0 0 1-.612.445c-.183.118-.456.359-.71.165.071-.337.306-.567.512-.778.213-.216.414-.446.629-.66-.248-.427-.473-.821-.662-1.274-.186-.449-.378-.971-.38-1.554-.002-1.109.635-2.043 1.34-2.68C2.34.61 3.306.066 4.429.006 6.015-.078 6.933.71 7.67 1.56zm5.012 18.075v.198c-.278.01-.532-.01-.795-.016v-.198c.277-.008.535.006.795.016zm-1.59 0v.198c-.282-.012-.52.021-.792.018v-.198a9.53 9.53 0 0 1 .793-.018zm3.177.05c-.007.067.013.158-.017.199-.251-.02-.518-.024-.778-.033v-.198c.275.003.542.009.795.032zm-4.763 0v.199c-.274.002-.512.039-.795.032v-.197c.28.001.516-.036.795-.034zm5.555.034c.255.033.544.029.793.064.013.084-.014.129-.015.2-.255-.033-.544-.03-.794-.067a.703.703 0 0 0 .016-.197zm-7.142.065v.2c-.26.02-.517.046-.778.065-.022-.05-.018-.126-.017-.198.265-.024.521-.053.795-.067zm8.73.067c.269.023.537.048.793.082-.02.058-.004.148-.032.199-.25-.036-.518-.053-.778-.083-.01-.083.017-.128.017-.198zm-10.319.082c-.006.08.03.113.017.199-.259.022-.568.082-.793.082.012-.077-.02-.114-.018-.182.252-.045.529-.066.794-.099zm12.684.199c.012.084-.027.114-.017.196-.256-.044-.54-.063-.794-.114.01-.058.025-.109.017-.182.228.008.545.062.795.1zm-14.288 0c.06.022.033.133.05.196-.259.04-.517.08-.777.117a.68.68 0 0 1-.034-.197c.253-.038.515-.072.761-.116zm15.86.233a.628.628 0 0 1-.034.213c-.247-.055-.52-.083-.777-.132a.702.702 0 0 1 .034-.197c.263.032.503.09.776.116zm-17.414.016c.02.057.036.116.034.196-.263.04-.503.105-.778.133-.004-.073-.034-.12-.033-.197.275-.028.515-.092.777-.132zm18.208.132c.255.052.508.109.778.148-.004.072-.034.119-.034.197-.28-.021-.495-.11-.778-.133-.018-.041.016-.15.034-.212zM22.669 16.726c.156.092.47.098.595.246.099.115.144.486.182.744.203 1.296.287 2.808.332 4.219.008.266.016.583.016.891 0 .298.06.704 0 .91-.041.147-.24.194-.363.264a56.558 56.558 0 0 0-.065-2.843c-.124-.101-.444-.047-.464-.166-.044-.252.267-.09.447-.065-.045-1.272-.177-2.46-.33-3.623-.147-.074-.336-.105-.498-.164-.252.259-.636.939-1.223.81-.22-.047-.363-.342-.464-.545a3.243 3.243 0 0 1-.265-.744c-4.88-.936-11.589-1.016-16.502-.05-.153.655-.43 2.053-1.34 1.52a2.014 2.014 0 0 1-.81-.991 8.31 8.31 0 0 1-.547.133c-.192 1.084-.288 2.268-.346 3.489.166.01.416-.122.595-.1.004.066.028.114.033.18-.166.106-.437.105-.645.166a45.286 45.286 0 0 0-.066 2.976c-.08.022-.273-.122-.347-.213.064-2.301.179-4.553.363-6.732.28-.087.568-.17.844-.264-.04-.383-.117-.827.05-1.09.14-.224.531-.352.81-.432.99-.28 1.979-.05 2.63.413.14.102.247.239.396.299.025-.09-.094-.15-.149-.199-.567-.511-1.498-.958-2.612-.761-.348-1.09-.79-2.142-.794-3.538-.005-1.553.562-2.899 1.205-3.953.66-1.078 1.541-1.954 2.498-2.645a11.504 11.504 0 0 1 8.087-2.051c3.01.369 5.008 1.79 6.45 3.853.69.99 1.248 2.174 1.62 3.524.374 1.352.378 3.098-.05 4.53-1.383-.283-2.637.15-3.125 1.026-.004.015-.016.017-.016.033.498-.678 1.736-1.168 2.976-.86.328.082.746.2.908.43.224.317.122.989-.016 1.373zM16.22 9.382c.055.383.227.783.445.944.376.27.602.001.63-.38.035-.504-.174-1.1-.431-1.324-.105-.09-.299-.145-.412-.115-.256.065-.283.528-.232.875zm-8.649 1.092c-.033.556.16 1.277.529 1.472.43.227.633-.095.661-.495.045-.626-.273-1.714-.86-1.605-.25.047-.313.339-.33.628zm6.83 2.579c-.266.06-.633-.058-.926-.117a22.333 22.333 0 0 0-.91-.164c-.567-.088-1.344-.211-1.9.1-.198.11-.444.351-.465.662-.027.46.342.791.612.993.323.237.663.399 1.092.527.917.278 2.293.353 3.075.017.735-.316 1.706-1.062 1.72-2.05.01-.59-.272-1.119-.859-1.042-.65.085-.882.951-1.44 1.074z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://tapas.io/site/about#media\",hex:\"FFCE00\"},TeamViewer:{title:\"TeamViewer\",slug:\"teamviewer\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>TeamViewer icon</title><path d=\"M22.597 24H1.406A1.41 1.41 0 0 1 0 22.594V1.406A1.41 1.41 0 0 1 1.406 0h21.191a1.41 1.41 0 0 1 1.406 1.406v21.188A1.41 1.41 0 0 1 22.597 24zM11.911 2.109c-5.405.047-9.763 4.482-9.802 9.89-.04 5.507 4.381 9.885 9.89 9.89 5.415.003 9.796-4.5 9.89-9.89.097-5.572-4.406-9.939-9.978-9.89zM9.65 8.633l-.889 2.159H15.3l-.889-2.159 6.642 3.365-6.642 3.365.889-2.159H8.761l.882 2.159-6.659-3.365z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.teamviewer.com/resources/images/logos/teamviewer-logo-big.svg\",hex:\"0E8EE9\"},TED:{title:\"TED\",slug:\"ted\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>TED icon</title><path d=\"M2.431 9.886H0V7.665h7.53v2.221H5.1v6.45H2.431v-6.45zm5.514-2.221h7.31v2.221h-4.638v1.083h4.638v2.063h-4.638v1.08h4.638v2.225h-7.31V7.665zm10.43 6.451h1.046c1.664 0 1.907-1.352 1.907-2.166 0-.545-.179-2.063-2.115-2.063h-.854v4.23l.016-.001zm-2.67-6.451h4.384C22.98 7.665 24 9.8 24 11.985c0 2.66-1.409 4.351-4.434 4.351h-3.861V7.663v.002z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.ted.com/participate/organize-a-local-tedx-event/tedx-organizer-guide/branding-promotions/logo-and-design/your-tedx-logo\",hex:\"E62B1E\"},Teespring:{title:\"Teespring\",slug:\"teespring\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Teespring icon</title><path d=\"M23.86.952c.029 0 .056.004.07.011.015.009.023.027.023.061L22.69 7.176v.029h-.059c-.009 0-.045 0-.104-.016h-.044c-.082-.014-.15-.028-.215-.044-.063-.015-.134-.015-.209-.015-.547-.09-1.085-.164-1.613-.225-.533-.06-1.063-.104-1.594-.135l-.374 7.861-.069-.12c0-.016-.016-.016-.016-.03l-.015-.016c-.016 0-.029 0-.044-.014-.016-.016-.016-.03-.016-.045-.03-.016-.06-.031-.074-.061-.016-.015-.046-.045-.075-.061-.09-.074-.18-.148-.284-.223-.119-.075-.224-.15-.329-.21l-.179-.089-.164-.09c-.016 0-.03 0-.045-.016l-.015-.029.344-8.203h.118c.12 0 .255 0 .39.014.134.016.283.016.418.016l.822.045c.269.016.537.045.806.075l.419.044.404.045h.091c.035 0 .09.016.148.029.076.016.165.03.254.03.091.016.165.016.21.046l.747-3.691c-.015 0-.036 0-.066-.015l-.12-.046c-.522-.104-1.061-.193-1.6-.283-.537-.074-1.079-.135-1.628-.179-.418-.046-.848-.075-1.285-.09-.426-.015-.866-.03-1.3-.03h-.792c0 .03 0 .061-.015.09l-.045.148-.043.14c-.016.089-.045.194-.086.284-.041.104-.074.193-.104.283-.097.18-.194.344-.296.493-.102.165-.206.313-.314.478-.25.3-.531.554-.844.777-.306.225-.643.404-1.001.538-.245.09-.499.165-.762.21-.254.045-.513.074-.776.074-.141 0-.284 0-.434-.016-.15-.014-.293-.029-.434-.059-.404-.074-.793-.209-1.158-.403-.366-.194-.698-.434-.992-.717-.165-.135-.299-.284-.419-.434-.11-.149-.224-.314-.333-.493l-.714.254-.718.269c-.485.164-.962.359-1.43.568-.463.209-.926.434-1.377.672l-.688.374c-.227.134-.456.254-.69.374v.014c0 .016-.01.016-.026.016l-.088.044-.037.029L3.263 8.85l.198-.105c.06-.03.134-.075.211-.105.486-.254.979-.478 1.48-.702.496-.209 1-.418 1.494-.612h.044l2.052 8.231c.329-.142.636-.263.924-.363.294-.102.567-.191.837-.269.514-.141 1.046-.247 1.591-.317.546-.064 1.092-.104 1.639-.104.283 0 .567.016.852.04.27.029.523.059.762.104.284.061.553.15.807.24.239.104.463.208.657.357.225.15.419.314.583.509.149.194.284.403.374.628.089.238.135.478.149.747 0 .269-.03.522-.09.762-.03.134-.074.254-.12.358-.06.12-.119.238-.193.344 0 .015 0 .03-.015.03-.016 0-.016.015-.016.029l-.045.045c-.015.015-.015.03-.015.045s0 .029.015.044l.03.062v.029l.015.029.09.195c.015.059.029.134.029.192.061.254.075.51.045.777-.03.285-.09.554-.179.808-.165.434-.419.807-.763 1.149-.357.345-.807.644-1.344.912-.42.225-.883.404-1.375.553-.508.149-1.061.283-1.674.389-.15.03-.284.06-.418.076l-.389.015-.253.028-.105-1.418v-.016h.045l.03-.015h.149l.06-.046h.18c.06 0 .104-.015.149-.015.283-.045.553-.09.807-.148.27-.062.523-.12.792-.195.269-.074.522-.149.762-.239.239-.073.464-.179.688-.283.254-.135.464-.269.643-.418.18-.149.329-.3.448-.449.075-.09.149-.193.195-.298.044-.104.074-.21.088-.329v-.225l-.119.09c-.015.015-.045.029-.074.044l-.104.047c-.21.134-.434.237-.673.343-.238.104-.493.209-.762.299-.254.09-.508.179-.777.239-.27.073-.538.135-.792.179-.284.045-.554.09-.821.119-.27.031-.538.061-.807.076h-.15c-.254 0-.493 0-.701-.03-.225-.015-.42-.061-.613-.104-.283-.075-.523-.181-.732-.314-.209-.135-.358-.298-.448-.508-.104-.18-.164-.389-.149-.628 0-.225.06-.448.165-.656.104-.195.254-.374.433-.539.18-.164.403-.313.657-.448.21-.104.434-.209.688-.284.238-.074.508-.164.791-.239.225-.059.479-.119.747-.164.27-.044.554-.074.867-.09.104-.015.224-.029.343-.029.121-.015.24-.015.375-.015h.447l.449.044c.134.016.268.03.402.061.135.029.254.045.374.074.075.015.149.045.209.061l.165.059h.014c.016 0 .031.016.031.016l.015.016.044.029-.029.029c-.135.314-.373.568-.747.747-.374.195-.628.314-.792.358h-.014c-.015-.015-.029-.029-.035-.029h-.434c-.138 0-.273 0-.406.015-.135.015-.264.015-.389.029-.279.03-.553.076-.818.12-.268.046-.516.119-.746.195-.145.044-.279.089-.404.148-.124.045-.238.091-.35.149-.063.03-.119.061-.175.09-.054.029-.104.06-.149.091-.029.029-.074.059-.119.089s-.086.074-.119.12c.014 0 .039 0 .06.014l.134.031v.029c.061.015.12.029.18.029.064 0 .135.015.209.015.064.016.127.021.19.021h.603c.254 0 .514-.015.785-.06.27-.041.55-.074.831-.13.284-.061.544-.126.792-.209.246-.076.486-.165.722-.254.134-.045.254-.105.358-.15.119-.06.225-.119.344-.18l.283-.163c.105-.062.225-.135.33-.209.164-.14.313-.314.463-.509.164-.194.239-.418.239-.663 0-.127-.016-.239-.06-.344-.03-.105-.09-.194-.18-.27-.074-.074-.164-.149-.254-.209s-.194-.119-.329-.164c-.254-.09-.523-.164-.808-.194-.268-.039-.508-.06-.731-.06-.075-.016-.149-.016-.239-.016h-.225c-.47 0-.938.035-1.405.105-.468.074-.927.164-1.38.299-.254.06-.5.134-.75.224-.254.104-.516.194-.796.313-.218.09-.444.18-.679.299l-.747.389-.045.03-2.065-8.561-.09.044-.094.045c-.502.223-.993.448-1.476.702-.488.254-.963.508-1.43.777l-.049.029L.046 4.828c0-.016.007-.022.024-.029l.115-.083c.031-.015.063-.036.096-.06.029-.022.053-.041.07-.061.014 0 .026 0 .033-.008h.012c.109-.061.225-.12.34-.194l.364-.224c.216-.119.44-.254.664-.374.24-.119.449-.254.674-.373.462-.238.925-.463 1.388-.672.479-.225.957-.434 1.42-.613.508-.194 1.001-.373 1.494-.537.493-.18 1.001-.344 1.523-.479l.046-.031v.046c.075.313.18.598.344.882.164.268.359.507.582.732.284.238.598.434.956.582.359.135.732.209 1.105.209.046 0 .09-.014.135-.014.037-.016.08-.016.126-.016.374-.03.739-.135 1.091-.314.35-.18.658-.402.922-.688.299-.328.523-.701.643-1.12.135-.418.18-.866.104-1.315l.045-.015 1.016-.044C15.723 0 16.051 0 16.395 0h.643c.553.016 1.091.045 1.629.074.537.031 1.077.09 1.613.15.522.06 1.03.135 1.538.224.51.09 1.003.194 1.511.329l.045.015.089.03.18.045c.06.015.12.029.164.059h.016c.015 0 .03.016.045.016l.029.015-.037-.005z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://teespring.com\",hex:\"39ACE6\"},Telegram:{title:\"Telegram\",slug:\"telegram\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Telegram icon</title><path d=\"M23.91 3.79L20.3 20.84c-.25 1.21-.98 1.5-2 .94l-5.5-4.07-2.66 2.57c-.3.3-.55.56-1.1.56-.72 0-.6-.27-.84-.95L6.3 13.7l-5.45-1.7c-1.18-.35-1.19-1.16.26-1.75l21.26-8.2c.97-.43 1.9.24 1.53 1.73z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://commons.wikimedia.org/wiki/File:Telegram_alternative_logo.svg\",hex:\"2CA5E0\"},\"Tencent QQ\":{title:\"Tencent QQ\",slug:\"tencentqq\",svg:'<svg xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" viewBox=\"0 0 24 24\"><title>Tencent QQ icon</title><path d=\"M21.395 15.035a39.548 39.548 0 0 0-.803-2.264l-1.079-2.695c.001-.032.014-.562.014-.836C19.526 4.632 17.351 0 12 0S4.474 4.632 4.474 9.241c0 .274.013.804.014.836l-1.08 2.695a38.97 38.97 0 0 0-.802 2.264c-1.021 3.283-.69 4.643-.438 4.673.54.065 2.103-2.472 2.103-2.472 0 1.469.756 3.387 2.394 4.771-.612.188-1.363.479-1.845.835-.434.32-.379.646-.301.778.343.578 5.883.369 7.482.189 1.6.18 7.14.389 7.483-.189.078-.132.132-.458-.301-.778-.483-.356-1.233-.646-1.846-.836 1.637-1.384 2.393-3.302 2.393-4.771 0 0 1.563 2.537 2.103 2.472.251-.03.581-1.39-.438-4.673zM12.662 4.846c.039-1.052.659-1.878 1.385-1.846s1.281.912 1.242 1.964c-.039 1.051-.659 1.878-1.385 1.846s-1.282-.912-1.242-1.964zM9.954 3c.725-.033 1.345.794 1.384 1.846.04 1.052-.517 1.931-1.242 1.963-.726.033-1.346-.794-1.385-1.845C8.672 3.912 9.228 3.033 9.954 3zM7.421 8.294c.194-.43 2.147-.908 4.566-.908h.026c2.418 0 4.372.479 4.566.908a.14.14 0 0 1 .014.061c0 .031-.01.059-.026.083-.163.238-2.333 1.416-4.553 1.416h-.026c-2.221 0-4.39-1.178-4.553-1.416a.136.136 0 0 1-.014-.144zm10.422 8.622c-.22 3.676-2.403 5.987-5.774 6.021h-.137c-3.37-.033-5.554-2.345-5.773-6.021-.081-1.35.001-2.496.147-3.43.318.063.638.122.958.176v3.506s1.658.334 3.318.103v-3.225c.488.027.96.04 1.406.034h.025c1.678.021 3.714-.204 5.683-.594.146.934.227 2.08.147 3.43zM10.48 5.804c.313-.041.542-.409.508-.825-.033-.415-.314-.72-.629-.679-.313.04-.541.409-.508.824.034.417.315.72.629.68zM14.479 5.156c.078.037.221.042.289-.146.035-.095.025-.165-.009-.214-.023-.033-.133-.118-.371-.176-.904-.22-1.341.384-1.405.499-.04.072-.012.176.056.227.067.051.139.037.179-.006.58-.628 1.21-.208 1.261-.184z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://en.wikipedia.org/wiki/File:Tencent_QQ.svg#/media/File:Tencent_QQ.svg\",hex:\"EB1923\"},\"Tencent Weibo\":{title:\"Tencent Weibo\",slug:\"tencentweibo\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Tencent Weibo icon</title><path d=\"M4.252 23.936a.97.97 0 0 1-.474-.466c-.08-.167-.086-.222-.086-.653 0-.93.15-2.428.362-3.587.698-3.827 2.373-7.127 4.915-9.671l.574-.58-.074-.293c-.14-.561-.079-1.306.149-1.826.25-.564.784-1.142 1.3-1.416.134-.071.25-.127.253-.123.008 0 .066-.021.137-.049.07-.03.153-.061.189-.068.034-.006.095-.023.14-.034a2.93 2.93 0 0 1 1.341 0c.038.007.11.031.165.052.05.02.091.027.091.02 0-.01.172.072.375.177.61.315 1.03.75 1.317 1.362.222.465.273.704.271 1.248-.004.398-.017.506-.095.764-.182.605-.45 1.004-.965 1.456-.117.1-.25.202-.295.23a7.209 7.209 0 0 1-.54.268c-.011.005-.04.019-.068.03-.027.013-.091.026-.144.036a.562.562 0 0 0-.127.035c-.014.01-.119.026-.23.038-.111.01-.255.023-.32.033-.148.021-.609-.031-.872-.096a3.027 3.027 0 0 1-.623-.262l-.26-.137-.11.08c-.146.114-.835.85-1.186 1.27-2.335 2.805-3.652 6.45-3.827 10.62-.027.628-.052.913-.088 1.023-.072.193-.28.419-.472.512a.993.993 0 0 1-.723.007zm7.853-7.88a1.684 1.684 0 0 0-.307-.038 5.104 5.104 0 0 1-.839-.105c-.038-.007-.126-.021-.2-.035a.753.753 0 0 1-.166-.037.566.566 0 0 0-.122-.034 1.821 1.821 0 0 1-.23-.069.535.535 0 0 0-.147-.048 2.58 2.58 0 0 1-.28-.086 1.747 1.747 0 0 0-.28-.082c-.025.017-.34-.208-.418-.3-.212-.253-.29-.643-.182-.903.148-.343.504-.6.849-.609.116-.003.23.01.256.034.028.02.05.031.05.017 0-.013.036.004.083.035s.086.044.086.031c0-.014.022-.012.045.007.044.037.335.136.462.163.04.007.089.022.106.031s.08.029.143.037c.065.006.246.042.407.073.315.058 1.33.089 1.54.044.064-.014.197-.035.289-.044.096-.007.195-.024.223-.035.029-.01.1-.024.154-.034.14-.024.287-.057.393-.095.027-.011.12-.038.203-.063.084-.02.191-.057.238-.077.049-.019.11-.038.139-.045.023-.005.23-.1.46-.213a6.243 6.243 0 0 0 2.29-1.92c.275-.394.699-1.232.843-1.677.721-2.254.147-4.733-1.478-6.372a6.522 6.522 0 0 0-2.328-1.457 4.057 4.057 0 0 0-.412-.123 3.08 3.08 0 0 1-.246-.057 3.39 3.39 0 0 0-.188-.048 3.985 3.985 0 0 0-.479-.066 2.042 2.042 0 0 1-.273-.037c-.055-.02-.855-.013-1.06.007-.243.02-.396.044-.564.077a3.96 3.96 0 0 1-.257.052l-.171.038-.137.034a.608.608 0 0 0-.1.032.096.096 0 0 0-.057.027c-.015.016-.059.027-.099.027a.191.191 0 0 0-.114.041c-.023.024-.04.028-.04.013 0-.017-.024-.01-.05.015-.03.023-.052.03-.052.02 0-.014-.036-.005-.076.02-.045.02-.093.045-.113.048-.071.014-.729.348-.93.48-.462.29-.627.423-1.054.85-.533.53-.818.924-1.145 1.575a6.276 6.276 0 0 0-.581 3.931c.06.359.143.65.304 1.088.061.163.068.23.044.367-.098.55-.707.957-1.152.772-.065-.026-.12-.045-.12-.033 0 .037-.287-.2-.376-.312a1.87 1.87 0 0 1-.205-.42c-.469-1.301-.55-2.946-.216-4.368a8.318 8.318 0 0 1 1.587-3.222c.315-.39.991-1.053 1.358-1.337.274-.21.899-.622.944-.622.007 0 .13-.069.273-.155a2.15 2.15 0 0 1 .26-.136c0 .01.065-.018.147-.058.079-.042.16-.08.178-.082.02-.004.096-.035.171-.065.075-.036.136-.055.14-.048 0 .005.027-.007.058-.035.034-.024.06-.034.06-.02 0 .015.023.008.05-.017.027-.024.05-.03.05-.018 0 .014.025.007.052-.017s.051-.03.051-.016.025.006.052-.018c.027-.023.05-.033.05-.02 0 .01.043.003.096-.018.052-.02.12-.043.156-.05.054-.015.163-.04.246-.061a.887.887 0 0 0 .101-.032c.038-.01.124-.03.189-.04.065-.01.263-.042.437-.068.237-.038.537-.05 1.215-.043.492.007.945.021.998.031.058.012.172.031.254.041.086.015.214.038.29.059.079.016.192.04.257.052a.629.629 0 0 1 .154.037.23.23 0 0 0 .082.034c.1.024.16.04.17.045.006.007.017.01.035.012l.264.09c.134.044.246.084.255.084s.05.022.086.043c.037.02.08.037.096.04.014 0 .072.028.127.056.057.03.102.046.102.037 0-.024.742.379.949.516.105.072.22.148.252.164.347.212.861.643 1.283 1.077a8.174 8.174 0 0 1 2.154 4.07c.082.414.096.555.108 1.334.015.998-.024 1.392-.215 2.14-.402 1.574-1.23 2.908-2.541 4.098a10 10 0 0 1-1.22.882c-.18.108-1.044.537-1.044.52 0-.01-.033.004-.074.028-.045.024-.086.045-.096.045-.011 0-.125.04-.258.084-.128.045-.246.086-.255.086l-.069.028a.569.569 0 0 1-.137.037c-.167.035-.24.052-.269.069a.554.554 0 0 1-.145.037 3.77 3.77 0 0 0-.273.049 5.506 5.506 0 0 1-.715.089c-.575.045-.875.057-.889.04z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://t.qq.com/\",hex:\"20B8E5\"},TensorFlow:{title:\"TensorFlow\",slug:\"tensorflow\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>TensorFlow icon</title><path d=\"M19.6 12l.1 4.7-3.1-1.8v6.7L12.5 24V0l10.2 5.9v5.3l-6.1-3.6v2.7zM1.3 5.9L11.5 0v24l-4.1-2.4v-14l-6.1 3.6z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.tensorflow.org/extras/tensorflow_brand_guidelines.pdf\",hex:\"FF6F00\"},Teradata:{title:\"Teradata\",slug:\"teradata\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Teradata icon</title><path d=\"M12 0C5 0 0 5.65 0 12.08C0 18.83 5 24 12 24S24 18.83 24 12.08C24 5.65 19 0 12 0M8.47 3.44H11.97V6.7H15.55V9.56H11.97V14.78C11.97 16.36 12.74 17.05 13.9 17.05C14.32 17.05 14.88 16.93 15.41 16.73C15.79 17.73 16.46 18.63 17.18 19.35A7 7 0 0 1 13.66 20.32C10.54 20.32 8.47 18.67 8.47 15.04V3.45Z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/Teradata/teradata.github.io/\",hex:\"F37440\"},Tesla:{title:\"Tesla\",slug:\"tesla\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Tesla icon</title><path d=\"M12 5.362l2.475-3.026s4.245.09 8.471 2.054c-1.082 1.636-3.231 2.438-3.231 2.438-.146-1.439-1.154-1.79-4.354-1.79L12 24 8.619 5.034c-3.18 0-4.188.354-4.335 1.792 0 0-2.146-.795-3.229-2.43C5.28 2.431 9.525 2.34 9.525 2.34L12 5.362l-.004.002H12v-.002zm0-3.899c3.415-.03 7.326.528 11.328 2.28.535-.968.672-1.395.672-1.395C19.625.612 15.528.015 12 0 8.472.015 4.375.61 0 2.349c0 0 .195.525.672 1.396C4.674 1.989 8.585 1.435 12 1.46v.003z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://www.teslamotors.com/en_GB/about\",hex:\"CC0000\"},Terraform:{title:\"Terraform\",slug:\"terraform\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Terraform icon</title><path d=\"M8.283 4.265l7.433 3.776v7.551l-7.433-3.776V4.265zm8.248 3.776v7.551l7.436-3.776V4.265l-7.436 3.776zM.035.051v7.551l7.433 3.776V3.827L.035.051zm8.248 20.141l7.433 3.776V16.42l-7.433-3.776v7.548z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.hashicorp.com/brand#terraform\",hex:\"623CE4\"},\"The Mighty\":{title:\"The Mighty\",slug:\"themighty\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>The Mighty icon</title><path d=\"M19.178.001h-4.432L12.05 13.988 9.309.001H4.856c.216.219.334.634.39 1.072v21.21c0 .621-.105 1.383-.425 1.717 1.014-.214 2.307-.416 3.414-.611V9.375l2.489 12.375c.07.46.135 1.084-.021 1.198.847-.129 1.694-.252 2.544-.366-.105-.16-.064-.652-.005-1.061L15.696 9.15v13.095c1.054-.123 2.366-.24 3.47-.349l.012-.008c-.324-.328-.43-1.1-.43-1.724V1.726c0-.627.105-1.396.43-1.726v.001z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://themighty.com/\",hex:\"D0072A\"},\"The Movie Database\":{title:\"The Movie Database\",slug:\"themoviedatabase\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>The Movie Database icon</title><path d=\"M19.491 21.899c2.106 0 3.531-1.424 3.531-3.531V3.531C23.022 1.425 21.598 0 19.491 0H4.509C2.403 0 .978 1.424.978 3.531V24l1.809-2.101V3.531a1.721 1.721 0 0 1 1.719-1.719h14.982c.949.002 1.718.77 1.719 1.719v14.837a1.721 1.721 0 0 1-1.719 1.719H6.92l-1.81 1.812-.011-.014zM8.787 11.466H7.09v5.698h1.697c3.793 0 3.793-5.698 0-5.698zm0 4.559h-.551v-3.419h.551c2.215 0 2.215 3.418 0 3.418zM8.456 10.389h1.139V5.83h1.418V4.699H7.037V5.83h1.419v4.559zM14.063 7.201l-1.971-2.502h-.366v5.785h1.156v-3.18l1.182 1.531 1.183-1.531-.008 3.18h1.156V4.699h-.36l-1.971 2.502zM15.983 14.315c.358-.247.51-.689.526-1.124.023-1.004-.606-1.729-1.617-1.729h-2.255v5.706h2.255a1.695 1.695 0 0 0 1.681-1.694v-.02-.008c0-.466-.231-.878-.585-1.127l-.004-.003zm-2.204-1.714h1.013c.327 0 .526.255.526.573a.533.533 0 0 1-.526.574h-1.013V12.6zm1.013 3.427h-1.013v-1.139h1.027c.309 0 .559.25.559.559v.014a.566.566 0 0 1-.566.566h-.001z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.themoviedb.org/about/logos-attribution\",hex:\"01D277\"},Tidal:{title:\"Tidal\",slug:\"tidal\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Tidal icon</title><path d=\"M12.012 3.992L8.008 7.996 4.004 3.992 0 7.996 4.004 12l4.004-4.004L12.012 12l-4.004 4.004 4.004 4.004 4.004-4.004L12.012 12l4.004-4.004-4.004-4.004zM16.042 7.996l3.979-3.979L24 7.996l-3.979 3.979z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://tidal.com\",hex:\"000000\"},\"Tik Tok\":{title:\"Tik Tok\",slug:\"tiktok\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Tik Tok icon</title><path d=\"M12.53.02C13.84 0 15.14.01 16.44 0c.08 1.53.63 3.09 1.75 4.17 1.12 1.11 2.7 1.62 4.24 1.79v4.03c-1.44-.05-2.89-.35-4.2-.97-.57-.26-1.1-.59-1.62-.93-.01 2.92.01 5.84-.02 8.75-.08 1.4-.54 2.79-1.35 3.94-1.31 1.92-3.58 3.17-5.91 3.21-1.43.08-2.86-.31-4.08-1.03-2.02-1.19-3.44-3.37-3.65-5.71-.02-.5-.03-1-.01-1.49.18-1.9 1.12-3.72 2.58-4.96 1.66-1.44 3.98-2.13 6.15-1.72.02 1.48-.04 2.96-.04 4.44-.99-.32-2.15-.23-3.02.37-.63.41-1.11 1.04-1.36 1.75-.21.51-.15 1.07-.14 1.61.24 1.64 1.82 3.02 3.5 2.87 1.12-.01 2.19-.66 2.77-1.61.19-.33.4-.67.41-1.06.1-1.79.06-3.57.07-5.36.01-4.03-.01-8.05.02-12.07z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://tiktok.com\",hex:\"000000\"},Timescale:{title:\"Timescale\",slug:\"timescale\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Timescale icon</title><path d=\"M5.537.763c-1.167.7-2.21 1.582-3.08 2.61L3.79 4.836a10.422 10.422 0 013.627-2.881zm13.028.085l-1.991 1.12a10.381 10.381 0 013.762 3.07l1.18-1.654a12.371 12.371 0 00-2.95-2.536zm-6.564.752a9.788 9.788 0 00-4.131.91l.59 1.011a8.542 8.542 0 013.541-.762c1.261 0 2.457.274 3.534.76l.59-1.012a9.81 9.81 0 00-4.124-.907zM11.4 3.535l-.55 6.626h.003l-.002.04c.003.111.013.216.033.318.01.112.043.227.097.342.114.289.298.505.516.607.05.04.105.075.158.111a.98.98 0 01.033.02v.004l6.68 3.596.348-.476-6.058-4.6c-.007 0-.01-.005-.014-.008L12 3.535zm1.423.052c.19.234.361.523.502.855 3.155.604 5.54 3.325 5.54 6.596 0 .877-.176 1.712-.484 2.48a3.7 3.7 0 01.52.76 7.314 7.314 0 00.754-3.24c0-3.868-2.99-7.05-6.832-7.45zm-2.284.095c-3.527.667-6.19 3.708-6.19 7.356 0 2.584 1.335 4.863 3.367 6.21a9.84 9.84 0 01.295-.743c-1.74-1.219-2.874-3.214-2.874-5.467 0-3.054 2.082-5.632 4.932-6.45.128-.351.289-.656.47-.906zm9.15 1.675l-.801.893a8.101 8.101 0 011.551 4.777c0 2.916-1.542 5.481-3.872 6.952.104.388.188.792.251 1.209 2.87-1.632 4.802-4.677 4.802-8.16a9.224 9.224 0 00-1.93-5.67zm-15.38.007a9.25 9.25 0 00-1.93 5.665c0 3.507 1.954 6.567 4.858 8.19.063-.418.144-.822.248-1.206-2.36-1.468-3.923-4.045-3.923-6.984 0-1.777.573-3.422 1.549-4.772zm9.314.043c.044.203.08.416.107.64a5.332 5.332 0 013.213 2.912l.577-.148a5.942 5.942 0 00-3.897-3.404zm-3.816.187a5.939 5.939 0 00-3.319 3.198l.58.148A5.324 5.324 0 019.73 6.257c.017-.227.04-.45.077-.663zM6.733 9.672l-.62.63.315.614 1.727.618.942-.618-.312-.923zm10.615 0l-2.048.321-.315.923.942.618 1.73-.618.315-.614zM6.1 11.869A5.824 5.824 0 008.42 15.7c.1-.17.204-.335.315-.493a5.252 5.252 0 01-2.038-3.34zm11.206 0c-.03.18-.071.355-.118.529.174.138.338.272.493.41.097-.302.174-.617.22-.94zm-15.679.217L0 14.158c.966 3.661 3.638 6.65 7.132 8.111a9.399 9.399 0 01-.05-1.031c0-.375.017-.747.05-1.111-3.024-1.563-5.166-4.544-5.505-8.041zm20.707.055c-.352 3.45-2.464 6.394-5.441 7.957.033.374.05.755.053 1.136 0 .377-.017.71-.05 1.005 3.506-1.488 6.175-4.522 7.104-8.223zm-6.544 2.617a5.31 5.31 0 01-.486.42c.11.158.218.322.318.493.265-.2.513-.42.74-.66a10.61 10.61 0 01-.572-.253zm1.502.559a6.9 6.9 0 01-1.25 1.156c.106.236.207.485.294.741a7.667 7.667 0 001.857-1.772 3.554 3.554 0 01-.9-.125zm-2.988.63l-2.303.913-2.307-.91-.587 1.435 2.448.946c-.134.46-.568.798-1.08.798-.034 0-.07-.004-.104-.007l-.5.686c.188.063.39.096.6.096.621 0 1.17-.289 1.52-.738a1.924 1.924 0 002.183.62l-.49-.67a1.122 1.122 0 01-1.26-.805l2.47-.926zm1.156 4.775c-1.09.377-2.256.58-3.476.58-1.17 0-2.29-.186-3.34-.534.231.88.59 1.654 1.05 2.262.743.134 1.509.207 2.294.207.835 0 1.65-.082 2.437-.236.453-.61.807-1.39 1.035-2.28z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.timescale.com/\",hex:\"FDB515\"},Tinder:{title:\"Tinder\",slug:\"tinder\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Tinder icon</title><path d=\"M9.317 9.451c.045.073.123.12.212.12.06 0 .116-.021.158-.057l.015-.012c.39-.325.741-.66 1.071-1.017 3.209-3.483 1.335-7.759 1.32-7.799-.09-.21-.03-.459.15-.594.195-.135.435-.12.615.033 10.875 10.114 7.995 17.818 7.785 18.337-.87 3.141-4.335 5.414-8.444 5.53-.138.008-.242.008-.363.008-4.852 0-8.977-2.989-8.977-6.807v-.06c0-5.297 4.795-10.522 5.009-10.744.136-.149.345-.195.525-.105.18.076.297.255.291.451-.043 1.036.167 1.935.631 2.7v.015l.002.001z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://www.gotinder.com/press\",hex:\"FF6B6B\"},\"T-Mobile\":{title:\"T-Mobile\",slug:\"t-mobile\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>T-Mobile icon</title><path d=\"M13.722 1.154h.58c3.74 0 5.483 1.957 6.211 7.174l1.159-.05L21.517 0H2.484l-.187 8.278 1.114.05c.193-1.956.425-3.01.927-4.064.888-1.956 2.742-3.11 5.02-3.11h.811v18.01c0 1.907-.116 2.509-.579 2.96-.386.351-1.158.502-2.047.502h-.888v1.204h10.581v-1.204h-.893c-.883 0-1.66-.151-2.041-.502-.464-.451-.58-1.054-.58-2.96V1.154M2 10.875h4.88v4.87H2zM16.932 10.875h4.88v4.87h-4.88z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.t-mobile.com/news/media-library?fulltext=logo\",hex:\"E20074\"},Todoist:{title:\"Todoist\",slug:\"todoist\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Todoist icon</title><path d=\"M21 0H3C1.35 0 0 1.35 0 3v3.858s3.854 2.24 4.098 2.38c.31.18.694.177 1.004 0 .26-.147 8.02-4.608 8.136-4.675.279-.161.58-.107.748-.01.164.097.606.348.84.48.232.134.221.502.013.622l-9.712 5.59c-.346.2-.69.204-1.048.002C3.478 10.907.998 9.463 0 8.882v2.02l4.098 2.38c.31.18.694.177 1.004 0 .26-.147 8.02-4.609 8.136-4.676.279-.16.58-.106.748-.008.164.096.606.347.84.48.232.133.221.5.013.62-.208.121-9.288 5.346-9.712 5.59-.346.2-.69.205-1.048.002C3.478 14.951.998 13.506 0 12.926v2.02l4.098 2.38c.31.18.694.177 1.004 0 .26-.147 8.02-4.609 8.136-4.676.279-.16.58-.106.748-.009.164.097.606.348.84.48.232.133.221.502.013.622l-9.712 5.59c-.346.199-.69.204-1.048.001C3.478 18.994.998 17.55 0 16.97V21c0 1.65 1.35 3 3 3h18c1.65 0 3-1.35 3-3V3c0-1.65-1.35-3-3-3z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://doist.com/press/\",hex:\"E44332\"},Toggl:{title:\"Toggl\",slug:\"toggl\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Toggl icon</title><path d=\"M12 0C5.373 0 0 5.37 0 12s5.373 12 12 12c6.63 0 12-5.37 12-12S18.63 0 12 0zm-.84 4.67h1.68v8.36h-1.68V4.67zM12 18.155c-3.24-.002-5.865-2.63-5.864-5.868 0-2.64 1.767-4.956 4.314-5.655v1.71c-1.628.64-2.698 2.21-2.695 3.96 0 2.345 1.903 4.244 4.248 4.243 2.344-.002 4.244-1.903 4.243-4.248 0-1.745-1.07-3.312-2.694-3.95V6.63c2.55.7 4.314 3.018 4.314 5.66 0 3.24-2.626 5.864-5.865 5.864z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://toggl.com/media-toolkit\",hex:\"E01B22\"},Topcoder:{title:\"Topcoder\",slug:\"topcoder\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Topcoder icon</title><path d=\"M20.514 16.517c.192-.026.376-.112.542-.21.345-.201.646-.473.936-.75.226-.214.444-.436.653-.67.12-.146.256-.296.376-.451.105-.143.21-.285.315-.436.076-.115.15-.23.212-.35.33-.598.601-1.336.361-2.016-.031-.094-.076-.185-.121-.27-.091-.154-.211-.291-.331-.413-.21-.201-.468-.36-.723-.489-.376-.188-.781-.313-1.201-.406-.603-.137-1.205-.201-1.821-.226-.842-.041-1.684-.006-2.512.076.105.109.196.225.301.338.195.226.392.467.571.723.227.3.437.631.647.962.602.992 1.054 2.075 1.383 3.173.105.33.182.662.255 1.008.031.12.048.256.077.391l.08.016zm-18.585-.151c.052-.204.105-.412.16-.616.08-.301.176-.6.266-.896.069-.217.15-.429.227-.645.09-.225.185-.45.277-.676.033-.076.061-.153.098-.23.102-.215.211-.427.322-.637.135-.242.256-.481.391-.707.18-.316.377-.602.586-.888l.016-.015c-.331-.016-.677-.016-1.008-.016-.24 0-.496.016-.736.045-.166.016-.33.031-.496.061-.121.016-.24.045-.361.075-.586.15-1.248.421-1.533 1.007-.031.076-.061.151-.091.242-.032.12-.047.27-.047.406 0 .211.045.421.089.632.091.315.242.617.393.902.285.496.646.962 1.022 1.398l.481.525-.056.033zm18.151-.045c-.492-2.302-1.546-4.532-3.194-6.236l-.083-.086-.041-.04c-.2.014-.399.045-.603.074-2.154.332-4.26.918-6.285 1.715.168.045.336.09.507.15.706.226 1.413.466 2.108.723 2.421.902 4.755 2.029 6.998 3.322l.586.347.007.031zm-17.706-.139l.873-.843c.15-.143.15-.142.301-.28 1.533-1.354 3.318-2.375 5.18-3.217-.275-.076-.549-.136-.824-.195-1.053-.241-2.113-.437-3.188-.527-.084.121-.166.227-.247.346-.181.271-.354.527-.517.813-.15.24-.271.481-.392.723-.104.195-.21.391-.286.586-.029.045-.045.105-.06.15-.091.226-.195.451-.286.677-.074.181-.135.36-.195.541-.09.286-.18.557-.255.843-.046.15-.091.301-.12.45l.016-.067zm6.914-4.587c.21-.091.417-.175.628-.255.233-.094.466-.182.7-.269 1.023-.376 2.061-.692 3.113-.947.873-.211 1.744-.376 2.633-.511l.06-.016c-.241-.226-.496-.421-.752-.617-.481-.36-1.007-.662-1.563-.902-1.295-.556-2.723-.736-4.105-.48-.753.134-1.491.39-2.167.752-1.067.571-2 1.383-2.768 2.315l-.03.016.466.044.572.076c.813.135 1.594.301 2.391.48.301.076.587.151.873.227l-.051.087z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://topcoder.com/\",hex:\"29A8E0\"},Toptal:{title:\"Toptal\",slug:\"toptal\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Toptal icon</title><path d=\"M20.227 10.038L10.188 0l-2.04 2.04 3.773 3.769-8.155 8.153L13.807 24l2.039-2.039-3.772-3.771 8.16-8.152h-.007zM8.301 14.269l6.066-6.063 1.223 1.223-6.064 6.113-1.223-1.26-.002-.013z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.toptal.com/branding\",hex:\"3863A0\"},Tor:{title:\"Tor\",slug:\"tor\",svg:'<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" role=\"img\"><title>Tor icon</title><path d=\"M17.578 12.201c-.76-.692-1.721-1.251-2.704-1.81-.446-.246-1.81-1.318-1.34-2.838l-.851-.358c1.342-2.078 3.085-4.134 5.229-6.056-1.721.581-3.24 1.476-4.379 3.062.67-1.407 1.765-2.793 2.972-4.201-1.654 1.185-3.084 2.525-3.979 4.313l.627-2.503c-.894 1.608-1.52 3.24-1.766 4.871l-1.317-.535-.223.178c1.162 2.078.559 3.174-.022 3.553-1.162.783-2.838 1.788-3.688 2.659-1.609 1.654-2.078 3.218-1.921 5.296.157 2.66 2.101 4.873 4.67 5.744 1.14.38 2.19.424 3.352.424 1.877 0 3.799-.491 5.207-1.676a6.551 6.551 0 0 0 2.369-5.027 6.875 6.875 0 0 0-2.236-5.096zm-3.553 8.872c-.09.402-.38.894-.737 1.341.134-.246.246-.492.313-.76.559-1.989.805-2.904.537-5.095-.045-.224-.135-.938-.471-1.721-.468-1.185-1.184-2.303-1.272-2.548-.157-.38-.38-1.989-.403-3.084.023.938.089 2.659.335 3.329.067.225.715 1.229 1.185 2.459.312.849.38 1.632.446 1.854.224 1.007-.045 2.705-.401 4.313-.111.581-.426 1.252-.828 1.766.225-.313.402-.715.537-1.185.269-.938.38-2.145.356-2.905-.021-.446-.222-1.407-.558-2.278-.201-.47-.492-.961-.692-1.297-.224-.335-.224-1.072-.313-1.921.021.916-.068 1.385.156 2.033.134.379.625.916.759 1.43.201.693.402 1.453.381 1.922 0 .536-.022 1.52-.269 2.593-.157.804-.515 1.497-1.095 1.943.246-.312.38-.625.447-.938.089-.469.111-.916.156-1.475a5.96 5.96 0 0 0-.111-1.721c-.179-.805-.469-1.608-.604-2.168.022.626.269 1.408.381 2.235.089.604.044 1.206.021 1.742-.021.627-.223 1.722-.492 2.258-.268-.112-.357-.269-.537-.491-.223-.291-.357-.604-.491-.962a5.043 5.043 0 0 1-.291-.915 3.071 3.071 0 0 1 .559-2.213c.469-.671.559-.716.715-1.497-.223.692-.379.759-.871 1.341-.559.647-.648 1.586-.648 2.346 0 .313.134.671.246 1.007.134.356.268.714.447.982.134.223.313.379.469.491-.581-.156-1.184-.379-1.564-.692-.938-.805-1.765-2.167-1.877-3.375-.089-.982.804-2.413 2.078-3.128 1.073-.626 1.318-1.319 1.542-2.459-.313.983-.626 1.833-1.654 2.348-1.475.804-2.235 2.1-2.167 3.352.112 1.586.737 2.682 2.011 3.554.291.2.693.401 1.118.559-1.587-.381-1.788-.604-2.324-1.229 0-.045-.134-.135-.134-.156-.715-.805-1.609-2.19-1.922-3.464-.112-.447-.224-.916-.089-1.363.581-2.101 1.854-2.905 3.128-3.775.313-.225.626-.426.916-.649.715-.559.894-2.012 1.05-2.838-.29 1.006-.603 2.258-1.162 2.659-.29.224-.648.402-.938.604-1.318.894-2.637 1.743-3.24 3.91-.134.56-.044.962.089 1.498.335 1.317 1.229 2.748 1.989 3.597l.134.135c.335.381.76.67 1.274.871a5.945 5.945 0 0 1-1.296-.469c-2.078-1.005-3.463-3.173-3.553-4.939-.179-3.597 1.542-4.647 3.151-5.966.894-.737 2.145-1.095 2.86-2.413.134-.291.224-.916.045-1.587-.067-.224-.402-1.028-.537-1.207l1.989.872c-.044.938-.067 1.698.112 2.391.2.76 1.184 1.854 1.586 3.129.783 2.41.583 5.561.023 8.019z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/TheTorProject/tor-media/tree/master/Onion%20Icon\",hex:\"7E4798\"},Toshiba:{title:\"Toshiba\",slug:\"toshiba\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Toshiba icon</title><path d=\"M5.174 10.172c-1.065 0-1.578.187-1.65 1.148a8.92 8.92 0 00-.022.68c0 .218.004.451.021.68.073.96.586 1.148 1.65 1.148 1.065 0 1.58-.188 1.653-1.148.018-.229.022-.462.022-.68 0-.217-.005-.451-.022-.68-.073-.96-.588-1.148-1.652-1.148zm3.79 0c-.41 0-.82.04-.985.121-.322.156-.545.38-.545 1.02 0 .375.1.654.293.796.281.21.553.23 1.31.27.305.016.47.078.47.34 0 .332-.294.332-.564.332-.28 0-.366-.025-.46-.096-.084-.063-.105-.176-.106-.348h-.95c0 .487.01.884.47 1.084.41.18 1.67.18 2.048.014.328-.145.563-.337.563-.994 0-.455-.091-.735-.44-.941-.248-.147-.945-.17-1.298-.192-.258-.016-.356-.11-.356-.338 0-.297.285-.308.53-.308.202 0 .34.018.439.105.038.039.086.099.088.307h.947c0-.408-.014-.848-.455-1.051-.175-.08-.587-.121-.998-.121zm2.206.062v3.532h.996v-1.362h1.156v1.362h.996v-3.532h-.996v1.29h-1.156v-1.29h-.996zm4.023 0v3.532h1.002v-3.532h-1.002zm1.891 0v3.532h1.887c.869 0 1.162-.376 1.162-.952 0-.401-.092-.755-.643-.894.444-.114.574-.379.574-.762 0-.776-.487-.924-1.181-.924h-1.799zm4.373 0l-1.068 3.532h1.037l.187-.655h1.16l.19.655H24l-1.07-3.532h-1.473zM0 10.236v.881h1.055v2.65H2.11v-2.65h1.055v-.88H0zm5.174.762c.418 0 .633.063.66.607.004.085.01.201.01.395 0 .195-.006.31-.01.395-.027.544-.242.607-.66.607-.418 0-.633-.063-.66-.607A7.674 7.674 0 014.506 12c0-.194.003-.31.008-.395.027-.544.242-.607.66-.607zm12.906.045h.69c.18 0 .293.085.293.291 0 .176-.112.285-.293.285h-.69v-.576zm4.111.064h.006l.354 1.22h-.713l.353-1.22zm-4.11 1.207h.689c.279 0 .337.124.337.323s-.11.32-.337.32h-.69v-.643z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://commons.wikimedia.org/wiki/File:Toshiba_logo.svg\",hex:\"FF0000\"},TrainerRoad:{title:\"TrainerRoad\",slug:\"trainerroad\",svg:'<svg xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" viewBox=\"0 0 24 24\"><title>TrainerRoad icon</title><path d=\"M3.489 2.392L1.281 14.558c.862-1.684 2.586-2.817 4.574-2.817h.007a5.08 5.08 0 0 1 2.894.9l-.017-.011a3.23 3.23 0 0 0 .878-1.336l.007-.023c.413-1.328-.787-5.473 3.662-5.538 2.222-.031 5.068 1.816 4.992 1.805-3.994-.614-5.263-.787-6.242 1.115-.889 1.726-.657 3.163-1.802 4.24-.979.923-3.32 1.534-4.048 1.383-.33-.069.837-.379 1.921-1.136a4.36 4.36 0 1 0 2.089 4.058l.001-.014c.251.145.489.294.711.444a5.146 5.146 0 0 1-3.087 3.967l-.034.013h9.235c-.733-1.264-3.514-5.267-9.87-6.403.783-.387 7.589-.197 13.546 5.381l3.304-18.192zm6.529 1.588c.592.019 1.176.177 1.664.294 1.338.32 2.533.674 2.372.747-.033.014-.586-.064-.816-.088a4.118 4.118 0 0 0-1.558.072l.028-.006c-2.099.503-2.857 2.962-3 3.183-.017.024-1.186-.6-1.274-1.826-.062-.894.258-1.752 1.525-2.224l.002.002a2.751 2.751 0 0 1 1.057-.154zm5.389 4.093c.651-.008 1.469.085 2.505.305a8.972 8.972 0 0 0-1.865 1.456l-.002.002c-1.07 1.098-2.061 2.566-1.691 3.379s2.652 1.826 4.3 2.92c.852.568 1.515 2.559 1.517 2.566-3.11-2.417-5.369-3.097-7.048-4.1-1.971-1.186-.712-4.058-.114-5.301.342-.704.964-1.209 2.397-1.227zM.759 17.427L0 21.608h3.904c-1.708-.717-2.93-2.284-3.143-4.157l-.002-.024z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.trainerroad.com/\",hex:\"E12726\"},Trakt:{title:\"Trakt\",slug:\"trakt\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Trakt icon</title><path d=\"M12 24C5.385 24 0 18.615 0 12S5.385 0 12 0s12 5.385 12 12-5.385 12-12 12zm0-22.789C6.05 1.211 1.211 6.05 1.211 12S6.05 22.79 12 22.79 22.79 17.95 22.79 12 17.95 1.211 12 1.211zm-7.11 17.32c1.756 1.92 4.294 3.113 7.11 3.113 1.439 0 2.801-.313 4.027-.876l-6.697-6.68-4.44 4.443zm14.288-.067c1.541-1.71 2.484-3.99 2.484-6.466 0-3.885-2.287-7.215-5.568-8.76l-6.089 6.076 9.164 9.15h.009zm-9.877-8.429L4.227 15.09l-.679-.68 5.337-5.336 6.23-6.225c-.978-.328-2.02-.509-3.115-.509C6.663 2.337 2.337 6.663 2.337 12c0 2.172.713 4.178 1.939 5.801l5.056-5.055.359.329 7.245 7.245c.15-.082.285-.164.42-.266L9.33 12.05l-4.854 4.855-.679-.679 5.535-5.535.359.331 8.46 8.437c.135-.1.255-.215.375-.316L9.39 10.027l-.083.015-.006-.007zm3.047 1.028l-.678-.676 4.788-4.79.679.689-4.789 4.785v-.008zm4.542-6.578l-5.52 5.52-.68-.679 5.521-5.52.679.684v-.005z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://trakt.tv\",hex:\"ED1C24\"},\"Travis CI\":{title:\"Travis CI\",slug:\"travisci\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Travis CI icon</title><path d=\"M20.07 9.29v-.02c.01-.04.14-.95-.08-2.24a.16.16 0 0 0-.11-.13l-.35-.1c-.08-2.71-1.2-4-1.23-4.03 1 1.6.99 3.51.97 3.96L17.1 6.1h-.04a.2.2 0 0 0-.04 0h-.03l-.01.01-.03.02-.01.01-.15.14a8.99 8.99 0 0 0-1-4.47c.03.06.8 2.33.53 4.87a3.7 3.7 0 0 1-.26.2.17.17 0 0 0-.07.13 3.9 3.9 0 0 1-.4 1.55 39.29 39.29 0 0 0-5.35 0l-.01-.04a3.88 3.88 0 0 1-.38-1.5c0-.06-.02-.1-.07-.14a3.92 3.92 0 0 1-.27-.2c-.26-2.54.51-4.81.53-4.87a9 9 0 0 0-.99 4.47l-.15-.14-.01-.01-.03-.02-.03-.01h-.04-.04l-2.18.62a7.45 7.45 0 0 1 .97-3.96c-.03.04-1.15 1.32-1.23 4.03l-.35.1a.16.16 0 0 0-.11.13c-.22 1.3-.1 2.2-.09 2.24v.02l-.08.02a5 5 0 0 0-.96.4c.16-.06.32-.1.5-.15a16.12 16.12 0 0 1 2.55-.38l1.02-.08c1.38-.08 2.75-.1 4.13-.1a67.74 67.74 0 0 1 5.16.18 21.88 21.88 0 0 1 2.55.38c.17.04.33.09.5.15a4.9 4.9 0 0 0-.97-.4l-.09-.02zM8.76 8.7a22.58 22.58 0 0 0-2.68.5c-.02-.15-.1-.94.07-2.02l2.46-.7a7.31 7.31 0 0 0 .22 2.22h-.07zm.37-.04v-.08a7 7 0 0 1-.2-1.96c.16.15.38.34.6.5.02.22.08.87.37 1.47l-.77.07zm7.58-.08v.08a29.2 29.2 0 0 0-.77-.07c.3-.6.35-1.25.37-1.48.22-.15.44-.34.6-.5.02.44 0 1.23-.2 1.97zm3.05.62a16.19 16.19 0 0 0-2.67-.5H17l.02-.03a7.2 7.2 0 0 0 .2-2.19l2.46.7a8.1 8.1 0 0 1 .07 2.02zm-2.96 6.04c.7-.02 1.07-.23 1.42-.06 0-.02-.11-.35-.6-.29a1 1 0 0 0 .07-.5c-.07-.81-.53-1.45-1.05-1.44-.51.02-.84.7-.82 1.5.03.81.47.8.98.79zm-.2-1.77a.26.26 0 1 1 0 .53.26.26 0 0 1 0-.53zm-7.84 1.91h.32c.52 0 .94.04.94-.77-.01-.8-.37-1.46-.88-1.46-.52 0-1.02.67-.99 1.48.01.21.04.36.1.47-.46.12-.58.4-.59.41.28-.15.6-.13 1.1-.13zm.45-1.72a.26.26 0 0 1 .01.53.26.26 0 1 1-.01-.53zm14.73-5.2a4.57 4.57 0 0 0-.04-.26l-.06-.27-.02-.06-.05-.04a4.68 4.68 0 0 0-.87-.53c-.25-.11-.5-.22-.76-.31a10.8 10.8 0 0 0-3.56-4.96 9.3 9.3 0 0 0-11.33 0A10.83 10.83 0 0 0 3.7 7l-.75.31c-.3.15-.6.31-.88.53l-.05.04-.02.06a3.02 3.02 0 0 0-.1.53 6.1 6.1 0 0 0-.02 1.57 6.71 6.71 0 0 0 .47 1.78l.06.13.04.06.04.07.03.05.06.03a4 4 0 0 0 .16.08l.16.07.08.04c-.7.65-1.47 1.5-2.14 2.55L0 16.21l1.18-1.03c.02-.02 1-.87 2.66-1.84l.02.19c-.1.05-.63.32-.78.45-.26.21-.27.54-.2 1.16.03.31.15.92.31 1.48.28.97.48 1.14.65 1.18.08.02.19.03.3.03.32 0 .72-.07.99-.14.3.96.75 1.83 1.28 2.6-.03 0-.05 0-.08.02l-1.82-.85-.8-.35.47.73c.04.05.84 1.3 1.5 2.15a3.6 3.6 0 0 0 3.05 1.6c.2 0 .4 0 .6-.03l1.1-.13a7.46 7.46 0 0 0 6.6-.67c.66-.15 1.4-.33 1.76-.43l.2-.05c.51-.12 1.36-.32 1.81-1.22l1.2-2.33.36-.65-.68.3c-.04.01-.9.39-1.34.62-.02 0-.03.02-.05.03.36-.74.54-1.33.6-1.56.26.06.63.05.9.05.13 0 .27-.02.36-.04.17-.05.31-.17.57-1.16.15-.58.26-1.21.28-1.53.06-.64.04-.97-.21-1.19-.13-.1-.5-.3-.7-.4l.01-.07.15.03.18-.65a7.02 7.02 0 0 1 .51-.21l.16-.07.16-.08.06-.03.03-.05.05-.07.03-.06.06-.13a4.09 4.09 0 0 0 .28-.75 6.24 6.24 0 0 0 .17-2.6zM3.68 11.27a27 27 0 0 1 .85-.17c-.26.17-.5.36-.75.55l-.1-.38zm5.9-.28c-.36.25-.76.57-1.15.96-.87.09-1.73.2-2.59.34 1.1-.51 2.37-.98 3.74-1.3zm-1.61 1.46c-.13.15-.24.3-.36.47l-.68.97 1-.66s.64-.43 1.67-.93a46 46 0 0 1 4.26-.12c-.2.16-.41.32-.63.45l-.73.44c-.46.06-.86.17-.88.18a.1.1 0 0 0-.04.01.17.17 0 0 0-.07.1l-.75 2.45-3.98.89-1.26-.88-.36-2.96c.71-.13 1.66-.28 2.8-.4zm5.4.6c.07-.01 1.45-.18 3.08-.74 1.82.14 3.3.36 4.31.54l-.36 2.52-1.26.88-3.98-.45-.74-2.44a.16.16 0 0 0-.11-.11c-.03-.01-.52-.15-1.04-.2h.1zm1.92-2.34c-.23.3-.55.67-.94 1.03a46.5 46.5 0 0 0-3.59.04 17.64 17.64 0 0 1 4.65-1.23l-.12.16zM3.97 17.36c-.2-.2-.56-1.55-.64-2.27-.06-.58-.02-.71.04-.76.07-.06.33-.2.55-.33l.3 2.46c0 .04.03.09.07.11l.62.44.08.25c-.26.07-.78.15-1.02.1zm10.04 4.66l-.38.05h-.27l.23-.51.43.46zm-.71 1.5a5.95 5.95 0 0 1-1.98-.22l.14-.02c.06 0 1.23-.16 1.76-.94h.18l.25-.01c.2-.02.39-.05.58-.09l.06.06c.4.4.9.62 1.43.66-.77.31-1.6.5-2.42.55zm7.29-6.38c-.23.75-.5 1.4-.81 2h-.22c-.24 0-.48-.02-.75-.04l-1.43-.15-1.46-1.16-.06-.05a.6.6 0 0 0-.45-.18c-.2 0-.51.08-1.26.3.39-.29.4-.66.4-.66s-.56.51-1.44.62c-.89.12-1.58-.42-1.58-.42.03.09.07.3.27.48a6.6 6.6 0 0 0-1.05-.04c-.54.03-1.3.86-1.85 1.69l-2.04.62c-.9-1.23-1.34-2.5-1.38-2.63l-.05-.15.23.16.56.4.2.13c.02.02.05.03.09.03h.04l5.2-1.17c.07 0 .11-.05.13-.1l.74-2.46a2.45 2.45 0 0 1 .68 0l.76 2.53c.02.06.08.1.15.11l.35.04 4.89.56c.04 0 .08 0 .12-.03l.49-.34.45-.32.17-.12-.09.35zm-1.16.12l-5.08-.58-.76-2.51a.17.17 0 0 0-.13-.12 3.34 3.34 0 0 0-.5-.05c-.14 0-.3.02-.5.05a.17.17 0 0 0-.12.12l-.75 2.45-5.04 1.12-2-1.4-.4-3.18.26-.15.42-.08.37 3c0 .05.03.1.07.12l1.38.96c.02.02.06.03.09.03h.04l4.15-.92.04-.02a.16.16 0 0 0 .08-.1l.75-2.46c.2-.05.7-.17 1.16-.17.45 0 .96.12 1.17.17l.74 2.46c.02.07.08.11.14.12l4.15.47c.04 0 .08 0 .12-.03l1.37-.96a.17.17 0 0 0 .07-.11l.37-2.58.69.15-.41 2.84-1.95 1.36zm3.07-3.3c.06.05.1.18.05.79a6.93 6.93 0 0 1-.57 2.25c-.21.04-.66 0-.93-.07l.1-.47.47-.33a.16.16 0 0 0 .07-.11l.34-2.34.47.28zm-.57-1.33c-.73-.16-2.33-.48-4.52-.7.72-.3 1.45-.68 2.1-1.15 1.3.18 2.26.38 2.78.5l-.36 1.35zm1.53-2.66a7.05 7.05 0 0 1-.43 1.63l-.05.1-.02.04-.07.04-.15.06-.15.07.26-.97a25.1 25.1 0 0 0-1.59-.34l.1-.02a4.3 4.3 0 0 0 .86-.32.9.9 0 0 0 .24-.19c-.96.32-2.96.17-4.73 0a48.05 48.05 0 0 0-4.87-.29c-1.64 0-3.26.12-4.88.28-1.77.19-3.76.33-4.73.01.07.08.16.14.25.19l.27.14a4.47 4.47 0 0 0 .8.23c-.87.16-1.38.3-1.44.31l.27 1.02-.02.02-.28-.13-.15-.07-.07-.04-.02-.04-.05-.1a5.3 5.3 0 0 1-.43-1.63 7.16 7.16 0 0 1 .01-1.87c.22-.18.46-.34.71-.5a16.84 16.84 0 0 1 2.21-1l.47-.16a10.27 10.27 0 0 0-1.58.38A9.47 9.47 0 0 1 12.92.55c3.8 0 7.27 2.47 8.72 6.27a12.29 12.29 0 0 0-1.57-.38 22.77 22.77 0 0 1 1.81.73c.29.13.58.28.85.44.26.14.5.3.72.49l.03.17.02.24a7.2 7.2 0 0 1-.04 1.46zm-11.6-5.55h-1.44V2.38h5.1v2.04h-1.45v-.6h-.33v2.76h.5v1.54H11.7V6.58h.5V3.82h-.33v.6z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://travis-ci.com/logo\",hex:\"3EAAAF\"},Treehouse:{title:\"Treehouse\",slug:\"treehouse\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Treehouse icon</title><path d=\"M20.537 4.118c-.806-.453-2.092.278-2.871 1.635L16.25 8.215a3.104 3.104 0 0 0 .21 3.18l.041.062c.653.94 1.535 1.808 1.823 2.118a1.613 1.613 0 0 1-.739 2.654 1.603 1.603 0 0 1-2.025-1.747c.045-.35-.067-.927-.574-1.489-.506-.563-1.54.5-1.874 1.61l-.016.061c-.334 1.094-.546 2.05-.482 2.143.037.06.072.12.105.182a1.81 1.81 0 0 1-3.196 1.701 1.806 1.806 0 0 1 .747-2.446l.121-.061c.065-.03.26-.486.423-1.032l.301-.987c.019-.047.033-.107.045-.168l.897-3.19-.957 1.96c-.112-.363-.3-.38-.709-.091-.243.183-.653.531-.85.669-.365.273-.685.788-.851 1.109a1.313 1.313 0 0 1-.41.5c-.684.564-1.687.456-2.234-.227a1.591 1.591 0 0 1 .912-2.552c.409-.092 1.777-.927 2.596-1.52.152-.106.274-.197.38-.304l2.203-1.67-1.914 1.032s-.196-.016-.426.017c-.698.075-1.428.182-1.564.35a.999.999 0 0 1-.29.272c-.637.456-1.519.32-1.989-.317A1.437 1.437 0 0 1 6.29 8.04c.259-.183.577-.274.865-.274.518.016 1.87.29 2.993.092l.288-.045c1.14-.196 2.476-1.186 3.024-2.187l1.184-2.067c.653-1.139.608-2.384-.105-2.795l-1.323-.76c-.653-.363-1.715-.363-2.354 0L2.004 4.97C1.337 5.319.805 6.23.805 6.975v9.744c0 .744.532 1.656 1.178 2.02l8.85 4.983c.652.365 1.716.365 2.354 0l8.826-4.983c.653-.368 1.184-1.276 1.184-2.02v-9.76c0-.744-.531-1.653-1.169-2.02l-1.46-.823\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://teamtreehouse.com/about\",hex:\"5FCF80\"},Trello:{title:\"Trello\",slug:\"trello\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Trello icon</title><path d=\"M21 0H3C1.343 0 0 1.343 0 3v18c0 1.656 1.343 3 3 3h18c1.656 0 3-1.344 3-3V3c0-1.657-1.344-3-3-3zM10.44 18.18c0 .795-.645 1.44-1.44 1.44H4.56c-.795 0-1.44-.646-1.44-1.44V4.56c0-.795.645-1.44 1.44-1.44H9c.795 0 1.44.645 1.44 1.44v13.62zm10.44-6c0 .794-.645 1.44-1.44 1.44H15c-.795 0-1.44-.646-1.44-1.44V4.56c0-.795.646-1.44 1.44-1.44h4.44c.795 0 1.44.645 1.44 1.44v7.62z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://trello.com/about/branding\",hex:\"0079BF\"},\"Trend Micro\":{title:\"Trend Micro\",slug:\"trendmicro\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Trend Micro icon</title><path d=\"M12 0C5.38 0 0 5.37 0 12C0 14.45 .734 16.72 2 18.62C1.5 17.45 1.58 15.94 2.19 14.29L2.2 14.25L2.25 14.12L2.3 14L2.32 13.95C2.54 13.4 2.82 12.83 3.16 12.26C3.21 12.16 3.25 12.07 3.3 12L1.86 12L2.21 11.21C3.4 10.88 5.38 10.22 7.27 8.39L7.32 8.39H8.32L7.03 11.14L9.1 11.14L8.72 11.96L6.66 11.96S5.69 13.9 5.36 15.28C5.11 16.82 5.36 18 6.74 18.41C7.59 18.67 8.66 18.61 9.81 18.29C12.5 17.45 15.34 15.62 17.43 13.18C20.87 9.19 20.94 5.1 17.58 4.05C15.43 3.38 12.39 4.13 9.58 5.8C13.08 3.54 16.94 2.5 19.59 3.31C20.09 3.46 20.53 3.68 20.89 3.94A11.97 11.97 0 0 0 12 0M22.17 5.63C23 7.81 21.97 11.07 19.2 14.29C15.04 19.13 8.47 22.05 4.5 20.83A4.46 4.46 0 0 1 3.24 20.21A11.96 11.96 0 0 0 12 24C18.63 24 24 18.63 24 12C24 9.66 23.33 7.5 22.17 5.63Z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.trendmicro.com/\",hex:\"D71921\"},TripAdvisor:{title:\"TripAdvisor\",slug:\"tripadvisor\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>TripAdvisor icon</title><path d=\"M23.011 9.532c.281-1.207 1.175-2.416 1.175-2.416h-4.012c-2.251-1.455-4.981-2.226-8.013-2.226-3.14 0-5.978.78-8.214 2.251H.186s.885 1.186 1.17 2.386C.624 10.534.189 11.749.189 13.084c0 3.316 2.697 6.008 6.012 6.008 1.891 0 3.571-.885 4.681-2.254l1.275 1.916 1.291-1.936c.57.736 1.32 1.336 2.205 1.74 1.455.66 3.092.736 4.592.18 3.106-1.154 4.696-4.621 3.556-7.726-.209-.556-.48-1.051-.81-1.485l.02.005zm-3.171 8.072c-1.2.445-2.505.395-3.67-.143-.824-.383-1.503-.982-1.988-1.727-.201-.299-.375-.623-.503-.971-.146-.395-.22-.803-.259-1.215-.074-.832.045-1.673.405-2.453.54-1.164 1.501-2.051 2.701-2.496 2.49-.914 5.25.361 6.166 2.841.916 2.481-.36 5.245-2.835 6.163h-.017zm-9.668-1.834c-.863 1.271-2.322 2.113-3.973 2.113-2.646 0-4.801-2.156-4.801-4.797 0-2.641 2.156-4.802 4.801-4.802s4.798 2.161 4.798 4.802c0 .164-.03.314-.048.479-.081.811-.341 1.576-.777 2.221v-.016zM3.15 13.023c0 1.641 1.336 2.971 2.971 2.971s2.968-1.33 2.968-2.971c0-1.635-1.333-2.964-2.966-2.964-1.636 0-2.971 1.329-2.971 2.964H3.15zm12.048 0c0 1.641 1.329 2.971 2.968 2.971 1.636 0 2.965-1.33 2.965-2.971 0-1.635-1.329-2.964-2.965-2.964-1.635 0-2.971 1.329-2.971 2.964h.003zm-11.022 0c0-1.071.869-1.943 1.936-1.943 1.064 0 1.949.873 1.949 1.943 0 1.076-.869 1.951-1.949 1.951-1.081 0-1.951-.875-1.951-1.951h.015zm12.033 0c0-1.071.869-1.943 1.949-1.943 1.066 0 1.937.873 1.937 1.943 0 1.076-.87 1.951-1.952 1.951-1.079 0-1.949-.875-1.949-1.951h.015zM12.156 5.94c2.161 0 4.111.389 5.822 1.162-.645.018-1.275.131-1.906.36-1.515.555-2.715 1.665-3.375 3.125-.315.66-.48 1.359-.541 2.065-.225-3.076-2.76-5.515-5.881-5.578C7.986 6.34 9.967 5.94 12.112 5.94h.044z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://tripadvisor.mediaroom.com/download/TripAdvisor_Logo_Guidelines_5_15_17.pdf\",hex:\"00AF87\"},Trulia:{title:\"Trulia\",slug:\"trulia\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Trulia icon</title><path d=\"M12 0C8.19.021 5.729 2.58 5.729 6.445c0 3.201 2.088 5.94 3.277 10.1.684 2.385 1.052 5.303 1.242 7.455h3.504c.192-2.152.558-5.07 1.241-7.455 1.189-4.16 3.277-6.898 3.277-10.1C18.271 2.58 15.81.021 12 0zm.02 9.852c-1.584 0-2.869-1.286-2.869-2.869 0-1.582 1.285-2.867 2.869-2.867 1.585 0 2.869 1.283 2.869 2.867s-1.285 2.869-2.869 2.869z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://www.trulia.com\",hex:\"53B50A\"},Trustpilot:{title:\"Trustpilot\",slug:\"trustpilot\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Trustpilot icon</title><path d=\"M12,17.964l5.214-1.321l2.179,6.714L12,17.964z M24,9.286h-9.179L12,0.643L9.179,9.286 H0l7.429,5.357l-2.821,8.643l7.429-5.357l4.571-3.286L24,9.286L24,9.286L24,9.286L24,9.286z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://support.trustpilot.com/hc/en-us/articles/206289947-Trustpilot-Brand-Assets-Style-Guide\",hex:\"00B67A\"},Tumblr:{title:\"Tumblr\",slug:\"tumblr\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Tumblr icon</title><path d=\"M14.563 24c-5.093 0-7.031-3.756-7.031-6.411V9.747H5.116V6.648c3.63-1.313 4.512-4.596 4.71-6.469C9.84.051 9.941 0 9.999 0h3.517v6.114h4.801v3.633h-4.82v7.47c.016 1.001.375 2.371 2.207 2.371h.09c.631-.02 1.486-.205 1.936-.419l1.156 3.425c-.436.636-2.4 1.374-4.156 1.404h-.178l.011.002z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.tumblr.com/logo\",hex:\"36465D\"},\"Turkish Airlines\":{title:\"Turkish Airlines\",slug:\"turkishairlines\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Turkish Airlines icon</title><path d=\"M.168 13.988c.272 1.623.86 3.115 1.69 4.423 3.095-.863 5.817-2.495 6.785-6.132 1.065-4.003-.15-8.199-3.057-10.422C1.626 4.364-.657 9.077.168 13.988m23.664-3.975c1.098 6.534-3.308 12.722-9.844 13.819-1.1.185-2.19.214-3.245.103a12.023 12.023 0 0 1-8.46-4.892l19.428-5.57c.279-.08.207-.349-.024-.333l-8.145.569c1.148-1.108 2.021-2.467 1.915-4.345-.214-3.043-3.311-6.013-9.071-7.967a12.016 12.016 0 0 1 6.87-1.333c5.228.548 9.663 4.512 10.576 9.95\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.turkishairlines.com/tr-int/basin-odasi/logo-arsivi/index.html\",hex:\"C70A0C\"},Twilio:{title:\"Twilio\",slug:\"twilio\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Twilio icon</title><path d=\"M12 0C5.381-.008.008 5.352 0 11.971V12c0 6.64 5.359 12 12 12 6.64 0 12-5.36 12-12 0-6.641-5.36-12-12-12zm0 20.801c-4.846.015-8.786-3.904-8.801-8.75V12c-.014-4.846 3.904-8.786 8.75-8.801H12c4.847-.014 8.786 3.904 8.801 8.75V12c.015 4.847-3.904 8.786-8.75 8.801H12zm5.44-11.76c0 1.359-1.12 2.479-2.481 2.479-1.366-.007-2.472-1.113-2.479-2.479 0-1.361 1.12-2.481 2.479-2.481 1.361 0 2.481 1.12 2.481 2.481zm0 5.919c0 1.36-1.12 2.48-2.481 2.48-1.367-.008-2.473-1.114-2.479-2.48 0-1.359 1.12-2.479 2.479-2.479 1.361-.001 2.481 1.12 2.481 2.479zm-5.919 0c0 1.36-1.12 2.48-2.479 2.48-1.368-.007-2.475-1.113-2.481-2.48 0-1.359 1.12-2.479 2.481-2.479 1.358-.001 2.479 1.12 2.479 2.479zm0-5.919c0 1.359-1.12 2.479-2.479 2.479-1.367-.007-2.475-1.112-2.481-2.479 0-1.361 1.12-2.481 2.481-2.481 1.358 0 2.479 1.12 2.479 2.481z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.twilio.com/company/brand\",hex:\"F22F46\"},Twitch:{title:\"Twitch\",slug:\"twitch\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Twitch icon</title><path d=\"M2.089 0L.525 4.175v16.694h5.736V24h3.132l3.127-3.132h4.695l6.26-6.258V0H2.089zm2.086 2.085H21.39v11.479l-3.652 3.652H12l-3.127 3.127v-3.127H4.175V2.085zM9.915 12.522H12v-6.26H9.915v6.26zm5.735 0h2.086v-6.26H15.65v6.26z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://www.twitch.tv/p/brand-assets\",hex:\"6441A4\"},Twitter:{title:\"Twitter\",slug:\"twitter\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Twitter icon</title><path d=\"M23.954 4.569c-.885.389-1.83.654-2.825.775 1.014-.611 1.794-1.574 2.163-2.723-.951.555-2.005.959-3.127 1.184-.896-.959-2.173-1.559-3.591-1.559-2.717 0-4.92 2.203-4.92 4.917 0 .39.045.765.127 1.124C7.691 8.094 4.066 6.13 1.64 3.161c-.427.722-.666 1.561-.666 2.475 0 1.71.87 3.213 2.188 4.096-.807-.026-1.566-.248-2.228-.616v.061c0 2.385 1.693 4.374 3.946 4.827-.413.111-.849.171-1.296.171-.314 0-.615-.03-.916-.086.631 1.953 2.445 3.377 4.604 3.417-1.68 1.319-3.809 2.105-6.102 2.105-.39 0-.779-.023-1.17-.067 2.189 1.394 4.768 2.209 7.557 2.209 9.054 0 13.999-7.496 13.999-13.986 0-.209 0-.42-.015-.63.961-.689 1.8-1.56 2.46-2.548l-.047-.02z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://brand.twitter.com\",hex:\"1DA1F2\"},Twoo:{title:\"Twoo\",slug:\"twoo\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Twoo icon</title><path d=\"M10.116 16.877c.064-.054.129-.109.189-.168-1.209 1.176-2.756 1.756-4.291 1.735h-.023c-1.545-.025-3.08-.656-4.245-1.894-.733-.78-1.233-1.708-1.507-2.691v-.007c-.604-2.199-.065-4.674 1.605-6.406 2.346-2.434 6.072-2.492 8.459-.205l1.215 1.275.543.57 4.228 4.484h.018c.045.046.09.076.119.121.855.779 2.162.75 2.986-.105.869-.9.9-2.37.047-3.285-.092-.105-.197-.195-.303-.27l-.24-.166c-.824-.449-1.875-.3-2.58.42-.105.105-.195.226-.27.346-.301.465-.406 1.02-.346 1.561l-1.514-1.529-1.756-1.665c.286-.563.657-1.095 1.114-1.569.105-.105.211-.21.318-.307-.064.055-.129.111-.189.168 1.209-1.176 2.756-1.754 4.291-1.734h.023c1.545.025 3.08.656 4.246 1.895.732.779 1.232 1.707 1.506 2.693v.006c.605 2.197.066 4.676-1.605 6.405-2.346 2.434-6.072 2.494-8.459.205l-1.214-1.286-.543-.581-4.225-4.501-.004-.015c-.016 0-.016-.015-.016-.015-.045-.046-.09-.09-.121-.136-.854-.78-2.16-.765-2.984.105-.87.9-.9 2.37-.045 3.271.09.105.195.18.3.27l.24.15c.825.436 1.876.3 2.58-.436.105-.104.196-.225.271-.345.301-.465.404-1.034.345-1.575l1.515 1.561 1.758 1.771c-.285.564-.657 1.096-1.115 1.569-.104.105-.21.21-.318.306l-.003.004z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://www.twoo.com/about/press\",hex:\"FF7102\"},TypeScript:{title:\"TypeScript\",slug:\"typescript\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>TypeScript icon</title><path d=\"M0 12v12h24V0H0zm19.341-.956c.61.152 1.074.423 1.501.865.221.236.549.666.575.77.008.03-1.036.73-1.668 1.123-.023.015-.115-.084-.217-.236-.31-.45-.633-.644-1.128-.678-.728-.05-1.196.331-1.192.967a.88.88 0 0 0 .102.45c.16.331.458.53 1.39.933 1.719.74 2.454 1.227 2.911 1.92.51.773.625 2.008.278 2.926-.38.998-1.325 1.676-2.655 1.9-.411.073-1.386.062-1.828-.018-.964-.172-1.878-.648-2.442-1.273-.221-.243-.652-.88-.625-.925.011-.016.11-.077.22-.141.108-.061.511-.294.892-.515l.69-.4.145.214c.202.308.643.731.91.872.766.404 1.817.347 2.335-.118a.883.883 0 0 0 .313-.72c0-.278-.035-.4-.18-.61-.186-.266-.567-.49-1.649-.96-1.238-.533-1.771-.864-2.259-1.39a3.165 3.165 0 0 1-.659-1.2c-.091-.339-.114-1.189-.042-1.531.255-1.197 1.158-2.03 2.461-2.278.423-.08 1.406-.05 1.821.053zm-5.634 1.002l.008.983H10.59v8.876H8.38v-8.876H5.258v-.964c0-.534.011-.98.026-.99.012-.016 1.913-.024 4.217-.02l4.195.012z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/remojansen/logo.ts\",hex:\"007ACC\"},TYPO3:{title:\"TYPO3\",slug:\"typo3\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>TYPO3 icon</title><path d=\"M18.08 16.539c-.356.105-.64.144-1.012.144-3.048 0-7.524-10.652-7.524-14.197 0-1.305.31-1.74.745-2.114C6.56.808 2.082 2.177.651 3.917c-.31.436-.497 1.12-.497 1.99C.154 11.442 6.06 24 10.228 24c1.928 0 5.178-3.168 7.852-7.46M16.134 0c3.855 0 7.713.622 7.713 2.798 0 4.415-2.8 9.765-4.23 9.765-2.549 0-5.72-7.09-5.72-10.635C13.897.31 14.518 0 16.134 0\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://typo3.com/fileadmin/assets/typo3logos/typo3_bullet_01.svg\",hex:\"FF8700\"},Uber:{title:\"Uber\",slug:\"uber\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Uber icon</title><path d=\"M0 7.97V12.93C0 14.8 1.3 16.03 3 16.03C3.83 16.03 4.56 15.71 5.09 15.16V15.9H6.27V7.97H5.08V12.86C5.08 14.12 4.23 14.97 3.14 14.97C2.03 14.97 1.19 14.14 1.19 12.86V7.97H0M7.44 7.97V15.9H8.57V15.17A2.88 2.88 0 0 0 10.63 16.03A3 3 0 0 0 13.66 13A3 3 0 0 0 10.63 10A2.86 2.86 0 0 0 8.58 10.86V7.97H7.44M17.31 10C15.62 10 14.34 11.38 14.34 13C14.34 14.73 15.68 16 17.41 16C18.47 16 19.33 15.56 19.9 14.79L19.08 14.17C18.65 14.75 18.08 15 17.41 15C16.44 15 15.66 14.32 15.5 13.38H20.2V13C20.2 11.29 18.97 10 17.31 10M23.6 10.08C22.97 10.08 22.5 10.37 22.22 10.83V10.12H21.09V15.9H22.23V12.61C22.23 11.72 22.78 11.14 23.53 11.14H24V10.07H23.6M17.29 11C18.14 11 18.85 11.59 19.04 12.47H15.5C15.73 11.59 16.44 11 17.29 11M10.55 11C11.64 11 12.53 11.9 12.53 13C12.53 14.13 11.64 15 10.55 15A2 2 0 0 1 8.56 13A2 2 0 0 1 10.55 11Z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.uber.com/media/\",hex:\"000000\"},\"Uber Eats\":{title:\"Uber Eats\",slug:\"ubereats\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Uber Eats icon</title><path d=\"M0 2.75V7.84C0 9.76 1.34 11.03 3.08 11.03C3.93 11.03 4.69 10.7 5.23 10.13V10.89H6.44V2.75H5.22V7.77C5.22 9.06 4.35 9.93 3.22 9.93C2.08 9.93 1.22 9.08 1.22 7.77V2.75H0M7.35 2.75V10.89H8.5V10.14A2.96 2.96 0 0 0 10.63 11.03A3.09 3.09 0 0 0 13.74 7.93A3.09 3.09 0 0 0 10.63 4.83C9.8 4.83 9.06 5.17 8.5 5.71V2.75H7.35M17.26 4.84C15.5 4.84 14.21 6.25 14.21 7.92C14.21 9.69 15.58 11 17.36 11C18.44 11 19.33 10.54 19.92 9.75L19.07 9.12C18.63 9.71 18.05 10 17.36 10C16.36 10 15.56 9.27 15.4 8.31H20.22V7.92C20.22 6.16 18.97 4.84 17.26 4.84M23.45 4.91C22.8 4.91 22.33 5.21 22.04 5.69V4.96H20.87V10.89H22.05V7.5C22.05 6.6 22.61 6 23.37 6H23.86V4.91H23.45M17.23 5.86C18.11 5.86 18.84 6.47 19.04 7.38H15.42C15.63 6.47 16.36 5.86 17.23 5.86M10.55 5.88C11.66 5.88 12.58 6.78 12.58 7.93C12.58 9.07 11.66 10 10.55 10A2.04 2.04 0 0 1 8.5 7.93C8.5 6.78 9.42 5.88 10.55 5.88M0 12.96V21.1H5.72V19.71H1.55V17.69H5.61V16.34H1.55V14.35H5.72V12.96H0M14.56 13.38V15.09H13.4V16.45H14.56V19.65C14.56 20.46 15.13 21.1 16.16 21.1H17.8V19.74H16.66C16.31 19.74 16.09 19.58 16.09 19.26V16.45H17.8V15.09H16.09V13.38H14.56M9.32 14.94C7.53 14.94 6.12 16.34 6.12 18.1C6.12 19.85 7.53 21.25 9.32 21.25C10.04 21.25 10.71 21 11.24 20.56V21.1H12.76V15.09H11.24V15.63A2.96 2.96 0 0 0 9.32 14.94M21.04 14.94C19.45 14.94 18.34 15.59 18.34 16.86C18.34 17.73 18.95 18.3 20.27 18.58L21.72 18.92C22.29 19.03 22.44 19.18 22.44 19.42C22.44 19.79 22 20.03 21.31 20.03C20.44 20.03 19.94 19.83 19.74 19.17H18.21C18.43 20.42 19.36 21.25 21.26 21.25C23 21.25 24 20.42 24 19.26C24 18.44 23.42 17.83 22.19 17.57L20.9 17.3C20.15 17.16 19.91 17 19.91 16.74C19.91 16.38 20.27 16.16 20.94 16.16C21.66 16.16 22.19 16.36 22.34 17H23.86C23.78 15.77 22.87 14.94 21.04 14.94M9.45 16.26C10.46 16.26 11.27 17.07 11.27 18.1S10.46 19.93 9.45 19.93A1.82 1.82 0 0 1 7.62 18.1C7.62 17.07 8.45 16.26 9.45 16.26Z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://about.ubereats.com/en/logo/\",hex:\"5FB709\"},Ubisoft:{title:\"Ubisoft\",slug:\"ubisoft\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Ubisoft icon</title><path d=\"M23.561 11.989C23.301-.304 6.953-4.89.655 6.634c.282.206.661.477.943.672a11.748 11.748 0 0 0-.976 3.068 11.886 11.886 0 0 0-.184 2.071c0 6.374 5.182 11.556 11.567 11.556s11.556-5.171 11.556-11.556v-.455zM3.29 14.048c-.152 1.247-.054 1.637-.054 1.789l-.282.098c-.108-.206-.369-.932-.488-1.908-.304-3.718 2.233-7.068 6.103-7.697 3.545-.52 6.938 1.68 7.729 4.759l-.282.098c-.087-.087-.228-.336-.77-.878-4.282-4.282-11.003-2.32-11.957 3.74zm11.003 2.082a3.145 3.145 0 0 1-2.591 1.355 3.151 3.151 0 0 1-3.155-3.155 3.159 3.159 0 0 1 2.927-3.144c1.019-.043 1.973.51 2.417 1.398a2.58 2.58 0 0 1-.455 2.949c.293.206.575.401.856.596zm6.58.119c-1.669 3.783-5.106 5.767-8.77 5.713-7.035-.347-9.084-8.466-4.38-11.393l.206.206c-.076.108-.358.325-.791 1.182-.51 1.041-.672 2.081-.607 2.732.369 5.67 8.315 6.83 11.046 1.214C21.057 8.217 11.821.401 3.625 6.374l-.184-.184c2.157-3.382 6.374-4.889 10.396-3.881 6.147 1.55 9.453 7.957 7.035 13.941z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.ubisoft.com/en-US/company/overview.aspx\",hex:\"000000\"},\"uBlock Origin\":{title:\"uBlock Origin\",slug:\"ublockorigin\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>uBlock Origin icon</title><path d=\"M12 0C7.502 3 6.002 3 1.5 3c0 15.002 0 15.002 10.5 21 10.5-5.998 10.5-5.998 10.5-21-4.498 0-5.998 0-10.5-3zM5.956 7.472h1.512v4.536c0 1.322.19 1.508 1.512 1.508 1.323 0 1.512-.19 1.512-1.512V7.472H12v.767a3.75 3.75 0 012.268-.767 3.79 3.79 0 013.776 3.78 3.79 3.79 0 01-3.78 3.775 3.765 3.764 0 01-2.684-1.133c-.464.77-1.315 1.133-2.6 1.133-2.079 0-3.024-.944-3.024-3.023zm8.308 1.512A2.254 2.254 0 0012 11.252a2.254 2.254 0 002.268 2.264 2.254 2.254 0 002.264-2.268 2.254 2.254 0 00-2.268-2.264z\" /></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/gorhill/uBlock/blob/master/src/img/ublock.svg\",hex:\"800000\"},Ubuntu:{title:\"Ubuntu\",slug:\"ubuntu\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Ubuntu icon</title><path d=\"M12 0c6.623 0 12 5.377 12 12s-5.377 12-12 12S0 18.623 0 12 5.377 0 12 0zm3.279 17.68c-.766.441-1.029 1.422-.586 2.189.441.765 1.422 1.028 2.188.584.766-.441 1.029-1.422.585-2.189-.441-.765-1.421-1.028-2.187-.584zm-3.279-1c-.705 0-1.373-.157-1.971-.435L8.916 18.24c.93.459 1.978.721 3.084.721.646 0 1.268-.091 1.86-.256.104-.643.485-1.234 1.095-1.587.609-.351 1.313-.386 1.92-.156 1.186-1.163 1.957-2.749 2.07-4.515l-2.285-.033c-.21 2.391-2.215 4.266-4.66 4.266zM7.32 12c0-1.583.787-2.981 1.99-3.83L8.14 6.209c-1.404.93-2.445 2.369-2.881 4.035.506.404.83 1.034.83 1.74 0 .704-.324 1.319-.83 1.739.436 1.665 1.477 3.104 2.881 4.034l1.17-1.965C8.107 14.97 7.32 13.574 7.32 12zm-3.48-1.602c-.885 0-1.602.717-1.602 1.602s.717 1.602 1.602 1.602S5.441 12.885 5.441 12s-.716-1.602-1.601-1.602zM12 7.32c2.445 0 4.45 1.875 4.66 4.265l2.285-.034c-.113-1.765-.885-3.35-2.07-4.516-.609.232-1.313.194-1.92-.154-.609-.352-.99-.945-1.095-1.591-.594-.16-1.214-.25-1.86-.25-1.11 0-2.155.26-3.084.72l1.113 1.995c.6-.279 1.268-.435 1.971-.435zm3.279-1.001c.765.442 1.746.181 2.189-.585.441-.765.181-1.746-.588-2.19-.765-.44-1.746-.179-2.189.589-.441.764-.18 1.744.588 2.186z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://design.ubuntu.com/brand/ubuntu-logo/\",hex:\"E95420\"},Udacity:{title:\"Udacity\",slug:\"udacity\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Udacity icon</title><path d=\"M8.01.138L0 4.68v10.458c-.015 4.803 3.915 8.71 8.775 8.725 1.604.004 3.115-.418 4.414-1.154l6.487-3.686c2.561-1.306 4.313-3.946 4.323-6.991V1.096L22.409.18l-6.503 3.631v11.373c-.003.482-.025.836-.153 1.435-.216.915-.521 1.561-.574 1.665-.511-.03-1.546-.314-2.386-.81-.42-.24-.914-.601-1.364-1.021-.3-.285-.556-.615-.78-.945-.24-.345-.435-.704-.585-1.079-.165-.391-.284-.78-.375-1.185-.09-.421-.104-.855-.104-1.275L9.6 1.051 8.01.143V.138zm3.687 21.583c-.436.179-.889.316-1.35.41-.477.094-.916.141-1.403.141-.488 0-.978-.053-1.452-.151-.461-.092-.915-.234-1.35-.417-.424-.179-.836-.404-1.219-.659-.99-.691-1.5-1.291-1.941-1.936-.26-.39-.48-.795-.66-1.215-.183-.435-.322-.886-.416-1.335-.09-.465-.104-.961-.104-1.439V5.58l6-3.621V11.97c0 3.806 2.819 6.979 6.45 7.747-.135.165-.24.331-.391.48-.33.322-.675.624-1.064.877-.375.257-.645.465-1.065.644l-.035.003zm10.405-8.408c-.087.404-.211.803-.375 1.186-.439.955-1.148 1.77-1.74 2.294-1.216 1.101-2.725 1.44-2.898 1.44.362-.948.608-1.965.611-3.039V4.725L22.204 2l.003 10.009c0 .431-.018.879-.105 1.296v.008z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.udacity.com\",hex:\"01B3E3\"},Udemy:{title:\"Udemy\",slug:\"udemy\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Udemy icon</title><path d=\"M23.58 13.38a.66.66 0 0 0-.28-.14c-.6.61-1.35 1.25-2 1.68-.31.2-.7.3-.95.3-.59 0-.84-.55-.91-1.44a54.8 54.8 0 0 1-.17-4.83c0-2.26-.52-3.8-1.88-3.92l-.18-.01c-.83 0-1.24.43-1.77 1.52-.46.94-1.17 2.3-2.48 4.9a34.72 34.72 0 0 1-3.5 5.58c-.31.38-.55.64-.78.8a.8.8 0 0 1-.44.14c-.43 0-.75-.36-.85-1.21a5.46 5.46 0 0 1-.04-.69c0-1.75.66-4.6 1.8-8.78.83-3.05.48-5.13-1.34-5.13h-.03c-.41 0-.75.16-1.08.42-.33.25-.65.81-.96 1.56-.34.84-2.42 5.03-5.74 7.2-.04.81.42 1.63 1.37 1.73.85.08 1.46-.28 2.24-.81l-.16.73a31.56 31.56 0 0 0-.5 2.6c-.46 4.2 1.47 6.27 3.74 6.27.38 0 .76-.05 1.13-.15 2.5-.63 4.9-3.51 7.75-10.13a18.8 18.8 0 0 0-.01 2.02c.19 3.8 1.68 4.93 3.8 4.93 1.6 0 3.09-.83 3.85-1.87a3.7 3.7 0 0 0 .79-2.19c-.02-.49-.17-.88-.42-1.08z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://about.udemy.com/newbrand/\",hex:\"EC5252\"},UIkit:{title:\"UIkit\",slug:\"uikit\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>UIkit icon</title><path d=\"M17.697 3.292l-4.109 2.489 4.738 2.696v7.077l-6.365 3.538-6.258-3.538v-5.485L1.596 7.956V18l10.219 6 10.589-6V6.002l-4.707-2.71zm-1.904-.989L11.813 0 7.665 2.568l4.032 2.218 4.096-2.483z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://getuikit.com\",hex:\"2396F3\"},Umbraco:{title:\"Umbraco\",slug:\"umbraco\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Umbraco icon</title><path d=\"M0 12C0 5.522 5.363.319 12 .319S24 5.522 24 12c0 6.476-5.363 11.681-12 11.681S0 18.477 0 12zm11.734 3.98c-1.168 0-2.123-.104-2.76-.211-.744-.158-1.223-.584-1.541-1.168-.266-.586-.424-1.539-.371-2.814 0-.689.053-1.327.104-1.965.108-.636.16-1.167.267-1.594l.105-.424v-.052c0-.105-.105-.213-.212-.213l-1.54-.212h-.052c-.105 0-.213.105-.266.16 0 .104-.053.159-.104.371-.108.478-.161.902-.267 1.486-.109.685-.163 1.378-.159 2.071 0 0-.053.159 0 1.434s.266 2.283.69 3.08c.425.742 1.116 1.326 2.124 1.645 1.01.32 2.389.479 4.142.479h.213c1.753 0 3.132-.158 4.14-.479 1.01-.318 1.701-.902 2.126-1.645.425-.795.638-1.805.69-3.08.053-1.275 0-1.434 0-1.434 0-.743-.104-1.435-.16-2.069-.105-.638-.158-1.063-.266-1.487-.053-.212-.053-.319-.105-.371 0-.107-.105-.16-.266-.16h-.053l-1.54.212c-.105 0-.213.107-.213.213v.052l.106.424c.106.427.158.957.266 1.593.105.639.105 1.275.105 1.965 0 1.275-.104 2.177-.371 2.814-.266.586-.795 1.01-1.539 1.168-.639.16-1.594.213-2.762.213h-.531v-.002z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://umbraco.com/\",hex:\"00BEC1\"},Unity:{title:\"Unity\",slug:\"unity\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Unity icon</title><path d=\"M19.9 19.2L15.6 12l4.3-7.2L22 12l-2.1 7.2zm-9.5-.7L5 13.2h8.6l4.3 7.2-7.5-1.9zm0-13.1l7.5-1.9-4.3 7.2H4.9c0 .1 5.5-5.3 5.5-5.3zm11-5.4l-9.8 2.5L10.1 5H7.2L0 12l7.2 7h2.9l1.4 2.5 9.8 2.5 2.6-9.5-1.4-2.5L24 9.5 21.4 0z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://unity.com/\",hex:\"000000\"},\"Unreal Engine\":{title:\"Unreal Engine\",slug:\"unrealengine\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Unreal Engine icon</title><path d=\"M11.999 0C5.427 0 .1 5.373.1 12c0 6.628 5.327 12 11.899 12 6.571 0 11.899-5.372 11.899-12 0-6.627-5.328-12-11.9-12zm0 .528c3.038 0 5.895 1.194 8.043 3.36A11.446 11.446 0 0 1 23.374 12c0 3.064-1.183 5.945-3.332 8.112A11.254 11.254 0 0 1 12 23.472a11.253 11.253 0 0 1-8.044-3.36A11.447 11.447 0 0 1 .623 12c0-3.064 1.184-5.945 3.332-8.112A11.252 11.252 0 0 1 12 .528zm-.595 4.223c-1.938.52-3.732 1.516-6.123 4.258-2.392 2.742-1.938 5.006-1.938 5.006s.66-1.558 2.247-3.199c.752-.777 1.314-1.037 1.698-1.038a.598.598 0 0 1 .632.602v5.567c0 .55-.354.669-.68.663-.279-.005-.537-.102-.537-.102 1.63 2.368 5.526 2.7 5.526 2.7l1.711-1.828.04.035 1.568 1.336c2.866-1.703 4.248-4.86 4.248-4.86-1.279 1.353-2.094 1.669-2.578 1.667-.429-.003-.597-.255-.597-.255-.023-.117-.063-1.81-.078-3.505-.014-1.756-.001-3.513.087-3.518.494-.929 2.073-2.802 2.073-2.802-2.948.581-4.556 2.513-4.556 2.513-.475-.374-1.444-.311-1.444-.311.454.25.907.976.907 1.578v5.92s-.99.873-1.752.873c-.451 0-.729-.247-.881-.449a1.182 1.182 0 0 1-.15-.258V8.033a.634.634 0 0 1-.363.123c-.162 0-.33-.082-.444-.32-.086-.18-.141-.45-.141-.842 0-1.35 1.525-2.243 1.525-2.243z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.unrealengine.com/en-US/branding\",hex:\"313131\"},Unsplash:{title:\"Unsplash\",slug:\"unsplash\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Unsplash icon</title><path d=\"M7.5 6.75V0h9v6.75h-9zm9 3.75H24V24H0V10.5h7.5v6.75h9V10.5z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://unsplash.com/\",hex:\"000000\"},Untappd:{title:\"Untappd\",slug:\"untappd\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Untappd icon</title><path d=\"M11 13.299l-5.824 8.133c-.298.416-.8.635-1.308.572-.578-.072-1.374-.289-2.195-.879S.392 19.849.139 19.323a1.402 1.402 0 0 1 .122-1.425l5.824-8.133a3.066 3.066 0 0 1 1.062-.927l1.146-.604c.23-.121.436-.283.608-.478.556-.631 2.049-2.284 4.696-4.957l.046-.212a.134.134 0 0 1 .096-.1l.146-.037a.135.135 0 0 0 .101-.141l-.015-.18a.13.13 0 0 1 .125-.142c.176-.005.518.046 1.001.393s.64.656.692.824a.13.13 0 0 1-.095.164l-.175.044a.133.133 0 0 0-.101.141l.012.15a.131.131 0 0 1-.063.123l-.186.112c-1.679 3.369-2.764 5.316-3.183 6.046a2.157 2.157 0 0 0-.257.73l-.205 1.281A3.074 3.074 0 0 1 11 13.3zm12.739 4.598l-5.824-8.133a3.066 3.066 0 0 0-1.062-.927l-1.146-.605a2.138 2.138 0 0 1-.608-.478 50.504 50.504 0 0 0-.587-.654.089.089 0 0 0-.142.018 97.261 97.261 0 0 1-1.745 3.223 1.42 1.42 0 0 0-.171.485 3.518 3.518 0 0 0 0 1.103l.01.064c.075.471.259.918.536 1.305l5.824 8.133c.296.413.79.635 1.294.574a4.759 4.759 0 0 0 2.209-.881 4.762 4.762 0 0 0 1.533-1.802 1.4 1.4 0 0 0-.122-1.425zM8.306 3.366l.175.044a.134.134 0 0 1 .101.141l-.012.15a.13.13 0 0 0 .063.123l.186.112c.311.623.599 1.194.869 1.721.026.051.091.06.129.019.437-.469.964-1.025 1.585-1.668a.137.137 0 0 0 .003-.19c-.315-.322-.645-.659-1.002-1.02l-.046-.212a.13.13 0 0 0-.096-.099l-.146-.037a.135.135 0 0 1-.101-.141l.015-.18a.13.13 0 0 0-.123-.142c-.175-.005-.518.045-1.002.393-.483.347-.64.656-.692.824a.13.13 0 0 0 .095.164z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://untappd.com/\",hex:\"FFC000\"},Upwork:{title:\"Upwork\",slug:\"upwork\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Upwork icon</title><path d=\"M18.561 13.158c-1.102 0-2.135-.467-3.074-1.227l.228-1.076.008-.042c.207-1.143.849-3.06 2.839-3.06 1.492 0 2.703 1.212 2.703 2.703-.001 1.489-1.212 2.702-2.704 2.702zm0-8.14c-2.539 0-4.51 1.649-5.31 4.366-1.22-1.834-2.148-4.036-2.687-5.892H7.828v7.112c-.002 1.406-1.141 2.546-2.547 2.548-1.405-.002-2.543-1.143-2.545-2.548V3.492H0v7.112c0 2.914 2.37 5.303 5.281 5.303 2.913 0 5.283-2.389 5.283-5.303v-1.19c.529 1.107 1.182 2.229 1.974 3.221l-1.673 7.873h2.797l1.213-5.71c1.063.679 2.285 1.109 3.686 1.109 3 0 5.439-2.452 5.439-5.45 0-3-2.439-5.439-5.439-5.439z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.upwork.com/press/\",hex:\"6FDA44\"},V:{title:\"V\",slug:\"v\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>V icon</title><path d=\"M23.474,0.159L17.08,0.775c-0.406,0.039-0.844,0.383-0.978,0.768l-4.092,11.749L7.898,1.542 C7.764,1.158,7.325,0.814,6.92,0.775L0.526,0.159C0.121,0.12-0.096,0.399,0.041,0.783L8.085,23.15 c0.138,0.383,0.581,0.695,0.988,0.695h6.223h0.039c0.073,0,0.134-0.02,0.179-0.055c0.124-0.062,0.231-0.169,0.275-0.292 l0.039-0.108l8.13-22.607C24.096,0.399,23.879,0.12,23.474,0.159z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/vlang/v-logo\",hex:\"5D87BF\"},V8:{title:\"V8\",slug:\"v8\",svg:'<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" role=\"img\"><title>V8 icon</title><path d=\"M6.832 6c0-.161.008-.322.023-.479.019-.207.07-.401.112-.599l-.694-1.377H0l2.182 3.818h1.527l2.097 3.98a6.534 6.534 0 0 1 1.727-2.745A5.123 5.123 0 0 1 6.832 6zM10.365 19.663L12 22.637l1.637-2.975c-.535.138-1.079.234-1.637.234s-1.101-.096-1.635-.233zM17.728 3.545l-.717 1.258c.056.238.112.476.134.726a5.148 5.148 0 0 1-.677 3.07 6.565 6.565 0 0 1 1.727 2.746l2.097-3.981h1.527L24 3.545h-6.272z M17.846 12.007a6 6 0 0 0-2.073-3.31A4.64 4.64 0 0 0 12 1.363 4.635 4.635 0 0 0 7.363 6a4.62 4.62 0 0 0 .865 2.697A5.988 5.988 0 0 0 6 13.363a6.01 6.01 0 0 0 3.814 5.592 6.02 6.02 0 0 0 4.375-.003 6.006 6.006 0 0 0 3.657-6.945zM12 4.227c1.129 0 2.046.917 2.046 2.045a2.046 2.046 0 0 1-4.092 0c0-1.128.918-2.045 2.046-2.045zm0 11.456a2.32 2.32 0 0 1 0-4.637c1.282 0 2.318 1.037 2.318 2.318S13.282 15.683 12 15.683z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://v8.dev/logo\",hex:\"4B8BF5\"},Vagrant:{title:\"Vagrant\",slug:\"vagrant\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Vagrant icon</title><path d=\"M5.672 6.774V4.917l3.164-1.822L3.56.005.397 1.852v2.263L7.52 21.41 12 23.995v-6.496l2.107-1.224-.024-.015 4.245-9.486V4.917l5.275-3.065L20.439.005l-5.272 3.087h-.003V5.202L12 12.584v2.467l-2.11 1.224zm3.164-3.66L8.814 3.1 5.672 4.917v1.857l4.218 9.501L12 15.234v-2.65L8.836 5.202zm9.492 1.803v1.857l-4.22 9.101L12 17.332v6.663l4.521-2.607L23.603 4.05V1.852z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.hashicorp.com/brand#vagrant\",hex:\"1563FF\"},Valve:{title:\"Valve\",slug:\"valve\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Valve icon</title><path d=\"M0 8.579v6.842h24V8.58zm1.8 1.415h.793l.776 3.044.76-3.044h.836l-1.227 4.029H3zm5.488 0h1.084l1.145 4.034h-.814l-.27-1.007H7.228s-.21.81-.254.99c-.242.017-.83 0-.83 0zm4.184 0h.792v3.352h1.69v.677h-2.482zm3.45 0h.816l.776 3.005.754-3.005h.815l-1.222 4.034h-.716zm4.828 0h1.69v.522h-1.084v.584h.99v.523h-.99v.6h1.084v.523h-1.69zm-11.902.68l-.426 1.702h.89z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.valvesoftware.com/\",hex:\"F74843\"},Veeam:{title:\"Veeam\",slug:\"veeam\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Veeam icon</title><path d=\"M6.63 9.842c-1.104 0-2.001.945-2.001 2.101v.108c0 1.322.847 2.038 1.975 2.101.051.006.108.006.16.006.435 0 .794-.115 1.195-.361.04-.023.201-.132.361-.338.132-.166.138-.411 0-.543-.2-.189-.412-.086-.595.074-.292.246-.516.442-1.1.442-.55 0-1.064-.316-1.19-.94 0-.023.01-.045.034-.045H8.16a.473.473 0 00.469-.504c0-1.156-.893-2.101-1.998-2.101zm4.466 0c-1.1 0-1.996.945-1.996 2.101v.108c0 1.322.846 2.038 1.974 2.101.052.006.109.006.16.006.435 0 .795-.115 1.196-.361.04-.023.2-.132.361-.338.132-.166.137-.411 0-.543-.2-.189-.413-.086-.596.074-.292.246-.515.442-1.1.442-.549 0-1.063-.316-1.189-.94-.006-.023.01-.045.028-.045h2.691a.473.473 0 00.469-.504c-.006-1.156-.9-2.101-1.998-2.101zm-6.89.04a.4.4 0 00-.345.223l-1.42 3.063c-.034.063-.062.11-.136.11-.075 0-.105-.047-.139-.11l-1.42-3.057a.38.38 0 00-.531-.177.428.428 0 00-.172.56l1.39 2.828.16.32a.8.8 0 00.712.46.791.791 0 00.709-.46l.16-.32 1.385-2.834a.423.423 0 00-.166-.56.376.376 0 00-.188-.045zm11.362 0a.762.762 0 00-.504.188.808.808 0 00-.207.27l-1.591 3.137c0 .005-.006.006-.006.011v.006a.434.434 0 00.029.442c0 .005.006.006.006.011 0 .006.006.004.006.01a.372.372 0 00.516.076s.005 0 .005-.006a.083.083 0 00.024-.017l.015-.018.006-.006a.485.485 0 00.076-.103l.057-.125.332-.7c.006-.017.028-.027.045-.027h1.484c.195 0 .354-.167.354-.379 0-.206-.159-.377-.354-.377h-1.099c-.023 0-.041-.024-.03-.046l.08-.172.602-1.207v-.006s0-.006.006-.006c.011-.023.04-.108.098-.125.034-.012.063-.012.086 0 .063.017.084.091.113.148l1.455 3.022a.393.393 0 00.48.195s.006 0 .006-.006l.035-.017c.006 0 .007-.006.012-.006 0 0 .006 0 .006-.006.006 0 .006-.006.012-.006s.01-.004.01-.01c.006 0 .006-.006.011-.006.006-.006.012-.012.018-.012l.017-.017.006-.006a.408.408 0 00.092-.498l-1.598-3.154a.79.79 0 00-.709-.451zm3.508 0c-.39 0-.709.332-.709.778v3.018c0 .183.104.354.264.406.263.086.486-.143.486-.412l-.058-2.938a.03.03 0 01.052-.017l1.442 2.931c.137.28.367.448.625.448.257 0 .491-.167.623-.448l1.449-2.935c.011-.029.05-.019.05.016l-.056 2.955c0 .234.177.423.389.412.206-.006.367-.207.367-.43V10.66c.011-.452-.31-.771-.7-.777a.684.684 0 00-.61.394c-.361.739-1.426 2.93-1.426 2.936-.006.011-.029.064-.075.064-.04 0-.068-.047-.074-.064-.349-.727-1.047-2.164-1.408-2.908-.143-.287-.379-.422-.63-.422zm-12.451.647c.698 0 1.14.527 1.209 1.145 0 .023-.012.045-.035.045h-2.33c-.023-.006-.033-.022-.033-.045.074-.607.49-1.145 1.189-1.145zm4.47 0h.003c.697.001 1.138.527 1.207 1.145 0 .023-.013.045-.035.045H9.94c-.023-.006-.04-.022-.034-.045.075-.606.493-1.144 1.19-1.145z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.veeam.com/newsroom/veeam-graphics.html\",hex:\"00B336\"},Venmo:{title:\"Venmo\",slug:\"venmo\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Venmo icon</title><path d=\"M3.94 9.72c.17.27.24.54.24.89 0 1.11-.95 2.55-1.72 3.57H.71L0 9.96l1.54-.15.37 3c.35-.56.78-1.45.78-2.06 0-.33-.06-.56-.15-.75l1.4-.28zM5.94 11.57c.28 0 1-.13 1-.53 0-.2-.14-.3-.3-.3-.29 0-.66.35-.7.83zm-.03.8c0 .5.27.7.64.7.4 0 .77-.1 1.27-.35l-.19 1.26c-.35.17-.89.28-1.42.28-1.33 0-1.81-.8-1.81-1.82 0-1.31.78-2.7 2.38-2.7.88 0 1.38.49 1.38 1.18 0 1.1-1.43 1.45-2.25 1.46zM12.6 10.7c0 .17-.03.4-.05.56l-.46 2.92h-1.5l.42-2.68.03-.3c0-.2-.12-.24-.26-.24-.2 0-.4.09-.52.15l-.48 3.07h-1.5l.68-4.37h1.3l.02.35c.31-.2.72-.43 1.29-.43.76 0 1.03.4 1.03.98zM17.05 10.21c.43-.3.83-.48 1.4-.48.76 0 1.03.4 1.03.98a4 4 0 0 1-.05.55l-.46 2.92h-1.5l.43-2.73.02-.22c0-.22-.12-.27-.27-.27-.18 0-.37.08-.5.15l-.48 3.07h-1.5l.43-2.74.02-.21c0-.22-.12-.27-.27-.27-.2 0-.39.09-.52.15l-.47 3.06h-1.51l.69-4.36h1.28l.05.36c.3-.22.7-.44 1.24-.44.48 0 .78.2.94.48zM22.46 11.48c0-.35-.09-.6-.35-.6-.6 0-.72 1.05-.72 1.58 0 .41.11.66.38.66.56 0 .69-1.1.69-1.64zm-2.6.92c0-1.38.74-2.67 2.41-2.67 1.27 0 1.73.75 1.73 1.78 0 1.36-.72 2.77-2.44 2.77-1.27 0-1.7-.83-1.7-1.88z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://venmo.com/about/brand/\",hex:\"3D95CE\"},Verizon:{title:\"Verizon\",slug:\"verizon\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Verizon icon</title><path d=\"M18.302 0H22v.003L10.674 24H7.662L2 12h3.727l3.449 7.337z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.verizondigitalmedia.com/about/logo-usage/\",hex:\"CD040B\"},Viadeo:{title:\"Viadeo\",slug:\"viadeo\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Viadeo icon</title><path d=\"M10.106 21.987h.029c1.158 0 2.221-.281 3.188-.841.968-.56 1.734-1.354 2.304-2.385.567-1.027.853-2.137.853-3.33 0-.964-.166-1.855-.51-2.67.57-.119 1.26-.354 1.979-.799.435 1.053.66 2.194.66 3.426 0 2.295-.78 4.305-2.37 6.03C14.647 23.13 12.622 24 10.147 24c-2.49 0-4.522-.859-6.1-2.581-1.576-1.72-2.355-3.731-2.355-6.029 0-2.283.746-4.26 2.24-5.935 1.635-1.846 3.711-2.77 6.215-2.77 1.057 0 2.034.165 2.936.492-.292.572-.558 1.274-.629 2.029-.717-.3-1.486-.45-2.311-.45-1.737 0-3.229.652-4.475 1.955C4.424 12.016 3.8 13.592 3.8 15.437c0 1.2.285 2.31.855 3.329.566 1.036 1.334 1.83 2.301 2.387.645.375 1.327.63 2.051.75 6.207-2.4 5.477-14.16 5.431-14.806l.053.165c3.646 9.734-4.301 14.744-4.301 14.744h-.075l-.009-.019zM21.078.544c-1.016 2.157-2.896 2.558-2.896 2.558-1.878.477-2.534 1.201-2.534 1.201-1.879 1.889-.4 4.182-.4 4.182 4.059-.924 5.541-4.258 5.541-4.258-.181 2.24-5.011 4.887-5.011 4.887 1.599 1.563 3.124 1.375 4.132.774 1.336-.795 1.978-2.535 1.978-2.535 1.294-3.871-.81-6.81-.81-6.809zM11.103 0c1.994 3.354 3.08 6.365 3.324 7.08v-.029C13.935 1.883 11.097 0 11.097 0h.006z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://corporate.viadeo.com/en/media/resources\",hex:\"F88D2D\"},Viber:{title:\"Viber\",slug:\"viber\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Viber icon</title><path d=\"M11.398.002C9.473.028 5.331.344 3.014 2.467 1.294 4.177.693 6.698.623 9.82c-.06 3.11-.13 8.95 5.5 10.541v2.42s-.038.97.602 1.17c.79.25 1.24-.499 1.99-1.299l1.4-1.58c3.85.32 6.8-.419 7.14-.529.78-.25 5.181-.811 5.901-6.652.74-6.031-.36-9.831-2.34-11.551l-.01-.002c-.6-.55-3-2.3-8.37-2.32 0 0-.396-.025-1.038-.016zm.067 1.697c.545-.003.88.02.88.02 4.54.01 6.711 1.38 7.221 1.84 1.67 1.429 2.528 4.856 1.9 9.892-.6 4.88-4.17 5.19-4.83 5.4-.28.09-2.88.73-6.152.52 0 0-2.439 2.941-3.199 3.701-.12.13-.26.17-.35.15-.13-.03-.17-.19-.16-.41l.02-4.019c-4.771-1.32-4.491-6.302-4.441-8.902.06-2.6.55-4.732 2-6.172 1.957-1.77 5.475-2.01 7.11-2.02zm.36 2.6a.299.299 0 0 0-.3.299.3.3 0 0 0 .3.3 5.631 5.631 0 0 1 4.03 1.59c1.09 1.06 1.621 2.48 1.641 4.34a.3.3 0 0 0 .3.3v-.009a.3.3 0 0 0 .3-.3 6.451 6.451 0 0 0-1.81-4.76c-1.19-1.16-2.692-1.76-4.462-1.76zm-3.954.69a.955.955 0 0 0-.615.12h-.012c-.41.24-.788.54-1.148.94-.27.32-.421.639-.461.949a1.24 1.24 0 0 0 .05.541l.02.01a13.722 13.722 0 0 0 1.2 2.6 15.383 15.383 0 0 0 2.32 3.171l.03.04.04.03.03.03.03.03a15.603 15.603 0 0 0 3.18 2.33c1.32.72 2.122 1.06 2.602 1.2v.01c.14.04.268.06.398.06a1.84 1.84 0 0 0 1.102-.472c.39-.35.7-.738.93-1.148v-.01c.23-.43.15-.841-.18-1.121a13.632 13.632 0 0 0-2.15-1.54c-.51-.28-1.03-.11-1.24.17l-.45.569c-.23.28-.65.24-.65.24l-.012.01c-3.12-.8-3.95-3.959-3.95-3.959s-.04-.43.25-.65l.56-.45c.27-.22.46-.74.17-1.25a13.522 13.522 0 0 0-1.54-2.15.843.843 0 0 0-.504-.3zm4.473.89a.3.3 0 0 0 .002.6 3.78 3.78 0 0 1 2.65 1.15 3.5 3.5 0 0 1 .9 2.57.3.3 0 0 0 .3.299l.01.012a.3.3 0 0 0 .3-.301c.03-1.19-.34-2.19-1.07-2.99-.73-.8-1.75-1.25-3.05-1.34a.3.3 0 0 0-.042 0zm.49 1.619a.305.305 0 0 0-.018.611c.99.05 1.47.55 1.53 1.58a.3.3 0 0 0 .3.29h.01a.3.3 0 0 0 .29-.32c-.07-1.34-.8-2.091-2.1-2.161a.305.305 0 0 0-.012 0z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.viber.com/brand-center/\",hex:\"665CAC\"},Vim:{title:\"Vim\",slug:\"vim\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Vim icon</title><path d=\"M24 11.986h-.027l-4.318-4.318 4.303-4.414V1.461l-.649-.648h-8.198l-.66.605v1.045L12.015.027V0L12 .014 11.986 0v.027l-1.29 1.291-.538-.539H2.035l-.638.692v1.885l.616.616h.72v5.31L.027 11.987H0L.014 12 0 12.014h.027l2.706 2.706v6.467l.907.523h2.322l1.857-1.904 4.166 4.166V24l.015-.014.014.014v-.028l2.51-2.509h.485c.111 0 .211-.07.25-.179l.146-.426c.028-.084.012-.172-.037-.239l1.462-1.462-.612 1.962c-.043.141.036.289.177.332.025.008.052.012.078.012h1.824c.106-.001.201-.064.243-.163l.165-.394c.025-.065.024-.138-.004-.203-.027-.065-.08-.116-.146-.142-.029-.012-.062-.019-.097-.02h-.075l.84-2.644h1.232l-1.016 3.221c-.043.141.036.289.176.332.025.008.052.012.079.012h2.002c.11 0 .207-.066.248-.17l.164-.428c.051-.138-.021-.29-.158-.341-.029-.011-.06-.017-.091-.017h-.145l1.131-3.673c.027-.082.012-.173-.039-.24l-.375-.504-.003-.005c-.051-.064-.127-.102-.209-.102h-1.436c-.071 0-.141.03-.19.081l-.4.439h-.624l-.042-.046 4.445-4.445H24L23.986 12l.014-.014zM9.838 21.139l1.579-4.509h-.501l.297-.304h1.659l-1.563 4.555h.623l-.079.258H9.838zm3.695-7.516l.15.151-.269.922-.225.226h-.969l-.181-.181.311-.871.288-.247h.895zM5.59 20.829H3.877l-.262-.15V3.091H2.379l-.1-.1V1.815l.143-.154h7.371l.213.214v1.108l-.142.173H8.785v8.688l8.807-8.688h-2.086l-.175-.188V1.805l.121-.111h7.49l.132.133v1.07L12.979 13.25h-.373c-.015-.001-.028 0-.042.001l-.02.003c-.045.01-.086.03-.119.06l-.343.295-.004.003c-.033.031-.059.069-.073.111l-.296.83-6.119 6.276zm14.768-3.952l.474-.519h1.334l.309.415-1.265 4.107h.493l-.08.209H19.84l1.124-3.564h-2.015l-1.077 3.391h.424l-.073.174h-1.605l1.107-3.548h-2.096l-1.062 3.339h.436l-.072.209H13.27l1.514-4.46H14.198l.091-.271h1.65l.519.537h.906l.491-.554h1.061l.489.535h.953z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://commons.wikimedia.org/wiki/File:Vimlogo.svg\",hex:\"019733\"},Vimeo:{title:\"Vimeo\",slug:\"vimeo\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Vimeo icon</title><path d=\"M23.977 6.416c-.105 2.338-1.739 5.543-4.894 9.609-3.268 4.247-6.026 6.37-8.29 6.37-1.409 0-2.578-1.294-3.553-3.881L5.322 11.4C4.603 8.816 3.834 7.522 3.01 7.522c-.179 0-.806.378-1.881 1.132L0 7.197c1.185-1.044 2.351-2.084 3.501-3.128C5.08 2.701 6.266 1.984 7.055 1.91c1.867-.18 3.016 1.1 3.447 3.838.465 2.953.789 4.789.971 5.507.539 2.45 1.131 3.674 1.776 3.674.502 0 1.256-.796 2.265-2.385 1.004-1.589 1.54-2.797 1.612-3.628.144-1.371-.395-2.061-1.614-2.061-.574 0-1.167.121-1.777.391 1.186-3.868 3.434-5.757 6.762-5.637 2.473.06 3.628 1.664 3.493 4.797l-.013.01z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://vimeo.com/about/brand_guidelines\",hex:\"1AB7EA\"},Vine:{title:\"Vine\",slug:\"vine\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Vine icon</title><path d=\"M22.521 11.922c-.618.143-1.217.206-1.758.206-3.028 0-5.361-2.116-5.361-5.794 0-1.801.706-2.731 1.696-2.731.946 0 1.562.841 1.562 2.552 0 .975-.256 2.041-.45 2.672 0 0 .93 1.636 3.481 1.125.54-1.201.842-2.762.842-4.127C22.533 2.146 20.657 0 17.219 0c-3.543-.017-5.615 2.7-5.615 6.288 0 3.55 1.659 6.597 4.395 7.985-1.15 2.301-2.614 4.328-4.142 5.856-2.769-3.351-5.273-7.82-6.302-16.541H1.467c1.889 14.526 7.517 19.149 9.004 20.035.84.504 1.566.48 2.336.049 1.215-.688 4.848-4.315 6.859-8.563.84-.003 1.861-.1 2.867-.328v-2.865l-.012.006z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://vine.co/logo\",hex:\"11B48A\"},Virb:{title:\"Virb\",slug:\"virb\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Virb icon</title><path d=\"M17.733 7.237c0-.25 0-.476.15-.625.199-.176.4-.15.6-.15h1.428c.766 0 1.875.199 2.625.877.75.699.915 1.701.915 2.604v2.252c0 .599.015 1.027-.284 1.578-.375.701-1.155.9-1.155 1.002 0 .1.839.252 1.214 1.002.301.6.27.975.27 1.576v3.105c0 .615 0 1.395-.899 2.445-.855.943-2.039 1.08-2.64 1.08-.449 0-.779.016-1.23 0-.299-.031-.749.016-.854-.137-.149-.223-.194-.178-.194-.854V7.229l.054.008zm-5.46 16.349c0 .402-.099.402-.85.402-.576 0-.75 0-.75-.352V7.229c0-.25.023-.523.174-.674.201-.176.375-.101.576-.101h1.428c.801 0 1.878.199 2.628.876.75.699.927 1.728.927 2.604v2.26c0 .599.025 1.027-.276 1.578-.375.701-1.176.9-1.176 1.002 0 .1.825.252 1.2 1.002.3.6.277.975.277 1.576v6.225c0 .391-.18.391-.855.391-.584 0-.75.016-.75-.359V17.25c0-1.027-.674-1.652-1.229-1.652-1.185 0-1.335-.023-1.335.375v7.59l.011.023zm-3.828.375c-.676 0-.75 0-.75-.35V6.862c0-.325.148-.375.75-.375.674 0 .85.023.85.398v16.679c0 .375-.045.404-.84.404l-.01-.007zm11.165-1.627c.196.031.226.031.451.031.27 0 .899-.074 1.35-.541.495-.539.525-.898.525-1.318v-3.211c0-1.154-.675-1.648-1.425-1.648-1.08 0-1.156.074-1.156.674v5.264c0 .287.015.75.24.781l.015-.032zM3.609 18.777c.426-4.303.801-7.96 1.199-11.893.051-.423.252-.398.705-.398.699 0 .949.051.924.325-.75 6.164-1.326 10.724-2.077 16.814-.046.361-.315.375-.825.375-.645 0-.945 0-1.005-.42C1.855 17.939 1.24 12.93.506 6.782c-.016-.301.105-.301.809-.301.735 0 .886.075.899.404.406 4.381.706 7.785 1.081 11.955 0 .076.031.24.15.24.15 0 .18-.164.18-.27l-.016-.033zm9.315-10.662c-.225 0-.451 0-.553.173-.074.15-.074.277-.074.427v4.682c0 .275-.051.551.15.701.148.119.324.09.449.09.277 0 .93-.074 1.38-.555.499-.557.499-.975.499-1.335V9.944c0-.575-.1-1.002-.525-1.451-.275-.25-.425-.375-1.326-.375v-.003zm7.234 0c-.352 0-.625 0-.727.173-.073.15-.073.277-.073.427v4.682c0 .275-.026.5.149.676.149.15.251.125.45.125.35 0 .927-.074 1.38-.549.498-.557.498-.932.498-1.335v-2.37c0-.575-.099-1.002-.526-1.451-.275-.25-.448-.375-1.151-.375v-.003zM10.89 2.01H9.312V.395C9.312.024 9.139 0 8.476 0c-.587 0-.735.049-.735.368V2.01H6.204c-.369 0-.396.174-.396.835 0 .59.051.735.369.735H7.74v1.549c0 .342.075.342.734.342.786 0 .836-.023.836-.393V3.583h1.627c.345 0 .345-.076.345-.736.001-.786-.024-.836-.392-.837z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://virb.com/about\",hex:\"0093DA\"},Visa:{title:\"Visa\",slug:\"visa\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Visa icon</title><path d=\"M17.445 8.623c-.387-.146-.99-.301-1.74-.301-1.92 0-3.275.968-3.285 2.355-.012 1.02.964 1.594 1.701 1.936.757.35 1.01.57 1.008.885-.005.477-.605.693-1.162.693-.766 0-1.186-.107-1.831-.375l-.239-.111-.271 1.598c.466.195 1.306.362 2.175.375 2.041 0 3.375-.961 3.391-2.439.016-.813-.51-1.43-1.621-1.938-.674-.33-1.094-.551-1.094-.886 0-.296.359-.612 1.109-.612.645-.01 1.096.129 1.455.273l.18.081.271-1.544-.047.01zm4.983-.17h-1.5c-.467 0-.816.127-1.021.591l-2.885 6.534h2.041l.408-1.07 2.49.002c.061.25.24 1.068.24 1.068H24l-1.572-7.125zM9.66 8.393h1.943l-1.215 7.129H8.444L9.66 8.391v.002zm-4.939 3.929l.202.99 1.901-4.859h2.059l-3.061 7.115H3.768l-1.68-6.026c-.035-.103-.078-.173-.18-.237C1.34 9.008.705 8.766 0 8.598l.025-.15h3.131c.424.016.766.15.883.604l.682 3.273v-.003zm15.308.727l.775-1.994c-.01.02.16-.412.258-.68l.133.615.449 2.057h-1.615v.002z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://commons.wikimedia.org/wiki/File:Visa_2014_logo_detail.svg\",hex:\"142787\"},\"Visual Studio\":{title:\"Visual Studio\",slug:\"visualstudio\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Visual Studio icon</title><path d=\"M17.58.07a1.5 1.5 0 0 0-1.032.392 1.5 1.5 0 0 0-.001 0 .88.88 0 0 0-.05.045L8.53 9.317 3.88 5.504l-.407-.35A1 1 0 0 0 2.45 5a1 1 0 0 0-.012.005l-1.816.75a1 1 0 0 0-.077.035 1 1 0 0 0-.047.028 1 1 0 0 0-.038.022 1 1 0 0 0-.048.034 1 1 0 0 0-.031.024 1 1 0 0 0-.043.036 1 1 0 0 0-.036.033 1 1 0 0 0-.032.035 1 1 0 0 0-.033.038 1 1 0 0 0-.035.044 1 1 0 0 0-.024.034 1 1 0 0 0-.032.051 1 1 0 0 0-.02.034 1 1 0 0 0-.024.05 1 1 0 0 0-.02.045 1 1 0 0 0-.016.044 1 1 0 0 0-.016.047 1 1 0 0 0-.015.055 1 1 0 0 0-.01.04 1 1 0 0 0-.008.054 1 1 0 0 0-.006.05 1 1 0 0 0-.004.083V17.33a1 1 0 0 0 .615.917l1.816.763a1 1 0 0 0 1.034-.163l.408-.35 4.65-3.813 7.968 8.81a1.5 1.5 0 0 0 .072.065 1.5 1.5 0 0 0 .057.05 1.5 1.5 0 0 0 .058.042 1.5 1.5 0 0 0 .063.044 1.5 1.5 0 0 0 .065.038 1.5 1.5 0 0 0 .065.036 1.5 1.5 0 0 0 .068.031 1.5 1.5 0 0 0 .07.03 1.5 1.5 0 0 0 .073.025 1.5 1.5 0 0 0 .066.02 1.5 1.5 0 0 0 .08.02 1.5 1.5 0 0 0 .068.014 1.5 1.5 0 0 0 .075.01 1.5 1.5 0 0 0 .075.007 1.5 1.5 0 0 0 .073.003 1.5 1.5 0 0 0 .077 0 1.5 1.5 0 0 0 .078-.005 1.5 1.5 0 0 0 .067-.007 1.5 1.5 0 0 0 .087-.014 1.5 1.5 0 0 0 .06-.012 1.5 1.5 0 0 0 .08-.022 1.5 1.5 0 0 0 .068-.02 1.5 1.5 0 0 0 .07-.028 1.5 1.5 0 0 0 .089-.037l4.942-2.376a1.5 1.5 0 0 0 .475-.362 1.5 1.5 0 0 0 .09-.112 1.5 1.5 0 0 0 .004-.007 1.5 1.5 0 0 0 .08-.125 1.5 1.5 0 0 0 .062-.12 1.5 1.5 0 0 0 .009-.017 1.5 1.5 0 0 0 .041-.107 1.5 1.5 0 0 0 .014-.037 1.5 1.5 0 0 0 .03-.107 1.5 1.5 0 0 0 .009-.037 1.5 1.5 0 0 0 .017-.1 1.5 1.5 0 0 0 .008-.05 1.5 1.5 0 0 0 .006-.091 1.5 1.5 0 0 0 .004-.079V3.946a1.5 1.5 0 0 0 0-.002 1.5 1.5 0 0 0 0-.032 1.5 1.5 0 0 0-.01-.15 1.5 1.5 0 0 0-.84-1.17L18.203.217a1.5 1.5 0 0 0-.621-.146zm.417 6.852v10.157l-6.195-5.078zM3.005 8.576l3.097 3.425-3.097 3.424z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://visualstudio.microsoft.com/\",hex:\"5C2D91\"},\"Visual Studio Code\":{title:\"Visual Studio Code\",slug:\"visualstudiocode\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Visual Studio Code icon</title><path d=\"M23.15 2.587L18.21.21a1.494 1.494 0 0 0-1.705.29l-9.46 8.63-4.12-3.128a.999.999 0 0 0-1.276.057L.327 7.261A1 1 0 0 0 .326 8.74L3.899 12 .326 15.26a1 1 0 0 0 .001 1.479L1.65 17.94a.999.999 0 0 0 1.276.057l4.12-3.128 9.46 8.63a1.492 1.492 0 0 0 1.704.29l4.942-2.377A1.5 1.5 0 0 0 24 20.06V3.939a1.5 1.5 0 0 0-.85-1.352zm-5.146 14.861L10.826 12l7.178-5.448v10.896z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://commons.wikimedia.org/wiki/File:Visual_Studio_Code_1.35_icon.svg\",hex:\"007ACC\"},VK:{title:\"VK\",slug:\"vk\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>VK icon</title><path d=\"M15.684 0H8.316C1.592 0 0 1.592 0 8.316v7.368C0 22.408 1.592 24 8.316 24h7.368C22.408 24 24 22.408 24 15.684V8.316C24 1.592 22.391 0 15.684 0zm3.692 17.123h-1.744c-.66 0-.864-.525-2.05-1.727-1.033-1-1.49-1.135-1.744-1.135-.356 0-.458.102-.458.593v1.575c0 .424-.135.678-1.253.678-1.846 0-3.896-1.118-5.335-3.202C4.624 10.857 4.03 8.57 4.03 8.096c0-.254.102-.491.593-.491h1.744c.44 0 .61.203.78.677.863 2.49 2.303 4.675 2.896 4.675.22 0 .322-.102.322-.66V9.721c-.068-1.186-.695-1.287-.695-1.71 0-.204.17-.407.44-.407h2.744c.373 0 .508.203.508.643v3.473c0 .372.17.508.271.508.22 0 .407-.136.813-.542 1.254-1.406 2.151-3.574 2.151-3.574.119-.254.322-.491.763-.491h1.744c.525 0 .644.27.525.643-.22 1.017-2.354 4.031-2.354 4.031-.186.305-.254.44 0 .78.186.254.796.779 1.203 1.253.745.847 1.32 1.558 1.473 2.05.17.49-.085.744-.576.744z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://vk.com/brand\",hex:\"4680C2\"},\"VLC media player\":{title:\"VLC media player\",slug:\"vlcmediaplayer\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>VLC media player icon</title><path d=\"M11.891 13.463c3.757 0 4.854-1.347 5.065-1.674l-1.36-4.334c-.36.34-1.327.937-3.68.937-2.292 0-3.188-.567-3.52-.91l-1.39 4.422c.228.361 1.255 1.56 4.885 1.56zM11.917 3.807a6.143 6.143 0 0 0 2.376-.507L13.435.566a.781.781 0 0 0-.406-.437S12.914 0 12.032 0s-1.055.136-1.055.136a.733.733 0 0 0-.41.43l-.884 2.815a6.77 6.77 0 0 0 2.234.426zM22.59 23.319a.395.395 0 0 0-.016-.16l-2.334-7.632a.647.647 0 0 0-.583-.431h-1.663l.2.64c-.24.485-1.488 2.38-6.303 2.38-4.6 0-5.828-1.73-6.11-2.308l.223-.712H4.343a.647.647 0 0 0-.583.431L1.426 23.16a.398.398 0 0 0-.017.15l-.002.02a1.843 1.843 0 0 0 .024.226.528.528 0 0 0 .51.445H22.06a.528.528 0 0 0 .51-.445 1.843 1.843 0 0 0 .023-.226z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://git.videolan.org/?p=vlc.git;a=tree;f=extras/package/macosx/asset_sources\",hex:\"FF8800\"},Vodafone:{title:\"Vodafone\",slug:\"vodafone\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Vodafone icon</title><path d=\"M12 0A12 12 0 0 0 0 12A12 12 0 0 0 12 24A12 12 0 0 0 24 12A12 12 0 0 0 12 0M16.25 1.12C16.57 1.12 16.9 1.15 17.11 1.22C14.94 1.67 13.21 3.69 13.22 6C13.22 6.05 13.22 6.11 13.23 6.17C16.87 7.06 18.5 9.25 18.5 12.28C18.54 15.31 16.14 18.64 12.09 18.65C8.82 18.66 5.41 15.86 5.39 11.37C5.38 8.4 7 5.54 9.04 3.85C11.04 2.19 13.77 1.13 16.25 1.12Z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://web.vodafone.com.eg/\",hex:\"E60000\"},Volkswagen:{title:\"Volkswagen\",slug:\"volkswagen\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Volkswagen icon</title><path d=\"M12 0C5.36 0 0 5.36 0 12S5.36 24 12 24 24 18.64 24 12 18.64 0 12 0M12 1.41C13.2 1.41 14.36 1.63 15.43 2L12.13 9.13C12.09 9.17 12.09 9.26 12 9.26S11.91 9.17 11.87 9.13L8.57 2C9.64 1.63 10.8 1.42 12 1.42M6.9 2.74L10.72 10.97C10.8 11.14 10.89 11.19 11 11.19H13C13.12 11.19 13.2 11.14 13.29 10.97L17.06 2.74C18.64 3.64 20 4.93 20.96 6.47L15.6 16.84C15.56 16.93 15.5 16.97 15.47 16.97C15.39 16.97 15.39 16.89 15.34 16.84L13.29 12.3C13.2 12.13 13.12 12.09 13 12.09H11C10.89 12.09 10.8 12.13 10.71 12.3L8.66 16.84C8.61 16.89 8.62 16.97 8.53 16.97C8.44 16.97 8.44 16.89 8.4 16.84L3 6.47C3.94 4.93 5.32 3.64 6.9 2.74M2.06 8.53L8.23 20.53C8.31 20.7 8.4 20.83 8.62 20.83C8.83 20.83 8.91 20.7 9 20.53L11.87 14.14C11.91 14.06 11.96 14 12 14C12.09 14 12.09 14.1 12.13 14.14L15.04 20.53C15.13 20.7 15.21 20.83 15.43 20.83C15.64 20.83 15.73 20.7 15.81 20.53L22 8.53C22.37 9.6 22.59 10.76 22.59 12C22.54 17.79 17.79 22.59 12 22.59C6.21 22.59 1.46 17.79 1.46 12C1.46 10.8 1.67 9.65 2.06 8.53Z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.volkswagen.ie/\",hex:\"151F5D\"},VSCO:{title:\"VSCO\",slug:\"vsco\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>VSCO icon</title><path d=\"M12 0C5.376 0 0 5.376 0 12s5.376 12 12 12 12-5.376 12-12S18.624 0 12 0zm11.52 12c0 .408-.023.792-.072 1.176l-2.04-.24c.024-.312.05-.624.05-.936 0-.288-.025-.6-.05-.888l2.04-.24c.072.384.072.744.072 1.128zM.479 12c0-.384.024-.769.049-1.152l2.04.24c-.024.312-.047.6-.047.912s.023.6.047.912l-2.04.24C.479 12.769.479 12.384.479 12zm20.472-3.096l1.921-.72c.264.72.433 1.464.552 2.232l-2.04.24c-.097-.6-.24-1.2-.433-1.752zM21 12c0 .6-.072 1.176-.167 1.752l-2.017-.455c.071-.409.119-.841.119-1.297s-.048-.912-.119-1.344l2.017-.457c.118.577.167 1.177.167 1.801zm-9 6.456C8.435 18.455 5.545 15.565 5.544 12 5.545 8.435 8.435 5.545 12 5.544c3.565.001 6.455 2.891 6.456 6.456.008 3.559-2.871 6.448-6.429 6.456H12zM12.216 21v-2.064c.885-.029 1.756-.224 2.568-.575l.888 1.872c-1.09.482-2.264.742-3.456.767zm-3.936-.791l.912-1.873c.792.359 1.656.575 2.568.6V21c-1.202-.023-2.386-.293-3.48-.791zM3 12c0-.624.072-1.224.192-1.824l2.016.456c-.098.45-.146.908-.144 1.368 0 .432.048.864.12 1.272l-2.016.455C3.051 13.159 2.994 12.58 3 12zm8.76-9v2.064c-.877.029-1.74.224-2.544.576l-.888-1.871C9.411 3.291 10.577 3.03 11.76 3zm3.935.792l-.911 1.872c-.809-.363-1.682-.559-2.568-.576V3.024c1.248 0 2.424.288 3.479.768zm5.088 4.656c-.231-.56-.513-1.098-.84-1.608l1.681-1.152c.407.648.768 1.32 1.056 2.04l-1.897.72zm-.07 1.296l-2.018.456c-.23-.85-.621-1.648-1.151-2.352l1.632-1.295c.72.959 1.248 2.015 1.537 3.191zm-3.457-2.256c-.572-.667-1.264-1.22-2.04-1.633l.912-1.871c1.056.549 1.993 1.299 2.76 2.208l-1.632 1.296zm-.6-3.744l.96-1.824c.672.384 1.295.816 1.896 1.32L18.145 4.8c-.461-.401-.959-.754-1.489-1.056zm-.408-.216c-.54-.266-1.102-.483-1.68-.648l.504-1.992c.744.216 1.464.48 2.159.84l-.983 1.8zm-2.16-.768c-.6-.144-1.2-.216-1.824-.239V.479c.793.024 1.584.12 2.328.289l-.504 1.992zm-2.28-.239c-.605.021-1.207.094-1.8.216L9.528.744c.72-.168 1.487-.265 2.28-.265v2.042zm-2.28.334c-.586.167-1.156.384-1.704.649l-.96-1.824c.691-.343 1.415-.616 2.16-.816l.504 1.991zm-2.112.865c-.529.294-1.027.64-1.488 1.032L4.56 3.216c.6-.504 1.224-.936 1.896-1.319l.96 1.823zm.48.264l.888 1.871c-.792.408-1.464.96-2.04 1.608L5.136 6.168c.775-.895 1.711-1.636 2.76-2.184zM4.848 6.552l1.608 1.295c-.53.705-.921 1.503-1.152 2.353l-2.016-.456c.312-1.2.84-2.28 1.56-3.192zM3.24 8.4l-1.92-.72c.287-.72.648-1.416 1.08-2.04l1.68 1.176c-.341.494-.623 1.025-.84 1.584zm-.168.455c-.192.577-.36 1.152-.432 1.776L.6 10.393c.12-.769.288-1.537.553-2.257l1.919.719zm-.456 4.513c.096.6.239 1.2.432 1.776l-1.92.72c-.271-.728-.456-1.485-.552-2.257l2.04-.239zm.624 2.208c.239.576.528 1.104.84 1.607L2.4 18.336c-.435-.629-.797-1.306-1.08-2.016l1.92-.744zm.024-1.392l2.017-.456c.216.864.624 1.681 1.128 2.376L4.8 17.4c-.725-.957-1.247-2.051-1.536-3.216zm3.432 2.28c.577.672 1.272 1.248 2.064 1.656l-.912 1.872c-1.063-.557-2.009-1.315-2.784-2.232l1.632-1.296zm.72 3.815l-.96 1.825c-.674-.376-1.31-.819-1.896-1.321l1.368-1.535c.456.407.936.744 1.488 1.031zm.408.217c.528.264 1.104.48 1.705.647l-.504 1.992c-.747-.196-1.471-.469-2.16-.815l.959-1.824zm2.16.768c.576.12 1.176.193 1.8.217v2.039c-.774-.026-1.544-.114-2.305-.264l.505-1.992zm2.28.216c.605-.021 1.207-.094 1.801-.217l.479 1.992c-.749.168-1.513.264-2.28.287V21.48zm2.257-.336c.586-.165 1.155-.382 1.703-.647l.96 1.824c-.688.35-1.412.623-2.159.815l-.504-1.992zm2.086-.865c.528-.287 1.032-.647 1.488-1.031l1.369 1.535c-.588.502-1.223.945-1.896 1.321l-.961-1.825zm-.479-.263l-.888-1.871c.788-.414 1.489-.977 2.064-1.656l1.606 1.296c-.778.91-1.722 1.668-2.782 2.231zm3.071-2.592l-1.607-1.296c.532-.708.916-1.517 1.128-2.376l2.017.456c-.311 1.157-.831 2.248-1.538 3.216zM20.76 15.6l1.92.721c-.288.72-.648 1.392-1.079 2.04l-1.682-1.177c.337-.504.624-1.032.841-1.584zm.168-.455c.192-.553.336-1.152.433-1.752l2.039.239c-.11.761-.294 1.508-.551 2.232l-1.921-.719zm.456-9.841l-1.681 1.152c-.358-.49-.76-.947-1.199-1.368l1.368-1.536c.552.552 1.056 1.128 1.512 1.752zM4.2 3.528l1.368 1.536c-.456.408-.84.864-1.2 1.368l-1.68-1.176c.431-.636.94-1.216 1.512-1.728zM2.664 18.744l1.68-1.152c.36.48.769.937 1.2 1.369l-1.368 1.535c-.548-.545-1.054-1.131-1.512-1.752zm17.16 1.729l-1.368-1.537c.432-.407.841-.863 1.199-1.344l1.682 1.176c-.457.6-.961 1.175-1.513 1.705z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://vsco.co/about/press/vsco-releases-redesigned-mobile-app\",hex:\"000000\"},\"Vue.js\":{title:\"Vue.js\",slug:\"vue-dot-js\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Vue.js icon</title><path d=\"M24,1.61H14.06L12,5.16,9.94,1.61H0L12,22.39ZM12,14.08,5.16,2.23H9.59L12,6.41l2.41-4.18h4.43Z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/vuejs/art\",hex:\"4FC08D\"},W3C:{title:\"W3C\",slug:\"w3c\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>W3C icon</title><path d=\"M23.642 5.602l-.931 1.858s-.4-.738-.795-1.076c-.377-.322-.864-.62-1.48-.556-.597.062-1.27.587-1.722 1.46-.513.994-.688 2.001-.692 3.112-.005 1.556.57 2.618.57 2.618s-.132-.494-.11-1.33c.014-.52.017-1.089.41-2.261.33-.98 1.084-1.775 1.75-1.912.517-.107.847-.03 1.356.329.603.425.966 1.193.966 1.193l.946-1.81zM0 5.674l3.77 12.723h.156l2.356-7.886 2.357 7.886h.157l3.228-10.895.152-.258h2.655l-2.2 3.802v.754h.629c.806 0 1.398.246 1.775.738.324.42.487 1.011.487 1.776 0 .691-.152 1.283-.455 1.775-.304.492-.676.738-1.116.738-.419 0-.783-.138-1.092-.416-.308-.277-.557-.657-.746-1.139l-1.288.534c.261.796.665 1.427 1.21 1.893.544.466 1.183.699 1.916.699.974 0 1.767-.393 2.38-1.178.613-.785.919-1.754.919-2.906 0-.932-.21-1.743-.628-2.435-.42-.69-1.037-1.167-1.854-1.43l2.326-4.006v-.77h-6.177L8.64 13.419 6.362 5.674h-1.65l.754 2.529-1.54 5.215L1.65 5.674zm17.44 8.88s.233.755.379 1.076c.084.185.342.75.708 1.24.341.46 1.004 1.248 2.011 1.426 1.008.178 1.7-.274 1.871-.384.172-.11.533-.412.761-.657.239-.255.465-.58.59-.775.091-.143.24-.432.24-.432l-.241-1.255s-.418.748-.678 1.036c-.261.288-.727.794-1.302 1.048-.576.253-.877.302-1.446.247-.569-.054-1.097-.383-1.282-.52-.185-.138-.658-.542-.925-.92-.268-.376-.686-1.13-.686-1.13z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.w3.org/Consortium/Legal/logo-usage-20000308\",hex:\"005A9C\"},Wattpad:{title:\"Wattpad\",slug:\"wattpad\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Wattpad icon</title><path d=\"M22.957 18.26c0 1.775-1.357 3.131-3.13 3.131H9.39c-5.321 0-8.348-2.817-8.348-7.826V5.74c0-1.774 1.357-3.13 3.131-3.13h3.13c.522 0 1.148.104 1.566.417.417-.313 1.043-.417 1.565-.417h3.13c.522 0 1.148.104 1.565.417.418-.313 1.044-.417 1.566-.417h3.13c1.774 0 3.13 1.356 3.13 3.13v12.522zm-3.13-16.695h-3.131c-.522 0-1.044.105-1.566.313a4.186 4.186 0 0 0-1.565-.313h-3.13c-.522 0-1.044.105-1.565.313a4.185 4.185 0 0 0-1.566-.313h-3.13A4.186 4.186 0 0 0 0 5.74v7.826c0 5.53 3.548 8.87 9.391 8.87h10.435A4.186 4.186 0 0 0 24 18.26V5.739a4.186 4.186 0 0 0-4.174-4.174M9.391 18.26h10.435V5.74h-3.13v10.434h-3.13V5.739h-3.131v10.435H9.39c-1.043 0-2.087-.835-2.087-2.609V5.74h-3.13v7.826c0 3.13 1.46 4.696 5.217 4.696\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.wattpad.com/press/#assets\",hex:\"F68D12\"},Waze:{title:\"Waze\",slug:\"waze\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Waze icon</title><path d=\"M13.314 1.59c-.225.003-.45.013-.675.03-2.165.155-4.295.924-6.069 2.327-2.194 1.732-3.296 4.325-3.496 7.05h.002c-.093 1.22-.23 2.15-.469 2.63-.238.479-.42.638-1.24.639C.27 14.259-.4 15.612.266 16.482c1.248 1.657 2.902 2.705 4.72 3.364a2.198 2.198 0 00-.033.367 2.198 2.198 0 002.2 2.197 2.198 2.198 0 002.128-1.668c1.307.12 2.607.14 3.824.1.364-.012.73-.045 1.094-.092a2.198 2.198 0 002.127 1.66 2.198 2.198 0 002.2-2.197 2.198 2.198 0 00-.151-.797 12.155 12.155 0 002.303-1.549c2.094-1.807 3.511-4.399 3.302-7.404-.112-1.723-.761-3.298-1.748-4.608-2.143-2.86-5.53-4.309-8.918-4.265zm.366 1.54c.312.008.623.027.933.063 2.48.288 4.842 1.496 6.4 3.577v.001c.829 1.1 1.355 2.386 1.446 3.792v.003c.173 2.477-.965 4.583-2.777 6.147a10.66 10.66 0 01-2.375 1.535 2.198 2.198 0 00-.98-.234 2.198 2.198 0 00-1.934 1.158 9.894 9.894 0 01-1.338.146 27.323 27.323 0 01-3.971-.148 2.198 2.198 0 00-1.932-1.156 2.198 2.198 0 00-1.347.463c-1.626-.553-3.078-1.422-4.155-2.762 1.052-.096 1.916-.6 2.319-1.408.443-.889.53-1.947.625-3.198v-.002c.175-2.391 1.11-4.536 2.92-5.964h.002c1.77-1.402 3.978-2.061 6.164-2.012zm-3.157 4.638c-.688 0-1.252.579-1.252 1.298 0 .72.564 1.297 1.252 1.297.689 0 1.252-.577 1.252-1.297 0-.711-.563-1.298-1.252-1.298zm5.514 0c-.688 0-1.25.579-1.25 1.298-.008.72.554 1.297 1.25 1.297.688 0 1.252-.577 1.252-1.297 0-.711-.564-1.298-1.252-1.298zM9.641 11.78a.72.72 0 00-.588.32.692.692 0 00-.11.54c.345 1.783 2.175 3.129 4.264 3.129h.125c1.056-.032 2.026-.343 2.816-.922.767-.556 1.29-1.316 1.477-2.137a.746.746 0 00-.094-.547.69.69 0 00-.445-.32.714.714 0 00-.867.539c-.22.93-1.299 1.9-2.934 1.94-1.572.046-2.738-.986-2.926-1.956a.72.72 0 00-.718-.586Z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.waze.com/\",hex:\"333665\"},Weasyl:{title:\"Weasyl\",slug:\"weasyl\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Weasyl icon</title><path d=\"M21.23 4.156a8.488 8.488 0 0 0-5.871-1.857c-3.766.243-6.324 2.662-7.364 6.481-1.28-1.224-1.892-3.238-2.093-5.54-1.02.215-1.658.702-2.233 1.237.445 2.316 1.802 4.015 3.264 5.158-2.559.317-5.99 2.442-6.771 4.904-.507 1.598.258 3.415 1.283 4.52 1.237 1.333 3.75 1.998 6.355 1.754.037.362-.104.536-.058.907 4.067-.306 7.174-1.646 10.04-3.894 1.119-.877 2.659-2.037 3.756-3.227 1.101-1.192 2.296-2.578 2.443-4.52.21-2.79-1.236-4.694-2.751-5.923zm-1.434 10.938c-1.035 1.001-2.241 1.797-3.351 2.675-1.249-1.987-2.583-3.984-3.887-5.917.017 2.63.006 5.432.04 7.957-.78.381-1.789.558-2.744.763-1.935-2.917-3.968-5.99-5.961-8.908.693-.447 1.627-.785 2.478-1.075 1.419 2.05 2.729 4.253 4.171 6.333.019-3.113-.009-6.673-.061-9.919a14.175 14.175 0 0 0 1.527-.434c1.813 2.721 3.553 5.628 5.464 8.359a547.35 547.35 0 0 1-.018-9.768c.858-.282 1.803-.535 2.669-.809.02 3.499-.338 7.128-.327 10.743z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.weasyl.com/\",hex:\"990000\"},WebAuthn:{title:\"WebAuthn\",slug:\"webauthn\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>WebAuthn icon</title><path d=\"M15.287 3.63a8.407 8.407 0 00-8.051 7.593h.55a7.805 7.805 0 012.24-4.713 5.825 5.825 0 00.924.695c-.608 1.177-.98 2.556-1.082 4.018h.135c.105-1.467.485-2.819 1.065-3.947.745.434 1.623.754 2.577.94a27.83 27.83 0 00-.25 3.763h-.847v.135h.847c.003 1.334.09 2.617.25 3.764-.954.185-1.832.506-2.577.94a9.997 9.997 0 01-.978-3.137h-.137c.164 1.16.502 2.25.997 3.208a5.825 5.825 0 00-.924.695 7.805 7.805 0 01-2.255-4.875H7.22A8.407 8.407 0 0024 12.034a8.398 8.398 0 00-.688-3.333 8.407 8.407 0 00-8.025-5.072zm.315.546c.155 0 .31.005.464.014.365.34.708 1.07.983 2.114a16.518 16.518 0 01.357 1.79 10.173 10.173 0 01-1.804.16 10.173 10.173 0 01-1.805-.16 16.519 16.519 0 01.357-1.79c.275-1.045.618-1.775.983-2.114a7.97 7.97 0 01.465-.014zm-.665.028c-.345.392-.658 1.093-.913 2.065a16.639 16.639 0 00-.36 1.8c-.939-.183-1.802-.498-2.533-.926.686-1.283 1.635-2.264 2.73-2.775a7.874 7.874 0 011.076-.164zm1.33 0a7.856 7.856 0 011.084.168c1.092.513 2.037 1.492 2.721 2.771-.73.428-1.594.743-2.533.927a16.64 16.64 0 00-.36-1.8c-.255-.972-.568-1.673-.912-2.066zm-2.972.314c-.655.407-1.257.989-1.776 1.73a8.166 8.166 0 00-.506.825 5.69 5.69 0 01-.891-.67 7.814 7.814 0 013.173-1.885zm4.624.006a7.862 7.862 0 013.164 1.877 5.692 5.692 0 01-.893.672 8.166 8.166 0 00-.506-.825c-.516-.738-1.115-1.318-1.765-1.724zm3.26 1.985a7.858 7.858 0 011.638 2.419 7.802 7.802 0 01.642 3.051h-2.095c-.01-1.74-.398-3.396-1.11-4.774a5.823 5.823 0 00.925-.696zm-1.044.767c.679 1.32 1.084 2.945 1.094 4.703h-3.42a27.863 27.863 0 00-.251-3.763c.954-.186 1.833-.506 2.577-.94zm-6.357.965a10.299 10.299 0 001.824.16 10.299 10.299 0 001.823-.16c.16 1.138.246 2.413.249 3.738h-1.178a1.03 1.03 0 01-.093.135h1.27a27.71 27.71 0 01-.248 3.739 10.397 10.397 0 00-3.647 0 27.733 27.733 0 01-.248-3.739h1.294a.99.99 0 01-.09-.135H13.53c.003-1.325.088-2.6.248-3.738zM2.558 9.37a2.585 2.585 0 00-2.547 2.35c-.142 1.541 1.064 2.842 2.566 2.842 1.26 0 2.312-.917 2.533-2.124h4.44v.972h.946v-.972h.837v1.431h.945v-2.376H5.11A2.586 2.586 0 002.558 9.37zm-.058.965a1.639 1.639 0 011.707 1.637 1.64 1.64 0 01-1.639 1.638 1.639 1.639 0 01-.068-3.275zm13.09.388a.75.75 0 00-.345 1.404l-.383 1.958h1.5l-.383-1.958a.75.75 0 00.384-.654.75.75 0 00-.773-.75zm2.218 1.391h3.421c-.01 1.758-.415 3.384-1.094 4.704-.744-.434-1.623-.755-2.577-.94a27.81 27.81 0 00.25-3.764zm3.556 0h2.095a7.805 7.805 0 01-2.281 5.47 5.825 5.825 0 00-.924-.696c.712-1.378 1.1-3.033 1.11-4.774zm-5.52 3.703a10.284 10.284 0 011.562.156 16.518 16.518 0 01-.357 1.791c-.275 1.045-.618 1.774-.982 2.114a7.972 7.972 0 01-.93 0c-.365-.34-.708-1.07-.983-2.114a16.519 16.519 0 01-.357-1.79 10.284 10.284 0 012.048-.157zm1.695.181c.94.184 1.803.5 2.533.926-.686 1.284-1.635 2.265-2.73 2.776a7.874 7.874 0 01-1.075.164c.344-.393.657-1.094.913-2.065a16.64 16.64 0 00.359-1.8zm-3.874 0a16.648 16.648 0 00.359 1.8c.255.973.568 1.674.913 2.066a7.873 7.873 0 01-1.075-.164c-1.096-.511-2.045-1.492-2.731-2.775.73-.428 1.594-.743 2.534-.927zm-2.652.997a8.16 8.16 0 00.506.825c.52.741 1.121 1.323 1.776 1.73a7.814 7.814 0 01-3.174-1.884 5.694 5.694 0 01.892-.67zm9.178 0a5.694 5.694 0 01.891.67 7.814 7.814 0 01-3.173 1.885c.654-.407 1.256-.989 1.775-1.73a8.16 8.16 0 00.507-.825z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/apowers313/webauthn-logos\",hex:\"3423A6\"},Webpack:{title:\"Webpack\",slug:\"webpack\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Webpack icon</title><path d=\"M21.0157 18.1202L12.351 23v-3.8007l5.3986-2.9567 3.266 1.8776zm.5927-.5344V7.3805l-3.1708 1.822v6.5593l3.1708 1.824zm-18.6827.5344L11.5904 23v-3.8007l-5.3986-2.9567-3.266 1.8776zm-.5927-.5344V7.3805l3.1707 1.822v6.5593l-3.1707 1.824zm.371-10.8656l8.8864-5.0056v3.6748L5.8974 8.507l-.0434.0248-3.15-1.8116zm18.5335 0L12.351 1.7146v3.6748l5.693 3.1177.0434.0248 3.15-1.8116zm-9.647 11.6146l-5.3262-2.9155V9.642l5.326 3.062v5.6308zm.7605 0l5.326-2.9155V9.642l-5.326 3.062v5.6308zM6.625 8.9734l5.3467-2.928 5.3468 2.928-5.3468 3.0744L6.625 8.9734z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://webpack.js.org/branding/\",hex:\"8DD6F9\"},\"webcomponents.org\":{title:\"webcomponents.org\",slug:\"webcomponents-dot-org\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>webcomponents.org icon</title><path d=\"M11.73 2.225l-.01.016H5.617l-5.618 9.738 5.618 9.736h12.799l.04.06 2.134-3.735.518-.893H21.1l.008-.014-.626-.75h.895l.006-.01.008.01 2.607-4.389-2.607-4.39-.003.005-.011-.019h-.945l.631-.764-2.607-4.569-.006.01-.024-.04H11.73zM9.106 6.824h6.189l-.529.764h-.024l2.398 4.015h.875l-.277.328.357.435h-.956l-2.398 4.015h.027l.523.764H9.073l-2.99-5.168 3.022-5.155z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.webcomponents.org/\",hex:\"29ABE2\"},Webmin:{title:\"Webmin\",slug:\"webmin\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Webmin icon</title><path d=\"M9.3 0C7.75.006 6.64 1.157 6.798 3.006c.102 1.227.209 2.473.313 3.729-1.08.455-2.218.934-3.428 1.446-1.255.536-2.123 1.609-2.457 2.885-.34 1.3-.135 2.808.723 4.143.763 1.195 1.856 2.006 3.255 2.445-.08 1.092.03 2.08.34 2.955.138.389.316.755.533 1.098.798 1.269 1.978 2.029 3.183 2.235a3.783 3.783 0 0 0 3.294-.998c.98-.945 1.907-1.838 2.79-2.684 1.047.63 2.056 1.235 3.038 1.827 1.604.957 3.243-.084 3.63-2.115.162-.847.09-1.792-.21-2.862.57-.351.925-.901 1.066-1.671.305-1.634-.503-3.782-1.827-4.88-.702-.582-1.427-1.177-2.164-1.783l-.005-.023c-.186-1.05-.367-2.08-.548-3.09-.306-1.724-1.799-3.538-3.374-4.04-.722-.23-1.393-.158-2.035.225-.779-.824-1.593-1.38-2.48-1.664A3.682 3.682 0 0 0 9.301 0zm1.019 2.479c.12-.003.25.012.381.048.467.125.912.49 1.155.932.198.368.29.67.37 1.298l.404 3.143c.013.099.027.195.038.293.115.889.644 1.528 1.33 1.619.659.087 1.01-.43.89-1.26a12.25 12.25 0 0 0-.038-.278l-.442-3.005c-.063-.425-.084-.75-.05-.96.052-.465.422-.707.896-.579.479.131.927.572 1.134 1.097.106.266.154.473.236.964.157.941.312 1.89.472 2.868.013.087.028.174.039.267.019.09.045.169.068.25l.002.014.001.002.023.084v-.002c0-.004 0-.007-.002-.01l.003.007v.003c.099.374.344.746.706 1.03.065.052.139.103.205.16.73.573 1.442 1.14 2.141 1.686.421.33.573.484.74.717.269.38.382.934.287 1.359-.087.393-.341.627-.658.59-.26-.031-.48-.137-.924-.465-.734-.55-1.484-1.112-2.26-1.684-.068-.048-.144-.1-.213-.152-.646-.476-1.208-.385-1.424.265-.222.666.09 1.449.754 1.914.072.05.153.107.223.158.81.567 1.605 1.12 2.38 1.66.329.229.573.444.735.638.357.409.527 1.08.404 1.642-.132.593-.514.902-.978.796-.235-.05-.411-.144-.832-.417-.817-.53-1.657-1.079-2.523-1.637-.08-.05-.16-.104-.237-.16-.273-.166-.537-.242-.768-.233h-.002c-.26-.017-.531.078-.792.286-.072.06-.146.117-.213.18-.809.666-1.647 1.375-2.535 2.122-.48.4-.696.557-1.017.67-.645.246-1.358-.03-1.804-.739-.421-.692-.404-1.589.032-2.154.185-.252.498-.54.93-.846.94-.672 1.83-1.305 2.676-1.912.077-.052.152-.104.228-.159.641-.455.764-1.26.312-2.011-.44-.75-1.17-.976-1.86-.559a5.307 5.307 0 0 0-.235.146c-.895.549-1.834 1.128-2.824 1.739-.638.384-.976.509-1.452.531-.59.03-1.205-.332-1.564-.904-.407-.636-.421-1.427-.03-1.918.22-.288.455-.463 1.13-.809 1.043-.54 2.045-1.048 2.995-1.525.082-.05.163-.084.247-.125.058-.029.112-.063.159-.097.425-.188.632-.657.566-1.293-.012-.107-.02-.21-.037-.312a375.257 375.257 0 0 0-.351-3.316c-.07-.66-.063-.892.021-1.154.1-.313.39-.493.752-.503zM7.11 6.736l.002.026a.022.022 0 0 1-.003-.005v-.018l.001-.002zm.004.043l.006.087c-.003-.026-.005-.051-.01-.08 0-.003.003-.005.004-.008zm.01.136l.003.025h-.002v-.015c0-.003.002-.005 0-.008v-.001zm.005.04v.012c-.001-.003-.003-.005-.003-.008.002 0 .002-.002.003-.004zm10.1 2.322l.002.012c0 .002 0 .004.003.007l-.006-.018zm.005.019c.005.015.008.034.013.05l-.01-.044a.011.011 0 0 1-.003-.007z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/webmin/webmin\",hex:\"7DA0D0\"},WebStorm:{title:\"WebStorm\",slug:\"webstorm\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>WebStorm icon</title><path d=\"M0 0v24h24V0H0zm17.889 2.889c1.444 0 2.667.444 3.667 1.278l-1.111 1.667c-.889-.611-1.722-1-2.556-1s-1.278.389-1.278.889v.056c0 .667.444.889 2.111 1.333 2 .556 3.111 1.278 3.111 3v.056c0 2-1.5 3.111-3.611 3.111-1.5-.056-3-.611-4.167-1.667l1.278-1.556c.889.722 1.833 1.222 2.944 1.222.889 0 1.389-.333 1.389-.944v-.056c0-.556-.333-.833-2-1.278-2-.5-3.222-1.056-3.222-3.056v-.056c0-1.833 1.444-3 3.444-3zm-16.111.222h2.278l1.5 5.778 1.722-5.778h1.667l1.667 5.778 1.5-5.778h2.333l-2.833 9.944H9.723L8.112 7.277l-1.667 5.778H4.612L1.779 3.111zm.5 16.389h9V21h-9v-1.5z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.jetbrains.com/company/brand/logos/\",hex:\"000000\"},WeChat:{title:\"WeChat\",slug:\"wechat\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>WeChat icon</title><path d=\"M23.541 12.748c-.609-1.38-1.758-2.476-3.092-3.151-2.354-1.192-5.281-1.185-7.629.03-1.631.837-2.993 2.337-3.379 4.162-.318 1.344-.033 2.791.68 3.961 1.061 1.762 2.979 2.887 4.971 3.248 1.443.293 2.936.119 4.338-.285.842.326 1.592.854 2.408 1.246-.211-.707-.436-1.406-.676-2.102.916-.65 1.746-1.461 2.244-2.479.744-1.415.789-3.171.135-4.63zm-9.924-9.466c-2.495-1.404-5.602-1.615-8.286-.645-1.764.635-3.36 1.815-4.346 3.42-.895 1.45-1.23 3.258-.799 4.917.433 1.84 1.711 3.383 3.262 4.413-.3.85-.585 1.699-.855 2.555.975-.51 1.95-1.043 2.926-1.561 1.17.375 2.415.559 3.66.518-.33-.943-.405-1.965-.255-2.951.225-1.371.975-2.625 1.994-3.554 1.726-1.615 4.171-2.296 6.496-2.131-.436-2.135-1.936-3.939-3.824-4.98h.027zm1.733 9.989c-.209.652-1.156.848-1.615.352-.506-.459-.309-1.418.355-1.623.734-.31 1.582.537 1.26 1.271zm4.795.092c-.256.586-1.141.723-1.576.27-.209-.191-.27-.479-.344-.73.104-.458.42-.933.93-.955.705-.098 1.336.773.975 1.416h.015zM12.99 6.909c.008.961-1.275 1.561-1.995.909-.747-.535-.535-1.837.342-2.106.785-.315 1.713.344 1.651 1.185l.002.012zm-6.059.244c-.172.835-1.291 1.238-1.946.678-.759-.535-.546-1.861.345-2.131.873-.336 1.865.55 1.601 1.453z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://worldvectorlogo.com/logo/wechat-3\",hex:\"7BB32E\"},WhatsApp:{title:\"WhatsApp\",slug:\"whatsapp\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>WhatsApp icon</title><path d=\"M17.498 14.382c-.301-.15-1.767-.867-2.04-.966-.273-.101-.473-.15-.673.15-.197.295-.771.964-.944 1.162-.175.195-.349.21-.646.075-.3-.15-1.263-.465-2.403-1.485-.888-.795-1.484-1.77-1.66-2.07-.174-.3-.019-.465.13-.615.136-.135.301-.345.451-.523.146-.181.194-.301.297-.496.1-.21.049-.375-.025-.524-.075-.15-.672-1.62-.922-2.206-.24-.584-.487-.51-.672-.51-.172-.015-.371-.015-.571-.015-.2 0-.523.074-.797.359-.273.3-1.045 1.02-1.045 2.475s1.07 2.865 1.219 3.075c.149.195 2.105 3.195 5.1 4.485.714.3 1.27.48 1.704.629.714.227 1.365.195 1.88.121.574-.091 1.767-.721 2.016-1.426.255-.705.255-1.29.18-1.425-.074-.135-.27-.21-.57-.345m-5.446 7.443h-.016c-1.77 0-3.524-.48-5.055-1.38l-.36-.214-3.75.975 1.005-3.645-.239-.375c-.99-1.576-1.516-3.391-1.516-5.26 0-5.445 4.455-9.885 9.942-9.885 2.654 0 5.145 1.035 7.021 2.91 1.875 1.859 2.909 4.35 2.909 6.99-.004 5.444-4.46 9.885-9.935 9.885M20.52 3.449C18.24 1.245 15.24 0 12.045 0 5.463 0 .104 5.334.101 11.893c0 2.096.549 4.14 1.595 5.945L0 24l6.335-1.652c1.746.943 3.71 1.444 5.71 1.447h.006c6.585 0 11.946-5.336 11.949-11.896 0-3.176-1.24-6.165-3.495-8.411\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.whatsappbrand.com\",hex:\"25D366\"},\"When I Work\":{title:\"When I Work\",slug:\"wheniwork\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>When I Work icon</title><path d=\"M12 24C5.342 24 0 18.582 0 12 0 5.342 5.342 0 12 0s12 5.342 12 12c0 6.582-5.342 12-12 12zm0-21.986c-5.497 0-9.987 4.489-9.987 9.986 0 5.498 4.49 9.988 9.987 9.988 5.498 0 9.987-4.49 9.987-9.988 0-5.497-4.489-9.986-9.987-9.986zm5.885 11.148H9.213c-.384 0-.695-.309-.698-.691v-1.012c0-.387.311-.697.698-.697h8.748c.387 0 .697.311.697.697v1.006c-.077.387-.387.697-.773.697zm-2.246-3.871H6.891c-.383.002-.697-.307-.698-.691V7.59c0-.311.31-.621.697-.621h8.748c.31 0 .62.311.62.619v1.006c.001.386-.31.697-.619.697zm-8.748 5.418h8.748c.388 0 .696.311.696.697v1.006c.002.383-.309.695-.691.697H6.891c-.388-.076-.697-.387-.697-.773V15.33c-.001-.31.309-.621.697-.621z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://wheniwork.com/\",hex:\"51A33D\"},WhiteSource:{title:\"WhiteSource\",slug:\"whitesource\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>WhiteSource icon</title><path d=\"M12 0C5.373 0 0 5.372 0 12c0 6.627 5.373 12 12 12 6.628 0 12-5.373 12-12 0-6.628-5.372-12-12-12zm-1.58 4.916h3.167v5.268h.657V5.818c2.971 1.432 2.554 5.28 2.586 5.136h.718v1.014H6.452v-1.014h.718s-.687-3.559 2.587-5.136v4.366h.662zm-3.968 8.002h3.18V13.464A2.376 2.376 0 0012 15.833a2.376 2.376 0 002.369-2.369V12.918h3.18v2.066h-1.292l-.416.928.872.768-1.596 1.697-.911-.919-.988.424v1.202h-2.436v-1.202l-.987-.424-.912.919-1.595-1.697.871-.768-.415-.928H6.452z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.whitesourcesoftware.com/whitesource-media-kit/\",hex:\"161D4E\"},Wii:{title:\"Wii\",slug:\"wii\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Wii icon</title><path d=\"M17.904 6.261c-.729-.014-1.33.565-1.344 1.293v.018c.012.732.612 1.315 1.344 1.305.783 0 1.404-.579 1.404-1.305.001-.732-.62-1.311-1.404-1.311zm4.71 0c-.747 0-1.36.58-1.36 1.311 0 .711.613 1.305 1.361 1.305.767 0 1.385-.579 1.385-1.305 0-.732-.618-1.311-1.386-1.311zm-14.84.543c-.748 0-1.252.374-1.514 1.215-.242.857-1.794 6.822-1.794 6.822L2.43 6.897H0s2.334 8.464 2.652 9.456c.241.765.84 1.386 1.7 1.386 1.009 0 1.479-.732 1.684-1.386.225-.676 1.738-6.261 1.738-6.261s1.515 5.589 1.719 6.261c.225.653.69 1.386 1.682 1.386.879 0 1.456-.621 1.72-1.386.315-.99 2.657-9.456 2.657-9.456h-2.45l-2.021 7.944s-1.55-5.965-1.812-6.822c-.242-.844-.77-1.215-1.495-1.215zm9.008 3.363v7.495h2.322v-7.495h-2.322zm4.693 0v7.495h2.317v-7.495h-2.317z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://de.wikipedia.org/wiki/Datei:WiiU.svg\",hex:\"8B8B8B\"},\"Wii U\":{title:\"Wii U\",slug:\"wiiu\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Wii U icon</title><path d=\"M11.133 8.432c-.465 0-.835.359-.835.814.007.454.381.817.835.812.488 0 .873-.358.873-.81 0-.455-.385-.816-.873-.816zm2.93 0c-.465 0-.848.359-.848.814 0 .442.383.812.848.812.477 0 .861-.358.861-.81 0-.455-.385-.816-.861-.816zm3.655.011c-.53 0-.99.335-.99.858v3.315c0 .809.56 1.289 1.377 1.289h4.647c.689 0 1.248-.477 1.248-1.162V9.345c0-.412-.308-.86-.688-.86h-1.075v2.799c0 2.122-3.701 2.104-3.701.04v-2.88h-.818zm1.679 0v2.453c0 1.636 1.934 1.402 1.934.256V8.445h-1.934v-.002zM4.833 8.77c-.465 0-.776.232-.938.756-.152.533-1.116 4.242-1.116 4.242l-1.267-4.94H0s1.451 5.264 1.65 5.881c.15.476.521.86 1.058.86.627 0 .917-.454 1.045-.86.14-.421 1.08-3.895 1.08-3.895s.942 3.476 1.069 3.895c.14.406.431.86 1.047.86.547 0 .906-.385 1.07-.86.196-.617 1.65-5.881 1.65-5.881H8.148l-1.258 4.94s-.963-3.709-1.125-4.242c-.15-.526-.479-.756-.93-.756h-.002zm5.605 2.09v4.662h1.441V10.86h-1.441zm2.916 0v4.662h1.442V10.86h-1.442z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://de.wikipedia.org/wiki/Datei:WiiU.svg\",hex:\"8B8B8B\"},Wikipedia:{title:\"Wikipedia\",slug:\"wikipedia\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Wikipedia icon</title><path d=\"M12.09 13.119c-.936 1.932-2.217 4.548-2.853 5.728-.616 1.074-1.127.931-1.532.029-1.406-3.321-4.293-9.144-5.651-12.409-.251-.601-.441-.987-.619-1.139-.181-.15-.554-.24-1.122-.271C.103 5.033 0 4.982 0 4.898v-.455l.052-.045c.924-.005 5.401 0 5.401 0l.051.045v.434c0 .119-.075.176-.225.176l-.564.031c-.485.029-.727.164-.727.436 0 .135.053.33.166.601 1.082 2.646 4.818 10.521 4.818 10.521l.136.046 2.411-4.81-.482-1.067-1.658-3.264s-.318-.654-.428-.872c-.728-1.443-.712-1.518-1.447-1.617-.207-.023-.313-.05-.313-.149v-.468l.06-.045h4.292l.113.037v.451c0 .105-.076.15-.227.15l-.308.047c-.792.061-.661.381-.136 1.422l1.582 3.252 1.758-3.504c.293-.64.233-.801.111-.947-.07-.084-.305-.22-.812-.24l-.201-.021c-.052 0-.098-.015-.145-.051-.045-.031-.067-.076-.067-.129v-.427l.061-.045c1.247-.008 4.043 0 4.043 0l.059.045v.436c0 .121-.059.178-.193.178-.646.03-.782.095-1.023.439-.12.186-.375.589-.646 1.039l-2.301 4.273-.065.135 2.792 5.712.17.048 4.396-10.438c.154-.422.129-.722-.064-.895-.197-.172-.346-.273-.857-.295l-.42-.016c-.061 0-.105-.014-.152-.045-.043-.029-.072-.075-.072-.119v-.436l.059-.045h4.961l.041.045v.437c0 .119-.074.18-.209.18-.648.03-1.127.18-1.443.421-.314.255-.557.616-.736 1.067 0 0-4.043 9.258-5.426 12.339-.525 1.007-1.053.917-1.503-.031-.571-1.171-1.773-3.786-2.646-5.71l.053-.036z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://en.wikipedia.org/wiki/Logo_of_Wikipedia\",hex:\"000000\"},Windows:{title:\"Windows\",slug:\"windows\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Windows icon</title><path d=\"M0 3.449L9.75 2.1v9.451H0m10.949-9.602L24 0v11.4H10.949M0 12.6h9.75v9.451L0 20.699M10.949 12.6H24V24l-12.9-1.801\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://commons.wikimedia.org/wiki/File:Windows_10_Logo.svg\",hex:\"0078D6\"},Wire:{title:\"Wire\",slug:\"wire\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Wire icon</title><path d=\"M24 14.475c.009 4.084-3.296 7.401-7.38 7.41h-.016c-1.637-.015-3.222-.58-4.5-1.605-3.269 2.544-7.981 1.957-10.524-1.313-1-1.286-1.555-2.862-1.58-4.492V2.82h1.41v11.655c-.002 3.314 2.683 6.002 5.996 6.004 1.293.001 2.552-.416 3.589-1.189-1.163-1.335-1.806-3.043-1.815-4.814v-9.54c0-1.557 1.263-2.82 2.82-2.82s2.82 1.263 2.82 2.82v9.54c.006 1.766-.623 3.474-1.77 4.814 2.674 1.957 6.429 1.371 8.383-1.304.745-1.019 1.149-2.248 1.157-3.511V2.82H24v11.655zm-10.59-9.54c0-.778-.632-1.41-1.41-1.41-.779 0-1.41.631-1.41 1.41v9.54c.002 1.41.501 2.776 1.41 3.855.908-1.079 1.408-2.445 1.41-3.855v-9.54z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://brand.wire.com\",hex:\"000000\"},WireGuard:{title:\"WireGuard\",slug:\"wireguard\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>WireGuard icon</title><path d=\"M23.98 11.645S24.533 0 11.735 0C.418 0 .064 11.17.064 11.17S-1.6 24 11.997 24C25.04 24 23.98 11.645 23.98 11.645zM8.155 7.576c2.4-1.47 5.469-.571 6.618 1.638.218.419.246 1.063.108 1.503-.477 1.516-1.601 2.366-3.145 2.728.455-.39.817-.832.933-1.442a2.112 2.112 0 0 0-.364-1.677 2.14 2.14 0 0 0-2.465-.75c-.95.36-1.47 1.228-1.377 2.294.087.99.839 1.632 2.245 1.876-.21.111-.372.193-.53.281a5.113 5.113 0 0 0-1.644 1.43c-.143.192-.24.208-.458.075-2.827-1.729-3.009-6.067.078-7.956zM6.04 18.258c-.455.116-.895.286-1.359.438.227-1.532 2.021-2.943 3.539-2.782a3.91 3.91 0 0 0-.74 2.072c-.504.093-.98.155-1.44.272zM15.703 3.3c.448.017.898.01 1.347.02a2.324 2.324 0 0 1 .334.047 3.249 3.249 0 0 1-.34.434c-.16.15-.341.296-.573.069-.055-.055-.187-.042-.283-.044-.447-.005-.894-.02-1.34-.003a8.323 8.323 0 0 0-1.154.118c-.072.013-.178.25-.146.338.078.207.191.435.359.567.619.49 1.277.928 1.9 1.413.604.472 1.167.99 1.51 1.7.446.928.46 1.9.267 2.877-.322 1.63-1.147 2.98-2.483 3.962-.538.395-1.205.62-1.821.903-.543.25-1.1.465-1.644.712-.98.446-1.53 1.51-1.369 2.615.149 1.015 1.04 1.862 2.059 2.037 1.223.21 2.486-.586 2.785-1.83.336-1.397-.423-2.646-1.845-3.024l-.256-.066c.38-.17.708-.291 1.012-.458q.793-.437 1.558-.925c.15-.096.231-.096.36.014.977.846 1.56 1.898 1.724 3.187.27 2.135-.74 4.096-2.646 5.101-2.948 1.555-6.557-.215-7.208-3.484-.558-2.8 1.418-5.34 3.797-5.83 1.023-.211 1.958-.637 2.685-1.425.47-.508.697-.944.775-1.141a3.165 3.165 0 0 0 .217-1.158 2.71 2.71 0 0 0-.237-.992c-.248-.566-1.2-1.466-1.435-1.656l-2.24-1.754c-.079-.065-.168-.06-.36-.047-.23.016-.815.048-1.067-.018.204-.155.76-.38 1-.56-.726-.49-1.554-.314-2.315-.46.176-.328 1.046-.831 1.541-.888a7.323 7.323 0 0 0-.135-.822c-.03-.111-.154-.22-.263-.283-.262-.154-.541-.281-.843-.434a1.755 1.755 0 0 1 .906-.28 3.385 3.385 0 0 1 .908.088c.54.123.97.042 1.399-.324-.338-.136-.676-.26-1.003-.407a9.843 9.843 0 0 1-.942-.493c.85.118 1.671.437 2.54.32l.022-.118-2.018-.47c1.203-.11 2.323-.128 3.384.388.299.146.61.266.897.432.14.08.233.24.348.365.09.098.164.23.276.29.424.225.89.234 1.366.223l.01-.16c.479.15 1.017.702 1.017 1.105-.776 0-1.55-.003-2.325.004-.083 0-.165.061-.247.094.078.046.155.128.235.131z M14.703 2.153a.118.118 0 0 0-.016.19.179.179 0 0 0 .246.065c.075-.038.148-.078.238-.125-.072-.062-.13-.114-.19-.163-.106-.087-.193-.032-.278.033z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.wireguard.com/img/wireguard.svg\",hex:\"88171A\"},Wish:{title:\"Wish\",slug:\"wish\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Wish icon</title><path d=\"M21.463,8.653c-0.627,0-1.211,0.511-1.297,1.135l-0.637,4.647c-0.07,0.506-0.313,0.945-0.727,1.317 c-0.415,0.372-0.882,0.558-1.4,0.558c-0.504,0-0.913-0.182-1.224-0.547c-0.313-0.365-0.433-0.808-0.361-1.329l0.385-2.82 c0.012-0.563-0.411-1.003-0.993-1.003h-1.525c-0.582,0-1.127,0.44-1.27,1.003l-0.397,2.82c-0.072,0.521-0.315,0.964-0.729,1.329 c-0.414,0.365-0.872,0.547-1.376,0.547c-0.504,0-0.915-0.186-1.234-0.558c-0.319-0.372-0.443-0.811-0.373-1.317l0.854-6.166 c0.091-0.6-0.265-1.228-0.808-1.482c0,0-6.43-2.68-6.849-2.853C1.077,3.76,0.596,4.15,0.432,4.8L0.039,6.351 C-0.126,7,0.246,7.739,0.863,7.992l4.31,1.784l-0.646,4.659c-0.217,1.563,0.15,2.899,1.1,4.008c0.95,1.11,2.203,1.664,3.76,1.664 c1.437,0,2.748-0.483,3.934-1.451c0.947,0.968,2.133,1.451,3.555,1.451c1.556,0,2.962-0.554,4.22-1.664 c1.257-1.109,1.995-2.446,2.211-4.008c0,0,0.675-4.917,0.688-5.003c0.059-0.429-0.406-0.779-1.032-0.779L21.463,8.653L21.463,8.653 z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://wish.com/\",hex:\"2FB7EC\"},Wix:{title:\"Wix\",slug:\"wix\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Wix icon</title><path d=\"M22.989 2.339h-1.554l-1.088-.003c-.861 0-1.654.655-2.261 1.176-.601.496-1.11 1.111-1.591 1.726a9.671 9.671 0 0 0-.646-1.365c-.314-.616-.914-1.201-1.605-1.336-.346-.075-.735-.045-1.08-.045h-2.31c-.352 0-.736-.045-1.081.03-.682.135-1.291.72-1.599 1.336-.24.42-.465.885-.642 1.365-.485-.615-.991-1.23-1.582-1.74-.607-.526-1.396-1.186-2.26-1.186H1.057c-.375 0-1.213-.106-1.014.51.045.15.214.285.31.405.11.135.218.285.313.435.15.24.297.48.438.736.339.6.626 1.23.963 1.831.74 1.336 1.534 2.627 2.492 3.813.709.87 1.564 1.756 2.622 2.191l-2.383 4.503c-.69 1.276-1.381 2.567-2.106 3.828l-.105.18c-.095.181-.231.436-.23.631 0 .406.6.42.9.42.316 0 .631-.014.946-.014.54-.017 1.081-.017 1.636-.031.316 0 .646.015.976-.029a2.936 2.936 0 0 0 2.056-1.171c.15-.226 1.622-2.642 2.222-3.618.225-.375.93-1.471.93-1.471s.706 1.096.931 1.471c.586.977 2.057 3.378 2.222 3.604.48.66 1.23 1.08 2.057 1.154.314.03.645.016.959.016l1.638.015h.944c.287 0 .901-.015.901-.435 0-.211-.135-.463-.239-.643l-.105-.18c-.736-1.276-1.411-2.553-2.102-3.828-.795-1.486-1.59-2.987-2.401-4.458 1.065-.435 1.905-1.32 2.627-2.191.96-1.186 1.739-2.492 2.491-3.813.33-.615.615-1.246.959-1.846.137-.255.287-.495.437-.736.091-.15.195-.3.315-.435.09-.13.256-.264.316-.405.194-.617-.609-.386-.984-.397zM10.287 5.27c.063-.007.11.159.143.495l.005.017c0 .015-.151 0-.286-.015l-.165-.03c-.075-.015-.15-.045-.225-.075-.201-.068-.321-.163-.411-.233a.528.528 0 0 1-.135-.144c.48.008.837.005 1.074-.015zm.182 2.418v-.014h.005l-.005.014zm.016-.052c-.107.117-.267.162-.42.192-.15.031-.324.054-.465-.022-.164-.085-.23-.284-.275-.45-.06-.21-.112-.438-.09-.66h.014c0-.123.045-.253.09-.363a.644.644 0 0 1 .183-.24c.213-.16.536-.16.728.03a.933.933 0 0 1 .206.312c.111.258.195.555.177.841a.6.6 0 0 1-.148.36zm2.091.412c-.021.03-.049.045-.075.06a.831.831 0 0 1-.513.15.828.828 0 0 1-.513-.15.186.186 0 0 1-.072-.06c-.009 0-.016-.015-.016-.03 0-.009.004-.017.01-.024v.039c.014-.015.039-.015.054-.015.021.015.04.03.066.045a.797.797 0 0 0 .471.135.814.814 0 0 0 .474-.135c.024-.015.045-.045.069-.06.023-.015.045-.015.06 0s.007.03-.015.045zm2.07-.69c-.045.165-.112.375-.277.45-.141.075-.316.049-.467.019-.152-.03-.31-.076-.42-.19a.604.604 0 0 1-.146-.36c-.019-.288.067-.584.179-.844a.94.94 0 0 1 .205-.312c.191-.188.514-.188.728-.03a.663.663 0 0 1 .183.24v.007c.056.113.091.235.105.36.021.225-.033.45-.09.66zm-.025-1.921c-.088.075-.21.165-.408.225a1.57 1.57 0 0 1-.227.064c-.014.005-.084.015-.164.03l-.002.026c-.131.015-.283.03-.28 0 .032-.33.078-.495.144-.495.236.03.592.03 1.072.015a.446.446 0 0 1-.135.135z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://www.wix.com/about/design-assets\",hex:\"FAAD4D\"},Wolfram:{title:\"Wolfram\",slug:\"wolfram\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Wolfram icon</title><path d=\"M20.105 12.001l3.307-3.708-4.854-1.059.495-4.944-4.55 1.996L12 0 9.495 4.287 4.947 2.291l.494 4.944L.587 8.289l3.305 3.707-3.305 3.713 4.854 1.053-.5 4.945 4.553-1.994L12 24l2.504-4.287 4.55 1.994-.495-4.938 4.854-1.06-3.308-3.708zm1.605 2.792l-2.861-.982-1.899-2.471 2.526.942 2.234 2.511zm.459-6.096l-2.602 2.918-3.066-1.141 1.844-2.612 3.824.835zm-4.288-1.324l-1.533 2.179.088-3.162 1.788-2.415-.343 3.398zm-3.304-2.399l3.091-1.354L15.9 5.998l-2.943 1.049 1.62-2.073zm1.187 1.772l-.096 3.652-3.341 1.12V7.969l3.437-1.223zM12 1.308l1.969 3.371L12 7.199l-1.971-2.521L12 1.308zM9.423 4.974l1.619 2.072-2.948-1.048L6.332 3.62l3.091 1.354zm2.245 2.995v3.549l-3.335-1.12-.102-3.652 3.437 1.223zM7.564 6.39l.086 3.162-1.532-2.179-.341-3.397L7.564 6.39zM1.83 8.692l3.824-.83 1.839 2.612-3.065 1.136L1.83 8.692zm2.694 3.585l2.526-.937-1.9 2.471-2.861.977 2.235-2.511zm-2.093 3.159l2.929-1 3.045.896-2.622.837-3.352-.733zm3.28 5.212l.392-3.896 3.111-.982.082 3.31-3.585 1.568zm3.691-5.708l-3.498-1.03 2.226-2.892 3.335 1.126-2.063 2.796zm2.266 7.191l-1.711-2.934-.066-2.771 1.777 2.597v3.108zm-1.73-6.8L12 12.532l2.063 2.799L12 18.336l-2.062-3.005zm4.104 3.866l-1.715 2.934v-3.107l1.782-2.597-.067 2.77zm-1.514-7.052l3.341-1.126 2.221 2.892-3.499 1.03-2.063-2.796zm2.175 6.935l.077-3.31 3.116.982.386 3.901-3.579-1.573zm3.514-2.912l-2.625-.837 3.049-.896 2.928 1.003-3.352.73z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://company.wolfram.com/press-center/wolfram-corporate/\",hex:\"DD1100\"},\"Wolfram Language\":{title:\"Wolfram Language\",slug:\"wolframlanguage\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Wolfram Language icon</title><path d=\"M14.335 12.432c-.552.149-.615.18-1.164.337-.589-.337-1.107-.526-1.595-.463.057-.306.151-.525.245-.8 1.036-.151 1.805.4 2.514.926zM19.643 19.633a10.796 10.796 0 0 1-1.907 1.521h-.006l-3.702-4.614 3.07.336s1.471.151 1.807 0c.308-.117 1.963-2.449 1.963-2.449s-4.759-3.009-6.384-4.666c.188-2.794-.213-6.509-.213-6.479-1.193 1.195-1.35 1.383-2.544 2.489-.52-1.688-.769-2.269-1.289-3.958-1.568 1.289-2.763 3.464-3.62 6.016a12.29 12.29 0 0 0-.551.656c-.112.157-.23.313-.344.475-.231.326-.45.675-.663 1.032-.15.257-.299.52-.438.788-.063.112-.125.231-.188.35-.913 1.788-1.676 3.789-2.339 5.604A10.825 10.825 0 0 1 1.204 12c0-2.863 1.138-5.614 3.164-7.64S9.137 1.201 12 1.201a10.8 10.8 0 0 1 7.642 3.158 10.831 10.831 0 0 1 3.156 7.64 10.814 10.814 0 0 1-3.155 7.634M12 6.691c.832-.801.951-.92 1.751-1.689.063 1.532.031 2.333-.063 4.203-.463-.458-1.381-1.044-1.381-1.044s-.181-1.07-.307-1.47m3.834 15.464c-6.616 2.393-11.398-2.014-12.417-3.552.006-.014.006-.027.006-.039.92-3.889 2.058-8.535 3.884-9.91.955-1.656 1.231-4.114 2.943-5.402.432 1.288 1.107 3.958 1.57 5.246 2.025 2.026 5.087 4.546 7.146 5.59.212.12.489.981.489.981l-.825 1.038-8.835-.887c-.2-.02-.394-.028-.594-.028-.569 0-1.15.073-1.833.18.432-1.071 1.35-1.936 1.35-1.936s-.855-.519-1.505-.605c.187-.432.681-.989.799-1.138-.243.087-2.025.888-2.207 1.563.857.214 1.469.487 1.469.487s-.949.957-1.131 2.612c0 0 2.82-.431 4.939-.153.063.03.094.03.125.03l1.102.031 3.509 5.841.027.045a.012.012 0 0 1-.011.006m4.652-18.64A12.02 12.02 0 0 0 12 0C8.818 0 5.768 1.27 3.516 3.515 1.272 5.766.002 8.817.002 12s1.27 6.235 3.513 8.478a11.98 11.98 0 0 0 16.971 0c2.251-2.243 3.512-5.296 3.512-8.478s-1.261-6.234-3.512-8.485z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://company.wolfram.com/press-center/language/\",hex:\"DD1100\"},\"Wolfram Mathematica\":{title:\"Wolfram Mathematica\",slug:\"wolframmathematica\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Wolfram Mathematica icon</title><path d=\"M15.74 10.7c-.53-1.53.14-4 .14-4S13.6 8.01 11.93 8 8.13 6.7 8.13 6.7s.56 2.46.07 4.04c-.48 1.58-2.47 3.34-2.47 3.34s2.58.23 3.85 1.1S12 18.64 12 18.64s.78-2.35 2.32-3.41c1.54-1.07 3.96-1.15 3.96-1.15s-2-1.84-2.54-3.37zm-2 3.69c-1.09.81-1.75 2.19-1.75 2.19s-.76-1.43-1.8-2.22c-1.05-.79-2.57-.97-2.57-.97a5.06 5.06 0 0 0 1.53-2.37c.46-1.54.18-2.73.18-2.73s.92.7 2.62.7c1.7 0 2.79-.7 2.79-.7s-.38 1.58.07 2.7c.44 1.14 1.57 2.41 1.57 2.41s-1.56.17-2.64.99zM13.73 9.6s-.95.38-1.77.37c-.82 0-1.7-.37-1.7-.37.05.58 0 1.15-.17 1.7-.27.86-.91 1.64-.91 1.64A4.23 4.23 0 0 1 12 14.95s.45-.85 1.18-1.33c.5-.31 1.05-.55 1.63-.7 0 0-.74-.78-1.02-1.57-.28-.78-.06-1.75-.06-1.75zM20.1 12l3.31-3.7-4.85-1.07.5-4.94-4.56 2L12 0 9.5 4.29l-4.55-2 .49 4.95L.59 8.29 3.89 12 .6 15.7l4.85 1.07-.5 4.94 4.55-2L12 24l2.5-4.29 4.56 2-.5-4.94 4.85-1.06-3.3-3.71zm-5.27 3.95C14 16.56 12 20.81 12 20.81S10.5 16.95 9 15.95c-1.48-1-5.38-1.22-5.38-1.22s2.99-2.37 3.57-4.47c.59-2.1-.37-5.37-.37-5.37s2.9 2.1 5.08 2.1c2.17 0 5.26-2.1 5.26-2.1s-.82 4.5-.53 5.46c.3.96 3.73 4.38 3.73 4.38s-4.7.62-5.54 1.22z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://company.wolfram.com/press-center/mathematica/\",hex:\"DD1100\"},WordPress:{title:\"WordPress\",slug:\"wordpress\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>WordPress icon</title><path d=\"M21.469 6.825c.84 1.537 1.318 3.3 1.318 5.175 0 3.979-2.156 7.456-5.363 9.325l3.295-9.527c.615-1.54.82-2.771.82-3.864 0-.405-.026-.78-.07-1.11m-7.981.105c.647-.03 1.232-.105 1.232-.105.582-.075.514-.93-.067-.899 0 0-1.755.135-2.88.135-1.064 0-2.85-.15-2.85-.15-.585-.03-.661.855-.075.885 0 0 .54.061 1.125.09l1.68 4.605-2.37 7.08L5.354 6.9c.649-.03 1.234-.1 1.234-.1.585-.075.516-.93-.065-.896 0 0-1.746.138-2.874.138-.2 0-.438-.008-.69-.015C4.911 3.15 8.235 1.215 12 1.215c2.809 0 5.365 1.072 7.286 2.833-.046-.003-.091-.009-.141-.009-1.06 0-1.812.923-1.812 1.914 0 .89.513 1.643 1.06 2.531.411.72.89 1.643.89 2.977 0 .915-.354 1.994-.821 3.479l-1.075 3.585-3.9-11.61.001.014zM12 22.784c-1.059 0-2.081-.153-3.048-.437l3.237-9.406 3.315 9.087c.024.053.05.101.078.149-1.12.393-2.325.609-3.582.609M1.211 12c0-1.564.336-3.05.935-4.39L7.29 21.709C3.694 19.96 1.212 16.271 1.211 12M12 0C5.385 0 0 5.385 0 12s5.385 12 12 12 12-5.385 12-12S18.615 0 12 0\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://wordpress.org/about/logos\",hex:\"21759B\"},Workplace:{title:\"Workplace\",slug:\"workplace\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Workplace icon</title><path d=\"M12.725 0C11.114 0 9.55.317 8.078.943a11.892 11.892 0 00-3.793 2.573A11.986 11.986 0 00.79 12a11.986 11.986 0 003.496 8.484 11.892 11.892 0 003.793 2.573c1.472.626 3.042.943 4.652.943.867 0 1.718-.094 2.565-.28v-2.534a9.524 9.524 0 01-2.565.353 9.406 9.406 0 01-6.71-2.795A9.502 9.502 0 013.24 12a9.5 9.5 0 012.778-6.744 9.398 9.398 0 016.707-2.795c4.439 0 8.037 3.618 8.037 8.082 0 1.647-.49 3.181-1.332 4.459l-2.09-5.166c-.306-.755-.67-1.895-2.059-1.895-1.387 0-1.75 1.14-2.054 1.895l-1.922 4.771-2.578-6.544h-2.71l3.213 7.95c.326.807.68 1.897 2.077 1.897 1.395 0 1.747-1.09 2.072-1.896l1.904-4.727 1.914 4.727c.387.973.797 1.894 2.07 1.894.903 0 1.475-.583 1.788-.959a10.54 10.54 0 002.156-6.406C23.21 4.72 18.516 0 12.725 0Z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://en.facebookbrand.com/\",hex:\"20252D\"},\"WP Engine\":{title:\"WP Engine\",slug:\"wpengine\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>WP Engine icon</title><path d=\"M8.1 24h7.8v-5.85l-1.95-1.801h-3.9L8.1 18.15V24zM18.15 8.1l-1.801 1.95v3.9l1.801 1.95H24V8.1h-5.85zM15.9 0H8.1v5.85l1.95 1.801h3.9L15.9 5.85V0zM24 24v-5.85l-1.801-1.801h-5.85V24H24zM1.8 0L0 1.8v5.85h7.65V0H1.8zm14.55 0v5.85l1.8 1.8H24V0h-7.65zM12 13.05c-.6 0-1.05-.45-1.05-1.05s.45-1.05 1.05-1.05 1.05.45 1.05 1.05-.45 1.05-1.05 1.05m-4.35 5.1l-1.8-1.8H0V24h5.85l1.801-1.801V18.15zm0-10.05H0v7.8h5.85l1.801-1.95V8.1z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://wpengine.com/\",hex:\"40BAC8\"},\"write.as\":{title:\"write.as\",slug:\"write-dot-as\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>write.as icon</title><path d=\"M12.815,5.139l2.179,7.509c0.107,0.381,0.22,0.793,0.339,1.236c0.12,0.443,0.229,0.85,0.327,1.223h0.025 c0.054-0.372,0.145-0.772,0.273-1.204c0.129-0.429,0.246-0.821,0.353-1.176l1.05-3.442c0.079-0.248,0.15-0.472,0.213-0.671 c0.062-0.199,0.126-0.382,0.192-0.551c0.068-0.167,0.131-0.327,0.194-0.478c0.062-0.151,0.132-0.301,0.213-0.451V7.106 l-1.569,0.105V5.139h5.169V6.88c-0.364,0-0.682,0.119-0.956,0.358c-0.275,0.239-0.512,0.524-0.711,0.85 c-0.201,0.328-0.364,0.657-0.493,0.984c-0.129,0.328-0.224,0.581-0.286,0.758l-3.096,8.997h-2.884l-1.874-5.807 c-0.053-0.142-0.12-0.345-0.199-0.606c-0.079-0.261-0.161-0.545-0.247-0.85c-0.083-0.307-0.173-0.623-0.265-0.95 c-0.092-0.328-0.179-0.638-0.259-0.931h-0.026c-0.053,0.381-0.14,0.809-0.26,1.283c-0.119,0.474-0.243,0.937-0.372,1.388 c-0.128,0.451-0.248,0.859-0.358,1.223c-0.111,0.364-0.194,0.62-0.246,0.771l-1.501,4.479H5.04L1.745,9.392 C1.62,9.046,1.523,8.767,1.452,8.555C1.381,8.342,1.321,8.157,1.273,8.002C1.223,7.848,1.186,7.709,1.16,7.584 C1.133,7.459,1.101,7.319,1.066,7.159L0.003,7.212V5.139h6.526V6.88C6.147,6.907,5.879,7.021,5.723,7.225 C5.568,7.429,5.492,7.691,5.492,8.009C5.483,8.16,5.493,8.32,5.524,8.487c0.032,0.169,0.074,0.342,0.128,0.519l0.916,3.322 c0.107,0.399,0.21,0.818,0.312,1.256c0.101,0.438,0.184,0.884,0.247,1.336h0.026c0.044-0.195,0.088-0.394,0.134-0.598 c0.044-0.204,0.092-0.424,0.145-0.658c0.054-0.235,0.116-0.492,0.186-0.771c0.072-0.278,0.155-0.587,0.254-0.922l1.993-6.832 C9.864,5.139,12.815,5.139,12.815,5.139z M24.003,16.628c0,1.233-1,2.233-2.233,2.233c-1.233,0-2.231-1-2.231-2.233 c0-1.233,0.998-2.233,2.231-2.233S24.003,15.395,24.003,16.628\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://write.as/brand\",hex:\"5BC4EE\"},Xamarin:{title:\"Xamarin\",slug:\"xamarin\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Xamarin icon</title><path d=\"M7.137 1.422c-.891 0-1.576.275-2.055 1.1-.479.821-4.389 7.61-4.8 8.226-.413.617-.413 1.374.273 2.607.686 1.234 4.115 7.269 4.527 8.024.412.755 1.028 1.2 2.055 1.2h9.73c1.03 0 1.647-.448 2.057-1.2.412-.755 3.84-6.787 4.525-8.024.681-1.233.681-1.99.272-2.607-.412-.617-4.32-7.402-4.801-8.227-.479-.821-1.164-1.1-2.055-1.1H7.137zm-.45 5.074h2.297l3.028 5.307 3.025-5.307h2.299l-3.086 5.502 3.086 5.502h-2.264l-3.06-5.307-3.06 5.307H6.687l3.083-5.502-3.084-5.502Z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://dotnet.microsoft.com/apps/xamarin\",hex:\"4393D4\"},Xbox:{title:\"Xbox\",slug:\"xbox\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Xbox icon</title><path d=\"M4.102 21.033C6.211 22.881 8.977 24 12 24c3.026 0 5.789-1.119 7.902-2.967 1.877-1.912-4.316-8.709-7.902-11.417-3.582 2.708-9.779 9.505-7.898 11.417zm11.16-14.406c2.5 2.961 7.484 10.313 6.076 12.912C23.002 17.48 24 14.861 24 12.004c0-3.34-1.365-6.362-3.57-8.536 0 0-.027-.022-.082-.042-.063-.022-.152-.045-.281-.045-.592 0-1.985.434-4.805 3.246zM3.654 3.426c-.057.02-.082.041-.086.042C1.365 5.642 0 8.664 0 12.004c0 2.854.998 5.473 2.661 7.533-1.401-2.605 3.579-9.951 6.08-12.91-2.82-2.813-4.216-3.245-4.806-3.245-.131 0-.223.021-.281.046v-.002zM12 3.551S9.055 1.828 6.755 1.746c-.903-.033-1.454.295-1.521.339C7.379.646 9.659 0 11.984 0H12c2.334 0 4.605.646 6.766 2.085-.068-.046-.615-.372-1.52-.339C14.946 1.828 12 3.545 12 3.545v.006z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://mspartner-public.sharepoint.com/XBOX%20Games/Xbox%20logo's%20+%20Guidelines/Xbox%20Live/Xbox_Live_Guidelines_10-4-13.pdf\",hex:\"107C10\"},Xcode:{title:\"Xcode\",slug:\"xcode\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Xcode icon</title><path d=\"M20 4.8c.4-.2.6-.4.9-.4.5 0 .8.3.9.5.2.3.9.5 1.2.5.2 0 .5-.7.7-1.3s.2-1.3.1-1.4c-.1-.1-.9-.3-1.1-.3-.1.1-.3.2-.7.2s-.8-.3-1.1-.6c-.5-.5-1.1-.7-1.7-.9-.6-.2-1.3-.2-1.9-.2-.9-.1-1.9-.1-2.8.2-.4.1-.7.2-1.1.4-.1.1-.4.2-.5.2-.1.1-.1.2 0 .2s.5-.1.5-.1-.5.2-.5.4c0 .1.1.1.1.1s.3-.1.5-.1c.4 0 1-.2 1.5-.2.6 0 1.2.2 1.8.8.9 1.1.8 2.5.8 2.8-.2 2.1-4.9 14.9-5.1 15.8-.2.9-.2 1.4.9 1.7s1.5 0 1.7-.4c.1-.7 3.1-16.5 4.9-17.9zM16.1 3.8L0 6.3 2.6 23l8.6-1.4c-.1-.7 2.2-6.7 2.6-7.8l-4.4.7.6-1.8 3.1-.5.8 1s.2-.5.2-.7L9.8 7.2c-.2-.3-.2-.7.1-.9l.2-.2c.3-.2.7-.2.9.1l3.8 4.4c.8-2.4 1.5-4.5 1.5-5.2.1-.2.1-.9-.2-1.6zm-12 9.9l2.7-.5-.7 1.8-1.8.3-.2-1.6zm5.8-5.1l.3.1c.4.1.5.5.4.9l-3 8L5.8 20l.2-3 3-8c.1-.4.5-.5.9-.4zM20.7 5.8c-.4.4-.9 1.7-1.9 5.5h.1l.3 1.6-.8.1c-.1.5-.2 1-.4 1.6 1.7.9.8 3.1.7 3.1-.1 0-.1 0-.1-.1s.1-.4-.2-.5c-.2-.1-.6-.2-.9-.4-.3 1.2-.6 2.6-.9 4.1l6.3-1-2.1-14.1-.1.1z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://developer.apple.com/develop/\",hex:\"1575F9\"},\"XDA Developers\":{title:\"XDA Developers\",slug:\"xdadevelopers\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>XDA Developers icon</title><path d=\"M14.547 6.502a.193.193 0 00-.131.19v2.396h-3.617c-.783 0-1.421.208-1.887.64-.468.436-.701 1.066-.701 1.852v3.416c-.01.089-.024.184-.024.285 0 .482.142.933.417 1.328.277.4.659.673 1.115.795.254.07.606.096 1.092.096h1.779c.86 0 1.529-.198 1.992-.617.463-.42.687-1.043.688-1.828V6.693a.193.193 0 00-.19-.19h-.475a.193.193 0 00-.058-.001zM.2 9.086a.193.193 0 00-.02.002.193.193 0 00-.095.308l3.049 3.915-3.096 3.878a.193.193 0 00.154.309h.641a.193.193 0 00.154-.07l2.692-3.416 2.68 3.416a.193.193 0 00.154.07h.629a.193.193 0 00.154-.309L4.238 13.3l3-3.903a.193.193 0 00-.154-.308h-.64a.193.193 0 00-.155.07l-2.61 3.428-2.644-3.428a.193.193 0 00-.154-.07H.24a.193.193 0 00-.04-.002zm16.986 0a.193.193 0 00-.019.002.193.193 0 00-.13.19v.486a.193.193 0 00.189.19h4.4c.541 0 .913.125 1.15.357.238.23.37.59.37 1.115v.332h-3.844c-.686 0-1.26.21-1.672.629-.412.418-.617.985-.617 1.672v1.197c0 .569.17 1.07.51 1.459.003.004.008.007.011.012.432.512 1.06.771 1.815.771h2.408c.706 0 1.281-.21 1.672-.64.386-.426.57-1.01.57-1.721V11.52c0-.784-.211-1.41-.664-1.827-.453-.416-1.118-.605-1.957-.605h-4.152a.193.193 0 00-.04-.002zm-6.402.879h3.631v5.066c0 .495-.143.846-.404 1.104-.257.254-.655.433-1.221.498h-.156a.193.193 0 00-.024 0 1 1 0 01-.142.012h-1.672c-.683 0-1.13-.153-1.363-.381-.233-.23-.381-.659-.381-1.34v-3.309c0-.649.234-1.102.713-1.424v.012c.217-.142.556-.238 1.02-.238zm8.483 2.644v.002h3.867v2.645c0 .495-.12.828-.332 1.045-.212.217-.538.344-1.022.344h-2.467a1.27 1.27 0 01-.224-.024c-.43-.075-.732-.238-.926-.463-.194-.225-.297-.525-.297-.937v-1.176c0-.43.108-.747.297-.973.187-.223.47-.37.877-.437h.012c.112-.017.187-.026.215-.026Z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.xda-developers.com/\",hex:\"F59812\"},\"X.Org\":{title:\"X.Org\",slug:\"x-dot-org\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>X.Org icon</title><path d=\"M19.94 1.9l-9.092 11.874 4.598 6.392a14.29 14.29 0 0 1-2.56.228c-2.387 0-4.582-.577-6.316-1.542l6.556-8.627-6.031-8.311L2.23 1.91 9.8 12.48l-4.332 5.66c-1.692-1.266-2.729-2.965-2.729-4.832 0-2.13 1.348-4.042 3.48-5.342l-.655-.999C2.22 8.386 0 10.876 0 13.71c0 2.432 1.635 4.61 4.212 6.075l-1.765 2.307h1.661l1.299-1.709c1.892.83 4.158 1.314 6.592 1.314a17.43 17.43 0 0 0 4.188-.501l.65.903h4.865l-1.729-2.422C22.443 18.214 24 16.082 24 13.71c0-2.94-2.39-5.512-5.948-6.9l-.217.311c3.099 1.214 5.195 3.531 5.195 6.188 0 2.202-1.44 4.17-3.698 5.47l-5.153-7.22 7.382-9.658zM12 5.755c-.586 0-1.212.046-1.775.1 1.004 1.309 1.836 2.417 2.795 3.676-.538-1.157-1.644-2.268-1.261-2.839.378-.565 1.075-.47 1.128-.47 1.118 0 2.194.127 3.2.36l.235-.324C14.98 5.91 13.523 5.754 12 5.754z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://upload.wikimedia.org/wikipedia/commons/9/90/X.Org_Logo.svg\",hex:\"F28834\"},Xero:{title:\"Xero\",slug:\"xero\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Xero icon</title><path d=\"M12 0C5.373 0 0 5.373 0 12s5.373 12 12 12 12-5.373 12-12S18.627 0 12 0zm6.585 14.655c-1.485 0-2.69-1.206-2.69-2.689 0-1.485 1.207-2.691 2.69-2.691 1.485 0 2.69 1.207 2.69 2.691s-1.207 2.689-2.69 2.689zM7.53 14.644c-.099 0-.192-.041-.267-.116l-2.043-2.04-2.052 2.047c-.069.068-.16.108-.258.108-.202 0-.368-.166-.368-.368 0-.099.04-.191.111-.263l2.04-2.05-2.038-2.047c-.075-.069-.113-.162-.113-.261 0-.203.166-.366.368-.366.098 0 .188.037.258.105l2.055 2.048 2.048-2.045c.069-.071.162-.108.26-.108.211 0 .375.165.375.366 0 .098-.029.188-.104.258l-2.056 2.055 2.055 2.051c.068.069.104.16.104.258 0 .202-.165.368-.365.368h-.01zm8.017-4.591c-.796.101-.882.476-.882 1.404v2.787c0 .202-.165.366-.366.366-.203 0-.367-.165-.368-.366v-4.53c0-.204.16-.366.362-.366.166 0 .316.125.346.289.27-.209.6-.317.93-.317h.105c.195 0 .359.165.359.368 0 .201-.164.352-.375.359 0 0-.09 0-.164.008l.053-.002zm-3.091 2.205H8.625c0 .019.003.037.006.057.02.105.045.211.083.31.194.531.765 1.275 1.829 1.29.33-.003.631-.086.9-.229.21-.12.391-.271.525-.428.045-.058.09-.112.12-.168.18-.229.405-.186.54-.083.164.135.18.391.045.57l-.016.016c-.21.27-.435.495-.689.66-.255.164-.525.284-.811.345-.33.09-.645.104-.975.06-1.095-.135-2.01-.93-2.28-2.01-.06-.21-.09-.42-.09-.645 0-.855.421-1.695 1.125-2.205.885-.615 2.085-.66 3-.075.63.405 1.035 1.021 1.185 1.771.075.419-.21.794-.734.81l.068-.046zm6.129-2.223c-1.064 0-1.931.865-1.931 1.931 0 1.064.866 1.931 1.931 1.931s1.931-.867 1.931-1.931c0-1.065-.866-1.933-1.931-1.933v.002zm0 2.595c-.367 0-.666-.297-.666-.666 0-.367.3-.665.666-.665.367 0 .667.299.667.665 0 .369-.3.667-.667.666zm-8.04-2.603c-.91 0-1.672.623-1.886 1.466v.03h3.776c-.203-.855-.973-1.494-1.891-1.494v-.002z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.xero.com/uk/about/media/downloads\",hex:\"13B5EA\"},XFCE:{title:\"XFCE\",slug:\"xfce\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>XFCE icon</title><path d=\"M.01 5.756c-.128.07 1.019.82 3.161 1.706 2.143.886 5.103 3.13 4.87 3.493-.695.984-1.105 2.162-.822 4.178.051.355-1.047.97-.968 1.506.067.408 1.228-.403 1.355-.243.078.288-.621 1.743-.338 1.847.206.062 2.023-1.73 2.129-1.7 2.995.908 6.892.222 6.967.194-.007-.016 2.804 1.326 3.049 1.166.616-.67-1.169-1.615-.871-1.992.13-.198 2.173.742 2.274.485.146-.443-.948-1.375-1.113-1.651-.143-.255-.174-.666.194-.924.367-.257 4.125-1.7 3.967-2.818-.272-2.03-4.766-2.161-4.839-2.332-.034-.08.199-2.902-1.112-2.38-.808.301-.15 2.099-.097 2.332.048.214-.359.19-.436.097-.17-.21-.736-2.084-1.403-1.75-.935.518-.055 2.135-.242 2.187-.346.195-.326.67-.604 1.056-.458.66-3.886-.309-4.994-.376-.811-.048-1.586.62-1.66.535-.987-.993-3.03-2.722-5.27-3.297C1.953 6.733.086 5.743.01 5.755zm22.866 1.816c-.068-.018-.382 1.593-.234 1.665.13.097.355-1.576.237-1.662l-.003-.002zm1.107.213c-.17-.003-1.076 1.449-.867 1.603.129.098.937-1.543.881-1.598a.024.024 0 00-.014-.005zm-4.385 1.768a.388.444 0 01.388.443.388.444 0 01-.388.444.388.444 0 01-.388-.444.388.444 0 01.388-.443zm-.871.27c.165.714.422.94 1.194.918-.983.905-1.58-.645-1.194-.919zm2.125 1.867c.04 0 .071.011.092.03.387.141-1.664.883-1.678.778-.021-.075 1.197-.823 1.586-.808zm.208.475a.1.1 0 01.056.009c.365.364-1.157 1.173-1.14 1.144-.123-.074.766-1.129 1.084-1.154z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.xfce.org/download#artwork\",hex:\"2284F2\"},Xiaomi:{title:\"Xiaomi\",slug:\"xiaomi\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Xiaomi icon</title><path d=\"M19.96 20a.32.32 0 0 1-.32-.32V4.32a.32.32 0 0 1 .32-.32h3.71a.32.32 0 0 1 .33.32v15.36a.32.32 0 0 1-.33.32zm-6.22 0s-.3-.09-.3-.32v-9.43A2.18 2.18 0 0 0 11.24 8H4.3c-.4 0-.3.3-.3.3v11.38c0 .27-.3.32-.3.32H.33a.32.32 0 0 1-.33-.32V4.32A.32.32 0 0 1 .33 4h12.86a4.28 4.28 0 0 1 4.25 4.27l.01 11.41a.32.32 0 0 1-.32.32zm-6.9 0a.3.3 0 0 1-.3-.3v-9a.3.3 0 0 1 .3-.3h3.77a.3.3 0 0 1 .29.3v9a.3.3 0 0 1-.3.3z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.mi.com/global\",hex:\"FA6709\"},Xing:{title:\"Xing\",slug:\"xing\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Xing icon</title><path d=\"M18.188 0c-.517 0-.741.325-.927.66 0 0-7.455 13.224-7.702 13.657.015.024 4.919 9.023 4.919 9.023.17.308.436.66.967.66h3.454c.211 0 .375-.078.463-.22.089-.151.089-.346-.009-.536l-4.879-8.916c-.004-.006-.004-.016 0-.022L22.139.756c.095-.191.097-.387.006-.535C22.056.078 21.894 0 21.686 0h-3.498zM3.648 4.74c-.211 0-.385.074-.473.216-.09.149-.078.339.02.531l2.34 4.05c.004.01.004.016 0 .021L1.86 16.051c-.099.188-.093.381 0 .529.085.142.239.234.45.234h3.461c.518 0 .766-.348.945-.667l3.734-6.609-2.378-4.155c-.172-.315-.434-.659-.962-.659H3.648v.016z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://dev.xing.com/logo_rules\",hex:\"006567\"},XMPP:{title:\"XMPP\",slug:\"xmpp\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>XMPP icon</title><path d=\"M23.996,3.178c-0.337,0.131-0.84,0.325-1.452,0.559c-1.158,0.443-1.746,0.668-2.193,0.82 c-0.46,0.156-0.965,0.307-1.976,0.61c-0.683,0.204-1.254,0.371-1.659,0.488c-0.023,0.656,0,1.633-0.219,2.726 c-0.405,2.027-1.078,3.471-1.512,4.324c-1.122,2.208-2.427,3.613-2.91,4.107c-0.042-0.044-0.084-0.088-0.126-0.134 c-0.53-0.572-1.802-2.027-2.861-4.262c-0.79-1.667-1.113-3.033-1.204-3.438c-0.267-1.192-0.32-2.216-0.32-3.088 c0-0.056-0.027-0.097-0.076-0.112c-0.541-0.167-1.324-0.389-2.165-0.64C4.37,4.854,3.678,4.58,2.767,4.238 c-0.37-0.139-1.057-0.41-1.663-0.644C0.542,3.375,0.085,3.178,0.031,3.178c-0.004,0-0.011,0-0.017,0.009 C0.006,3.198,0,3.218,0,3.244c0.007,0.445,0.06,1.021,0.192,1.774c0.461,2.627,2.016,5.296,3.27,6.933c0,0,2.788,3.776,6.846,6.108 c0.058,0.033,0.134,0.078,0.227,0.132c-0.007,0.006-0.015,0.011-0.021,0.016c-1.288,0.987-2.401,1.483-2.684,1.605 c-0.661,0.287-1.24,0.466-1.664,0.579v0.305c0.827-0.102,1.519-0.242,2.04-0.365c0.514-0.122,1.989-0.495,3.8-1.341 c0.001-0.001,0.004-0.002,0.006-0.003c0.102,0.05,0.207,0.102,0.315,0.153c1.145,0.544,2.678,1.22,4.555,1.536 c0.46,0.077,0.852,0.124,1.13,0.146c0.042,0.003,0.079-0.026,0.086-0.068c0.01-0.059,0.015-0.115,0.003-0.163 c-0.006-0.025-0.024-0.045-0.047-0.055c-0.379-0.157-0.901-0.3-1.487-0.539c-0.701-0.286-1.681-0.8-2.736-1.596 c-0.048-0.036-0.143-0.109-0.275-0.215c3.48-1.992,5.992-4.941,5.992-4.941c1.301-1.527,3.331-4.217,4.073-7.346 C23.883,4.794,24.025,3.843,23.996,3.178z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://xmpp.org/\",hex:\"002B5C\"},\"X-Pack\":{title:\"X-Pack\",slug:\"x-pack\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>X-Pack icon</title><path d=\"M13.7 19.55l5.88-5.89 3.35 3.36a3.57 3.57 0 0 1 0 5.05l-.83.83a3.57 3.57 0 0 1-5.05 0zM22.92 1.9l-.83-.83a3.57 3.57 0 0 0-5.05 0L12 6.12 6.95 1.07a3.57 3.57 0 0 0-5.05 0l-.83.83a3.57 3.57 0 0 0 0 5.05L6.12 12l-5.05 5.05a3.57 3.57 0 0 0 0 5.05l.83.83a3.57 3.57 0 0 0 5.05 0L12 17.88l3.68-3.68 2.2-2.2 5.05-5.05a3.57 3.57 0 0 0 0-5.05z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.elastic.co/brand\",hex:\"005571\"},XRP:{title:\"XRP\",slug:\"xrp\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>XRP icon</title><path d=\"M5.52 2.955A3.521 3.521 0 001.996 6.48v2.558A2.12 2.12 0 010 11.157l.03.562-.03.561a2.12 2.12 0 011.996 2.121v2.948a3.69 3.69 0 003.68 3.696v-1.123a2.56 2.56 0 01-2.557-2.558v-2.963a3.239 3.239 0 00-1.42-2.682 3.26 3.26 0 001.42-2.682V6.48A2.412 2.412 0 015.52 4.078h.437V2.955zm12.538 0v1.123h.437a2.39 2.39 0 012.386 2.401v2.558a3.26 3.26 0 001.42 2.682 3.239 3.239 0 00-1.42 2.682v2.963a2.56 2.56 0 01-2.557 2.558v1.123a3.69 3.69 0 003.68-3.696V14.4A2.12 2.12 0 0124 12.281l-.03-.562.03-.561a2.12 2.12 0 01-1.996-2.12V6.478a3.518 3.518 0 00-3.509-3.524zM6.253 7.478l3.478 3.259a3.393 3.393 0 004.553 0l3.478-3.26h-1.669l-2.65 2.464a2.133 2.133 0 01-2.886 0L7.922 7.478zm5.606 4.884a3.36 3.36 0 00-2.128.886l-3.493 3.274h1.668l2.667-2.495a2.133 2.133 0 012.885 0l2.65 2.495h1.67l-3.494-3.274a3.36 3.36 0 00-2.425-.886z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://xrpl.org/\",hex:\"25A768\"},XSplit:{title:\"XSplit\",slug:\"xsplit\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>XSplit icon</title><path d=\"M24 19.5c-.7-.1-2.5-.3-2.7-.3-.1 0-2.8 2.3-4 3.399l-.1.101c.1-1.3.3-2.601.399-3.9C11.7 18.1 5.9 17.4 0 16.7V1.5v-.2H.3C.9 1.4 22.9 3.9 24 4v15.5zm-2.6-2.6V6.2C15.1 5.5 8.7 4.7 2.4 4v10.6c6.3.8 12.7 1.5 19 2.3z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.xsplit.com/presskit\",hex:\"0095DE\"},\"Y Combinator\":{title:\"Y Combinator\",slug:\"ycombinator\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Y Combinator icon</title><path d=\"M0 24V0h24v24H0zM6.951 5.896l4.112 7.708v5.064h1.583v-4.972l4.148-7.799h-1.749l-2.457 4.875c-.372.745-.688 1.434-.688 1.434s-.297-.708-.651-1.434L8.831 5.896h-1.88z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.ycombinator.com/press/\",hex:\"F0652F\"},\"Yahoo!\":{title:\"Yahoo!\",slug:\"yahoo\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Yahoo! icon</title><path d=\"M18.86 1.56L14.27 11.87H19.4L24 1.56H18.86M0 6.71L5.15 18.27L3.3 22.44H7.83L14.69 6.71H10.19L7.39 13.44L4.62 6.71H0M15.62 12.87C13.95 12.87 12.71 14.12 12.71 15.58C12.71 17 13.91 18.19 15.5 18.19C17.18 18.19 18.43 16.96 18.43 15.5C18.43 14.03 17.23 12.87 15.62 12.87Z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://yahoo.com/\",hex:\"6001D2\"},\"Yamaha Corporation\":{title:\"Yamaha Corporation\",slug:\"yamahacorporation\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Yamaha Corporation icon</title><path d=\"M12 0a12 12 0 1012 12A12 12 0 0012 0zm-.412 1.377A10.648 10.648 0 0122.664 12 10.648 10.648 0 0112 22.664a10.648 10.648 0 01-.412-21.287zM12 1.9a.184.184 0 00-.172.131l-.883 2.526a.39.39 0 000 .097.3.3 0 00.133.25.926.926 0 01.074 1.465 2.345 2.345 0 00-.82 1.79v.903L5.865 6.498l-.547.953 4.987 2.877v.692l-.602.347-4.978-2.88-.551.954L8.602 12l-.782.45a2.345 2.345 0 00-1.127 1.616.93.93 0 01-1.312.668.293.293 0 00-.277 0 .324.324 0 00-.079.063l-1.742 2.037a.188.188 0 00.176.305l2.633-.493a.36.36 0 00.09-.035.3.3 0 00.152-.238.926.926 0 011.232-.781 2.345 2.345 0 001.954-.184l.78-.451v5.104h1.098v-5.756l.598-.344.598.344v5.756h1.1v-5.123l.78.45a2.345 2.345 0 001.954.184.926.926 0 011.234.782.285.285 0 00.149.238.36.36 0 00.09.035l2.634.492a.184.184 0 00.176-.305l.004.02-1.744-2.037a.39.39 0 00-.075-.063.3.3 0 00-.28 0 .938.938 0 01-.864-.035.93.93 0 01-.434-.633 2.368 2.368 0 00-1.14-1.609l-.782-.45 4.436-2.558-.549-.955-4.98 2.873-.602-.347v-.692l4.985-2.877-.547-.953L13.7 9.062v-.904a2.345 2.345 0 00-.803-1.789.922.922 0 01.079-1.465.309.309 0 00.128-.25.27.27 0 000-.097L12.18 2.03a.184.184 0 00-.18-.13zm.021 5.512a.598.598 0 01.58.598V9.7l-.597.347-.598-.348V8.01a.598.598 0 01.615-.597zm-.017 3.818l.687.391v.781l-.687.391-.688-.39v-.782zm2.299 1.403l1.46.847a.598.598 0 01.223.817v.004a.602.602 0 01-.82.219l-1.465-.844v-.696zm-4.596.004l.602.347v.692l-1.465.844a.598.598 0 11-.598-1.036z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.yamaha.com/en/\",hex:\"4B1E78\"},\"Yamaha Motor Corporation\":{title:\"Yamaha Motor Corporation\",slug:\"yamahamotorcorporation\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Yamaha Motor Corporation icon</title><path d=\"M12 0A12 12 0 000 12a12 12 0 0012 12 12 12 0 0012-12A12 12 0 0012 0zm0 .57C18.315.57 23.43 5.685 23.43 12c0 6.31-5.115 11.43-11.43 11.43C5.69 23.43.57 18.314.57 12 .57 5.69 5.69.57 12 .57zm0 .234c-.1 0-.183.06-.218.147l-.492 1.551A9.523 9.523 0 002.475 12c0 1.48.337 2.885.94 4.136l-1.1 1.206a.241.241 0 00-.015.262.246.246 0 00.238.115l1.592-.353a9.52 9.52 0 007.87 4.16c3.27 0 6.16-1.652 7.874-4.16l1.592.353a.236.236 0 00.23-.123.234.234 0 00-.016-.262l-1.1-1.198A9.431 9.431 0 0021.526 12a9.523 9.523 0 00-8.815-9.498L12.218.947A.237.237 0 0012 .804zm-.003.25c.024 0 .048.02.056.043l1.02 3.354a1.2 1.2 0 00-.48.957c0 .389.19.734.48.952h-.004c.436.326.718.846.718 1.429v1.12l4.326-2.497.476.825-4.802 2.77v.965l.834.48 4.802-2.774.476.825-4.326 2.5.972.56c.508.294.818.798.882 1.338v-.004a1.193 1.193 0 001.655.953l2.393 2.56c.02.02.02.047.008.07-.016.025-.04.033-.068.029l-3.413-.794a1.193 1.193 0 00-1.65-.957l.003-.004c-.5.215-1.091.199-1.6-.095l-.968-.56v4.994h-.952v-5.545l-.834-.48-.833.48v5.545h-.953V15.1l-.972.555c-.508.294-1.1.31-1.6.096l.004.004a1.193 1.193 0 00-1.651.957l-3.413.793a.054.054 0 01-.063-.028c-.016-.02-.012-.047.008-.067l2.397-2.56c.333.143.73.135 1.067-.064.338-.194.544-.528.588-.889v.004c.063-.54.373-1.044.88-1.337l.97-.56-4.327-2.496.477-.826 4.802 2.774.833-.484v-.964l-4.802-2.77.476-.826 4.326 2.496V7.79c0-.583.282-1.103.719-1.429h-.004c.29-.214.476-.56.476-.952 0-.393-.19-.738-.48-.957l1.02-3.353c.008-.028.031-.044.051-.044zm.004 5.902a.833.833 0 00-.833.833v1.67L12 9.94l.833-.48V7.789a.833.833 0 00-.833-.833zm0 4.084l-.833.48v.964l.833.476.833-.48v-.96zm-2.62 1.516l-1.444.833a.833.833 0 00-.306 1.14.822.822 0 00.723.412.83.83 0 00.416-.111l1.445-.834v-.96zm5.243 0l-.833.48V14l1.445.834a.834.834 0 00.833-1.445z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://en.wikipedia.org/wiki/Yamaha_Motor_Company\",hex:\"E60012\"},Yammer:{title:\"Yammer\",slug:\"yammer\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Yammer icon</title><path d=\"M20.852 6.489c.488-.389.611-1.088.268-1.621-.301-.47-.868-.662-1.378-.516l-.14.075c-.813.447-6.306 4.289-5.688 4.723.617.43 4.363-1.258 6.923-2.664m0 11.557c-2.574-1.405-6.321-3.092-6.938-2.664-.617.434 4.86 4.277 5.673 4.723l.137.075c.512.15 1.067-.044 1.368-.515.347-.534.211-1.233-.271-1.62m2.257-7.04c-.061-.015-.105-.015-.166-.015-.932 0-7.584.722-7.253 1.4.331.662 4.424.993 7.344.993.603-.106 1.053-.663 1.009-1.294-.046-.557-.437-1.008-.965-1.113M5.426 16.766c-.752 2.151-1.459 3.16-3.084 3.16-.151 0-.708-.029-.738-.046-.527-.029-1.008.317-1.144.844-.165.588.181 1.203.783 1.385.421.074.873.091 1.264.091 2.98 0 3.973-1.717 4.951-4.229l5.869-14.538c.211-.662-.165-1.354-.813-1.565-.646-.21-1.324.136-1.565.752L6.856 13.455h-.061L2.493 2.546c-.271-.602-.993-.903-1.64-.662-.663.241-1.009.978-.786 1.64l5.427 13.244-.068-.002z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://developer.yammer.com/docs/branding-guide\",hex:\"0072C6\"},Yandex:{title:\"Yandex\",slug:\"yandex\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Yandex icon</title><path d=\"M1.902 16.349v-2.85L0 8.398h.957l1.4 3.938L3.97 7.573h.877l-2.069 5.96v2.815h-.876zm5.638 0h-.734c-.033-.125-.065-.3-.075-.447h-.057c-.246.313-.559.525-1.051.525-.798 0-1.344-.601-1.344-1.704 0-1.2.611-1.956 2.18-1.956h.123v-.333c0-.735-.246-1.048-.735-1.048-.445 0-.824.234-1.112.49l-.167-.766c.256-.213.766-.447 1.336-.447.99 0 1.533.424 1.533 1.781v2.636c0 .534.055 1.002.1 1.267l.003.002zm-.955-2.925h-.101c-1.08 0-1.313.479-1.313 1.2 0 .645.21 1.067.655 1.067.3 0 .601-.2.757-.445l.002-1.822zm2.802 2.925h-.869v-5.621h.869v.491h.056c.154-.21.578-.556 1.101-.556.732 0 1.121.412 1.121 1.268v4.418h-.878v-4.34c0-.423-.188-.57-.524-.57-.364 0-.675.279-.877.559v4.35l.001.001zm3.135-2.592c0-2.08.78-3.094 1.901-3.094.268 0 .545.09.713.211V8.398h.869v7.95h-.645l-.069-.445h-.055c-.245.312-.556.521-1.013.521-1.1 0-1.699-.933-1.699-2.667h-.002zm2.615-2.115c-.176-.176-.366-.266-.656-.266-.7 0-1.035 1.057-1.035 2.202 0 1.313.246 2.114.881 2.114.436 0 .666-.213.811-.435v-3.615zm3.604 4.785c-1.155 0-1.869-.924-1.869-2.647 0-1.804.501-3.116 1.69-3.116.935 0 1.544.701 1.544 2.604v.478h-2.331c0 1.268.355 1.935 1.045 1.935.489 0 .847-.222 1.068-.378l.2.667c-.354.278-.79.456-1.345.456l-.002.001zm-.957-3.394h1.435c0-.957-.155-1.657-.656-1.657-.532 0-.72.657-.78 1.657h.001zm6.095-2.292l-1.045 2.625L24 16.349h-.899l-.87-2.314-.844 2.313h-.855l1.166-2.904-1.057-2.702h.901l.727 2.035.765-2.036h.846z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://yandex.com/company/general_info/logotype_rules\",hex:\"FF0000\"},Yarn:{title:\"Yarn\",slug:\"yarn\",svg:'<svg xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" viewBox=\"0 0 24 24\"><title>Yarn icon</title><path d=\"M12 0C5.375 0 0 5.375 0 12s5.375 12 12 12 12-5.375 12-12S18.625 0 12 0zm.768 4.105c.183 0 .363.053.525.157.125.083.287.185.755 1.154.31-.088.468-.042.551-.019.204.056.366.19.463.375.477.917.542 2.553.334 3.605-.241 1.232-.755 2.029-1.131 2.576.324.329.778.899 1.117 1.825.278.774.31 1.478.273 2.015a5.51 5.51 0 0 0 .602-.329c.593-.366 1.487-.917 2.553-.931.714-.009 1.269.445 1.353 1.103a1.23 1.23 0 0 1-.945 1.362c-.649.158-.95.278-1.821.843-1.232.797-2.539 1.242-3.012 1.39a1.686 1.686 0 0 1-.704.343c-.737.181-3.266.315-3.466.315h-.046c-.783 0-1.214-.241-1.45-.491-.658.329-1.51.19-2.122-.134a1.078 1.078 0 0 1-.58-1.153 1.243 1.243 0 0 1-.153-.195c-.162-.25-.528-.936-.454-1.946.056-.723.556-1.367.88-1.71a5.522 5.522 0 0 1 .408-2.256c.306-.727.885-1.348 1.32-1.737-.32-.537-.644-1.367-.329-2.21.227-.602.412-.936.82-1.08h-.005c.199-.074.389-.153.486-.259a3.418 3.418 0 0 1 2.298-1.103c.037-.093.079-.185.125-.283.31-.658.639-1.029 1.024-1.168a.94.94 0 0 1 .328-.06zm.006.7c-.507.016-1.001 1.519-1.001 1.519s-1.27-.204-2.266.871c-.199.218-.468.334-.746.44-.079.028-.176.023-.417.672-.371.991.625 2.094.625 2.094s-1.186.839-1.626 1.881c-.486 1.144-.338 2.261-.338 2.261s-.843.732-.899 1.487c-.051.663.139 1.2.343 1.515.227.343.51.176.51.176s-.561.653-.037.931c.477.25 1.283.394 1.71-.037.31-.31.371-1.001.486-1.283.028-.065.12.111.209.199.097.093.264.195.264.195s-.755.324-.445 1.066c.102.246.468.403 1.066.398.222-.005 2.664-.139 3.313-.296.375-.088.505-.283.505-.283s1.566-.431 2.998-1.357c.917-.598 1.293-.76 2.034-.936.612-.148.57-1.098-.241-1.084-.839.009-1.575.44-2.196.825-1.163.718-1.742.672-1.742.672l-.018-.032c-.079-.13.371-1.293-.134-2.678-.547-1.515-1.413-1.881-1.344-1.997.297-.5 1.038-1.297 1.334-2.78.176-.899.13-2.377-.269-3.151-.074-.144-.732.241-.732.241s-.616-1.371-.788-1.483a.271.271 0 0 0-.157-.046z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/yarnpkg/assets\",hex:\"2C8EBB\"},Yelp:{title:\"Yelp\",slug:\"yelp\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Yelp icon</title><path d=\"M21.111 18.226c-.141.969-2.119 3.483-3.029 3.847-.311.124-.611.094-.85-.09-.154-.12-.314-.365-2.447-3.827l-.633-1.032c-.244-.37-.199-.857.104-1.229.297-.359.732-.494 1.111-.35.02.012 1.596.531 1.596.531 3.588 1.179 3.705 1.224 3.857 1.338.227.186.332.475.285.813h.006zm-7.191-5.267c-.254-.386-.25-.841.012-1.155l.998-1.359c2.189-2.984 2.311-3.141 2.459-3.245.256-.171.57-.179.871-.032.869.422 2.623 3.029 2.729 4.029v.034c.029.341-.105.618-.346.784-.164.105-.314.166-4.393 1.156-.645.164-1.004.254-1.215.329l.029-.03c-.404.12-.854-.074-1.109-.479l-.035-.032zm-2.504-1.546c-.195.061-.789.245-1.519-.938 0 0-4.931-7.759-5.047-7.998-.07-.27.015-.574.255-.82.734-.761 4.717-1.875 5.76-1.621.34.088.574.301.656.604.06.335.545 7.536.615 9.149.066 1.38-.525 1.565-.72 1.624zm.651 7.893c-.011 3.774-.019 3.9-.081 4.079-.105.281-.346.469-.681.53-.96.164-3.967-.946-4.594-1.69-.12-.164-.195-.328-.21-.493-.016-.12 0-.24.045-.346.075-.195.18-.345 2.88-3.51l.794-.944c.271-.345.75-.45 1.199-.271.436.165.706.54.676.945v1.68l-.028.02zm-8.183-2.414c-.295-.01-.56-.187-.715-.48-.111-.215-.189-.57-.238-1.002-.137-1.301.029-3.264.419-3.887.183-.285.45-.436.745-.426.195 0 .369.061 4.229 1.65l1.13.449c.404.15.654.57.63 1.051-.03.465-.298.824-.694.93l-1.605.51c-3.59 1.155-3.709 1.185-3.898 1.17l-.003.035zm14.977 7.105h-.004l-.005.003.009-.003z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://www.yelp.com/brand\",hex:\"D32323\"},YouTube:{title:\"YouTube\",slug:\"youtube\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>YouTube icon</title><path d=\"M23.495 6.205a3.007 3.007 0 0 0-2.088-2.088c-1.87-.501-9.396-.501-9.396-.501s-7.507-.01-9.396.501A3.007 3.007 0 0 0 .527 6.205a31.247 31.247 0 0 0-.522 5.805 31.247 31.247 0 0 0 .522 5.783 3.007 3.007 0 0 0 2.088 2.088c1.868.502 9.396.502 9.396.502s7.506 0 9.396-.502a3.007 3.007 0 0 0 2.088-2.088 31.247 31.247 0 0 0 .5-5.783 31.247 31.247 0 0 0-.5-5.805zM9.609 15.601V8.408l6.264 3.602z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.youtube.com/yt/about/brand-resources/#logos-icons-colors\",hex:\"FF0000\"},Zalando:{title:\"Zalando\",slug:\"zalando\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Zalando icon</title><path d=\"M4.78 24c-.88 0-1.36-.2-1.62-.36-.36-.21-1.02-.75-1.62-2.33A27.06 27.06 0 0 1 0 12V12c.02-3.66.59-6.76 1.54-9.3C2.14 1.1 2.8.56 3.16.35 3.42.21 3.9 0 4.78 0c.33 0 .72.03 1.18.1a26.1 26.1 0 0 1 8.7 3.3h.01a26.4 26.4 0 0 1 7.16 6.01c1.06 1.32 1.19 2.17 1.19 2.59 0 .42-.13 1.27-1.19 2.59a26.4 26.4 0 0 1-7.16 6h-.01a26.03 26.03 0 0 1-8.7 3.3c-.46.08-.85.11-1.18.11z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.zalando.co.uk/\",hex:\"FF6900\"},Zapier:{title:\"Zapier\",slug:\"zapier\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Zapier icon</title><path d=\"M15 12.004c0 .893-.165 1.746-.461 2.535-.787.297-1.643.461-2.535.461h-.009c-.893 0-1.745-.165-2.534-.461C9.164 13.75 9 12.896 9 12.004v-.009c0-.893.164-1.745.461-2.534C10.25 9.164 11.103 9 11.995 9h.009c.893 0 1.748.164 2.535.462.297.788.461 1.641.461 2.535v.007zM23.835 10H16.83l4.948-4.952c-.39-.548-.82-1.06-1.295-1.533-.473-.474-.985-.907-1.53-1.296l-4.954 4.949V.165C13.35.061 12.686 0 12.004 0h-.01c-.68 0-1.346.061-1.995.165V7.17l-4.95-4.949c-.549.386-1.06.821-1.534 1.294-.474.474-.908.987-1.296 1.533L7.168 10H.165S0 11.316 0 11.995v.009c0 .68.061 1.348.165 1.995H7.17l-4.949 4.952c.777 1.096 1.733 2.051 2.827 2.83L10 16.831v7.004c.648.105 1.313.165 1.991.165h.017c.679 0 1.344-.06 1.991-.165v-7.004l4.952 4.95c.548-.375 1.06-.812 1.529-1.29h.005c.473-.465.906-.976 1.296-1.531l-4.95-4.949h7.004c.105-.645.165-1.304.165-1.98V12c0-.678-.06-1.343-.165-1.99\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://zapier.com/about/brand\",hex:\"FF4A00\"},Zeit:{title:\"Zeit\",slug:\"zeit\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Zeit icon</title><path d=\"M24 22.525H0l12-21.05 12 21.05z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://zeit.co/design/brand\",hex:\"000000\"},Zend:{title:\"Zend\",slug:\"zend\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Zend icon</title><path d=\"M24 .467L9.01 20.217H20.54A3.46 3.46 0 0024 16.757V.468zM3.459 3.783C1.585 3.783 0 5.153 0 7.1v16.433l15.063-19.75H3.459Z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.zend.com/\",hex:\"0679EA\"},\"Zend Framework\":{title:\"Zend Framework\",slug:\"zendframework\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Zend Framework icon</title><path d=\"M.932 6.242v2.535h5.652L0 17.757h10.219v-2.534h-5.18l6.553-8.98H.932zm13.537.162c-3.178 0-3.178 3.178-3.178 3.178h9.531C24 9.582 24 6.404 24 6.404h-9.531zm-.006 4.067c-3.173 0-3.172 3.172-3.172 3.172l4.762.005c3.178 0 3.177-3.177 3.177-3.177h-4.767zm0 4.049c-3.173 0-3.172 3.183-3.172 3.183l1.584-.006c3.178 0 3.178-3.177 3.178-3.177h-1.59Z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://framework.zend.com/\",hex:\"68B604\"},Zendesk:{title:\"Zendesk\",slug:\"zendesk\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Zendesk icon</title><path d=\"M11.085 21.095H0L11.085 7.712v13.383zm12.915 0H12.915c0-3.063 2.479-5.543 5.543-5.543 3.063 0 5.542 2.482 5.542 5.543zm-11.085-4.804V2.905H24L12.915 16.291zm-1.83-13.386c0 3.061-2.481 5.544-5.543 5.544C2.482 8.449 0 5.968 0 2.907h11.085v-.002z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.zendesk.com/company/brand-assets/#logo\",hex:\"03363D\"},ZeroMQ:{title:\"ZeroMQ\",slug:\"zeromq\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>ZeroMQ icon</title><path d=\"M22.088,5.499l1.894-1.894l-3.587-3.587l-1.894,1.894C16.627,0.702,14.396,0,12,0C5.373,0,0,5.373,0,12c0,2.396,0.702,4.627,1.912,6.501l-1.894,1.894l3.587,3.587l1.894-1.894C7.373,23.298,9.604,24,12,24c6.627,0,12-5.373,12-12C24,9.604,23.298,7.373,22.088,5.499z M4.569,12c0-4.104,3.327-7.431,7.431-7.431c1.125,0,2.191,0.25,3.146,0.698l-9.88,9.88C4.819,14.191,4.569,13.125,4.569,12z M12,19.431c-1.125,0-2.191-0.25-3.146-0.698l9.88-9.88c0.447,0.956,0.698,2.022,0.698,3.146C19.431,16.104,16.104,19.431,12,19.431z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/zeromq/zeromq.org/blob/master/static/safari-pinned-tab.svg\",hex:\"DF0000\"},Zerply:{title:\"Zerply\",slug:\"zerply\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Zerply icon</title><path d=\"M20.779 18.746c-.747.714-1.562 1.017-2.543 1.017-1.32 0-3.322-.61-4.846-1.66-1.629-1.119-3.765-2.237-5.562-2.271 1.323-1.798 3.39-3.628 5.322-5.798.713-.78 4.983-5.7 5.73-6.586.54-.645.813-1.424.813-2.205 0-.3-.033-.585-.101-.855-2.035.405-3.561.601-6.001.601-2.677.015-4.607-.314-5.73-.989-.78 1.018-1.56 2.373-1.56 3.12 0 .948.918 1.728 3.189 1.728.746 0 1.965-.034 3.66-.169-3.492 4.5-6.949 8.16-9.016 10.47-.713.781-1.121 1.83-1.121 2.881 0 .405.075.81.18 1.185.645-.104 1.291-.179 1.965-.179 1.395 0 2.79.299 4.081.839C11.805 21.014 14.205 24 16.921 24c2.204 0 4.065-1.741 4.065-4.036 0-.404-.061-.825-.195-1.229l-.012.011z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://zerply.com/about/resources\",hex:\"9DBC7A\"},Zhihu:{title:\"Zhihu\",slug:\"zhihu\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Zhihu icon</title><path d=\"M5.721 0C2.251 0 0 2.25 0 5.719V18.28C0 21.751 2.252 24 5.721 24h12.56C21.751 24 24 21.75 24 18.281V5.72C24 2.249 21.75 0 18.281 0zm1.964 4.078c-.271.73-.5 1.434-.68 2.11h4.587c.545-.006.445 1.168.445 1.171H9.384a58.104 58.104 0 01-.112 3.797h2.712c.388.023.393 1.251.393 1.266H9.183a9.223 9.223 0 01-.408 2.102l.757-.604c.452.456 1.512 1.712 1.906 2.177.473.681.063 2.081.063 2.081l-2.794-3.382c-.653 2.518-1.845 3.607-1.845 3.607-.523.468-1.58.82-2.64.516 2.218-1.73 3.44-3.917 3.667-6.497H4.491c0-.015.197-1.243.806-1.266h2.71c.024-.32.086-3.254.086-3.797H6.598c-.136.406-.158.447-.268.753-.594 1.095-1.603 1.122-1.907 1.155.906-1.821 1.416-3.6 1.591-4.064.425-1.124 1.671-1.125 1.671-1.125zM13.078 6h6.377v11.33h-2.573l-2.184 1.373-.401-1.373h-1.219zm1.313 1.219v8.86h.623l.263.937 1.455-.938h1.456v-8.86z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.zhihu.com/\",hex:\"0084FF\"},Zillow:{title:\"Zillow\",slug:\"zillow\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Zillow icon</title><path d=\"M17.381 18.056c-7.43.445-15.51 3.135-16.362 3.51l.989-2.789c2.521-1.166 8.775-3.469 16.486-4.019-.15.57-.961 2.671-1.125 3.285l.012.013zm2.649-7.509s-.363.765-.709 1.814c-2.954.18-7.635 1.154-9.915 1.98 1.186-1.08 8.686-8.61 8.686-8.61C20.985 7.71 24 10.155 24 10.155l-3.97.395v-.003zm-17.55.33c1.647-.75 6.265-2.146 10.685-3.181 0 0-8.497 7.845-10.859 10.275l1.95-5.28c-1.516.225-2.184.315-4.256.75l2.479-2.551.001-.013zm10.6-8.432c.734.359 3.45 2.205 4.419 2.888-3.096.074-9.135 1.409-11.652 2.25 2.065-1.568 5.903-4.53 7.233-5.148v.01z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"http://zillow.mediaroom.com/logos\",hex:\"0074E4\"},Zingat:{title:\"Zingat\",slug:\"zingat\",svg:'<svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Zingat icon</title><path d=\"M12.271.006A8.584 8.584 0 009.906.25a8.705 8.705 0 00-4.83 3.059 8.377 8.377 0 00-1.85 4.556 6.2 6.2 0 00.159 2.168 15.04 15.04 0 001.053 2.748 38.762 38.762 0 002.498 4.336A82.576 82.576 0 0011.994 24l.067-.074c.456-.574.923-1.14 1.363-1.725.789-1.048 1.562-2.11 2.34-3.168a1 1 0 00.21-.756.973.973 0 00-1.195-.802c-.307.077-.5.286-.675.527-.547.753-1.095 1.505-1.647 2.256-.147.2-.301.393-.488.553a64.17 64.17 0 01-4.38-6.356c-.763-1.28-1.47-2.589-2.007-3.98a8.079 8.079 0 01-.334-1.006c-.105-.44-.096-.892-.068-1.344a5.144 5.144 0 01.328-1.643c.244-.604.507-1.195.9-1.712a6.947 6.947 0 012.65-2.165c.788-.36 1.596-.62 2.47-.62a17.886 17.886 0 011.349.03 4.389 4.389 0 01.943.167c1.486.448 2.742 1.256 3.696 2.494a6.771 6.771 0 01.925 1.709 6.83 6.83 0 01.276.885 4.903 4.903 0 01.086.677c.044.494.063.99-.047 1.477-.079.324-.18.641-.305.951-.133.359-.281.71-.437 1.059V9.793a.835.835 0 00-.184-.56 2.57 2.57 0 00-.394-.354c-1.62-1.23-3.238-2.46-4.858-3.688a.964.964 0 00-1.168.006c-.212.161-.422.325-.633.487l-1.273.972V5.74c-.001-.088-.013-.175-.035-.261a.982.982 0 10-1.932.26V8.06a.169.169 0 01-.074.152c-.194.14-.379.284-.563.428l-.025.02a.98.98 0 00-.148 1.376c.339.422.956.49 1.378.152l3.825-2.92.006-.005a.102.102 0 01.144.006l2.268 1.734c.52.397 1.039.8 1.564 1.19a.293.293 0 01.135.275v4.83c0 .02.003.039.004.058a.97.97 0 00.01.123.97.97 0 000 .002c0 .007 0 .013.002.02a.981.981 0 00.015.072.981.981 0 00.028.094.981.981 0 00.037.09.981.981 0 001.8-.045l.03-.043c.314-.54.635-1.076.937-1.627.597-1.084 1.132-2.196 1.518-3.375a6.706 6.706 0 00.375-1.855 8 8 0 00-.338-2.561 8.497 8.497 0 00-2.943-4.338C15.986.7 14.227.076 12.272.006zM11.178 10.21a1.022 1.022 0 00-.996 1.047v1.615a1.024 1.024 0 001.039 1.002h1.61a1.02 1.02 0 001.019-1.023v-1.618a1.024 1.024 0 00-1.018-1.021h-.81v-.002zm.072.957h1.54c.074 0 .1.03.1.103v.778l.003.006c0 .248-.009.497 0 .74 0 .084-.026.115-.112.115h-1.529c-.08 0-.107-.027-.107-.107v-1.526c0-.077.023-.109.105-.109z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://www.zingat.com/kurumsal-logolar\",hex:\"009CFB\"},Zoom:{title:\"Zoom\",slug:\"zoom\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Zoom icon</title><path d=\"M4.587 13.63l-.27-.012H1.89l3.235-3.235-.013-.27a.815.815 0 0 0-.795-.795l-.27-.013H.004l.014.27c.034.438.353.77.794.795l.27.013H3.51L.273 13.618l.014.269c.015.433.362.78.795.796l.27.013h4.044l-.014-.27c-.036-.443-.35-.767-.795-.795zm3.237-4.325H7.82a2.695 2.695 0 1 0 .003 0zm1.141 3.839a1.618 1.618 0 1 1-2.288-2.287 1.618 1.618 0 0 1 2.288 2.287zm12.872-3.838a2.157 2.157 0 0 0-1.615.729 2.152 2.152 0 0 0-1.618-.731 2.147 2.147 0 0 0-1.208.37c-.21-.233-.68-.37-.948-.37v5.392l.27-.013c.45-.03.777-.349.795-.796l.013-.27V11.73l.014-.27c.01-.202.04-.382.132-.54a1.078 1.078 0 0 1 1.473-.393 1.078 1.078 0 0 1 .392.392c.093.16.12.339.132.54l.014.271v1.887l.013.269c.027.44.35.768.795.796l.27.013V11.73l.012-.27c.01-.2.04-.384.134-.543.299-.514.959-.69 1.473-.39a1.078 1.078 0 0 1 .392.393c.092.16.12.343.131.54l.014.27v1.887l.013.269c.028.443.35.77.796.796l.27.013V11.46a2.157 2.157 0 0 0-2.16-2.155zm-10.26.788a2.696 2.696 0 1 0 3.81 3.813 2.696 2.696 0 0 0-3.81-3.813zm3.049 3.05a1.618 1.618 0 1 1-2.288-2.288 1.618 1.618 0 0 1 2.288 2.288z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://zoom.us/brandguidelines\",hex:\"2D8CFF\"},Zorin:{title:\"Zorin\",slug:\"zorin\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Zorin icon</title><path d=\"M4 18.944L5.995 22.4h12.01L20 18.944H4zM24 12l-2.013 3.488H9.216l12.771-6.976L24 12zM0 12l2.013-3.488h12.771L2.013 15.488 0 12zm4-6.944L5.995 1.6h12.01L20 5.056H4z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://zorinos.com/press/\",hex:\"0CC1F3\"},Zulip:{title:\"Zulip\",slug:\"zulip\",svg:'<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Zulip icon</title><path d=\"M24 12a12 12 0 1 1-24 0 12 12 0 0 1 24 0zm-8.03-6H7.02l1 2.03h6.06l-7.06 7.5 1 2.46h8.96l-1-2.02H9.91l7.06-7.5-1-2.46z\"/></svg>',get path(){return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1]},source:\"https://github.com/zulip/zulip/\",hex:\"52C2AF\"}};Object.defineProperty(icons,\"get\",{enumerable:!1,value:function(t){if(icons[t])return icons[t];var l=t.toLowerCase();for(var c in icons){var s=icons[c];if(s.title&&s.title.toLowerCase()===l||s.slug&&s.slug===l)return s}}}),module.exports=icons;","import { html, component } from '../../src/index.ts';\nimport { getCss } from '../utils.ts';\nimport { prop } from '../../src';\nimport { GitHub } from 'simple-icons';\nconsole.log(GitHub);\ncomponent('nth-navbar', () => {\n  const css = getCss();\n  const getLinkCss = css => css`\n    &,\n    &:link,\n    &:active,\n    &:visited {\n      text-decoration: none;\n      color: white;\n    }\n    &:hover {\n      color: white;\n      text-decoration: underline;\n    }\n    &.active {\n      text-decoration: underline;\n    }\n  `;\n  return {\n    render: () => {\n      return html`\n        <div\n          ${css`\n            margin-top: 74px;\n          `}\n        ></div>\n        <nav\n          ${css`\n            position: fixed;\n            width: 100%;\n            background: #098ba7;\n            top: 0px;\n            color: #f1f2f2;\n            padding-top: 20px;\n            padding-bottom: 20px;\n            font-family: 'Rubik', sans-serif;\n            z-index: 100;\n          `}\n        >\n          <nth-container>\n            <div\n              ${css`\n                display: flex;\n                align-items: center;\n              `}\n            >\n              <span\n                ${css`\n                  font-size: 1.3em;\n                `}\n              >\n                <nth-logo\n                  ${prop('showAlpha', true)}\n                  ${prop('showFullName', true)}\n                ></nth-logo\n              ></span>\n              <div\n                ${css`\n                  display: flex;\n                  flex: auto;\n                  justify-content: flex-end;\n                  letter-spacing: 0.045em;\n                  & > div {\n                    flex: none;\n                    margin-left: 20px;\n                  }\n                  @media only screen and (max-width: 600px) {\n                    flex-wrap: wrap;\n                    line-height: 2em;\n                  }\n                `}\n              >\n                <div>\n                  <nth-link ${prop('css', getLinkCss)} path=\"/\">Intro</nth-link>\n                </div>\n                <div>\n                  <nth-link ${prop('css', getLinkCss)} path=\"/getting-started\"\n                    >Getting started</nth-link\n                  >\n                </div>\n                <div>\n                  <nth-link ${prop('css', getLinkCss)} path=\"/docs\"\n                    >Docs</nth-link\n                  >\n                </div>\n                <div\n                  ${css`\n                    display: flex;\n                    > svg {\n                      fill: #e7edee;\n                      height: 17px !important;\n                      margin-left: 4px;\n                      filter: drop-shadow(0px 1px 1.5px rgba(0, 0, 0, 0.3));\n                    }\n                  `}\n                >\n                  Github\n                  ${GitHub.svg.replace('<svg', '<svg style=\"height: 17px;\" ')}\n                </div>\n              </div>\n            </div>\n          </nth-container>\n        </nav>\n      `;\n    },\n  };\n});\n","import { html, component } from '../../src/';\nimport { getCss } from '../utils.ts';\n\ncomponent('nth-container', () => {\n  const css = getCss();\n  return {\n    render: () => {\n      return html`\n        <div\n          ${css`\n            max-width: 1000px;\n            margin: 0 auto;\n            padding-left: 20px;\n            padding-right: 20px;\n          `}\n        >\n          <slot></slot>\n        </div>\n      `;\n    },\n  };\n});\n","export const computerAnimation = {\"v\":\"5.2.1\",\"fr\":30,\"ip\":0,\"op\":180,\"w\":1155,\"h\":700,\"nm\":\"imac black\",\"ddd\":0,\"assets\":[],\"layers\":[{\"ddd\":0,\"ind\":1,\"ty\":4,\"nm\":\"Path\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[890.264,323.119,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[45,0,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":20,\"s\":[0,100,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":35,\"s\":[100,100,100],\"e\":[49,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":72,\"s\":[49,100,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":150,\"s\":[100,100,100],\"e\":[0,100,100]},{\"t\":165}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-44.406,0.827],[5.694,0.827],[43.114,0.827],[44.404,0.827],[44.404,-0.824],[43.114,-0.824],[5.694,-0.824],[-44.406,-0.824]],\"c\":true},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.039216000587,0.10980399698,0.250979989767,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Path\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":2,\"ty\":4,\"nm\":\"Path\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[890.514,399.953,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[45.25,0,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":28,\"s\":[0,100,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":43,\"s\":[100,100,100],\"e\":[87,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":118,\"s\":[87,100,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":142,\"s\":[100,100,100],\"e\":[0,100,100]},{\"t\":157}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[5.694,0.827],[-44.406,0.827],[-44.406,-0.824],[5.694,-0.824],[43.114,-0.824],[44.404,-0.824],[44.404,0.827],[43.114,0.827]],\"c\":true},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.039216000587,0.10980399698,0.250979989767,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Path\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":3,\"ty\":4,\"nm\":\"Path\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[890.07,380.493,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[21.5,-0.25,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":34,\"s\":[0,100,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":49,\"s\":[100,100,100],\"e\":[19,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":90,\"s\":[19,100,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":147,\"s\":[100,100,100],\"e\":[0,100,100]},{\"t\":162}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[21.1,-0.824],[19.809,-0.824],[-17.611,-0.824],[-21.1,-0.824],[-21.1,0.827],[-17.611,0.827],[19.809,0.827],[21.1,0.827]],\"c\":true},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.039216000587,0.10980399698,0.250979989767,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Path\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":4,\"ty\":4,\"nm\":\"Path\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[889.82,361.533,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[21.25,0,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":42,\"s\":[0,100,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":57,\"s\":[100,100,100],\"e\":[55,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":113,\"s\":[55,100,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":137,\"s\":[100,100,100],\"e\":[0,100,100]},{\"t\":152}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[21.1,-0.819],[19.809,-0.819],[-17.611,-0.819],[-21.1,-0.819],[-21.1,0.821],[-17.611,0.821],[19.809,0.821],[21.1,0.821]],\"c\":true},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.039216000587,0.10980399698,0.250979989767,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Path\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":5,\"ty\":4,\"nm\":\"Path\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[890.014,342.824,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[44.75,0.5,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":49,\"s\":[0,100,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":64,\"s\":[100,100,100],\"e\":[63,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":104,\"s\":[63,100,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":146,\"s\":[100,100,100],\"e\":[0,100,100]},{\"t\":161}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[43.114,-0.824],[44.404,-0.824],[44.404,0.827],[43.114,0.827],[5.694,0.827],[-44.406,0.827],[-44.406,-0.824],[5.694,-0.824]],\"c\":true},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.039216000587,0.10980399698,0.250979989767,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Path\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":6,\"ty\":4,\"nm\":\"Path 12\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[549.235,206.653,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0]],\"o\":[[0,0],[0,0]],\"v\":[[-209.335,0],[209.334,0]],\"c\":false},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"st\",\"c\":{\"a\":0,\"k\":[0.654901981354,0.662744998932,0.674510002136,1],\"ix\":3},\"o\":{\"a\":0,\"k\":100,\"ix\":4},\"w\":{\"a\":0,\"k\":0.9,\"ix\":5},\"lc\":2,\"lj\":2,\"nm\":\"Stroke 1\",\"mn\":\"ADBE Vector Graphic - Stroke\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Path 12\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":7,\"ty\":4,\"nm\":\"Path\",\"parent\":24,\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[0.31,-1.705,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0.25,7,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[-2.5,-2.49],[2.49,-2.5],[2.5,2.49],[-2.49,2.5]],\"o\":[[2.49,2.5],[-2.5,2.49],[-2.49,-2.5],[2.5,-2.49]],\"v\":[[4.52,-4.52],[4.52,4.52],[-4.52,4.52],[-4.52,-4.52]],\"c\":true},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.949020028114,0.278430998325,0.21960799396,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Path\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":8,\"ty\":4,\"nm\":\"Path\",\"parent\":24,\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[-0.18,-0.069,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0.25,-7,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[-5.77,0],[0,2.18],[4.37,0],[0,0],[0,-4.38]],\"o\":[[5.76,0],[0,-4.38],[0,0],[-4.38,0],[0,2.18]],\"v\":[[0.007,6.559],[11.536,3.279],[3.607,-6.561],[-3.604,-6.561],[-11.533,3.279]],\"c\":true},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.949020028114,0.278430998325,0.21960799396,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Path\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":9,\"ty\":4,\"nm\":\"Combined Shape\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":0,\"s\":[0],\"e\":[360]},{\"t\":180}],\"ix\":10},\"p\":{\"a\":0,\"k\":[735.331,377.729,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[1.87,-2.46],[0,0],[0,0],[0,0],[4.35,-0.68],[0,0],[0,0],[0,0],[3.41,2.51],[0,0],[0,0],[0,0],[0,0],[0.66,4.33],[0,0],[0,0],[0,0],[-2.46,3.35],[0,0],[0,0],[0,0],[-4.27,0.68],[0,0],[0,0],[0,0],[-2.59,-1.39],[-0.99,-0.72],[0,0],[0,0],[0,0],[-0.69,-4.29],[0,0],[0,0]],\"o\":[[-0.55,3.56],[0,0],[0,0],[0,0],[-3.4,2.51],[0,0],[0,0],[0,0],[-4.35,-0.68],[0,0],[0,0],[0,0],[0,0],[-2.46,-3.4],[0,0],[0,0],[0,0],[0.69,-4.29],[0,0],[0,0],[0,0],[3.36,-2.43],[0,0],[0,0],[0,0],[3.01,0.48],[1.09,0.57],[0,0],[0,0],[0,0],[2.47,3.35],[0,0],[0,0],[0,0]],\"v\":[[26.806,4.26],[22.016,15.99],[24.876,18.85],[18.856,24.88],[16.016,22.04],[4.256,26.951],[4.256,30.921],[-4.254,30.921],[-4.254,26.951],[-16.024,22.04],[-18.854,24.88],[-24.874,18.85],[-22.584,16.561],[-22.014,15.99],[-26.814,4.26],[-30.924,4.26],[-30.924,-4.26],[-26.744,-4.26],[-21.884,-15.85],[-24.874,-18.85],[-18.854,-24.88],[-15.824,-21.85],[-4.254,-26.62],[-4.254,-30.919],[4.256,-30.919],[4.256,-26.62],[12.696,-23.79],[15.826,-21.85],[18.856,-24.88],[24.876,-18.85],[21.876,-15.85],[26.746,-4.26],[30.926,-4.26],[30.926,4.26]],\"c\":true},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":1,\"ty\":\"sh\",\"ix\":2,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,-10.76],[-5.38,-3.47],[-3.9,0],[0,10.77],[2.85,3.4],[6,0]],\"o\":[[0,6.87],[3.05,1.98],[10.76,0],[0,-4.76],[-3.58,-4.27],[-10.76,0]],\"v\":[[-19.521,0.165],[-10.581,16.555],[-0.001,19.686],[19.519,0.165],[14.959,-12.365],[-0.001,-19.355]],\"c\":true},\"ix\":2},\"nm\":\"Path 2\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":5,\"nm\":\"Merge Paths 1\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.949020028114,0.278430998325,0.21960799396,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Combined Shape\",\"np\":4,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":10,\"ty\":4,\"nm\":\"Combined Shape\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":0,\"s\":[0],\"e\":[-360]},{\"t\":180}],\"ix\":10},\"p\":{\"a\":0,\"k\":[690.327,347.093,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[2.31,-0.49],[0,0],[0,0],[0,0],[1.92,1.25],[0,0],[0,0],[0,0],[0.49,2.3],[0,0],[0,0],[0,0],[-1.21,1.88],[0,0],[0,0],[0,0],[-2.24,0.49],[0,0],[0,0],[0,0],[-1.87,-1.2],[0,0],[0,0],[0,0],[-0.51,-2.26],[0,0],[0,0],[0,0],[1.22,-1.91],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[-2.31,-0.49],[0,0],[0,0],[0,0],[-1.21,-1.91],[0,0],[0,0],[0,0],[0.51,-2.26],[0,0],[0,0],[0,0],[1.88,-1.2],[0,0],[0,0],[0,0],[2.24,0.49],[0,0],[0,0],[0,0],[1.22,1.88],[0,0],[0,0],[0,0],[-0.48,2.29],[0,0],[0,0],[0,0],[-1.91,1.24]],\"v\":[[4.204,19.165],[4.204,23.214],[-4.195,23.214],[-4.195,19.165],[-10.566,16.514],[-13.445,19.395],[-19.385,13.445],[-16.486,10.544],[-19.076,4.195],[-23.215,4.195],[-23.215,-4.206],[-19.025,-4.206],[-16.395,-10.445],[-19.385,-13.445],[-13.445,-19.395],[-10.415,-16.365],[-4.195,-18.926],[-4.195,-23.215],[4.204,-23.215],[4.204,-18.926],[10.415,-16.365],[13.445,-19.395],[19.395,-13.445],[16.395,-10.445],[19.025,-4.206],[23.214,-4.206],[23.214,4.195],[19.074,4.195],[16.484,10.535],[19.395,13.445],[13.445,19.395],[10.574,16.514]],\"c\":true},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":1,\"ty\":\"sh\",\"ix\":2,\"ks\":{\"a\":0,\"k\":{\"i\":[[7.74,0],[0,-7.74],[-7.75,0],[0,7.74]],\"o\":[[-7.75,0],[0,7.74],[7.74,0],[0,-7.74]],\"v\":[[0.005,-13.919],[-14.036,0.122],[0.005,14.161],[14.044,0.122]],\"c\":true},\"ix\":2},\"nm\":\"Path 2\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"mm\",\"mm\":5,\"nm\":\"Merge Paths 1\",\"mn\":\"ADBE Vector Filter - Merge\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.949020028114,0.278430998325,0.21960799396,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Combined Shape\",\"np\":4,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":11,\"ty\":4,\"nm\":\"Path\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[559.498,418.427,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-30.179,24.137],[51.401,24.137],[23.301,0.577],[23.301,-24.143],[-51.399,-24.143],[-49.619,4.268]],\"c\":true},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.949020028114,0.278430998325,0.21960799396,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Path\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":12,\"ty\":4,\"nm\":\"Path\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.667,\"y\":1},\"o\":{\"x\":0.333,\"y\":0},\"n\":\"0p667_1_0p333_0\",\"t\":25,\"s\":[344.455,390.955,0],\"e\":[344.205,437.455,0],\"to\":[-0.04166666790843,7.75,0],\"ti\":[0.04166666790843,-7.75,0]},{\"i\":{\"x\":0.667,\"y\":0.667},\"o\":{\"x\":0.333,\"y\":0.333},\"n\":\"0p667_0p667_0p333_0p333\",\"t\":35,\"s\":[344.205,437.455,0],\"e\":[344.205,437.455,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"i\":{\"x\":0.667,\"y\":1},\"o\":{\"x\":0.333,\"y\":0},\"n\":\"0p667_1_0p333_0\",\"t\":160,\"s\":[344.205,437.455,0],\"e\":[344.455,390.955,0],\"to\":[0.04166666790843,-7.75,0],\"ti\":[-0.04166666790843,7.75,0]},{\"t\":170}],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.667,0.667,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0p667_1_0p333_0\",\"0p667_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":25,\"s\":[0,0,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0p833_1_0p333_0\",\"0p833_1_0p333_0\",\"0p833_1_0p333_0\"],\"t\":35,\"s\":[100,100,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.667,0.667,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0,0,0]},\"n\":[\"0p667_1_0p167_0\",\"0p667_1_0p167_0\",\"0p667_1_0p167_0\"],\"t\":160,\"s\":[100,100,100],\"e\":[0,0,100]},{\"t\":170}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0.93],[-0.92,0],[0,0],[0,-0.92],[0.93,0],[0,0]],\"o\":[[0,-0.92],[0,0],[0.93,0],[0,0.93],[0,0],[-0.92,0]],\"v\":[[-7.348,0.001],[-5.669,-1.678],[5.661,-1.678],[7.352,0.001],[5.661,1.682],[-5.669,1.682]],\"c\":true},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.949020028114,0.278430998325,0.21960799396,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Path\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":13,\"ty\":4,\"nm\":\"Path\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[324.639,416.489,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[-19.75,0,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":40,\"s\":[0,100,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":50,\"s\":[100,100,100],\"e\":[35,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":96,\"s\":[35,100,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":135,\"s\":[100,100,100],\"e\":[0,100,100]},{\"t\":145}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0]],\"v\":[[-19.764,-0.41],[19.766,-0.41],[19.766,0.41],[-19.764,0.41]],\"c\":true},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.949020028114,0.278430998325,0.21960799396,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Path\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":14,\"ty\":4,\"nm\":\"Path\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[324.639,421.29,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[-19.75,0,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":45,\"s\":[0,100,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":55,\"s\":[100,100,100],\"e\":[43,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":112,\"s\":[43,100,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":143,\"s\":[100,100,100],\"e\":[0,100,100]},{\"t\":153}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0]],\"v\":[[19.766,-0.41],[-19.764,-0.41],[-19.764,0.41],[19.766,0.41]],\"c\":true},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.949020028114,0.278430998325,0.21960799396,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Path\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":15,\"ty\":4,\"nm\":\"Path\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[324.639,426.343,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[-19.75,0.25,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":53,\"s\":[0,100,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":63,\"s\":[100,100,100],\"e\":[36,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":96,\"s\":[36,100,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":150,\"s\":[100,100,100],\"e\":[0,100,100]},{\"t\":160}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0]],\"v\":[[-19.764,-0.41],[19.766,-0.41],[19.766,0.41],[-19.764,0.41]],\"c\":true},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.949020028114,0.278430998325,0.21960799396,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Path\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":16,\"ty\":4,\"nm\":\"Path\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.667,\"y\":1},\"o\":{\"x\":0.333,\"y\":0},\"n\":\"0p667_1_0p333_0\",\"t\":25,\"s\":[344.639,386.326,0],\"e\":[344.389,337.076,0],\"to\":[-0.04166666790843,-8.20833301544189,0],\"ti\":[0.04166666790843,8.20833301544189,0]},{\"i\":{\"x\":0.667,\"y\":0.667},\"o\":{\"x\":0.333,\"y\":0.333},\"n\":\"0p667_0p667_0p333_0p333\",\"t\":35,\"s\":[344.389,337.076,0],\"e\":[344.389,337.076,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"i\":{\"x\":0.667,\"y\":1},\"o\":{\"x\":0.333,\"y\":0},\"n\":\"0p667_1_0p333_0\",\"t\":160,\"s\":[344.389,337.076,0],\"e\":[344.639,386.326,0],\"to\":[0,0,0],\"ti\":[-0.04166666790843,-8.20833301544189,0]},{\"t\":170}],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.667,0.667,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0p667_1_0p333_0\",\"0p667_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":25,\"s\":[0,0,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.772,0.772,0.772],\"y\":[1,1,1]},\"o\":{\"x\":[0.317,0.317,0.317],\"y\":[0,0,0]},\"n\":[\"0p772_1_0p317_0\",\"0p772_1_0p317_0\",\"0p772_1_0p317_0\"],\"t\":35,\"s\":[100,100,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.667,0.667,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.391,0.391,0.391],\"y\":[0,0,0]},\"n\":[\"0p667_1_0p391_0\",\"0p667_1_0p391_0\",\"0p667_1_0p391_0\"],\"t\":160,\"s\":[100,100,100],\"e\":[0,0,100]},{\"t\":170}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[-3.13,0],[0,0],[-1.03,1.01],[0,1.57],[0,0]],\"o\":[[0,0],[1.57,0],[1.02,-1.03],[0,0],[0,3.12]],\"v\":[[-9.027,2.829],[9.023,2.829],[13.043,1.18],[14.693,-2.831],[-14.697,-2.831]],\"c\":true},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.949020028114,0.278430998325,0.21960799396,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Path\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":17,\"ty\":4,\"nm\":\"Path\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0p833_0p833_0p167_0p167\",\"t\":0,\"s\":[363.942,348.308,0],\"e\":[283.102,324.27,0],\"to\":[-0.2944184243679,-0.16763776540756,0],\"ti\":[-2.76275587081909,37.220401763916,0]},{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0p833_0p833_0p167_0p167\",\"t\":32,\"s\":[283.102,324.27,0],\"e\":[395.192,296.308,0],\"to\":[2.35831451416016,-31.7716884613037,0],\"ti\":[-108.670669555664,-0.74919998645782,0]},{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0p833_0p833_0p167_0p167\",\"t\":75,\"s\":[395.192,296.308,0],\"e\":[494.218,322.434,0],\"to\":[102.199325561523,0.70458507537842,0],\"ti\":[-0.98831272125244,-26.8755645751953,0]},{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0p833_0p833_0p167_0p167\",\"t\":119,\"s\":[494.218,322.434,0],\"e\":[364.442,348.558,0],\"to\":[1.02522110939026,27.8792266845703,0],\"ti\":[121.129455566406,3.39593887329102,0]},{\"t\":180}],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[3.15,0],[0,3.31],[-3.31,0],[-0.2,-3.11],[0,-0.14],[0.01,-0.14]],\"o\":[[-3.31,0],[0,-3.31],[3.16,0],[0.01,0.14],[0,0.14],[-0.2,3.12]],\"v\":[[-0.001,5.98],[-5.98,-0.001],[-0.001,-5.98],[5.96,-0.411],[5.98,-0.001],[5.96,0.41]],\"c\":true},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.949020028114,0.278430998325,0.21960799396,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Path\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":18,\"ty\":4,\"nm\":\"Path\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0p833_0p833_0p167_0p167\",\"t\":0,\"s\":[478.885,299.832,0],\"e\":[451.135,348.832,0],\"to\":[42.5,30.0416660308838,0],\"ti\":[26.3847789764404,0.25335738062859,0]},{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0p833_0p833_0p167_0p167\",\"t\":45,\"s\":[451.135,348.832,0],\"e\":[303.016,348.104,0],\"to\":[-14.8169136047363,-0.14227804541588,0],\"ti\":[9.99645233154297,7.43613004684448,0]},{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0p833_0p833_0p167_0p167\",\"t\":89,\"s\":[303.016,348.104,0],\"e\":[326.266,296.623,0],\"to\":[-47.3770790100098,-35.2427177429199,0],\"ti\":[-26.2813911437988,-0.04592277854681,0]},{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0p833_0p833_0p167_0p167\",\"t\":129,\"s\":[326.266,296.623,0],\"e\":[478.885,299.832,0],\"to\":[9.38535022735596,0.01639948785305,0],\"ti\":[0,0,0]},{\"t\":180}],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.15,-0.24],[2.2,0],[0,3.31],[-3.3,0],[0,-3.3],[0.3,-0.7]],\"o\":[[-1.04,1.76],[-3.3,0],[0,-3.3],[3.31,0],[0,0.82],[-0.1,0.26]],\"v\":[[5.155,3.035],[-0.005,5.985],[-5.985,-0.005],[-0.005,-5.985],[5.985,-0.005],[5.525,2.295]],\"c\":true},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.949020028114,0.278430998325,0.21960799396,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Path\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":19,\"ty\":4,\"nm\":\"Rectangle Copy 9\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[388.95,322.753,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"rc\",\"d\":1,\"s\":{\"a\":0,\"k\":[211.5,52.2],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"r\":{\"a\":0,\"k\":26.1,\"ix\":4},\"nm\":\"Rectangle Path 1\",\"mn\":\"ADBE Vector Shape - Rect\",\"hd\":false},{\"ty\":\"st\",\"c\":{\"a\":0,\"k\":[0.945097982883,0.945097982883,0.949020028114,1],\"ix\":3},\"o\":{\"a\":0,\"k\":100,\"ix\":4},\"w\":{\"a\":0,\"k\":0.9,\"ix\":5},\"lc\":1,\"lj\":1,\"ml\":4,\"ml2\":{\"a\":0,\"k\":4,\"ix\":8},\"nm\":\"Stroke 1\",\"mn\":\"ADBE Vector Graphic - Stroke\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Rectangle Copy 9\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"tm\",\"s\":{\"a\":0,\"k\":0,\"ix\":1},\"e\":{\"a\":0,\"k\":38,\"ix\":2},\"o\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":0,\"s\":[-24],\"e\":[336]},{\"t\":180}],\"ix\":3},\"m\":1,\"ix\":2,\"nm\":\"Trim Paths 1\",\"mn\":\"ADBE Vector Filter - Trim\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":20,\"ty\":4,\"nm\":\"Path\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[344.637,358.615,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0.25,-2,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.667,0.667,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0p667_1_0p333_0\",\"0p667_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":35,\"s\":[100,0,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0p833_1_0p333_0\",\"0p833_1_0p333_0\",\"0p833_1_0p333_0\"],\"t\":45,\"s\":[100,100,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[1,1,1]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0,0,0]},\"n\":[\"0p833_1_0p167_0\",\"0p833_1_0p167_0\",\"0p833_1_0p167_0\"],\"t\":144,\"s\":[100,100,100],\"e\":[100,0,100]},{\"t\":154}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0]],\"v\":[[19.766,-2.025],[19.766,2.025],[-19.764,2.025],[-19.764,-2.025]],\"c\":true},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.945097982883,0.945097982883,0.949020028114,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Path\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":21,\"ty\":4,\"nm\":\"Path\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[344.387,367.02,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,-22.75,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.667,0.667,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0p667_1_0p333_0\",\"0p667_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":41,\"s\":[100,0,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[1,1,1]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0,0,0]},\"n\":[\"0p833_1_0p167_0\",\"0p833_1_0p167_0\",\"0p833_1_0p167_0\"],\"t\":51,\"s\":[100,100,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[1,1,1]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0,0,0]},\"n\":[\"0p833_1_0p167_0\",\"0p833_1_0p167_0\",\"0p833_1_0p167_0\"],\"t\":150,\"s\":[100,100,100],\"e\":[100,0,100]},{\"t\":160}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0]],\"v\":[[19.766,22.831],[-19.764,22.831],[-19.764,-22.829],[19.766,-22.829]],\"c\":true},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.945097982883,0.945097982883,0.949020028114,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Path\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":22,\"ty\":4,\"nm\":\"Path\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[567.142,446.141,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-37.82,-3.568],[-130.999,-3.568],[-130.999,3.572],[-32.15,3.572],[131.001,3.572],[131.001,-3.568],[43.751,-3.568]],\"c\":true},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.039216000587,0.10980399698,0.250979989767,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Path\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":23,\"ty\":4,\"nm\":\"Path\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[646.099,159.903,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[5.93,0.48],[0.31,0],[0,-6.38],[-6.37,0],[0,6.37]],\"o\":[[-0.31,-0.03],[-6.37,0],[0,6.37],[6.37,0],[0,-6.06]],\"v\":[[0.939,-11.512],[-0.001,-11.552],[-11.551,-0.002],[-0.001,11.548],[11.548,-0.002]],\"c\":true},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"st\",\"c\":{\"a\":0,\"k\":[0.039216000587,0.10980399698,0.250979989767,1],\"ix\":3},\"o\":{\"a\":0,\"k\":100,\"ix\":4},\"w\":{\"a\":0,\"k\":0.9,\"ix\":5},\"lc\":1,\"lj\":1,\"ml\":4,\"ml2\":{\"a\":0,\"k\":4,\"ix\":8},\"nm\":\"Stroke 1\",\"mn\":\"ADBE Vector Graphic - Stroke\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Path\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"tm\",\"s\":{\"a\":0,\"k\":0,\"ix\":1},\"e\":{\"a\":0,\"k\":75,\"ix\":2},\"o\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":0,\"s\":[0],\"e\":[360]},{\"t\":180}],\"ix\":3},\"m\":1,\"ix\":2,\"nm\":\"Trim Paths 1\",\"mn\":\"ADBE Vector Filter - Trim\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":24,\"ty\":4,\"nm\":\"Path\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[290.063,244.95,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.667,0.667,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0p667_1_0p333_0\",\"0p667_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":10,\"s\":[0,0,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.667,0.667,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0p667_1_0p333_0\",\"0p667_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":20,\"s\":[100,100,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.667,0.667,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0p667_1_0p333_0\",\"0p667_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":150,\"s\":[100,100,100],\"e\":[0,0,100]},{\"t\":160}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[-13.64,0],[0,13.63],[13.64,0],[0,-13.64]],\"o\":[[13.64,0],[0,-13.64],[-13.64,0],[0,13.63]],\"v\":[[0.004,24.694],[24.694,0.004],[0.004,-24.696],[-24.696,0.004]],\"c\":true},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.039216000587,0.10980399698,0.250979989767,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Path\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":25,\"ty\":4,\"nm\":\"Path 8 Copy\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[620.664,282.903,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[-91.25,-0.25,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":40,\"s\":[0,100,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":55,\"s\":[100,100,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":135,\"s\":[100,100,100],\"e\":[0,100,100]},{\"t\":150}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0]],\"o\":[[0,0],[0,0]],\"v\":[[-91.214,0],[91.216,0]],\"c\":false},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"st\",\"c\":{\"a\":0,\"k\":[0.945097982883,0.945097982883,0.949020028114,1],\"ix\":3},\"o\":{\"a\":0,\"k\":100,\"ix\":4},\"w\":{\"a\":0,\"k\":1.8,\"ix\":5},\"lc\":2,\"lj\":2,\"nm\":\"Stroke 1\",\"mn\":\"ADBE Vector Graphic - Stroke\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Path 8 Copy\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":26,\"ty\":4,\"nm\":\"Path 8\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[617.358,267.678,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[-91,0,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":30,\"s\":[0,100,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":45,\"s\":[100,100,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":125,\"s\":[100,100,100],\"e\":[0,100,100]},{\"t\":140}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0]],\"o\":[[0,0],[0,0]],\"v\":[[-91.214,0],[91.216,0]],\"c\":false},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"st\",\"c\":{\"a\":0,\"k\":[0.945097982883,0.945097982883,0.949020028114,1],\"ix\":3},\"o\":{\"a\":0,\"k\":100,\"ix\":4},\"w\":{\"a\":0,\"k\":1.8,\"ix\":5},\"lc\":2,\"lj\":2,\"nm\":\"Stroke 1\",\"mn\":\"ADBE Vector Graphic - Stroke\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Path 8\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":27,\"ty\":4,\"nm\":\"Oval\",\"parent\":28,\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[-103.048,-2.745,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[-5.71,0],[1.98,6.87],[5.71,0],[-1.51,-5.97]],\"o\":[[5.72,0],[-1.98,-6.87],[-5.72,0],[1.52,5.97]],\"v\":[[3.213,10.75],[9.773,-1.43],[-3.367,-10.75],[-9.967,1.29]],\"c\":true},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.945097982883,0.945097982883,0.949020028114,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Oval\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":28,\"ty\":4,\"nm\":\"Path\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[692.482,278.424,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.667,0.667,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0p667_1_0p333_0\",\"0p667_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":15,\"s\":[0,0,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0p833_1_0p333_0\",\"0p833_1_0p333_0\",\"0p833_1_0p333_0\"],\"t\":30,\"s\":[100,100,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[1,1,1]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0,0,0]},\"n\":[\"0p833_1_0p167_0\",\"0p833_1_0p167_0\",\"0p833_1_0p167_0\"],\"t\":150,\"s\":[100,100,100],\"e\":[0,0,100]},{\"t\":165}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[2.02,9.71],[0,0],[-9.67,0],[0,0],[0,0],[0,0],[0,0],[-2.02,-9.71],[0,0],[9.67,0],[0,0],[0,0],[0,0]],\"o\":[[-9.68,0],[0,0],[-2.02,-9.71],[0,0],[0,0],[0,0],[0,0],[9.67,0],[0,0],[2.02,9.71],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-110.416,27.197],[-131.596,9.607],[-135.606,-9.604],[-121.756,-27.193],[-46.386,-27.193],[35.234,-27.193],[85.874,-27.193],[110.414,-27.193],[131.594,-9.604],[135.604,9.607],[121.754,27.197],[85.874,27.197],[45.994,27.197],[-46.386,27.197]],\"c\":true},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.03529411764705882, 0.5450980392156862, 0.6549019607843137, 1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Path\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":29,\"ty\":4,\"nm\":\"Rectangle Copy 10\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[388.95,322.753,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"rc\",\"d\":1,\"s\":{\"a\":0,\"k\":[211.5,52.2],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"r\":{\"a\":0,\"k\":26.1,\"ix\":4},\"nm\":\"Rectangle Path 1\",\"mn\":\"ADBE Vector Shape - Rect\",\"hd\":false},{\"ty\":\"st\",\"c\":{\"a\":0,\"k\":[0.945097982883,0.945097982883,0.949020028114,1],\"ix\":3},\"o\":{\"a\":0,\"k\":100,\"ix\":4},\"w\":{\"a\":0,\"k\":0.9,\"ix\":5},\"lc\":1,\"lj\":1,\"ml\":4,\"ml2\":{\"a\":0,\"k\":4,\"ix\":8},\"d\":[{\"n\":\"d\",\"nm\":\"dash\",\"v\":{\"a\":0,\"k\":8.1,\"ix\":1}}],\"nm\":\"Stroke 1\",\"mn\":\"ADBE Vector Graphic - Stroke\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Rectangle Copy 9\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":30,\"ty\":4,\"nm\":\"Rectangle Copy 9\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[388.95,322.753,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"rc\",\"d\":1,\"s\":{\"a\":0,\"k\":[211.5,52.2],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"r\":{\"a\":0,\"k\":26.1,\"ix\":4},\"nm\":\"Rectangle Path 1\",\"mn\":\"ADBE Vector Shape - Rect\",\"hd\":false},{\"ty\":\"st\",\"c\":{\"a\":0,\"k\":[0.945097982883,0.945097982883,0.949020028114,1],\"ix\":3},\"o\":{\"a\":0,\"k\":100,\"ix\":4},\"w\":{\"a\":0,\"k\":0.9,\"ix\":5},\"lc\":1,\"lj\":1,\"ml\":4,\"ml2\":{\"a\":0,\"k\":4,\"ix\":8},\"d\":[{\"n\":\"d\",\"nm\":\"dash\",\"v\":{\"a\":0,\"k\":8.1,\"ix\":1}}],\"nm\":\"Stroke 1\",\"mn\":\"ADBE Vector Graphic - Stroke\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Rectangle Copy 9\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":31,\"ty\":4,\"nm\":\"Rectangle Copy 8\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[589.1,343.653,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[26,-0.25,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":40,\"s\":[0,100,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":50,\"s\":[100,100,100],\"e\":[23,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":97,\"s\":[23,100,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":155,\"s\":[100,100,100],\"e\":[0,100,100]},{\"t\":165}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"rc\",\"d\":1,\"s\":{\"a\":0,\"k\":[52.2,4.5],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":4},\"nm\":\"Rectangle Path 1\",\"mn\":\"ADBE Vector Shape - Rect\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.945097982883,0.945097982883,0.949020028114,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Rectangle Copy 8\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":32,\"ty\":4,\"nm\":\"Rectangle Copy 7\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[586.3,333.103,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[16,0,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":36,\"s\":[0,100,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":46,\"s\":[100,100,100],\"e\":[30,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":75,\"s\":[30,100,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":150,\"s\":[100,100,100],\"e\":[0,100,100]},{\"t\":160}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"rc\",\"d\":1,\"s\":{\"a\":0,\"k\":[32.4,4.5],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":4},\"nm\":\"Rectangle Path 1\",\"mn\":\"ADBE Vector Shape - Rect\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.945097982883,0.945097982883,0.949020028114,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Rectangle Copy 7\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":33,\"ty\":4,\"nm\":\"Rectangle Copy 6\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[582.4,322.303,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[22,0,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":30,\"s\":[0,100,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":40,\"s\":[100,100,100],\"e\":[17,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":115,\"s\":[17,100,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":144,\"s\":[100,100,100],\"e\":[0,100,100]},{\"t\":154}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"rc\",\"d\":1,\"s\":{\"a\":0,\"k\":[45,4.5],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":4},\"nm\":\"Rectangle Path 1\",\"mn\":\"ADBE Vector Shape - Rect\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.945097982883,0.945097982883,0.949020028114,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Rectangle Copy 6\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":34,\"ty\":4,\"nm\":\"Path 11\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[436.227,165.991,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0]],\"o\":[[0,0],[0,0]],\"v\":[[-138.245,0],[138.245,0]],\"c\":false},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"st\",\"c\":{\"a\":0,\"k\":[0.945097982883,0.945097982883,0.949020028114,1],\"ix\":3},\"o\":{\"a\":0,\"k\":100,\"ix\":4},\"w\":{\"a\":0,\"k\":0.9,\"ix\":5},\"lc\":1,\"lj\":1,\"ml\":4,\"ml2\":{\"a\":0,\"k\":4,\"ix\":8},\"nm\":\"Stroke 1\",\"mn\":\"ADBE Vector Graphic - Stroke\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Path 11\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":35,\"ty\":4,\"nm\":\"Path 10\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[460.81,155.064,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0]],\"o\":[[0,0],[0,0]],\"v\":[[-138.762,0],[138.758,0]],\"c\":false},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"st\",\"c\":{\"a\":0,\"k\":[0.945097982883,0.945097982883,0.949020028114,1],\"ix\":3},\"o\":{\"a\":0,\"k\":100,\"ix\":4},\"w\":{\"a\":0,\"k\":0.9,\"ix\":5},\"lc\":1,\"lj\":1,\"ml\":4,\"ml2\":{\"a\":0,\"k\":4,\"ix\":8},\"nm\":\"Stroke 1\",\"mn\":\"ADBE Vector Graphic - Stroke\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Path 10\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":36,\"ty\":4,\"nm\":\"Rectangle Copy 5\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[683.35,240.153,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[25.75,-0.25,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":41,\"s\":[0,100,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":56,\"s\":[100,100,100],\"e\":[32,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":102,\"s\":[32,100,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":155,\"s\":[100,100,100],\"e\":[0,100,100]},{\"t\":170}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"rc\",\"d\":1,\"s\":{\"a\":0,\"k\":[52.2,4.5],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":4},\"nm\":\"Rectangle Path 1\",\"mn\":\"ADBE Vector Shape - Rect\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.945097982883,0.945097982883,0.949020028114,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Rectangle Copy 5\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":37,\"ty\":4,\"nm\":\"Rectangle Copy 4\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[680.6,228.703,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[23,0,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":30,\"s\":[0,100,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":45,\"s\":[100,100,100],\"e\":[27,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":85,\"s\":[27,100,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":149,\"s\":[100,100,100],\"e\":[0,100,100]},{\"t\":164}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"rc\",\"d\":1,\"s\":{\"a\":0,\"k\":[45,4.5],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":4},\"nm\":\"Rectangle Path 1\",\"mn\":\"ADBE Vector Shape - Rect\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.945097982883,0.945097982883,0.949020028114,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Rectangle Copy 4\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":38,\"ty\":4,\"nm\":\"Rectangle\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[677.4,218.153,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[22.5,0.25,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":20,\"s\":[0,100,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":35,\"s\":[100,100,100],\"e\":[33,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":114,\"s\":[33,100,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":141,\"s\":[100,100,100],\"e\":[0,100,100]},{\"t\":156}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"rc\",\"d\":1,\"s\":{\"a\":0,\"k\":[45,4.5],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":4},\"nm\":\"Rectangle Path 1\",\"mn\":\"ADBE Vector Shape - Rect\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.945097982883,0.945097982883,0.949020028114,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Rectangle\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":39,\"ty\":4,\"nm\":\"Rectangle Copy 3\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[332.45,263.403,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[-88,0.5,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":31,\"s\":[0,100,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":46,\"s\":[100,100,100],\"e\":[30,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":95,\"s\":[30,100,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":156,\"s\":[100,100,100],\"e\":[0,100,100]},{\"t\":170}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"rc\",\"d\":1,\"s\":{\"a\":0,\"k\":[177.3,8.1],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":4},\"nm\":\"Rectangle Path 1\",\"mn\":\"ADBE Vector Shape - Rect\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.945097982883,0.945097982883,0.949020028114,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Rectangle Copy 3\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":40,\"ty\":4,\"nm\":\"Rectangle Copy 2\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[328.6,245.153,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[-65.75,0.25,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":19,\"s\":[0,100,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":34,\"s\":[100,100,100],\"e\":[34,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":73,\"s\":[34,100,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":143,\"s\":[100,100,100],\"e\":[0,100,100]},{\"t\":157}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"rc\",\"d\":1,\"s\":{\"a\":0,\"k\":[132.3,8.1],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":4},\"nm\":\"Rectangle Path 1\",\"mn\":\"ADBE Vector Shape - Rect\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.945097982883,0.945097982883,0.949020028114,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Rectangle Copy 2\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":41,\"ty\":4,\"nm\":\"Rectangle\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[323.6,227.653,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[-66.25,0.75,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":11,\"s\":[0,100,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":26,\"s\":[100,100,100],\"e\":[24,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":104,\"s\":[24,100,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":136,\"s\":[100,100,100],\"e\":[0,100,100]},{\"t\":150}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"rc\",\"d\":1,\"s\":{\"a\":0,\"k\":[132.3,8.1],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":4},\"nm\":\"Rectangle Path 1\",\"mn\":\"ADBE Vector Shape - Rect\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.945097982883,0.945097982883,0.949020028114,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Rectangle\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":42,\"ty\":4,\"nm\":\"Path 9\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[573.552,462.307,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0]],\"o\":[[0,0],[0,0]],\"v\":[[-295.018,0],[295.022,0]],\"c\":false},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"st\",\"c\":{\"a\":0,\"k\":[0.949020028114,0.278430998325,0.21960799396,1],\"ix\":3},\"o\":{\"a\":0,\"k\":100,\"ix\":4},\"w\":{\"a\":0,\"k\":3.6,\"ix\":5},\"lc\":2,\"lj\":2,\"nm\":\"Stroke 1\",\"mn\":\"ADBE Vector Graphic - Stroke\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Path 9\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":43,\"ty\":4,\"nm\":\"Rectangle Copy 3\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[678.75,506.353,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"rc\",\"d\":1,\"s\":{\"a\":0,\"k\":[6.3,30.6],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":4},\"nm\":\"Rectangle Path 1\",\"mn\":\"ADBE Vector Shape - Rect\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.949020028114,0.278430998325,0.21960799396,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Rectangle Copy 3\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":44,\"ty\":4,\"nm\":\"Rectangle\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[276.45,506.353,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"rc\",\"d\":1,\"s\":{\"a\":0,\"k\":[6.3,30.6],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":4},\"nm\":\"Rectangle Path 1\",\"mn\":\"ADBE Vector Shape - Rect\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.949020028114,0.278430998325,0.21960799396,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Rectangle\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":45,\"ty\":4,\"nm\":\"Rectangle Copy 2\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[775.05,505.453,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"rc\",\"d\":1,\"s\":{\"a\":0,\"k\":[234.9,50.4],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"r\":{\"a\":0,\"k\":9.9,\"ix\":4},\"nm\":\"Rectangle Path 1\",\"mn\":\"ADBE Vector Shape - Rect\",\"hd\":false},{\"ty\":\"st\",\"c\":{\"a\":0,\"k\":[0.039216000587,0.10980399698,0.250979989767,1],\"ix\":3},\"o\":{\"a\":0,\"k\":100,\"ix\":4},\"w\":{\"a\":0,\"k\":0.9,\"ix\":5},\"lc\":1,\"lj\":1,\"ml\":4,\"ml2\":{\"a\":0,\"k\":4,\"ix\":8},\"nm\":\"Stroke 1\",\"mn\":\"ADBE Vector Graphic - Stroke\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Rectangle Copy 2\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":46,\"ty\":4,\"nm\":\"Rectangle\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[445.2,505.453,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"rc\",\"d\":1,\"s\":{\"a\":0,\"k\":[372.6,50.4],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"r\":{\"a\":0,\"k\":9.9,\"ix\":4},\"nm\":\"Rectangle Path 1\",\"mn\":\"ADBE Vector Shape - Rect\",\"hd\":false},{\"ty\":\"st\",\"c\":{\"a\":0,\"k\":[0.039216000587,0.10980399698,0.250979989767,1],\"ix\":3},\"o\":{\"a\":0,\"k\":100,\"ix\":4},\"w\":{\"a\":0,\"k\":0.9,\"ix\":5},\"lc\":1,\"lj\":1,\"ml\":4,\"ml2\":{\"a\":0,\"k\":4,\"ix\":8},\"nm\":\"Stroke 1\",\"mn\":\"ADBE Vector Graphic - Stroke\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Rectangle\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":47,\"ty\":4,\"nm\":\"Rectangle Copy\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[776.4,564.403,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"rc\",\"d\":1,\"s\":{\"a\":0,\"k\":[237.6,44.1],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"r\":{\"a\":0,\"k\":22.05,\"ix\":4},\"nm\":\"Rectangle Path 1\",\"mn\":\"ADBE Vector Shape - Rect\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.945097982883,0.945097982883,0.949020028114,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Rectangle Copy\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":48,\"ty\":4,\"nm\":\"Rectangle\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[445.2,564.403,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"rc\",\"d\":1,\"s\":{\"a\":0,\"k\":[372.6,44.1],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"r\":{\"a\":0,\"k\":22.05,\"ix\":4},\"nm\":\"Rectangle Path 1\",\"mn\":\"ADBE Vector Shape - Rect\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.945097982883,0.945097982883,0.949020028114,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Rectangle\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":49,\"ty\":4,\"nm\":\"Rectangle\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[571.2,484.303,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"rc\",\"d\":1,\"s\":{\"a\":0,\"k\":[626.4,44.1],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":4},\"nm\":\"Rectangle Path 1\",\"mn\":\"ADBE Vector Shape - Rect\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.945097982883,0.945097982883,0.949020028114,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Rectangle\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":50,\"ty\":4,\"nm\":\"Rectangle\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[870,299.803,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"rc\",\"d\":1,\"s\":{\"a\":0,\"k\":[37.8,267.3],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":4},\"nm\":\"Rectangle Path 1\",\"mn\":\"ADBE Vector Shape - Rect\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.945097982883,0.945097982883,0.949020028114,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Rectangle\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":51,\"ty\":4,\"nm\":\"Path\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.582,\"y\":0.582},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0p582_0p582_0p167_0p167\",\"t\":75,\"s\":[361.302,119.239,0],\"e\":[778.152,118.569,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"i\":{\"x\":0.671,\"y\":0.671},\"o\":{\"x\":0.335,\"y\":0.335},\"n\":\"0p671_0p671_0p335_0p335\",\"t\":119.301,\"s\":[778.152,118.569,0],\"e\":[848.942,168.279,0],\"to\":[0,0,0],\"ti\":[-3.8800048828125,-50.4599914550781,0]},{\"i\":{\"x\":0.674,\"y\":0.674},\"o\":{\"x\":0.339,\"y\":0.339},\"n\":\"0p674_0p674_0p339_0p339\",\"t\":129.452,\"s\":[848.942,168.279,0],\"e\":[803.882,226.229,0],\"to\":[2.780029296875,35.52001953125,0],\"ti\":[0.5599365234375,-24.6199951171875,0]},{\"i\":{\"x\":0.686,\"y\":0.686},\"o\":{\"x\":0.349,\"y\":0.349},\"n\":\"0p686_0p686_0p349_0p349\",\"t\":137.746,\"s\":[803.882,226.229,0],\"e\":[849.312,302.319,0],\"to\":[-0.550048828125,24.6300048828125,0],\"ti\":[5.330078125,-69.5099792480469,0]},{\"i\":{\"x\":0.768,\"y\":0.768},\"o\":{\"x\":0.405,\"y\":0.405},\"n\":\"0p768_0p768_0p405_0p405\",\"t\":148.03,\"s\":[849.312,302.319,0],\"e\":[758.412,386.539,0],\"to\":[-11.8699951171875,70.4499816894531,0],\"ti\":[26.31005859375,5.58999633789062,0]},{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.401,\"y\":0.401},\"n\":\"0p833_0p833_0p401_0p401\",\"t\":162.631,\"s\":[758.412,386.539,0],\"e\":[737.412,379.238,0],\"to\":[-9.6199951171875,-1.67001342773438,0],\"ti\":[0,0,0]},{\"t\":165}],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":0,\"s\":[0,0,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":5,\"s\":[100,100,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":165,\"s\":[100,100,100],\"e\":[0,0,100]},{\"t\":170}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[-3.21,0],[-0.5,2.69],[0,0],[0,0],[0,0],[0,0.09],[3.19,0],[0,-3.2]],\"o\":[[2.82,0],[0,0],[0,0],[0,0],[0.01,-0.08],[0,-3.2],[-3.21,0],[0,3.2]],\"v\":[[0.008,5.788],[5.689,1.079],[4.538,1.079],[4.529,0.258],[5.779,0.258],[5.788,-0.001],[0.008,-5.792],[-5.792,-0.001]],\"c\":true},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.949020028114,0.278430998325,0.21960799396,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Path\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":52,\"ty\":4,\"nm\":\"Oval\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.582,\"y\":0.582},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0p582_0p582_0p167_0p167\",\"t\":5,\"s\":[361.302,119.239,0],\"e\":[778.152,118.569,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"i\":{\"x\":0.671,\"y\":0.671},\"o\":{\"x\":0.335,\"y\":0.335},\"n\":\"0p671_0p671_0p335_0p335\",\"t\":61.606,\"s\":[778.152,118.569,0],\"e\":[848.942,168.279,0],\"to\":[0,0,0],\"ti\":[-3.8800048828125,-50.4599914550781,0]},{\"i\":{\"x\":0.674,\"y\":0.674},\"o\":{\"x\":0.339,\"y\":0.339},\"n\":\"0p674_0p674_0p339_0p339\",\"t\":74.578,\"s\":[848.942,168.279,0],\"e\":[803.882,226.229,0],\"to\":[2.780029296875,35.52001953125,0],\"ti\":[0.5599365234375,-24.6199951171875,0]},{\"i\":{\"x\":0.686,\"y\":0.686},\"o\":{\"x\":0.349,\"y\":0.349},\"n\":\"0p686_0p686_0p349_0p349\",\"t\":85.176,\"s\":[803.882,226.229,0],\"e\":[849.312,302.319,0],\"to\":[-0.550048828125,24.6300048828125,0],\"ti\":[5.330078125,-69.5099792480469,0]},{\"i\":{\"x\":0.768,\"y\":0.768},\"o\":{\"x\":0.405,\"y\":0.405},\"n\":\"0p768_0p768_0p405_0p405\",\"t\":98.316,\"s\":[849.312,302.319,0],\"e\":[758.412,386.539,0],\"to\":[-11.8699951171875,70.4499816894531,0],\"ti\":[26.31005859375,5.58999633789062,0]},{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.401,\"y\":0.401},\"n\":\"0p833_0p833_0p401_0p401\",\"t\":116.973,\"s\":[758.412,386.539,0],\"e\":[737.412,379.238,0],\"to\":[-9.6199951171875,-1.67001342773438,0],\"ti\":[0,0,0]},{\"t\":120}],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[11.7,11.7],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Oval\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":5,\"op\":165,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":53,\"ty\":4,\"nm\":\"Path 7\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[604.74,253.456,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[-3.88,-50.46],[0.56,-24.62],[5.33,-69.51],[26.31,5.59],[0,0]],\"o\":[[0,0],[0,0],[2.78,35.52],[-0.55,24.63],[-11.87,70.45],[-9.62,-1.67],[0,0]],\"v\":[[-244.198,-133.761],[172.652,-134.431],[243.442,-84.721],[198.382,-26.771],[243.812,49.319],[152.912,133.539],[131.912,126.238]],\"c\":false},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"st\",\"c\":{\"a\":0,\"k\":[0.039216000587,0.10980399698,0.250979989767,1],\"ix\":3},\"o\":{\"a\":0,\"k\":100,\"ix\":4},\"w\":{\"a\":0,\"k\":1.8,\"ix\":5},\"lc\":1,\"lj\":1,\"ml\":4,\"ml2\":{\"a\":0,\"k\":4,\"ix\":8},\"d\":[{\"n\":\"d\",\"nm\":\"dash\",\"v\":{\"a\":0,\"k\":6.3,\"ix\":1}}],\"nm\":\"Stroke 1\",\"mn\":\"ADBE Vector Graphic - Stroke\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Path 7\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"tm\",\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":75,\"s\":[0],\"e\":[100]},{\"t\":165}],\"ix\":1},\"e\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":5,\"s\":[0],\"e\":[100]},{\"t\":120}],\"ix\":2},\"o\":{\"a\":0,\"k\":0,\"ix\":3},\"m\":1,\"ix\":2,\"nm\":\"Trim Paths 1\",\"mn\":\"ADBE Vector Filter - Trim\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":54,\"ty\":4,\"nm\":\"Path Copy 2\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[415.05,198.103,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[-1.74,0],[0,1.74],[1.74,0],[0,-1.74]],\"o\":[[1.74,0],[0,-1.74],[-1.74,0],[0,1.74]],\"v\":[[0,3.15],[3.15,0],[0,-3.15],[-3.15,0]],\"c\":true},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[1,1,1,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Path Copy 2\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":55,\"ty\":4,\"nm\":\"Path Copy\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[402.45,198.103,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[-1.74,0],[0,1.74],[1.74,0],[0,-1.74]],\"o\":[[1.74,0],[0,-1.74],[-1.74,0],[0,1.74]],\"v\":[[0,3.15],[3.15,0],[0,-3.15],[-3.15,0]],\"c\":true},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.949020028114,0.278430998325,0.21960799396,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Path Copy\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":56,\"ty\":4,\"nm\":\"Path\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[389.449,198.275,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[-1.74,0],[0,1.74],[1.74,0],[0,-1.74]],\"o\":[[1.74,0],[0,-1.74],[-1.74,0],[0,1.74]],\"v\":[[0,3.15],[3.15,0],[0,-3.15],[-3.15,0]],\"c\":true},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.345097988844,0.349020004272,0.356862992048,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Path\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":57,\"ty\":4,\"nm\":\"Rectangle\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[344.4,389.803,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.667,0.667,0.667],\"y\":[1,1,1]},\"o\":{\"x\":[0.333,0.333,0.333],\"y\":[0,0,0]},\"n\":[\"0p667_1_0p333_0\",\"0p667_1_0p333_0\",\"0p667_1_0p333_0\"],\"t\":25,\"s\":[0,0,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[1,1,1]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0,0,0]},\"n\":[\"0p833_1_0p167_0\",\"0p833_1_0p167_0\",\"0p833_1_0p167_0\"],\"t\":35,\"s\":[100,100,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[1,1,1]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0,0,0]},\"n\":[\"0p833_1_0p167_0\",\"0p833_1_0p167_0\",\"0p833_1_0p167_0\"],\"t\":160,\"s\":[100,100,100],\"e\":[0,0,100]},{\"t\":170}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[-1.28,-1.74],[-0.77,0],[0,0],[-1.6,1.59],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[1.28,1.74],[0.77,0],[0,0],[1.6,-1.59],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-29.7,-55.35],[-14.59,-55.35],[-13.51,-52.13],[-9.48,-49.9],[9.01,-49.9],[13.03,-51.55],[14.63,-55.35],[29.7,-55.35],[29.7,55.35],[-29.7,55.35]],\"c\":true},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"rd\",\"nm\":\"Round Corners 1\",\"r\":{\"a\":0,\"k\":10.8,\"ix\":1},\"ix\":2,\"mn\":\"ADBE Vector Filter - RC\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.039216000587,0.10980399698,0.250979989767,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Rectangle\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":58,\"ty\":4,\"nm\":\"Rectangle\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[557.789,290.601,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0]],\"v\":[[-198.034,-104.152],[158.016,-104.152],[198.036,104.148],[-155.094,104.148]],\"c\":true},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"rd\",\"nm\":\"Round Corners 1\",\"r\":{\"a\":0,\"k\":15.3,\"ix\":1},\"ix\":2,\"mn\":\"ADBE Vector Filter - RC\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.9176470588235294, 0.3254901960784314, 0.3254901960784314, 1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Rectangle\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":59,\"ty\":4,\"nm\":\"Rectangle\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[712.05,280.903,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"rc\",\"d\":1,\"s\":{\"a\":0,\"k\":[132.3,281.7],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"r\":{\"a\":0,\"k\":9.9,\"ix\":4},\"nm\":\"Rectangle Path 1\",\"mn\":\"ADBE Vector Shape - Rect\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.945097982883,0.945097982883,0.949020028114,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Rectangle\",\"np\":2,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":180,\"st\":0,\"bm\":0}],\"markers\":[]}","import {\n  html,\n  $state,\n  sideEffect,\n  component,\n  sub,\n  attr,\n  prop,\n  getElement,\n} from '../../src/';\nimport { getCss } from '../utils.ts';\nimport carbon from '../images/carbon.svg';\nimport { computerAnimation } from './animations/computer_animation';\nimport { getIsInView } from '../utils';\n\ncomponent('nth-intro', () => {\n  const css = getCss();\n\n  const $animationStates = $state({\n    showImage: false,\n    showExample: false,\n    showTopText: false,\n    showAsterisk: false,\n    showBottomText: false,\n  });\n\n  const $opacity = $state({\n    value: 1,\n  });\n\n  sideEffect(\n    () => {\n      setTimeout(() => {\n        $animationStates.showTopText = true;\n        $animationStates.showImage = true;\n      }, 300);\n      setTimeout(() => {\n        $animationStates.showExample = true;\n      }, 800);\n\n      setTimeout(() => {\n        $animationStates.showBottomText = true;\n        $animationStates.showAsterisk = true;\n      }, 2000);\n\n      window.addEventListener('scroll', e => {\n        $opacity.value = Math.max(\n          0,\n          1 -\n            Math.min(\n              100,\n              Math.round((window.scrollY / (window.innerHeight * 0.6)) * 100) /\n                100\n            )\n        );\n      });\n    },\n    () => []\n  );\n\n  function renderTopText() {\n    return html`\n      <p\n        ${css`\n          line-height: 1.4em;\n          transform: translateY(\n            ${$animationStates.showTopText ? '0' : '400px'}\n          );\n          transition: all 0.5s ease-out;\n        `}\n      >\n        Not just the\n        <span\n          ${css`\n            display: inline-block;\n            line-height: 1em;\n          `}\n        >\n          <nth-logo></nth-logo\n        ></span>\n        JavaScript framework you found today!<span\n          ${css`\n            position: relative;\n            right: ${$animationStates.showAsterisk ? '0' : '-50px'};\n            display: inline-block;\n            opacity: ${$animationStates.showAsterisk ? '1' : '0'};\n            transition: all 0.5s ease-out;\n          `}\n          >*</span\n        >\n      </p>\n    `;\n  }\n\n  function renderAsteriskText() {\n    return html`\n      <p\n        ${css`\n          font-size: 0.3em;\n          color: #0f353d;\n          text-shadow: 0px 1px 2px rgba(47, 178, 206, 0.42);\n          padding-right: 40px;\n          transform: translateY(\n            ${$animationStates.showBottomText ? '0' : '400px'}\n          );\n          transition: all 0.5s ease-out;\n\n          @media only screen and (max-width: 600px) {\n            font-size: 0.5em;\n            padding-right: 0px;\n          }\n        `}\n      >\n        * Okay maybe it is but if you keep scrolling there might be something\n        here for you?\n      </p>\n    `;\n  }\n\n  function renderTextBox() {\n    return html`\n      <div\n        ${css`\n          flex: 1;\n          color: white;\n          font-size: 2.5em;\n          font-family: 'Rubik', sans-serif;\n          display: flex;\n          align-items: center;\n          overflow: hidden;\n          @media only screen and (max-width: 600px) {\n            font-size: 2.3em;\n          }\n        `}\n      >\n        <div\n          ${css`\n            max-width: 90%;\n            @media only screen and (max-width: 600px) {\n              max-width: 100%;\n            }\n          `}\n        >\n          ${sub(renderTopText())} ${sub(renderAsteriskText())}\n        </div>\n      </div>\n    `;\n  }\n\n  function renderImage() {\n    return html`\n      <div\n        ${css`\n          flex: 1;\n          overflow: hidden;\n          position: relative;\n          padding-bottom: 50px;\n          display: flex;\n          align-items: flex-end;\n          align-self: center;\n          transition: all 0.5s ease-out;\n          opacity: ${$animationStates.showImage ? '1' : '0'};\n        `}\n      >\n        <div>\n          <img\n            ${css`\n              width: 100%;\n            `}\n            src=\".${carbon}\"\n          />\n        </div>\n        <div\n          ${css`\n            position: absolute;\n            right: 10px;\n            bottom: 30px;\n            background: #1a505b;\n            padding: 10px;\n            border: 1px solid #098ba75e;\n            border-radius: 5px;\n            transition: all 0.5s ease-out;\n            opacity: ${$animationStates.showExample ? '1' : '0'};\n          `}\n        >\n          <nth-hello-world\n            style=\"color:white; font-family:'Rubik', sans-serif; letter-spacing: .05em;\"\n          ></nth-hello-world>\n        </div>\n      </div>\n    `;\n  }\n\n  return {\n    watch: [$animationStates, $opacity],\n    render: () => {\n      return html`\n        <div\n          ${css`\n            width: 100%;\n            max-width: 100%;\n            overflow: hidden;\n          `}\n        >\n          <div\n            ${css`\n              padding-top: 25px;\n              padding-bottom: 50px;\n              margin-left: -20px;\n              padding-left: 20px;\n              margin-right: -20px;\n              padding-right: 20px;\n            `}\n            ${attr(\n              'style',\n              `background: #098ba7; border-radius: 0 0 25% 75% / ${$opacity.value *\n                85}px;`\n            )}\n          >\n            <nth-container>\n              <div\n                ${css`\n                  display: flex;\n                  @media only screen and (max-width: 600px) {\n                    display: block;\n                    opacity: 1 !important;\n                  }\n                `}\n                ${attr('style', `opacity:${$opacity.value}`)}\n              >\n                ${sub(renderTextBox())} ${sub(renderImage())}\n              </div>\n            </nth-container>\n          </div>\n          <nth-container>\n            <nth-intro-section-info></nth-intro-section-info>\n          </nth-container>\n        </div>\n      `;\n    },\n  };\n});\n\ncomponent('nth-intro-section-info', () => {\n  const css = getCss();\n  const $isInView = getIsInView();\n  return {\n    watch: [$isInView],\n    render: () => html`\n      <div\n        ${css`\n          display: flex;\n          margin-top: 100px;\n          opacity: ${$isInView.value ? '1' : '0'};\n          transition: all 1s;\n          @media only screen and (max-width: 600px) {\n            display: block;\n          }\n        `}\n      >\n        <div\n          ${css`\n            background: #1a505b;\n            padding-top: 4%;\n            padding-bottom: 4%;\n            border-radius: 50%;\n            max-width: 45%;\n            height: 100%;\n            @media only screen and (max-width: 600px) {\n              height: initial;\n              max-width: 100%;\n            }\n            flex: 1;\n            box-shadow: inset 0 0 9px #0000006b;\n            overflow: hidden;\n          `}\n        >\n          <div\n            ${css`\n              width: 130%;\n              margin-left: -15%;\n            `}\n          >\n            <nth-lottie ${prop('animationData', computerAnimation)}>\n            </nth-lottie>\n          </div>\n        </div>\n        <div\n          ${css`\n            font-family: Rubik, sans-serif;\n            color: #098ba7;\n            text-shadow: none;\n            flex: 1;\n            font-weight: normal;\n            padding-left: 40px;\n            @media only screen and (max-width: 600px) {\n              padding-left: 0px;\n              > ul {\n                padding-left: 20px;\n              }\n            }\n          `}\n        >\n          <h1\n            ${css`\n              font-weight: normal;\n            `}\n          >\n            <nth-logo ${prop('showFullName', true)}></nth-logo>\n            is a JavaScript framework with a focus on:\n          </h1>\n          <ul\n            ${css`\n              margin: 0;\n              padding: 0;\n              > li {\n                margin-top: 10px;\n              }\n            `}\n          >\n            <li>\n              <b>using modern platform features such as:</b>\n              <ul\n                ${css`\n                  margin: 0;\n                `}\n              >\n                <li>web components</li>\n                <li>proxies for change tracking</li>\n                <li>generators</li>\n                <li>\n                  es module: You don't have to use a bundler, if you don't need\n                  to.\n                </li>\n              </ul>\n            </li>\n            <li>\n              <b>'treeshakability'</b>: you decide how much or how little of the\n              framework you want to load/bundle.\n            </li>\n\n            <li>\n              <b>'composability'</b>: the architecture is functional and thus\n              highly composable.\n            </li>\n            <p\n              ${css`\n                font-size: 0.9em;\n                font-style: italic;\n              `}\n            >\n              Obviously, this means that you will need to compile down for older\n              browser versions and/or provide polyfills if you have to to\n              support them.\n            </p>\n          </ul>\n        </div>\n      </div>\n    `,\n  };\n});\n","import { html, component, $state, attr, input, text, $attr } from '../../src/';\n\ncomponent('nth-hello-world', () => {\n  const $input = $state({ value: 'Hello World!' });\n  const $style = $attr('style', 'color: white;');\n  return {\n    watch: [$input, $style],\n    render: () => {\n      return html`\n        <div ${attr('style', $style.value)}>\n          <div>${text($input.value)}</div>\n          <div>\n            <input\n              type=\"text\"\n              ${attr('value', $input.value)}\n              ${input(value => ($input.value = value))}\n            />\n          </div>\n        </div>\n      `;\n    },\n  };\n});\n","import {\n  component,\n  html,\n  createContext,\n  $state,\n  $attr,\n  sub,\n  clss,\n  attr,\n  $prop,\n  sideEffect,\n} from '../../src';\nimport { getCss } from '../utils';\n\nexport interface Route {\n  template: HTMLElement;\n  path: string;\n}\nconst routerContext = createContext<{\n  currentPath: string;\n}>('router', { currentPath: '' });\n\ncomponent('nth-router', () => {\n  const $context = routerContext.provide({ currentPath: '' });\n  const $hash = $state({ value: window.location.hash });\n  window.addEventListener(\n    'hashchange',\n    () => {\n      $hash.value = window.location.hash;\n    },\n    false\n  );\n  const handleHash = () => {\n    $context.currentPath = $hash.value.slice(1) || '/';\n  };\n  $hash.on(handleHash);\n  handleHash();\n  return {\n    render: () =>\n      html`\n        <slot></slot>\n      `,\n  };\n});\n\ncomponent('nth-route', () => {\n  const $context = routerContext.get();\n  const $path = $attr('path');\n\n  return {\n    watch: [$context, $path],\n    render: () =>\n      html`\n        ${sub(\n          $context.currentPath === $path.value\n            ? html`\n                <slot></slot>\n              `\n            : html``\n        )}\n      `,\n  };\n});\n\ncomponent('nth-link', () => {\n  const $path = $attr('path');\n  const css = getCss();\n  const $css = $prop('css', (c: typeof css) => css``);\n  const $classes = $state({ value: $css.value(css) });\n  const $context = routerContext.get();\n  sideEffect(\n    () => {\n      $classes.value = $css.value(css);\n    },\n    () => [$css, $context]\n  );\n  return {\n    watch: [$context, $path, $classes, $css],\n    render: () =>\n      html`\n        <a\n          ${attr('href', '#' + $path.value)}\n          ${$classes.value}\n          ${clss($context.currentPath === $path.value ? 'active' : '')}\n          ><slot></slot\n        ></a>\n      `,\n  };\n});\n","(typeof navigator !== \"undefined\") && (function(root, factory) {\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(function() {\r\n            return factory(root);\r\n        });\r\n    } else if (typeof module === \"object\" && module.exports) {\r\n        module.exports = factory(root);\r\n    } else {\r\n        root.lottie = factory(root);\r\n        root.bodymovin = root.lottie;\r\n    }\r\n}((window || {}), function(window) {\r\n    \"use strict\";\r\n    var svgNS = \"http://www.w3.org/2000/svg\";\r\n\r\nvar locationHref = '';\r\n\r\nvar initialDefaultFrame = -999999;\r\n\r\nvar subframeEnabled = true;\r\nvar expressionsPlugin;\r\nvar isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\r\nvar cachedColors = {};\r\nvar bm_rounder = Math.round;\r\nvar bm_rnd;\r\nvar bm_pow = Math.pow;\r\nvar bm_sqrt = Math.sqrt;\r\nvar bm_abs = Math.abs;\r\nvar bm_floor = Math.floor;\r\nvar bm_max = Math.max;\r\nvar bm_min = Math.min;\r\nvar blitter = 10;\r\n\r\nvar BMMath = {};\r\n(function(){\r\n    var propertyNames = [\"abs\", \"acos\", \"acosh\", \"asin\", \"asinh\", \"atan\", \"atanh\", \"atan2\", \"ceil\", \"cbrt\", \"expm1\", \"clz32\", \"cos\", \"cosh\", \"exp\", \"floor\", \"fround\", \"hypot\", \"imul\", \"log\", \"log1p\", \"log2\", \"log10\", \"max\", \"min\", \"pow\", \"random\", \"round\", \"sign\", \"sin\", \"sinh\", \"sqrt\", \"tan\", \"tanh\", \"trunc\", \"E\", \"LN10\", \"LN2\", \"LOG10E\", \"LOG2E\", \"PI\", \"SQRT1_2\", \"SQRT2\"];\r\n    var i, len = propertyNames.length;\r\n    for(i=0;i<len;i+=1){\r\n        BMMath[propertyNames[i]] = Math[propertyNames[i]];\r\n    }\r\n}());\r\n\r\nfunction ProjectInterface(){return {};}\r\n\r\nBMMath.random = Math.random;\r\nBMMath.abs = function(val){\r\n    var tOfVal = typeof val;\r\n    if(tOfVal === 'object' && val.length){\r\n        var absArr = createSizedArray(val.length);\r\n        var i, len = val.length;\r\n        for(i=0;i<len;i+=1){\r\n            absArr[i] = Math.abs(val[i]);\r\n        }\r\n        return absArr;\r\n    }\r\n    return Math.abs(val);\r\n\r\n};\r\nvar defaultCurveSegments = 150;\r\nvar degToRads = Math.PI/180;\r\nvar roundCorner = 0.5519;\r\n\r\nfunction roundValues(flag){\r\n    if(flag){\r\n        bm_rnd = Math.round;\r\n    }else{\r\n        bm_rnd = function(val){\r\n            return val;\r\n        };\r\n    }\r\n}\r\nroundValues(false);\r\n\r\nfunction styleDiv(element){\r\n    element.style.position = 'absolute';\r\n    element.style.top = 0;\r\n    element.style.left = 0;\r\n    element.style.display = 'block';\r\n    element.style.transformOrigin = element.style.webkitTransformOrigin = '0 0';\r\n    element.style.backfaceVisibility  = element.style.webkitBackfaceVisibility = 'visible';\r\n    element.style.transformStyle = element.style.webkitTransformStyle = element.style.mozTransformStyle = \"preserve-3d\";\r\n}\r\n\r\nfunction BMEnterFrameEvent(type, currentTime, totalTime, frameMultiplier){\r\n    this.type = type;\r\n    this.currentTime = currentTime;\r\n    this.totalTime = totalTime;\r\n    this.direction = frameMultiplier < 0 ? -1 : 1;\r\n}\r\n\r\nfunction BMCompleteEvent(type, frameMultiplier){\r\n    this.type = type;\r\n    this.direction = frameMultiplier < 0 ? -1 : 1;\r\n}\r\n\r\nfunction BMCompleteLoopEvent(type, totalLoops, currentLoop, frameMultiplier){\r\n    this.type = type;\r\n    this.currentLoop = currentLoop;\r\n    this.totalLoops = totalLoops;\r\n    this.direction = frameMultiplier < 0 ? -1 : 1;\r\n}\r\n\r\nfunction BMSegmentStartEvent(type, firstFrame, totalFrames){\r\n    this.type = type;\r\n    this.firstFrame = firstFrame;\r\n    this.totalFrames = totalFrames;\r\n}\r\n\r\nfunction BMDestroyEvent(type, target){\r\n    this.type = type;\r\n    this.target = target;\r\n}\r\n\r\nfunction BMRenderFrameErrorEvent(nativeError, currentTime) {\r\n    this.type = 'renderFrameError';\r\n    this.nativeError = nativeError;\r\n    this.currentTime = currentTime;\r\n}\r\n\r\nfunction BMConfigErrorEvent(nativeError) {\r\n    this.type = 'configError';\r\n    this.nativeError = nativeError;\r\n}\r\n\r\nfunction BMAnimationConfigErrorEvent(type, nativeError) {\r\n    this.type = type;\r\n    this.nativeError = nativeError;\r\n    this.currentTime = currentTime;\r\n}\r\n\r\nvar createElementID = (function(){\r\n    var _count = 0;\r\n    return function createID() {\r\n        return '__lottie_element_' + ++_count\r\n    }\r\n}())\r\n\r\nfunction HSVtoRGB(h, s, v) {\r\n    var r, g, b, i, f, p, q, t;\r\n    i = Math.floor(h * 6);\r\n    f = h * 6 - i;\r\n    p = v * (1 - s);\r\n    q = v * (1 - f * s);\r\n    t = v * (1 - (1 - f) * s);\r\n    switch (i % 6) {\r\n        case 0: r = v; g = t; b = p; break;\r\n        case 1: r = q; g = v; b = p; break;\r\n        case 2: r = p; g = v; b = t; break;\r\n        case 3: r = p; g = q; b = v; break;\r\n        case 4: r = t; g = p; b = v; break;\r\n        case 5: r = v; g = p; b = q; break;\r\n    }\r\n    return [ r,\r\n        g,\r\n         b ];\r\n}\r\n\r\nfunction RGBtoHSV(r, g, b) {\r\n    var max = Math.max(r, g, b), min = Math.min(r, g, b),\r\n        d = max - min,\r\n        h,\r\n        s = (max === 0 ? 0 : d / max),\r\n        v = max / 255;\r\n\r\n    switch (max) {\r\n        case min: h = 0; break;\r\n        case r: h = (g - b) + d * (g < b ? 6: 0); h /= 6 * d; break;\r\n        case g: h = (b - r) + d * 2; h /= 6 * d; break;\r\n        case b: h = (r - g) + d * 4; h /= 6 * d; break;\r\n    }\r\n\r\n    return [\r\n         h,\r\n         s,\r\n         v\r\n    ];\r\n}\r\n\r\nfunction addSaturationToRGB(color,offset){\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[1] += offset;\r\n    if (hsv[1] > 1) {\r\n        hsv[1] = 1;\r\n    }\r\n    else if (hsv[1] <= 0) {\r\n        hsv[1] = 0;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nfunction addBrightnessToRGB(color,offset){\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[2] += offset;\r\n    if (hsv[2] > 1) {\r\n        hsv[2] = 1;\r\n    }\r\n    else if (hsv[2] < 0) {\r\n        hsv[2] = 0;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nfunction addHueToRGB(color,offset) {\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[0] += offset/360;\r\n    if (hsv[0] > 1) {\r\n        hsv[0] -= 1;\r\n    }\r\n    else if (hsv[0] < 0) {\r\n        hsv[0] += 1;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nvar rgbToHex = (function(){\r\n    var colorMap = [];\r\n    var i;\r\n    var hex;\r\n    for(i=0;i<256;i+=1){\r\n        hex = i.toString(16);\r\n        colorMap[i] = hex.length == 1 ? '0' + hex : hex;\r\n    }\r\n\r\n    return function(r, g, b) {\r\n        if(r<0){\r\n            r = 0;\r\n        }\r\n        if(g<0){\r\n            g = 0;\r\n        }\r\n        if(b<0){\r\n            b = 0;\r\n        }\r\n        return '#' + colorMap[r] + colorMap[g] + colorMap[b];\r\n    };\r\n}());\r\nfunction BaseEvent(){}\r\nBaseEvent.prototype = {\r\n\ttriggerEvent: function (eventName, args) {\r\n\t    if (this._cbs[eventName]) {\r\n\t        var len = this._cbs[eventName].length;\r\n\t        for (var i = 0; i < len; i++){\r\n\t            this._cbs[eventName][i](args);\r\n\t        }\r\n\t    }\r\n\t},\r\n\taddEventListener: function (eventName, callback) {\r\n\t    if (!this._cbs[eventName]){\r\n\t        this._cbs[eventName] = [];\r\n\t    }\r\n\t    this._cbs[eventName].push(callback);\r\n\r\n\t\treturn function() {\r\n\t\t\tthis.removeEventListener(eventName, callback);\r\n\t\t}.bind(this);\r\n\t},\r\n\tremoveEventListener: function (eventName,callback){\r\n\t    if (!callback){\r\n\t        this._cbs[eventName] = null;\r\n\t    }else if(this._cbs[eventName]){\r\n\t        var i = 0, len = this._cbs[eventName].length;\r\n\t        while(i<len){\r\n\t            if(this._cbs[eventName][i] === callback){\r\n\t                this._cbs[eventName].splice(i,1);\r\n\t                i -=1;\r\n\t                len -= 1;\r\n\t            }\r\n\t            i += 1;\r\n\t        }\r\n\t        if(!this._cbs[eventName].length){\r\n\t            this._cbs[eventName] = null;\r\n\t        }\r\n\t    }\r\n\t}\r\n};\r\nvar createTypedArray = (function(){\r\n\tfunction createRegularArray(type, len){\r\n\t\tvar i = 0, arr = [], value;\r\n\t\tswitch(type) {\r\n\t\t\tcase 'int16':\r\n\t\t\tcase 'uint8c':\r\n\t\t\t\tvalue = 1;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tvalue = 1.1;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tarr.push(value);\r\n\t\t}\r\n\t\treturn arr;\r\n\t}\r\n\tfunction createTypedArray(type, len){\r\n\t\tif(type === 'float32') {\r\n\t\t\treturn new Float32Array(len);\r\n\t\t} else if(type === 'int16') {\r\n\t\t\treturn new Int16Array(len);\r\n\t\t} else if(type === 'uint8c') {\r\n\t\t\treturn new Uint8ClampedArray(len);\r\n\t\t}\r\n\t}\r\n\tif(typeof Uint8ClampedArray === 'function' && typeof Float32Array === 'function') {\r\n\t\treturn createTypedArray;\r\n\t} else {\r\n\t\treturn createRegularArray;\r\n\t}\r\n}());\r\n\r\nfunction createSizedArray(len) {\r\n\treturn Array.apply(null,{length:len});\r\n}\r\nfunction createNS(type) {\r\n\t//return {appendChild:function(){},setAttribute:function(){},style:{}}\r\n\treturn document.createElementNS(svgNS, type);\r\n}\r\nfunction createTag(type) {\r\n\t//return {appendChild:function(){},setAttribute:function(){},style:{}}\r\n\treturn document.createElement(type);\r\n}\r\nfunction DynamicPropertyContainer(){};\r\nDynamicPropertyContainer.prototype = {\r\n\taddDynamicProperty: function(prop) {\r\n\t\tif(this.dynamicProperties.indexOf(prop) === -1) {\r\n\t        this.dynamicProperties.push(prop);\r\n\t        this.container.addDynamicProperty(this);\r\n\t    \tthis._isAnimated = true;\r\n\t    }\r\n\t},\r\n\titerateDynamicProperties: function(){\r\n\t    this._mdf = false;\r\n\t    var i, len = this.dynamicProperties.length;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        this.dynamicProperties[i].getValue();\r\n\t        if(this.dynamicProperties[i]._mdf) {\r\n\t            this._mdf = true;\r\n\t        }\r\n\t    }\r\n\t},\r\n\tinitDynamicPropertyContainer: function(container){\r\n\t    this.container = container;\r\n\t    this.dynamicProperties = [];\r\n\t    this._mdf = false;\r\n\t    this._isAnimated = false;\r\n\t}\r\n}\r\nvar getBlendMode = (function() {\r\n\r\n\tvar blendModeEnums = {\r\n        0:'source-over',\r\n        1:'multiply',\r\n        2:'screen',\r\n        3:'overlay',\r\n        4:'darken',\r\n        5:'lighten',\r\n        6:'color-dodge',\r\n        7:'color-burn',\r\n        8:'hard-light',\r\n        9:'soft-light',\r\n        10:'difference',\r\n        11:'exclusion',\r\n        12:'hue',\r\n        13:'saturation',\r\n        14:'color',\r\n        15:'luminosity'\r\n    }\r\n\r\n\treturn function(mode) {\r\n\t\treturn blendModeEnums[mode] || '';\r\n\t}\r\n}())\r\n/*!\r\n Transformation Matrix v2.0\r\n (c) Epistemex 2014-2015\r\n www.epistemex.com\r\n By Ken Fyrstenberg\r\n Contributions by leeoniya.\r\n License: MIT, header required.\r\n */\r\n\r\n/**\r\n * 2D transformation matrix object initialized with identity matrix.\r\n *\r\n * The matrix can synchronize a canvas context by supplying the context\r\n * as an argument, or later apply current absolute transform to an\r\n * existing context.\r\n *\r\n * All values are handled as floating point values.\r\n *\r\n * @param {CanvasRenderingContext2D} [context] - Optional context to sync with Matrix\r\n * @prop {number} a - scale x\r\n * @prop {number} b - shear y\r\n * @prop {number} c - shear x\r\n * @prop {number} d - scale y\r\n * @prop {number} e - translate x\r\n * @prop {number} f - translate y\r\n * @prop {CanvasRenderingContext2D|null} [context=null] - set or get current canvas context\r\n * @constructor\r\n */\r\n\r\nvar Matrix = (function(){\r\n\r\n    var _cos = Math.cos;\r\n    var _sin = Math.sin;\r\n    var _tan = Math.tan;\r\n    var _rnd = Math.round;\r\n\r\n    function reset(){\r\n        this.props[0] = 1;\r\n        this.props[1] = 0;\r\n        this.props[2] = 0;\r\n        this.props[3] = 0;\r\n        this.props[4] = 0;\r\n        this.props[5] = 1;\r\n        this.props[6] = 0;\r\n        this.props[7] = 0;\r\n        this.props[8] = 0;\r\n        this.props[9] = 0;\r\n        this.props[10] = 1;\r\n        this.props[11] = 0;\r\n        this.props[12] = 0;\r\n        this.props[13] = 0;\r\n        this.props[14] = 0;\r\n        this.props[15] = 1;\r\n        return this;\r\n    }\r\n\r\n    function rotate(angle) {\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateX(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(1, 0, 0, 0, 0, mCos, -mSin, 0, 0, mSin,  mCos, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateY(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos,  0,  mSin, 0, 0, 1, 0, 0, -mSin,  0,  mCos, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateZ(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function shear(sx,sy){\r\n        return this._t(1, sy, sx, 1, 0, 0);\r\n    }\r\n\r\n    function skew(ax, ay){\r\n        return this.shear(_tan(ax), _tan(ay));\r\n    }\r\n\r\n    function skewFromAxis(ax, angle){\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos, mSin,  0, 0, -mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1)\r\n            ._t(1, 0,  0, 0, _tan(ax),  1, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1)\r\n            ._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);\r\n        //return this._t(mCos, mSin, -mSin, mCos, 0, 0)._t(1, 0, _tan(ax), 1, 0, 0)._t(mCos, -mSin, mSin, mCos, 0, 0);\r\n    }\r\n\r\n    function scale(sx, sy, sz) {\r\n        if(!sz && sz !== 0) {\r\n            sz = 1;\r\n        }\r\n        if(sx === 1 && sy === 1 && sz === 1){\r\n            return this;\r\n        }\r\n        return this._t(sx, 0, 0, 0, 0, sy, 0, 0, 0, 0, sz, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function setTransform(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {\r\n        this.props[0] = a;\r\n        this.props[1] = b;\r\n        this.props[2] = c;\r\n        this.props[3] = d;\r\n        this.props[4] = e;\r\n        this.props[5] = f;\r\n        this.props[6] = g;\r\n        this.props[7] = h;\r\n        this.props[8] = i;\r\n        this.props[9] = j;\r\n        this.props[10] = k;\r\n        this.props[11] = l;\r\n        this.props[12] = m;\r\n        this.props[13] = n;\r\n        this.props[14] = o;\r\n        this.props[15] = p;\r\n        return this;\r\n    }\r\n\r\n    function translate(tx, ty, tz) {\r\n        tz = tz || 0;\r\n        if(tx !== 0 || ty !== 0 || tz !== 0){\r\n            return this._t(1,0,0,0,0,1,0,0,0,0,1,0,tx,ty,tz,1);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function transform(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2, m2, n2, o2, p2) {\r\n\r\n        var _p = this.props;\r\n\r\n        if(a2 === 1 && b2 === 0 && c2 === 0 && d2 === 0 && e2 === 0 && f2 === 1 && g2 === 0 && h2 === 0 && i2 === 0 && j2 === 0 && k2 === 1 && l2 === 0){\r\n            //NOTE: commenting this condition because TurboFan deoptimizes code when present\r\n            //if(m2 !== 0 || n2 !== 0 || o2 !== 0){\r\n                _p[12] = _p[12] * a2 + _p[15] * m2;\r\n                _p[13] = _p[13] * f2 + _p[15] * n2;\r\n                _p[14] = _p[14] * k2 + _p[15] * o2;\r\n                _p[15] = _p[15] * p2;\r\n            //}\r\n            this._identityCalculated = false;\r\n            return this;\r\n        }\r\n\r\n        var a1 = _p[0];\r\n        var b1 = _p[1];\r\n        var c1 = _p[2];\r\n        var d1 = _p[3];\r\n        var e1 = _p[4];\r\n        var f1 = _p[5];\r\n        var g1 = _p[6];\r\n        var h1 = _p[7];\r\n        var i1 = _p[8];\r\n        var j1 = _p[9];\r\n        var k1 = _p[10];\r\n        var l1 = _p[11];\r\n        var m1 = _p[12];\r\n        var n1 = _p[13];\r\n        var o1 = _p[14];\r\n        var p1 = _p[15];\r\n\r\n        /* matrix order (canvas compatible):\r\n         * ace\r\n         * bdf\r\n         * 001\r\n         */\r\n        _p[0] = a1 * a2 + b1 * e2 + c1 * i2 + d1 * m2;\r\n        _p[1] = a1 * b2 + b1 * f2 + c1 * j2 + d1 * n2 ;\r\n        _p[2] = a1 * c2 + b1 * g2 + c1 * k2 + d1 * o2 ;\r\n        _p[3] = a1 * d2 + b1 * h2 + c1 * l2 + d1 * p2 ;\r\n\r\n        _p[4] = e1 * a2 + f1 * e2 + g1 * i2 + h1 * m2 ;\r\n        _p[5] = e1 * b2 + f1 * f2 + g1 * j2 + h1 * n2 ;\r\n        _p[6] = e1 * c2 + f1 * g2 + g1 * k2 + h1 * o2 ;\r\n        _p[7] = e1 * d2 + f1 * h2 + g1 * l2 + h1 * p2 ;\r\n\r\n        _p[8] = i1 * a2 + j1 * e2 + k1 * i2 + l1 * m2 ;\r\n        _p[9] = i1 * b2 + j1 * f2 + k1 * j2 + l1 * n2 ;\r\n        _p[10] = i1 * c2 + j1 * g2 + k1 * k2 + l1 * o2 ;\r\n        _p[11] = i1 * d2 + j1 * h2 + k1 * l2 + l1 * p2 ;\r\n\r\n        _p[12] = m1 * a2 + n1 * e2 + o1 * i2 + p1 * m2 ;\r\n        _p[13] = m1 * b2 + n1 * f2 + o1 * j2 + p1 * n2 ;\r\n        _p[14] = m1 * c2 + n1 * g2 + o1 * k2 + p1 * o2 ;\r\n        _p[15] = m1 * d2 + n1 * h2 + o1 * l2 + p1 * p2 ;\r\n\r\n        this._identityCalculated = false;\r\n        return this;\r\n    }\r\n\r\n    function isIdentity() {\r\n        if(!this._identityCalculated){\r\n            this._identity = !(this.props[0] !== 1 || this.props[1] !== 0 || this.props[2] !== 0 || this.props[3] !== 0 || this.props[4] !== 0 || this.props[5] !== 1 || this.props[6] !== 0 || this.props[7] !== 0 || this.props[8] !== 0 || this.props[9] !== 0 || this.props[10] !== 1 || this.props[11] !== 0 || this.props[12] !== 0 || this.props[13] !== 0 || this.props[14] !== 0 || this.props[15] !== 1);\r\n            this._identityCalculated = true;\r\n        }\r\n        return this._identity;\r\n    }\r\n\r\n    function equals(matr){\r\n        var i = 0;\r\n        while (i < 16) {\r\n            if(matr.props[i] !== this.props[i]) {\r\n                return false;\r\n            }\r\n            i+=1;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function clone(matr){\r\n        var i;\r\n        for(i=0;i<16;i+=1){\r\n            matr.props[i] = this.props[i];\r\n        }\r\n    }\r\n\r\n    function cloneFromProps(props){\r\n        var i;\r\n        for(i=0;i<16;i+=1){\r\n            this.props[i] = props[i];\r\n        }\r\n    }\r\n\r\n    function applyToPoint(x, y, z) {\r\n\r\n        return {\r\n            x: x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],\r\n            y: x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],\r\n            z: x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]\r\n        };\r\n        /*return {\r\n         x: x * me.a + y * me.c + me.e,\r\n         y: x * me.b + y * me.d + me.f\r\n         };*/\r\n    }\r\n    function applyToX(x, y, z) {\r\n        return x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12];\r\n    }\r\n    function applyToY(x, y, z) {\r\n        return x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13];\r\n    }\r\n    function applyToZ(x, y, z) {\r\n        return x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14];\r\n    }\r\n\r\n    function getInverseMatrix() {\r\n        var determinant = this.props[0] * this.props[5] - this.props[1] * this.props[4];\r\n        var a = this.props[5]/determinant;\r\n        var b = - this.props[1]/determinant;\r\n        var c = - this.props[4]/determinant;\r\n        var d = this.props[0]/determinant;\r\n        var e = (this.props[4] * this.props[13] - this.props[5] * this.props[12])/determinant;\r\n        var f = - (this.props[0] * this.props[13] - this.props[1] * this.props[12])/determinant;\r\n        var inverseMatrix = new Matrix();\r\n        inverseMatrix.props[0] = a;\r\n        inverseMatrix.props[1] = b;\r\n        inverseMatrix.props[4] = c;\r\n        inverseMatrix.props[5] = d;\r\n        inverseMatrix.props[12] = e;\r\n        inverseMatrix.props[13] = f;\r\n        return inverseMatrix;\r\n    }\r\n\r\n    function inversePoint(pt) {\r\n        var inverseMatrix = this.getInverseMatrix();\r\n        return inverseMatrix.applyToPointArray(pt[0], pt[1], pt[2] || 0)\r\n    }\r\n\r\n    function inversePoints(pts){\r\n        var i, len = pts.length, retPts = [];\r\n        for(i=0;i<len;i+=1){\r\n            retPts[i] = inversePoint(pts[i]);\r\n        }\r\n        return retPts;\r\n    }\r\n\r\n    function applyToTriplePoints(pt1, pt2, pt3) {\r\n        var arr = createTypedArray('float32', 6);\r\n        if(this.isIdentity()) {\r\n            arr[0] = pt1[0];\r\n            arr[1] = pt1[1];\r\n            arr[2] = pt2[0];\r\n            arr[3] = pt2[1];\r\n            arr[4] = pt3[0];\r\n            arr[5] = pt3[1];\r\n        } else {\r\n            var p0 = this.props[0], p1 = this.props[1], p4 = this.props[4], p5 = this.props[5], p12 = this.props[12], p13 = this.props[13];\r\n            arr[0] = pt1[0] * p0 + pt1[1] * p4 + p12;\r\n            arr[1] = pt1[0] * p1 + pt1[1] * p5 + p13;\r\n            arr[2] = pt2[0] * p0 + pt2[1] * p4 + p12;\r\n            arr[3] = pt2[0] * p1 + pt2[1] * p5 + p13;\r\n            arr[4] = pt3[0] * p0 + pt3[1] * p4 + p12;\r\n            arr[5] = pt3[0] * p1 + pt3[1] * p5 + p13;\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function applyToPointArray(x,y,z){\r\n        var arr;\r\n        if(this.isIdentity()) {\r\n            arr = [x,y,z];\r\n        } else {\r\n            arr = [x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]];\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function applyToPointStringified(x, y) {\r\n        if(this.isIdentity()) {\r\n            return x + ',' + y;\r\n        }\r\n        var _p = this.props;\r\n        return Math.round((x * _p[0] + y * _p[4] + _p[12]) * 100) / 100+','+ Math.round((x * _p[1] + y * _p[5] + _p[13]) * 100) / 100;\r\n    }\r\n\r\n    function toCSS() {\r\n        //Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\r\n        /*if(this.isIdentity()) {\r\n            return '';\r\n        }*/\r\n        var i = 0;\r\n        var props = this.props;\r\n        var cssValue = 'matrix3d(';\r\n        var v = 10000;\r\n        while(i<16){\r\n            cssValue += _rnd(props[i]*v)/v;\r\n            cssValue += i === 15 ? ')':',';\r\n            i += 1;\r\n        }\r\n        return cssValue;\r\n    }\r\n\r\n    function roundMatrixProperty(val) {\r\n        var v = 10000;\r\n        if((val < 0.000001 && val > 0) || (val > -0.000001 && val < 0)) {\r\n            return _rnd(val * v) / v;\r\n        }\r\n        return val;\r\n    }\r\n\r\n    function to2dCSS() {\r\n        //Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\r\n        /*if(this.isIdentity()) {\r\n            return '';\r\n        }*/\r\n        var props = this.props;\r\n        var _a = roundMatrixProperty(props[0]);\r\n        var _b = roundMatrixProperty(props[1]);\r\n        var _c = roundMatrixProperty(props[4]);\r\n        var _d = roundMatrixProperty(props[5]);\r\n        var _e = roundMatrixProperty(props[12]);\r\n        var _f = roundMatrixProperty(props[13]);\r\n        return \"matrix(\" + _a + ',' + _b + ',' + _c + ',' + _d + ',' + _e + ',' + _f + \")\";\r\n    }\r\n\r\n    return function(){\r\n        this.reset = reset;\r\n        this.rotate = rotate;\r\n        this.rotateX = rotateX;\r\n        this.rotateY = rotateY;\r\n        this.rotateZ = rotateZ;\r\n        this.skew = skew;\r\n        this.skewFromAxis = skewFromAxis;\r\n        this.shear = shear;\r\n        this.scale = scale;\r\n        this.setTransform = setTransform;\r\n        this.translate = translate;\r\n        this.transform = transform;\r\n        this.applyToPoint = applyToPoint;\r\n        this.applyToX = applyToX;\r\n        this.applyToY = applyToY;\r\n        this.applyToZ = applyToZ;\r\n        this.applyToPointArray = applyToPointArray;\r\n        this.applyToTriplePoints = applyToTriplePoints;\r\n        this.applyToPointStringified = applyToPointStringified;\r\n        this.toCSS = toCSS;\r\n        this.to2dCSS = to2dCSS;\r\n        this.clone = clone;\r\n        this.cloneFromProps = cloneFromProps;\r\n        this.equals = equals;\r\n        this.inversePoints = inversePoints;\r\n        this.inversePoint = inversePoint;\r\n        this.getInverseMatrix = getInverseMatrix;\r\n        this._t = this.transform;\r\n        this.isIdentity = isIdentity;\r\n        this._identity = true;\r\n        this._identityCalculated = false;\r\n\r\n        this.props = createTypedArray('float32', 16);\r\n        this.reset();\r\n    };\r\n}());\r\n\r\n/*\r\n Copyright 2014 David Bau.\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining\r\n a copy of this software and associated documentation files (the\r\n \"Software\"), to deal in the Software without restriction, including\r\n without limitation the rights to use, copy, modify, merge, publish,\r\n distribute, sublicense, and/or sell copies of the Software, and to\r\n permit persons to whom the Software is furnished to do so, subject to\r\n the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be\r\n included in all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\n IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\n CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\n TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n */\r\n\r\n(function (pool, math) {\r\n//\r\n// The following constants are related to IEEE 754 limits.\r\n//\r\n    var global = this,\r\n        width = 256,        // each RC4 output is 0 <= x < 256\r\n        chunks = 6,         // at least six RC4 outputs for each double\r\n        digits = 52,        // there are 52 significant digits in a double\r\n        rngname = 'random', // rngname: name for Math.random and Math.seedrandom\r\n        startdenom = math.pow(width, chunks),\r\n        significance = math.pow(2, digits),\r\n        overflow = significance * 2,\r\n        mask = width - 1,\r\n        nodecrypto;         // node.js crypto module, initialized at the bottom.\r\n\r\n//\r\n// seedrandom()\r\n// This is the seedrandom function described above.\r\n//\r\n    function seedrandom(seed, options, callback) {\r\n        var key = [];\r\n        options = (options === true) ? { entropy: true } : (options || {});\r\n\r\n        // Flatten the seed string or build one from local entropy if needed.\r\n        var shortseed = mixkey(flatten(\r\n            options.entropy ? [seed, tostring(pool)] :\r\n                (seed === null) ? autoseed() : seed, 3), key);\r\n\r\n        // Use the seed to initialize an ARC4 generator.\r\n        var arc4 = new ARC4(key);\r\n\r\n        // This function returns a random double in [0, 1) that contains\r\n        // randomness in every bit of the mantissa of the IEEE 754 value.\r\n        var prng = function() {\r\n            var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\r\n                d = startdenom,                 //   and denominator d = 2 ^ 48.\r\n                x = 0;                          //   and no 'extra last byte'.\r\n            while (n < significance) {          // Fill up all significant digits by\r\n                n = (n + x) * width;              //   shifting numerator and\r\n                d *= width;                       //   denominator and generating a\r\n                x = arc4.g(1);                    //   new least-significant-byte.\r\n            }\r\n            while (n >= overflow) {             // To avoid rounding up, before adding\r\n                n /= 2;                           //   last byte, shift everything\r\n                d /= 2;                           //   right using integer math until\r\n                x >>>= 1;                         //   we have exactly the desired bits.\r\n            }\r\n            return (n + x) / d;                 // Form the number within [0, 1).\r\n        };\r\n\r\n        prng.int32 = function() { return arc4.g(4) | 0; };\r\n        prng.quick = function() { return arc4.g(4) / 0x100000000; };\r\n        prng.double = prng;\r\n\r\n        // Mix the randomness into accumulated entropy.\r\n        mixkey(tostring(arc4.S), pool);\r\n\r\n        // Calling convention: what to return as a function of prng, seed, is_math.\r\n        return (options.pass || callback ||\r\n        function(prng, seed, is_math_call, state) {\r\n            if (state) {\r\n                // Load the arc4 state from the given state if it has an S array.\r\n                if (state.S) { copy(state, arc4); }\r\n                // Only provide the .state method if requested via options.state.\r\n                prng.state = function() { return copy(arc4, {}); };\r\n            }\r\n\r\n            // If called as a method of Math (Math.seedrandom()), mutate\r\n            // Math.random because that is how seedrandom.js has worked since v1.0.\r\n            if (is_math_call) { math[rngname] = prng; return seed; }\r\n\r\n            // Otherwise, it is a newer calling convention, so return the\r\n            // prng directly.\r\n            else return prng;\r\n        })(\r\n            prng,\r\n            shortseed,\r\n            'global' in options ? options.global : (this == math),\r\n            options.state);\r\n    }\r\n    math['seed' + rngname] = seedrandom;\r\n\r\n//\r\n// ARC4\r\n//\r\n// An ARC4 implementation.  The constructor takes a key in the form of\r\n// an array of at most (width) integers that should be 0 <= x < (width).\r\n//\r\n// The g(count) method returns a pseudorandom integer that concatenates\r\n// the next (count) outputs from ARC4.  Its return value is a number x\r\n// that is in the range 0 <= x < (width ^ count).\r\n//\r\n    function ARC4(key) {\r\n        var t, keylen = key.length,\r\n            me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\r\n\r\n        // The empty key [] is treated as [0].\r\n        if (!keylen) { key = [keylen++]; }\r\n\r\n        // Set up S using the standard key scheduling algorithm.\r\n        while (i < width) {\r\n            s[i] = i++;\r\n        }\r\n        for (i = 0; i < width; i++) {\r\n            s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\r\n            s[j] = t;\r\n        }\r\n\r\n        // The \"g\" method returns the next (count) outputs as one number.\r\n        me.g = function(count) {\r\n            // Using instance members instead of closure state nearly doubles speed.\r\n            var t, r = 0,\r\n                i = me.i, j = me.j, s = me.S;\r\n            while (count--) {\r\n                t = s[i = mask & (i + 1)];\r\n                r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\r\n            }\r\n            me.i = i; me.j = j;\r\n            return r;\r\n            // For robust unpredictability, the function call below automatically\r\n            // discards an initial batch of values.  This is called RC4-drop[256].\r\n            // See http://google.com/search?q=rsa+fluhrer+response&btnI\r\n        };\r\n    }\r\n\r\n//\r\n// copy()\r\n// Copies internal state of ARC4 to or from a plain object.\r\n//\r\n    function copy(f, t) {\r\n        t.i = f.i;\r\n        t.j = f.j;\r\n        t.S = f.S.slice();\r\n        return t;\r\n    }\r\n\r\n//\r\n// flatten()\r\n// Converts an object tree to nested arrays of strings.\r\n//\r\n    function flatten(obj, depth) {\r\n        var result = [], typ = (typeof obj), prop;\r\n        if (depth && typ == 'object') {\r\n            for (prop in obj) {\r\n                try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\r\n            }\r\n        }\r\n        return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\r\n    }\r\n\r\n//\r\n// mixkey()\r\n// Mixes a string seed into a key that is an array of integers, and\r\n// returns a shortened string seed that is equivalent to the result key.\r\n//\r\n    function mixkey(seed, key) {\r\n        var stringseed = seed + '', smear, j = 0;\r\n        while (j < stringseed.length) {\r\n            key[mask & j] =\r\n                mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\r\n        }\r\n        return tostring(key);\r\n    }\r\n\r\n//\r\n// autoseed()\r\n// Returns an object for autoseeding, using window.crypto and Node crypto\r\n// module if available.\r\n//\r\n    function autoseed() {\r\n        try {\r\n            if (nodecrypto) { return tostring(nodecrypto.randomBytes(width)); }\r\n            var out = new Uint8Array(width);\r\n            (global.crypto || global.msCrypto).getRandomValues(out);\r\n            return tostring(out);\r\n        } catch (e) {\r\n            var browser = global.navigator,\r\n                plugins = browser && browser.plugins;\r\n            return [+new Date(), global, plugins, global.screen, tostring(pool)];\r\n        }\r\n    }\r\n\r\n//\r\n// tostring()\r\n// Converts an array of charcodes to a string\r\n//\r\n    function tostring(a) {\r\n        return String.fromCharCode.apply(0, a);\r\n    }\r\n\r\n//\r\n// When seedrandom.js is loaded, we immediately mix a few bits\r\n// from the built-in RNG into the entropy pool.  Because we do\r\n// not want to interfere with deterministic PRNG state later,\r\n// seedrandom will not call math.random on its own again after\r\n// initialization.\r\n//\r\n    mixkey(math.random(), pool);\r\n\r\n//\r\n// Nodejs and AMD support: export the implementation as a module using\r\n// either convention.\r\n//\r\n\r\n// End anonymous scope, and pass initial values.\r\n})(\r\n    [],     // pool: entropy pool starts empty\r\n    BMMath    // math: package containing random, pow, and seedrandom\r\n);\r\nvar BezierFactory = (function(){\r\n    /**\r\n     * BezierEasing - use bezier curve for transition easing function\r\n     * by Gaëtan Renaudeau 2014 - 2015 – MIT License\r\n     *\r\n     * Credits: is based on Firefox's nsSMILKeySpline.cpp\r\n     * Usage:\r\n     * var spline = BezierEasing([ 0.25, 0.1, 0.25, 1.0 ])\r\n     * spline.get(x) => returns the easing value | x must be in [0, 1] range\r\n     *\r\n     */\r\n\r\n        var ob = {};\r\n    ob.getBezierEasing = getBezierEasing;\r\n    var beziers = {};\r\n\r\n    function getBezierEasing(a,b,c,d,nm){\r\n        var str = nm || ('bez_' + a+'_'+b+'_'+c+'_'+d).replace(/\\./g, 'p');\r\n        if(beziers[str]){\r\n            return beziers[str];\r\n        }\r\n        var bezEasing = new BezierEasing([a,b,c,d]);\r\n        beziers[str] = bezEasing;\r\n        return bezEasing;\r\n    }\r\n\r\n// These values are established by empiricism with tests (tradeoff: performance VS precision)\r\n    var NEWTON_ITERATIONS = 4;\r\n    var NEWTON_MIN_SLOPE = 0.001;\r\n    var SUBDIVISION_PRECISION = 0.0000001;\r\n    var SUBDIVISION_MAX_ITERATIONS = 10;\r\n\r\n    var kSplineTableSize = 11;\r\n    var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\r\n\r\n    var float32ArraySupported = typeof Float32Array === \"function\";\r\n\r\n    function A (aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }\r\n    function B (aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }\r\n    function C (aA1)      { return 3.0 * aA1; }\r\n\r\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\r\n    function calcBezier (aT, aA1, aA2) {\r\n        return ((A(aA1, aA2)*aT + B(aA1, aA2))*aT + C(aA1))*aT;\r\n    }\r\n\r\n// Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\r\n    function getSlope (aT, aA1, aA2) {\r\n        return 3.0 * A(aA1, aA2)*aT*aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\r\n    }\r\n\r\n    function binarySubdivide (aX, aA, aB, mX1, mX2) {\r\n        var currentX, currentT, i = 0;\r\n        do {\r\n            currentT = aA + (aB - aA) / 2.0;\r\n            currentX = calcBezier(currentT, mX1, mX2) - aX;\r\n            if (currentX > 0.0) {\r\n                aB = currentT;\r\n            } else {\r\n                aA = currentT;\r\n            }\r\n        } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\r\n        return currentT;\r\n    }\r\n\r\n    function newtonRaphsonIterate (aX, aGuessT, mX1, mX2) {\r\n        for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\r\n            var currentSlope = getSlope(aGuessT, mX1, mX2);\r\n            if (currentSlope === 0.0) return aGuessT;\r\n            var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\r\n            aGuessT -= currentX / currentSlope;\r\n        }\r\n        return aGuessT;\r\n    }\r\n\r\n    /**\r\n     * points is an array of [ mX1, mY1, mX2, mY2 ]\r\n     */\r\n    function BezierEasing (points) {\r\n        this._p = points;\r\n        this._mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\r\n        this._precomputed = false;\r\n\r\n        this.get = this.get.bind(this);\r\n    }\r\n\r\n    BezierEasing.prototype = {\r\n\r\n        get: function (x) {\r\n            var mX1 = this._p[0],\r\n                mY1 = this._p[1],\r\n                mX2 = this._p[2],\r\n                mY2 = this._p[3];\r\n            if (!this._precomputed) this._precompute();\r\n            if (mX1 === mY1 && mX2 === mY2) return x; // linear\r\n            // Because JavaScript number are imprecise, we should guarantee the extremes are right.\r\n            if (x === 0) return 0;\r\n            if (x === 1) return 1;\r\n            return calcBezier(this._getTForX(x), mY1, mY2);\r\n        },\r\n\r\n        // Private part\r\n\r\n        _precompute: function () {\r\n            var mX1 = this._p[0],\r\n                mY1 = this._p[1],\r\n                mX2 = this._p[2],\r\n                mY2 = this._p[3];\r\n            this._precomputed = true;\r\n            if (mX1 !== mY1 || mX2 !== mY2)\r\n                this._calcSampleValues();\r\n        },\r\n\r\n        _calcSampleValues: function () {\r\n            var mX1 = this._p[0],\r\n                mX2 = this._p[2];\r\n            for (var i = 0; i < kSplineTableSize; ++i) {\r\n                this._mSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * getTForX chose the fastest heuristic to determine the percentage value precisely from a given X projection.\r\n         */\r\n        _getTForX: function (aX) {\r\n            var mX1 = this._p[0],\r\n                mX2 = this._p[2],\r\n                mSampleValues = this._mSampleValues;\r\n\r\n            var intervalStart = 0.0;\r\n            var currentSample = 1;\r\n            var lastSample = kSplineTableSize - 1;\r\n\r\n            for (; currentSample !== lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {\r\n                intervalStart += kSampleStepSize;\r\n            }\r\n            --currentSample;\r\n\r\n            // Interpolate to provide an initial guess for t\r\n            var dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample+1] - mSampleValues[currentSample]);\r\n            var guessForT = intervalStart + dist * kSampleStepSize;\r\n\r\n            var initialSlope = getSlope(guessForT, mX1, mX2);\r\n            if (initialSlope >= NEWTON_MIN_SLOPE) {\r\n                return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\r\n            } else if (initialSlope === 0.0) {\r\n                return guessForT;\r\n            } else {\r\n                return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\r\n            }\r\n        }\r\n    };\r\n\r\n    return ob;\r\n\r\n}());\r\n(function () {\r\n    var lastTime = 0;\r\n    var vendors = ['ms', 'moz', 'webkit', 'o'];\r\n    for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\r\n        window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\r\n        window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\r\n    }\r\n    if(!window.requestAnimationFrame)\r\n        window.requestAnimationFrame = function (callback, element) {\r\n            var currTime = new Date().getTime();\r\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n            var id = setTimeout(function () {\r\n                    callback(currTime + timeToCall);\r\n                },\r\n                timeToCall);\r\n            lastTime = currTime + timeToCall;\r\n            return id;\r\n        };\r\n    if(!window.cancelAnimationFrame)\r\n        window.cancelAnimationFrame = function (id) {\r\n            clearTimeout(id);\r\n        };\r\n}());\r\n\r\nfunction extendPrototype(sources,destination){\r\n    var i, len = sources.length, sourcePrototype;\r\n    for (i = 0;i < len;i += 1) {\r\n        sourcePrototype = sources[i].prototype;\r\n        for (var attr in sourcePrototype) {\r\n            if (sourcePrototype.hasOwnProperty(attr)) destination.prototype[attr] = sourcePrototype[attr];\r\n        }\r\n    }\r\n}\r\n\r\nfunction getDescriptor(object, prop) {\r\n    return Object.getOwnPropertyDescriptor(object, prop);\r\n}\r\n\r\nfunction createProxyFunction(prototype) {\r\n\tfunction ProxyFunction(){}\r\n\tProxyFunction.prototype = prototype;\r\n\treturn ProxyFunction;\r\n}\r\nfunction bezFunction(){\r\n\r\n    var easingFunctions = [];\r\n    var math = Math;\r\n\r\n    function pointOnLine2D(x1,y1, x2,y2, x3,y3){\r\n        var det1 = (x1*y2) + (y1*x3) + (x2*y3) - (x3*y2) - (y3*x1) - (x2*y1);\r\n        return det1 > -0.001 && det1 < 0.001;\r\n    }\r\n\r\n    function pointOnLine3D(x1,y1,z1, x2,y2,z2, x3,y3,z3){\r\n        if(z1 === 0 && z2 === 0 && z3 === 0) {\r\n            return pointOnLine2D(x1,y1, x2,y2, x3,y3);\r\n        }\r\n        var dist1 = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2) + Math.pow(z2 - z1, 2));\r\n        var dist2 = Math.sqrt(Math.pow(x3 - x1, 2) + Math.pow(y3 - y1, 2) + Math.pow(z3 - z1, 2));\r\n        var dist3 = Math.sqrt(Math.pow(x3 - x2, 2) + Math.pow(y3 - y2, 2) + Math.pow(z3 - z2, 2));\r\n        var diffDist;\r\n        if(dist1 > dist2){\r\n            if(dist1 > dist3){\r\n                diffDist = dist1 - dist2 - dist3;\r\n            } else {\r\n                diffDist = dist3 - dist2 - dist1;\r\n            }\r\n        } else if(dist3 > dist2){\r\n            diffDist = dist3 - dist2 - dist1;\r\n        } else {\r\n            diffDist = dist2 - dist1 - dist3;\r\n        }\r\n        return diffDist > -0.0001 && diffDist < 0.0001;\r\n    }\r\n\r\n    var getBezierLength = (function(){\r\n\r\n        return function(pt1,pt2,pt3,pt4){\r\n            var curveSegments = defaultCurveSegments;\r\n            var k;\r\n            var i, len;\r\n            var ptCoord,perc,addedLength = 0;\r\n            var ptDistance;\r\n            var point = [],lastPoint = [];\r\n            var lengthData = bezier_length_pool.newElement();\r\n            len = pt3.length;\r\n            for(k=0;k<curveSegments;k+=1){\r\n                perc = k/(curveSegments-1);\r\n                ptDistance = 0;\r\n                for(i=0;i<len;i+=1){\r\n                    ptCoord = bm_pow(1-perc,3)*pt1[i]+3*bm_pow(1-perc,2)*perc*pt3[i]+3*(1-perc)*bm_pow(perc,2)*pt4[i]+bm_pow(perc,3)*pt2[i];\r\n                    point[i] = ptCoord;\r\n                    if(lastPoint[i] !== null){\r\n                        ptDistance += bm_pow(point[i] - lastPoint[i],2);\r\n                    }\r\n                    lastPoint[i] = point[i];\r\n                }\r\n                if(ptDistance){\r\n                    ptDistance = bm_sqrt(ptDistance);\r\n                    addedLength += ptDistance;\r\n                }\r\n                lengthData.percents[k] = perc;\r\n                lengthData.lengths[k] = addedLength;\r\n            }\r\n            lengthData.addedLength = addedLength;\r\n            return lengthData;\r\n        };\r\n    }());\r\n\r\n    function getSegmentsLength(shapeData) {\r\n        var segmentsLength = segments_length_pool.newElement();\r\n        var closed = shapeData.c;\r\n        var pathV = shapeData.v;\r\n        var pathO = shapeData.o;\r\n        var pathI = shapeData.i;\r\n        var i, len = shapeData._length;\r\n        var lengths = segmentsLength.lengths;\r\n        var totalLength = 0;\r\n        for(i=0;i<len-1;i+=1){\r\n            lengths[i] = getBezierLength(pathV[i],pathV[i+1],pathO[i],pathI[i+1]);\r\n            totalLength += lengths[i].addedLength;\r\n        }\r\n        if(closed && len){\r\n            lengths[i] = getBezierLength(pathV[i],pathV[0],pathO[i],pathI[0]);\r\n            totalLength += lengths[i].addedLength;\r\n        }\r\n        segmentsLength.totalLength = totalLength;\r\n        return segmentsLength;\r\n    }\r\n\r\n    function BezierData(length){\r\n        this.segmentLength = 0;\r\n        this.points = new Array(length);\r\n    }\r\n\r\n    function PointData(partial,point){\r\n        this.partialLength = partial;\r\n        this.point = point;\r\n    }\r\n\r\n    var buildBezierData = (function(){\r\n\r\n        var storedData = {};\r\n\r\n        return function (pt1, pt2, pt3, pt4){\r\n            var bezierName = (pt1[0]+'_'+pt1[1]+'_'+pt2[0]+'_'+pt2[1]+'_'+pt3[0]+'_'+pt3[1]+'_'+pt4[0]+'_'+pt4[1]).replace(/\\./g, 'p');\r\n            if(!storedData[bezierName]){\r\n                var curveSegments = defaultCurveSegments;\r\n                var k, i, len;\r\n                var ptCoord,perc,addedLength = 0;\r\n                var ptDistance;\r\n                var point,lastPoint = null;\r\n                if (pt1.length === 2 && (pt1[0] != pt2[0] || pt1[1] != pt2[1]) && pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt1[0]+pt3[0],pt1[1]+pt3[1]) && pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt2[0]+pt4[0],pt2[1]+pt4[1])){\r\n                    curveSegments = 2;\r\n                }\r\n                var bezierData = new BezierData(curveSegments);\r\n                len = pt3.length;\r\n                for (k = 0; k < curveSegments; k += 1) {\r\n                    point = createSizedArray(len);\r\n                    perc = k / (curveSegments - 1);\r\n                    ptDistance = 0;\r\n                    for (i = 0; i < len; i += 1){\r\n                        ptCoord = bm_pow(1-perc,3)*pt1[i]+3*bm_pow(1-perc,2)*perc*(pt1[i] + pt3[i])+3*(1-perc)*bm_pow(perc,2)*(pt2[i] + pt4[i])+bm_pow(perc,3)*pt2[i];\r\n                        point[i] = ptCoord;\r\n                        if(lastPoint !== null){\r\n                            ptDistance += bm_pow(point[i] - lastPoint[i],2);\r\n                        }\r\n                    }\r\n                    ptDistance = bm_sqrt(ptDistance);\r\n                    addedLength += ptDistance;\r\n                    bezierData.points[k] = new PointData(ptDistance, point);\r\n                    lastPoint = point;\r\n                }\r\n                bezierData.segmentLength = addedLength;\r\n                storedData[bezierName] = bezierData;\r\n            }\r\n            return storedData[bezierName];\r\n        };\r\n    }());\r\n\r\n    function getDistancePerc(perc,bezierData){\r\n        var percents = bezierData.percents;\r\n        var lengths = bezierData.lengths;\r\n        var len = percents.length;\r\n        var initPos = bm_floor((len-1)*perc);\r\n        var lengthPos = perc*bezierData.addedLength;\r\n        var lPerc = 0;\r\n        if(initPos === len - 1 || initPos === 0 || lengthPos === lengths[initPos]){\r\n            return percents[initPos];\r\n        }else{\r\n            var dir = lengths[initPos] > lengthPos ? -1 : 1;\r\n            var flag = true;\r\n            while(flag){\r\n                if(lengths[initPos] <= lengthPos && lengths[initPos+1] > lengthPos){\r\n                    lPerc = (lengthPos - lengths[initPos]) / (lengths[initPos+1] - lengths[initPos]);\r\n                    flag = false;\r\n                }else{\r\n                    initPos += dir;\r\n                }\r\n                if(initPos < 0 || initPos >= len - 1){\r\n                    //FIX for TypedArrays that don't store floating point values with enough accuracy\r\n                    if(initPos === len - 1) {\r\n                        return percents[initPos];\r\n                    }\r\n                    flag = false;\r\n                }\r\n            }\r\n            return percents[initPos] + (percents[initPos+1] - percents[initPos])*lPerc;\r\n        }\r\n    }\r\n\r\n    function getPointInSegment(pt1, pt2, pt3, pt4, percent, bezierData) {\r\n        var t1 = getDistancePerc(percent,bezierData);\r\n        var u0 = 1;\r\n        var u1 = 1 - t1;\r\n        var ptX = Math.round((u1*u1*u1* pt1[0] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[0] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[0] + t1*t1*t1* pt2[0])* 1000) / 1000;\r\n        var ptY = Math.round((u1*u1*u1* pt1[1] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[1] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[1] + t1*t1*t1* pt2[1])* 1000) / 1000;\r\n        return [ptX, ptY];\r\n    }\r\n\r\n    function getSegmentArray() {\r\n\r\n    }\r\n\r\n    var bezier_segment_points = createTypedArray('float32', 8);\r\n\r\n    function getNewSegment(pt1,pt2,pt3,pt4,startPerc,endPerc, bezierData){\r\n\r\n        startPerc = startPerc < 0 ? 0 : startPerc > 1 ? 1 : startPerc;\r\n        var t0 = getDistancePerc(startPerc,bezierData);\r\n        endPerc = endPerc > 1 ? 1 : endPerc;\r\n        var t1 = getDistancePerc(endPerc,bezierData);\r\n        var i, len = pt1.length;\r\n        var u0 = 1 - t0;\r\n        var u1 = 1 - t1;\r\n        var u0u0u0 = u0*u0*u0;\r\n        var t0u0u0_3 = t0*u0*u0*3;\r\n        var t0t0u0_3 = t0*t0*u0*3;\r\n        var t0t0t0 = t0*t0*t0;\r\n        //\r\n        var u0u0u1 = u0*u0*u1;\r\n        var t0u0u1_3 = t0*u0*u1 + u0*t0*u1 + u0*u0*t1;\r\n        var t0t0u1_3 = t0*t0*u1 + u0*t0*t1 + t0*u0*t1;\r\n        var t0t0t1 = t0*t0*t1;\r\n        //\r\n        var u0u1u1 = u0*u1*u1;\r\n        var t0u1u1_3 = t0*u1*u1 + u0*t1*u1 + u0*u1*t1;\r\n        var t0t1u1_3 = t0*t1*u1 + u0*t1*t1 + t0*u1*t1;\r\n        var t0t1t1 = t0*t1*t1;\r\n        //\r\n        var u1u1u1 = u1*u1*u1;\r\n        var t1u1u1_3 = t1*u1*u1 + u1*t1*u1 + u1*u1*t1;\r\n        var t1t1u1_3 = t1*t1*u1 + u1*t1*t1 + t1*u1*t1;\r\n        var t1t1t1 = t1*t1*t1;\r\n        for(i=0;i<len;i+=1){\r\n            bezier_segment_points[i * 4] = Math.round((u0u0u0 * pt1[i] + t0u0u0_3 * pt3[i] + t0t0u0_3 * pt4[i] + t0t0t0 * pt2[i]) * 1000) / 1000;\r\n            bezier_segment_points[i * 4 + 1] = Math.round((u0u0u1 * pt1[i] + t0u0u1_3 * pt3[i] + t0t0u1_3 * pt4[i] + t0t0t1 * pt2[i]) * 1000) / 1000;\r\n            bezier_segment_points[i * 4 + 2] = Math.round((u0u1u1 * pt1[i] + t0u1u1_3 * pt3[i] + t0t1u1_3 * pt4[i] + t0t1t1 * pt2[i]) * 1000) / 1000;\r\n            bezier_segment_points[i * 4 + 3] = Math.round((u1u1u1 * pt1[i] + t1u1u1_3 * pt3[i] + t1t1u1_3 * pt4[i] + t1t1t1 * pt2[i]) * 1000) / 1000;\r\n        }\r\n\r\n        return bezier_segment_points;\r\n    }\r\n\r\n    return {\r\n        getSegmentsLength : getSegmentsLength,\r\n        getNewSegment : getNewSegment,\r\n        getPointInSegment : getPointInSegment,\r\n        buildBezierData : buildBezierData,\r\n        pointOnLine2D : pointOnLine2D,\r\n        pointOnLine3D : pointOnLine3D\r\n    };\r\n}\r\n\r\nvar bez = bezFunction();\r\nfunction dataFunctionManager(){\r\n\r\n    //var tCanvasHelper = createTag('canvas').getContext('2d');\r\n\r\n    function completeLayers(layers, comps, fontManager){\r\n        var layerData;\r\n        var animArray, lastFrame;\r\n        var i, len = layers.length;\r\n        var j, jLen, k, kLen;\r\n        for(i=0;i<len;i+=1){\r\n            layerData = layers[i];\r\n            if(!('ks' in layerData) || layerData.completed){\r\n                continue;\r\n            }\r\n            layerData.completed = true;\r\n            if(layerData.tt){\r\n                layers[i-1].td = layerData.tt;\r\n            }\r\n            animArray = [];\r\n            lastFrame = -1;\r\n            if(layerData.hasMask){\r\n                var maskProps = layerData.masksProperties;\r\n                jLen = maskProps.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    if(maskProps[j].pt.k.i){\r\n                        convertPathsToAbsoluteValues(maskProps[j].pt.k);\r\n                    }else{\r\n                        kLen = maskProps[j].pt.k.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            if(maskProps[j].pt.k[k].s){\r\n                                convertPathsToAbsoluteValues(maskProps[j].pt.k[k].s[0]);\r\n                            }\r\n                            if(maskProps[j].pt.k[k].e){\r\n                                convertPathsToAbsoluteValues(maskProps[j].pt.k[k].e[0]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(layerData.ty===0){\r\n                layerData.layers = findCompLayers(layerData.refId, comps);\r\n                completeLayers(layerData.layers,comps, fontManager);\r\n            }else if(layerData.ty === 4){\r\n                completeShapes(layerData.shapes);\r\n            }else if(layerData.ty == 5){\r\n                completeText(layerData, fontManager);\r\n            }\r\n        }\r\n    }\r\n\r\n    function findCompLayers(id,comps){\r\n        var i = 0, len = comps.length;\r\n        while(i<len){\r\n            if(comps[i].id === id){\r\n                if(!comps[i].layers.__used) {\r\n                    comps[i].layers.__used = true;\r\n                    return comps[i].layers;\r\n                }\r\n                return JSON.parse(JSON.stringify(comps[i].layers));\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    function completeShapes(arr){\r\n        var i, len = arr.length;\r\n        var j, jLen;\r\n        var hasPaths = false;\r\n        for(i=len-1;i>=0;i-=1){\r\n            if(arr[i].ty == 'sh'){\r\n                if(arr[i].ks.k.i){\r\n                    convertPathsToAbsoluteValues(arr[i].ks.k);\r\n                }else{\r\n                    jLen = arr[i].ks.k.length;\r\n                    for(j=0;j<jLen;j+=1){\r\n                        if(arr[i].ks.k[j].s){\r\n                            convertPathsToAbsoluteValues(arr[i].ks.k[j].s[0]);\r\n                        }\r\n                        if(arr[i].ks.k[j].e){\r\n                            convertPathsToAbsoluteValues(arr[i].ks.k[j].e[0]);\r\n                        }\r\n                    }\r\n                }\r\n                hasPaths = true;\r\n            }else if(arr[i].ty == 'gr'){\r\n                completeShapes(arr[i].it);\r\n            }\r\n        }\r\n        /*if(hasPaths){\r\n            //mx: distance\r\n            //ss: sensitivity\r\n            //dc: decay\r\n            arr.splice(arr.length-1,0,{\r\n                \"ty\": \"ms\",\r\n                \"mx\":20,\r\n                \"ss\":10,\r\n                 \"dc\":0.001,\r\n                \"maxDist\":200\r\n            });\r\n        }*/\r\n    }\r\n\r\n    function convertPathsToAbsoluteValues(path){\r\n        var i, len = path.i.length;\r\n        for(i=0;i<len;i+=1){\r\n            path.i[i][0] += path.v[i][0];\r\n            path.i[i][1] += path.v[i][1];\r\n            path.o[i][0] += path.v[i][0];\r\n            path.o[i][1] += path.v[i][1];\r\n        }\r\n    }\r\n\r\n    function checkVersion(minimum,animVersionString){\r\n        var animVersion = animVersionString ? animVersionString.split('.') : [100,100,100];\r\n        if(minimum[0]>animVersion[0]){\r\n            return true;\r\n        } else if(animVersion[0] > minimum[0]){\r\n            return false;\r\n        }\r\n        if(minimum[1]>animVersion[1]){\r\n            return true;\r\n        } else if(animVersion[1] > minimum[1]){\r\n            return false;\r\n        }\r\n        if(minimum[2]>animVersion[2]){\r\n            return true;\r\n        } else if(animVersion[2] > minimum[2]){\r\n            return false;\r\n        }\r\n    }\r\n\r\n    var checkText = (function(){\r\n        var minimumVersion = [4,4,14];\r\n\r\n        function updateTextLayer(textLayer){\r\n            var documentData = textLayer.t.d;\r\n            textLayer.t.d = {\r\n                k: [\r\n                    {\r\n                        s:documentData,\r\n                        t:0\r\n                    }\r\n                ]\r\n            };\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var i, len = layers.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(layers[i].ty === 5){\r\n                    updateTextLayer(layers[i]);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    var checkChars = (function() {\r\n        var minimumVersion = [4,7,99];\r\n        return function (animationData){\r\n            if(animationData.chars && !checkVersion(minimumVersion,animationData.v)){\r\n                var i, len = animationData.chars.length, j, jLen, k, kLen;\r\n                var pathData, paths;\r\n                for(i = 0; i < len; i += 1) {\r\n                    if(animationData.chars[i].data && animationData.chars[i].data.shapes) {\r\n                        paths = animationData.chars[i].data.shapes[0].it;\r\n                        jLen = paths.length;\r\n\r\n                        for(j = 0; j < jLen; j += 1) {\r\n                            pathData = paths[j].ks.k;\r\n                            if(!pathData.__converted) {\r\n                                convertPathsToAbsoluteValues(paths[j].ks.k);\r\n                                pathData.__converted = true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    var checkColors = (function(){\r\n        var minimumVersion = [4,1,9];\r\n\r\n        function iterateShapes(shapes){\r\n            var i, len = shapes.length;\r\n            var j, jLen;\r\n            for(i=0;i<len;i+=1){\r\n                if(shapes[i].ty === 'gr'){\r\n                    iterateShapes(shapes[i].it);\r\n                }else if(shapes[i].ty === 'fl' || shapes[i].ty === 'st'){\r\n                    if(shapes[i].c.k && shapes[i].c.k[0].i){\r\n                        jLen = shapes[i].c.k.length;\r\n                        for(j=0;j<jLen;j+=1){\r\n                            if(shapes[i].c.k[j].s){\r\n                                shapes[i].c.k[j].s[0] /= 255;\r\n                                shapes[i].c.k[j].s[1] /= 255;\r\n                                shapes[i].c.k[j].s[2] /= 255;\r\n                                shapes[i].c.k[j].s[3] /= 255;\r\n                            }\r\n                            if(shapes[i].c.k[j].e){\r\n                                shapes[i].c.k[j].e[0] /= 255;\r\n                                shapes[i].c.k[j].e[1] /= 255;\r\n                                shapes[i].c.k[j].e[2] /= 255;\r\n                                shapes[i].c.k[j].e[3] /= 255;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        shapes[i].c.k[0] /= 255;\r\n                        shapes[i].c.k[1] /= 255;\r\n                        shapes[i].c.k[2] /= 255;\r\n                        shapes[i].c.k[3] /= 255;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var i, len = layers.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(layers[i].ty === 4){\r\n                    iterateShapes(layers[i].shapes);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    var checkShapes = (function(){\r\n        var minimumVersion = [4,4,18];\r\n\r\n\r\n\r\n        function completeShapes(arr){\r\n            var i, len = arr.length;\r\n            var j, jLen;\r\n            var hasPaths = false;\r\n            for(i=len-1;i>=0;i-=1){\r\n                if(arr[i].ty == 'sh'){\r\n                    if(arr[i].ks.k.i){\r\n                        arr[i].ks.k.c = arr[i].closed;\r\n                    }else{\r\n                        jLen = arr[i].ks.k.length;\r\n                        for(j=0;j<jLen;j+=1){\r\n                            if(arr[i].ks.k[j].s){\r\n                                arr[i].ks.k[j].s[0].c = arr[i].closed;\r\n                            }\r\n                            if(arr[i].ks.k[j].e){\r\n                                arr[i].ks.k[j].e[0].c = arr[i].closed;\r\n                            }\r\n                        }\r\n                    }\r\n                    hasPaths = true;\r\n                }else if(arr[i].ty == 'gr'){\r\n                    completeShapes(arr[i].it);\r\n                }\r\n            }\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var layerData;\r\n            var i, len = layers.length;\r\n            var j, jLen, k, kLen;\r\n            for(i=0;i<len;i+=1){\r\n                layerData = layers[i];\r\n                if(layerData.hasMask){\r\n                    var maskProps = layerData.masksProperties;\r\n                    jLen = maskProps.length;\r\n                    for(j=0;j<jLen;j+=1){\r\n                        if(maskProps[j].pt.k.i){\r\n                            maskProps[j].pt.k.c = maskProps[j].cl;\r\n                        }else{\r\n                            kLen = maskProps[j].pt.k.length;\r\n                            for(k=0;k<kLen;k+=1){\r\n                                if(maskProps[j].pt.k[k].s){\r\n                                    maskProps[j].pt.k[k].s[0].c = maskProps[j].cl;\r\n                                }\r\n                                if(maskProps[j].pt.k[k].e){\r\n                                    maskProps[j].pt.k[k].e[0].c = maskProps[j].cl;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if(layerData.ty === 4){\r\n                    completeShapes(layerData.shapes);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    function completeData(animationData, fontManager){\r\n        if(animationData.__complete){\r\n            return;\r\n        }\r\n        checkColors(animationData);\r\n        checkText(animationData);\r\n        checkChars(animationData);\r\n        checkShapes(animationData);\r\n        completeLayers(animationData.layers, animationData.assets, fontManager);\r\n        animationData.__complete = true;\r\n        //blitAnimation(animationData, animationData.assets, fontManager);\r\n    }\r\n\r\n    function completeText(data, fontManager){\r\n        if(data.t.a.length === 0 && !('m' in data.t.p)){\r\n            data.singleShape = true;\r\n        }\r\n    }\r\n\r\n    var moduleOb = {};\r\n    moduleOb.completeData = completeData;\r\n    moduleOb.checkColors = checkColors;\r\n    moduleOb.checkChars = checkChars;\r\n    moduleOb.checkShapes = checkShapes;\r\n    moduleOb.completeLayers = completeLayers;\r\n\r\n    return moduleOb;\r\n}\r\n\r\nvar dataManager = dataFunctionManager();\r\n\r\nvar FontManager = (function(){\r\n\r\n    var maxWaitingTime = 5000;\r\n    var emptyChar = {\r\n        w: 0,\r\n        size:0,\r\n        shapes:[]\r\n    };\r\n    var combinedCharacters = [];\r\n    //Hindi characters\r\n    combinedCharacters = combinedCharacters.concat([2304, 2305, 2306, 2307, 2362, 2363, 2364, 2364, 2366\r\n    , 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379\r\n    , 2380, 2381, 2382, 2383, 2387, 2388, 2389, 2390, 2391, 2402, 2403]);\r\n\r\n    function setUpNode(font, family){\r\n        var parentNode = createTag('span');\r\n        parentNode.style.fontFamily    = family;\r\n        var node = createTag('span');\r\n        // Characters that vary significantly among different fonts\r\n        node.innerHTML = 'giItT1WQy@!-/#';\r\n        // Visible - so we can measure it - but not on the screen\r\n        parentNode.style.position      = 'absolute';\r\n        parentNode.style.left          = '-10000px';\r\n        parentNode.style.top           = '-10000px';\r\n        // Large font size makes even subtle changes obvious\r\n        parentNode.style.fontSize      = '300px';\r\n        // Reset any font properties\r\n        parentNode.style.fontVariant   = 'normal';\r\n        parentNode.style.fontStyle     = 'normal';\r\n        parentNode.style.fontWeight    = 'normal';\r\n        parentNode.style.letterSpacing = '0';\r\n        parentNode.appendChild(node);\r\n        document.body.appendChild(parentNode);\r\n\r\n        // Remember width with no applied web font\r\n        var width = node.offsetWidth;\r\n        node.style.fontFamily = font + ', '+family;\r\n        return {node:node, w:width, parent:parentNode};\r\n    }\r\n\r\n    function checkLoadedFonts() {\r\n        var i, len = this.fonts.length;\r\n        var node, w;\r\n        var loadedCount = len;\r\n        for(i=0;i<len; i+= 1){\r\n            if(this.fonts[i].loaded){\r\n                loadedCount -= 1;\r\n                continue;\r\n            }\r\n            if(this.fonts[i].fOrigin === 'n' || this.fonts[i].origin === 0){\r\n                this.fonts[i].loaded = true;\r\n            } else{\r\n                node = this.fonts[i].monoCase.node;\r\n                w = this.fonts[i].monoCase.w;\r\n                if(node.offsetWidth !== w){\r\n                    loadedCount -= 1;\r\n                    this.fonts[i].loaded = true;\r\n                }else{\r\n                    node = this.fonts[i].sansCase.node;\r\n                    w = this.fonts[i].sansCase.w;\r\n                    if(node.offsetWidth !== w){\r\n                        loadedCount -= 1;\r\n                        this.fonts[i].loaded = true;\r\n                    }\r\n                }\r\n                if(this.fonts[i].loaded){\r\n                    this.fonts[i].sansCase.parent.parentNode.removeChild(this.fonts[i].sansCase.parent);\r\n                    this.fonts[i].monoCase.parent.parentNode.removeChild(this.fonts[i].monoCase.parent);\r\n                }\r\n            }\r\n        }\r\n\r\n        if(loadedCount !== 0 && Date.now() - this.initTime < maxWaitingTime){\r\n            setTimeout(this.checkLoadedFonts.bind(this),20);\r\n        }else{\r\n            setTimeout(function(){this.isLoaded = true;}.bind(this),0);\r\n\r\n        }\r\n    }\r\n\r\n    function createHelper(def, fontData){\r\n        var tHelper = createNS('text');\r\n        tHelper.style.fontSize = '100px';\r\n        //tHelper.style.fontFamily = fontData.fFamily;\r\n        tHelper.setAttribute('font-family', fontData.fFamily);\r\n        tHelper.setAttribute('font-style', fontData.fStyle);\r\n        tHelper.setAttribute('font-weight', fontData.fWeight);\r\n        tHelper.textContent = '1';\r\n        if(fontData.fClass){\r\n            tHelper.style.fontFamily = 'inherit';\r\n            tHelper.setAttribute('class', fontData.fClass);\r\n        } else {\r\n            tHelper.style.fontFamily = fontData.fFamily;\r\n        }\r\n        def.appendChild(tHelper);\r\n        var tCanvasHelper = createTag('canvas').getContext('2d');\r\n        tCanvasHelper.font = fontData.fWeight + ' ' + fontData.fStyle + ' 100px '+ fontData.fFamily;\r\n        //tCanvasHelper.font = ' 100px '+ fontData.fFamily;\r\n        return tHelper;\r\n    }\r\n\r\n    function addFonts(fontData, defs){\r\n        if(!fontData){\r\n            this.isLoaded = true;\r\n            return;\r\n        }\r\n        if(this.chars){\r\n            this.isLoaded = true;\r\n            this.fonts = fontData.list;\r\n            return;\r\n        }\r\n\r\n\r\n        var fontArr = fontData.list;\r\n        var i, len = fontArr.length;\r\n        var _pendingFonts = len;\r\n        for(i=0; i<len; i+= 1){\r\n            var shouldLoadFont = true;\r\n            var loadedSelector;\r\n            var j;\r\n            fontArr[i].loaded = false;\r\n            fontArr[i].monoCase = setUpNode(fontArr[i].fFamily,'monospace');\r\n            fontArr[i].sansCase = setUpNode(fontArr[i].fFamily,'sans-serif');\r\n            if(!fontArr[i].fPath) {\r\n                fontArr[i].loaded = true;\r\n                _pendingFonts -= 1;\r\n            }else if(fontArr[i].fOrigin === 'p' || fontArr[i].origin === 3){\r\n                loadedSelector = document.querySelectorAll('style[f-forigin=\"p\"][f-family=\"'+ fontArr[i].fFamily +'\"], style[f-origin=\"3\"][f-family=\"'+ fontArr[i].fFamily +'\"]');\r\n\r\n                if (loadedSelector.length > 0) {\r\n                    shouldLoadFont = false;\r\n                }\r\n\r\n                if (shouldLoadFont) {\r\n                    var s = createTag('style');\r\n                    s.setAttribute('f-forigin', fontArr[i].fOrigin);\r\n                    s.setAttribute('f-origin', fontArr[i].origin);\r\n                    s.setAttribute('f-family', fontArr[i].fFamily);\r\n                    s.type = \"text/css\";\r\n                    s.innerHTML = \"@font-face {\" + \"font-family: \"+fontArr[i].fFamily+\"; font-style: normal; src: url('\"+fontArr[i].fPath+\"');}\";\r\n                    defs.appendChild(s);\r\n                }\r\n            } else if(fontArr[i].fOrigin === 'g' || fontArr[i].origin === 1){\r\n                loadedSelector = document.querySelectorAll('link[f-forigin=\"g\"], link[f-origin=\"1\"]');\r\n\r\n                for (j = 0; j < loadedSelector.length; j++) {\r\n                    if (loadedSelector[j].href.indexOf(fontArr[i].fPath) !== -1) {\r\n                        // Font is already loaded\r\n                        shouldLoadFont = false;\r\n                    }\r\n                }\r\n\r\n                if (shouldLoadFont) {\r\n                    var l = createTag('link');\r\n                    l.setAttribute('f-forigin', fontArr[i].fOrigin);\r\n                    l.setAttribute('f-origin', fontArr[i].origin);\r\n                    l.type = \"text/css\";\r\n                    l.rel = \"stylesheet\";\r\n                    l.href = fontArr[i].fPath;\r\n                    document.body.appendChild(l);\r\n                }\r\n            } else if(fontArr[i].fOrigin === 't' || fontArr[i].origin === 2){\r\n                loadedSelector = document.querySelectorAll('script[f-forigin=\"t\"], script[f-origin=\"2\"]');\r\n\r\n                for (j = 0; j < loadedSelector.length; j++) {\r\n                    if (fontArr[i].fPath === loadedSelector[j].src) {\r\n                        // Font is already loaded\r\n                        shouldLoadFont = false;\r\n                    }\r\n                }\r\n\r\n                if (shouldLoadFont) {\r\n                    var sc = createTag('link');\r\n                    sc.setAttribute('f-forigin', fontArr[i].fOrigin);\r\n                    sc.setAttribute('f-origin', fontArr[i].origin);\r\n                    sc.setAttribute('rel','stylesheet');\r\n                    sc.setAttribute('href',fontArr[i].fPath);\r\n                    defs.appendChild(sc);\r\n                }\r\n            }\r\n            fontArr[i].helper = createHelper(defs,fontArr[i]);\r\n            fontArr[i].cache = {};\r\n            this.fonts.push(fontArr[i]);\r\n        }\r\n        if (_pendingFonts === 0) {\r\n            this.isLoaded = true;\r\n        } else {\r\n            //On some cases even if the font is loaded, it won't load correctly when measuring text on canvas.\r\n            //Adding this timeout seems to fix it\r\n           setTimeout(this.checkLoadedFonts.bind(this), 100);\r\n        }\r\n    }\r\n\r\n    function addChars(chars){\r\n        if(!chars){\r\n            return;\r\n        }\r\n        if(!this.chars){\r\n            this.chars = [];\r\n        }\r\n        var i, len = chars.length;\r\n        var j, jLen = this.chars.length, found;\r\n        for(i=0;i<len;i+=1){\r\n            j = 0;\r\n            found = false;\r\n            while(j<jLen){\r\n                if(this.chars[j].style === chars[i].style && this.chars[j].fFamily === chars[i].fFamily && this.chars[j].ch === chars[i].ch){\r\n                    found = true;\r\n                }\r\n                j += 1;\r\n            }\r\n            if(!found){\r\n                this.chars.push(chars[i]);\r\n                jLen += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    function getCharData(char, style, font){\r\n        var i = 0, len = this.chars.length;\r\n        while( i < len) {\r\n            if(this.chars[i].ch === char && this.chars[i].style === style && this.chars[i].fFamily === font){\r\n\r\n                return this.chars[i];\r\n            }\r\n            i+= 1;\r\n        }\r\n        if((typeof char === 'string' && char.charCodeAt(0) !== 13 || !char) && console && console.warn) {\r\n            console.warn('Missing character from exported characters list: ', char, style, font);\r\n        }\r\n        return emptyChar;\r\n    }\r\n\r\n    function measureText(char, fontName, size) {\r\n        var fontData = this.getFontByName(fontName);\r\n        var index = char.charCodeAt(0);\r\n        if(!fontData.cache[index + 1]) {\r\n            var tHelper = fontData.helper;\r\n            //Canvas version\r\n            //fontData.cache[index] = tHelper.measureText(char).width / 100;\r\n            //SVG version\r\n            //console.log(tHelper.getBBox().width)\r\n            if (char === ' ') {\r\n                tHelper.textContent = '|' + char + '|';\r\n                var doubleSize = tHelper.getComputedTextLength();\r\n                tHelper.textContent = '||';\r\n                var singleSize = tHelper.getComputedTextLength();\r\n                fontData.cache[index + 1] = (doubleSize - singleSize)/100;\r\n            } else {\r\n                tHelper.textContent = char;\r\n                fontData.cache[index + 1] = (tHelper.getComputedTextLength())/100;\r\n            }\r\n        }\r\n        return fontData.cache[index + 1] * size;\r\n    }\r\n\r\n    function getFontByName(name){\r\n        var i = 0, len = this.fonts.length;\r\n        while(i<len){\r\n            if(this.fonts[i].fName === name) {\r\n                return this.fonts[i];\r\n            }\r\n            i += 1;\r\n        }\r\n        return this.fonts[0];\r\n    }\r\n\r\n    function getCombinedCharacterCodes() {\r\n        return combinedCharacters;\r\n    }\r\n\r\n    function loaded() {\r\n        return this.isLoaded;\r\n    }\r\n\r\n    var Font = function(){\r\n        this.fonts = [];\r\n        this.chars = null;\r\n        this.typekitLoaded = 0;\r\n        this.isLoaded = false;\r\n        this.initTime = Date.now();\r\n    };\r\n    //TODO: for now I'm adding these methods to the Class and not the prototype. Think of a better way to implement it. \r\n    Font.getCombinedCharacterCodes = getCombinedCharacterCodes;\r\n\r\n    Font.prototype.addChars = addChars;\r\n    Font.prototype.addFonts = addFonts;\r\n    Font.prototype.getCharData = getCharData;\r\n    Font.prototype.getFontByName = getFontByName;\r\n    Font.prototype.measureText = measureText;\r\n    Font.prototype.checkLoadedFonts = checkLoadedFonts;\r\n    Font.prototype.loaded = loaded;\r\n\r\n    return Font;\r\n\r\n}());\r\nvar PropertyFactory = (function(){\r\n\r\n    var initFrame = initialDefaultFrame;\r\n    var math_abs = Math.abs;\r\n\r\n    function interpolateValue(frameNum, caching) {\r\n        var offsetTime = this.offsetTime;\r\n        var newValue;\r\n        if (this.propType === 'multidimensional') {\r\n            newValue = createTypedArray('float32', this.pv.length);\r\n        }\r\n        var iterationIndex = caching.lastIndex;\r\n        var i = iterationIndex;\r\n        var len = this.keyframes.length - 1, flag = true;\r\n        var keyData, nextKeyData;\r\n\r\n        while (flag) {\r\n            keyData = this.keyframes[i];\r\n            nextKeyData = this.keyframes[i + 1];\r\n            if (i === len - 1 && frameNum >= nextKeyData.t - offsetTime){\r\n                if(keyData.h){\r\n                    keyData = nextKeyData;\r\n                }\r\n                iterationIndex = 0;\r\n                break;\r\n            }\r\n            if ((nextKeyData.t - offsetTime) > frameNum){\r\n                iterationIndex = i;\r\n                break;\r\n            }\r\n            if (i < len - 1){\r\n                i += 1;\r\n            } else {\r\n                iterationIndex = 0;\r\n                flag = false;\r\n            }\r\n        }\r\n\r\n        var k, kLen, perc, jLen, j, fnc;\r\n        var nextKeyTime = nextKeyData.t - offsetTime;\r\n        var keyTime = keyData.t - offsetTime;\r\n        var endValue;\r\n        if (keyData.to) {\r\n            if (!keyData.bezierData) {\r\n                keyData.bezierData = bez.buildBezierData(keyData.s, nextKeyData.s || keyData.e, keyData.to, keyData.ti);\r\n            }\r\n            var bezierData = keyData.bezierData;\r\n            if (frameNum >= nextKeyTime || frameNum < keyTime) {\r\n                var ind = frameNum >= nextKeyTime ? bezierData.points.length - 1 : 0;\r\n                kLen = bezierData.points[ind].point.length;\r\n                for (k = 0; k < kLen; k += 1) {\r\n                    newValue[k] = bezierData.points[ind].point[k];\r\n                }\r\n                // caching._lastKeyframeIndex = -1;\r\n            } else {\r\n                if (keyData.__fnct) {\r\n                    fnc = keyData.__fnct;\r\n                } else {\r\n                    fnc = BezierFactory.getBezierEasing(keyData.o.x, keyData.o.y, keyData.i.x, keyData.i.y, keyData.n).get;\r\n                    keyData.__fnct = fnc;\r\n                }\r\n                perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime));\r\n                var distanceInLine = bezierData.segmentLength*perc;\r\n\r\n                var segmentPerc;\r\n                var addedLength =  (caching.lastFrame < frameNum && caching._lastKeyframeIndex === i) ? caching._lastAddedLength : 0;\r\n                j =  (caching.lastFrame < frameNum && caching._lastKeyframeIndex === i) ? caching._lastPoint : 0;\r\n                flag = true;\r\n                jLen = bezierData.points.length;\r\n                while (flag) {\r\n                    addedLength += bezierData.points[j].partialLength;\r\n                    if (distanceInLine === 0 || perc === 0 || j === bezierData.points.length - 1) {\r\n                        kLen = bezierData.points[j].point.length;\r\n                        for (k = 0; k < kLen; k += 1) {\r\n                            newValue[k] = bezierData.points[j].point[k];\r\n                        }\r\n                        break;\r\n                    } else if (distanceInLine >= addedLength && distanceInLine < addedLength + bezierData.points[j + 1].partialLength) {\r\n                        segmentPerc = (distanceInLine - addedLength) / bezierData.points[j + 1].partialLength;\r\n                        kLen = bezierData.points[j].point.length;\r\n                        for (k = 0; k < kLen; k += 1) {\r\n                            newValue[k] = bezierData.points[j].point[k] + (bezierData.points[j + 1].point[k] - bezierData.points[j].point[k]) * segmentPerc;\r\n                        }\r\n                        break;\r\n                    }\r\n                    if (j < jLen - 1){\r\n                        j += 1;\r\n                    } else {\r\n                        flag = false;\r\n                    }\r\n                }\r\n                caching._lastPoint = j;\r\n                caching._lastAddedLength = addedLength - bezierData.points[j].partialLength;\r\n                caching._lastKeyframeIndex = i;\r\n            }\r\n        } else {\r\n            var outX, outY, inX, inY, keyValue;\r\n            len = keyData.s.length;\r\n            endValue = nextKeyData.s || keyData.e;\r\n            if (this.sh && keyData.h !== 1) {\r\n                if (frameNum >= nextKeyTime) {\r\n                    newValue[0] = endValue[0];\r\n                    newValue[1] = endValue[1];\r\n                    newValue[2] = endValue[2];\r\n                } else if (frameNum <= keyTime) {\r\n                    newValue[0] = keyData.s[0];\r\n                    newValue[1] = keyData.s[1];\r\n                    newValue[2] = keyData.s[2];\r\n                } else {\r\n                    var quatStart = createQuaternion(keyData.s);\r\n                    var quatEnd = createQuaternion(endValue);\r\n                    var time = (frameNum - keyTime) / (nextKeyTime - keyTime);\r\n                    quaternionToEuler(newValue, slerp(quatStart, quatEnd, time));\r\n                }\r\n                \r\n            } else {\r\n                for(i = 0; i < len; i += 1) {\r\n                    if (keyData.h !== 1) {\r\n                        if (frameNum >= nextKeyTime) {\r\n                            perc = 1;\r\n                        } else if(frameNum < keyTime) {\r\n                            perc = 0;\r\n                        } else {\r\n                            if(keyData.o.x.constructor === Array) {\r\n                                if (!keyData.__fnct) {\r\n                                    keyData.__fnct = [];\r\n                                }\r\n                                if (!keyData.__fnct[i]) {\r\n                                    outX = (typeof keyData.o.x[i] === 'undefined') ? keyData.o.x[0] : keyData.o.x[i];\r\n                                    outY = (typeof keyData.o.y[i] === 'undefined') ? keyData.o.y[0] : keyData.o.y[i];\r\n                                    inX = (typeof keyData.i.x[i] === 'undefined') ? keyData.i.x[0] : keyData.i.x[i];\r\n                                    inY = (typeof keyData.i.y[i] === 'undefined') ? keyData.i.y[0] : keyData.i.y[i];\r\n                                    fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;\r\n                                    keyData.__fnct[i] = fnc;\r\n                                } else {\r\n                                    fnc = keyData.__fnct[i];\r\n                                }\r\n                            } else {\r\n                                if (!keyData.__fnct) {\r\n                                    outX = keyData.o.x;\r\n                                    outY = keyData.o.y;\r\n                                    inX = keyData.i.x;\r\n                                    inY = keyData.i.y;\r\n                                    fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;\r\n                                    keyData.__fnct = fnc;\r\n                                } else {\r\n                                    fnc = keyData.__fnct;\r\n                                }\r\n                            }\r\n                            perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime ));\r\n                        }\r\n                    }\r\n\r\n                    endValue = nextKeyData.s || keyData.e;\r\n                    keyValue = keyData.h === 1 ? keyData.s[i] : keyData.s[i] + (endValue[i] - keyData.s[i]) * perc;\r\n\r\n                    if (this.propType === 'multidimensional') {\r\n                        newValue[i] = keyValue;\r\n                    } else {\r\n                        newValue = keyValue;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        caching.lastIndex = iterationIndex;\r\n        return newValue;\r\n    }\r\n\r\n    //based on @Toji's https://github.com/toji/gl-matrix/\r\n    function slerp(a, b, t) {\r\n        var out = [];\r\n        var ax = a[0], ay = a[1], az = a[2], aw = a[3],\r\n        bx = b[0], by = b[1], bz = b[2], bw = b[3]\r\n\r\n        var omega, cosom, sinom, scale0, scale1;\r\n\r\n        cosom = ax * bx + ay * by + az * bz + aw * bw;\r\n        if (cosom < 0.0) {\r\n            cosom = -cosom;\r\n            bx = -bx;\r\n            by = -by;\r\n            bz = -bz;\r\n            bw = -bw;\r\n        }\r\n        if ((1.0 - cosom) > 0.000001) {\r\n            omega = Math.acos(cosom);\r\n            sinom = Math.sin(omega);\r\n            scale0 = Math.sin((1.0 - t) * omega) / sinom;\r\n            scale1 = Math.sin(t * omega) / sinom;\r\n        } else {\r\n            scale0 = 1.0 - t;\r\n            scale1 = t;\r\n        }\r\n        out[0] = scale0 * ax + scale1 * bx;\r\n        out[1] = scale0 * ay + scale1 * by;\r\n        out[2] = scale0 * az + scale1 * bz;\r\n        out[3] = scale0 * aw + scale1 * bw;\r\n\r\n        return out;\r\n    }\r\n\r\n    function quaternionToEuler(out, quat) {\r\n        var qx = quat[0];\r\n        var qy = quat[1];\r\n        var qz = quat[2];\r\n        var qw = quat[3];\r\n        var heading = Math.atan2(2*qy*qw-2*qx*qz , 1 - 2*qy*qy - 2*qz*qz)\r\n        var attitude = Math.asin(2*qx*qy + 2*qz*qw) \r\n        var bank = Math.atan2(2*qx*qw-2*qy*qz , 1 - 2*qx*qx - 2*qz*qz);\r\n        out[0] = heading/degToRads;\r\n        out[1] = attitude/degToRads;\r\n        out[2] = bank/degToRads;\r\n    }\r\n\r\n    function createQuaternion(values) {\r\n        var heading = values[0] * degToRads;\r\n        var attitude = values[1] * degToRads;\r\n        var bank = values[2] * degToRads;\r\n        var c1 = Math.cos(heading / 2);\r\n        var c2 = Math.cos(attitude / 2);\r\n        var c3 = Math.cos(bank / 2);\r\n        var s1 = Math.sin(heading / 2);\r\n        var s2 = Math.sin(attitude / 2);\r\n        var s3 = Math.sin(bank / 2);\r\n        var w = c1 * c2 * c3 - s1 * s2 * s3;\r\n        var x = s1 * s2 * c3 + c1 * c2 * s3;\r\n        var y = s1 * c2 * c3 + c1 * s2 * s3;\r\n        var z = c1 * s2 * c3 - s1 * c2 * s3;\r\n\r\n        return [x,y,z,w];\r\n    }\r\n\r\n    function getValueAtCurrentTime(){\r\n        var frameNum = this.comp.renderedFrame - this.offsetTime;\r\n        var initTime = this.keyframes[0].t - this.offsetTime;\r\n        var endTime = this.keyframes[this.keyframes.length- 1].t-this.offsetTime;\r\n        if(!(frameNum === this._caching.lastFrame || (this._caching.lastFrame !== initFrame && ((this._caching.lastFrame >= endTime && frameNum >= endTime) || (this._caching.lastFrame < initTime && frameNum < initTime))))){\r\n            if(this._caching.lastFrame >= frameNum) {\r\n                this._caching._lastKeyframeIndex = -1;\r\n                this._caching.lastIndex = 0;\r\n            }\r\n\r\n            var renderResult = this.interpolateValue(frameNum, this._caching);\r\n            this.pv = renderResult;\r\n        }\r\n        this._caching.lastFrame = frameNum;\r\n        return this.pv;\r\n    }\r\n\r\n    function setVValue(val) {\r\n        var multipliedValue;\r\n        if(this.propType === 'unidimensional') {\r\n            multipliedValue = val * this.mult;\r\n            if(math_abs(this.v - multipliedValue) > 0.00001) {\r\n                this.v = multipliedValue;\r\n                this._mdf = true;\r\n            }\r\n        } else {\r\n            var i = 0, len = this.v.length;\r\n            while (i < len) {\r\n                multipliedValue = val[i] * this.mult;\r\n                if (math_abs(this.v[i] - multipliedValue) > 0.00001) {\r\n                    this.v[i] = multipliedValue;\r\n                    this._mdf = true;\r\n                }\r\n                i += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    function processEffectsSequence() {\r\n        if (this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) {\r\n            return;\r\n        }\r\n        if(this.lock) {\r\n            this.setVValue(this.pv);\r\n            return;\r\n        }\r\n        this.lock = true;\r\n        this._mdf = this._isFirstFrame;\r\n        var multipliedValue;\r\n        var i, len = this.effectsSequence.length;\r\n        var finalValue = this.kf ? this.pv : this.data.k;\r\n        for(i = 0; i < len; i += 1) {\r\n            finalValue = this.effectsSequence[i](finalValue);\r\n        }\r\n        this.setVValue(finalValue);\r\n        this._isFirstFrame = false;\r\n        this.lock = false;\r\n        this.frameId = this.elem.globalData.frameId;\r\n    }\r\n\r\n    function addEffect(effectFunction) {\r\n        this.effectsSequence.push(effectFunction);\r\n        this.container.addDynamicProperty(this);\r\n    }\r\n\r\n    function ValueProperty(elem, data, mult, container){\r\n        this.propType = 'unidimensional';\r\n        this.mult = mult || 1;\r\n        this.data = data;\r\n        this.v = mult ? data.k * mult : data.k;\r\n        this.pv = data.k;\r\n        this._mdf = false;\r\n        this.elem = elem;\r\n        this.container = container;\r\n        this.comp = elem.comp;\r\n        this.k = false;\r\n        this.kf = false;\r\n        this.vel = 0;\r\n        this.effectsSequence = [];\r\n        this._isFirstFrame = true;\r\n        this.getValue = processEffectsSequence;\r\n        this.setVValue = setVValue;\r\n        this.addEffect = addEffect;\r\n    }\r\n\r\n    function MultiDimensionalProperty(elem, data, mult, container) {\r\n        this.propType = 'multidimensional';\r\n        this.mult = mult || 1;\r\n        this.data = data;\r\n        this._mdf = false;\r\n        this.elem = elem;\r\n        this.container = container;\r\n        this.comp = elem.comp;\r\n        this.k = false;\r\n        this.kf = false;\r\n        this.frameId = -1;\r\n        var i, len = data.k.length;\r\n        this.v = createTypedArray('float32', len);\r\n        this.pv = createTypedArray('float32', len);\r\n        var arr = createTypedArray('float32', len);\r\n        this.vel = createTypedArray('float32', len);\r\n        for (i = 0; i < len; i += 1) {\r\n            this.v[i] = data.k[i] * this.mult;\r\n            this.pv[i] = data.k[i];\r\n        }\r\n        this._isFirstFrame = true;\r\n        this.effectsSequence = [];\r\n        this.getValue = processEffectsSequence;\r\n        this.setVValue = setVValue;\r\n        this.addEffect = addEffect;\r\n    }\r\n\r\n    function KeyframedValueProperty(elem, data, mult, container) {\r\n        this.propType = 'unidimensional';\r\n        this.keyframes = data.k;\r\n        this.offsetTime = elem.data.st;\r\n        this.frameId = -1;\r\n        this._caching = {lastFrame: initFrame, lastIndex: 0, value: 0, _lastKeyframeIndex: -1};\r\n        this.k = true;\r\n        this.kf = true;\r\n        this.data = data;\r\n        this.mult = mult || 1;\r\n        this.elem = elem;\r\n        this.container = container;\r\n        this.comp = elem.comp;\r\n        this.v = initFrame;\r\n        this.pv = initFrame;\r\n        this._isFirstFrame = true;\r\n        this.getValue = processEffectsSequence;\r\n        this.setVValue = setVValue;\r\n        this.interpolateValue = interpolateValue;\r\n        this.effectsSequence = [getValueAtCurrentTime.bind(this)];\r\n        this.addEffect = addEffect;\r\n    }\r\n\r\n    function KeyframedMultidimensionalProperty(elem, data, mult, container){\r\n        this.propType = 'multidimensional';\r\n        var i, len = data.k.length;\r\n        var s, e,to,ti;\r\n        for (i = 0; i < len - 1; i += 1) {\r\n            if (data.k[i].to && data.k[i].s && data.k[i + 1] && data.k[i + 1].s) {\r\n                s = data.k[i].s;\r\n                e = data.k[i + 1].s;\r\n                to = data.k[i].to;\r\n                ti = data.k[i].ti;\r\n                if((s.length === 2 && !(s[0] === e[0] && s[1] === e[1]) && bez.pointOnLine2D(s[0],s[1],e[0],e[1],s[0] + to[0],s[1] + to[1]) && bez.pointOnLine2D(s[0],s[1],e[0],e[1],e[0] + ti[0],e[1] + ti[1])) || (s.length === 3 && !(s[0] === e[0] && s[1] === e[1] && s[2] === e[2]) && bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],s[0] + to[0],s[1] + to[1],s[2] + to[2]) && bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],e[0] + ti[0],e[1] + ti[1],e[2] + ti[2]))){\r\n                    data.k[i].to = null;\r\n                    data.k[i].ti = null;\r\n                }\r\n                if(s[0] === e[0] && s[1] === e[1] && to[0] === 0 && to[1] === 0 && ti[0] === 0 && ti[1] === 0) {\r\n                    if(s.length === 2 || (s[2] === e[2] && to[2] === 0 && ti[2] === 0)) {\r\n                        data.k[i].to = null;\r\n                        data.k[i].ti = null;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.effectsSequence = [getValueAtCurrentTime.bind(this)];\r\n        this.keyframes = data.k;\r\n        this.offsetTime = elem.data.st;\r\n        this.k = true;\r\n        this.kf = true;\r\n        this._isFirstFrame = true;\r\n        this.mult = mult || 1;\r\n        this.elem = elem;\r\n        this.container = container;\r\n        this.comp = elem.comp;\r\n        this.getValue = processEffectsSequence;\r\n        this.setVValue = setVValue;\r\n        this.interpolateValue = interpolateValue;\r\n        this.frameId = -1;\r\n        var arrLen = data.k[0].s.length;\r\n        this.v = createTypedArray('float32', arrLen);\r\n        this.pv = createTypedArray('float32', arrLen);\r\n        for (i = 0; i < arrLen; i += 1) {\r\n            this.v[i] = initFrame;\r\n            this.pv[i] = initFrame;\r\n        }\r\n        this._caching={lastFrame:initFrame,lastIndex:0,value:createTypedArray('float32', arrLen)};\r\n        this.addEffect = addEffect;\r\n    }\r\n\r\n    function getProp(elem,data,type, mult, container) {\r\n        var p;\r\n        if(!data.k.length){\r\n            p = new ValueProperty(elem,data, mult, container);\r\n        }else if(typeof(data.k[0]) === 'number'){\r\n            p = new MultiDimensionalProperty(elem,data, mult, container);\r\n        }else{\r\n            switch(type){\r\n                case 0:\r\n                    p = new KeyframedValueProperty(elem,data,mult, container);\r\n                    break;\r\n                case 1:\r\n                    p = new KeyframedMultidimensionalProperty(elem,data,mult, container);\r\n                    break;\r\n            }\r\n        }\r\n        if(p.effectsSequence.length){\r\n            container.addDynamicProperty(p);\r\n        }\r\n        return p;\r\n    }\r\n\r\n    var ob = {\r\n        getProp: getProp\r\n    };\r\n    return ob;\r\n}());\r\nvar TransformPropertyFactory = (function() {\r\n\r\n    var defaultVector = [0,0]\r\n\r\n    function applyToMatrix(mat) {\r\n        var _mdf = this._mdf;\r\n        this.iterateDynamicProperties();\r\n        this._mdf = this._mdf || _mdf;\r\n        if (this.a) {\r\n            mat.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n        }\r\n        if (this.s) {\r\n            mat.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n        }\r\n        if (this.sk) {\r\n            mat.skewFromAxis(-this.sk.v, this.sa.v);\r\n        }\r\n        if (this.r) {\r\n            mat.rotate(-this.r.v);\r\n        } else {\r\n            mat.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n        }\r\n        if (this.data.p.s) {\r\n            if (this.data.p.z) {\r\n                mat.translate(this.px.v, this.py.v, -this.pz.v);\r\n            } else {\r\n                mat.translate(this.px.v, this.py.v, 0);\r\n            }\r\n        } else {\r\n            mat.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);\r\n        }\r\n    }\r\n    function processKeys(forceRender){\r\n        if (this.elem.globalData.frameId === this.frameId) {\r\n            return;\r\n        }\r\n        if(this._isDirty) {\r\n            this.precalculateMatrix();\r\n            this._isDirty = false;\r\n        }\r\n\r\n        this.iterateDynamicProperties();\r\n\r\n        if (this._mdf || forceRender) {\r\n            this.v.cloneFromProps(this.pre.props);\r\n            if (this.appliedTransformations < 1) {\r\n                this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n            }\r\n            if(this.appliedTransformations < 2) {\r\n                this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n            }\r\n            if (this.sk && this.appliedTransformations < 3) {\r\n                this.v.skewFromAxis(-this.sk.v, this.sa.v);\r\n            }\r\n            if (this.r && this.appliedTransformations < 4) {\r\n                this.v.rotate(-this.r.v);\r\n            } else if (!this.r && this.appliedTransformations < 4){\r\n                this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n            }\r\n            if (this.autoOriented) {\r\n                var v1,v2, frameRate = this.elem.globalData.frameRate;\r\n                if(this.p && this.p.keyframes && this.p.getValueAtTime) {\r\n                    if (this.p._caching.lastFrame+this.p.offsetTime <= this.p.keyframes[0].t) {\r\n                        v1 = this.p.getValueAtTime((this.p.keyframes[0].t + 0.01) / frameRate,0);\r\n                        v2 = this.p.getValueAtTime(this.p.keyframes[0].t / frameRate, 0);\r\n                    } else if(this.p._caching.lastFrame+this.p.offsetTime >= this.p.keyframes[this.p.keyframes.length - 1].t) {\r\n                        v1 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t / frameRate), 0);\r\n                        v2 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - 0.05) / frameRate, 0);\r\n                    } else {\r\n                        v1 = this.p.pv;\r\n                        v2 = this.p.getValueAtTime((this.p._caching.lastFrame+this.p.offsetTime - 0.01) / frameRate, this.p.offsetTime);\r\n                    }\r\n                } else if(this.px && this.px.keyframes && this.py.keyframes && this.px.getValueAtTime && this.py.getValueAtTime) {\r\n                    v1 = [];\r\n                    v2 = [];\r\n                    var px = this.px, py = this.py, frameRate;\r\n                    if (px._caching.lastFrame+px.offsetTime <= px.keyframes[0].t) {\r\n                        v1[0] = px.getValueAtTime((px.keyframes[0].t + 0.01) / frameRate,0);\r\n                        v1[1] = py.getValueAtTime((py.keyframes[0].t + 0.01) / frameRate,0);\r\n                        v2[0] = px.getValueAtTime((px.keyframes[0].t) / frameRate,0);\r\n                        v2[1] = py.getValueAtTime((py.keyframes[0].t) / frameRate,0);\r\n                    } else if(px._caching.lastFrame+px.offsetTime >= px.keyframes[px.keyframes.length - 1].t) {\r\n                        v1[0] = px.getValueAtTime((px.keyframes[px.keyframes.length - 1].t / frameRate),0);\r\n                        v1[1] = py.getValueAtTime((py.keyframes[py.keyframes.length - 1].t / frameRate),0);\r\n                        v2[0] = px.getValueAtTime((px.keyframes[px.keyframes.length - 1].t - 0.01) / frameRate,0);\r\n                        v2[1] = py.getValueAtTime((py.keyframes[py.keyframes.length - 1].t - 0.01) / frameRate,0);\r\n                    } else {\r\n                        v1 = [px.pv, py.pv];\r\n                        v2[0] = px.getValueAtTime((px._caching.lastFrame+px.offsetTime - 0.01) / frameRate,px.offsetTime);\r\n                        v2[1] = py.getValueAtTime((py._caching.lastFrame+py.offsetTime - 0.01) / frameRate,py.offsetTime);\r\n                    }\r\n                } else {\r\n                    v1 = v2 = defaultVector\r\n                }\r\n                this.v.rotate(-Math.atan2(v1[1] - v2[1], v1[0] - v2[0]));\r\n            }\r\n            if(this.data.p && this.data.p.s){\r\n                if(this.data.p.z) {\r\n                    this.v.translate(this.px.v, this.py.v, -this.pz.v);\r\n                } else {\r\n                    this.v.translate(this.px.v, this.py.v, 0);\r\n                }\r\n            }else{\r\n                this.v.translate(this.p.v[0],this.p.v[1],-this.p.v[2]);\r\n            }\r\n        }\r\n        this.frameId = this.elem.globalData.frameId;\r\n    }\r\n\r\n    function precalculateMatrix() {\r\n        if(!this.a.k) {\r\n            this.pre.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n            this.appliedTransformations = 1;\r\n        } else {\r\n            return;\r\n        }\r\n        if(!this.s.effectsSequence.length) {\r\n            this.pre.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n            this.appliedTransformations = 2;\r\n        } else {\r\n            return;\r\n        }\r\n        if(this.sk) {\r\n            if(!this.sk.effectsSequence.length && !this.sa.effectsSequence.length) {\r\n                this.pre.skewFromAxis(-this.sk.v, this.sa.v);\r\n            this.appliedTransformations = 3;\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n        if (this.r) {\r\n            if(!this.r.effectsSequence.length) {\r\n                this.pre.rotate(-this.r.v);\r\n                this.appliedTransformations = 4;\r\n            } else {\r\n                return;\r\n            }\r\n        } else if(!this.rz.effectsSequence.length && !this.ry.effectsSequence.length && !this.rx.effectsSequence.length && !this.or.effectsSequence.length) {\r\n            this.pre.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n            this.appliedTransformations = 4;\r\n        }\r\n    }\r\n\r\n    function autoOrient(){\r\n        //\r\n        //var prevP = this.getValueAtTime();\r\n    }\r\n\r\n    function addDynamicProperty(prop) {\r\n        this._addDynamicProperty(prop);\r\n        this.elem.addDynamicProperty(prop);\r\n        this._isDirty = true;\r\n    }\r\n\r\n    function TransformProperty(elem,data,container){\r\n        this.elem = elem;\r\n        this.frameId = -1;\r\n        this.propType = 'transform';\r\n        this.data = data;\r\n        this.v = new Matrix();\r\n        //Precalculated matrix with non animated properties\r\n        this.pre = new Matrix();\r\n        this.appliedTransformations = 0;\r\n        this.initDynamicPropertyContainer(container || elem);\r\n        if(data.p && data.p.s){\r\n            this.px = PropertyFactory.getProp(elem,data.p.x,0,0,this);\r\n            this.py = PropertyFactory.getProp(elem,data.p.y,0,0,this);\r\n            if(data.p.z){\r\n                this.pz = PropertyFactory.getProp(elem,data.p.z,0,0,this);\r\n            }\r\n        }else{\r\n            this.p = PropertyFactory.getProp(elem,data.p || {k:[0,0,0]},1,0,this);\r\n        }\r\n        if(data.rx) {\r\n            this.rx = PropertyFactory.getProp(elem, data.rx, 0, degToRads, this);\r\n            this.ry = PropertyFactory.getProp(elem, data.ry, 0, degToRads, this);\r\n            this.rz = PropertyFactory.getProp(elem, data.rz, 0, degToRads, this);\r\n            if(data.or.k[0].ti) {\r\n                var i, len = data.or.k.length;\r\n                for(i=0;i<len;i+=1) {\r\n                    data.or.k[i].to = data.or.k[i].ti = null;\r\n                }\r\n            }\r\n            this.or = PropertyFactory.getProp(elem, data.or, 1, degToRads, this);\r\n            //sh Indicates it needs to be capped between -180 and 180\r\n            this.or.sh = true;\r\n        } else {\r\n            this.r = PropertyFactory.getProp(elem, data.r || {k: 0}, 0, degToRads, this);\r\n        }\r\n        if(data.sk){\r\n            this.sk = PropertyFactory.getProp(elem, data.sk, 0, degToRads, this);\r\n            this.sa = PropertyFactory.getProp(elem, data.sa, 0, degToRads, this);\r\n        }\r\n        this.a = PropertyFactory.getProp(elem,data.a || {k:[0,0,0]},1,0,this);\r\n        this.s = PropertyFactory.getProp(elem,data.s || {k:[100,100,100]},1,0.01,this);\r\n        // Opacity is not part of the transform properties, that's why it won't use this.dynamicProperties. That way transforms won't get updated if opacity changes.\r\n        if(data.o){\r\n            this.o = PropertyFactory.getProp(elem,data.o,0,0.01,elem);\r\n        } else {\r\n            this.o = {_mdf:false,v:1};\r\n        }\r\n        this._isDirty = true;\r\n        if(!this.dynamicProperties.length){\r\n            this.getValue(true);\r\n        }\r\n    }\r\n\r\n    TransformProperty.prototype = {\r\n        applyToMatrix: applyToMatrix,\r\n        getValue: processKeys,\r\n        precalculateMatrix: precalculateMatrix,\r\n        autoOrient: autoOrient\r\n    }\r\n\r\n    extendPrototype([DynamicPropertyContainer], TransformProperty);\r\n    TransformProperty.prototype.addDynamicProperty = addDynamicProperty;\r\n    TransformProperty.prototype._addDynamicProperty = DynamicPropertyContainer.prototype.addDynamicProperty;\r\n\r\n    function getTransformProperty(elem,data,container){\r\n        return new TransformProperty(elem,data,container);\r\n    }\r\n\r\n    return {\r\n        getTransformProperty: getTransformProperty\r\n    };\r\n\r\n}());\r\nfunction ShapePath(){\r\n\tthis.c = false;\r\n\tthis._length = 0;\r\n\tthis._maxLength = 8;\r\n\tthis.v = createSizedArray(this._maxLength);\r\n\tthis.o = createSizedArray(this._maxLength);\r\n\tthis.i = createSizedArray(this._maxLength);\r\n}\r\n\r\nShapePath.prototype.setPathData = function(closed, len) {\r\n\tthis.c = closed;\r\n\tthis.setLength(len);\r\n\tvar i = 0;\r\n\twhile(i < len){\r\n\t\tthis.v[i] = point_pool.newElement();\r\n\t\tthis.o[i] = point_pool.newElement();\r\n\t\tthis.i[i] = point_pool.newElement();\r\n\t\ti += 1;\r\n\t}\r\n};\r\n\r\nShapePath.prototype.setLength = function(len) {\r\n\twhile(this._maxLength < len) {\r\n\t\tthis.doubleArrayLength();\r\n\t}\r\n\tthis._length = len;\r\n};\r\n\r\nShapePath.prototype.doubleArrayLength = function() {\r\n\tthis.v = this.v.concat(createSizedArray(this._maxLength));\r\n\tthis.i = this.i.concat(createSizedArray(this._maxLength));\r\n\tthis.o = this.o.concat(createSizedArray(this._maxLength));\r\n\tthis._maxLength *= 2;\r\n};\r\n\r\nShapePath.prototype.setXYAt = function(x, y, type, pos, replace) {\r\n\tvar arr;\r\n\tthis._length = Math.max(this._length, pos + 1);\r\n\tif(this._length >= this._maxLength) {\r\n\t\tthis.doubleArrayLength();\r\n\t}\r\n\tswitch(type){\r\n\t\tcase 'v':\r\n\t\t\tarr = this.v;\r\n\t\t\tbreak;\r\n\t\tcase 'i':\r\n\t\t\tarr = this.i;\r\n\t\t\tbreak;\r\n\t\tcase 'o':\r\n\t\t\tarr = this.o;\r\n\t\t\tbreak;\r\n\t}\r\n\tif(!arr[pos] || (arr[pos] && !replace)){\r\n\t\tarr[pos] = point_pool.newElement();\r\n\t}\r\n\tarr[pos][0] = x;\r\n\tarr[pos][1] = y;\r\n};\r\n\r\nShapePath.prototype.setTripleAt = function(vX,vY,oX,oY,iX,iY,pos, replace) {\r\n\tthis.setXYAt(vX,vY,'v',pos, replace);\r\n\tthis.setXYAt(oX,oY,'o',pos, replace);\r\n\tthis.setXYAt(iX,iY,'i',pos, replace);\r\n};\r\n\r\nShapePath.prototype.reverse = function() {\r\n\tvar newPath = new ShapePath();\r\n\tnewPath.setPathData(this.c, this._length);\r\n\tvar vertices = this.v, outPoints = this.o, inPoints = this.i;\r\n\tvar init = 0;\r\n\tif (this.c) {\r\n\t\tnewPath.setTripleAt(vertices[0][0], vertices[0][1], inPoints[0][0], inPoints[0][1], outPoints[0][0], outPoints[0][1], 0, false);\r\n        init = 1;\r\n    }\r\n    var cnt = this._length - 1;\r\n    var len = this._length;\r\n\r\n    var i;\r\n    for (i = init; i < len; i += 1) {\r\n    \tnewPath.setTripleAt(vertices[cnt][0], vertices[cnt][1], inPoints[cnt][0], inPoints[cnt][1], outPoints[cnt][0], outPoints[cnt][1], i, false);\r\n        cnt -= 1;\r\n    }\r\n    return newPath;\r\n};\r\nvar ShapePropertyFactory = (function(){\r\n\r\n    var initFrame = -999999;\r\n\r\n    function interpolateShape(frameNum, previousValue, caching) {\r\n        var iterationIndex = caching.lastIndex;\r\n        var keyPropS,keyPropE,isHold, j, k, jLen, kLen, perc, vertexValue;\r\n        var kf = this.keyframes;\r\n        if(frameNum < kf[0].t-this.offsetTime){\r\n            keyPropS = kf[0].s[0];\r\n            isHold = true;\r\n            iterationIndex = 0;\r\n        }else if(frameNum >= kf[kf.length - 1].t-this.offsetTime){\r\n            keyPropS = kf[kf.length - 1].s ? kf[kf.length - 1].s[0] : kf[kf.length - 2].e[0];\r\n            /*if(kf[kf.length - 1].s){\r\n                keyPropS = kf[kf.length - 1].s[0];\r\n            }else{\r\n                keyPropS = kf[kf.length - 2].e[0];\r\n            }*/\r\n            isHold = true;\r\n        }else{\r\n            var i = iterationIndex;\r\n            var len = kf.length- 1,flag = true,keyData,nextKeyData;\r\n            while(flag){\r\n                keyData = kf[i];\r\n                nextKeyData = kf[i+1];\r\n                if((nextKeyData.t - this.offsetTime) > frameNum){\r\n                    break;\r\n                }\r\n                if(i < len - 1){\r\n                    i += 1;\r\n                }else{\r\n                    flag = false;\r\n                }\r\n            }\r\n            isHold = keyData.h === 1;\r\n            iterationIndex = i;\r\n            if(!isHold){\r\n                if(frameNum >= nextKeyData.t-this.offsetTime){\r\n                    perc = 1;\r\n                }else if(frameNum < keyData.t-this.offsetTime){\r\n                    perc = 0;\r\n                }else{\r\n                    var fnc;\r\n                    if(keyData.__fnct){\r\n                        fnc = keyData.__fnct;\r\n                    }else{\r\n                        fnc = BezierFactory.getBezierEasing(keyData.o.x,keyData.o.y,keyData.i.x,keyData.i.y).get;\r\n                        keyData.__fnct = fnc;\r\n                    }\r\n                    perc = fnc((frameNum-(keyData.t-this.offsetTime))/((nextKeyData.t-this.offsetTime)-(keyData.t-this.offsetTime)));\r\n                }\r\n                keyPropE = nextKeyData.s ? nextKeyData.s[0] : keyData.e[0];\r\n            }\r\n            keyPropS = keyData.s[0];\r\n        }\r\n        jLen = previousValue._length;\r\n        kLen = keyPropS.i[0].length;\r\n        caching.lastIndex = iterationIndex;\r\n\r\n        for(j=0;j<jLen;j+=1){\r\n            for(k=0;k<kLen;k+=1){\r\n                vertexValue = isHold ? keyPropS.i[j][k] :  keyPropS.i[j][k]+(keyPropE.i[j][k]-keyPropS.i[j][k])*perc;\r\n                previousValue.i[j][k] = vertexValue;\r\n                vertexValue = isHold ? keyPropS.o[j][k] :  keyPropS.o[j][k]+(keyPropE.o[j][k]-keyPropS.o[j][k])*perc;\r\n                previousValue.o[j][k] = vertexValue;\r\n                vertexValue = isHold ? keyPropS.v[j][k] :  keyPropS.v[j][k]+(keyPropE.v[j][k]-keyPropS.v[j][k])*perc;\r\n                previousValue.v[j][k] = vertexValue;\r\n            }\r\n        }\r\n    }\r\n\r\n    function interpolateShapeCurrentTime(){\r\n        var frameNum = this.comp.renderedFrame - this.offsetTime;\r\n        var initTime = this.keyframes[0].t - this.offsetTime;\r\n        var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;\r\n        var lastFrame = this._caching.lastFrame;\r\n        if(!(lastFrame !== initFrame && ((lastFrame < initTime && frameNum < initTime) || (lastFrame > endTime && frameNum > endTime)))){\r\n            ////\r\n            this._caching.lastIndex = lastFrame < frameNum ? this._caching.lastIndex : 0;\r\n            this.interpolateShape(frameNum, this.pv, this._caching);\r\n            ////\r\n        }\r\n        this._caching.lastFrame = frameNum;\r\n        return this.pv;\r\n    }\r\n\r\n    function resetShape(){\r\n        this.paths = this.localShapeCollection;\r\n    }\r\n\r\n    function shapesEqual(shape1, shape2) {\r\n        if(shape1._length !== shape2._length || shape1.c !== shape2.c){\r\n            return false;\r\n        }\r\n        var i, len = shape1._length;\r\n        for(i = 0; i < len; i += 1) {\r\n            if(shape1.v[i][0] !== shape2.v[i][0] \r\n            || shape1.v[i][1] !== shape2.v[i][1] \r\n            || shape1.o[i][0] !== shape2.o[i][0] \r\n            || shape1.o[i][1] !== shape2.o[i][1] \r\n            || shape1.i[i][0] !== shape2.i[i][0] \r\n            || shape1.i[i][1] !== shape2.i[i][1]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function setVValue(newPath) {\r\n        if(!shapesEqual(this.v, newPath)) {\r\n            this.v = shape_pool.clone(newPath);\r\n            this.localShapeCollection.releaseShapes();\r\n            this.localShapeCollection.addShape(this.v);\r\n            this._mdf = true;\r\n            this.paths = this.localShapeCollection;\r\n        }\r\n    }\r\n\r\n    function processEffectsSequence() {\r\n        if (this.elem.globalData.frameId === this.frameId) {\r\n            return;\r\n        } else if (!this.effectsSequence.length) {\r\n            this._mdf = false;\r\n            return;\r\n        }\r\n        if (this.lock) {\r\n            this.setVValue(this.pv);\r\n            return;\r\n        }\r\n        this.lock = true;\r\n        this._mdf = false;\r\n        var finalValue = this.kf ? this.pv : this.data.ks ? this.data.ks.k : this.data.pt.k;\r\n        var i, len = this.effectsSequence.length;\r\n        for(i = 0; i < len; i += 1) {\r\n            finalValue = this.effectsSequence[i](finalValue);\r\n        }\r\n        this.setVValue(finalValue);\r\n        this.lock = false;\r\n        this.frameId = this.elem.globalData.frameId;\r\n    };\r\n\r\n    function ShapeProperty(elem, data, type){\r\n        this.propType = 'shape';\r\n        this.comp = elem.comp;\r\n        this.container = elem;\r\n        this.elem = elem;\r\n        this.data = data;\r\n        this.k = false;\r\n        this.kf = false;\r\n        this._mdf = false;\r\n        var pathData = type === 3 ? data.pt.k : data.ks.k;\r\n        this.v = shape_pool.clone(pathData);\r\n        this.pv = shape_pool.clone(this.v);\r\n        this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n        this.paths = this.localShapeCollection;\r\n        this.paths.addShape(this.v);\r\n        this.reset = resetShape;\r\n        this.effectsSequence = [];\r\n    }\r\n\r\n    function addEffect(effectFunction) {\r\n        this.effectsSequence.push(effectFunction);\r\n        this.container.addDynamicProperty(this);\r\n    }\r\n\r\n    ShapeProperty.prototype.interpolateShape = interpolateShape;\r\n    ShapeProperty.prototype.getValue = processEffectsSequence;\r\n    ShapeProperty.prototype.setVValue = setVValue;\r\n    ShapeProperty.prototype.addEffect = addEffect;\r\n\r\n    function KeyframedShapeProperty(elem,data,type){\r\n        this.propType = 'shape';\r\n        this.comp = elem.comp;\r\n        this.elem = elem;\r\n        this.container = elem;\r\n        this.offsetTime = elem.data.st;\r\n        this.keyframes = type === 3 ? data.pt.k : data.ks.k;\r\n        this.k = true;\r\n        this.kf = true;\r\n        var i, len = this.keyframes[0].s[0].i.length;\r\n        var jLen = this.keyframes[0].s[0].i[0].length;\r\n        this.v = shape_pool.newElement();\r\n        this.v.setPathData(this.keyframes[0].s[0].c, len);\r\n        this.pv = shape_pool.clone(this.v);\r\n        this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n        this.paths = this.localShapeCollection;\r\n        this.paths.addShape(this.v);\r\n        this.lastFrame = initFrame;\r\n        this.reset = resetShape;\r\n        this._caching = {lastFrame: initFrame, lastIndex: 0};\r\n        this.effectsSequence = [interpolateShapeCurrentTime.bind(this)];\r\n    }\r\n    KeyframedShapeProperty.prototype.getValue = processEffectsSequence;\r\n    KeyframedShapeProperty.prototype.interpolateShape = interpolateShape;\r\n    KeyframedShapeProperty.prototype.setVValue = setVValue;\r\n    KeyframedShapeProperty.prototype.addEffect = addEffect;\r\n\r\n    var EllShapeProperty = (function(){\r\n\r\n        var cPoint = roundCorner;\r\n\r\n        function EllShapeProperty(elem,data) {\r\n            /*this.v = {\r\n                v: createSizedArray(4),\r\n                i: createSizedArray(4),\r\n                o: createSizedArray(4),\r\n                c: true\r\n            };*/\r\n            this.v = shape_pool.newElement();\r\n            this.v.setPathData(true, 4);\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.paths = this.localShapeCollection;\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.d = data.d;\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.frameId = -1;\r\n            this.initDynamicPropertyContainer(elem);\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this);\r\n            this.s = PropertyFactory.getProp(elem,data.s,1,0,this);\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.k = false;\r\n                this.convertEllToPath();\r\n            }\r\n        };\r\n\r\n        EllShapeProperty.prototype = {\r\n            reset: resetShape,\r\n            getValue: function (){\r\n                if(this.elem.globalData.frameId === this.frameId){\r\n                    return;\r\n                }\r\n                this.frameId = this.elem.globalData.frameId;\r\n                this.iterateDynamicProperties();\r\n\r\n                if(this._mdf){\r\n                    this.convertEllToPath();\r\n                }\r\n            },\r\n            convertEllToPath: function() {\r\n                var p0 = this.p.v[0], p1 = this.p.v[1], s0 = this.s.v[0]/2, s1 = this.s.v[1]/2;\r\n                var _cw = this.d !== 3;\r\n                var _v = this.v;\r\n                _v.v[0][0] = p0;\r\n                _v.v[0][1] = p1 - s1;\r\n                _v.v[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n                _v.v[1][1] = p1;\r\n                _v.v[2][0] = p0;\r\n                _v.v[2][1] = p1 + s1;\r\n                _v.v[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n                _v.v[3][1] = p1;\r\n                _v.i[0][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\r\n                _v.i[0][1] = p1 - s1;\r\n                _v.i[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n                _v.i[1][1] = p1 - s1 * cPoint;\r\n                _v.i[2][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\r\n                _v.i[2][1] = p1 + s1;\r\n                _v.i[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n                _v.i[3][1] = p1 + s1 * cPoint;\r\n                _v.o[0][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\r\n                _v.o[0][1] = p1 - s1;\r\n                _v.o[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n                _v.o[1][1] = p1 + s1 * cPoint;\r\n                _v.o[2][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\r\n                _v.o[2][1] = p1 + s1;\r\n                _v.o[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n                _v.o[3][1] = p1 - s1 * cPoint;\r\n            }\r\n        }\r\n\r\n        extendPrototype([DynamicPropertyContainer], EllShapeProperty);\r\n\r\n        return EllShapeProperty;\r\n    }());\r\n\r\n    var StarShapeProperty = (function() {\r\n\r\n        function StarShapeProperty(elem,data) {\r\n            this.v = shape_pool.newElement();\r\n            this.v.setPathData(true, 0);\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.data = data;\r\n            this.frameId = -1;\r\n            this.d = data.d;\r\n            this.initDynamicPropertyContainer(elem);\r\n            if(data.sy === 1){\r\n                this.ir = PropertyFactory.getProp(elem,data.ir,0,0,this);\r\n                this.is = PropertyFactory.getProp(elem,data.is,0,0.01,this);\r\n                this.convertToPath = this.convertStarToPath;\r\n            } else {\r\n                this.convertToPath = this.convertPolygonToPath;\r\n            }\r\n            this.pt = PropertyFactory.getProp(elem,data.pt,0,0,this);\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this);\r\n            this.r = PropertyFactory.getProp(elem,data.r,0,degToRads,this);\r\n            this.or = PropertyFactory.getProp(elem,data.or,0,0,this);\r\n            this.os = PropertyFactory.getProp(elem,data.os,0,0.01,this);\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.paths = this.localShapeCollection;\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.k = false;\r\n                this.convertToPath();\r\n            }\r\n        };\r\n\r\n        StarShapeProperty.prototype = {\r\n            reset: resetShape,\r\n            getValue: function() {\r\n                if(this.elem.globalData.frameId === this.frameId){\r\n                    return;\r\n                }\r\n                this.frameId = this.elem.globalData.frameId;\r\n                this.iterateDynamicProperties();\r\n                if(this._mdf){\r\n                    this.convertToPath();\r\n                }\r\n            },\r\n            convertStarToPath: function() {\r\n                var numPts = Math.floor(this.pt.v)*2;\r\n                var angle = Math.PI*2/numPts;\r\n                /*this.v.v.length = numPts;\r\n                this.v.i.length = numPts;\r\n                this.v.o.length = numPts;*/\r\n                var longFlag = true;\r\n                var longRad = this.or.v;\r\n                var shortRad = this.ir.v;\r\n                var longRound = this.os.v;\r\n                var shortRound = this.is.v;\r\n                var longPerimSegment = 2*Math.PI*longRad/(numPts*2);\r\n                var shortPerimSegment = 2*Math.PI*shortRad/(numPts*2);\r\n                var i, rad,roundness,perimSegment, currentAng = -Math.PI/ 2;\r\n                currentAng += this.r.v;\r\n                var dir = this.data.d === 3 ? -1 : 1;\r\n                this.v._length = 0;\r\n                for(i=0;i<numPts;i+=1){\r\n                    rad = longFlag ? longRad : shortRad;\r\n                    roundness = longFlag ? longRound : shortRound;\r\n                    perimSegment = longFlag ? longPerimSegment : shortPerimSegment;\r\n                    var x = rad * Math.cos(currentAng);\r\n                    var y = rad * Math.sin(currentAng);\r\n                    var ox = x === 0 && y === 0 ? 0 : y/Math.sqrt(x*x + y*y);\r\n                    var oy = x === 0 && y === 0 ? 0 : -x/Math.sqrt(x*x + y*y);\r\n                    x +=  + this.p.v[0];\r\n                    y +=  + this.p.v[1];\r\n                    this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir, i, true);\r\n\r\n                    /*this.v.v[i] = [x,y];\r\n                    this.v.i[i] = [x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir];\r\n                    this.v.o[i] = [x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir];\r\n                    this.v._length = numPts;*/\r\n                    longFlag = !longFlag;\r\n                    currentAng += angle*dir;\r\n                }\r\n            },\r\n            convertPolygonToPath: function() {\r\n                var numPts = Math.floor(this.pt.v);\r\n                var angle = Math.PI*2/numPts;\r\n                var rad = this.or.v;\r\n                var roundness = this.os.v;\r\n                var perimSegment = 2*Math.PI*rad/(numPts*4);\r\n                var i, currentAng = -Math.PI/ 2;\r\n                var dir = this.data.d === 3 ? -1 : 1;\r\n                currentAng += this.r.v;\r\n                this.v._length = 0;\r\n                for(i=0;i<numPts;i+=1){\r\n                    var x = rad * Math.cos(currentAng);\r\n                    var y = rad * Math.sin(currentAng);\r\n                    var ox = x === 0 && y === 0 ? 0 : y/Math.sqrt(x*x + y*y);\r\n                    var oy = x === 0 && y === 0 ? 0 : -x/Math.sqrt(x*x + y*y);\r\n                    x +=  + this.p.v[0];\r\n                    y +=  + this.p.v[1];\r\n                    this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir, i, true);\r\n                    currentAng += angle*dir;\r\n                }\r\n                this.paths.length = 0;\r\n                this.paths[0] = this.v;\r\n            }\r\n\r\n        }\r\n        extendPrototype([DynamicPropertyContainer], StarShapeProperty);\r\n\r\n        return StarShapeProperty;\r\n    }());\r\n\r\n    var RectShapeProperty = (function() {\r\n\r\n         function RectShapeProperty(elem,data) {\r\n            this.v = shape_pool.newElement();\r\n            this.v.c = true;\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.paths = this.localShapeCollection;\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.frameId = -1;\r\n            this.d = data.d;\r\n            this.initDynamicPropertyContainer(elem);\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this);\r\n            this.s = PropertyFactory.getProp(elem,data.s,1,0,this);\r\n            this.r = PropertyFactory.getProp(elem,data.r,0,0,this);\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.k = false;\r\n                this.convertRectToPath();\r\n            }\r\n        };\r\n\r\n        RectShapeProperty.prototype = {\r\n            convertRectToPath: function (){\r\n                var p0 = this.p.v[0], p1 = this.p.v[1], v0 = this.s.v[0]/2, v1 = this.s.v[1]/2;\r\n                var round = bm_min(v0,v1,this.r.v);\r\n                var cPoint = round*(1-roundCorner);\r\n                this.v._length = 0;\r\n\r\n                if(this.d === 2 || this.d === 1) {\r\n                    this.v.setTripleAt(p0+v0, p1-v1+round,p0+v0, p1-v1+round,p0+v0,p1-v1+cPoint,0, true);\r\n                    this.v.setTripleAt(p0+v0, p1+v1-round,p0+v0, p1+v1-cPoint,p0+v0, p1+v1-round,1, true);\r\n                    if(round!== 0){\r\n                        this.v.setTripleAt(p0+v0-round, p1+v1,p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,2, true);\r\n                        this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,p0-v0+round,p1+v1,3, true);\r\n                        this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,4, true);\r\n                        this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,p0-v0,p1-v1+round,5, true);\r\n                        this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,6, true);\r\n                        this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,p0+v0-round,p1-v1,7, true);\r\n                    } else {\r\n                        this.v.setTripleAt(p0-v0,p1+v1,p0-v0+cPoint,p1+v1,p0-v0,p1+v1,2);\r\n                        this.v.setTripleAt(p0-v0,p1-v1,p0-v0,p1-v1+cPoint,p0-v0,p1-v1,3);\r\n                    }\r\n                }else{\r\n                    this.v.setTripleAt(p0+v0,p1-v1+round,p0+v0,p1-v1+cPoint,p0+v0,p1-v1+round,0, true);\r\n                    if(round!== 0){\r\n                        this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,1, true);\r\n                        this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,p0-v0+round,p1-v1,2, true);\r\n                        this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,3, true);\r\n                        this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,p0-v0,p1+v1-round,4, true);\r\n                        this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,5, true);\r\n                        this.v.setTripleAt(p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,p0+v0-round,p1+v1,6, true);\r\n                        this.v.setTripleAt(p0+v0,p1+v1-round,p0+v0,p1+v1-round,p0+v0,p1+v1-cPoint,7, true);\r\n                    } else {\r\n                        this.v.setTripleAt(p0-v0,p1-v1,p0-v0+cPoint,p1-v1,p0-v0,p1-v1,1, true);\r\n                        this.v.setTripleAt(p0-v0,p1+v1,p0-v0,p1+v1-cPoint,p0-v0,p1+v1,2, true);\r\n                        this.v.setTripleAt(p0+v0,p1+v1,p0+v0-cPoint,p1+v1,p0+v0,p1+v1,3, true);\r\n\r\n                    }\r\n                }\r\n            },\r\n            getValue: function(frameNum){\r\n                if(this.elem.globalData.frameId === this.frameId){\r\n                    return;\r\n                }\r\n                this.frameId = this.elem.globalData.frameId;\r\n                this.iterateDynamicProperties();\r\n                if(this._mdf){\r\n                    this.convertRectToPath();\r\n                }\r\n\r\n            },\r\n            reset: resetShape\r\n        }\r\n        extendPrototype([DynamicPropertyContainer], RectShapeProperty);\r\n\r\n        return RectShapeProperty;\r\n    }());\r\n\r\n    function getShapeProp(elem,data,type){\r\n        var prop;\r\n        if(type === 3 || type === 4){\r\n            var dataProp = type === 3 ? data.pt : data.ks;\r\n            var keys = dataProp.k;\r\n            if(keys.length){\r\n                prop = new KeyframedShapeProperty(elem, data, type);\r\n            }else{\r\n                prop = new ShapeProperty(elem, data, type);\r\n            }\r\n        }else if(type === 5){\r\n            prop = new RectShapeProperty(elem, data);\r\n        }else if(type === 6){\r\n            prop = new EllShapeProperty(elem, data);\r\n        }else if(type === 7){\r\n            prop = new StarShapeProperty(elem, data);\r\n        }\r\n        if(prop.k){\r\n            elem.addDynamicProperty(prop);\r\n        }\r\n        return prop;\r\n    }\r\n\r\n    function getConstructorFunction() {\r\n        return ShapeProperty;\r\n    }\r\n\r\n    function getKeyframedConstructorFunction() {\r\n        return KeyframedShapeProperty;\r\n    }\r\n\r\n    var ob = {};\r\n    ob.getShapeProp = getShapeProp;\r\n    ob.getConstructorFunction = getConstructorFunction;\r\n    ob.getKeyframedConstructorFunction = getKeyframedConstructorFunction;\r\n    return ob;\r\n}());\r\nvar ShapeModifiers = (function(){\r\n    var ob = {};\r\n    var modifiers = {};\r\n    ob.registerModifier = registerModifier;\r\n    ob.getModifier = getModifier;\r\n\r\n    function registerModifier(nm,factory){\r\n        if(!modifiers[nm]){\r\n            modifiers[nm] = factory;\r\n        }\r\n    }\r\n\r\n    function getModifier(nm,elem, data){\r\n        return new modifiers[nm](elem, data);\r\n    }\r\n\r\n    return ob;\r\n}());\r\n\r\nfunction ShapeModifier(){}\r\nShapeModifier.prototype.initModifierProperties = function(){};\r\nShapeModifier.prototype.addShapeToModifier = function(){};\r\nShapeModifier.prototype.addShape = function(data){\r\n    if (!this.closed) {\r\n        // Adding shape to dynamic properties. It covers the case where a shape has no effects applied, to reset it's _mdf state on every tick.\r\n        data.sh.container.addDynamicProperty(data.sh);\r\n        var shapeData = {shape:data.sh, data: data, localShapeCollection:shapeCollection_pool.newShapeCollection()};\r\n        this.shapes.push(shapeData);\r\n        this.addShapeToModifier(shapeData);\r\n        if (this._isAnimated) {\r\n            data.setAsAnimated();\r\n        }\r\n    }\r\n};\r\nShapeModifier.prototype.init = function(elem,data){\r\n    this.shapes = [];\r\n    this.elem = elem;\r\n    this.initDynamicPropertyContainer(elem);\r\n    this.initModifierProperties(elem,data);\r\n    this.frameId = initialDefaultFrame;\r\n    this.closed = false;\r\n    this.k = false;\r\n    if(this.dynamicProperties.length){\r\n        this.k = true;\r\n    }else{\r\n        this.getValue(true);\r\n    }\r\n};\r\nShapeModifier.prototype.processKeys = function(){\r\n    if(this.elem.globalData.frameId === this.frameId){\r\n        return;\r\n    }\r\n    this.frameId = this.elem.globalData.frameId;\r\n    this.iterateDynamicProperties();\r\n};\r\n\r\nextendPrototype([DynamicPropertyContainer], ShapeModifier);\r\nfunction TrimModifier(){\r\n}\r\nextendPrototype([ShapeModifier], TrimModifier);\r\nTrimModifier.prototype.initModifierProperties = function(elem, data) {\r\n    this.s = PropertyFactory.getProp(elem, data.s, 0, 0.01, this);\r\n    this.e = PropertyFactory.getProp(elem, data.e, 0, 0.01, this);\r\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0, this);\r\n    this.sValue = 0;\r\n    this.eValue = 0;\r\n    this.getValue = this.processKeys;\r\n    this.m = data.m;\r\n    this._isAnimated = !!this.s.effectsSequence.length || !!this.e.effectsSequence.length || !!this.o.effectsSequence.length;\r\n};\r\n\r\nTrimModifier.prototype.addShapeToModifier = function(shapeData){\r\n    shapeData.pathsData = [];\r\n};\r\n\r\nTrimModifier.prototype.calculateShapeEdges = function(s, e, shapeLength, addedLength, totalModifierLength) {\r\n    var segments = [];\r\n    if (e <= 1) {\r\n        segments.push({\r\n            s: s,\r\n            e: e\r\n        });\r\n    } else if (s >= 1) {\r\n        segments.push({\r\n            s: s - 1,\r\n            e: e - 1\r\n        });\r\n    } else {\r\n        segments.push({\r\n            s: s,\r\n            e: 1\r\n        });\r\n        segments.push({\r\n            s: 0,\r\n            e: e - 1\r\n        });\r\n    }\r\n    var shapeSegments = [];\r\n    var i, len = segments.length, segmentOb;\r\n    for (i = 0; i < len; i += 1) {\r\n        segmentOb = segments[i];\r\n        if (segmentOb.e * totalModifierLength < addedLength || segmentOb.s * totalModifierLength > addedLength + shapeLength) {\r\n            \r\n        } else {\r\n            var shapeS, shapeE;\r\n            if (segmentOb.s * totalModifierLength <= addedLength) {\r\n                shapeS = 0;\r\n            } else {\r\n                shapeS = (segmentOb.s * totalModifierLength - addedLength) / shapeLength;\r\n            }\r\n            if(segmentOb.e * totalModifierLength >= addedLength + shapeLength) {\r\n                shapeE = 1;\r\n            } else {\r\n                shapeE = ((segmentOb.e * totalModifierLength - addedLength) / shapeLength);\r\n            }\r\n            shapeSegments.push([shapeS, shapeE]);\r\n        }\r\n    }\r\n    if (!shapeSegments.length) {\r\n        shapeSegments.push([0, 0]);\r\n    }\r\n    return shapeSegments;\r\n};\r\n\r\nTrimModifier.prototype.releasePathsData = function(pathsData) {\r\n    var i, len = pathsData.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        segments_length_pool.release(pathsData[i]);\r\n    }\r\n    pathsData.length = 0;\r\n    return pathsData;\r\n};\r\n\r\nTrimModifier.prototype.processShapes = function(_isFirstFrame) {\r\n    var s, e;\r\n    if (this._mdf || _isFirstFrame) {\r\n        var o = (this.o.v % 360) / 360;\r\n        if (o < 0) {\r\n            o += 1;\r\n        }\r\n        s = (this.s.v > 1 ? 1 : this.s.v < 0 ? 0 : this.s.v) + o;\r\n        e = (this.e.v > 1 ? 1 : this.e.v < 0 ? 0 : this.e.v) + o;\r\n        if (s === e) {\r\n\r\n        }\r\n        if (s > e) {\r\n            var _s = s;\r\n            s = e;\r\n            e = _s;\r\n        }\r\n        s = Math.round(s * 10000) * 0.0001;\r\n        e = Math.round(e * 10000) * 0.0001;\r\n        this.sValue = s;\r\n        this.eValue = e;\r\n    } else {\r\n        s = this.sValue;\r\n        e = this.eValue;\r\n    }\r\n    var shapePaths;\r\n    var i, len = this.shapes.length, j, jLen;\r\n    var pathsData, pathData, totalShapeLength, totalModifierLength = 0;\r\n\r\n    if (e === s) {\r\n        for (i = 0; i < len; i += 1) {\r\n            this.shapes[i].localShapeCollection.releaseShapes();\r\n            this.shapes[i].shape._mdf = true;\r\n            this.shapes[i].shape.paths = this.shapes[i].localShapeCollection;\r\n        }\r\n    } else if (!((e === 1 && s === 0) || (e===0 && s === 1))){\r\n        var segments = [], shapeData, localShapeCollection;\r\n        for (i = 0; i < len; i += 1) {\r\n            shapeData = this.shapes[i];\r\n            // if shape hasn't changed and trim properties haven't changed, cached previous path can be used\r\n            if (!shapeData.shape._mdf && !this._mdf && !_isFirstFrame && this.m !== 2) {\r\n                shapeData.shape.paths = shapeData.localShapeCollection;\r\n            } else {\r\n                shapePaths = shapeData.shape.paths;\r\n                jLen = shapePaths._length;\r\n                totalShapeLength = 0;\r\n                if (!shapeData.shape._mdf && shapeData.pathsData.length) {\r\n                    totalShapeLength = shapeData.totalShapeLength;\r\n                } else {\r\n                    pathsData = this.releasePathsData(shapeData.pathsData);\r\n                    for (j = 0; j < jLen; j += 1) {\r\n                        pathData = bez.getSegmentsLength(shapePaths.shapes[j]);\r\n                        pathsData.push(pathData);\r\n                        totalShapeLength += pathData.totalLength;\r\n                    }\r\n                    shapeData.totalShapeLength = totalShapeLength;\r\n                    shapeData.pathsData = pathsData;\r\n                }\r\n\r\n                totalModifierLength += totalShapeLength;\r\n                shapeData.shape._mdf = true;\r\n            }\r\n        }\r\n        var shapeS = s, shapeE = e, addedLength = 0, edges;\r\n        for (i = len - 1; i >= 0; i -= 1) {\r\n            shapeData = this.shapes[i];\r\n            if (shapeData.shape._mdf) {\r\n                localShapeCollection = shapeData.localShapeCollection;\r\n                localShapeCollection.releaseShapes();\r\n                //if m === 2 means paths are trimmed individually so edges need to be found for this specific shape relative to whoel group\r\n                if (this.m === 2 && len > 1) {\r\n                    edges = this.calculateShapeEdges(s, e, shapeData.totalShapeLength, addedLength, totalModifierLength);\r\n                    addedLength += shapeData.totalShapeLength;\r\n                } else {\r\n                    edges = [[shapeS, shapeE]];\r\n                }\r\n                jLen = edges.length;\r\n                for (j = 0; j < jLen; j += 1) {\r\n                    shapeS = edges[j][0];\r\n                    shapeE = edges[j][1];\r\n                    segments.length = 0;\r\n                    if (shapeE <= 1) {\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * shapeS,\r\n                            e:shapeData.totalShapeLength * shapeE\r\n                        });\r\n                    } else if (shapeS >= 1) {\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * (shapeS - 1),\r\n                            e:shapeData.totalShapeLength * (shapeE - 1)\r\n                        });\r\n                    } else {\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * shapeS,\r\n                            e:shapeData.totalShapeLength\r\n                        });\r\n                        segments.push({\r\n                            s:0,\r\n                            e:shapeData.totalShapeLength * (shapeE - 1)\r\n                        });\r\n                    }\r\n                    var newShapesData = this.addShapes(shapeData,segments[0]);\r\n                    if (segments[0].s !== segments[0].e) {\r\n                        if (segments.length > 1) {\r\n                            var lastShapeInCollection = shapeData.shape.paths.shapes[shapeData.shape.paths._length - 1];\r\n                            if (lastShapeInCollection.c) {\r\n                                var lastShape = newShapesData.pop();\r\n                                this.addPaths(newShapesData, localShapeCollection);\r\n                                newShapesData = this.addShapes(shapeData, segments[1], lastShape);\r\n                            } else {\r\n                                this.addPaths(newShapesData, localShapeCollection);\r\n                                newShapesData = this.addShapes(shapeData, segments[1]);\r\n                            }\r\n                        } \r\n                        this.addPaths(newShapesData, localShapeCollection);\r\n                    }\r\n                    \r\n                }\r\n                shapeData.shape.paths = localShapeCollection;\r\n            }\r\n        }\r\n    } else if (this._mdf) {\r\n        for (i = 0; i < len; i += 1) {\r\n            //Releasign Trim Cached paths data when no trim applied in case shapes are modified inbetween.\r\n            //Don't remove this even if it's losing cached info.\r\n            this.shapes[i].pathsData.length = 0;\r\n            this.shapes[i].shape._mdf = true;\r\n        }\r\n    }\r\n};\r\n\r\nTrimModifier.prototype.addPaths = function(newPaths, localShapeCollection) {\r\n    var i, len = newPaths.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        localShapeCollection.addShape(newPaths[i]);\r\n    }\r\n};\r\n\r\nTrimModifier.prototype.addSegment = function(pt1, pt2, pt3, pt4, shapePath, pos, newShape) {\r\n    shapePath.setXYAt(pt2[0], pt2[1], 'o', pos);\r\n    shapePath.setXYAt(pt3[0], pt3[1], 'i', pos + 1);\r\n    if(newShape){\r\n        shapePath.setXYAt(pt1[0], pt1[1], 'v', pos);\r\n    }\r\n    shapePath.setXYAt(pt4[0], pt4[1], 'v', pos + 1);\r\n};\r\n\r\nTrimModifier.prototype.addSegmentFromArray = function(points, shapePath, pos, newShape) {\r\n    shapePath.setXYAt(points[1], points[5], 'o', pos);\r\n    shapePath.setXYAt(points[2], points[6], 'i', pos + 1);\r\n    if(newShape){\r\n        shapePath.setXYAt(points[0], points[4], 'v', pos);\r\n    }\r\n    shapePath.setXYAt(points[3], points[7], 'v', pos + 1);\r\n};\r\n\r\nTrimModifier.prototype.addShapes = function(shapeData, shapeSegment, shapePath) {\r\n    var pathsData = shapeData.pathsData;\r\n    var shapePaths = shapeData.shape.paths.shapes;\r\n    var i, len = shapeData.shape.paths._length, j, jLen;\r\n    var addedLength = 0;\r\n    var currentLengthData,segmentCount;\r\n    var lengths;\r\n    var segment;\r\n    var shapes = [];\r\n    var initPos;\r\n    var newShape = true;\r\n    if (!shapePath) {\r\n        shapePath = shape_pool.newElement();\r\n        segmentCount = 0;\r\n        initPos = 0;\r\n    } else {\r\n        segmentCount = shapePath._length;\r\n        initPos = shapePath._length;\r\n    }\r\n    shapes.push(shapePath);\r\n    for (i = 0; i < len; i += 1) {\r\n        lengths = pathsData[i].lengths;\r\n        shapePath.c = shapePaths[i].c;\r\n        jLen = shapePaths[i].c ? lengths.length : lengths.length + 1;\r\n        for (j = 1; j < jLen; j +=1) {\r\n            currentLengthData = lengths[j-1];\r\n            if (addedLength + currentLengthData.addedLength < shapeSegment.s) {\r\n                addedLength += currentLengthData.addedLength;\r\n                shapePath.c = false;\r\n            } else if(addedLength > shapeSegment.e) {\r\n                shapePath.c = false;\r\n                break;\r\n            } else {\r\n                if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + currentLengthData.addedLength) {\r\n                    this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[j], shapePaths[i].v[j], shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                } else {\r\n                    segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[j], shapePaths[i].o[j - 1], shapePaths[i].i[j], (shapeSegment.s - addedLength)/currentLengthData.addedLength,(shapeSegment.e - addedLength)/currentLengthData.addedLength, lengths[j-1]);\r\n                    this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);\r\n                    // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                    shapePath.c = false;\r\n                }\r\n                addedLength += currentLengthData.addedLength;\r\n                segmentCount += 1;\r\n            }\r\n        }\r\n        if (shapePaths[i].c && lengths.length) {\r\n            currentLengthData = lengths[j - 1];\r\n            if (addedLength <= shapeSegment.e) {\r\n                var segmentLength = lengths[j - 1].addedLength;\r\n                if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + segmentLength) {\r\n                    this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[0], shapePaths[i].v[0], shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                } else {\r\n                    segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[0], shapePaths[i].o[j - 1], shapePaths[i].i[0], (shapeSegment.s - addedLength) / segmentLength, (shapeSegment.e - addedLength) / segmentLength, lengths[j - 1]);\r\n                    this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);\r\n                    // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                    shapePath.c = false;\r\n                }\r\n            } else {\r\n                shapePath.c = false;\r\n            }\r\n            addedLength += currentLengthData.addedLength;\r\n            segmentCount += 1;\r\n        }\r\n        if (shapePath._length) {\r\n            shapePath.setXYAt(shapePath.v[initPos][0], shapePath.v[initPos][1], 'i', initPos);\r\n            shapePath.setXYAt(shapePath.v[shapePath._length - 1][0], shapePath.v[shapePath._length - 1][1],'o', shapePath._length - 1);\r\n        }\r\n        if (addedLength > shapeSegment.e) {\r\n            break;\r\n        }\r\n        if (i < len - 1) {\r\n            shapePath = shape_pool.newElement();\r\n            newShape = true;\r\n            shapes.push(shapePath);\r\n            segmentCount = 0;\r\n        }\r\n    }\r\n    return shapes;\r\n};\r\n\r\n\r\nShapeModifiers.registerModifier('tm', TrimModifier);\r\nfunction RoundCornersModifier(){}\r\nextendPrototype([ShapeModifier],RoundCornersModifier);\r\nRoundCornersModifier.prototype.initModifierProperties = function(elem,data){\r\n    this.getValue = this.processKeys;\r\n    this.rd = PropertyFactory.getProp(elem,data.r,0,null,this);\r\n    this._isAnimated = !!this.rd.effectsSequence.length;\r\n};\r\n\r\nRoundCornersModifier.prototype.processPath = function(path, round){\r\n    var cloned_path = shape_pool.newElement();\r\n    cloned_path.c = path.c;\r\n    var i, len = path._length;\r\n    var currentV,currentI,currentO,closerV, newV,newO,newI,distance,newPosPerc,index = 0;\r\n    var vX,vY,oX,oY,iX,iY;\r\n    for(i=0;i<len;i+=1){\r\n        currentV = path.v[i];\r\n        currentO = path.o[i];\r\n        currentI = path.i[i];\r\n        if(currentV[0]===currentO[0] && currentV[1]===currentO[1] && currentV[0]===currentI[0] && currentV[1]===currentI[1]){\r\n            if((i===0 || i === len - 1) && !path.c){\r\n                cloned_path.setTripleAt(currentV[0],currentV[1],currentO[0],currentO[1],currentI[0],currentI[1],index);\r\n                /*cloned_path.v[index] = currentV;\r\n                cloned_path.o[index] = currentO;\r\n                cloned_path.i[index] = currentI;*/\r\n                index += 1;\r\n            } else {\r\n                if(i===0){\r\n                    closerV = path.v[len-1];\r\n                } else {\r\n                    closerV = path.v[i-1];\r\n                }\r\n                distance = Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));\r\n                newPosPerc = distance ? Math.min(distance/2,round)/distance : 0;\r\n                vX = iX = currentV[0]+(closerV[0]-currentV[0])*newPosPerc;\r\n                vY = iY = currentV[1]-(currentV[1]-closerV[1])*newPosPerc;\r\n                oX = vX-(vX-currentV[0])*roundCorner;\r\n                oY = vY-(vY-currentV[1])*roundCorner;\r\n                cloned_path.setTripleAt(vX,vY,oX,oY,iX,iY,index);\r\n                index += 1;\r\n\r\n                if(i === len - 1){\r\n                    closerV = path.v[0];\r\n                } else {\r\n                    closerV = path.v[i+1];\r\n                }\r\n                distance = Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));\r\n                newPosPerc = distance ? Math.min(distance/2,round)/distance : 0;\r\n                vX = oX = currentV[0]+(closerV[0]-currentV[0])*newPosPerc;\r\n                vY = oY = currentV[1]+(closerV[1]-currentV[1])*newPosPerc;\r\n                iX = vX-(vX-currentV[0])*roundCorner;\r\n                iY = vY-(vY-currentV[1])*roundCorner;\r\n                cloned_path.setTripleAt(vX,vY,oX,oY,iX,iY,index);\r\n                index += 1;\r\n            }\r\n        } else {\r\n            cloned_path.setTripleAt(path.v[i][0],path.v[i][1],path.o[i][0],path.o[i][1],path.i[i][0],path.i[i][1],index);\r\n            index += 1;\r\n        }\r\n    }\r\n    return cloned_path;\r\n};\r\n\r\nRoundCornersModifier.prototype.processShapes = function(_isFirstFrame){\r\n    var shapePaths;\r\n    var i, len = this.shapes.length;\r\n    var j, jLen;\r\n    var rd = this.rd.v;\r\n\r\n    if(rd !== 0){\r\n        var shapeData, newPaths, localShapeCollection;\r\n        for(i=0;i<len;i+=1){\r\n            shapeData = this.shapes[i];\r\n            newPaths = shapeData.shape.paths;\r\n            localShapeCollection = shapeData.localShapeCollection;\r\n            if(!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)){\r\n                localShapeCollection.releaseShapes();\r\n                shapeData.shape._mdf = true;\r\n                shapePaths = shapeData.shape.paths.shapes;\r\n                jLen = shapeData.shape.paths._length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    localShapeCollection.addShape(this.processPath(shapePaths[j],rd));\r\n                }\r\n            }\r\n            shapeData.shape.paths = shapeData.localShapeCollection;\r\n        }\r\n\r\n    }\r\n    if(!this.dynamicProperties.length){\r\n        this._mdf = false;\r\n    }\r\n};\r\n\r\nShapeModifiers.registerModifier('rd',RoundCornersModifier);\r\nfunction RepeaterModifier(){}\r\nextendPrototype([ShapeModifier], RepeaterModifier);\r\n\r\nRepeaterModifier.prototype.initModifierProperties = function(elem,data){\r\n    this.getValue = this.processKeys;\r\n    this.c = PropertyFactory.getProp(elem,data.c,0,null,this);\r\n    this.o = PropertyFactory.getProp(elem,data.o,0,null,this);\r\n    this.tr = TransformPropertyFactory.getTransformProperty(elem,data.tr,this);\r\n    this.so = PropertyFactory.getProp(elem,data.tr.so,0,0.01,this);\r\n    this.eo = PropertyFactory.getProp(elem,data.tr.eo,0,0.01,this);\r\n    this.data = data;\r\n    if(!this.dynamicProperties.length){\r\n        this.getValue(true);\r\n    }\r\n    this._isAnimated = !!this.dynamicProperties.length;\r\n    this.pMatrix = new Matrix();\r\n    this.rMatrix = new Matrix();\r\n    this.sMatrix = new Matrix();\r\n    this.tMatrix = new Matrix();\r\n    this.matrix = new Matrix();\r\n};\r\n\r\nRepeaterModifier.prototype.applyTransforms = function(pMatrix, rMatrix, sMatrix, transform, perc, inv){\r\n    var dir = inv ? -1 : 1;\r\n    var scaleX = transform.s.v[0] + (1 - transform.s.v[0]) * (1 - perc);\r\n    var scaleY = transform.s.v[1] + (1 - transform.s.v[1]) * (1 - perc);\r\n    pMatrix.translate(transform.p.v[0] * dir * perc, transform.p.v[1] * dir * perc, transform.p.v[2]);\r\n    rMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\r\n    rMatrix.rotate(-transform.r.v * dir * perc);\r\n    rMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\r\n    sMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\r\n    sMatrix.scale(inv ? 1/scaleX : scaleX, inv ? 1/scaleY : scaleY);\r\n    sMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\r\n};\r\n\r\nRepeaterModifier.prototype.init = function(elem, arr, pos, elemsData) {\r\n    this.elem = elem;\r\n    this.arr = arr;\r\n    this.pos = pos;\r\n    this.elemsData = elemsData;\r\n    this._currentCopies = 0;\r\n    this._elements = [];\r\n    this._groups = [];\r\n    this.frameId = -1;\r\n    this.initDynamicPropertyContainer(elem);\r\n    this.initModifierProperties(elem,arr[pos]);\r\n    var cont = 0;\r\n    while(pos>0){\r\n        pos -= 1;\r\n        //this._elements.unshift(arr.splice(pos,1)[0]);\r\n        this._elements.unshift(arr[pos]);\r\n        cont += 1;\r\n    }\r\n    if(this.dynamicProperties.length){\r\n        this.k = true;\r\n    }else{\r\n        this.getValue(true);\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.resetElements = function(elements){\r\n    var i, len = elements.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        elements[i]._processed = false;\r\n        if(elements[i].ty === 'gr'){\r\n            this.resetElements(elements[i].it);\r\n        }\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.cloneElements = function(elements){\r\n    var i, len = elements.length;\r\n    var newElements = JSON.parse(JSON.stringify(elements));\r\n    this.resetElements(newElements);\r\n    return newElements;\r\n};\r\n\r\nRepeaterModifier.prototype.changeGroupRender = function(elements, renderFlag) {\r\n    var i, len = elements.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        elements[i]._render = renderFlag;\r\n        if(elements[i].ty === 'gr') {\r\n            this.changeGroupRender(elements[i].it, renderFlag);\r\n        }\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.processShapes = function(_isFirstFrame) {\r\n    var items, itemsTransform, i, dir, cont;\r\n    if(this._mdf || _isFirstFrame){\r\n        var copies = Math.ceil(this.c.v);\r\n        if(this._groups.length < copies){\r\n            while(this._groups.length < copies){\r\n                var group = {\r\n                    it:this.cloneElements(this._elements),\r\n                    ty:'gr'\r\n                };\r\n                group.it.push({\"a\":{\"a\":0,\"ix\":1,\"k\":[0,0]},\"nm\":\"Transform\",\"o\":{\"a\":0,\"ix\":7,\"k\":100},\"p\":{\"a\":0,\"ix\":2,\"k\":[0,0]},\"r\":{\"a\":1,\"ix\":6,\"k\":[{s:0,e:0,t:0},{s:0,e:0,t:1}]},\"s\":{\"a\":0,\"ix\":3,\"k\":[100,100]},\"sa\":{\"a\":0,\"ix\":5,\"k\":0},\"sk\":{\"a\":0,\"ix\":4,\"k\":0},\"ty\":\"tr\"});\r\n                \r\n                this.arr.splice(0,0,group);\r\n                this._groups.splice(0,0,group);\r\n                this._currentCopies += 1;\r\n            }\r\n            this.elem.reloadShapes();\r\n        }\r\n        cont = 0;\r\n        var renderFlag;\r\n        for(i = 0; i  <= this._groups.length - 1; i += 1){\r\n            renderFlag = cont < copies;\r\n            this._groups[i]._render = renderFlag;\r\n            this.changeGroupRender(this._groups[i].it, renderFlag);\r\n            cont += 1;\r\n        }\r\n        \r\n        this._currentCopies = copies;\r\n        ////\r\n\r\n        var offset = this.o.v;\r\n        var offsetModulo = offset%1;\r\n        var roundOffset = offset > 0 ? Math.floor(offset) : Math.ceil(offset);\r\n        var k;\r\n        var tMat = this.tr.v.props;\r\n        var pProps = this.pMatrix.props;\r\n        var rProps = this.rMatrix.props;\r\n        var sProps = this.sMatrix.props;\r\n        this.pMatrix.reset();\r\n        this.rMatrix.reset();\r\n        this.sMatrix.reset();\r\n        this.tMatrix.reset();\r\n        this.matrix.reset();\r\n        var iteration = 0;\r\n\r\n        if(offset > 0) {\r\n            while(iteration<roundOffset){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\r\n                iteration += 1;\r\n            }\r\n            if(offsetModulo){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, offsetModulo, false);\r\n                iteration += offsetModulo;\r\n            }\r\n        } else if(offset < 0) {\r\n            while(iteration>roundOffset){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, true);\r\n                iteration -= 1;\r\n            }\r\n            if(offsetModulo){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, - offsetModulo, true);\r\n                iteration -= offsetModulo;\r\n            }\r\n        }\r\n        i = this.data.m === 1 ? 0 : this._currentCopies - 1;\r\n        dir = this.data.m === 1 ? 1 : -1;\r\n        cont = this._currentCopies;\r\n        var j, jLen;\r\n        while(cont){\r\n            items = this.elemsData[i].it;\r\n            itemsTransform = items[items.length - 1].transform.mProps.v.props;\r\n            jLen = itemsTransform.length;\r\n            items[items.length - 1].transform.mProps._mdf = true;\r\n            items[items.length - 1].transform.op._mdf = true;\r\n            items[items.length - 1].transform.op.v = this.so.v + (this.eo.v - this.so.v) * (i / (this._currentCopies - 1));\r\n            if(iteration !== 0){\r\n                if((i !== 0 && dir === 1) || (i !== this._currentCopies - 1 && dir === -1)){\r\n                    this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\r\n                }\r\n                this.matrix.transform(rProps[0],rProps[1],rProps[2],rProps[3],rProps[4],rProps[5],rProps[6],rProps[7],rProps[8],rProps[9],rProps[10],rProps[11],rProps[12],rProps[13],rProps[14],rProps[15]);\r\n                this.matrix.transform(sProps[0],sProps[1],sProps[2],sProps[3],sProps[4],sProps[5],sProps[6],sProps[7],sProps[8],sProps[9],sProps[10],sProps[11],sProps[12],sProps[13],sProps[14],sProps[15]);\r\n                this.matrix.transform(pProps[0],pProps[1],pProps[2],pProps[3],pProps[4],pProps[5],pProps[6],pProps[7],pProps[8],pProps[9],pProps[10],pProps[11],pProps[12],pProps[13],pProps[14],pProps[15]);\r\n                \r\n                for(j=0;j<jLen;j+=1) {\r\n                    itemsTransform[j] = this.matrix.props[j];\r\n                }\r\n                this.matrix.reset();\r\n            } else {\r\n                this.matrix.reset();\r\n                for(j=0;j<jLen;j+=1) {\r\n                    itemsTransform[j] = this.matrix.props[j];\r\n                }\r\n            }\r\n            iteration += 1;\r\n            cont -= 1;\r\n            i += dir;\r\n        }\r\n    } else {\r\n        cont = this._currentCopies;\r\n        i = 0;\r\n        dir = 1;\r\n        while(cont){\r\n            items = this.elemsData[i].it;\r\n            itemsTransform = items[items.length - 1].transform.mProps.v.props;\r\n            items[items.length - 1].transform.mProps._mdf = false;\r\n            items[items.length - 1].transform.op._mdf = false;\r\n            cont -= 1;\r\n            i += dir;\r\n        }\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.addShape = function(){};\r\n\r\nShapeModifiers.registerModifier('rp',RepeaterModifier);\r\nfunction ShapeCollection(){\r\n\tthis._length = 0;\r\n\tthis._maxLength = 4;\r\n\tthis.shapes = createSizedArray(this._maxLength);\r\n}\r\n\r\nShapeCollection.prototype.addShape = function(shapeData){\r\n\tif(this._length === this._maxLength){\r\n\t\tthis.shapes = this.shapes.concat(createSizedArray(this._maxLength));\r\n\t\tthis._maxLength *= 2;\r\n\t}\r\n\tthis.shapes[this._length] = shapeData;\r\n\tthis._length += 1;\r\n};\r\n\r\nShapeCollection.prototype.releaseShapes = function(){\r\n\tvar i;\r\n\tfor(i = 0; i < this._length; i += 1) {\r\n\t\tshape_pool.release(this.shapes[i]);\r\n\t}\r\n\tthis._length = 0;\r\n};\r\nfunction DashProperty(elem, data, renderer, container) {\r\n    this.elem = elem;\r\n    this.frameId = -1;\r\n    this.dataProps = createSizedArray(data.length);\r\n    this.renderer = renderer;\r\n    this.k = false;\r\n    this.dashStr = '';\r\n    this.dashArray = createTypedArray('float32',  data.length ? data.length - 1 : 0);\r\n    this.dashoffset = createTypedArray('float32',  1);\r\n    this.initDynamicPropertyContainer(container);\r\n    var i, len = data.length || 0, prop;\r\n    for(i = 0; i < len; i += 1) {\r\n        prop = PropertyFactory.getProp(elem,data[i].v,0, 0, this);\r\n        this.k = prop.k || this.k;\r\n        this.dataProps[i] = {n:data[i].n,p:prop};\r\n    }\r\n    if(!this.k){\r\n        this.getValue(true);\r\n    }\r\n    this._isAnimated = this.k;\r\n}\r\n\r\nDashProperty.prototype.getValue = function(forceRender) {\r\n    if(this.elem.globalData.frameId === this.frameId && !forceRender){\r\n        return;\r\n    }\r\n    this.frameId = this.elem.globalData.frameId;\r\n    this.iterateDynamicProperties();\r\n    this._mdf = this._mdf || forceRender;\r\n    if (this._mdf) {\r\n        var i = 0, len = this.dataProps.length;\r\n        if(this.renderer === 'svg') {\r\n            this.dashStr = '';\r\n        }\r\n        for(i=0;i<len;i+=1){\r\n            if(this.dataProps[i].n != 'o'){\r\n                if(this.renderer === 'svg') {\r\n                    this.dashStr += ' ' + this.dataProps[i].p.v;\r\n                }else{\r\n                    this.dashArray[i] = this.dataProps[i].p.v;\r\n                }\r\n            }else{\r\n                this.dashoffset[0] = this.dataProps[i].p.v;\r\n            }\r\n        }\r\n    }\r\n};\r\nextendPrototype([DynamicPropertyContainer], DashProperty);\r\nfunction GradientProperty(elem,data,container){\r\n    this.data = data;\r\n    this.c = createTypedArray('uint8c', data.p*4);\r\n    var cLength = data.k.k[0].s ? (data.k.k[0].s.length - data.p*4) : data.k.k.length - data.p*4;\r\n    this.o = createTypedArray('float32', cLength);\r\n    this._cmdf = false;\r\n    this._omdf = false;\r\n    this._collapsable = this.checkCollapsable();\r\n    this._hasOpacity = cLength;\r\n    this.initDynamicPropertyContainer(container);\r\n    this.prop = PropertyFactory.getProp(elem,data.k,1,null,this);\r\n    this.k = this.prop.k;\r\n    this.getValue(true);\r\n}\r\n\r\nGradientProperty.prototype.comparePoints = function(values, points) {\r\n    var i = 0, len = this.o.length/2, diff;\r\n    while(i < len) {\r\n        diff = Math.abs(values[i*4] - values[points*4 + i*2]);\r\n        if(diff > 0.01){\r\n            return false;\r\n        }\r\n        i += 1;\r\n    }\r\n    return true;\r\n};\r\n\r\nGradientProperty.prototype.checkCollapsable = function() {\r\n    if (this.o.length/2 !== this.c.length/4) {\r\n        return false;\r\n    }\r\n    if (this.data.k.k[0].s) {\r\n        var i = 0, len = this.data.k.k.length;\r\n        while (i < len) {\r\n            if (!this.comparePoints(this.data.k.k[i].s, this.data.p)) {\r\n                return false;\r\n            }\r\n            i += 1;\r\n        }\r\n    } else if(!this.comparePoints(this.data.k.k, this.data.p)) {\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\n\r\nGradientProperty.prototype.getValue = function(forceRender){\r\n    this.prop.getValue();\r\n    this._mdf = false;\r\n    this._cmdf = false;\r\n    this._omdf = false;\r\n    if(this.prop._mdf || forceRender){\r\n        var i, len = this.data.p*4;\r\n        var mult, val;\r\n        for(i=0;i<len;i+=1){\r\n            mult = i%4 === 0 ? 100 : 255;\r\n            val = Math.round(this.prop.v[i]*mult);\r\n            if(this.c[i] !== val){\r\n                this.c[i] = val;\r\n                this._cmdf = !forceRender;\r\n            }\r\n        }\r\n        if(this.o.length){\r\n            len = this.prop.v.length;\r\n            for(i=this.data.p*4;i<len;i+=1){\r\n                mult = i%2 === 0 ? 100 : 1;\r\n                val = i%2 === 0 ?  Math.round(this.prop.v[i]*100):this.prop.v[i];\r\n                if(this.o[i-this.data.p*4] !== val){\r\n                    this.o[i-this.data.p*4] = val;\r\n                    this._omdf = !forceRender;\r\n                }\r\n            }\r\n        }\r\n        this._mdf = !forceRender;\r\n    }\r\n};\r\n\r\nextendPrototype([DynamicPropertyContainer], GradientProperty);\r\nvar buildShapeString = function(pathNodes, length, closed, mat) {\r\n\tif(length === 0) {\r\n            return '';\r\n        }\r\n        var _o = pathNodes.o;\r\n        var _i = pathNodes.i;\r\n        var _v = pathNodes.v;\r\n        var i, shapeString = \" M\" + mat.applyToPointStringified(_v[0][0], _v[0][1]);\r\n        for(i = 1; i < length; i += 1) {\r\n            shapeString += \" C\" + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + \" \" + mat.applyToPointStringified(_i[i][0], _i[i][1]) + \" \" + mat.applyToPointStringified(_v[i][0], _v[i][1]);\r\n        }\r\n        if (closed && length) {\r\n            shapeString += \" C\" + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + \" \" + mat.applyToPointStringified(_i[0][0], _i[0][1]) + \" \" + mat.applyToPointStringified(_v[0][0], _v[0][1]);\r\n            shapeString += 'z';\r\n        }\r\n        return shapeString;\r\n}\r\nvar ImagePreloader = (function(){\r\n\r\n    var proxyImage = (function(){\r\n        var canvas = createTag('canvas');\r\n        canvas.width = 1;\r\n        canvas.height = 1;\r\n        var ctx = canvas.getContext('2d');\r\n        ctx.fillStyle = 'rgba(0,0,0,0)';\r\n        ctx.fillRect(0, 0, 1, 1);\r\n        return canvas;\r\n    }())\r\n\r\n    function imageLoaded(){\r\n        this.loadedAssets += 1;\r\n        if(this.loadedAssets === this.totalImages){\r\n            if(this.imagesLoadedCb) {\r\n                this.imagesLoadedCb(null);\r\n            }\r\n        }\r\n    }\r\n\r\n    function getAssetsPath(assetData, assetsPath, original_path) {\r\n        var path = '';\r\n        if (assetData.e) {\r\n            path = assetData.p;\r\n        } else if(assetsPath) {\r\n            var imagePath = assetData.p;\r\n            if (imagePath.indexOf('images/') !== -1) {\r\n                imagePath = imagePath.split('/')[1];\r\n            }\r\n            path = assetsPath + imagePath;\r\n        } else {\r\n            path = original_path;\r\n            path += assetData.u ? assetData.u : '';\r\n            path += assetData.p;\r\n        }\r\n        return path;\r\n    }\r\n\r\n    function createImageData(assetData) {\r\n        var path = getAssetsPath(assetData, this.assetsPath, this.path);\r\n        var img = createTag('img');\r\n        img.crossOrigin = 'anonymous';\r\n        img.addEventListener('load', this._imageLoaded.bind(this), false);\r\n        img.addEventListener('error', function() {\r\n            ob.img = proxyImage;\r\n            this._imageLoaded();\r\n        }.bind(this), false);\r\n        img.src = path;\r\n        var ob = {\r\n            img: img,\r\n            assetData: assetData\r\n        }\r\n        return ob;\r\n    }\r\n\r\n    function loadAssets(assets, cb){\r\n        this.imagesLoadedCb = cb;\r\n        var i, len = assets.length;\r\n        for (i = 0; i < len; i += 1) {\r\n            if(!assets[i].layers){\r\n                this.totalImages += 1;\r\n                this.images.push(this._createImageData(assets[i]));\r\n            }\r\n        }\r\n    }\r\n\r\n    function setPath(path){\r\n        this.path = path || '';\r\n    }\r\n\r\n    function setAssetsPath(path){\r\n        this.assetsPath = path || '';\r\n    }\r\n\r\n    function getImage(assetData) {\r\n        var i = 0, len = this.images.length;\r\n        while (i < len) {\r\n            if (this.images[i].assetData === assetData) {\r\n                return this.images[i].img;\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    function destroy() {\r\n        this.imagesLoadedCb = null;\r\n        this.images.length = 0;\r\n    }\r\n\r\n    function loaded() {\r\n        return this.totalImages === this.loadedAssets;\r\n    }\r\n\r\n    return function ImagePreloader(){\r\n        this.loadAssets = loadAssets;\r\n        this.setAssetsPath = setAssetsPath;\r\n        this.setPath = setPath;\r\n        this.loaded = loaded;\r\n        this.destroy = destroy;\r\n        this.getImage = getImage;\r\n        this._createImageData = createImageData;\r\n        this._imageLoaded = imageLoaded;\r\n        this.assetsPath = '';\r\n        this.path = '';\r\n        this.totalImages = 0;\r\n        this.loadedAssets = 0;\r\n        this.imagesLoadedCb = null;\r\n        this.images = [];\r\n    };\r\n}());\r\nvar featureSupport = (function(){\r\n\tvar ob = {\r\n\t\tmaskType: true\r\n\t};\r\n\tif (/MSIE 10/i.test(navigator.userAgent) || /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge\\/\\d./i.test(navigator.userAgent)) {\r\n\t   ob.maskType = false;\r\n\t}\r\n\treturn ob;\r\n}());\r\nvar filtersFactory = (function(){\r\n\tvar ob = {};\r\n\tob.createFilter = createFilter;\r\n\tob.createAlphaToLuminanceFilter = createAlphaToLuminanceFilter;\r\n\r\n\tfunction createFilter(filId){\r\n        \tvar fil = createNS('filter');\r\n        \tfil.setAttribute('id',filId);\r\n                fil.setAttribute('filterUnits','objectBoundingBox');\r\n                fil.setAttribute('x','0%');\r\n                fil.setAttribute('y','0%');\r\n                fil.setAttribute('width','100%');\r\n                fil.setAttribute('height','100%');\r\n                return fil;\r\n\t}\r\n\r\n\tfunction createAlphaToLuminanceFilter(){\r\n                var feColorMatrix = createNS('feColorMatrix');\r\n                feColorMatrix.setAttribute('type','matrix');\r\n                feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n                feColorMatrix.setAttribute('values','0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1');\r\n                return feColorMatrix;\r\n\t}\r\n\r\n\treturn ob;\r\n}());\r\nvar assetLoader = (function(){\r\n\r\n\tfunction formatResponse(xhr) {\r\n\t\tif(xhr.response && typeof xhr.response === 'object') {\r\n\t\t\treturn xhr.response;\r\n\t\t} else if(xhr.response && typeof xhr.response === 'string') {\r\n\t\t\treturn JSON.parse(xhr.response);\r\n\t\t} else if(xhr.responseText) {\r\n\t\t\treturn JSON.parse(xhr.responseText);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction loadAsset(path, callback, errorCallback) {\r\n\t\tvar response;\r\n\t\tvar xhr = new XMLHttpRequest();\r\n\t\txhr.open('GET', path, true);\r\n\t\t// set responseType after calling open or IE will break.\r\n\t\ttry {\r\n\t\t    // This crashes on Android WebView prior to KitKat\r\n\t\t    xhr.responseType = \"json\";\r\n\t\t} catch (err) {}\r\n\t    xhr.send();\r\n\t    xhr.onreadystatechange = function () {\r\n\t        if (xhr.readyState == 4) {\r\n\t            if(xhr.status == 200){\r\n\t            \tresponse = formatResponse(xhr);\r\n\t            \tcallback(response);\r\n\t            }else{\r\n\t                try{\r\n\t            \t\tresponse = formatResponse(xhr);\r\n\t            \t\tcallback(response);\r\n\t                }catch(err){\r\n\t                \tif(errorCallback) {\r\n\t                \t\terrorCallback(err);\r\n\t                \t}\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t}\r\n\treturn {\r\n\t\tload: loadAsset\r\n\t}\r\n}())\r\n\r\nfunction TextAnimatorProperty(textData, renderType, elem){\r\n    this._isFirstFrame = true;\r\n\tthis._hasMaskedPath = false;\r\n\tthis._frameId = -1;\r\n\tthis._textData = textData;\r\n\tthis._renderType = renderType;\r\n    this._elem = elem;\r\n\tthis._animatorsData = createSizedArray(this._textData.a.length);\r\n\tthis._pathData = {};\r\n\tthis._moreOptions = {\r\n\t\talignment: {}\r\n\t};\r\n\tthis.renderedLetters = [];\r\n    this.lettersChangedFlag = false;\r\n    this.initDynamicPropertyContainer(elem);\r\n\r\n}\r\n\r\nTextAnimatorProperty.prototype.searchProperties = function(){\r\n    var i, len = this._textData.a.length, animatorProps;\r\n    var getProp = PropertyFactory.getProp;\r\n    for(i=0;i<len;i+=1){\r\n        animatorProps = this._textData.a[i];\r\n        this._animatorsData[i] = new TextAnimatorDataProperty(this._elem, animatorProps, this);\r\n    }\r\n    if(this._textData.p && 'm' in this._textData.p){\r\n        this._pathData = {\r\n            f: getProp(this._elem,this._textData.p.f,0,0,this),\r\n            l: getProp(this._elem,this._textData.p.l,0,0,this),\r\n            r: this._textData.p.r,\r\n            m: this._elem.maskManager.getMaskProperty(this._textData.p.m)\r\n        };\r\n        this._hasMaskedPath = true;\r\n    } else {\r\n        this._hasMaskedPath = false;\r\n    }\r\n    this._moreOptions.alignment = getProp(this._elem,this._textData.m.a,1,0,this);\r\n};\r\n\r\nTextAnimatorProperty.prototype.getMeasures = function(documentData, lettersChangedFlag){\r\n    this.lettersChangedFlag = lettersChangedFlag;\r\n    if(!this._mdf && !this._isFirstFrame && !lettersChangedFlag && (!this._hasMaskedPath || !this._pathData.m._mdf)) {\r\n        return;\r\n    }\r\n    this._isFirstFrame = false;\r\n    var alignment = this._moreOptions.alignment.v;\r\n    var animators = this._animatorsData;\r\n    var textData = this._textData;\r\n    var matrixHelper = this.mHelper;\r\n    var renderType = this._renderType;\r\n    var renderedLettersCount = this.renderedLetters.length;\r\n    var data = this.data;\r\n    var xPos,yPos;\r\n    var i, len;\r\n    var letters = documentData.l, pathInfo, currentLength, currentPoint, segmentLength, flag, pointInd, segmentInd, prevPoint, points, segments, partialLength, totalLength, perc, tanAngle, mask;\r\n    if(this._hasMaskedPath) {\r\n        mask = this._pathData.m;\r\n        if(!this._pathData.n || this._pathData._mdf){\r\n            var paths = mask.v;\r\n            if(this._pathData.r){\r\n                paths = paths.reverse();\r\n            }\r\n            // TODO: release bezier data cached from previous pathInfo: this._pathData.pi\r\n            pathInfo = {\r\n                tLength: 0,\r\n                segments: []\r\n            };\r\n            len = paths._length - 1;\r\n            var bezierData;\r\n            totalLength = 0;\r\n            for (i = 0; i < len; i += 1) {\r\n                bezierData = bez.buildBezierData(paths.v[i]\r\n                    , paths.v[i + 1]\r\n                    , [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]]\r\n                    , [paths.i[i + 1][0] - paths.v[i + 1][0], paths.i[i + 1][1] - paths.v[i + 1][1]]);\r\n                pathInfo.tLength += bezierData.segmentLength;\r\n                pathInfo.segments.push(bezierData);\r\n                totalLength += bezierData.segmentLength;\r\n            }\r\n            i = len;\r\n            if (mask.v.c) {\r\n                bezierData = bez.buildBezierData(paths.v[i]\r\n                    , paths.v[0]\r\n                    , [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]]\r\n                    , [paths.i[0][0] - paths.v[0][0], paths.i[0][1] - paths.v[0][1]]);\r\n                pathInfo.tLength += bezierData.segmentLength;\r\n                pathInfo.segments.push(bezierData);\r\n                totalLength += bezierData.segmentLength;\r\n            }\r\n            this._pathData.pi = pathInfo;\r\n        }\r\n        pathInfo = this._pathData.pi;\r\n\r\n        currentLength = this._pathData.f.v;\r\n        segmentInd = 0;\r\n        pointInd = 1;\r\n        segmentLength = 0;\r\n        flag = true;\r\n        segments = pathInfo.segments;\r\n        if (currentLength < 0 && mask.v.c) {\r\n            if (pathInfo.tLength < Math.abs(currentLength)) {\r\n                currentLength = -Math.abs(currentLength) % pathInfo.tLength;\r\n            }\r\n            segmentInd = segments.length - 1;\r\n            points = segments[segmentInd].points;\r\n            pointInd = points.length - 1;\r\n            while (currentLength < 0) {\r\n                currentLength += points[pointInd].partialLength;\r\n                pointInd -= 1;\r\n                if (pointInd < 0) {\r\n                    segmentInd -= 1;\r\n                    points = segments[segmentInd].points;\r\n                    pointInd = points.length - 1;\r\n                }\r\n            }\r\n\r\n        }\r\n        points = segments[segmentInd].points;\r\n        prevPoint = points[pointInd - 1];\r\n        currentPoint = points[pointInd];\r\n        partialLength = currentPoint.partialLength;\r\n    }\r\n\r\n\r\n    len = letters.length;\r\n    xPos = 0;\r\n    yPos = 0;\r\n    var yOff = documentData.finalSize * 1.2 * 0.714;\r\n    var firstLine = true;\r\n    var animatorProps, animatorSelector;\r\n    var j, jLen;\r\n    var letterValue;\r\n\r\n    jLen = animators.length;\r\n    var lastLetter;\r\n\r\n    var mult, ind = -1, offf, xPathPos, yPathPos;\r\n    var initPathPos = currentLength,initSegmentInd = segmentInd, initPointInd = pointInd, currentLine = -1;\r\n    var elemOpacity;\r\n    var sc,sw,fc,k;\r\n    var lineLength = 0;\r\n    var letterSw, letterSc, letterFc, letterM = '', letterP = this.defaultPropsArray, letterO;\r\n\r\n    //\r\n    if(documentData.j === 2 || documentData.j === 1) {\r\n        var animatorJustifyOffset = 0;\r\n        var animatorFirstCharOffset = 0;\r\n        var justifyOffsetMult = documentData.j === 2 ? -0.5 : -1;\r\n        var lastIndex = 0;\r\n        var isNewLine = true;\r\n\r\n        for (i = 0; i < len; i += 1) {\r\n            if (letters[i].n) {\r\n                if(animatorJustifyOffset) {\r\n                    animatorJustifyOffset += animatorFirstCharOffset;\r\n                }\r\n                while (lastIndex < i) {\r\n                    letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;\r\n                    lastIndex += 1;\r\n                }\r\n                animatorJustifyOffset = 0;\r\n                isNewLine = true;\r\n            } else {\r\n                for (j = 0; j < jLen; j += 1) {\r\n                    animatorProps = animators[j].a;\r\n                    if (animatorProps.t.propType) {\r\n                        if (isNewLine && documentData.j === 2) {\r\n                            animatorFirstCharOffset += animatorProps.t.v * justifyOffsetMult;\r\n                        }\r\n                        animatorSelector = animators[j].s;\r\n                        mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\r\n                        if (mult.length) {\r\n                            animatorJustifyOffset += animatorProps.t.v*mult[0] * justifyOffsetMult;\r\n                        } else {\r\n                            animatorJustifyOffset += animatorProps.t.v*mult * justifyOffsetMult;\r\n                        }\r\n                    }\r\n                }\r\n                isNewLine = false;\r\n            }\r\n        }\r\n        if(animatorJustifyOffset) {\r\n            animatorJustifyOffset += animatorFirstCharOffset;\r\n        }\r\n        while(lastIndex < i) {\r\n            letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;\r\n            lastIndex += 1;\r\n        }\r\n    }\r\n    //\r\n\r\n    for( i = 0; i < len; i += 1) {\r\n\r\n        matrixHelper.reset();\r\n        elemOpacity = 1;\r\n        if(letters[i].n) {\r\n            xPos = 0;\r\n            yPos += documentData.yOffset;\r\n            yPos += firstLine ? 1 : 0;\r\n            currentLength = initPathPos ;\r\n            firstLine = false;\r\n            lineLength = 0;\r\n            if(this._hasMaskedPath) {\r\n                segmentInd = initSegmentInd;\r\n                pointInd = initPointInd;\r\n                points = segments[segmentInd].points;\r\n                prevPoint = points[pointInd - 1];\r\n                currentPoint = points[pointInd];\r\n                partialLength = currentPoint.partialLength;\r\n                segmentLength = 0;\r\n            }\r\n            letterO = letterSw = letterFc = letterM = '';\r\n            letterP = this.defaultPropsArray;\r\n        }else{\r\n            if(this._hasMaskedPath) {\r\n                if(currentLine !== letters[i].line){\r\n                    switch(documentData.j){\r\n                        case 1:\r\n                            currentLength += totalLength - documentData.lineWidths[letters[i].line];\r\n                            break;\r\n                        case 2:\r\n                            currentLength += (totalLength - documentData.lineWidths[letters[i].line])/2;\r\n                            break;\r\n                    }\r\n                    currentLine = letters[i].line;\r\n                }\r\n                if (ind !== letters[i].ind) {\r\n                    if (letters[ind]) {\r\n                        currentLength += letters[ind].extra;\r\n                    }\r\n                    currentLength += letters[i].an / 2;\r\n                    ind = letters[i].ind;\r\n                }\r\n                currentLength += alignment[0] * letters[i].an / 200;\r\n                var animatorOffset = 0;\r\n                for (j = 0; j < jLen; j += 1) {\r\n                    animatorProps = animators[j].a;\r\n                    if (animatorProps.p.propType) {\r\n                        animatorSelector = animators[j].s;\r\n                        mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                        if(mult.length){\r\n                            animatorOffset += animatorProps.p.v[0] * mult[0];\r\n                        } else{\r\n                            animatorOffset += animatorProps.p.v[0] * mult;\r\n                        }\r\n\r\n                    }\r\n                    if (animatorProps.a.propType) {\r\n                        animatorSelector = animators[j].s;\r\n                        mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                        if(mult.length){\r\n                            animatorOffset += animatorProps.a.v[0] * mult[0];\r\n                        } else{\r\n                            animatorOffset += animatorProps.a.v[0] * mult;\r\n                        }\r\n\r\n                    }\r\n                }\r\n                flag = true;\r\n                while (flag) {\r\n                    if (segmentLength + partialLength >= currentLength + animatorOffset || !points) {\r\n                        perc = (currentLength + animatorOffset - segmentLength) / currentPoint.partialLength;\r\n                        xPathPos = prevPoint.point[0] + (currentPoint.point[0] - prevPoint.point[0]) * perc;\r\n                        yPathPos = prevPoint.point[1] + (currentPoint.point[1] - prevPoint.point[1]) * perc;\r\n                        matrixHelper.translate(-alignment[0]*letters[i].an/200, -(alignment[1] * yOff / 100));\r\n                        flag = false;\r\n                    } else if (points) {\r\n                        segmentLength += currentPoint.partialLength;\r\n                        pointInd += 1;\r\n                        if (pointInd >= points.length) {\r\n                            pointInd = 0;\r\n                            segmentInd += 1;\r\n                            if (!segments[segmentInd]) {\r\n                                if (mask.v.c) {\r\n                                    pointInd = 0;\r\n                                    segmentInd = 0;\r\n                                    points = segments[segmentInd].points;\r\n                                } else {\r\n                                    segmentLength -= currentPoint.partialLength;\r\n                                    points = null;\r\n                                }\r\n                            } else {\r\n                                points = segments[segmentInd].points;\r\n                            }\r\n                        }\r\n                        if (points) {\r\n                            prevPoint = currentPoint;\r\n                            currentPoint = points[pointInd];\r\n                            partialLength = currentPoint.partialLength;\r\n                        }\r\n                    }\r\n                }\r\n                offf = letters[i].an / 2 - letters[i].add;\r\n                matrixHelper.translate(-offf, 0, 0);\r\n            } else {\r\n                offf = letters[i].an/2 - letters[i].add;\r\n                matrixHelper.translate(-offf,0,0);\r\n\r\n                // Grouping alignment\r\n                matrixHelper.translate(-alignment[0]*letters[i].an/200, -alignment[1]*yOff/100, 0);\r\n            }\r\n\r\n            lineLength += letters[i].l/2;\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if (animatorProps.t.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    //This condition is to prevent applying tracking to first character in each line. Might be better to use a boolean \"isNewLine\"\r\n                    if(xPos !== 0 || documentData.j !== 0) {\r\n                        if(this._hasMaskedPath) {\r\n                            if(mult.length) {\r\n                                currentLength += animatorProps.t.v*mult[0];\r\n                            } else {\r\n                                currentLength += animatorProps.t.v*mult;\r\n                            }\r\n                        }else{\r\n                            if(mult.length) {\r\n                                xPos += animatorProps.t.v*mult[0];\r\n                            } else {\r\n                                xPos += animatorProps.t.v*mult;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            lineLength += letters[i].l/2;\r\n            if(documentData.strokeWidthAnim) {\r\n                sw = documentData.sw || 0;\r\n            }\r\n            if(documentData.strokeColorAnim) {\r\n                if(documentData.sc){\r\n                    sc = [documentData.sc[0], documentData.sc[1], documentData.sc[2]];\r\n                }else{\r\n                    sc = [0,0,0];\r\n                }\r\n            }\r\n            if(documentData.fillColorAnim && documentData.fc) {\r\n                fc = [documentData.fc[0], documentData.fc[1], documentData.fc[2]];\r\n            }\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if (animatorProps.a.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n\r\n                    if(mult.length){\r\n                        matrixHelper.translate(-animatorProps.a.v[0]*mult[0], -animatorProps.a.v[1]*mult[1], animatorProps.a.v[2]*mult[2]);\r\n                    } else {\r\n                        matrixHelper.translate(-animatorProps.a.v[0]*mult, -animatorProps.a.v[1]*mult, animatorProps.a.v[2]*mult);\r\n                    }\r\n                }\r\n            }\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if (animatorProps.s.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    if(mult.length){\r\n                        matrixHelper.scale(1+((animatorProps.s.v[0]-1)*mult[0]),1+((animatorProps.s.v[1]-1)*mult[1]),1);\r\n                    } else {\r\n                        matrixHelper.scale(1+((animatorProps.s.v[0]-1)*mult),1+((animatorProps.s.v[1]-1)*mult),1);\r\n                    }\r\n                }\r\n            }\r\n            for(j=0;j<jLen;j+=1) {\r\n                animatorProps = animators[j].a;\r\n                animatorSelector = animators[j].s;\r\n                mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                if (animatorProps.sk.propType) {\r\n                    if(mult.length) {\r\n                        matrixHelper.skewFromAxis(-animatorProps.sk.v * mult[0], animatorProps.sa.v * mult[1]);\r\n                    } else {\r\n                        matrixHelper.skewFromAxis(-animatorProps.sk.v * mult, animatorProps.sa.v * mult);\r\n                    }\r\n                }\r\n                if (animatorProps.r.propType) {\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateZ(-animatorProps.r.v * mult[2]);\r\n                    } else {\r\n                        matrixHelper.rotateZ(-animatorProps.r.v * mult);\r\n                    }\r\n                }\r\n                if (animatorProps.ry.propType) {\r\n\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateY(animatorProps.ry.v*mult[1]);\r\n                    }else{\r\n                        matrixHelper.rotateY(animatorProps.ry.v*mult);\r\n                    }\r\n                }\r\n                if (animatorProps.rx.propType) {\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateX(animatorProps.rx.v*mult[0]);\r\n                    } else {\r\n                        matrixHelper.rotateX(animatorProps.rx.v*mult);\r\n                    }\r\n                }\r\n                if (animatorProps.o.propType) {\r\n                    if(mult.length) {\r\n                        elemOpacity += ((animatorProps.o.v)*mult[0] - elemOpacity)*mult[0];\r\n                    } else {\r\n                        elemOpacity += ((animatorProps.o.v)*mult - elemOpacity)*mult;\r\n                    }\r\n                }\r\n                if (documentData.strokeWidthAnim && animatorProps.sw.propType) {\r\n                    if(mult.length) {\r\n                        sw += animatorProps.sw.v*mult[0];\r\n                    } else {\r\n                        sw += animatorProps.sw.v*mult;\r\n                    }\r\n                }\r\n                if (documentData.strokeColorAnim && animatorProps.sc.propType) {\r\n                    for(k=0;k<3;k+=1){\r\n                        if(mult.length) {\r\n                            sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k])*mult[0];\r\n                        } else {\r\n                            sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k])*mult;\r\n                        }\r\n                    }\r\n                }\r\n                if (documentData.fillColorAnim && documentData.fc) {\r\n                    if(animatorProps.fc.propType){\r\n                        for(k=0;k<3;k+=1){\r\n                            if(mult.length) {\r\n                                fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k])*mult[0];\r\n                            } else {\r\n                                fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k])*mult;\r\n                            }\r\n                        }\r\n                    }\r\n                    if(animatorProps.fh.propType){\r\n                        if(mult.length) {\r\n                            fc = addHueToRGB(fc,animatorProps.fh.v*mult[0]);\r\n                        } else {\r\n                            fc = addHueToRGB(fc,animatorProps.fh.v*mult);\r\n                        }\r\n                    }\r\n                    if(animatorProps.fs.propType){\r\n                        if(mult.length) {\r\n                            fc = addSaturationToRGB(fc,animatorProps.fs.v*mult[0]);\r\n                        } else {\r\n                            fc = addSaturationToRGB(fc,animatorProps.fs.v*mult);\r\n                        }\r\n                    }\r\n                    if(animatorProps.fb.propType){\r\n                        if(mult.length) {\r\n                            fc = addBrightnessToRGB(fc,animatorProps.fb.v*mult[0]);\r\n                        } else {\r\n                            fc = addBrightnessToRGB(fc,animatorProps.fb.v*mult);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n\r\n                if (animatorProps.p.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    if(this._hasMaskedPath) {\r\n                        if(mult.length) {\r\n                            matrixHelper.translate(0, animatorProps.p.v[1] * mult[0], -animatorProps.p.v[2] * mult[1]);\r\n                        } else {\r\n                            matrixHelper.translate(0, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\r\n                        }\r\n                    }else{\r\n                        if(mult.length) {\r\n                            matrixHelper.translate(animatorProps.p.v[0] * mult[0], animatorProps.p.v[1] * mult[1], -animatorProps.p.v[2] * mult[2]);\r\n                        } else {\r\n                            matrixHelper.translate(animatorProps.p.v[0] * mult, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\r\n                        \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(documentData.strokeWidthAnim){\r\n                letterSw = sw < 0 ? 0 : sw;\r\n            }\r\n            if(documentData.strokeColorAnim){\r\n                letterSc = 'rgb('+Math.round(sc[0]*255)+','+Math.round(sc[1]*255)+','+Math.round(sc[2]*255)+')';\r\n            }\r\n            if(documentData.fillColorAnim && documentData.fc){\r\n                letterFc = 'rgb('+Math.round(fc[0]*255)+','+Math.round(fc[1]*255)+','+Math.round(fc[2]*255)+')';\r\n            }\r\n\r\n            if(this._hasMaskedPath) {\r\n                matrixHelper.translate(0,-documentData.ls);\r\n\r\n                matrixHelper.translate(0, alignment[1]*yOff/100 + yPos,0);\r\n                if (textData.p.p) {\r\n                    tanAngle = (currentPoint.point[1] - prevPoint.point[1]) / (currentPoint.point[0] - prevPoint.point[0]);\r\n                    var rot = Math.atan(tanAngle) * 180 / Math.PI;\r\n                    if (currentPoint.point[0] < prevPoint.point[0]) {\r\n                        rot += 180;\r\n                    }\r\n                    matrixHelper.rotate(-rot * Math.PI / 180);\r\n                }\r\n                matrixHelper.translate(xPathPos, yPathPos, 0);\r\n                currentLength -= alignment[0]*letters[i].an/200;\r\n                if(letters[i+1] && ind !== letters[i+1].ind){\r\n                    currentLength += letters[i].an / 2;\r\n                    currentLength += documentData.tr/1000*documentData.finalSize;\r\n                }\r\n            }else{\r\n\r\n                matrixHelper.translate(xPos,yPos,0);\r\n\r\n                if(documentData.ps){\r\n                    //matrixHelper.translate(documentData.ps[0],documentData.ps[1],0);\r\n                    matrixHelper.translate(documentData.ps[0],documentData.ps[1] + documentData.ascent,0);\r\n                }\r\n                switch(documentData.j){\r\n                    case 1:\r\n                        matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]),0,0);\r\n                        break;\r\n                    case 2:\r\n                        matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line])/2,0,0);\r\n                        break;\r\n                }\r\n                matrixHelper.translate(0,-documentData.ls);\r\n                matrixHelper.translate(offf,0,0);\r\n                matrixHelper.translate(alignment[0]*letters[i].an/200,alignment[1]*yOff/100,0);\r\n                xPos += letters[i].l + documentData.tr/1000*documentData.finalSize;\r\n            }\r\n            if(renderType === 'html'){\r\n                letterM = matrixHelper.toCSS();\r\n            }else if(renderType === 'svg'){\r\n                letterM = matrixHelper.to2dCSS();\r\n            }else{\r\n                letterP = [matrixHelper.props[0],matrixHelper.props[1],matrixHelper.props[2],matrixHelper.props[3],matrixHelper.props[4],matrixHelper.props[5],matrixHelper.props[6],matrixHelper.props[7],matrixHelper.props[8],matrixHelper.props[9],matrixHelper.props[10],matrixHelper.props[11],matrixHelper.props[12],matrixHelper.props[13],matrixHelper.props[14],matrixHelper.props[15]];\r\n            }\r\n            letterO = elemOpacity;\r\n        }\r\n\r\n        if(renderedLettersCount <= i) {\r\n            letterValue = new LetterProps(letterO,letterSw,letterSc,letterFc,letterM,letterP);\r\n            this.renderedLetters.push(letterValue);\r\n            renderedLettersCount += 1;\r\n            this.lettersChangedFlag = true;\r\n        } else {\r\n            letterValue = this.renderedLetters[i];\r\n            this.lettersChangedFlag = letterValue.update(letterO, letterSw, letterSc, letterFc, letterM, letterP) || this.lettersChangedFlag;\r\n        }\r\n    }\r\n};\r\n\r\nTextAnimatorProperty.prototype.getValue = function(){\r\n\tif(this._elem.globalData.frameId === this._frameId){\r\n        return;\r\n    }\r\n    this._frameId = this._elem.globalData.frameId;\r\n    this.iterateDynamicProperties();\r\n};\r\n\r\nTextAnimatorProperty.prototype.mHelper = new Matrix();\r\nTextAnimatorProperty.prototype.defaultPropsArray = [];\r\nextendPrototype([DynamicPropertyContainer], TextAnimatorProperty);\r\nfunction TextAnimatorDataProperty(elem, animatorProps, container) {\r\n\tvar defaultData = {propType:false};\r\n\tvar getProp = PropertyFactory.getProp;\r\n\tvar textAnimator_animatables = animatorProps.a;\r\n\tthis.a = {\r\n\t\tr: textAnimator_animatables.r ? getProp(elem, textAnimator_animatables.r, 0, degToRads, container) : defaultData,\r\n\t\trx: textAnimator_animatables.rx ? getProp(elem, textAnimator_animatables.rx, 0, degToRads, container) : defaultData,\r\n\t\try: textAnimator_animatables.ry ? getProp(elem, textAnimator_animatables.ry, 0, degToRads, container) : defaultData,\r\n\t\tsk: textAnimator_animatables.sk ? getProp(elem, textAnimator_animatables.sk, 0, degToRads, container) : defaultData,\r\n\t\tsa: textAnimator_animatables.sa ? getProp(elem, textAnimator_animatables.sa, 0, degToRads, container) : defaultData,\r\n\t\ts: textAnimator_animatables.s ? getProp(elem, textAnimator_animatables.s, 1, 0.01, container) : defaultData,\r\n\t\ta: textAnimator_animatables.a ? getProp(elem, textAnimator_animatables.a, 1, 0, container) : defaultData,\r\n\t\to: textAnimator_animatables.o ? getProp(elem, textAnimator_animatables.o, 0, 0.01, container) : defaultData,\r\n\t\tp: textAnimator_animatables.p ? getProp(elem,textAnimator_animatables.p, 1, 0, container) : defaultData,\r\n\t\tsw: textAnimator_animatables.sw ? getProp(elem, textAnimator_animatables.sw, 0, 0, container) : defaultData,\r\n\t\tsc: textAnimator_animatables.sc ? getProp(elem, textAnimator_animatables.sc, 1, 0, container) : defaultData,\r\n\t\tfc: textAnimator_animatables.fc ? getProp(elem, textAnimator_animatables.fc, 1, 0, container) : defaultData,\r\n\t\tfh: textAnimator_animatables.fh ? getProp(elem, textAnimator_animatables.fh, 0, 0, container) : defaultData,\r\n\t\tfs: textAnimator_animatables.fs ? getProp(elem, textAnimator_animatables.fs, 0, 0.01, container) : defaultData,\r\n\t\tfb: textAnimator_animatables.fb ? getProp(elem, textAnimator_animatables.fb, 0, 0.01, container) : defaultData,\r\n\t\tt: textAnimator_animatables.t ? getProp(elem, textAnimator_animatables.t, 0, 0, container) : defaultData\r\n\t};\r\n\r\n\tthis.s = TextSelectorProp.getTextSelectorProp(elem,animatorProps.s, container);\r\n    this.s.t = animatorProps.s.t;\r\n}\r\nfunction LetterProps(o, sw, sc, fc, m, p){\r\n    this.o = o;\r\n    this.sw = sw;\r\n    this.sc = sc;\r\n    this.fc = fc;\r\n    this.m = m;\r\n    this.p = p;\r\n    this._mdf = {\r\n    \to: true,\r\n    \tsw: !!sw,\r\n    \tsc: !!sc,\r\n    \tfc: !!fc,\r\n    \tm: true,\r\n    \tp: true\r\n    };\r\n}\r\n\r\nLetterProps.prototype.update = function(o, sw, sc, fc, m, p) {\r\n\tthis._mdf.o = false;\r\n\tthis._mdf.sw = false;\r\n\tthis._mdf.sc = false;\r\n\tthis._mdf.fc = false;\r\n\tthis._mdf.m = false;\r\n\tthis._mdf.p = false;\r\n\tvar updated = false;\r\n\r\n\tif(this.o !== o) {\r\n\t\tthis.o = o;\r\n\t\tthis._mdf.o = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.sw !== sw) {\r\n\t\tthis.sw = sw;\r\n\t\tthis._mdf.sw = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.sc !== sc) {\r\n\t\tthis.sc = sc;\r\n\t\tthis._mdf.sc = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.fc !== fc) {\r\n\t\tthis.fc = fc;\r\n\t\tthis._mdf.fc = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.m !== m) {\r\n\t\tthis.m = m;\r\n\t\tthis._mdf.m = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(p.length && (this.p[0] !== p[0] || this.p[1] !== p[1] || this.p[4] !== p[4] || this.p[5] !== p[5] || this.p[12] !== p[12] || this.p[13] !== p[13])) {\r\n\t\tthis.p = p;\r\n\t\tthis._mdf.p = true;\r\n\t\tupdated = true;\r\n\t}\r\n\treturn updated;\r\n};\r\nfunction TextProperty(elem, data){\r\n\tthis._frameId = initialDefaultFrame;\r\n\tthis.pv = '';\r\n\tthis.v = '';\r\n\tthis.kf = false;\r\n\tthis._isFirstFrame = true;\r\n\tthis._mdf = false;\r\n    this.data = data;\r\n\tthis.elem = elem;\r\n    this.comp = this.elem.comp;\r\n\tthis.keysIndex = 0;\r\n    this.canResize = false;\r\n    this.minimumFontSize = 1;\r\n    this.effectsSequence = [];\r\n\tthis.currentData = {\r\n\t\tascent: 0,\r\n        boxWidth: this.defaultBoxWidth,\r\n        f: '',\r\n        fStyle: '',\r\n        fWeight: '',\r\n        fc: '',\r\n        j: '',\r\n        justifyOffset: '',\r\n        l: [],\r\n        lh: 0,\r\n        lineWidths: [],\r\n        ls: '',\r\n        of: '',\r\n        s: '',\r\n        sc: '',\r\n        sw: 0,\r\n        t: 0,\r\n        tr: 0,\r\n        sz:0,\r\n        ps:null,\r\n        fillColorAnim: false,\r\n        strokeColorAnim: false,\r\n        strokeWidthAnim: false,\r\n        yOffset: 0,\r\n        finalSize:0,\r\n        finalText:[],\r\n        finalLineHeight: 0,\r\n        __complete: false\r\n\r\n\t};\r\n    this.copyData(this.currentData, this.data.d.k[0].s);\r\n\r\n    if(!this.searchProperty()) {\r\n        this.completeTextData(this.currentData);\r\n    }\r\n}\r\n\r\nTextProperty.prototype.defaultBoxWidth = [0,0];\r\n\r\nTextProperty.prototype.copyData = function(obj, data) {\r\n    for(var s in data) {\r\n        if(data.hasOwnProperty(s)) {\r\n            obj[s] = data[s];\r\n        }\r\n    }\r\n    return obj;\r\n}\r\n\r\nTextProperty.prototype.setCurrentData = function(data){\r\n    if(!data.__complete) {\r\n        this.completeTextData(data);\r\n    }\r\n    this.currentData = data;\r\n    this.currentData.boxWidth = this.currentData.boxWidth || this.defaultBoxWidth;\r\n    this._mdf = true;\r\n};\r\n\r\nTextProperty.prototype.searchProperty = function() {\r\n    return this.searchKeyframes();\r\n};\r\n\r\nTextProperty.prototype.searchKeyframes = function() {\r\n    this.kf = this.data.d.k.length > 1;\r\n    if(this.kf) {\r\n        this.addEffect(this.getKeyframeValue.bind(this));\r\n    }\r\n    return this.kf;\r\n}\r\n\r\nTextProperty.prototype.addEffect = function(effectFunction) {\r\n\tthis.effectsSequence.push(effectFunction);\r\n    this.elem.addDynamicProperty(this);\r\n};\r\n\r\nTextProperty.prototype.getValue = function(_finalValue) {\r\n    if((this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) && !_finalValue) {\r\n        return;\r\n    }\r\n    this.currentData.t = this.data.d.k[this.keysIndex].s.t;\r\n    var currentValue = this.currentData;\r\n    var currentIndex = this.keysIndex;\r\n    if(this.lock) {\r\n        this.setCurrentData(this.currentData);\r\n        return;\r\n    }\r\n    this.lock = true;\r\n    this._mdf = false;\r\n    var multipliedValue;\r\n    var i, len = this.effectsSequence.length;\r\n    var finalValue = _finalValue || this.data.d.k[this.keysIndex].s;\r\n    for(i = 0; i < len; i += 1) {\r\n        //Checking if index changed to prevent creating a new object every time the expression updates.\r\n        if(currentIndex !== this.keysIndex) {\r\n            finalValue = this.effectsSequence[i](finalValue, finalValue.t);\r\n        } else {\r\n            finalValue = this.effectsSequence[i](this.currentData, finalValue.t);\r\n        }\r\n    }\r\n    if(currentValue !== finalValue) {\r\n        this.setCurrentData(finalValue);\r\n    }\r\n    this.pv = this.v = this.currentData;\r\n    this.lock = false;\r\n    this.frameId = this.elem.globalData.frameId;\r\n}\r\n\r\nTextProperty.prototype.getKeyframeValue = function() {\r\n    var textKeys = this.data.d.k, textDocumentData;\r\n    var frameNum = this.elem.comp.renderedFrame;\r\n    var i = 0, len = textKeys.length;\r\n    while(i <= len - 1) {\r\n        textDocumentData = textKeys[i].s;\r\n        if(i === len - 1 || textKeys[i+1].t > frameNum){\r\n            break;\r\n        }\r\n        i += 1;\r\n    }\r\n    if(this.keysIndex !== i) {\r\n        this.keysIndex = i;\r\n    }\r\n    return this.data.d.k[this.keysIndex].s;\r\n};\r\n\r\nTextProperty.prototype.buildFinalText = function(text) {\r\n    var combinedCharacters = FontManager.getCombinedCharacterCodes();\r\n    var charactersArray = [];\r\n    var i = 0, len = text.length;\r\n    var charCode;\r\n    while (i < len) {\r\n        charCode = text.charCodeAt(i);\r\n        if (combinedCharacters.indexOf(charCode) !== -1) {\r\n            charactersArray[charactersArray.length - 1] += text.charAt(i);\r\n        } else {\r\n            if (charCode >= 0xD800 && charCode <= 0xDBFF) {\r\n                charCode = text.charCodeAt(i + 1);\r\n                if (charCode >= 0xDC00 && charCode <= 0xDFFF) {\r\n                    charactersArray.push(text.substr(i, 2));\r\n                    ++i;\r\n                } else {\r\n                    charactersArray.push(text.charAt(i));\r\n                }\r\n            } else {\r\n                charactersArray.push(text.charAt(i));\r\n            }\r\n        }\r\n        i += 1;\r\n    }\r\n    return charactersArray;\r\n}\r\n\r\nTextProperty.prototype.completeTextData = function(documentData) {\r\n    documentData.__complete = true;\r\n    var fontManager = this.elem.globalData.fontManager;\r\n    var data = this.data;\r\n    var letters = [];\r\n    var i, len;\r\n    var newLineFlag, index = 0, val;\r\n    var anchorGrouping = data.m.g;\r\n    var currentSize = 0, currentPos = 0, currentLine = 0, lineWidths = [];\r\n    var lineWidth = 0;\r\n    var maxLineWidth = 0;\r\n    var j, jLen;\r\n    var fontData = fontManager.getFontByName(documentData.f);\r\n    var charData, cLength = 0;\r\n    var styles = fontData.fStyle ? fontData.fStyle.split(' ') : [];\r\n\r\n    var fWeight = 'normal', fStyle = 'normal';\r\n    len = styles.length;\r\n    var styleName;\r\n    for(i=0;i<len;i+=1){\r\n        styleName = styles[i].toLowerCase();\r\n        switch(styleName) {\r\n            case 'italic':\r\n            fStyle = 'italic';\r\n            break;\r\n            case 'bold':\r\n            fWeight = '700';\r\n            break;\r\n            case 'black':\r\n            fWeight = '900';\r\n            break;\r\n            case 'medium':\r\n            fWeight = '500';\r\n            break;\r\n            case 'regular':\r\n            case 'normal':\r\n            fWeight = '400';\r\n            break;\r\n            case 'light':\r\n            case 'thin':\r\n            fWeight = '200';\r\n            break;\r\n        }\r\n    }\r\n    documentData.fWeight = fontData.fWeight || fWeight;\r\n    documentData.fStyle = fStyle;\r\n    documentData.finalSize = documentData.s;\r\n    documentData.finalText = this.buildFinalText(documentData.t);\r\n    len = documentData.finalText.length;\r\n    documentData.finalLineHeight = documentData.lh;\r\n    var trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n    var charCode;\r\n    if(documentData.sz){\r\n        var flag = true;\r\n        var boxWidth = documentData.sz[0];\r\n        var boxHeight = documentData.sz[1];\r\n        var currentHeight, finalText;\r\n        while(flag) {\r\n            finalText = this.buildFinalText(documentData.t);\r\n            currentHeight = 0;\r\n            lineWidth = 0;\r\n            len = finalText.length;\r\n            trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n            var lastSpaceIndex = -1;\r\n            for(i=0;i<len;i+=1){\r\n                charCode = finalText[i].charCodeAt(0);\r\n                newLineFlag = false;\r\n                if(finalText[i] === ' '){\r\n                    lastSpaceIndex = i;\r\n                }else if(charCode === 13 || charCode === 3){\r\n                    lineWidth = 0;\r\n                    newLineFlag = true;\r\n                    currentHeight += documentData.finalLineHeight || documentData.finalSize*1.2;\r\n                }\r\n                if(fontManager.chars){\r\n                    charData = fontManager.getCharData(finalText[i], fontData.fStyle, fontData.fFamily);\r\n                    cLength = newLineFlag ? 0 : charData.w*documentData.finalSize/100;\r\n                }else{\r\n                    //tCanvasHelper.font = documentData.s + 'px '+ fontData.fFamily;\r\n                    cLength = fontManager.measureText(finalText[i], documentData.f, documentData.finalSize);\r\n                }\r\n                if(lineWidth + cLength > boxWidth && finalText[i] !== ' '){\r\n                    if(lastSpaceIndex === -1){\r\n                        len += 1;\r\n                    } else {\r\n                        i = lastSpaceIndex;\r\n                    }\r\n                    currentHeight += documentData.finalLineHeight || documentData.finalSize*1.2;\r\n                    finalText.splice(i, lastSpaceIndex === i ? 1 : 0,\"\\r\");\r\n                    //finalText = finalText.substr(0,i) + \"\\r\" + finalText.substr(i === lastSpaceIndex ? i + 1 : i);\r\n                    lastSpaceIndex = -1;\r\n                    lineWidth = 0;\r\n                }else {\r\n                    lineWidth += cLength;\r\n                    lineWidth += trackingOffset;\r\n                }\r\n            }\r\n            currentHeight += fontData.ascent*documentData.finalSize/100;\r\n            if(this.canResize && documentData.finalSize > this.minimumFontSize && boxHeight < currentHeight) {\r\n                documentData.finalSize -= 1;\r\n                documentData.finalLineHeight = documentData.finalSize * documentData.lh / documentData.s;\r\n            } else {\r\n                documentData.finalText = finalText;\r\n                len = documentData.finalText.length;\r\n                flag = false;\r\n            }\r\n        }\r\n\r\n    }\r\n    lineWidth = - trackingOffset;\r\n    cLength = 0;\r\n    var uncollapsedSpaces = 0;\r\n    var currentChar;\r\n    for (i = 0;i < len ;i += 1) {\r\n        newLineFlag = false;\r\n        currentChar = documentData.finalText[i];\r\n        charCode = currentChar.charCodeAt(0);\r\n        if (currentChar === ' '){\r\n            val = '\\u00A0';\r\n        } else if (charCode === 13 || charCode === 3) {\r\n            uncollapsedSpaces = 0;\r\n            lineWidths.push(lineWidth);\r\n            maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\r\n            lineWidth = - 2 * trackingOffset;\r\n            val = '';\r\n            newLineFlag = true;\r\n            currentLine += 1;\r\n        }else{\r\n            val = documentData.finalText[i];\r\n        }\r\n        if(fontManager.chars){\r\n            charData = fontManager.getCharData(currentChar, fontData.fStyle, fontManager.getFontByName(documentData.f).fFamily);\r\n            cLength = newLineFlag ? 0 : charData.w*documentData.finalSize/100;\r\n        }else{\r\n            //var charWidth = fontManager.measureText(val, documentData.f, documentData.finalSize);\r\n            //tCanvasHelper.font = documentData.finalSize + 'px '+ fontManager.getFontByName(documentData.f).fFamily;\r\n            cLength = fontManager.measureText(val, documentData.f, documentData.finalSize);\r\n        }\r\n\r\n        //\r\n        if(currentChar === ' '){\r\n            uncollapsedSpaces += cLength + trackingOffset;\r\n        } else {\r\n            lineWidth += cLength + trackingOffset + uncollapsedSpaces;\r\n            uncollapsedSpaces = 0;\r\n        }\r\n        letters.push({l:cLength,an:cLength,add:currentSize,n:newLineFlag, anIndexes:[], val: val, line: currentLine, animatorJustifyOffset: 0});\r\n        if(anchorGrouping == 2){\r\n            currentSize += cLength;\r\n            if(val === '' || val === '\\u00A0' || i === len - 1){\r\n                if(val === '' || val === '\\u00A0'){\r\n                    currentSize -= cLength;\r\n                }\r\n                while(currentPos<=i){\r\n                    letters[currentPos].an = currentSize;\r\n                    letters[currentPos].ind = index;\r\n                    letters[currentPos].extra = cLength;\r\n                    currentPos += 1;\r\n                }\r\n                index += 1;\r\n                currentSize = 0;\r\n            }\r\n        }else if(anchorGrouping == 3){\r\n            currentSize += cLength;\r\n            if(val === '' || i === len - 1){\r\n                if(val === ''){\r\n                    currentSize -= cLength;\r\n                }\r\n                while(currentPos<=i){\r\n                    letters[currentPos].an = currentSize;\r\n                    letters[currentPos].ind = index;\r\n                    letters[currentPos].extra = cLength;\r\n                    currentPos += 1;\r\n                }\r\n                currentSize = 0;\r\n                index += 1;\r\n            }\r\n        }else{\r\n            letters[index].ind = index;\r\n            letters[index].extra = 0;\r\n            index += 1;\r\n        }\r\n    }\r\n    documentData.l = letters;\r\n    maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\r\n    lineWidths.push(lineWidth);\r\n    if(documentData.sz){\r\n        documentData.boxWidth = documentData.sz[0];\r\n        documentData.justifyOffset = 0;\r\n    }else{\r\n        documentData.boxWidth = maxLineWidth;\r\n        switch(documentData.j){\r\n            case 1:\r\n                documentData.justifyOffset = - documentData.boxWidth;\r\n                break;\r\n            case 2:\r\n                documentData.justifyOffset = - documentData.boxWidth/2;\r\n                break;\r\n            default:\r\n                documentData.justifyOffset = 0;\r\n        }\r\n    }\r\n    documentData.lineWidths = lineWidths;\r\n\r\n    var animators = data.a, animatorData, letterData;\r\n    jLen = animators.length;\r\n    var based, ind, indexes = [];\r\n    for(j=0;j<jLen;j+=1){\r\n        animatorData = animators[j];\r\n        if(animatorData.a.sc){\r\n            documentData.strokeColorAnim = true;\r\n        }\r\n        if(animatorData.a.sw){\r\n            documentData.strokeWidthAnim = true;\r\n        }\r\n        if(animatorData.a.fc || animatorData.a.fh || animatorData.a.fs || animatorData.a.fb){\r\n            documentData.fillColorAnim = true;\r\n        }\r\n        ind = 0;\r\n        based = animatorData.s.b;\r\n        for(i=0;i<len;i+=1){\r\n            letterData = letters[i];\r\n            letterData.anIndexes[j] = ind;\r\n            if((based == 1 && letterData.val !== '') || (based == 2 && letterData.val !== '' && letterData.val !== '\\u00A0') || (based == 3 && (letterData.n || letterData.val == '\\u00A0' || i == len - 1)) || (based == 4 && (letterData.n || i == len - 1))){\r\n                if(animatorData.s.rn === 1){\r\n                    indexes.push(ind);\r\n                }\r\n                ind += 1;\r\n            }\r\n        }\r\n        data.a[j].s.totalChars = ind;\r\n        var currentInd = -1, newInd;\r\n        if(animatorData.s.rn === 1){\r\n            for(i = 0; i < len; i += 1){\r\n                letterData = letters[i];\r\n                if(currentInd != letterData.anIndexes[j]){\r\n                    currentInd = letterData.anIndexes[j];\r\n                    newInd = indexes.splice(Math.floor(Math.random()*indexes.length),1)[0];\r\n                }\r\n                letterData.anIndexes[j] = newInd;\r\n            }\r\n        }\r\n    }\r\n    documentData.yOffset = documentData.finalLineHeight || documentData.finalSize*1.2;\r\n    documentData.ls = documentData.ls || 0;\r\n    documentData.ascent = fontData.ascent*documentData.finalSize/100;\r\n};\r\n\r\nTextProperty.prototype.updateDocumentData = function(newData, index) {\r\n\tindex = index === undefined ? this.keysIndex : index;\r\n    var dData = this.copyData({}, this.data.d.k[index].s);\r\n    dData = this.copyData(dData, newData);\r\n    this.data.d.k[index].s = dData;\r\n    this.recalculate(index);\r\n    this.elem.addDynamicProperty(this);\r\n};\r\n\r\nTextProperty.prototype.recalculate = function(index) {\r\n    var dData = this.data.d.k[index].s;\r\n    dData.__complete = false;\r\n    this.keysIndex = 0;\r\n    this._isFirstFrame = true;\r\n    this.getValue(dData);\r\n}\r\n\r\nTextProperty.prototype.canResizeFont = function(_canResize) {\r\n    this.canResize = _canResize;\r\n    this.recalculate(this.keysIndex);\r\n    this.elem.addDynamicProperty(this);\r\n};\r\n\r\nTextProperty.prototype.setMinimumFontSize = function(_fontValue) {\r\n    this.minimumFontSize = Math.floor(_fontValue) || 1;\r\n    this.recalculate(this.keysIndex);\r\n    this.elem.addDynamicProperty(this);\r\n};\r\n\r\nvar TextSelectorProp = (function(){\r\n    var max = Math.max;\r\n    var min = Math.min;\r\n    var floor = Math.floor;\r\n\r\n    function TextSelectorProp(elem,data){\r\n        this._currentTextLength = -1;\r\n        this.k = false;\r\n        this.data = data;\r\n        this.elem = elem;\r\n        this.comp = elem.comp;\r\n        this.finalS = 0;\r\n        this.finalE = 0;\r\n        this.initDynamicPropertyContainer(elem);\r\n        this.s = PropertyFactory.getProp(elem,data.s || {k:0},0,0,this);\r\n        if('e' in data){\r\n            this.e = PropertyFactory.getProp(elem,data.e,0,0,this);\r\n        }else{\r\n            this.e = {v:100};\r\n        }\r\n        this.o = PropertyFactory.getProp(elem,data.o || {k:0},0,0,this);\r\n        this.xe = PropertyFactory.getProp(elem,data.xe || {k:0},0,0,this);\r\n        this.ne = PropertyFactory.getProp(elem,data.ne || {k:0},0,0,this);\r\n        this.a = PropertyFactory.getProp(elem,data.a,0,0.01,this);\r\n        if(!this.dynamicProperties.length){\r\n            this.getValue();\r\n        }\r\n    }\r\n\r\n    TextSelectorProp.prototype = {\r\n        getMult: function(ind) {\r\n            if(this._currentTextLength !== this.elem.textProperty.currentData.l.length) {\r\n                this.getValue();\r\n            }\r\n            //var easer = bez.getEasingCurve(this.ne.v/100,0,1-this.xe.v/100,1);\r\n            var x1 = 0;\r\n            var y1 = 0;\r\n            var x2 = 1;\r\n            var y2 = 1;\r\n            if(this.ne.v > 0) {\r\n                x1 = this.ne.v / 100.0;\r\n            }\r\n            else {\r\n                y1 = -this.ne.v / 100.0;\r\n            }\r\n            if(this.xe.v > 0) {\r\n                x2 = 1.0 - this.xe.v / 100.0;\r\n            }\r\n            else {\r\n                y2 = 1.0 + this.xe.v / 100.0;\r\n            }\r\n            var easer = BezierFactory.getBezierEasing(x1, y1, x2, y2).get;\r\n\r\n            var mult = 0;\r\n            var s = this.finalS;\r\n            var e = this.finalE;\r\n            var type = this.data.sh;\r\n            if(type == 2){\r\n                if(e === s){\r\n                    mult = ind >= e ? 1 : 0;\r\n                }else{\r\n                    mult = max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n                }\r\n                mult = easer(mult);\r\n            }else if(type == 3){\r\n                if(e === s){\r\n                    mult = ind >= e ? 0 : 1;\r\n                }else{\r\n                    mult = 1 - max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n                }\r\n\r\n                mult = easer(mult);\r\n            }else if(type == 4){\r\n                if(e === s){\r\n                    mult = 0;\r\n                }else{\r\n                    mult = max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n                    if(mult<0.5){\r\n                        mult *= 2;\r\n                    }else{\r\n                        mult = 1 - 2*(mult-0.5);\r\n                    }\r\n                }\r\n                mult = easer(mult);\r\n            }else if(type == 5){\r\n                if(e === s){\r\n                    mult = 0;\r\n                }else{\r\n                    var tot = e - s;\r\n                    /*ind += 0.5;\r\n                    mult = -4/(tot*tot)*(ind*ind)+(4/tot)*ind;*/\r\n                    ind = min(max(0,ind+0.5-s),e-s);\r\n                    var x = -tot/2+ind;\r\n                    var a = tot/2;\r\n                    mult = Math.sqrt(1 - (x*x)/(a*a));\r\n                }\r\n                mult = easer(mult);\r\n            }else if(type == 6){\r\n                if(e === s){\r\n                    mult = 0;\r\n                }else{\r\n                    ind = min(max(0,ind+0.5-s),e-s);\r\n                    mult = (1+(Math.cos((Math.PI+Math.PI*2*(ind)/(e-s)))))/2;\r\n                    /*\r\n                     ind = Math.min(Math.max(s,ind),e-1);\r\n                     mult = (1+(Math.cos((Math.PI+Math.PI*2*(ind-s)/(e-1-s)))))/2;\r\n                     mult = Math.max(mult,(1/(e-1-s))/(e-1-s));*/\r\n                }\r\n                mult = easer(mult);\r\n            }else {\r\n                if(ind >= floor(s)){\r\n                    if(ind-s < 0){\r\n                        mult = 1 - (s - ind);\r\n                    }else{\r\n                        mult = max(0,min(e-ind,1));\r\n                    }\r\n                }\r\n                mult = easer(mult);\r\n            }\r\n            return mult*this.a.v;\r\n        },\r\n        getValue: function(newCharsFlag) {\r\n            this.iterateDynamicProperties();\r\n            this._mdf = newCharsFlag || this._mdf;\r\n            this._currentTextLength = this.elem.textProperty.currentData.l.length || 0;\r\n            if(newCharsFlag && this.data.r === 2) {\r\n                this.e.v = this._currentTextLength;\r\n            }\r\n            var divisor = this.data.r === 2 ? 1 : 100 / this.data.totalChars;\r\n            var o = this.o.v/divisor;\r\n            var s = this.s.v/divisor + o;\r\n            var e = (this.e.v/divisor) + o;\r\n            if(s>e){\r\n                var _s = s;\r\n                s = e;\r\n                e = _s;\r\n            }\r\n            this.finalS = s;\r\n            this.finalE = e;\r\n        }\r\n    }\r\n    extendPrototype([DynamicPropertyContainer], TextSelectorProp);\r\n\r\n    function getTextSelectorProp(elem, data,arr) {\r\n        return new TextSelectorProp(elem, data, arr);\r\n    }\r\n\r\n    return {\r\n        getTextSelectorProp: getTextSelectorProp\r\n    };\r\n}());\r\n\r\n    \r\nvar pool_factory = (function() {\r\n\treturn function(initialLength, _create, _release, _clone) {\r\n\r\n\t\tvar _length = 0;\r\n\t\tvar _maxLength = initialLength;\r\n\t\tvar pool = createSizedArray(_maxLength);\r\n\r\n\t\tvar ob = {\r\n\t\t\tnewElement: newElement,\r\n\t\t\trelease: release\r\n\t\t};\r\n\r\n\t\tfunction newElement(){\r\n\t\t\tvar element;\r\n\t\t\tif(_length){\r\n\t\t\t\t_length -= 1;\r\n\t\t\t\telement = pool[_length];\r\n\t\t\t} else {\r\n\t\t\t\telement = _create();\r\n\t\t\t}\r\n\t\t\treturn element;\r\n\t\t}\r\n\r\n\t\tfunction release(element) {\r\n\t\t\tif(_length === _maxLength) {\r\n\t\t\t\tpool = pooling.double(pool);\r\n\t\t\t\t_maxLength = _maxLength*2;\r\n\t\t\t}\r\n\t\t\tif (_release) {\r\n\t\t\t\t_release(element);\r\n\t\t\t}\r\n\t\t\tpool[_length] = element;\r\n\t\t\t_length += 1;\r\n\t\t}\r\n\r\n\t\tfunction clone() {\r\n\t\t\tvar clonedElement = newElement();\r\n\t\t\treturn _clone(clonedElement);\r\n\t\t}\r\n\r\n\t\treturn ob;\r\n\t};\r\n}());\r\n\r\nvar pooling = (function(){\r\n\r\n\tfunction double(arr){\r\n\t\treturn arr.concat(createSizedArray(arr.length));\r\n\t}\r\n\r\n\treturn {\r\n\t\tdouble: double\r\n\t};\r\n}());\r\nvar point_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn createTypedArray('float32', 2);\r\n\t}\r\n\treturn pool_factory(8, create);\r\n}());\r\nvar shape_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn new ShapePath();\r\n\t}\r\n\r\n\tfunction release(shapePath) {\r\n\t\tvar len = shapePath._length, i;\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tpoint_pool.release(shapePath.v[i]);\r\n\t\t\tpoint_pool.release(shapePath.i[i]);\r\n\t\t\tpoint_pool.release(shapePath.o[i]);\r\n\t\t\tshapePath.v[i] = null;\r\n\t\t\tshapePath.i[i] = null;\r\n\t\t\tshapePath.o[i] = null;\r\n\t\t}\r\n\t\tshapePath._length = 0;\r\n\t\tshapePath.c = false;\r\n\t}\r\n\r\n\tfunction clone(shape) {\r\n\t\tvar cloned = factory.newElement();\r\n\t\tvar i, len = shape._length === undefined ? shape.v.length : shape._length;\r\n\t\tcloned.setLength(len);\r\n\t\tcloned.c = shape.c;\r\n\t\tvar pt;\r\n\t\t\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tcloned.setTripleAt(shape.v[i][0],shape.v[i][1],shape.o[i][0],shape.o[i][1],shape.i[i][0],shape.i[i][1], i);\r\n\t\t}\r\n\t\treturn cloned;\r\n\t}\r\n\r\n\tvar factory = pool_factory(4, create, release);\r\n\tfactory.clone = clone;\r\n\r\n\treturn factory;\r\n}());\r\nvar shapeCollection_pool = (function(){\r\n\tvar ob = {\r\n\t\tnewShapeCollection: newShapeCollection,\r\n\t\trelease: release\r\n\t};\r\n\r\n\tvar _length = 0;\r\n\tvar _maxLength = 4;\r\n\tvar pool = createSizedArray(_maxLength);\r\n\r\n\tfunction newShapeCollection(){\r\n\t\tvar shapeCollection;\r\n\t\tif(_length){\r\n\t\t\t_length -= 1;\r\n\t\t\tshapeCollection = pool[_length];\r\n\t\t} else {\r\n\t\t\tshapeCollection = new ShapeCollection();\r\n\t\t}\r\n\t\treturn shapeCollection;\r\n\t}\r\n\r\n\tfunction release(shapeCollection) {\r\n\t\tvar i, len = shapeCollection._length;\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tshape_pool.release(shapeCollection.shapes[i]);\r\n\t\t}\r\n\t\tshapeCollection._length = 0;\r\n\r\n\t\tif(_length === _maxLength) {\r\n\t\t\tpool = pooling.double(pool);\r\n\t\t\t_maxLength = _maxLength*2;\r\n\t\t}\r\n\t\tpool[_length] = shapeCollection;\r\n\t\t_length += 1;\r\n\t}\r\n\r\n\treturn ob;\r\n}());\r\nvar segments_length_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn {\r\n\t\t\tlengths: [],\r\n\t\t\ttotalLength: 0\r\n\t\t};\r\n\t}\r\n\r\n\tfunction release(element) {\r\n\t\tvar i, len = element.lengths.length;\r\n\t\tfor(i=0;i<len;i+=1) {\r\n\t\t\tbezier_length_pool.release(element.lengths[i]);\r\n\t\t}\r\n\t\telement.lengths.length = 0;\r\n\t}\r\n\r\n\treturn pool_factory(8, create, release);\r\n}());\r\nvar bezier_length_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn {\r\n            addedLength: 0,\r\n            percents: createTypedArray('float32', defaultCurveSegments),\r\n            lengths: createTypedArray('float32', defaultCurveSegments),\r\n        };\r\n\t}\r\n\treturn pool_factory(8, create);\r\n}());\r\nfunction BaseRenderer(){}\r\nBaseRenderer.prototype.checkLayers = function(num){\r\n    var i, len = this.layers.length, data;\r\n    this.completeLayers = true;\r\n    for (i = len - 1; i >= 0; i--) {\r\n        if (!this.elements[i]) {\r\n            data = this.layers[i];\r\n            if(data.ip - data.st <= (num - this.layers[i].st) && data.op - data.st > (num - this.layers[i].st))\r\n            {\r\n                this.buildItem(i);\r\n            }\r\n        }\r\n        this.completeLayers = this.elements[i] ? this.completeLayers:false;\r\n    }\r\n    this.checkPendingElements();\r\n};\r\n\r\nBaseRenderer.prototype.createItem = function(layer){\r\n    switch(layer.ty){\r\n        case 2:\r\n            return this.createImage(layer);\r\n        case 0:\r\n            return this.createComp(layer);\r\n        case 1:\r\n            return this.createSolid(layer);\r\n        case 3:\r\n            return this.createNull(layer);\r\n        case 4:\r\n            return this.createShape(layer);\r\n        case 5:\r\n            return this.createText(layer);\r\n        case 13:\r\n            return this.createCamera(layer);\r\n    }\r\n    return this.createNull(layer);\r\n};\r\n\r\nBaseRenderer.prototype.createCamera = function(){\r\n    throw new Error('You\\'re using a 3d camera. Try the html renderer.');\r\n};\r\n\r\nBaseRenderer.prototype.buildAllItems = function(){\r\n    var i, len = this.layers.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.buildItem(i);\r\n    }\r\n    this.checkPendingElements();\r\n};\r\n\r\nBaseRenderer.prototype.includeLayers = function(newLayers){\r\n    this.completeLayers = false;\r\n    var i, len = newLayers.length;\r\n    var j, jLen = this.layers.length;\r\n    for(i=0;i<len;i+=1){\r\n        j = 0;\r\n        while(j<jLen){\r\n            if(this.layers[j].id == newLayers[i].id){\r\n                this.layers[j] = newLayers[i];\r\n                break;\r\n            }\r\n            j += 1;\r\n        }\r\n    }\r\n};\r\n\r\nBaseRenderer.prototype.setProjectInterface = function(pInterface){\r\n    this.globalData.projectInterface = pInterface;\r\n};\r\n\r\nBaseRenderer.prototype.initItems = function(){\r\n    if(!this.globalData.progressiveLoad){\r\n        this.buildAllItems();\r\n    }\r\n};\r\nBaseRenderer.prototype.buildElementParenting = function(element, parentName, hierarchy) {\r\n    var elements = this.elements;\r\n    var layers = this.layers;\r\n    var i=0, len = layers.length;\r\n    while (i < len) {\r\n        if (layers[i].ind == parentName) {\r\n            if (!elements[i] || elements[i] === true) {\r\n                this.buildItem(i);\r\n                this.addPendingElement(element);\r\n            } else {\r\n                hierarchy.push(elements[i]);\r\n                elements[i].setAsParent();\r\n                if(layers[i].parent !== undefined) {\r\n                    this.buildElementParenting(element, layers[i].parent, hierarchy);\r\n                } else {\r\n                    element.setHierarchy(hierarchy);\r\n                }\r\n            }\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nBaseRenderer.prototype.addPendingElement = function(element){\r\n    this.pendingElements.push(element);\r\n};\r\n\r\nBaseRenderer.prototype.searchExtraCompositions = function(assets){\r\n    var i, len = assets.length;\r\n    for(i=0;i<len;i+=1){\r\n        if(assets[i].xt){\r\n            var comp = this.createComp(assets[i]);\r\n            comp.initExpressions();\r\n            this.globalData.projectInterface.registerComposition(comp);\r\n        }\r\n    }\r\n};\r\n\r\nBaseRenderer.prototype.setupGlobalData = function(animData, fontsContainer) {\r\n    this.globalData.fontManager = new FontManager();\r\n    this.globalData.fontManager.addChars(animData.chars);\r\n    this.globalData.fontManager.addFonts(animData.fonts, fontsContainer);\r\n    this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem);\r\n    this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem);\r\n    this.globalData.imageLoader = this.animationItem.imagePreloader;\r\n    this.globalData.frameId = 0;\r\n    this.globalData.frameRate = animData.fr;\r\n    this.globalData.nm = animData.nm;\r\n    this.globalData.compSize = {\r\n        w: animData.w,\r\n        h: animData.h\r\n    }\r\n}\r\nfunction SVGRenderer(animationItem, config){\r\n    this.animationItem = animationItem;\r\n    this.layers = null;\r\n    this.renderedFrame = -1;\r\n    this.svgElement = createNS('svg');\r\n    var ariaLabel = '';\r\n    if (config && config.title) {\r\n        var titleElement = createNS('title');\r\n        var titleId = createElementID();\r\n        titleElement.setAttribute('id', titleId);\r\n        titleElement.textContent = config.title;\r\n        this.svgElement.appendChild(titleElement);\r\n        ariaLabel += titleId;\r\n    }\r\n    if (config && config.description) {\r\n        var descElement = createNS('desc');\r\n        var descId = createElementID();\r\n        descElement.setAttribute('id', descId);\r\n        descElement.textContent = config.description;\r\n        this.svgElement.appendChild(descElement);\r\n        ariaLabel += ' ' + descId;\r\n    }\r\n    if (ariaLabel) {\r\n        this.svgElement.setAttribute('aria-labelledby', ariaLabel)\r\n    }\r\n    var defs = createNS( 'defs');\r\n    this.svgElement.appendChild(defs);\r\n    var maskElement = createNS('g');\r\n    this.svgElement.appendChild(maskElement);\r\n    this.layerElement = maskElement;\r\n    this.renderConfig = {\r\n        preserveAspectRatio: (config && config.preserveAspectRatio) || 'xMidYMid meet',\r\n        imagePreserveAspectRatio: (config && config.imagePreserveAspectRatio) || 'xMidYMid slice',\r\n        progressiveLoad: (config && config.progressiveLoad) || false,\r\n        hideOnTransparent: (config && config.hideOnTransparent === false) ? false : true,\r\n        viewBoxOnly: (config && config.viewBoxOnly) || false,\r\n        viewBoxSize: (config && config.viewBoxSize) || false,\r\n        className: (config && config.className) || '',\r\n        focusable: config && config.focusable\r\n    };\r\n\r\n    this.globalData = {\r\n        _mdf: false,\r\n        frameNum: -1,\r\n        defs: defs,\r\n        renderConfig: this.renderConfig\r\n    };\r\n    this.elements = [];\r\n    this.pendingElements = [];\r\n    this.destroyed = false;\r\n    this.rendererType = 'svg';\r\n\r\n}\r\n\r\nextendPrototype([BaseRenderer],SVGRenderer);\r\n\r\nSVGRenderer.prototype.createNull = function (data) {\r\n    return new NullElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createShape = function (data) {\r\n    return new SVGShapeElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createText = function (data) {\r\n    return new SVGTextElement(data,this.globalData,this);\r\n\r\n};\r\n\r\nSVGRenderer.prototype.createImage = function (data) {\r\n    return new IImageElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createComp = function (data) {\r\n    return new SVGCompElement(data,this.globalData,this);\r\n\r\n};\r\n\r\nSVGRenderer.prototype.createSolid = function (data) {\r\n    return new ISolidElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.configAnimation = function(animData){\r\n    this.svgElement.setAttribute('xmlns','http://www.w3.org/2000/svg');\r\n    if(this.renderConfig.viewBoxSize) {\r\n        this.svgElement.setAttribute('viewBox',this.renderConfig.viewBoxSize);\r\n    } else {\r\n        this.svgElement.setAttribute('viewBox','0 0 '+animData.w+' '+animData.h);\r\n    }\r\n\r\n    if(!this.renderConfig.viewBoxOnly) {\r\n        this.svgElement.setAttribute('width',animData.w);\r\n        this.svgElement.setAttribute('height',animData.h);\r\n        this.svgElement.style.width = '100%';\r\n        this.svgElement.style.height = '100%';\r\n        this.svgElement.style.transform = 'translate3d(0,0,0)';\r\n    }\r\n    if(this.renderConfig.className) {\r\n        this.svgElement.setAttribute('class', this.renderConfig.className);\r\n    }\r\n    if(this.renderConfig.focusable !== undefined) {\r\n        this.svgElement.setAttribute('focusable', this.renderConfig.focusable);\r\n    }\r\n    this.svgElement.setAttribute('preserveAspectRatio',this.renderConfig.preserveAspectRatio);\r\n    //this.layerElement.style.transform = 'translate3d(0,0,0)';\r\n    //this.layerElement.style.transformOrigin = this.layerElement.style.mozTransformOrigin = this.layerElement.style.webkitTransformOrigin = this.layerElement.style['-webkit-transform'] = \"0px 0px 0px\";\r\n    this.animationItem.wrapper.appendChild(this.svgElement);\r\n    //Mask animation\r\n    var defs = this.globalData.defs;\r\n\r\n    this.setupGlobalData(animData, defs);\r\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\r\n    this.data = animData;\r\n\r\n    var maskElement = createNS( 'clipPath');\r\n    var rect = createNS('rect');\r\n    rect.setAttribute('width',animData.w);\r\n    rect.setAttribute('height',animData.h);\r\n    rect.setAttribute('x',0);\r\n    rect.setAttribute('y',0);\r\n    var maskId = createElementID();\r\n    maskElement.setAttribute('id', maskId);\r\n    maskElement.appendChild(rect);\r\n    this.layerElement.setAttribute(\"clip-path\", \"url(\" + locationHref + \"#\"+maskId+\")\");\r\n\r\n    defs.appendChild(maskElement);\r\n    this.layers = animData.layers;\r\n    this.elements = createSizedArray(animData.layers.length);\r\n};\r\n\r\n\r\nSVGRenderer.prototype.destroy = function () {\r\n    this.animationItem.wrapper.innerHTML = '';\r\n    this.layerElement = null;\r\n    this.globalData.defs = null;\r\n    var i, len = this.layers ? this.layers.length : 0;\r\n    for (i = 0; i < len; i++) {\r\n        if(this.elements[i]){\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n    this.elements.length = 0;\r\n    this.destroyed = true;\r\n    this.animationItem = null;\r\n};\r\n\r\nSVGRenderer.prototype.updateContainerSize = function () {\r\n};\r\n\r\nSVGRenderer.prototype.buildItem  = function(pos){\r\n    var elements = this.elements;\r\n    if(elements[pos] || this.layers[pos].ty == 99){\r\n        return;\r\n    }\r\n    elements[pos] = true;\r\n    var element = this.createItem(this.layers[pos]);\r\n\r\n    elements[pos] = element;\r\n    if(expressionsPlugin){\r\n        if(this.layers[pos].ty === 0){\r\n            this.globalData.projectInterface.registerComposition(element);\r\n        }\r\n        element.initExpressions();\r\n    }\r\n    this.appendElementInPos(element,pos);\r\n    if(this.layers[pos].tt){\r\n        if(!this.elements[pos - 1] || this.elements[pos - 1] === true){\r\n            this.buildItem(pos - 1);\r\n            this.addPendingElement(element);\r\n        } else {\r\n            element.setMatte(elements[pos - 1].layerId);\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.checkPendingElements  = function(){\r\n    while(this.pendingElements.length){\r\n        var element = this.pendingElements.pop();\r\n        element.checkParenting();\r\n        if(element.data.tt){\r\n            var i = 0, len = this.elements.length;\r\n            while(i<len){\r\n                if(this.elements[i] === element){\r\n                    element.setMatte(this.elements[i - 1].layerId);\r\n                    break;\r\n                }\r\n                i += 1;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.renderFrame = function(num){\r\n    if(this.renderedFrame === num || this.destroyed){\r\n        return;\r\n    }\r\n    if(num === null){\r\n        num = this.renderedFrame;\r\n    }else{\r\n        this.renderedFrame = num;\r\n    }\r\n    // console.log('-------');\r\n    // console.log('FRAME ',num);\r\n    this.globalData.frameNum = num;\r\n    this.globalData.frameId += 1;\r\n    this.globalData.projectInterface.currentFrame = num;\r\n    this.globalData._mdf = false;\r\n    var i, len = this.layers.length;\r\n    if(!this.completeLayers){\r\n        this.checkLayers(num);\r\n    }\r\n    for (i = len - 1; i >= 0; i--) {\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].prepareFrame(num - this.layers[i].st);\r\n        }\r\n    }\r\n    if(this.globalData._mdf) {\r\n        for (i = 0; i < len; i += 1) {\r\n            if(this.completeLayers || this.elements[i]){\r\n                this.elements[i].renderFrame();\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.appendElementInPos = function(element, pos){\r\n    var newElement = element.getBaseElement();\r\n    if(!newElement){\r\n        return;\r\n    }\r\n    var i = 0;\r\n    var nextElement;\r\n    while(i<pos){\r\n        if(this.elements[i] && this.elements[i]!== true && this.elements[i].getBaseElement()){\r\n            nextElement = this.elements[i].getBaseElement();\r\n        }\r\n        i += 1;\r\n    }\r\n    if(nextElement){\r\n        this.layerElement.insertBefore(newElement, nextElement);\r\n    } else {\r\n        this.layerElement.appendChild(newElement);\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.hide = function(){\r\n    this.layerElement.style.display = 'none';\r\n};\r\n\r\nSVGRenderer.prototype.show = function(){\r\n    this.layerElement.style.display = 'block';\r\n};\r\n\r\nfunction CanvasRenderer(animationItem, config){\r\n    this.animationItem = animationItem;\r\n    this.renderConfig = {\r\n        clearCanvas: (config && config.clearCanvas !== undefined) ? config.clearCanvas : true,\r\n        context: (config && config.context) || null,\r\n        progressiveLoad: (config && config.progressiveLoad) || false,\r\n        preserveAspectRatio: (config && config.preserveAspectRatio) || 'xMidYMid meet',\r\n        imagePreserveAspectRatio: (config && config.imagePreserveAspectRatio) || 'xMidYMid slice',\r\n        className: (config && config.className) || ''\r\n    };\r\n    this.renderConfig.dpr = (config && config.dpr) || 1;\r\n    if (this.animationItem.wrapper) {\r\n        this.renderConfig.dpr = (config && config.dpr) || window.devicePixelRatio || 1;\r\n    }\r\n    this.renderedFrame = -1;\r\n    this.globalData = {\r\n        frameNum: -1,\r\n        _mdf: false,\r\n        renderConfig: this.renderConfig,\r\n        currentGlobalAlpha: -1\r\n    };\r\n    this.contextData = new CVContextData();\r\n    this.elements = [];\r\n    this.pendingElements = [];\r\n    this.transformMat = new Matrix();\r\n    this.completeLayers = false;\r\n    this.rendererType = 'canvas';\r\n}\r\nextendPrototype([BaseRenderer],CanvasRenderer);\r\n\r\nCanvasRenderer.prototype.createShape = function (data) {\r\n    return new CVShapeElement(data, this.globalData, this);\r\n};\r\n\r\nCanvasRenderer.prototype.createText = function (data) {\r\n    return new CVTextElement(data, this.globalData, this);\r\n};\r\n\r\nCanvasRenderer.prototype.createImage = function (data) {\r\n    return new CVImageElement(data, this.globalData, this);\r\n};\r\n\r\nCanvasRenderer.prototype.createComp = function (data) {\r\n    return new CVCompElement(data, this.globalData, this);\r\n};\r\n\r\nCanvasRenderer.prototype.createSolid = function (data) {\r\n    return new CVSolidElement(data, this.globalData, this);\r\n};\r\n\r\nCanvasRenderer.prototype.createNull = SVGRenderer.prototype.createNull;\r\n\r\nCanvasRenderer.prototype.ctxTransform = function(props){\r\n    if(props[0] === 1 && props[1] === 0 && props[4] === 0 && props[5] === 1 && props[12] === 0 && props[13] === 0){\r\n        return;\r\n    }\r\n    if(!this.renderConfig.clearCanvas){\r\n        this.canvasContext.transform(props[0],props[1],props[4],props[5],props[12],props[13]);\r\n        return;\r\n    }\r\n    this.transformMat.cloneFromProps(props);\r\n    var cProps = this.contextData.cTr.props;\r\n    this.transformMat.transform(cProps[0],cProps[1],cProps[2],cProps[3],cProps[4],cProps[5],cProps[6],cProps[7],cProps[8],cProps[9],cProps[10],cProps[11],cProps[12],cProps[13],cProps[14],cProps[15]);\r\n    //this.contextData.cTr.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\r\n    this.contextData.cTr.cloneFromProps(this.transformMat.props);\r\n    var trProps = this.contextData.cTr.props;\r\n    this.canvasContext.setTransform(trProps[0],trProps[1],trProps[4],trProps[5],trProps[12],trProps[13]);\r\n};\r\n\r\nCanvasRenderer.prototype.ctxOpacity = function(op){\r\n    /*if(op === 1){\r\n        return;\r\n    }*/\r\n    if(!this.renderConfig.clearCanvas){\r\n        this.canvasContext.globalAlpha *= op < 0 ? 0 : op;\r\n        this.globalData.currentGlobalAlpha = this.contextData.cO;\r\n        return;\r\n    }\r\n    this.contextData.cO *= op < 0 ? 0 : op;\r\n    if(this.globalData.currentGlobalAlpha !== this.contextData.cO) {\r\n        this.canvasContext.globalAlpha = this.contextData.cO;\r\n        this.globalData.currentGlobalAlpha = this.contextData.cO;\r\n    }\r\n};\r\n\r\nCanvasRenderer.prototype.reset = function(){\r\n    if(!this.renderConfig.clearCanvas){\r\n        this.canvasContext.restore();\r\n        return;\r\n    }\r\n    this.contextData.reset();\r\n};\r\n\r\nCanvasRenderer.prototype.save = function(actionFlag){\r\n    if(!this.renderConfig.clearCanvas){\r\n        this.canvasContext.save();\r\n        return;\r\n    }\r\n    if(actionFlag){\r\n        this.canvasContext.save();\r\n    }\r\n    var props = this.contextData.cTr.props;\r\n    if(this.contextData._length <= this.contextData.cArrPos) {\r\n        this.contextData.duplicate();\r\n    }\r\n    var i, arr = this.contextData.saved[this.contextData.cArrPos];\r\n    for (i = 0; i < 16; i += 1) {\r\n        arr[i] = props[i];\r\n    }\r\n    this.contextData.savedOp[this.contextData.cArrPos] = this.contextData.cO;\r\n    this.contextData.cArrPos += 1;\r\n};\r\n\r\nCanvasRenderer.prototype.restore = function(actionFlag){\r\n    if(!this.renderConfig.clearCanvas){\r\n        this.canvasContext.restore();\r\n        return;\r\n    }\r\n    if(actionFlag){\r\n        this.canvasContext.restore();\r\n        this.globalData.blendMode = 'source-over';\r\n    }\r\n    this.contextData.cArrPos -= 1;\r\n    var popped = this.contextData.saved[this.contextData.cArrPos];\r\n    var i,arr = this.contextData.cTr.props;\r\n    for(i=0;i<16;i+=1){\r\n        arr[i] = popped[i];\r\n    }\r\n    this.canvasContext.setTransform(popped[0],popped[1],popped[4],popped[5],popped[12],popped[13]);\r\n    popped = this.contextData.savedOp[this.contextData.cArrPos];\r\n    this.contextData.cO = popped;\r\n    if(this.globalData.currentGlobalAlpha !== popped) {\r\n        this.canvasContext.globalAlpha = popped;\r\n        this.globalData.currentGlobalAlpha = popped;\r\n    }\r\n};\r\n\r\nCanvasRenderer.prototype.configAnimation = function(animData){\r\n    if(this.animationItem.wrapper){\r\n        this.animationItem.container = createTag('canvas');\r\n        this.animationItem.container.style.width = '100%';\r\n        this.animationItem.container.style.height = '100%';\r\n        //this.animationItem.container.style.transform = 'translate3d(0,0,0)';\r\n        //this.animationItem.container.style.webkitTransform = 'translate3d(0,0,0)';\r\n        this.animationItem.container.style.transformOrigin = this.animationItem.container.style.mozTransformOrigin = this.animationItem.container.style.webkitTransformOrigin = this.animationItem.container.style['-webkit-transform'] = \"0px 0px 0px\";\r\n        this.animationItem.wrapper.appendChild(this.animationItem.container);\r\n        this.canvasContext = this.animationItem.container.getContext('2d');\r\n        if(this.renderConfig.className) {\r\n            this.animationItem.container.setAttribute('class', this.renderConfig.className);\r\n        }\r\n    }else{\r\n        this.canvasContext = this.renderConfig.context;\r\n    }\r\n    this.data = animData;\r\n    this.layers = animData.layers;\r\n    this.transformCanvas = {\r\n        w: animData.w,\r\n        h:animData.h,\r\n        sx:0,\r\n        sy:0,\r\n        tx:0,\r\n        ty:0\r\n    };\r\n    this.setupGlobalData(animData, document.body);\r\n    this.globalData.canvasContext = this.canvasContext;\r\n    this.globalData.renderer = this;\r\n    this.globalData.isDashed = false;\r\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\r\n    this.globalData.transformCanvas = this.transformCanvas;\r\n    this.elements = createSizedArray(animData.layers.length);\r\n\r\n    this.updateContainerSize();\r\n};\r\n\r\nCanvasRenderer.prototype.updateContainerSize = function () {\r\n    this.reset();\r\n    var elementWidth,elementHeight;\r\n    if(this.animationItem.wrapper && this.animationItem.container){\r\n        elementWidth = this.animationItem.wrapper.offsetWidth;\r\n        elementHeight = this.animationItem.wrapper.offsetHeight;\r\n        this.animationItem.container.setAttribute('width',elementWidth * this.renderConfig.dpr );\r\n        this.animationItem.container.setAttribute('height',elementHeight * this.renderConfig.dpr);\r\n    }else{\r\n        elementWidth = this.canvasContext.canvas.width * this.renderConfig.dpr;\r\n        elementHeight = this.canvasContext.canvas.height * this.renderConfig.dpr;\r\n    }\r\n    var elementRel,animationRel;\r\n    if(this.renderConfig.preserveAspectRatio.indexOf('meet') !== -1 || this.renderConfig.preserveAspectRatio.indexOf('slice') !== -1){\r\n        var par = this.renderConfig.preserveAspectRatio.split(' ');\r\n        var fillType = par[1] || 'meet';\r\n        var pos = par[0] || 'xMidYMid';\r\n        var xPos = pos.substr(0,4);\r\n        var yPos = pos.substr(4);\r\n        elementRel = elementWidth/elementHeight;\r\n        animationRel = this.transformCanvas.w/this.transformCanvas.h;\r\n        if(animationRel>elementRel && fillType === 'meet' || animationRel<elementRel && fillType === 'slice'){\r\n            this.transformCanvas.sx = elementWidth/(this.transformCanvas.w/this.renderConfig.dpr);\r\n            this.transformCanvas.sy = elementWidth/(this.transformCanvas.w/this.renderConfig.dpr);\r\n        }else{\r\n            this.transformCanvas.sx = elementHeight/(this.transformCanvas.h / this.renderConfig.dpr);\r\n            this.transformCanvas.sy = elementHeight/(this.transformCanvas.h / this.renderConfig.dpr);\r\n        }\r\n\r\n        if(xPos === 'xMid' && ((animationRel<elementRel && fillType==='meet') || (animationRel>elementRel && fillType === 'slice'))){\r\n            this.transformCanvas.tx = (elementWidth-this.transformCanvas.w*(elementHeight/this.transformCanvas.h))/2*this.renderConfig.dpr;\r\n        } else if(xPos === 'xMax' && ((animationRel<elementRel && fillType==='meet') || (animationRel>elementRel && fillType === 'slice'))){\r\n            this.transformCanvas.tx = (elementWidth-this.transformCanvas.w*(elementHeight/this.transformCanvas.h))*this.renderConfig.dpr;\r\n        } else {\r\n            this.transformCanvas.tx = 0;\r\n        }\r\n        if(yPos === 'YMid' && ((animationRel>elementRel && fillType==='meet') || (animationRel<elementRel && fillType === 'slice'))){\r\n            this.transformCanvas.ty = ((elementHeight-this.transformCanvas.h*(elementWidth/this.transformCanvas.w))/2)*this.renderConfig.dpr;\r\n        } else if(yPos === 'YMax' && ((animationRel>elementRel && fillType==='meet') || (animationRel<elementRel && fillType === 'slice'))){\r\n            this.transformCanvas.ty = ((elementHeight-this.transformCanvas.h*(elementWidth/this.transformCanvas.w)))*this.renderConfig.dpr;\r\n        } else {\r\n            this.transformCanvas.ty = 0;\r\n        }\r\n\r\n    }else if(this.renderConfig.preserveAspectRatio == 'none'){\r\n        this.transformCanvas.sx = elementWidth/(this.transformCanvas.w/this.renderConfig.dpr);\r\n        this.transformCanvas.sy = elementHeight/(this.transformCanvas.h/this.renderConfig.dpr);\r\n        this.transformCanvas.tx = 0;\r\n        this.transformCanvas.ty = 0;\r\n    }else{\r\n        this.transformCanvas.sx = this.renderConfig.dpr;\r\n        this.transformCanvas.sy = this.renderConfig.dpr;\r\n        this.transformCanvas.tx = 0;\r\n        this.transformCanvas.ty = 0;\r\n    }\r\n    this.transformCanvas.props = [this.transformCanvas.sx,0,0,0,0,this.transformCanvas.sy,0,0,0,0,1,0,this.transformCanvas.tx,this.transformCanvas.ty,0,1];\r\n    /*var i, len = this.elements.length;\r\n    for(i=0;i<len;i+=1){\r\n        if(this.elements[i] && this.elements[i].data.ty === 0){\r\n            this.elements[i].resize(this.globalData.transformCanvas);\r\n        }\r\n    }*/\r\n    this.ctxTransform(this.transformCanvas.props);\r\n    this.canvasContext.beginPath();\r\n    this.canvasContext.rect(0,0,this.transformCanvas.w,this.transformCanvas.h);\r\n    this.canvasContext.closePath();\r\n    this.canvasContext.clip();\r\n\r\n    this.renderFrame(this.renderedFrame, true);\r\n};\r\n\r\nCanvasRenderer.prototype.destroy = function () {\r\n    if(this.renderConfig.clearCanvas) {\r\n        this.animationItem.wrapper.innerHTML = '';\r\n    }\r\n    var i, len = this.layers ? this.layers.length : 0;\r\n    for (i = len - 1; i >= 0; i-=1) {\r\n        if(this.elements[i]) {\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n    this.elements.length = 0;\r\n    this.globalData.canvasContext = null;\r\n    this.animationItem.container = null;\r\n    this.destroyed = true;\r\n};\r\n\r\nCanvasRenderer.prototype.renderFrame = function(num, forceRender){\r\n    if((this.renderedFrame === num && this.renderConfig.clearCanvas === true && !forceRender) || this.destroyed || num === -1){\r\n        return;\r\n    }\r\n    this.renderedFrame = num;\r\n    this.globalData.frameNum = num - this.animationItem._isFirstFrame;\r\n    this.globalData.frameId += 1;\r\n    this.globalData._mdf = !this.renderConfig.clearCanvas || forceRender;\r\n    this.globalData.projectInterface.currentFrame = num;\r\n\r\n     // console.log('--------');\r\n     // console.log('NEW: ',num);\r\n    var i, len = this.layers.length;\r\n    if(!this.completeLayers){\r\n        this.checkLayers(num);\r\n    }\r\n\r\n    for (i = 0; i < len; i++) {\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].prepareFrame(num - this.layers[i].st);\r\n        }\r\n    }\r\n    if(this.globalData._mdf) {\r\n        if(this.renderConfig.clearCanvas === true){\r\n            this.canvasContext.clearRect(0, 0, this.transformCanvas.w, this.transformCanvas.h);\r\n        }else{\r\n            this.save();\r\n        }\r\n        for (i = len - 1; i >= 0; i-=1) {\r\n            if(this.completeLayers || this.elements[i]){\r\n                this.elements[i].renderFrame();\r\n            }\r\n        }\r\n        if(this.renderConfig.clearCanvas !== true){\r\n            this.restore();\r\n        }\r\n    }\r\n};\r\n\r\nCanvasRenderer.prototype.buildItem = function(pos){\r\n    var elements = this.elements;\r\n    if(elements[pos] || this.layers[pos].ty == 99){\r\n        return;\r\n    }\r\n    var element = this.createItem(this.layers[pos], this,this.globalData);\r\n    elements[pos] = element;\r\n    element.initExpressions();\r\n    /*if(this.layers[pos].ty === 0){\r\n        element.resize(this.globalData.transformCanvas);\r\n    }*/\r\n};\r\n\r\nCanvasRenderer.prototype.checkPendingElements  = function(){\r\n    while(this.pendingElements.length){\r\n        var element = this.pendingElements.pop();\r\n        element.checkParenting();\r\n    }\r\n};\r\n\r\nCanvasRenderer.prototype.hide = function(){\r\n    this.animationItem.container.style.display = 'none';\r\n};\r\n\r\nCanvasRenderer.prototype.show = function(){\r\n    this.animationItem.container.style.display = 'block';\r\n};\r\n\r\nfunction HybridRenderer(animationItem, config){\r\n    this.animationItem = animationItem;\r\n    this.layers = null;\r\n    this.renderedFrame = -1;\r\n    this.renderConfig = {\r\n        className: (config && config.className) || '',\r\n        imagePreserveAspectRatio: (config && config.imagePreserveAspectRatio) || 'xMidYMid slice',\r\n        hideOnTransparent: (config && config.hideOnTransparent === false) ? false : true\r\n    };\r\n    this.globalData = {\r\n        _mdf: false,\r\n        frameNum: -1,\r\n        renderConfig: this.renderConfig\r\n    };\r\n    this.pendingElements = [];\r\n    this.elements = [];\r\n    this.threeDElements = [];\r\n    this.destroyed = false;\r\n    this.camera = null;\r\n    this.supports3d = true;\r\n    this.rendererType = 'html';\r\n\r\n}\r\n\r\nextendPrototype([BaseRenderer],HybridRenderer);\r\n\r\nHybridRenderer.prototype.buildItem = SVGRenderer.prototype.buildItem;\r\n\r\nHybridRenderer.prototype.checkPendingElements  = function(){\r\n    while(this.pendingElements.length){\r\n        var element = this.pendingElements.pop();\r\n        element.checkParenting();\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.appendElementInPos = function(element, pos){\r\n    var newDOMElement = element.getBaseElement();\r\n    if(!newDOMElement){\r\n        return;\r\n    }\r\n    var layer = this.layers[pos];\r\n    if(!layer.ddd || !this.supports3d){\r\n        if(this.threeDElements) {\r\n            this.addTo3dContainer(newDOMElement,pos);\r\n        } else {\r\n            var i = 0;\r\n            var nextDOMElement, nextLayer, tmpDOMElement;\r\n            while(i<pos){\r\n                if(this.elements[i] && this.elements[i]!== true && this.elements[i].getBaseElement){\r\n                    nextLayer = this.elements[i];\r\n                    tmpDOMElement = this.layers[i].ddd ? this.getThreeDContainerByPos(i) : nextLayer.getBaseElement();\r\n                    nextDOMElement = tmpDOMElement || nextDOMElement;\r\n                }\r\n                i += 1;\r\n            }\r\n            if(nextDOMElement){\r\n                if(!layer.ddd || !this.supports3d){\r\n                    this.layerElement.insertBefore(newDOMElement, nextDOMElement);\r\n                }\r\n            } else {\r\n                if(!layer.ddd || !this.supports3d){\r\n                    this.layerElement.appendChild(newDOMElement);\r\n                }\r\n            }\r\n        }\r\n        \r\n    } else {\r\n        this.addTo3dContainer(newDOMElement,pos);\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.createShape = function (data) {\r\n    if(!this.supports3d){\r\n        return new SVGShapeElement(data, this.globalData, this);\r\n    }\r\n    return new HShapeElement(data, this.globalData, this);\r\n};\r\n\r\nHybridRenderer.prototype.createText = function (data) {\r\n    if(!this.supports3d){\r\n        return new SVGTextElement(data, this.globalData, this);\r\n    }\r\n    return new HTextElement(data, this.globalData, this);\r\n};\r\n\r\nHybridRenderer.prototype.createCamera = function (data) {\r\n    this.camera = new HCameraElement(data, this.globalData, this);\r\n    return this.camera;\r\n};\r\n\r\nHybridRenderer.prototype.createImage = function (data) {\r\n    if(!this.supports3d){\r\n        return new IImageElement(data, this.globalData, this);\r\n    }\r\n    return new HImageElement(data, this.globalData, this);\r\n};\r\n\r\nHybridRenderer.prototype.createComp = function (data) {\r\n    if(!this.supports3d){\r\n        return new SVGCompElement(data, this.globalData, this);\r\n    }\r\n    return new HCompElement(data, this.globalData, this);\r\n\r\n};\r\n\r\nHybridRenderer.prototype.createSolid = function (data) {\r\n    if(!this.supports3d){\r\n        return new ISolidElement(data, this.globalData, this);\r\n    }\r\n    return new HSolidElement(data, this.globalData, this);\r\n};\r\n\r\nHybridRenderer.prototype.createNull = SVGRenderer.prototype.createNull;\r\n\r\nHybridRenderer.prototype.getThreeDContainerByPos = function(pos){\r\n    var i = 0, len = this.threeDElements.length;\r\n    while(i<len) {\r\n        if(this.threeDElements[i].startPos <= pos && this.threeDElements[i].endPos >= pos) {\r\n            return this.threeDElements[i].perspectiveElem;\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.createThreeDContainer = function(pos, type){\r\n    var perspectiveElem = createTag('div');\r\n    styleDiv(perspectiveElem);\r\n    var container = createTag('div');\r\n    styleDiv(container);\r\n    if(type === '3d') {\r\n        perspectiveElem.style.width = this.globalData.compSize.w+'px';\r\n        perspectiveElem.style.height = this.globalData.compSize.h+'px';\r\n        perspectiveElem.style.transformOrigin = perspectiveElem.style.mozTransformOrigin = perspectiveElem.style.webkitTransformOrigin = \"50% 50%\";\r\n        container.style.transform = container.style.webkitTransform = 'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';\r\n    }\r\n    \r\n    perspectiveElem.appendChild(container);\r\n    //this.resizerElem.appendChild(perspectiveElem);\r\n    var threeDContainerData = {\r\n        container:container,\r\n        perspectiveElem:perspectiveElem,\r\n        startPos: pos,\r\n        endPos: pos,\r\n        type: type\r\n    };\r\n    this.threeDElements.push(threeDContainerData);\r\n    return threeDContainerData;\r\n};\r\n\r\nHybridRenderer.prototype.build3dContainers = function(){\r\n    var i, len = this.layers.length;\r\n    var lastThreeDContainerData;\r\n    var currentContainer = '';\r\n    for(i=0;i<len;i+=1){\r\n        if(this.layers[i].ddd && this.layers[i].ty !== 3){\r\n            if(currentContainer !== '3d'){\r\n                currentContainer = '3d';\r\n                lastThreeDContainerData = this.createThreeDContainer(i,'3d');\r\n            }\r\n            lastThreeDContainerData.endPos = Math.max(lastThreeDContainerData.endPos,i);\r\n        } else {\r\n            if(currentContainer !== '2d'){\r\n                currentContainer = '2d';\r\n                lastThreeDContainerData = this.createThreeDContainer(i,'2d');\r\n            }\r\n            lastThreeDContainerData.endPos = Math.max(lastThreeDContainerData.endPos,i);\r\n        }\r\n    }\r\n    len = this.threeDElements.length;\r\n    for(i = len - 1; i >= 0; i --) {\r\n        this.resizerElem.appendChild(this.threeDElements[i].perspectiveElem);\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.addTo3dContainer = function(elem,pos){\r\n    var i = 0, len = this.threeDElements.length;\r\n    while(i<len){\r\n        if(pos <= this.threeDElements[i].endPos){\r\n            var j = this.threeDElements[i].startPos;\r\n            var nextElement;\r\n            while(j<pos){\r\n                if(this.elements[j] && this.elements[j].getBaseElement){\r\n                    nextElement = this.elements[j].getBaseElement();\r\n                }\r\n                j += 1;\r\n            }\r\n            if(nextElement){\r\n                this.threeDElements[i].container.insertBefore(elem, nextElement);\r\n            } else {\r\n                this.threeDElements[i].container.appendChild(elem);\r\n            }\r\n            break;\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.configAnimation = function(animData){\r\n    var resizerElem = createTag('div');\r\n    var wrapper = this.animationItem.wrapper;\r\n    resizerElem.style.width = animData.w+'px';\r\n    resizerElem.style.height = animData.h+'px';\r\n    this.resizerElem = resizerElem;\r\n    styleDiv(resizerElem);\r\n    resizerElem.style.transformStyle = resizerElem.style.webkitTransformStyle = resizerElem.style.mozTransformStyle = \"flat\";\r\n    if(this.renderConfig.className) {\r\n      resizerElem.setAttribute('class', this.renderConfig.className);\r\n    }\r\n    wrapper.appendChild(resizerElem);\r\n\r\n    resizerElem.style.overflow = 'hidden';\r\n    var svg = createNS('svg');\r\n    svg.setAttribute('width','1');\r\n    svg.setAttribute('height','1');\r\n    styleDiv(svg);\r\n    this.resizerElem.appendChild(svg);\r\n    var defs = createNS('defs');\r\n    svg.appendChild(defs);\r\n    this.data = animData;\r\n    //Mask animation\r\n    this.setupGlobalData(animData, svg);\r\n    this.globalData.defs = defs;\r\n    this.layers = animData.layers;\r\n    this.layerElement = this.resizerElem;\r\n    this.build3dContainers();\r\n    this.updateContainerSize();\r\n};\r\n\r\nHybridRenderer.prototype.destroy = function () {\r\n    this.animationItem.wrapper.innerHTML = '';\r\n    this.animationItem.container = null;\r\n    this.globalData.defs = null;\r\n    var i, len = this.layers ? this.layers.length : 0;\r\n    for (i = 0; i < len; i++) {\r\n        this.elements[i].destroy();\r\n    }\r\n    this.elements.length = 0;\r\n    this.destroyed = true;\r\n    this.animationItem = null;\r\n};\r\n\r\nHybridRenderer.prototype.updateContainerSize = function () {\r\n    var elementWidth = this.animationItem.wrapper.offsetWidth;\r\n    var elementHeight = this.animationItem.wrapper.offsetHeight;\r\n    var elementRel = elementWidth/elementHeight;\r\n    var animationRel = this.globalData.compSize.w/this.globalData.compSize.h;\r\n    var sx,sy,tx,ty;\r\n    if(animationRel>elementRel){\r\n        sx = elementWidth/(this.globalData.compSize.w);\r\n        sy = elementWidth/(this.globalData.compSize.w);\r\n        tx = 0;\r\n        ty = ((elementHeight-this.globalData.compSize.h*(elementWidth/this.globalData.compSize.w))/2);\r\n    }else{\r\n        sx = elementHeight/(this.globalData.compSize.h);\r\n        sy = elementHeight/(this.globalData.compSize.h);\r\n        tx = (elementWidth-this.globalData.compSize.w*(elementHeight/this.globalData.compSize.h))/2;\r\n        ty = 0;\r\n    }\r\n    this.resizerElem.style.transform = this.resizerElem.style.webkitTransform = 'matrix3d(' + sx + ',0,0,0,0,'+sy+',0,0,0,0,1,0,'+tx+','+ty+',0,1)';\r\n};\r\n\r\nHybridRenderer.prototype.renderFrame = SVGRenderer.prototype.renderFrame;\r\n\r\nHybridRenderer.prototype.hide = function(){\r\n    this.resizerElem.style.display = 'none';\r\n};\r\n\r\nHybridRenderer.prototype.show = function(){\r\n    this.resizerElem.style.display = 'block';\r\n};\r\n\r\nHybridRenderer.prototype.initItems = function(){\r\n    this.buildAllItems();\r\n    if(this.camera){\r\n        this.camera.setup();\r\n    } else {\r\n        var cWidth = this.globalData.compSize.w;\r\n        var cHeight = this.globalData.compSize.h;\r\n        var i, len = this.threeDElements.length;\r\n        for(i=0;i<len;i+=1){\r\n            this.threeDElements[i].perspectiveElem.style.perspective = this.threeDElements[i].perspectiveElem.style.webkitPerspective = Math.sqrt(Math.pow(cWidth,2) + Math.pow(cHeight,2)) + 'px';\r\n        }\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.searchExtraCompositions = function(assets){\r\n    var i, len = assets.length;\r\n    var floatingContainer = createTag('div');\r\n    for(i=0;i<len;i+=1){\r\n        if(assets[i].xt){\r\n            var comp = this.createComp(assets[i],floatingContainer,this.globalData.comp,null);\r\n            comp.initExpressions();\r\n            this.globalData.projectInterface.registerComposition(comp);\r\n        }\r\n    }\r\n};\r\n\r\nfunction MaskElement(data,element,globalData) {\r\n    this.data = data;\r\n    this.element = element;\r\n    this.globalData = globalData;\r\n    this.storedData = [];\r\n    this.masksProperties = this.data.masksProperties || [];\r\n    this.maskElement = null;\r\n    var defs = this.globalData.defs;\r\n    var i, len = this.masksProperties ? this.masksProperties.length : 0;\r\n    this.viewData = createSizedArray(len);\r\n    this.solidPath = '';\r\n\r\n\r\n    var path, properties = this.masksProperties;\r\n    var count = 0;\r\n    var currentMasks = [];\r\n    var j, jLen;\r\n    var layerId = createElementID();\r\n    var rect, expansor, feMorph,x;\r\n    var maskType = 'clipPath', maskRef = 'clip-path';\r\n    for (i = 0; i < len; i++) {\r\n        if((properties[i].mode !== 'a' && properties[i].mode !== 'n')|| properties[i].inv || properties[i].o.k !== 100 || properties[i].o.x){\r\n            maskType = 'mask';\r\n            maskRef = 'mask';\r\n        }\r\n\r\n        if((properties[i].mode == 's' || properties[i].mode == 'i') && count === 0){\r\n            rect = createNS( 'rect');\r\n            rect.setAttribute('fill', '#ffffff');\r\n            rect.setAttribute('width', this.element.comp.data.w || 0);\r\n            rect.setAttribute('height', this.element.comp.data.h || 0);\r\n            currentMasks.push(rect);\r\n        } else {\r\n            rect = null;\r\n        }\r\n\r\n        path = createNS( 'path');\r\n        if(properties[i].mode == 'n') {\r\n            // TODO move this to a factory or to a constructor\r\n            this.viewData[i] = {\r\n                op: PropertyFactory.getProp(this.element,properties[i].o,0,0.01,this.element),\r\n                prop: ShapePropertyFactory.getShapeProp(this.element,properties[i],3),\r\n                elem: path,\r\n                lastPath: ''\r\n            };\r\n            defs.appendChild(path);\r\n            continue;\r\n        }\r\n        count += 1;\r\n\r\n        path.setAttribute('fill', properties[i].mode === 's' ? '#000000':'#ffffff');\r\n        path.setAttribute('clip-rule','nonzero');\r\n        var filterID;\r\n\r\n        if (properties[i].x.k !== 0) {\r\n            maskType = 'mask';\r\n            maskRef = 'mask';\r\n            x = PropertyFactory.getProp(this.element,properties[i].x,0,null,this.element);\r\n            filterID = createElementID();\r\n            expansor = createNS('filter');\r\n            expansor.setAttribute('id',filterID);\r\n            feMorph = createNS('feMorphology');\r\n            feMorph.setAttribute('operator','erode');\r\n            feMorph.setAttribute('in','SourceGraphic');\r\n            feMorph.setAttribute('radius','0');\r\n            expansor.appendChild(feMorph);\r\n            defs.appendChild(expansor);\r\n            path.setAttribute('stroke', properties[i].mode === 's' ? '#000000':'#ffffff');\r\n        } else {\r\n            feMorph = null;\r\n            x = null;\r\n        }\r\n\r\n        // TODO move this to a factory or to a constructor\r\n        this.storedData[i] = {\r\n             elem: path,\r\n             x: x,\r\n             expan: feMorph,\r\n            lastPath: '',\r\n            lastOperator:'',\r\n            filterId:filterID,\r\n            lastRadius:0\r\n        };\r\n        if(properties[i].mode == 'i'){\r\n            jLen = currentMasks.length;\r\n            var g = createNS('g');\r\n            for(j=0;j<jLen;j+=1){\r\n                g.appendChild(currentMasks[j]);\r\n            }\r\n            var mask = createNS('mask');\r\n            mask.setAttribute('mask-type','alpha');\r\n            mask.setAttribute('id',layerId+'_'+count);\r\n            mask.appendChild(path);\r\n            defs.appendChild(mask);\r\n            g.setAttribute('mask','url(' + locationHref + '#'+layerId+'_'+count+')');\r\n\r\n            currentMasks.length = 0;\r\n            currentMasks.push(g);\r\n        }else{\r\n            currentMasks.push(path);\r\n        }\r\n        if(properties[i].inv && !this.solidPath){\r\n            this.solidPath = this.createLayerSolidPath();\r\n        }\r\n        // TODO move this to a factory or to a constructor\r\n        this.viewData[i] = {\r\n            elem: path,\r\n            lastPath: '',\r\n            op: PropertyFactory.getProp(this.element,properties[i].o,0,0.01,this.element),\r\n            prop:ShapePropertyFactory.getShapeProp(this.element,properties[i],3),\r\n            invRect: rect\r\n        };\r\n        if(!this.viewData[i].prop.k){\r\n            this.drawPath(properties[i],this.viewData[i].prop.v,this.viewData[i]);\r\n        }\r\n    }\r\n\r\n    this.maskElement = createNS( maskType);\r\n\r\n    len = currentMasks.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.maskElement.appendChild(currentMasks[i]);\r\n    }\r\n\r\n    if(count > 0){\r\n        this.maskElement.setAttribute('id', layerId);\r\n        this.element.maskedElement.setAttribute(maskRef, \"url(\" + locationHref + \"#\" + layerId + \")\");\r\n        defs.appendChild(this.maskElement);\r\n    }\r\n    if (this.viewData.length) {\r\n        this.element.addRenderableComponent(this);\r\n    }\r\n\r\n}\r\n\r\nMaskElement.prototype.getMaskProperty = function(pos){\r\n    return this.viewData[pos].prop;\r\n};\r\n\r\nMaskElement.prototype.renderFrame = function (isFirstFrame) {\r\n    var finalMat = this.element.finalTransform.mat;\r\n    var i, len = this.masksProperties.length;\r\n    for (i = 0; i < len; i++) {\r\n        if(this.viewData[i].prop._mdf || isFirstFrame){\r\n            this.drawPath(this.masksProperties[i],this.viewData[i].prop.v,this.viewData[i]);\r\n        }\r\n        if(this.viewData[i].op._mdf || isFirstFrame){\r\n            this.viewData[i].elem.setAttribute('fill-opacity',this.viewData[i].op.v);\r\n        }\r\n        if(this.masksProperties[i].mode !== 'n'){\r\n            if(this.viewData[i].invRect && (this.element.finalTransform.mProp._mdf || isFirstFrame)){\r\n                this.viewData[i].invRect.setAttribute('transform', finalMat.getInverseMatrix().to2dCSS())\r\n            }\r\n            if(this.storedData[i].x && (this.storedData[i].x._mdf || isFirstFrame)){\r\n                var feMorph = this.storedData[i].expan;\r\n                if(this.storedData[i].x.v < 0){\r\n                    if(this.storedData[i].lastOperator !== 'erode'){\r\n                        this.storedData[i].lastOperator = 'erode';\r\n                        this.storedData[i].elem.setAttribute('filter','url(' + locationHref + '#'+this.storedData[i].filterId+')');\r\n                    }\r\n                    feMorph.setAttribute('radius',-this.storedData[i].x.v);\r\n                }else{\r\n                    if(this.storedData[i].lastOperator !== 'dilate'){\r\n                        this.storedData[i].lastOperator = 'dilate';\r\n                        this.storedData[i].elem.setAttribute('filter',null);\r\n                    }\r\n                    this.storedData[i].elem.setAttribute('stroke-width', this.storedData[i].x.v*2);\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nMaskElement.prototype.getMaskelement = function () {\r\n    return this.maskElement;\r\n};\r\n\r\nMaskElement.prototype.createLayerSolidPath = function(){\r\n    var path = 'M0,0 ';\r\n    path += ' h' + this.globalData.compSize.w ;\r\n    path += ' v' + this.globalData.compSize.h ;\r\n    path += ' h-' + this.globalData.compSize.w ;\r\n    path += ' v-' + this.globalData.compSize.h + ' ';\r\n    return path;\r\n};\r\n\r\nMaskElement.prototype.drawPath = function(pathData,pathNodes,viewData){\r\n    var pathString = \" M\"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    var i, len;\r\n    len = pathNodes._length;\r\n    for(i=1;i<len;i+=1){\r\n        //pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[i][0]+','+pathNodes.i[i][1] + \" \"+pathNodes.v[i][0]+','+pathNodes.v[i][1];\r\n        pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[i][0]+','+pathNodes.i[i][1] + \" \"+pathNodes.v[i][0]+','+pathNodes.v[i][1];\r\n    }\r\n        //pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[0][0]+','+pathNodes.i[0][1] + \" \"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    if(pathNodes.c && len > 1){\r\n        pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[0][0]+','+pathNodes.i[0][1] + \" \"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    }\r\n    //pathNodes.__renderedString = pathString;\r\n\r\n    if(viewData.lastPath !== pathString){\r\n        var pathShapeValue = '';\r\n        if(viewData.elem){\r\n            if(pathNodes.c){\r\n                pathShapeValue = pathData.inv ? this.solidPath + pathString : pathString;\r\n            }\r\n            viewData.elem.setAttribute('d',pathShapeValue);\r\n        }\r\n        viewData.lastPath = pathString;\r\n    }\r\n};\r\n\r\nMaskElement.prototype.destroy = function(){\r\n    this.element = null;\r\n    this.globalData = null;\r\n    this.maskElement = null;\r\n    this.data = null;\r\n    this.masksProperties = null;\r\n};\r\n\r\n/**\r\n * @file \r\n * Handles AE's layer parenting property.\r\n *\r\n */\r\n\r\nfunction HierarchyElement(){}\r\n\r\nHierarchyElement.prototype = {\r\n\t/**\r\n     * @function \r\n     * Initializes hierarchy properties\r\n     *\r\n     */\r\n\tinitHierarchy: function() {\r\n\t\t//element's parent list\r\n\t    this.hierarchy = [];\r\n\t    //if element is parent of another layer _isParent will be true\r\n\t    this._isParent = false;\r\n\t    this.checkParenting();\r\n\t},\r\n\t/**\r\n     * @function \r\n     * Sets layer's hierarchy.\r\n     * @param {array} hierarch\r\n     * layer's parent list\r\n     *\r\n     */ \r\n\tsetHierarchy: function(hierarchy){\r\n\t    this.hierarchy = hierarchy;\r\n\t},\r\n\t/**\r\n     * @function \r\n     * Sets layer as parent.\r\n     *\r\n     */ \r\n\tsetAsParent: function() {\r\n\t    this._isParent = true;\r\n\t},\r\n\t/**\r\n     * @function \r\n     * Searches layer's parenting chain\r\n     *\r\n     */ \r\n\tcheckParenting: function(){\r\n\t    if (this.data.parent !== undefined){\r\n\t        this.comp.buildElementParenting(this, this.data.parent, []);\r\n\t    }\r\n\t}\r\n};\r\n/**\r\n * @file \r\n * Handles element's layer frame update.\r\n * Checks layer in point and out point\r\n *\r\n */\r\n\r\nfunction FrameElement(){}\r\n\r\nFrameElement.prototype = {\r\n    /**\r\n     * @function \r\n     * Initializes frame related properties.\r\n     *\r\n     */\r\n    initFrame: function(){\r\n        //set to true when inpoint is rendered\r\n        this._isFirstFrame = false;\r\n        //list of animated properties\r\n        this.dynamicProperties = [];\r\n        // If layer has been modified in current tick this will be true\r\n        this._mdf = false;\r\n    },\r\n    /**\r\n     * @function \r\n     * Calculates all dynamic values\r\n     *\r\n     * @param {number} num\r\n     * current frame number in Layer's time\r\n     * @param {boolean} isVisible\r\n     * if layers is currently in range\r\n     * \r\n     */\r\n    prepareProperties: function(num, isVisible) {\r\n        var i, len = this.dynamicProperties.length;\r\n        for (i = 0;i < len; i += 1) {\r\n            if (isVisible || (this._isParent && this.dynamicProperties[i].propType === 'transform')) {\r\n                this.dynamicProperties[i].getValue();\r\n                if (this.dynamicProperties[i]._mdf) {\r\n                    this.globalData._mdf = true;\r\n                    this._mdf = true;\r\n                }\r\n            }\r\n        }\r\n    },\r\n    addDynamicProperty: function(prop) {\r\n        if(this.dynamicProperties.indexOf(prop) === -1) {\r\n            this.dynamicProperties.push(prop);\r\n        }\r\n    }\r\n};\r\nfunction TransformElement(){}\r\n\r\nTransformElement.prototype = {\r\n    initTransform: function() {\r\n        this.finalTransform = {\r\n            mProp: this.data.ks ? TransformPropertyFactory.getTransformProperty(this, this.data.ks, this) : {o:0},\r\n            _matMdf: false,\r\n            _opMdf: false,\r\n            mat: new Matrix()\r\n        };\r\n        if (this.data.ao) {\r\n            this.finalTransform.mProp.autoOriented = true;\r\n        }\r\n\r\n        //TODO: check TYPE 11: Guided elements\r\n        if (this.data.ty !== 11) {\r\n            //this.createElements();\r\n        }\r\n    },\r\n    renderTransform: function() {\r\n\r\n        this.finalTransform._opMdf = this.finalTransform.mProp.o._mdf || this._isFirstFrame;\r\n        this.finalTransform._matMdf = this.finalTransform.mProp._mdf || this._isFirstFrame;\r\n\r\n        if (this.hierarchy) {\r\n            var mat;\r\n            var finalMat = this.finalTransform.mat;\r\n            var i = 0, len = this.hierarchy.length;\r\n            //Checking if any of the transformation matrices in the hierarchy chain has changed.\r\n            if (!this.finalTransform._matMdf) {\r\n                while (i < len) {\r\n                    if (this.hierarchy[i].finalTransform.mProp._mdf) {\r\n                        this.finalTransform._matMdf = true;\r\n                        break;\r\n                    }\r\n                    i += 1;\r\n                }\r\n            }\r\n            \r\n            if (this.finalTransform._matMdf) {\r\n                mat = this.finalTransform.mProp.v.props;\r\n                finalMat.cloneFromProps(mat);\r\n                for (i = 0; i < len; i += 1) {\r\n                    mat = this.hierarchy[i].finalTransform.mProp.v.props;\r\n                    finalMat.transform(mat[0], mat[1], mat[2], mat[3], mat[4], mat[5], mat[6], mat[7], mat[8], mat[9], mat[10], mat[11], mat[12], mat[13], mat[14], mat[15]);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    globalToLocal: function(pt) {\r\n        var transforms = [];\r\n        transforms.push(this.finalTransform);\r\n        var flag = true;\r\n        var comp = this.comp;\r\n        while (flag) {\r\n            if (comp.finalTransform) {\r\n                if (comp.data.hasMask) {\r\n                    transforms.splice(0, 0, comp.finalTransform);\r\n                }\r\n                comp = comp.comp;\r\n            } else {\r\n                flag = false;\r\n            }\r\n        }\r\n        var i, len = transforms.length,ptNew;\r\n        for (i = 0; i < len; i += 1) {\r\n            ptNew = transforms[i].mat.applyToPointArray(0, 0, 0);\r\n            //ptNew = transforms[i].mat.applyToPointArray(pt[0],pt[1],pt[2]);\r\n            pt = [pt[0] - ptNew[0], pt[1] - ptNew[1], 0];\r\n        }\r\n        return pt;\r\n    },\r\n    mHelper: new Matrix()\r\n};\r\nfunction RenderableElement(){\r\n\r\n}\r\n\r\nRenderableElement.prototype = {\r\n    initRenderable: function() {\r\n        //layer's visibility related to inpoint and outpoint. Rename isVisible to isInRange\r\n        this.isInRange = false;\r\n        //layer's display state\r\n        this.hidden = false;\r\n        // If layer's transparency equals 0, it can be hidden\r\n        this.isTransparent = false;\r\n        //list of animated components\r\n        this.renderableComponents = [];\r\n    },\r\n    addRenderableComponent: function(component) {\r\n        if(this.renderableComponents.indexOf(component) === -1) {\r\n            this.renderableComponents.push(component);\r\n        }\r\n    },\r\n    removeRenderableComponent: function(component) {\r\n        if(this.renderableComponents.indexOf(component) !== -1) {\r\n            this.renderableComponents.splice(this.renderableComponents.indexOf(component), 1);\r\n        }\r\n    },\r\n    prepareRenderableFrame: function(num) {\r\n        this.checkLayerLimits(num);\r\n    },\r\n    checkTransparency: function(){\r\n        if(this.finalTransform.mProp.o.v <= 0) {\r\n            if(!this.isTransparent && this.globalData.renderConfig.hideOnTransparent){\r\n                this.isTransparent = true;\r\n                this.hide();\r\n            }\r\n        } else if(this.isTransparent) {\r\n            this.isTransparent = false;\r\n            this.show();\r\n        }\r\n    },\r\n    /**\r\n     * @function \r\n     * Initializes frame related properties.\r\n     *\r\n     * @param {number} num\r\n     * current frame number in Layer's time\r\n     * \r\n     */\r\n    checkLayerLimits: function(num) {\r\n        if(this.data.ip - this.data.st <= num && this.data.op - this.data.st > num)\r\n        {\r\n            if(this.isInRange !== true){\r\n                this.globalData._mdf = true;\r\n                this._mdf = true;\r\n                this.isInRange = true;\r\n                this.show();\r\n            }\r\n        } else {\r\n            if(this.isInRange !== false){\r\n                this.globalData._mdf = true;\r\n                this.isInRange = false;\r\n                this.hide();\r\n            }\r\n        }\r\n    },\r\n    renderRenderable: function() {\r\n        var i, len = this.renderableComponents.length;\r\n        for(i = 0; i < len; i += 1) {\r\n            this.renderableComponents[i].renderFrame(this._isFirstFrame);\r\n        }\r\n        /*this.maskManager.renderFrame(this.finalTransform.mat);\r\n        this.renderableEffectsManager.renderFrame(this._isFirstFrame);*/\r\n    },\r\n    sourceRectAtTime: function(){\r\n        return {\r\n            top:0,\r\n            left:0,\r\n            width:100,\r\n            height:100\r\n        };\r\n    },\r\n    getLayerSize: function(){\r\n        if(this.data.ty === 5){\r\n            return {w:this.data.textData.width,h:this.data.textData.height};\r\n        }else{\r\n            return {w:this.data.width,h:this.data.height};\r\n        }\r\n    }\r\n};\r\nfunction RenderableDOMElement() {}\r\n\r\n(function(){\r\n    var _prototype = {\r\n        initElement: function(data,globalData,comp) {\r\n            this.initFrame();\r\n            this.initBaseData(data, globalData, comp);\r\n            this.initTransform(data, globalData, comp);\r\n            this.initHierarchy();\r\n            this.initRenderable();\r\n            this.initRendererElement();\r\n            this.createContainerElements();\r\n            this.createRenderableComponents();\r\n            this.createContent();\r\n            this.hide();\r\n        },\r\n        hide: function(){\r\n            if (!this.hidden && (!this.isInRange || this.isTransparent)) {\r\n                var elem = this.baseElement || this.layerElement;\r\n                elem.style.display = 'none';\r\n                this.hidden = true;\r\n            }\r\n        },\r\n        show: function(){\r\n            if (this.isInRange && !this.isTransparent){\r\n                if (!this.data.hd) {\r\n                    var elem = this.baseElement || this.layerElement;\r\n                    elem.style.display = 'block';\r\n                }\r\n                this.hidden = false;\r\n                this._isFirstFrame = true;\r\n            }\r\n        },\r\n        renderFrame: function() {\r\n            //If it is exported as hidden (data.hd === true) no need to render\r\n            //If it is not visible no need to render\r\n            if (this.data.hd || this.hidden) {\r\n                return;\r\n            }\r\n            this.renderTransform();\r\n            this.renderRenderable();\r\n            this.renderElement();\r\n            this.renderInnerContent();\r\n            if (this._isFirstFrame) {\r\n                this._isFirstFrame = false;\r\n            }\r\n        },\r\n        renderInnerContent: function() {},\r\n        prepareFrame: function(num) {\r\n            this._mdf = false;\r\n            this.prepareRenderableFrame(num);\r\n            this.prepareProperties(num, this.isInRange);\r\n            this.checkTransparency();\r\n        },\r\n        destroy: function(){\r\n            this.innerElem =  null;\r\n            this.destroyBaseElement();\r\n        }\r\n    };\r\n    extendPrototype([RenderableElement, createProxyFunction(_prototype)], RenderableDOMElement);\r\n}());\r\nfunction ProcessedElement(element, position) {\r\n\tthis.elem = element;\r\n\tthis.pos = position;\r\n}\r\nfunction SVGStyleData(data, level) {\r\n\tthis.data = data;\r\n\tthis.type = data.ty;\r\n\tthis.d = '';\r\n\tthis.lvl = level;\r\n\tthis._mdf = false;\r\n\tthis.closed = data.hd === true;\r\n\tthis.pElem = createNS('path');\r\n\tthis.msElem = null;\r\n}\r\n\r\nSVGStyleData.prototype.reset = function() {\r\n\tthis.d = '';\r\n\tthis._mdf = false;\r\n};\r\nfunction SVGShapeData(transformers, level, shape) {\r\n    this.caches = [];\r\n    this.styles = [];\r\n    this.transformers = transformers;\r\n    this.lStr = '';\r\n    this.sh = shape;\r\n    this.lvl = level;\r\n    //TODO find if there are some cases where _isAnimated can be false. \r\n    // For now, since shapes add up with other shapes. They have to be calculated every time.\r\n    // One way of finding out is checking if all styles associated to this shape depend only of this shape\r\n    this._isAnimated = !!shape.k;\r\n    // TODO: commenting this for now since all shapes are animated\r\n    var i = 0, len = transformers.length;\r\n    while(i < len) {\r\n    \tif(transformers[i].mProps.dynamicProperties.length) {\r\n    \t\tthis._isAnimated = true;\r\n    \t\tbreak;\r\n    \t}\r\n    \ti += 1;\r\n    }\r\n}\r\n\r\nSVGShapeData.prototype.setAsAnimated = function() {\r\n    this._isAnimated = true;\r\n}\r\nfunction SVGTransformData(mProps, op, container) {\r\n\tthis.transform = {\r\n\t\tmProps: mProps,\r\n\t\top: op,\r\n\t\tcontainer: container\r\n\t};\r\n\tthis.elements = [];\r\n    this._isAnimated = this.transform.mProps.dynamicProperties.length || this.transform.op.effectsSequence.length;\r\n}\r\nfunction SVGStrokeStyleData(elem, data, styleOb){\r\n\tthis.initDynamicPropertyContainer(elem);\r\n\tthis.getValue = this.iterateDynamicProperties;\r\n\tthis.o = PropertyFactory.getProp(elem,data.o,0,0.01,this);\r\n\tthis.w = PropertyFactory.getProp(elem,data.w,0,null,this);\r\n\tthis.d = new DashProperty(elem,data.d||{},'svg',this);\r\n\tthis.c = PropertyFactory.getProp(elem,data.c,1,255,this);\r\n\tthis.style = styleOb;\r\n    this._isAnimated = !!this._isAnimated;\r\n}\r\n\r\nextendPrototype([DynamicPropertyContainer], SVGStrokeStyleData);\r\nfunction SVGFillStyleData(elem, data, styleOb){\r\n\tthis.initDynamicPropertyContainer(elem);\r\n\tthis.getValue = this.iterateDynamicProperties;\r\n\tthis.o = PropertyFactory.getProp(elem,data.o,0,0.01,this);\r\n\tthis.c = PropertyFactory.getProp(elem,data.c,1,255,this);\r\n\tthis.style = styleOb;\r\n}\r\n\r\nextendPrototype([DynamicPropertyContainer], SVGFillStyleData);\r\nfunction SVGGradientFillStyleData(elem, data, styleOb){\r\n    this.initDynamicPropertyContainer(elem);\r\n    this.getValue = this.iterateDynamicProperties;\r\n    this.initGradientData(elem, data, styleOb);\r\n}\r\n\r\nSVGGradientFillStyleData.prototype.initGradientData = function(elem, data, styleOb){\r\n    this.o = PropertyFactory.getProp(elem,data.o,0,0.01,this);\r\n    this.s = PropertyFactory.getProp(elem,data.s,1,null,this);\r\n    this.e = PropertyFactory.getProp(elem,data.e,1,null,this);\r\n    this.h = PropertyFactory.getProp(elem,data.h||{k:0},0,0.01,this);\r\n    this.a = PropertyFactory.getProp(elem,data.a||{k:0},0,degToRads,this);\r\n    this.g = new GradientProperty(elem,data.g,this);\r\n    this.style = styleOb;\r\n    this.stops = [];\r\n    this.setGradientData(styleOb.pElem, data);\r\n    this.setGradientOpacity(data, styleOb);\r\n    this._isAnimated = !!this._isAnimated;\r\n\r\n};\r\n\r\nSVGGradientFillStyleData.prototype.setGradientData = function(pathElement,data){\r\n\r\n    var gradientId = createElementID();\r\n    var gfill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');\r\n    gfill.setAttribute('id',gradientId);\r\n    gfill.setAttribute('spreadMethod','pad');\r\n    gfill.setAttribute('gradientUnits','userSpaceOnUse');\r\n    var stops = [];\r\n    var stop, j, jLen;\r\n    jLen = data.g.p*4;\r\n    for(j=0;j<jLen;j+=4){\r\n        stop = createNS('stop');\r\n        gfill.appendChild(stop);\r\n        stops.push(stop);\r\n    }\r\n    pathElement.setAttribute( data.ty === 'gf' ? 'fill':'stroke','url(' + locationHref + '#'+gradientId+')');\r\n    \r\n    this.gf = gfill;\r\n    this.cst = stops;\r\n};\r\n\r\nSVGGradientFillStyleData.prototype.setGradientOpacity = function(data, styleOb){\r\n    if(this.g._hasOpacity && !this.g._collapsable){\r\n        var stop, j, jLen;\r\n        var mask = createNS(\"mask\");\r\n        var maskElement = createNS( 'path');\r\n        mask.appendChild(maskElement);\r\n        var opacityId = createElementID();\r\n        var maskId = createElementID();\r\n        mask.setAttribute('id',maskId);\r\n        var opFill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');\r\n        opFill.setAttribute('id',opacityId);\r\n        opFill.setAttribute('spreadMethod','pad');\r\n        opFill.setAttribute('gradientUnits','userSpaceOnUse');\r\n        jLen = data.g.k.k[0].s ? data.g.k.k[0].s.length : data.g.k.k.length;\r\n        var stops = this.stops;\r\n        for(j=data.g.p*4;j<jLen;j+=2){\r\n            stop = createNS('stop');\r\n            stop.setAttribute('stop-color','rgb(255,255,255)');\r\n            opFill.appendChild(stop);\r\n            stops.push(stop);\r\n        }\r\n        maskElement.setAttribute( data.ty === 'gf' ? 'fill':'stroke','url(' + locationHref + '#'+opacityId+')');\r\n        this.of = opFill;\r\n        this.ms = mask;\r\n        this.ost = stops;\r\n        this.maskId = maskId;\r\n        styleOb.msElem = maskElement;\r\n    }\r\n};\r\n\r\nextendPrototype([DynamicPropertyContainer], SVGGradientFillStyleData);\r\nfunction SVGGradientStrokeStyleData(elem, data, styleOb){\r\n\tthis.initDynamicPropertyContainer(elem);\r\n\tthis.getValue = this.iterateDynamicProperties;\r\n\tthis.w = PropertyFactory.getProp(elem,data.w,0,null,this);\r\n\tthis.d = new DashProperty(elem,data.d||{},'svg',this);\r\n    this.initGradientData(elem, data, styleOb);\r\n    this._isAnimated = !!this._isAnimated;\r\n}\r\n\r\nextendPrototype([SVGGradientFillStyleData, DynamicPropertyContainer], SVGGradientStrokeStyleData);\r\nfunction ShapeGroupData() {\r\n\tthis.it = [];\r\n    this.prevViewData = [];\r\n    this.gr = createNS('g');\r\n}\r\nvar SVGElementsRenderer = (function() {\r\n\tvar _identityMatrix = new Matrix();\r\n\tvar _matrixHelper = new Matrix();\r\n\r\n\tvar ob = {\r\n\t\tcreateRenderFunction: createRenderFunction\r\n\t}\r\n\r\n\tfunction createRenderFunction(data) {\r\n\t    var ty = data.ty;\r\n\t    switch(data.ty) {\r\n\t        case 'fl':\r\n\t        return renderFill;\r\n\t        case 'gf':\r\n\t        return renderGradient;\r\n\t        case 'gs':\r\n\t        return renderGradientStroke;\r\n\t        case 'st':\r\n\t        return renderStroke;\r\n\t        case 'sh':\r\n\t        case 'el':\r\n\t        case 'rc':\r\n\t        case 'sr':\r\n\t        return renderPath;\r\n\t        case 'tr':\r\n\t        return renderContentTransform;\r\n\t    }\r\n\t}\r\n\r\n\tfunction renderContentTransform(styleData, itemData, isFirstFrame) {\r\n\t    if(isFirstFrame || itemData.transform.op._mdf){\r\n\t        itemData.transform.container.setAttribute('opacity',itemData.transform.op.v);\r\n\t    }\r\n\t    if(isFirstFrame || itemData.transform.mProps._mdf){\r\n\t        itemData.transform.container.setAttribute('transform',itemData.transform.mProps.v.to2dCSS());\r\n\t    }\r\n\t}\r\n\r\n\tfunction renderPath(styleData, itemData, isFirstFrame) {\r\n\t    var j, jLen,pathStringTransformed,redraw,pathNodes,l, lLen = itemData.styles.length;\r\n\t    var lvl = itemData.lvl;\r\n\t    var paths, mat, props, iterations, k;\r\n\t    for(l=0;l<lLen;l+=1){\r\n\t        redraw = itemData.sh._mdf || isFirstFrame;\r\n\t        if(itemData.styles[l].lvl < lvl){\r\n\t            mat = _matrixHelper.reset();\r\n\t            iterations = lvl - itemData.styles[l].lvl;\r\n\t            k = itemData.transformers.length-1;\r\n\t            while(!redraw && iterations > 0) {\r\n\t                redraw = itemData.transformers[k].mProps._mdf || redraw;\r\n\t                iterations --;\r\n\t                k --;\r\n\t            }\r\n\t            if(redraw) {\r\n\t                iterations = lvl - itemData.styles[l].lvl;\r\n\t                k = itemData.transformers.length-1;\r\n\t                while(iterations > 0) {\r\n\t                    props = itemData.transformers[k].mProps.v.props;\r\n\t                    mat.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\r\n\t                    iterations --;\r\n\t                    k --;\r\n\t                }\r\n\t            }\r\n\t        } else {\r\n\t            mat = _identityMatrix;\r\n\t        }\r\n\t        paths = itemData.sh.paths;\r\n\t        jLen = paths._length;\r\n\t        if(redraw){\r\n\t            pathStringTransformed = '';\r\n\t            for(j=0;j<jLen;j+=1){\r\n\t                pathNodes = paths.shapes[j];\r\n\t                if(pathNodes && pathNodes._length){\r\n\t                    pathStringTransformed += buildShapeString(pathNodes, pathNodes._length, pathNodes.c, mat);\r\n\t                }\r\n\t            }\r\n\t            itemData.caches[l] = pathStringTransformed;\r\n\t        } else {\r\n\t            pathStringTransformed = itemData.caches[l];\r\n\t        }\r\n\t        itemData.styles[l].d += styleData.hd === true ? '' : pathStringTransformed;\r\n\t        itemData.styles[l]._mdf = redraw || itemData.styles[l]._mdf;\r\n\t    }\r\n\t}\r\n\r\n\tfunction renderFill (styleData,itemData, isFirstFrame){\r\n\t    var styleElem = itemData.style;\r\n\r\n\t    if(itemData.c._mdf || isFirstFrame){\r\n\t        styleElem.pElem.setAttribute('fill','rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')');\r\n\t    }\r\n\t    if(itemData.o._mdf || isFirstFrame){\r\n\t        styleElem.pElem.setAttribute('fill-opacity',itemData.o.v);\r\n\t    }\r\n\t};\r\n\r\n\tfunction renderGradientStroke (styleData, itemData, isFirstFrame) {\r\n\t    renderGradient(styleData, itemData, isFirstFrame);\r\n\t    renderStroke(styleData, itemData, isFirstFrame);\r\n\t}\r\n\r\n\tfunction renderGradient(styleData, itemData, isFirstFrame) {\r\n\t    var gfill = itemData.gf;\r\n\t    var hasOpacity = itemData.g._hasOpacity;\r\n\t    var pt1 = itemData.s.v, pt2 = itemData.e.v;\r\n\r\n\t    if (itemData.o._mdf || isFirstFrame) {\r\n\t        var attr = styleData.ty === 'gf' ? 'fill-opacity' : 'stroke-opacity';\r\n\t        itemData.style.pElem.setAttribute(attr, itemData.o.v);\r\n\t    }\r\n\t    if (itemData.s._mdf || isFirstFrame) {\r\n\t        var attr1 = styleData.t === 1 ? 'x1' : 'cx';\r\n\t        var attr2 = attr1 === 'x1' ? 'y1' : 'cy';\r\n\t        gfill.setAttribute(attr1, pt1[0]);\r\n\t        gfill.setAttribute(attr2, pt1[1]);\r\n\t        if (hasOpacity && !itemData.g._collapsable) {\r\n\t            itemData.of.setAttribute(attr1, pt1[0]);\r\n\t            itemData.of.setAttribute(attr2, pt1[1]);\r\n\t        }\r\n\t    }\r\n\t    var stops, i, len, stop;\r\n\t    if (itemData.g._cmdf || isFirstFrame) {\r\n\t        stops = itemData.cst;\r\n\t        var cValues = itemData.g.c;\r\n\t        len = stops.length;\r\n\t        for (i = 0; i < len; i += 1){\r\n\t            stop = stops[i];\r\n\t            stop.setAttribute('offset', cValues[i * 4] + '%');\r\n\t            stop.setAttribute('stop-color','rgb('+ cValues[i * 4 + 1] + ',' + cValues[i * 4 + 2] + ','+cValues[i * 4 + 3] + ')');\r\n\t        }\r\n\t    }\r\n\t    if (hasOpacity && (itemData.g._omdf || isFirstFrame)) {\r\n\t        var oValues = itemData.g.o;\r\n\t        if(itemData.g._collapsable) {\r\n\t            stops = itemData.cst;\r\n\t        } else {\r\n\t            stops = itemData.ost;\r\n\t        }\r\n\t        len = stops.length;\r\n\t        for (i = 0; i < len; i += 1) {\r\n\t            stop = stops[i];\r\n\t            if(!itemData.g._collapsable) {\r\n\t                stop.setAttribute('offset', oValues[i * 2] + '%');\r\n\t            }\r\n\t            stop.setAttribute('stop-opacity', oValues[i * 2 + 1]);\r\n\t        }\r\n\t    }\r\n\t    if (styleData.t === 1) {\r\n\t        if (itemData.e._mdf  || isFirstFrame) {\r\n\t            gfill.setAttribute('x2', pt2[0]);\r\n\t            gfill.setAttribute('y2', pt2[1]);\r\n\t            if (hasOpacity && !itemData.g._collapsable) {\r\n\t                itemData.of.setAttribute('x2', pt2[0]);\r\n\t                itemData.of.setAttribute('y2', pt2[1]);\r\n\t            }\r\n\t        }\r\n\t    } else {\r\n\t        var rad;\r\n\t        if (itemData.s._mdf || itemData.e._mdf || isFirstFrame) {\r\n\t            rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\r\n\t            gfill.setAttribute('r', rad);\r\n\t            if(hasOpacity && !itemData.g._collapsable){\r\n\t                itemData.of.setAttribute('r', rad);\r\n\t            }\r\n\t        }\r\n\t        if (itemData.e._mdf || itemData.h._mdf || itemData.a._mdf || isFirstFrame) {\r\n\t            if (!rad) {\r\n\t                rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\r\n\t            }\r\n\t            var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);\r\n\r\n\t            var percent = itemData.h.v >= 1 ? 0.99 : itemData.h.v <= -1 ? -0.99: itemData.h.v;\r\n\t            var dist = rad * percent;\r\n\t            var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];\r\n\t            var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];\r\n\t            gfill.setAttribute('fx', x);\r\n\t            gfill.setAttribute('fy', y);\r\n\t            if (hasOpacity && !itemData.g._collapsable) {\r\n\t                itemData.of.setAttribute('fx', x);\r\n\t                itemData.of.setAttribute('fy', y);\r\n\t            }\r\n\t        }\r\n\t        //gfill.setAttribute('fy','200');\r\n\t    }\r\n\t};\r\n\r\n\tfunction renderStroke(styleData, itemData, isFirstFrame) {\r\n\t    var styleElem = itemData.style;\r\n\t    var d = itemData.d;\r\n\t    if (d && (d._mdf || isFirstFrame) && d.dashStr) {\r\n\t        styleElem.pElem.setAttribute('stroke-dasharray', d.dashStr);\r\n\t        styleElem.pElem.setAttribute('stroke-dashoffset', d.dashoffset[0]);\r\n\t    }\r\n\t    if(itemData.c && (itemData.c._mdf || isFirstFrame)){\r\n\t        styleElem.pElem.setAttribute('stroke','rgb(' + bm_floor(itemData.c.v[0]) + ',' + bm_floor(itemData.c.v[1]) + ',' + bm_floor(itemData.c.v[2]) + ')');\r\n\t    }\r\n\t    if(itemData.o._mdf || isFirstFrame){\r\n\t        styleElem.pElem.setAttribute('stroke-opacity', itemData.o.v);\r\n\t    }\r\n\t    if(itemData.w._mdf || isFirstFrame){\r\n\t        styleElem.pElem.setAttribute('stroke-width', itemData.w.v);\r\n\t        if(styleElem.msElem){\r\n\t            styleElem.msElem.setAttribute('stroke-width', itemData.w.v);\r\n\t        }\r\n\t    }\r\n\t};\r\n\r\n\treturn ob;\r\n}())\r\nfunction ShapeTransformManager() {\r\n\tthis.sequences = {};\r\n\tthis.sequenceList = [];\r\n    this.transform_key_count = 0;\r\n}\r\n\r\nShapeTransformManager.prototype = {\r\n\taddTransformSequence: function(transforms) {\r\n\t\tvar i, len = transforms.length;\r\n\t\tvar key = '_';\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tkey += transforms[i].transform.key + '_';\r\n\t\t}\r\n\t\tvar sequence = this.sequences[key];\r\n\t\tif(!sequence) {\r\n\t\t\tsequence = {\r\n\t\t\t\ttransforms: [].concat(transforms),\r\n\t\t\t\tfinalTransform: new Matrix(),\r\n\t\t\t\t_mdf: false\r\n\t\t\t};\r\n\t\t\tthis.sequences[key] = sequence;\r\n\t\t\tthis.sequenceList.push(sequence);\r\n\t\t}\r\n\t\treturn sequence;\r\n\t},\r\n\tprocessSequence: function(sequence, isFirstFrame) {\r\n\t\tvar i = 0, len = sequence.transforms.length, _mdf = isFirstFrame;\r\n\t\twhile (i < len && !isFirstFrame) {\r\n\t\t\tif (sequence.transforms[i].transform.mProps._mdf) {\r\n\t\t\t\t_mdf = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\ti += 1\r\n\t\t}\r\n\t\tif (_mdf) {\r\n\t\t\tvar props;\r\n\t\t\tsequence.finalTransform.reset();\r\n\t\t\tfor (i = len - 1; i >= 0; i -= 1) {\r\n\t\t        props = sequence.transforms[i].transform.mProps.v.props;\r\n\t\t        sequence.finalTransform.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tsequence._mdf = _mdf;\r\n\t\t\r\n\t},\r\n\tprocessSequences: function(isFirstFrame) {\r\n\t\tvar i, len = this.sequenceList.length;\r\n\t\tfor (i = 0; i < len; i += 1) {\r\n\t\t\tthis.processSequence(this.sequenceList[i], isFirstFrame);\r\n\t\t}\r\n\r\n\t},\r\n\tgetNewKey: function() {\r\n\t\treturn '_' + this.transform_key_count++;\r\n\t}\r\n}\r\nfunction CVShapeData(element, data, styles, transformsManager) {\r\n    this.styledShapes = [];\r\n    this.tr = [0,0,0,0,0,0];\r\n    var ty = 4;\r\n    if(data.ty == 'rc'){\r\n        ty = 5;\r\n    }else if(data.ty == 'el'){\r\n        ty = 6;\r\n    }else if(data.ty == 'sr'){\r\n        ty = 7;\r\n    }\r\n    this.sh = ShapePropertyFactory.getShapeProp(element,data,ty,element);\r\n    var i , len = styles.length,styledShape;\r\n    for (i = 0; i < len; i += 1) {\r\n        if (!styles[i].closed) {\r\n            styledShape = {\r\n                transforms: transformsManager.addTransformSequence(styles[i].transforms),\r\n                trNodes: []\r\n            }\r\n            this.styledShapes.push(styledShape);\r\n            styles[i].elements.push(styledShape);\r\n        }\r\n    }\r\n}\r\n\r\nCVShapeData.prototype.setAsAnimated = SVGShapeData.prototype.setAsAnimated;\r\nfunction BaseElement(){\r\n}\r\n\r\nBaseElement.prototype = {\r\n    checkMasks: function(){\r\n        if(!this.data.hasMask){\r\n            return false;\r\n        }\r\n        var i = 0, len = this.data.masksProperties.length;\r\n        while(i<len) {\r\n            if((this.data.masksProperties[i].mode !== 'n' && this.data.masksProperties[i].cl !== false)) {\r\n                return true;\r\n            }\r\n            i += 1;\r\n        }\r\n        return false;\r\n    },\r\n    initExpressions: function(){\r\n        this.layerInterface = LayerExpressionInterface(this);\r\n        if(this.data.hasMask && this.maskManager) {\r\n            this.layerInterface.registerMaskInterface(this.maskManager);\r\n        }\r\n        var effectsInterface = EffectsExpressionInterface.createEffectsInterface(this,this.layerInterface);\r\n        this.layerInterface.registerEffectsInterface(effectsInterface);\r\n\r\n        if(this.data.ty === 0 || this.data.xt){\r\n            this.compInterface = CompExpressionInterface(this);\r\n        } else if(this.data.ty === 4){\r\n            this.layerInterface.shapeInterface = ShapeExpressionInterface(this.shapesData,this.itemsData,this.layerInterface);\r\n            this.layerInterface.content = this.layerInterface.shapeInterface;\r\n        } else if(this.data.ty === 5){\r\n            this.layerInterface.textInterface = TextExpressionInterface(this);\r\n            this.layerInterface.text = this.layerInterface.textInterface;\r\n        }\r\n    },\r\n    setBlendMode: function(){\r\n        var blendModeValue = getBlendMode(this.data.bm);\r\n        var elem = this.baseElement || this.layerElement;\r\n\r\n        elem.style['mix-blend-mode'] = blendModeValue;\r\n    },\r\n    initBaseData: function(data, globalData, comp){\r\n        this.globalData = globalData;\r\n        this.comp = comp;\r\n        this.data = data;\r\n        this.layerId = createElementID();\r\n        \r\n        //Stretch factor for old animations missing this property.\r\n        if(!this.data.sr){\r\n            this.data.sr = 1;\r\n        }\r\n        // effects manager\r\n        this.effectsManager = new EffectsManager(this.data,this,this.dynamicProperties);\r\n        \r\n    },\r\n    getType: function(){\r\n        return this.type;\r\n    }\r\n    ,sourceRectAtTime: function(){}\r\n}\r\nfunction NullElement(data,globalData,comp){\r\n    this.initFrame();\r\n\tthis.initBaseData(data, globalData, comp);\r\n    this.initFrame();\r\n    this.initTransform(data, globalData, comp);\r\n    this.initHierarchy();\r\n}\r\n\r\nNullElement.prototype.prepareFrame = function(num) {\r\n    this.prepareProperties(num, true);\r\n};\r\n\r\nNullElement.prototype.renderFrame = function() {\r\n};\r\n\r\nNullElement.prototype.getBaseElement = function() {\r\n\treturn null;\r\n};\r\n\r\nNullElement.prototype.destroy = function() {\r\n};\r\n\r\nNullElement.prototype.sourceRectAtTime = function() {\r\n};\r\n\r\nNullElement.prototype.hide = function() {\r\n};\r\n\r\nextendPrototype([BaseElement,TransformElement,HierarchyElement,FrameElement], NullElement);\r\n\r\nfunction SVGBaseElement(){\r\n}\r\n\r\nSVGBaseElement.prototype = {\r\n    initRendererElement: function() {\r\n        this.layerElement = createNS('g');\r\n    },\r\n    createContainerElements: function(){\r\n        this.matteElement = createNS('g');\r\n        this.transformedElement = this.layerElement;\r\n        this.maskedElement = this.layerElement;\r\n        this._sizeChanged = false;\r\n        var layerElementParent = null;\r\n        //If this layer acts as a mask for the following layer\r\n        var filId, fil, gg;\r\n        if (this.data.td) {\r\n            if (this.data.td == 3 || this.data.td == 1) {\r\n                var masker = createNS('mask');\r\n                masker.setAttribute('id', this.layerId);\r\n                masker.setAttribute('mask-type', this.data.td == 3 ? 'luminance' : 'alpha');\r\n                masker.appendChild(this.layerElement);\r\n                layerElementParent = masker;\r\n                this.globalData.defs.appendChild(masker);\r\n                // This is only for IE and Edge when mask if of type alpha\r\n                if (!featureSupport.maskType && this.data.td == 1) {\r\n                    masker.setAttribute('mask-type', 'luminance');\r\n                    filId = createElementID();\r\n                    fil = filtersFactory.createFilter(filId);\r\n                    this.globalData.defs.appendChild(fil);\r\n                    fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\r\n                    gg = createNS('g');\r\n                    gg.appendChild(this.layerElement);\r\n                    layerElementParent = gg;\r\n                    masker.appendChild(gg);\r\n                    gg.setAttribute('filter','url(' + locationHref + '#' + filId + ')');\r\n                }\r\n            } else if(this.data.td == 2) {\r\n                var maskGroup = createNS('mask');\r\n                maskGroup.setAttribute('id', this.layerId);\r\n                maskGroup.setAttribute('mask-type','alpha');\r\n                var maskGrouper = createNS('g');\r\n                maskGroup.appendChild(maskGrouper);\r\n                filId = createElementID();\r\n                fil = filtersFactory.createFilter(filId);\r\n                ////\r\n\r\n                // This solution doesn't work on Android when meta tag with viewport attribute is set\r\n                /*var feColorMatrix = createNS('feColorMatrix');\r\n                feColorMatrix.setAttribute('type', 'matrix');\r\n                feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');\r\n                feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 -1 1');\r\n                fil.appendChild(feColorMatrix);*/\r\n                ////\r\n                var feCTr = createNS('feComponentTransfer');\r\n                feCTr.setAttribute('in','SourceGraphic');\r\n                fil.appendChild(feCTr);\r\n                var feFunc = createNS('feFuncA');\r\n                feFunc.setAttribute('type','table');\r\n                feFunc.setAttribute('tableValues','1.0 0.0');\r\n                feCTr.appendChild(feFunc);\r\n                ////\r\n                this.globalData.defs.appendChild(fil);\r\n                var alphaRect = createNS('rect');\r\n                alphaRect.setAttribute('width',  this.comp.data.w);\r\n                alphaRect.setAttribute('height', this.comp.data.h);\r\n                alphaRect.setAttribute('x','0');\r\n                alphaRect.setAttribute('y','0');\r\n                alphaRect.setAttribute('fill','#ffffff');\r\n                alphaRect.setAttribute('opacity','0');\r\n                maskGrouper.setAttribute('filter', 'url(' + locationHref + '#'+filId+')');\r\n                maskGrouper.appendChild(alphaRect);\r\n                maskGrouper.appendChild(this.layerElement);\r\n                layerElementParent = maskGrouper;\r\n                if (!featureSupport.maskType) {\r\n                    maskGroup.setAttribute('mask-type', 'luminance');\r\n                    fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\r\n                    gg = createNS('g');\r\n                    maskGrouper.appendChild(alphaRect);\r\n                    gg.appendChild(this.layerElement);\r\n                    layerElementParent = gg;\r\n                    maskGrouper.appendChild(gg);\r\n                }\r\n                this.globalData.defs.appendChild(maskGroup);\r\n            }\r\n        } else if (this.data.tt) {\r\n            this.matteElement.appendChild(this.layerElement);\r\n            layerElementParent = this.matteElement;\r\n            this.baseElement = this.matteElement;\r\n        } else {\r\n            this.baseElement = this.layerElement;\r\n        }\r\n        if (this.data.ln) {\r\n            this.layerElement.setAttribute('id', this.data.ln);\r\n        }\r\n        if (this.data.cl) {\r\n            this.layerElement.setAttribute('class', this.data.cl);\r\n        }\r\n        //Clipping compositions to hide content that exceeds boundaries. If collapsed transformations is on, component should not be clipped\r\n        if (this.data.ty === 0 && !this.data.hd) {\r\n            var cp = createNS( 'clipPath');\r\n            var pt = createNS('path');\r\n            pt.setAttribute('d','M0,0 L' + this.data.w + ',0' + ' L' + this.data.w + ',' + this.data.h + ' L0,' + this.data.h + 'z');\r\n            var clipId = createElementID();\r\n            cp.setAttribute('id',clipId);\r\n            cp.appendChild(pt);\r\n            this.globalData.defs.appendChild(cp);\r\n\r\n            if (this.checkMasks()) {\r\n                var cpGroup = createNS('g');\r\n                cpGroup.setAttribute('clip-path','url(' + locationHref + '#'+clipId + ')');\r\n                cpGroup.appendChild(this.layerElement);\r\n                this.transformedElement = cpGroup;\r\n                if (layerElementParent) {\r\n                    layerElementParent.appendChild(this.transformedElement);\r\n                } else {\r\n                    this.baseElement = this.transformedElement;\r\n                }\r\n            } else {\r\n                this.layerElement.setAttribute('clip-path','url(' + locationHref + '#'+clipId+')');\r\n            }\r\n            \r\n        }\r\n        if (this.data.bm !== 0) {\r\n            this.setBlendMode();\r\n        }\r\n\r\n    },\r\n    renderElement: function() {\r\n        if (this.finalTransform._matMdf) {\r\n            this.transformedElement.setAttribute('transform', this.finalTransform.mat.to2dCSS());\r\n        }\r\n        if (this.finalTransform._opMdf) {\r\n            this.transformedElement.setAttribute('opacity', this.finalTransform.mProp.o.v);\r\n        }\r\n    },\r\n    destroyBaseElement: function() {\r\n        this.layerElement = null;\r\n        this.matteElement = null;\r\n        this.maskManager.destroy();\r\n    },\r\n    getBaseElement: function() {\r\n        if (this.data.hd) {\r\n            return null;\r\n        }\r\n        return this.baseElement;\r\n    },\r\n    createRenderableComponents: function() {\r\n        this.maskManager = new MaskElement(this.data, this, this.globalData);\r\n        this.renderableEffectsManager = new SVGEffects(this);\r\n    },\r\n    setMatte: function(id) {\r\n        if (!this.matteElement) {\r\n            return;\r\n        }\r\n        this.matteElement.setAttribute(\"mask\", \"url(\" + locationHref + \"#\" + id + \")\");\r\n    }\r\n};\r\nfunction IShapeElement(){\r\n}\r\n\r\nIShapeElement.prototype = {\r\n    addShapeToModifiers: function(data) {\r\n        var i, len = this.shapeModifiers.length;\r\n        for(i=0;i<len;i+=1){\r\n            this.shapeModifiers[i].addShape(data);\r\n        }\r\n    },\r\n    isShapeInAnimatedModifiers: function(data) {\r\n        var i = 0, len = this.shapeModifiers.length;\r\n        while(i < len) {\r\n            if(this.shapeModifiers[i].isAnimatedWithShape(data)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n    renderModifiers: function() {\r\n        if(!this.shapeModifiers.length){\r\n            return;\r\n        }\r\n        var i, len = this.shapes.length;\r\n        for(i=0;i<len;i+=1){\r\n            this.shapes[i].sh.reset();\r\n        }\r\n\r\n        len = this.shapeModifiers.length;\r\n        for(i=len-1;i>=0;i-=1){\r\n            this.shapeModifiers[i].processShapes(this._isFirstFrame);\r\n        }\r\n    },\r\n    lcEnum: {\r\n        '1': 'butt',\r\n        '2': 'round',\r\n        '3': 'square'\r\n    },\r\n    ljEnum: {\r\n        '1': 'miter',\r\n        '2': 'round',\r\n        '3': 'bevel'\r\n    },\r\n    searchProcessedElement: function(elem){\r\n        var elements = this.processedElements;\r\n        var i = 0, len = elements.length;\r\n        while (i < len) {\r\n            if (elements[i].elem === elem) {\r\n                return elements[i].pos;\r\n            }\r\n            i += 1;\r\n        }\r\n        return 0;\r\n    },\r\n    addProcessedElement: function(elem, pos){\r\n        var elements = this.processedElements;\r\n        var i = elements.length;\r\n        while(i) {\r\n            i -= 1;\r\n            if (elements[i].elem === elem) {\r\n                elements[i].pos = pos;\r\n                return;\r\n            }\r\n        }\r\n        elements.push(new ProcessedElement(elem, pos));\r\n    },\r\n    prepareFrame: function(num) {\r\n        this.prepareRenderableFrame(num);\r\n        this.prepareProperties(num, this.isInRange);\r\n    }\r\n};\r\nfunction ITextElement(){\r\n}\r\n\r\nITextElement.prototype.initElement = function(data,globalData,comp){\r\n    this.lettersChangedFlag = true;\r\n    this.initFrame();\r\n    this.initBaseData(data, globalData, comp);\r\n    this.textProperty = new TextProperty(this, data.t, this.dynamicProperties);\r\n    this.textAnimator = new TextAnimatorProperty(data.t, this.renderType, this);\r\n    this.initTransform(data, globalData, comp);\r\n    this.initHierarchy();\r\n    this.initRenderable();\r\n    this.initRendererElement();\r\n    this.createContainerElements();\r\n    this.createRenderableComponents();\r\n    this.createContent();\r\n    this.hide();\r\n    this.textAnimator.searchProperties(this.dynamicProperties);\r\n};\r\n\r\nITextElement.prototype.prepareFrame = function(num) {\r\n    this._mdf = false;\r\n    this.prepareRenderableFrame(num);\r\n    this.prepareProperties(num, this.isInRange);\r\n    if(this.textProperty._mdf || this.textProperty._isFirstFrame) {\r\n        this.buildNewText();\r\n        this.textProperty._isFirstFrame = false;\r\n        this.textProperty._mdf = false;\r\n    }\r\n};\r\n\r\nITextElement.prototype.createPathShape = function(matrixHelper, shapes) {\r\n    var j,jLen = shapes.length;\r\n    var k, kLen, pathNodes;\r\n    var shapeStr = '';\r\n    for(j=0;j<jLen;j+=1){\r\n        pathNodes = shapes[j].ks.k;\r\n        shapeStr += buildShapeString(pathNodes, pathNodes.i.length, true, matrixHelper);\r\n    }\r\n    return shapeStr;\r\n};\r\n\r\nITextElement.prototype.updateDocumentData = function(newData, index) {\r\n    this.textProperty.updateDocumentData(newData, index);\r\n};\r\n\r\nITextElement.prototype.canResizeFont = function(_canResize) {\r\n    this.textProperty.canResizeFont(_canResize);\r\n};\r\n\r\nITextElement.prototype.setMinimumFontSize = function(_fontSize) {\r\n    this.textProperty.setMinimumFontSize(_fontSize);\r\n};\r\n\r\nITextElement.prototype.applyTextPropertiesToMatrix = function(documentData, matrixHelper, lineNumber, xPos, yPos) {\r\n    if(documentData.ps){\r\n        matrixHelper.translate(documentData.ps[0],documentData.ps[1] + documentData.ascent,0);\r\n    }\r\n    matrixHelper.translate(0,-documentData.ls,0);\r\n    switch(documentData.j){\r\n        case 1:\r\n            matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]),0,0);\r\n            break;\r\n        case 2:\r\n            matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber] )/2,0,0);\r\n            break;\r\n    }\r\n    matrixHelper.translate(xPos, yPos, 0);\r\n};\r\n\r\n\r\nITextElement.prototype.buildColor = function(colorData) {\r\n    return 'rgb(' + Math.round(colorData[0]*255) + ',' + Math.round(colorData[1]*255) + ',' + Math.round(colorData[2]*255) + ')';\r\n};\r\n\r\nITextElement.prototype.emptyProp = new LetterProps();\r\n\r\nITextElement.prototype.destroy = function(){\r\n    \r\n};\r\nfunction ICompElement(){}\r\n\r\nextendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement, RenderableDOMElement], ICompElement);\r\n\r\nICompElement.prototype.initElement = function(data,globalData,comp) {\r\n    this.initFrame();\r\n    this.initBaseData(data, globalData, comp);\r\n    this.initTransform(data, globalData, comp);\r\n    this.initRenderable();\r\n    this.initHierarchy();\r\n    this.initRendererElement();\r\n    this.createContainerElements();\r\n    this.createRenderableComponents();\r\n    if(this.data.xt || !globalData.progressiveLoad){\r\n        this.buildAllItems();\r\n    }\r\n    this.hide();\r\n};\r\n\r\n/*ICompElement.prototype.hide = function(){\r\n    if(!this.hidden){\r\n        this.hideElement();\r\n        var i,len = this.elements.length;\r\n        for( i = 0; i < len; i+=1 ){\r\n            if(this.elements[i]){\r\n                this.elements[i].hide();\r\n            }\r\n        }\r\n    }\r\n};*/\r\n\r\nICompElement.prototype.prepareFrame = function(num){\r\n    this._mdf = false;\r\n    this.prepareRenderableFrame(num);\r\n    this.prepareProperties(num, this.isInRange);\r\n    if(!this.isInRange && !this.data.xt){\r\n        return;\r\n    }\r\n\r\n    if (!this.tm._placeholder) {\r\n        var timeRemapped = this.tm.v;\r\n        if(timeRemapped === this.data.op){\r\n            timeRemapped = this.data.op - 1;\r\n        }\r\n        this.renderedFrame = timeRemapped;\r\n    } else {\r\n        this.renderedFrame = num/this.data.sr;\r\n    }\r\n    var i,len = this.elements.length;\r\n    if(!this.completeLayers){\r\n        this.checkLayers(this.renderedFrame);\r\n    }\r\n    //This iteration needs to be backwards because of how expressions connect between each other\r\n    for( i = len - 1; i >= 0; i -= 1 ){\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].prepareFrame(this.renderedFrame - this.layers[i].st);\r\n            if(this.elements[i]._mdf) {\r\n                this._mdf = true;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.renderInnerContent = function() {\r\n    var i,len = this.layers.length;\r\n    for( i = 0; i < len; i += 1 ){\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].renderFrame();\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.setElements = function(elems){\r\n    this.elements = elems;\r\n};\r\n\r\nICompElement.prototype.getElements = function(){\r\n    return this.elements;\r\n};\r\n\r\nICompElement.prototype.destroyElements = function(){\r\n    var i,len = this.layers.length;\r\n    for( i = 0; i < len; i+=1 ){\r\n        if(this.elements[i]){\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.destroy = function(){\r\n    this.destroyElements();\r\n    this.destroyBaseElement();\r\n};\r\n\r\nfunction IImageElement(data,globalData,comp){\r\n    this.assetData = globalData.getAssetData(data.refId);\r\n    this.initElement(data,globalData,comp);\r\n    this.sourceRect = {top:0,left:0,width:this.assetData.w,height:this.assetData.h};\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,SVGBaseElement,HierarchyElement,FrameElement,RenderableDOMElement], IImageElement);\r\n\r\nIImageElement.prototype.createContent = function(){\r\n\r\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\r\n\r\n    this.innerElem = createNS('image');\r\n    this.innerElem.setAttribute('width',this.assetData.w+\"px\");\r\n    this.innerElem.setAttribute('height',this.assetData.h+\"px\");\r\n    this.innerElem.setAttribute('preserveAspectRatio',this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio);\r\n    this.innerElem.setAttributeNS('http://www.w3.org/1999/xlink','href',assetPath);\r\n    \r\n    this.layerElement.appendChild(this.innerElem);\r\n};\r\n\r\nIImageElement.prototype.sourceRectAtTime = function() {\r\n\treturn this.sourceRect;\r\n}\r\nfunction ISolidElement(data,globalData,comp){\r\n    this.initElement(data,globalData,comp);\r\n}\r\nextendPrototype([IImageElement], ISolidElement);\r\n\r\nISolidElement.prototype.createContent = function(){\r\n\r\n    var rect = createNS('rect');\r\n    ////rect.style.width = this.data.sw;\r\n    ////rect.style.height = this.data.sh;\r\n    ////rect.style.fill = this.data.sc;\r\n    rect.setAttribute('width',this.data.sw);\r\n    rect.setAttribute('height',this.data.sh);\r\n    rect.setAttribute('fill',this.data.sc);\r\n    this.layerElement.appendChild(rect);\r\n};\r\nfunction SVGCompElement(data,globalData,comp){\r\n    this.layers = data.layers;\r\n    this.supports3d = true;\r\n    this.completeLayers = false;\r\n    this.pendingElements = [];\r\n    this.elements = this.layers ? createSizedArray(this.layers.length) : [];\r\n    //this.layerElement = createNS('g');\r\n    this.initElement(data,globalData,comp);\r\n    this.tm = data.tm ? PropertyFactory.getProp(this,data.tm,0,globalData.frameRate,this) : {_placeholder:true};\r\n}\r\n\r\nextendPrototype([SVGRenderer, ICompElement, SVGBaseElement], SVGCompElement);\r\nfunction SVGTextElement(data,globalData,comp){\r\n    this.textSpans = [];\r\n    this.renderType = 'svg';\r\n    this.initElement(data,globalData,comp);\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,SVGBaseElement,HierarchyElement,FrameElement,RenderableDOMElement,ITextElement], SVGTextElement);\r\n\r\nSVGTextElement.prototype.createContent = function(){\r\n\r\n    if (this.data.singleShape && !this.globalData.fontManager.chars) {\r\n        this.textContainer = createNS('text');\r\n    }\r\n};\r\n\r\nSVGTextElement.prototype.buildTextContents = function(textArray) {\r\n    var i = 0, len = textArray.length;\r\n    var textContents = [], currentTextContent = '';\r\n    while (i < len) {\r\n        if(textArray[i] === String.fromCharCode(13) || textArray[i] === String.fromCharCode(3)) {\r\n            textContents.push(currentTextContent);\r\n            currentTextContent = '';\r\n        } else {\r\n            currentTextContent += textArray[i];\r\n        }\r\n        i += 1;\r\n    }\r\n    textContents.push(currentTextContent);\r\n    return textContents;\r\n}\r\n\r\nSVGTextElement.prototype.buildNewText = function(){\r\n    var i, len;\r\n\r\n    var documentData = this.textProperty.currentData;\r\n    this.renderedLetters = createSizedArray(documentData ? documentData.l.length : 0);\r\n    if(documentData.fc) {\r\n        this.layerElement.setAttribute('fill', this.buildColor(documentData.fc));\r\n    }else{\r\n        this.layerElement.setAttribute('fill', 'rgba(0,0,0,0)');\r\n    }\r\n    if(documentData.sc){\r\n        this.layerElement.setAttribute('stroke', this.buildColor(documentData.sc));\r\n        this.layerElement.setAttribute('stroke-width', documentData.sw);\r\n    }\r\n    this.layerElement.setAttribute('font-size', documentData.finalSize);\r\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\r\n    if(fontData.fClass){\r\n        this.layerElement.setAttribute('class',fontData.fClass);\r\n    } else {\r\n        this.layerElement.setAttribute('font-family', fontData.fFamily);\r\n        var fWeight = documentData.fWeight, fStyle = documentData.fStyle;\r\n        this.layerElement.setAttribute('font-style', fStyle);\r\n        this.layerElement.setAttribute('font-weight', fWeight);\r\n    }\r\n    this.layerElement.setAttribute('aria-label', documentData.t);\r\n\r\n    var letters = documentData.l || [];\r\n    var usesGlyphs = !!this.globalData.fontManager.chars;\r\n    len = letters.length;\r\n\r\n    var tSpan;\r\n    var matrixHelper = this.mHelper;\r\n    var shapes, shapeStr = '', singleShape = this.data.singleShape;\r\n    var xPos = 0, yPos = 0, firstLine = true;\r\n    var trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n    if(singleShape && !usesGlyphs && !documentData.sz) {\r\n        var tElement = this.textContainer;\r\n        var justify = 'start';\r\n        switch(documentData.j) {\r\n            case 1:\r\n                justify = 'end';\r\n                break;\r\n            case 2:\r\n                justify = 'middle';\r\n                break;\r\n        }\r\n        tElement.setAttribute('text-anchor',justify);\r\n        tElement.setAttribute('letter-spacing',trackingOffset);\r\n        var textContent = this.buildTextContents(documentData.finalText);\r\n        len = textContent.length;\r\n        yPos = documentData.ps ? documentData.ps[1] + documentData.ascent : 0;\r\n        for ( i = 0; i < len; i += 1) {\r\n            tSpan = this.textSpans[i] || createNS('tspan');\r\n            tSpan.textContent = textContent[i];\r\n            tSpan.setAttribute('x', 0);\r\n            tSpan.setAttribute('y', yPos);\r\n            tSpan.style.display = 'inherit';\r\n            tElement.appendChild(tSpan);\r\n            this.textSpans[i] = tSpan;\r\n            yPos += documentData.finalLineHeight;\r\n        }\r\n        \r\n        this.layerElement.appendChild(tElement);\r\n    } else {\r\n        var cachedSpansLength = this.textSpans.length;\r\n        var shapeData, charData;\r\n        for (i = 0; i < len; i += 1) {\r\n            if(!usesGlyphs || !singleShape || i === 0){\r\n                tSpan = cachedSpansLength > i ? this.textSpans[i] : createNS(usesGlyphs?'path':'text');\r\n                if (cachedSpansLength <= i) {\r\n                    tSpan.setAttribute('stroke-linecap', 'butt');\r\n                    tSpan.setAttribute('stroke-linejoin','round');\r\n                    tSpan.setAttribute('stroke-miterlimit','4');\r\n                    this.textSpans[i] = tSpan;\r\n                    this.layerElement.appendChild(tSpan);\r\n                }\r\n                tSpan.style.display = 'inherit';\r\n            }\r\n            \r\n            matrixHelper.reset();\r\n            matrixHelper.scale(documentData.finalSize / 100, documentData.finalSize / 100);\r\n            if (singleShape) {\r\n                if(letters[i].n) {\r\n                    xPos = -trackingOffset;\r\n                    yPos += documentData.yOffset;\r\n                    yPos += firstLine ? 1 : 0;\r\n                    firstLine = false;\r\n                }\r\n                this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\r\n                xPos += letters[i].l || 0;\r\n                //xPos += letters[i].val === ' ' ? 0 : trackingOffset;\r\n                xPos += trackingOffset;\r\n            }\r\n            if(usesGlyphs) {\r\n                charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\r\n                shapeData = charData && charData.data || {};\r\n                shapes = shapeData.shapes ? shapeData.shapes[0].it : [];\r\n                if(!singleShape){\r\n                    tSpan.setAttribute('d',this.createPathShape(matrixHelper,shapes));\r\n                } else {\r\n                    shapeStr += this.createPathShape(matrixHelper,shapes);\r\n                }\r\n            } else {\r\n                if(singleShape) {\r\n                    tSpan.setAttribute(\"transform\", \"translate(\" + matrixHelper.props[12] + \",\" + matrixHelper.props[13] + \")\");\r\n                }\r\n                tSpan.textContent = letters[i].val;\r\n                tSpan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\",\"preserve\");\r\n            }\r\n            //\r\n        }\r\n        if (singleShape && tSpan) {\r\n            tSpan.setAttribute('d',shapeStr);\r\n        }\r\n    }\r\n    while (i < this.textSpans.length){\r\n        this.textSpans[i].style.display = 'none';\r\n        i += 1;\r\n    }\r\n    \r\n    this._sizeChanged = true;\r\n};\r\n\r\nSVGTextElement.prototype.sourceRectAtTime = function(time){\r\n    this.prepareFrame(this.comp.renderedFrame - this.data.st);\r\n    this.renderInnerContent();\r\n    if(this._sizeChanged){\r\n        this._sizeChanged = false;\r\n        var textBox = this.layerElement.getBBox();\r\n        this.bbox = {\r\n            top: textBox.y,\r\n            left: textBox.x,\r\n            width: textBox.width,\r\n            height: textBox.height\r\n        };\r\n    }\r\n    return this.bbox;\r\n};\r\n\r\nSVGTextElement.prototype.renderInnerContent = function(){\r\n\r\n    if(!this.data.singleShape){\r\n        this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\r\n        if(this.lettersChangedFlag || this.textAnimator.lettersChangedFlag){\r\n            this._sizeChanged = true;\r\n            var  i,len;\r\n            var renderedLetters = this.textAnimator.renderedLetters;\r\n\r\n            var letters = this.textProperty.currentData.l;\r\n\r\n            len = letters.length;\r\n            var renderedLetter, textSpan;\r\n            for(i=0;i<len;i+=1){\r\n                if(letters[i].n){\r\n                    continue;\r\n                }\r\n                renderedLetter = renderedLetters[i];\r\n                textSpan = this.textSpans[i];\r\n                if(renderedLetter._mdf.m) {\r\n                    textSpan.setAttribute('transform',renderedLetter.m);\r\n                }\r\n                if(renderedLetter._mdf.o) {\r\n                    textSpan.setAttribute('opacity',renderedLetter.o);\r\n                }\r\n                if(renderedLetter._mdf.sw){\r\n                    textSpan.setAttribute('stroke-width',renderedLetter.sw);\r\n                }\r\n                if(renderedLetter._mdf.sc){\r\n                    textSpan.setAttribute('stroke',renderedLetter.sc);\r\n                }\r\n                if(renderedLetter._mdf.fc){\r\n                    textSpan.setAttribute('fill',renderedLetter.fc);\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nfunction SVGShapeElement(data,globalData,comp){\r\n    //List of drawable elements\r\n    this.shapes = [];\r\n    // Full shape data\r\n    this.shapesData = data.shapes;\r\n    //List of styles that will be applied to shapes\r\n    this.stylesList = [];\r\n    //List of modifiers that will be applied to shapes\r\n    this.shapeModifiers = [];\r\n    //List of items in shape tree\r\n    this.itemsData = [];\r\n    //List of items in previous shape tree\r\n    this.processedElements = [];\r\n    // List of animated components\r\n    this.animatedContents = [];\r\n    this.initElement(data,globalData,comp);\r\n    //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\r\n    // List of elements that have been created\r\n    this.prevViewData = [];\r\n    //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,SVGBaseElement,IShapeElement,HierarchyElement,FrameElement,RenderableDOMElement], SVGShapeElement);\r\n\r\nSVGShapeElement.prototype.initSecondaryElement = function() {\r\n};\r\n\r\nSVGShapeElement.prototype.identityMatrix = new Matrix();\r\n\r\nSVGShapeElement.prototype.buildExpressionInterface = function(){};\r\n\r\nSVGShapeElement.prototype.createContent = function(){\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement, 0, [], true);\r\n    this.filterUniqueShapes();\r\n};\r\n\r\n/*\r\nThis method searches for multiple shapes that affect a single element and one of them is animated\r\n*/\r\nSVGShapeElement.prototype.filterUniqueShapes = function(){\r\n    var i, len = this.shapes.length, shape;\r\n    var j, jLen = this.stylesList.length;\r\n    var style, count = 0;\r\n    var tempShapes = [];\r\n    var areAnimated = false;\r\n    for(j = 0; j < jLen; j += 1) {\r\n        style = this.stylesList[j];\r\n        areAnimated = false;\r\n        tempShapes.length = 0;\r\n        for(i = 0; i < len; i += 1) {\r\n            shape = this.shapes[i];\r\n            if(shape.styles.indexOf(style) !== -1) {\r\n                tempShapes.push(shape);\r\n                areAnimated = shape._isAnimated || areAnimated;\r\n            }\r\n        }\r\n        if(tempShapes.length > 1 && areAnimated) {\r\n            this.setShapesAsAnimated(tempShapes);\r\n        }\r\n    }\r\n}\r\n\r\nSVGShapeElement.prototype.setShapesAsAnimated = function(shapes){\r\n    var i, len = shapes.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        shapes[i].setAsAnimated();\r\n    }\r\n}\r\n\r\nSVGShapeElement.prototype.createStyleElement = function(data, level){\r\n    //TODO: prevent drawing of hidden styles\r\n    var elementData;\r\n    var styleOb = new SVGStyleData(data, level);\r\n\r\n    var pathElement = styleOb.pElem;\r\n    if(data.ty === 'st') {\r\n        elementData = new SVGStrokeStyleData(this, data, styleOb);\r\n    } else if(data.ty === 'fl') {\r\n        elementData = new SVGFillStyleData(this, data, styleOb);\r\n    } else if(data.ty === 'gf' || data.ty === 'gs') {\r\n        var gradientConstructor = data.ty === 'gf' ? SVGGradientFillStyleData : SVGGradientStrokeStyleData;\r\n        elementData = new gradientConstructor(this, data, styleOb);\r\n        this.globalData.defs.appendChild(elementData.gf);\r\n        if (elementData.maskId) {\r\n            this.globalData.defs.appendChild(elementData.ms);\r\n            this.globalData.defs.appendChild(elementData.of);\r\n            pathElement.setAttribute('mask','url(' + locationHref + '#' + elementData.maskId + ')');\r\n        }\r\n    }\r\n    \r\n    if(data.ty === 'st' || data.ty === 'gs') {\r\n        pathElement.setAttribute('stroke-linecap', this.lcEnum[data.lc] || 'round');\r\n        pathElement.setAttribute('stroke-linejoin',this.ljEnum[data.lj] || 'round');\r\n        pathElement.setAttribute('fill-opacity','0');\r\n        if(data.lj === 1) {\r\n            pathElement.setAttribute('stroke-miterlimit',data.ml);\r\n        }\r\n    }\r\n\r\n    if(data.r === 2) {\r\n        pathElement.setAttribute('fill-rule', 'evenodd');\r\n    }\r\n\r\n    if(data.ln){\r\n        pathElement.setAttribute('id',data.ln);\r\n    }\r\n    if(data.cl){\r\n        pathElement.setAttribute('class',data.cl);\r\n    }\r\n    if(data.bm){\r\n        pathElement.style['mix-blend-mode'] = getBlendMode(data.bm);\r\n    }\r\n    this.stylesList.push(styleOb);\r\n    this.addToAnimatedContents(data, elementData);\r\n    return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.createGroupElement = function(data) {\r\n    var elementData = new ShapeGroupData();\r\n    if(data.ln){\r\n        elementData.gr.setAttribute('id',data.ln);\r\n    }\r\n    if(data.cl){\r\n        elementData.gr.setAttribute('class',data.cl);\r\n    }\r\n    if(data.bm){\r\n        elementData.gr.style['mix-blend-mode'] = getBlendMode(data.bm);\r\n    }\r\n    return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.createTransformElement = function(data, container) {\r\n    var transformProperty = TransformPropertyFactory.getTransformProperty(this,data,this);\r\n    var elementData = new SVGTransformData(transformProperty, transformProperty.o, container);\r\n    this.addToAnimatedContents(data, elementData);\r\n    return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.createShapeElement = function(data, ownTransformers, level) {\r\n    var ty = 4;\r\n    if(data.ty === 'rc'){\r\n        ty = 5;\r\n    }else if(data.ty === 'el'){\r\n        ty = 6;\r\n    }else if(data.ty === 'sr'){\r\n        ty = 7;\r\n    }\r\n    var shapeProperty = ShapePropertyFactory.getShapeProp(this,data,ty,this);\r\n    var elementData = new SVGShapeData(ownTransformers, level, shapeProperty);\r\n    this.shapes.push(elementData);\r\n    this.addShapeToModifiers(elementData);\r\n    this.addToAnimatedContents(data, elementData);\r\n    return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.addToAnimatedContents = function(data, element) {\r\n    var i = 0, len = this.animatedContents.length;\r\n    while(i < len) {\r\n        if(this.animatedContents[i].element === element) {\r\n            return;\r\n        }\r\n        i += 1;\r\n    }\r\n    this.animatedContents.push({\r\n        fn: SVGElementsRenderer.createRenderFunction(data),\r\n        element: element,\r\n        data: data\r\n    });\r\n};\r\n\r\nSVGShapeElement.prototype.setElementStyles = function(elementData){\r\n    var arr = elementData.styles;\r\n    var j, jLen = this.stylesList.length;\r\n    for (j = 0; j < jLen; j += 1) {\r\n        if (!this.stylesList[j].closed) {\r\n            arr.push(this.stylesList[j]);\r\n        }\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.reloadShapes = function(){\r\n    this._isFirstFrame = true;\r\n    var i, len = this.itemsData.length;\r\n    for( i = 0; i < len; i += 1) {\r\n        this.prevViewData[i] = this.itemsData[i];\r\n    }\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement, 0, [], true);\r\n    this.filterUniqueShapes();\r\n    len = this.dynamicProperties.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        this.dynamicProperties[i].getValue();\r\n    }\r\n    this.renderModifiers();\r\n};\r\n\r\nSVGShapeElement.prototype.searchShapes = function(arr,itemsData,prevViewData,container, level, transformers, render){\r\n    var ownTransformers = [].concat(transformers);\r\n    var i, len = arr.length - 1;\r\n    var j, jLen;\r\n    var ownStyles = [], ownModifiers = [], styleOb, currentTransform, modifier, processedPos;\r\n    for(i=len;i>=0;i-=1){\r\n        processedPos = this.searchProcessedElement(arr[i]);\r\n        if(!processedPos){\r\n            arr[i]._render = render;\r\n        } else {\r\n            itemsData[i] = prevViewData[processedPos - 1];\r\n        }\r\n        if(arr[i].ty == 'fl' || arr[i].ty == 'st' || arr[i].ty == 'gf' || arr[i].ty == 'gs'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createStyleElement(arr[i], level);\r\n            } else {\r\n                itemsData[i].style.closed = false;\r\n            }\r\n            if(arr[i]._render){\r\n                container.appendChild(itemsData[i].style.pElem);\r\n            }\r\n            ownStyles.push(itemsData[i].style);\r\n        }else if(arr[i].ty == 'gr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createGroupElement(arr[i]);\r\n            } else {\r\n                jLen = itemsData[i].it.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    itemsData[i].prevViewData[j] = itemsData[i].it[j];\r\n                }\r\n            }\r\n            this.searchShapes(arr[i].it,itemsData[i].it,itemsData[i].prevViewData,itemsData[i].gr, level + 1, ownTransformers, render);\r\n            if(arr[i]._render){\r\n                container.appendChild(itemsData[i].gr);\r\n            }\r\n        }else if(arr[i].ty == 'tr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createTransformElement(arr[i], container);\r\n            }\r\n            currentTransform = itemsData[i].transform;\r\n            ownTransformers.push(currentTransform);\r\n        }else if(arr[i].ty == 'sh' || arr[i].ty == 'rc' || arr[i].ty == 'el' || arr[i].ty == 'sr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createShapeElement(arr[i], ownTransformers, level);\r\n            }\r\n            this.setElementStyles(itemsData[i]);\r\n\r\n        }else if(arr[i].ty == 'tm' || arr[i].ty == 'rd' || arr[i].ty == 'ms'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                modifier.init(this,arr[i]);\r\n                itemsData[i] = modifier;\r\n                this.shapeModifiers.push(modifier);\r\n            } else {\r\n                modifier = itemsData[i];\r\n                modifier.closed = false;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        }else if(arr[i].ty == 'rp'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                itemsData[i] = modifier;\r\n                modifier.init(this,arr,i,itemsData);\r\n                this.shapeModifiers.push(modifier);\r\n                render = false;\r\n            }else{\r\n                modifier = itemsData[i];\r\n                modifier.closed = true;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        }\r\n        this.addProcessedElement(arr[i], i + 1);\r\n    }\r\n    len = ownStyles.length;\r\n    for(i=0;i<len;i+=1){\r\n        ownStyles[i].closed = true;\r\n    }\r\n    len = ownModifiers.length;\r\n    for(i=0;i<len;i+=1){\r\n        ownModifiers[i].closed = true;\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.renderInnerContent = function() {\r\n    this.renderModifiers();\r\n    var i, len = this.stylesList.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.stylesList[i].reset();\r\n    }\r\n    this.renderShape();\r\n\r\n    for (i = 0; i < len; i += 1) {\r\n        if (this.stylesList[i]._mdf || this._isFirstFrame) {\r\n            if(this.stylesList[i].msElem){\r\n                this.stylesList[i].msElem.setAttribute('d', this.stylesList[i].d);\r\n                //Adding M0 0 fixes same mask bug on all browsers\r\n                this.stylesList[i].d = 'M0 0' + this.stylesList[i].d;\r\n            }\r\n            this.stylesList[i].pElem.setAttribute('d', this.stylesList[i].d || 'M0 0');\r\n        }\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.renderShape = function() {\r\n    var i, len = this.animatedContents.length;\r\n    var animatedContent;\r\n    for(i = 0; i < len; i += 1) {\r\n        animatedContent = this.animatedContents[i];\r\n        if((this._isFirstFrame || animatedContent.element._isAnimated) && animatedContent.data !== true) {\r\n            animatedContent.fn(animatedContent.data, animatedContent.element, this._isFirstFrame);\r\n        }\r\n    }\r\n}\r\n\r\nSVGShapeElement.prototype.destroy = function(){\r\n    this.destroyBaseElement();\r\n    this.shapesData = null;\r\n    this.itemsData = null;\r\n};\r\n\r\nfunction SVGTintFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');\r\n    feColorMatrix.setAttribute('values','0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f1');\r\n    filter.appendChild(feColorMatrix);\r\n    feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n    feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f2');\r\n    filter.appendChild(feColorMatrix);\r\n    this.matrixFilter = feColorMatrix;\r\n    if(filterManager.effectElements[2].p.v !== 100 || filterManager.effectElements[2].p.k){\r\n        var feMerge = createNS('feMerge');\r\n        filter.appendChild(feMerge);\r\n        var feMergeNode;\r\n        feMergeNode = createNS('feMergeNode');\r\n        feMergeNode.setAttribute('in','SourceGraphic');\r\n        feMerge.appendChild(feMergeNode);\r\n        feMergeNode = createNS('feMergeNode');\r\n        feMergeNode.setAttribute('in','f2');\r\n        feMerge.appendChild(feMergeNode);\r\n    }\r\n}\r\n\r\nSVGTintFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var colorBlack = this.filterManager.effectElements[0].p.v;\r\n        var colorWhite = this.filterManager.effectElements[1].p.v;\r\n        var opacity = this.filterManager.effectElements[2].p.v/100;\r\n        this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');\r\n    }\r\n};\r\nfunction SVGFillFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n    feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\r\n    filter.appendChild(feColorMatrix);\r\n    this.matrixFilter = feColorMatrix;\r\n}\r\nSVGFillFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var color = this.filterManager.effectElements[2].p.v;\r\n        var opacity = this.filterManager.effectElements[6].p.v;\r\n        this.matrixFilter.setAttribute('values','0 0 0 0 '+color[0]+' 0 0 0 0 '+color[1]+' 0 0 0 0 '+color[2]+' 0 0 0 '+opacity+' 0');\r\n    }\r\n};\r\nfunction SVGGaussianBlurEffect(filter, filterManager){\r\n    // Outset the filter region by 100% on all sides to accommodate blur expansion.\r\n    filter.setAttribute('x','-100%');\r\n    filter.setAttribute('y','-100%');\r\n    filter.setAttribute('width','300%');\r\n    filter.setAttribute('height','300%');\r\n\r\n    this.filterManager = filterManager;\r\n    var feGaussianBlur = createNS('feGaussianBlur');\r\n    filter.appendChild(feGaussianBlur);\r\n    this.feGaussianBlur = feGaussianBlur;\r\n}\r\n\r\nSVGGaussianBlurEffect.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        // Empirical value, matching AE's blur appearance.\r\n        var kBlurrinessToSigma = 0.3;\r\n        var sigma = this.filterManager.effectElements[0].p.v * kBlurrinessToSigma;\r\n\r\n        // Dimensions mapping:\r\n        //\r\n        //   1 -> horizontal & vertical\r\n        //   2 -> horizontal only\r\n        //   3 -> vertical only\r\n        //\r\n        var dimensions = this.filterManager.effectElements[1].p.v;\r\n        var sigmaX = (dimensions == 3) ? 0 : sigma;\r\n        var sigmaY = (dimensions == 2) ? 0 : sigma;\r\n\r\n        this.feGaussianBlur.setAttribute('stdDeviation', sigmaX + \" \" + sigmaY);\r\n\r\n        // Repeat edges mapping:\r\n        //\r\n        //   0 -> off -> duplicate\r\n        //   1 -> on  -> wrap\r\n        var edgeMode = (this.filterManager.effectElements[2].p.v == 1) ? 'wrap' : 'duplicate';\r\n        this.feGaussianBlur.setAttribute('edgeMode', edgeMode);\r\n    }\r\n}\r\nfunction SVGStrokeEffect(elem, filterManager){\r\n    this.initialized = false;\r\n    this.filterManager = filterManager;\r\n    this.elem = elem;\r\n    this.paths = [];\r\n}\r\n\r\nSVGStrokeEffect.prototype.initialize = function(){\r\n\r\n    var elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\r\n    var path,groupPath, i, len;\r\n    if(this.filterManager.effectElements[1].p.v === 1){\r\n        len = this.elem.maskManager.masksProperties.length;\r\n        i = 0;\r\n    } else {\r\n        i = this.filterManager.effectElements[0].p.v - 1;\r\n        len = i + 1;\r\n    }\r\n    groupPath = createNS('g'); \r\n    groupPath.setAttribute('fill','none');\r\n    groupPath.setAttribute('stroke-linecap','round');\r\n    groupPath.setAttribute('stroke-dashoffset',1);\r\n    for(i;i<len;i+=1){\r\n        path = createNS('path');\r\n        groupPath.appendChild(path);\r\n        this.paths.push({p:path,m:i});\r\n    }\r\n    if(this.filterManager.effectElements[10].p.v === 3){\r\n        var mask = createNS('mask');\r\n        var id = createElementID();\r\n        mask.setAttribute('id',id);\r\n        mask.setAttribute('mask-type','alpha');\r\n        mask.appendChild(groupPath);\r\n        this.elem.globalData.defs.appendChild(mask);\r\n        var g = createNS('g');\r\n        g.setAttribute('mask','url(' + locationHref + '#'+id+')');\r\n        while (elemChildren[0]) {\r\n            g.appendChild(elemChildren[0]);\r\n        }\r\n        this.elem.layerElement.appendChild(g);\r\n        this.masker = mask;\r\n        groupPath.setAttribute('stroke','#fff');\r\n    } else if(this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2){\r\n        if(this.filterManager.effectElements[10].p.v === 2){\r\n            elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\r\n            while(elemChildren.length){\r\n                this.elem.layerElement.removeChild(elemChildren[0]);\r\n            }\r\n        }\r\n        this.elem.layerElement.appendChild(groupPath);\r\n        this.elem.layerElement.removeAttribute('mask');\r\n        groupPath.setAttribute('stroke','#fff');\r\n    }\r\n    this.initialized = true;\r\n    this.pathMasker = groupPath;\r\n};\r\n\r\nSVGStrokeEffect.prototype.renderFrame = function(forceRender){\r\n    if(!this.initialized){\r\n        this.initialize();\r\n    }\r\n    var i, len = this.paths.length;\r\n    var mask, path;\r\n    for(i=0;i<len;i+=1){\r\n        if(this.paths[i].m === -1) {\r\n            continue;\r\n        }\r\n        mask = this.elem.maskManager.viewData[this.paths[i].m];\r\n        path = this.paths[i].p;\r\n        if(forceRender || this.filterManager._mdf || mask.prop._mdf){\r\n            path.setAttribute('d',mask.lastPath);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[9].p._mdf || this.filterManager.effectElements[4].p._mdf || this.filterManager.effectElements[7].p._mdf || this.filterManager.effectElements[8].p._mdf || mask.prop._mdf){\r\n            var dasharrayValue;\r\n            if(this.filterManager.effectElements[7].p.v !== 0 || this.filterManager.effectElements[8].p.v !== 100){\r\n                var s = Math.min(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)/100;\r\n                var e = Math.max(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)/100;\r\n                var l = path.getTotalLength();\r\n                dasharrayValue = '0 0 0 ' + l*s + ' ';\r\n                var lineLength = l*(e-s);\r\n                var segment = 1+this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100;\r\n                var units = Math.floor(lineLength/segment);\r\n                var j;\r\n                for(j=0;j<units;j+=1){\r\n                    dasharrayValue += '1 ' + this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100 + ' ';\r\n                }\r\n                dasharrayValue += '0 ' + l*10 + ' 0 0';\r\n            } else {\r\n                dasharrayValue = '1 ' + this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100;\r\n            }\r\n            path.setAttribute('stroke-dasharray',dasharrayValue);\r\n        }\r\n    }\r\n    if(forceRender || this.filterManager.effectElements[4].p._mdf){\r\n        this.pathMasker.setAttribute('stroke-width',this.filterManager.effectElements[4].p.v*2);\r\n    }\r\n    \r\n    if(forceRender || this.filterManager.effectElements[6].p._mdf){\r\n        this.pathMasker.setAttribute('opacity',this.filterManager.effectElements[6].p.v);\r\n    }\r\n    if(this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2){\r\n        if(forceRender || this.filterManager.effectElements[3].p._mdf){\r\n            var color = this.filterManager.effectElements[3].p.v;\r\n            this.pathMasker.setAttribute('stroke','rgb('+bm_floor(color[0]*255)+','+bm_floor(color[1]*255)+','+bm_floor(color[2]*255)+')');\r\n        }\r\n    }\r\n};\r\nfunction SVGTritoneFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');\r\n    feColorMatrix.setAttribute('values','0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f1');\r\n    filter.appendChild(feColorMatrix);\r\n    var feComponentTransfer = createNS('feComponentTransfer');\r\n    feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n    filter.appendChild(feComponentTransfer);\r\n    this.matrixFilter = feComponentTransfer;\r\n    var feFuncR = createNS('feFuncR');\r\n    feFuncR.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncR);\r\n    this.feFuncR = feFuncR;\r\n    var feFuncG = createNS('feFuncG');\r\n    feFuncG.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncG);\r\n    this.feFuncG = feFuncG;\r\n    var feFuncB = createNS('feFuncB');\r\n    feFuncB.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncB);\r\n    this.feFuncB = feFuncB;\r\n}\r\n\r\nSVGTritoneFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var color1 = this.filterManager.effectElements[0].p.v;\r\n        var color2 = this.filterManager.effectElements[1].p.v;\r\n        var color3 = this.filterManager.effectElements[2].p.v;\r\n        var tableR = color3[0] + ' ' + color2[0] + ' ' + color1[0];\r\n        var tableG = color3[1] + ' ' + color2[1] + ' ' + color1[1];\r\n        var tableB = color3[2] + ' ' + color2[2] + ' ' + color1[2];\r\n        this.feFuncR.setAttribute('tableValues', tableR);\r\n        this.feFuncG.setAttribute('tableValues', tableG);\r\n        this.feFuncB.setAttribute('tableValues', tableB);\r\n        //var opacity = this.filterManager.effectElements[2].p.v/100;\r\n        //this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');\r\n    }\r\n};\r\nfunction SVGProLevelsFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var effectElements = this.filterManager.effectElements;\r\n    var feComponentTransfer = createNS('feComponentTransfer');\r\n    var feFuncR, feFuncG, feFuncB;\r\n    \r\n    if(effectElements[10].p.k || effectElements[10].p.v !== 0 || effectElements[11].p.k || effectElements[11].p.v !== 1 || effectElements[12].p.k || effectElements[12].p.v !== 1 || effectElements[13].p.k || effectElements[13].p.v !== 0 || effectElements[14].p.k || effectElements[14].p.v !== 1){\r\n        this.feFuncR = this.createFeFunc('feFuncR', feComponentTransfer);\r\n    }\r\n    if(effectElements[17].p.k || effectElements[17].p.v !== 0 || effectElements[18].p.k || effectElements[18].p.v !== 1 || effectElements[19].p.k || effectElements[19].p.v !== 1 || effectElements[20].p.k || effectElements[20].p.v !== 0 || effectElements[21].p.k || effectElements[21].p.v !== 1){\r\n        this.feFuncG = this.createFeFunc('feFuncG', feComponentTransfer);\r\n    }\r\n    if(effectElements[24].p.k || effectElements[24].p.v !== 0 || effectElements[25].p.k || effectElements[25].p.v !== 1 || effectElements[26].p.k || effectElements[26].p.v !== 1 || effectElements[27].p.k || effectElements[27].p.v !== 0 || effectElements[28].p.k || effectElements[28].p.v !== 1){\r\n        this.feFuncB = this.createFeFunc('feFuncB', feComponentTransfer);\r\n    }\r\n    if(effectElements[31].p.k || effectElements[31].p.v !== 0 || effectElements[32].p.k || effectElements[32].p.v !== 1 || effectElements[33].p.k || effectElements[33].p.v !== 1 || effectElements[34].p.k || effectElements[34].p.v !== 0 || effectElements[35].p.k || effectElements[35].p.v !== 1){\r\n        this.feFuncA = this.createFeFunc('feFuncA', feComponentTransfer);\r\n    }\r\n    \r\n    if(this.feFuncR || this.feFuncG || this.feFuncB || this.feFuncA){\r\n        feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n        filter.appendChild(feComponentTransfer);\r\n        feComponentTransfer = createNS('feComponentTransfer');\r\n    }\r\n\r\n    if(effectElements[3].p.k || effectElements[3].p.v !== 0 || effectElements[4].p.k || effectElements[4].p.v !== 1 || effectElements[5].p.k || effectElements[5].p.v !== 1 || effectElements[6].p.k || effectElements[6].p.v !== 0 || effectElements[7].p.k || effectElements[7].p.v !== 1){\r\n\r\n        feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n        filter.appendChild(feComponentTransfer);\r\n        this.feFuncRComposed = this.createFeFunc('feFuncR', feComponentTransfer);\r\n        this.feFuncGComposed = this.createFeFunc('feFuncG', feComponentTransfer);\r\n        this.feFuncBComposed = this.createFeFunc('feFuncB', feComponentTransfer);\r\n    }\r\n}\r\n\r\nSVGProLevelsFilter.prototype.createFeFunc = function(type, feComponentTransfer) {\r\n    var feFunc = createNS(type);\r\n    feFunc.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFunc);\r\n    return feFunc;\r\n};\r\n\r\nSVGProLevelsFilter.prototype.getTableValue = function(inputBlack, inputWhite, gamma, outputBlack, outputWhite) {\r\n    var cnt = 0;\r\n    var segments = 256;\r\n    var perc;\r\n    var min = Math.min(inputBlack, inputWhite);\r\n    var max = Math.max(inputBlack, inputWhite);\r\n    var table = Array.call(null,{length:segments});\r\n    var colorValue;\r\n    var pos = 0;\r\n    var outputDelta = outputWhite - outputBlack; \r\n    var inputDelta = inputWhite - inputBlack; \r\n    while(cnt <= 256) {\r\n        perc = cnt/256;\r\n        if(perc <= min){\r\n            colorValue = inputDelta < 0 ? outputWhite : outputBlack;\r\n        } else if(perc >= max){\r\n            colorValue = inputDelta < 0 ? outputBlack : outputWhite;\r\n        } else {\r\n            colorValue = (outputBlack + outputDelta * Math.pow((perc - inputBlack) / inputDelta, 1 / gamma));\r\n        }\r\n        table[pos++] = colorValue;\r\n        cnt += 256/(segments-1);\r\n    }\r\n    return table.join(' ');\r\n};\r\n\r\nSVGProLevelsFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var val, cnt, perc, bezier;\r\n        var effectElements = this.filterManager.effectElements;\r\n        if(this.feFuncRComposed && (forceRender || effectElements[3].p._mdf || effectElements[4].p._mdf || effectElements[5].p._mdf || effectElements[6].p._mdf || effectElements[7].p._mdf)){\r\n            val = this.getTableValue(effectElements[3].p.v,effectElements[4].p.v,effectElements[5].p.v,effectElements[6].p.v,effectElements[7].p.v);\r\n            this.feFuncRComposed.setAttribute('tableValues',val);\r\n            this.feFuncGComposed.setAttribute('tableValues',val);\r\n            this.feFuncBComposed.setAttribute('tableValues',val);\r\n        }\r\n\r\n\r\n        if(this.feFuncR && (forceRender || effectElements[10].p._mdf || effectElements[11].p._mdf || effectElements[12].p._mdf || effectElements[13].p._mdf || effectElements[14].p._mdf)){\r\n            val = this.getTableValue(effectElements[10].p.v,effectElements[11].p.v,effectElements[12].p.v,effectElements[13].p.v,effectElements[14].p.v);\r\n            this.feFuncR.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncG && (forceRender || effectElements[17].p._mdf || effectElements[18].p._mdf || effectElements[19].p._mdf || effectElements[20].p._mdf || effectElements[21].p._mdf)){\r\n            val = this.getTableValue(effectElements[17].p.v,effectElements[18].p.v,effectElements[19].p.v,effectElements[20].p.v,effectElements[21].p.v);\r\n            this.feFuncG.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncB && (forceRender || effectElements[24].p._mdf || effectElements[25].p._mdf || effectElements[26].p._mdf || effectElements[27].p._mdf || effectElements[28].p._mdf)){\r\n            val = this.getTableValue(effectElements[24].p.v,effectElements[25].p.v,effectElements[26].p.v,effectElements[27].p.v,effectElements[28].p.v);\r\n            this.feFuncB.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncA && (forceRender || effectElements[31].p._mdf || effectElements[32].p._mdf || effectElements[33].p._mdf || effectElements[34].p._mdf || effectElements[35].p._mdf)){\r\n            val = this.getTableValue(effectElements[31].p.v,effectElements[32].p.v,effectElements[33].p.v,effectElements[34].p.v,effectElements[35].p.v);\r\n            this.feFuncA.setAttribute('tableValues',val);\r\n        }\r\n        \r\n    }\r\n};\r\nfunction SVGDropShadowEffect(filter, filterManager){\r\n    filter.setAttribute('x','-100%');\r\n    filter.setAttribute('y','-100%');\r\n    filter.setAttribute('width','400%');\r\n    filter.setAttribute('height','400%');\r\n    this.filterManager = filterManager;\r\n\r\n    var feGaussianBlur = createNS('feGaussianBlur');\r\n    feGaussianBlur.setAttribute('in','SourceAlpha');\r\n    feGaussianBlur.setAttribute('result','drop_shadow_1');\r\n    feGaussianBlur.setAttribute('stdDeviation','0');\r\n    this.feGaussianBlur = feGaussianBlur;\r\n    filter.appendChild(feGaussianBlur);\r\n\r\n    var feOffset = createNS('feOffset');\r\n    feOffset.setAttribute('dx','25');\r\n    feOffset.setAttribute('dy','0');\r\n    feOffset.setAttribute('in','drop_shadow_1');\r\n    feOffset.setAttribute('result','drop_shadow_2');\r\n    this.feOffset = feOffset;\r\n    filter.appendChild(feOffset);\r\n    var feFlood = createNS('feFlood');\r\n    feFlood.setAttribute('flood-color','#00ff00');\r\n    feFlood.setAttribute('flood-opacity','1');\r\n    feFlood.setAttribute('result','drop_shadow_3');\r\n    this.feFlood = feFlood;\r\n    filter.appendChild(feFlood);\r\n\r\n    var feComposite = createNS('feComposite');\r\n    feComposite.setAttribute('in','drop_shadow_3');\r\n    feComposite.setAttribute('in2','drop_shadow_2');\r\n    feComposite.setAttribute('operator','in');\r\n    feComposite.setAttribute('result','drop_shadow_4');\r\n    filter.appendChild(feComposite);\r\n\r\n\r\n    var feMerge = createNS('feMerge');\r\n    filter.appendChild(feMerge);\r\n    var feMergeNode;\r\n    feMergeNode = createNS('feMergeNode');\r\n    feMerge.appendChild(feMergeNode);\r\n    feMergeNode = createNS('feMergeNode');\r\n    feMergeNode.setAttribute('in','SourceGraphic');\r\n    this.feMergeNode = feMergeNode;\r\n    this.feMerge = feMerge;\r\n    this.originalNodeAdded = false;\r\n    feMerge.appendChild(feMergeNode);\r\n}\r\n\r\nSVGDropShadowEffect.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        if(forceRender || this.filterManager.effectElements[4].p._mdf){\r\n            this.feGaussianBlur.setAttribute('stdDeviation', this.filterManager.effectElements[4].p.v / 4);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[0].p._mdf){\r\n            var col = this.filterManager.effectElements[0].p.v;\r\n            this.feFlood.setAttribute('flood-color',rgbToHex(Math.round(col[0]*255),Math.round(col[1]*255),Math.round(col[2]*255)));\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[1].p._mdf){\r\n            this.feFlood.setAttribute('flood-opacity',this.filterManager.effectElements[1].p.v/255);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[2].p._mdf || this.filterManager.effectElements[3].p._mdf){\r\n            var distance = this.filterManager.effectElements[3].p.v;\r\n            var angle = (this.filterManager.effectElements[2].p.v - 90) * degToRads;\r\n            var x = distance * Math.cos(angle);\r\n            var y = distance * Math.sin(angle);\r\n            this.feOffset.setAttribute('dx', x);\r\n            this.feOffset.setAttribute('dy', y);\r\n        }\r\n        /*if(forceRender || this.filterManager.effectElements[5].p._mdf){\r\n            if(this.filterManager.effectElements[5].p.v === 1 && this.originalNodeAdded) {\r\n                this.feMerge.removeChild(this.feMergeNode);\r\n                this.originalNodeAdded = false;\r\n            } else if(this.filterManager.effectElements[5].p.v === 0 && !this.originalNodeAdded) {\r\n                this.feMerge.appendChild(this.feMergeNode);\r\n                this.originalNodeAdded = true;\r\n            }\r\n        }*/\r\n    }\r\n};\r\nvar _svgMatteSymbols = [];\r\n\r\nfunction SVGMatte3Effect(filterElem, filterManager, elem){\r\n    this.initialized = false;\r\n    this.filterManager = filterManager;\r\n    this.filterElem = filterElem;\r\n    this.elem = elem;\r\n    elem.matteElement = createNS('g');\r\n    elem.matteElement.appendChild(elem.layerElement);\r\n    elem.matteElement.appendChild(elem.transformedElement);\r\n    elem.baseElement = elem.matteElement;\r\n}\r\n\r\nSVGMatte3Effect.prototype.findSymbol = function(mask) {\r\n    var i = 0, len = _svgMatteSymbols.length;\r\n    while(i < len) {\r\n        if(_svgMatteSymbols[i] === mask) {\r\n            return _svgMatteSymbols[i];\r\n        }\r\n        i += 1;\r\n    }\r\n    return null;\r\n};\r\n\r\nSVGMatte3Effect.prototype.replaceInParent = function(mask, symbolId) {\r\n    var parentNode = mask.layerElement.parentNode;\r\n    if(!parentNode) {\r\n        return;\r\n    }\r\n    var children = parentNode.children;\r\n    var i = 0, len = children.length;\r\n    while (i < len) {\r\n        if (children[i] === mask.layerElement) {\r\n            break;\r\n        }\r\n        i += 1;\r\n    }\r\n    var nextChild;\r\n    if (i <= len - 2) {\r\n        nextChild = children[i + 1];\r\n    }\r\n    var useElem = createNS('use');\r\n    useElem.setAttribute('href', '#' + symbolId);\r\n    if(nextChild) {\r\n        parentNode.insertBefore(useElem, nextChild);\r\n    } else {\r\n        parentNode.appendChild(useElem);\r\n    }\r\n};\r\n\r\nSVGMatte3Effect.prototype.setElementAsMask = function(elem, mask) {\r\n    if(!this.findSymbol(mask)) {\r\n        var symbolId = createElementID();\r\n        var masker = createNS('mask');\r\n        masker.setAttribute('id', mask.layerId);\r\n        masker.setAttribute('mask-type', 'alpha');\r\n        _svgMatteSymbols.push(mask);\r\n        var defs = elem.globalData.defs;\r\n        defs.appendChild(masker);\r\n        var symbol = createNS('symbol');\r\n        symbol.setAttribute('id', symbolId);\r\n        this.replaceInParent(mask, symbolId);\r\n        symbol.appendChild(mask.layerElement);\r\n        defs.appendChild(symbol);\r\n        var useElem = createNS('use');\r\n        useElem.setAttribute('href', '#' + symbolId);\r\n        masker.appendChild(useElem);\r\n        mask.data.hd = false;\r\n        mask.show();\r\n    }\r\n    elem.setMatte(mask.layerId);\r\n};\r\n\r\nSVGMatte3Effect.prototype.initialize = function() {\r\n    var ind = this.filterManager.effectElements[0].p.v;\r\n    var elements = this.elem.comp.elements;\r\n    var i = 0, len = elements.length;\r\n    while (i < len) {\r\n    \tif (elements[i] && elements[i].data.ind === ind) {\r\n    \t\tthis.setElementAsMask(this.elem, elements[i]);\r\n    \t}\r\n    \ti += 1;\r\n    }\r\n    this.initialized = true;\r\n};\r\n\r\nSVGMatte3Effect.prototype.renderFrame = function() {\r\n\tif(!this.initialized) {\r\n\t\tthis.initialize();\r\n\t}\r\n};\r\nfunction SVGEffects(elem){\r\n    var i, len = elem.data.ef ? elem.data.ef.length : 0;\r\n    var filId = createElementID();\r\n    var fil = filtersFactory.createFilter(filId);\r\n    var count = 0;\r\n    this.filters = [];\r\n    var filterManager;\r\n    for(i=0;i<len;i+=1){\r\n        filterManager = null;\r\n        if(elem.data.ef[i].ty === 20){\r\n            count += 1;\r\n            filterManager = new SVGTintFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 21){\r\n            count += 1;\r\n            filterManager = new SVGFillFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 22){\r\n            filterManager = new SVGStrokeEffect(elem, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 23){\r\n            count += 1;\r\n            filterManager = new SVGTritoneFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 24){\r\n            count += 1;\r\n            filterManager = new SVGProLevelsFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 25){\r\n            count += 1;\r\n            filterManager = new SVGDropShadowEffect(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 28){\r\n            //count += 1;\r\n            filterManager = new SVGMatte3Effect(fil, elem.effectsManager.effectElements[i], elem);\r\n        }else if(elem.data.ef[i].ty === 29){\r\n            count += 1;\r\n            filterManager = new SVGGaussianBlurEffect(fil, elem.effectsManager.effectElements[i]);\r\n        }\r\n        if(filterManager) {\r\n            this.filters.push(filterManager);\r\n        }\r\n    }\r\n    if(count){\r\n        elem.globalData.defs.appendChild(fil);\r\n        elem.layerElement.setAttribute('filter','url(' + locationHref + '#'+filId+')');\r\n    }\r\n    if (this.filters.length) {\r\n        elem.addRenderableComponent(this);\r\n    }\r\n}\r\n\r\nSVGEffects.prototype.renderFrame = function(_isFirstFrame){\r\n    var i, len = this.filters.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.filters[i].renderFrame(_isFirstFrame);\r\n    }\r\n};\r\nfunction CVContextData() {\r\n\tthis.saved = [];\r\n    this.cArrPos = 0;\r\n    this.cTr = new Matrix();\r\n    this.cO = 1;\r\n    var i, len = 15;\r\n    this.savedOp = createTypedArray('float32', len);\r\n    for(i=0;i<len;i+=1){\r\n        this.saved[i] = createTypedArray('float32', 16);\r\n    }\r\n    this._length = len;\r\n}\r\n\r\nCVContextData.prototype.duplicate = function() {\r\n\tvar newLength = this._length * 2;\r\n\tvar currentSavedOp = this.savedOp;\r\n    this.savedOp = createTypedArray('float32', newLength);\r\n    this.savedOp.set(currentSavedOp);\r\n    var i = 0;\r\n    for(i = this._length; i < newLength; i += 1) {\r\n        this.saved[i] = createTypedArray('float32', 16);\r\n    }\r\n    this._length = newLength;\r\n};\r\n\r\nCVContextData.prototype.reset = function() {\r\n\tthis.cArrPos = 0;\r\n\tthis.cTr.reset();\r\n    this.cO = 1;\r\n};\r\nfunction CVBaseElement(){\r\n}\r\n\r\nCVBaseElement.prototype = {\r\n    createElements: function(){},\r\n    initRendererElement: function(){},\r\n    createContainerElements: function(){\r\n        this.canvasContext = this.globalData.canvasContext;\r\n        this.renderableEffectsManager = new CVEffects(this);\r\n    },\r\n    createContent: function(){},\r\n    setBlendMode: function(){\r\n        var globalData = this.globalData;\r\n        if(globalData.blendMode !== this.data.bm) {\r\n            globalData.blendMode = this.data.bm;\r\n            var blendModeValue = getBlendMode(this.data.bm);\r\n            globalData.canvasContext.globalCompositeOperation = blendModeValue;\r\n        }\r\n    },\r\n    createRenderableComponents: function(){\r\n        this.maskManager = new CVMaskElement(this.data, this);\r\n    },\r\n    hideElement: function(){\r\n        if (!this.hidden && (!this.isInRange || this.isTransparent)) {\r\n            this.hidden = true;\r\n        }\r\n    },\r\n    showElement: function(){\r\n        if (this.isInRange && !this.isTransparent){\r\n            this.hidden = false;\r\n            this._isFirstFrame = true;\r\n            this.maskManager._isFirstFrame = true;\r\n        }\r\n    },\r\n    renderFrame: function() {\r\n        if (this.hidden || this.data.hd) {\r\n            return;\r\n        }\r\n        this.renderTransform();\r\n        this.renderRenderable();\r\n        this.setBlendMode();\r\n        var forceRealStack = this.data.ty === 0;\r\n        this.globalData.renderer.save(forceRealStack);\r\n        this.globalData.renderer.ctxTransform(this.finalTransform.mat.props);\r\n        this.globalData.renderer.ctxOpacity(this.finalTransform.mProp.o.v);\r\n        this.renderInnerContent();\r\n        this.globalData.renderer.restore(forceRealStack);\r\n        if(this.maskManager.hasMasks) {\r\n            this.globalData.renderer.restore(true);\r\n        }\r\n        if (this._isFirstFrame) {\r\n            this._isFirstFrame = false;\r\n        }\r\n    },\r\n    destroy: function(){\r\n        this.canvasContext = null;\r\n        this.data = null;\r\n        this.globalData = null;\r\n        this.maskManager.destroy();\r\n    },\r\n    mHelper: new Matrix()\r\n};\r\nCVBaseElement.prototype.hide = CVBaseElement.prototype.hideElement;\r\nCVBaseElement.prototype.show = CVBaseElement.prototype.showElement;\r\n\r\nfunction CVImageElement(data, globalData, comp){\r\n    this.assetData = globalData.getAssetData(data.refId);\r\n    this.img = globalData.imageLoader.getImage(this.assetData);\r\n    this.initElement(data,globalData,comp);\r\n}\r\nextendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVImageElement);\r\n\r\nCVImageElement.prototype.initElement = SVGShapeElement.prototype.initElement;\r\nCVImageElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame;\r\n\r\nCVImageElement.prototype.createContent = function(){\r\n\r\n    if (this.img.width && (this.assetData.w !== this.img.width || this.assetData.h !== this.img.height)) {\r\n        var canvas = createTag('canvas');\r\n        canvas.width = this.assetData.w;\r\n        canvas.height = this.assetData.h;\r\n        var ctx = canvas.getContext('2d');\r\n\r\n        var imgW = this.img.width;\r\n        var imgH = this.img.height;\r\n        var imgRel = imgW / imgH;\r\n        var canvasRel = this.assetData.w/this.assetData.h;\r\n        var widthCrop, heightCrop;\r\n        var par = this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio;\r\n        if((imgRel > canvasRel && par === 'xMidYMid slice') || (imgRel < canvasRel && par !== 'xMidYMid slice')) {\r\n            heightCrop = imgH;\r\n            widthCrop = heightCrop*canvasRel;\r\n        } else {\r\n            widthCrop = imgW;\r\n            heightCrop = widthCrop/canvasRel;\r\n        }\r\n        ctx.drawImage(this.img,(imgW-widthCrop)/2,(imgH-heightCrop)/2,widthCrop,heightCrop,0,0,this.assetData.w,this.assetData.h);\r\n        this.img = canvas;\r\n    }\r\n\r\n};\r\n\r\nCVImageElement.prototype.renderInnerContent = function(parentMatrix){\r\n    this.canvasContext.drawImage(this.img, 0, 0);\r\n};\r\n\r\nCVImageElement.prototype.destroy = function(){\r\n    this.img = null;\r\n};\r\nfunction CVCompElement(data, globalData, comp) {\r\n    this.completeLayers = false;\r\n    this.layers = data.layers;\r\n    this.pendingElements = [];\r\n    this.elements = createSizedArray(this.layers.length);\r\n    this.initElement(data, globalData, comp);\r\n    this.tm = data.tm ? PropertyFactory.getProp(this,data.tm,0,globalData.frameRate, this) : {_placeholder:true};\r\n}\r\n\r\nextendPrototype([CanvasRenderer, ICompElement, CVBaseElement], CVCompElement);\r\n\r\nCVCompElement.prototype.renderInnerContent = function() {\r\n    var ctx = this.canvasContext;\r\n    ctx.beginPath();\r\n    ctx.moveTo(0, 0);\r\n    ctx.lineTo(this.data.w, 0);\r\n    ctx.lineTo(this.data.w, this.data.h);\r\n    ctx.lineTo(0, this.data.h);\r\n    ctx.lineTo(0, 0);\r\n    ctx.clip();\r\n    var i,len = this.layers.length;\r\n    for( i = len - 1; i >= 0; i -= 1 ){\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].renderFrame();\r\n        }\r\n    }\r\n};\r\n\r\nCVCompElement.prototype.destroy = function(){\r\n    var i,len = this.layers.length;\r\n    for( i = len - 1; i >= 0; i -= 1 ){\r\n        if(this.elements[i]) {\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n    this.layers = null;\r\n    this.elements = null;\r\n};\r\n\r\nfunction CVMaskElement(data,element){\r\n    this.data = data;\r\n    this.element = element;\r\n    this.masksProperties = this.data.masksProperties || [];\r\n    this.viewData = createSizedArray(this.masksProperties.length);\r\n    var i, len = this.masksProperties.length, hasMasks = false;\r\n    for (i = 0; i < len; i++) {\r\n        if(this.masksProperties[i].mode !== 'n'){\r\n            hasMasks = true;\r\n        }\r\n        this.viewData[i] = ShapePropertyFactory.getShapeProp(this.element,this.masksProperties[i],3);\r\n    }\r\n    this.hasMasks = hasMasks;\r\n    if(hasMasks) {\r\n        this.element.addRenderableComponent(this);\r\n    }\r\n}\r\n\r\nCVMaskElement.prototype.renderFrame = function () {\r\n    if(!this.hasMasks){\r\n        return;\r\n    }\r\n    var transform = this.element.finalTransform.mat;\r\n    var ctx = this.element.canvasContext;\r\n    var i, len = this.masksProperties.length;\r\n    var pt,pts,data;\r\n    ctx.beginPath();\r\n    for (i = 0; i < len; i++) {\r\n        if(this.masksProperties[i].mode !== 'n'){\r\n            if (this.masksProperties[i].inv) {\r\n                ctx.moveTo(0, 0);\r\n                ctx.lineTo(this.element.globalData.compSize.w, 0);\r\n                ctx.lineTo(this.element.globalData.compSize.w, this.element.globalData.compSize.h);\r\n                ctx.lineTo(0, this.element.globalData.compSize.h);\r\n                ctx.lineTo(0, 0);\r\n            }\r\n            data = this.viewData[i].v;\r\n            pt = transform.applyToPointArray(data.v[0][0],data.v[0][1],0);\r\n            ctx.moveTo(pt[0], pt[1]);\r\n            var j, jLen = data._length;\r\n            for (j = 1; j < jLen; j++) {\r\n                pts = transform.applyToTriplePoints(data.o[j - 1], data.i[j], data.v[j]);\r\n                ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);\r\n            }\r\n            pts = transform.applyToTriplePoints(data.o[j - 1], data.i[0], data.v[0]);\r\n            ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);\r\n        }\r\n    }\r\n    this.element.globalData.renderer.save(true);\r\n    ctx.clip();\r\n};\r\n\r\nCVMaskElement.prototype.getMaskProperty = MaskElement.prototype.getMaskProperty;\r\n\r\nCVMaskElement.prototype.destroy = function(){\r\n    this.element = null;\r\n};\r\nfunction CVShapeElement(data, globalData, comp) {\r\n    this.shapes = [];\r\n    this.shapesData = data.shapes;\r\n    this.stylesList = [];\r\n    this.itemsData = [];\r\n    this.prevViewData = [];\r\n    this.shapeModifiers = [];\r\n    this.processedElements = [];\r\n    this.transformsManager = new ShapeTransformManager();\r\n    this.initElement(data, globalData, comp);\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,CVBaseElement,IShapeElement,HierarchyElement,FrameElement,RenderableElement], CVShapeElement);\r\n\r\nCVShapeElement.prototype.initElement = RenderableDOMElement.prototype.initElement;\r\n\r\nCVShapeElement.prototype.transformHelper = {opacity:1,_opMdf:false};\r\n\r\nCVShapeElement.prototype.dashResetter = [];\r\n\r\nCVShapeElement.prototype.createContent = function(){\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData, true, []);\r\n};\r\n\r\nCVShapeElement.prototype.createStyleElement = function(data, transforms) {\r\n    var styleElem = {\r\n        data: data,\r\n        type: data.ty,\r\n        preTransforms: this.transformsManager.addTransformSequence(transforms),\r\n        transforms: [],\r\n        elements: [],\r\n        closed: data.hd === true\r\n    };\r\n    var elementData = {};\r\n    if(data.ty == 'fl' || data.ty == 'st'){\r\n        elementData.c = PropertyFactory.getProp(this,data.c,1,255,this);\r\n        if(!elementData.c.k){\r\n            styleElem.co = 'rgb('+bm_floor(elementData.c.v[0])+','+bm_floor(elementData.c.v[1])+','+bm_floor(elementData.c.v[2])+')';\r\n        }\r\n    } else if (data.ty === 'gf' || data.ty === 'gs') {\r\n        elementData.s = PropertyFactory.getProp(this,data.s,1,null,this);\r\n        elementData.e = PropertyFactory.getProp(this,data.e,1,null,this);\r\n        elementData.h = PropertyFactory.getProp(this,data.h||{k:0},0,0.01,this);\r\n        elementData.a = PropertyFactory.getProp(this,data.a||{k:0},0,degToRads,this);\r\n        elementData.g = new GradientProperty(this,data.g,this);\r\n    }\r\n    elementData.o = PropertyFactory.getProp(this,data.o,0,0.01,this);\r\n    if(data.ty == 'st' || data.ty == 'gs') {\r\n        styleElem.lc = this.lcEnum[data.lc] || 'round';\r\n        styleElem.lj = this.ljEnum[data.lj] || 'round';\r\n        if(data.lj == 1) {\r\n            styleElem.ml = data.ml;\r\n        }\r\n        elementData.w = PropertyFactory.getProp(this,data.w,0,null,this);\r\n        if(!elementData.w.k){\r\n            styleElem.wi = elementData.w.v;\r\n        }\r\n        if(data.d){\r\n            var d = new DashProperty(this,data.d,'canvas', this);\r\n            elementData.d = d;\r\n            if(!elementData.d.k){\r\n                styleElem.da = elementData.d.dashArray;\r\n                styleElem.do = elementData.d.dashoffset[0];\r\n            }\r\n        }\r\n    } else {\r\n        styleElem.r = data.r === 2 ? 'evenodd' : 'nonzero';\r\n    }\r\n    this.stylesList.push(styleElem);\r\n    elementData.style = styleElem;\r\n    return elementData;\r\n};\r\n\r\nCVShapeElement.prototype.createGroupElement = function(data) {\r\n    var elementData = {\r\n        it: [],\r\n        prevViewData: []\r\n    };\r\n    return elementData;\r\n};\r\n\r\nCVShapeElement.prototype.createTransformElement = function(data) {\r\n    var elementData = {\r\n        transform : {\r\n            opacity: 1,\r\n            _opMdf:false,\r\n            key: this.transformsManager.getNewKey(),\r\n            op: PropertyFactory.getProp(this,data.o,0,0.01,this),\r\n            mProps: TransformPropertyFactory.getTransformProperty(this,data,this)\r\n        }\r\n    };\r\n    return elementData;\r\n};\r\n\r\nCVShapeElement.prototype.createShapeElement = function(data) {\r\n    var elementData = new CVShapeData(this, data, this.stylesList, this.transformsManager);\r\n    \r\n    this.shapes.push(elementData);\r\n    this.addShapeToModifiers(elementData);\r\n    return elementData;\r\n};\r\n\r\nCVShapeElement.prototype.reloadShapes = function() {\r\n    this._isFirstFrame = true;\r\n    var i, len = this.itemsData.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        this.prevViewData[i] = this.itemsData[i];\r\n    }\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData, true, []);\r\n    len = this.dynamicProperties.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        this.dynamicProperties[i].getValue();\r\n    }\r\n    this.renderModifiers();\r\n    this.transformsManager.processSequences(this._isFirstFrame);\r\n};\r\n\r\nCVShapeElement.prototype.addTransformToStyleList = function(transform) {\r\n    var i, len = this.stylesList.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        if(!this.stylesList[i].closed) {\r\n            this.stylesList[i].transforms.push(transform);\r\n        }\r\n    }\r\n}\r\n\r\nCVShapeElement.prototype.removeTransformFromStyleList = function() {\r\n    var i, len = this.stylesList.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        if(!this.stylesList[i].closed) {\r\n            this.stylesList[i].transforms.pop();\r\n        }\r\n    }\r\n}\r\n\r\nCVShapeElement.prototype.closeStyles = function(styles) {\r\n    var i, len = styles.length, j, jLen;\r\n    for (i = 0; i < len; i += 1) {\r\n        styles[i].closed = true;\r\n    }\r\n}\r\n\r\nCVShapeElement.prototype.searchShapes = function(arr,itemsData, prevViewData, shouldRender, transforms){\r\n    var i, len = arr.length - 1;\r\n    var j, jLen;\r\n    var ownStyles = [], ownModifiers = [], processedPos, modifier, currentTransform;\r\n    var ownTransforms = [].concat(transforms);\r\n    for(i=len;i>=0;i-=1){\r\n        processedPos = this.searchProcessedElement(arr[i]);\r\n        if(!processedPos){\r\n            arr[i]._shouldRender = shouldRender;\r\n        } else {\r\n            itemsData[i] = prevViewData[processedPos - 1];\r\n        }\r\n        if(arr[i].ty == 'fl' || arr[i].ty == 'st'|| arr[i].ty == 'gf'|| arr[i].ty == 'gs'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createStyleElement(arr[i], ownTransforms);\r\n            } else {\r\n                itemsData[i].style.closed = false;\r\n            }\r\n            \r\n            ownStyles.push(itemsData[i].style);\r\n        }else if(arr[i].ty == 'gr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createGroupElement(arr[i]);\r\n            } else {\r\n                jLen = itemsData[i].it.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    itemsData[i].prevViewData[j] = itemsData[i].it[j];\r\n                }\r\n            }\r\n            this.searchShapes(arr[i].it,itemsData[i].it,itemsData[i].prevViewData, shouldRender, ownTransforms);\r\n        }else if(arr[i].ty == 'tr'){\r\n            if(!processedPos){\r\n                currentTransform = this.createTransformElement(arr[i]);\r\n                itemsData[i] = currentTransform;\r\n            }\r\n            ownTransforms.push(itemsData[i]);\r\n            this.addTransformToStyleList(itemsData[i]);\r\n        }else if(arr[i].ty == 'sh' || arr[i].ty == 'rc' || arr[i].ty == 'el' || arr[i].ty == 'sr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createShapeElement(arr[i]);\r\n            }\r\n            \r\n        }else if(arr[i].ty == 'tm' || arr[i].ty == 'rd'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                modifier.init(this,arr[i]);\r\n                itemsData[i] = modifier;\r\n                this.shapeModifiers.push(modifier);\r\n            } else {\r\n                modifier = itemsData[i];\r\n                modifier.closed = false;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        } else if(arr[i].ty == 'rp'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                itemsData[i] = modifier;\r\n                modifier.init(this,arr,i,itemsData);\r\n                this.shapeModifiers.push(modifier);\r\n                shouldRender = false;\r\n            }else{\r\n                modifier = itemsData[i];\r\n                modifier.closed = true;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        }\r\n        this.addProcessedElement(arr[i], i + 1);\r\n    }\r\n    this.removeTransformFromStyleList();\r\n    this.closeStyles(ownStyles);\r\n    len = ownModifiers.length;\r\n    for(i=0;i<len;i+=1){\r\n        ownModifiers[i].closed = true;\r\n    }\r\n};\r\n\r\nCVShapeElement.prototype.renderInnerContent = function() {\r\n    this.transformHelper.opacity = 1;\r\n    this.transformHelper._opMdf = false;\r\n    this.renderModifiers();\r\n    this.transformsManager.processSequences(this._isFirstFrame);\r\n    this.renderShape(this.transformHelper,this.shapesData,this.itemsData,true);\r\n};\r\n\r\nCVShapeElement.prototype.renderShapeTransform = function(parentTransform, groupTransform) {\r\n    var props, groupMatrix;\r\n    if(parentTransform._opMdf || groupTransform.op._mdf || this._isFirstFrame) {\r\n        groupTransform.opacity = parentTransform.opacity;\r\n        groupTransform.opacity *= groupTransform.op.v;\r\n        groupTransform._opMdf = true;\r\n    }\r\n};\r\n\r\nCVShapeElement.prototype.drawLayer = function() {\r\n    var i, len = this.stylesList.length;\r\n    var j, jLen, k, kLen,elems,nodes, renderer = this.globalData.renderer, ctx = this.globalData.canvasContext, type, currentStyle;\r\n    for(i=0;i<len;i+=1){\r\n        currentStyle = this.stylesList[i];\r\n        type = currentStyle.type;\r\n\r\n        //Skipping style when\r\n        //Stroke width equals 0\r\n        //style should not be rendered (extra unused repeaters)\r\n        //current opacity equals 0\r\n        //global opacity equals 0\r\n        if(((type === 'st' || type === 'gs') && currentStyle.wi === 0) || !currentStyle.data._shouldRender || currentStyle.coOp === 0 || this.globalData.currentGlobalAlpha === 0){\r\n            continue;\r\n        }\r\n        renderer.save();\r\n        elems = currentStyle.elements;\r\n        if(type === 'st' || type === 'gs'){\r\n            ctx.strokeStyle = type === 'st' ? currentStyle.co : currentStyle.grd;\r\n            ctx.lineWidth = currentStyle.wi;\r\n            ctx.lineCap = currentStyle.lc;\r\n            ctx.lineJoin = currentStyle.lj;\r\n            ctx.miterLimit = currentStyle.ml || 0;\r\n        } else {\r\n            ctx.fillStyle = type === 'fl' ? currentStyle.co : currentStyle.grd;\r\n        }\r\n        renderer.ctxOpacity(currentStyle.coOp);\r\n        if(type !== 'st' && type !== 'gs'){\r\n            ctx.beginPath();\r\n        }\r\n        renderer.ctxTransform(currentStyle.preTransforms.finalTransform.props);\r\n        jLen = elems.length;\r\n        for(j=0;j<jLen;j+=1){\r\n            if(type === 'st' || type === 'gs'){\r\n                ctx.beginPath();\r\n                if(currentStyle.da){\r\n                    ctx.setLineDash(currentStyle.da);\r\n                    ctx.lineDashOffset = currentStyle.do;\r\n                }\r\n            }\r\n            nodes = elems[j].trNodes;\r\n            kLen = nodes.length;\r\n\r\n            for(k=0;k<kLen;k+=1){\r\n                if(nodes[k].t == 'm'){\r\n                    ctx.moveTo(nodes[k].p[0],nodes[k].p[1]);\r\n                }else if(nodes[k].t == 'c'){\r\n                    ctx.bezierCurveTo(nodes[k].pts[0],nodes[k].pts[1],nodes[k].pts[2],nodes[k].pts[3],nodes[k].pts[4],nodes[k].pts[5]);\r\n                }else{\r\n                    ctx.closePath();\r\n                }\r\n            }\r\n            if(type === 'st' || type === 'gs'){\r\n                ctx.stroke();\r\n                if(currentStyle.da){\r\n                    ctx.setLineDash(this.dashResetter);\r\n                }\r\n            }\r\n        }\r\n        if(type !== 'st' && type !== 'gs'){\r\n            ctx.fill(currentStyle.r);\r\n        }\r\n        renderer.restore();\r\n    }\r\n};\r\n\r\nCVShapeElement.prototype.renderShape = function(parentTransform,items,data,isMain){\r\n    var i, len = items.length - 1;\r\n    var groupTransform;\r\n    groupTransform = parentTransform;\r\n    for(i=len;i>=0;i-=1){\r\n        if(items[i].ty == 'tr'){\r\n            groupTransform = data[i].transform;\r\n            this.renderShapeTransform(parentTransform, groupTransform);\r\n        }else if(items[i].ty == 'sh' || items[i].ty == 'el' || items[i].ty == 'rc' || items[i].ty == 'sr'){\r\n            this.renderPath(items[i],data[i]);\r\n        }else if(items[i].ty == 'fl'){\r\n            this.renderFill(items[i],data[i],groupTransform);\r\n        }else if(items[i].ty == 'st'){\r\n            this.renderStroke(items[i],data[i],groupTransform);\r\n        }else if(items[i].ty == 'gf' || items[i].ty == 'gs'){\r\n            this.renderGradientFill(items[i],data[i],groupTransform);\r\n        }else if(items[i].ty == 'gr'){\r\n            this.renderShape(groupTransform,items[i].it,data[i].it);\r\n        }else if(items[i].ty == 'tm'){\r\n            //\r\n        }\r\n    }\r\n    if(isMain){\r\n        this.drawLayer();\r\n    }\r\n    \r\n};\r\n\r\nCVShapeElement.prototype.renderStyledShape = function(styledShape, shape){\r\n    if(this._isFirstFrame || shape._mdf || styledShape.transforms._mdf) {\r\n        var shapeNodes = styledShape.trNodes;\r\n        var paths = shape.paths;\r\n        var i, len, j, jLen = paths._length;\r\n        shapeNodes.length = 0;\r\n        var groupTransformMat = styledShape.transforms.finalTransform;\r\n        for (j = 0; j < jLen; j += 1) {\r\n            var pathNodes = paths.shapes[j];\r\n            if(pathNodes && pathNodes.v){\r\n                len = pathNodes._length;\r\n                for (i = 1; i < len; i += 1) {\r\n                    if (i === 1) {\r\n                        shapeNodes.push({\r\n                            t: 'm',\r\n                            p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0)\r\n                        });\r\n                    }\r\n                    shapeNodes.push({\r\n                        t: 'c',\r\n                        pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[i], pathNodes.v[i])\r\n                    });\r\n                }\r\n                if (len === 1) {\r\n                    shapeNodes.push({\r\n                        t: 'm',\r\n                        p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0)\r\n                    });\r\n                }\r\n                if (pathNodes.c && len) {\r\n                    shapeNodes.push({\r\n                        t: 'c',\r\n                        pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[0], pathNodes.v[0])\r\n                    });\r\n                    shapeNodes.push({\r\n                        t: 'z'\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        styledShape.trNodes = shapeNodes;\r\n    }\r\n}\r\n\r\nCVShapeElement.prototype.renderPath = function(pathData,itemData){\r\n    if(pathData.hd !== true && pathData._shouldRender) {\r\n        var i, len = itemData.styledShapes.length;\r\n        for (i = 0; i < len; i += 1) {\r\n            this.renderStyledShape(itemData.styledShapes[i], itemData.sh);\r\n        }\r\n    }\r\n};\r\n\r\nCVShapeElement.prototype.renderFill = function(styleData,itemData, groupTransform){\r\n    var styleElem = itemData.style;\r\n\r\n    if (itemData.c._mdf || this._isFirstFrame) {\r\n        styleElem.co = 'rgb(' \r\n        + bm_floor(itemData.c.v[0]) + ',' \r\n        + bm_floor(itemData.c.v[1]) + ',' \r\n        + bm_floor(itemData.c.v[2]) + ')';\r\n    }\r\n    if (itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame) {\r\n        styleElem.coOp = itemData.o.v * groupTransform.opacity;\r\n    }\r\n};\r\n\r\nCVShapeElement.prototype.renderGradientFill = function(styleData,itemData, groupTransform){\r\n    var styleElem = itemData.style;\r\n    if(!styleElem.grd || itemData.g._mdf || itemData.s._mdf || itemData.e._mdf || (styleData.t !== 1 && (itemData.h._mdf || itemData.a._mdf))) {\r\n        var ctx = this.globalData.canvasContext;\r\n        var grd;\r\n        var pt1 = itemData.s.v, pt2 = itemData.e.v;\r\n        if (styleData.t === 1) {\r\n            grd = ctx.createLinearGradient(pt1[0], pt1[1], pt2[0], pt2[1]);\r\n        } else {\r\n            var rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\r\n            var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);\r\n\r\n            var percent = itemData.h.v >= 1 ? 0.99 : itemData.h.v <= -1 ? -0.99: itemData.h.v;\r\n            var dist = rad * percent;\r\n            var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];\r\n            var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];\r\n            var grd = ctx.createRadialGradient(x, y, 0, pt1[0], pt1[1], rad);\r\n        }\r\n\r\n        var i, len = styleData.g.p;\r\n        var cValues = itemData.g.c;\r\n        var opacity = 1;\r\n\r\n        for (i = 0; i < len; i += 1){\r\n            if(itemData.g._hasOpacity && itemData.g._collapsable) {\r\n                opacity = itemData.g.o[i*2 + 1];\r\n            }\r\n            grd.addColorStop(cValues[i * 4] / 100,'rgba('+ cValues[i * 4 + 1] + ',' + cValues[i * 4 + 2] + ','+cValues[i * 4 + 3] + ',' + opacity + ')');\r\n        }\r\n        styleElem.grd = grd;\r\n    }\r\n    styleElem.coOp = itemData.o.v*groupTransform.opacity;\r\n    \r\n};\r\n\r\nCVShapeElement.prototype.renderStroke = function(styleData,itemData, groupTransform){\r\n    var styleElem = itemData.style;\r\n    var d = itemData.d;\r\n    if(d && (d._mdf  || this._isFirstFrame)){\r\n        styleElem.da = d.dashArray;\r\n        styleElem.do = d.dashoffset[0];\r\n    }\r\n    if(itemData.c._mdf || this._isFirstFrame){\r\n        styleElem.co = 'rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')';\r\n    }\r\n    if(itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame){\r\n        styleElem.coOp = itemData.o.v*groupTransform.opacity;\r\n    }\r\n    if(itemData.w._mdf || this._isFirstFrame){\r\n        styleElem.wi = itemData.w.v;\r\n    }\r\n};\r\n\r\n\r\nCVShapeElement.prototype.destroy = function(){\r\n    this.shapesData = null;\r\n    this.globalData = null;\r\n    this.canvasContext = null;\r\n    this.stylesList.length = 0;\r\n    this.itemsData.length = 0;\r\n};\r\n\r\n\r\nfunction CVSolidElement(data, globalData, comp) {\r\n    this.initElement(data,globalData,comp);\r\n}\r\nextendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVSolidElement);\r\n\r\nCVSolidElement.prototype.initElement = SVGShapeElement.prototype.initElement;\r\nCVSolidElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame;\r\n\r\nCVSolidElement.prototype.renderInnerContent = function() {\r\n    var ctx = this.canvasContext;\r\n    ctx.fillStyle = this.data.sc;\r\n    ctx.fillRect(0, 0, this.data.sw, this.data.sh);\r\n    //\r\n};\r\nfunction CVTextElement(data, globalData, comp){\r\n    this.textSpans = [];\r\n    this.yOffset = 0;\r\n    this.fillColorAnim = false;\r\n    this.strokeColorAnim = false;\r\n    this.strokeWidthAnim = false;\r\n    this.stroke = false;\r\n    this.fill = false;\r\n    this.justifyOffset = 0;\r\n    this.currentRender = null;\r\n    this.renderType = 'canvas';\r\n    this.values = {\r\n        fill: 'rgba(0,0,0,0)',\r\n        stroke: 'rgba(0,0,0,0)',\r\n        sWidth: 0,\r\n        fValue: ''\r\n    };\r\n    this.initElement(data,globalData,comp);\r\n}\r\nextendPrototype([BaseElement,TransformElement,CVBaseElement,HierarchyElement,FrameElement,RenderableElement,ITextElement], CVTextElement);\r\n\r\nCVTextElement.prototype.tHelper = createTag('canvas').getContext('2d');\r\n\r\nCVTextElement.prototype.buildNewText = function(){\r\n    var documentData = this.textProperty.currentData;\r\n    this.renderedLetters = createSizedArray(documentData.l ? documentData.l.length : 0);\r\n\r\n    var hasFill = false;\r\n    if(documentData.fc) {\r\n        hasFill = true;\r\n        this.values.fill = this.buildColor(documentData.fc);\r\n    }else{\r\n        this.values.fill = 'rgba(0,0,0,0)';\r\n    }\r\n    this.fill = hasFill;\r\n    var hasStroke = false;\r\n    if(documentData.sc){\r\n        hasStroke = true;\r\n        this.values.stroke = this.buildColor(documentData.sc);\r\n        this.values.sWidth = documentData.sw;\r\n    }\r\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\r\n    var i, len;\r\n    var letters = documentData.l;\r\n    var matrixHelper = this.mHelper;\r\n    this.stroke = hasStroke;\r\n    this.values.fValue = documentData.finalSize + 'px '+ this.globalData.fontManager.getFontByName(documentData.f).fFamily;\r\n    len = documentData.finalText.length;\r\n    //this.tHelper.font = this.values.fValue;\r\n    var charData, shapeData, k, kLen, shapes, j, jLen, pathNodes, commands, pathArr, singleShape = this.data.singleShape;\r\n    var trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n    var xPos = 0, yPos = 0, firstLine = true;\r\n    var cnt = 0;\r\n    for (i = 0; i < len; i += 1) {\r\n        charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\r\n        shapeData = charData && charData.data || {};\r\n        matrixHelper.reset();\r\n        if(singleShape && letters[i].n) {\r\n            xPos = -trackingOffset;\r\n            yPos += documentData.yOffset;\r\n            yPos += firstLine ? 1 : 0;\r\n            firstLine = false;\r\n        }\r\n\r\n        shapes = shapeData.shapes ? shapeData.shapes[0].it : [];\r\n        jLen = shapes.length;\r\n        matrixHelper.scale(documentData.finalSize/100,documentData.finalSize/100);\r\n        if(singleShape){\r\n            this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\r\n        }\r\n        commands = createSizedArray(jLen);\r\n        for(j=0;j<jLen;j+=1){\r\n            kLen = shapes[j].ks.k.i.length;\r\n            pathNodes = shapes[j].ks.k;\r\n            pathArr = [];\r\n            for(k=1;k<kLen;k+=1){\r\n                if(k==1){\r\n                    pathArr.push(matrixHelper.applyToX(pathNodes.v[0][0],pathNodes.v[0][1],0),matrixHelper.applyToY(pathNodes.v[0][0],pathNodes.v[0][1],0));\r\n                }\r\n                pathArr.push(matrixHelper.applyToX(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToY(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToX(pathNodes.i[k][0],pathNodes.i[k][1],0),matrixHelper.applyToY(pathNodes.i[k][0],pathNodes.i[k][1],0),matrixHelper.applyToX(pathNodes.v[k][0],pathNodes.v[k][1],0),matrixHelper.applyToY(pathNodes.v[k][0],pathNodes.v[k][1],0));\r\n            }\r\n            pathArr.push(matrixHelper.applyToX(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToY(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToX(pathNodes.i[0][0],pathNodes.i[0][1],0),matrixHelper.applyToY(pathNodes.i[0][0],pathNodes.i[0][1],0),matrixHelper.applyToX(pathNodes.v[0][0],pathNodes.v[0][1],0),matrixHelper.applyToY(pathNodes.v[0][0],pathNodes.v[0][1],0));\r\n            commands[j] = pathArr;\r\n        }\r\n        if(singleShape){\r\n            xPos += letters[i].l;\r\n            xPos += trackingOffset;\r\n        }\r\n        if(this.textSpans[cnt]){\r\n            this.textSpans[cnt].elem = commands;\r\n        } else {\r\n            this.textSpans[cnt] = {elem: commands};\r\n        }\r\n        cnt +=1;\r\n    }\r\n};\r\n\r\nCVTextElement.prototype.renderInnerContent = function(){\r\n    var ctx = this.canvasContext;\r\n    var finalMat = this.finalTransform.mat.props;\r\n    ctx.font = this.values.fValue;\r\n    ctx.lineCap = 'butt';\r\n    ctx.lineJoin = 'miter';\r\n    ctx.miterLimit = 4;\r\n\r\n    if(!this.data.singleShape){\r\n        this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\r\n    }\r\n\r\n    var  i,len, j, jLen, k, kLen;\r\n    var renderedLetters = this.textAnimator.renderedLetters;\r\n\r\n    var letters = this.textProperty.currentData.l;\r\n\r\n    len = letters.length;\r\n    var renderedLetter;\r\n    var lastFill = null, lastStroke = null, lastStrokeW = null, commands, pathArr;\r\n    for(i=0;i<len;i+=1){\r\n        if(letters[i].n){\r\n            continue;\r\n        }\r\n        renderedLetter = renderedLetters[i];\r\n        if(renderedLetter){\r\n            this.globalData.renderer.save();\r\n            this.globalData.renderer.ctxTransform(renderedLetter.p);\r\n            this.globalData.renderer.ctxOpacity(renderedLetter.o);\r\n        }\r\n        if(this.fill){\r\n            if(renderedLetter && renderedLetter.fc){\r\n                if(lastFill !== renderedLetter.fc){\r\n                    lastFill = renderedLetter.fc;\r\n                    ctx.fillStyle = renderedLetter.fc;\r\n                }\r\n            }else if(lastFill !== this.values.fill){\r\n                lastFill = this.values.fill;\r\n                ctx.fillStyle = this.values.fill;\r\n            }\r\n            commands = this.textSpans[i].elem;\r\n            jLen = commands.length;\r\n            this.globalData.canvasContext.beginPath();\r\n            for(j=0;j<jLen;j+=1) {\r\n                pathArr = commands[j];\r\n                kLen = pathArr.length;\r\n                this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);\r\n                for (k = 2; k < kLen; k += 6) {\r\n                    this.globalData.canvasContext.bezierCurveTo(pathArr[k], pathArr[k + 1], pathArr[k + 2], pathArr[k + 3], pathArr[k + 4], pathArr[k + 5]);\r\n                }\r\n            }\r\n            this.globalData.canvasContext.closePath();\r\n            this.globalData.canvasContext.fill();\r\n            ///ctx.fillText(this.textSpans[i].val,0,0);\r\n        }\r\n        if(this.stroke){\r\n            if(renderedLetter && renderedLetter.sw){\r\n                if(lastStrokeW !== renderedLetter.sw){\r\n                    lastStrokeW = renderedLetter.sw;\r\n                    ctx.lineWidth = renderedLetter.sw;\r\n                }\r\n            }else if(lastStrokeW !== this.values.sWidth){\r\n                lastStrokeW = this.values.sWidth;\r\n                ctx.lineWidth = this.values.sWidth;\r\n            }\r\n            if(renderedLetter && renderedLetter.sc){\r\n                if(lastStroke !== renderedLetter.sc){\r\n                    lastStroke = renderedLetter.sc;\r\n                    ctx.strokeStyle = renderedLetter.sc;\r\n                }\r\n            }else if(lastStroke !== this.values.stroke){\r\n                lastStroke = this.values.stroke;\r\n                ctx.strokeStyle = this.values.stroke;\r\n            }\r\n            commands = this.textSpans[i].elem;\r\n            jLen = commands.length;\r\n            this.globalData.canvasContext.beginPath();\r\n            for(j=0;j<jLen;j+=1) {\r\n                pathArr = commands[j];\r\n                kLen = pathArr.length;\r\n                this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);\r\n                for (k = 2; k < kLen; k += 6) {\r\n                    this.globalData.canvasContext.bezierCurveTo(pathArr[k], pathArr[k + 1], pathArr[k + 2], pathArr[k + 3], pathArr[k + 4], pathArr[k + 5]);\r\n                }\r\n            }\r\n            this.globalData.canvasContext.closePath();\r\n            this.globalData.canvasContext.stroke();\r\n            ///ctx.strokeText(letters[i].val,0,0);\r\n        }\r\n        if(renderedLetter) {\r\n            this.globalData.renderer.restore();\r\n        }\r\n    }\r\n};\r\nfunction CVEffects() {\r\n\r\n}\r\nCVEffects.prototype.renderFrame = function(){};\r\nfunction HBaseElement(data,globalData,comp){}\r\nHBaseElement.prototype = {\r\n    checkBlendMode: function(){},\r\n    initRendererElement: function(){\r\n        this.baseElement = createTag(this.data.tg || 'div');\r\n        if(this.data.hasMask) {\r\n            this.svgElement = createNS('svg');\r\n            this.layerElement = createNS('g');\r\n            this.maskedElement = this.layerElement;\r\n            this.svgElement.appendChild(this.layerElement);\r\n            this.baseElement.appendChild(this.svgElement);\r\n        } else {\r\n            this.layerElement = this.baseElement;\r\n        }\r\n        styleDiv(this.baseElement);\r\n    },\r\n    createContainerElements: function(){\r\n        this.renderableEffectsManager = new CVEffects(this);\r\n        this.transformedElement = this.baseElement;\r\n        this.maskedElement = this.layerElement;\r\n        if (this.data.ln) {\r\n            this.layerElement.setAttribute('id',this.data.ln);\r\n        }\r\n        if (this.data.cl) {\r\n            this.layerElement.setAttribute('class', this.data.cl);\r\n        }\r\n        if (this.data.bm !== 0) {\r\n            this.setBlendMode();\r\n        }\r\n    },\r\n    renderElement: function() {\r\n        if(this.finalTransform._matMdf){\r\n            this.transformedElement.style.transform = this.transformedElement.style.webkitTransform = this.finalTransform.mat.toCSS();\r\n        }\r\n        if(this.finalTransform._opMdf){\r\n            this.transformedElement.style.opacity = this.finalTransform.mProp.o.v;\r\n        }\r\n    },\r\n    renderFrame: function() {\r\n        //If it is exported as hidden (data.hd === true) no need to render\r\n        //If it is not visible no need to render\r\n        if (this.data.hd || this.hidden) {\r\n            return;\r\n        }\r\n        this.renderTransform();\r\n        this.renderRenderable();\r\n        this.renderElement();\r\n        this.renderInnerContent();\r\n        if (this._isFirstFrame) {\r\n            this._isFirstFrame = false;\r\n        }\r\n    },\r\n    destroy: function(){\r\n        this.layerElement = null;\r\n        this.transformedElement = null;\r\n        if(this.matteElement) {\r\n            this.matteElement = null;\r\n        }\r\n        if(this.maskManager) {\r\n            this.maskManager.destroy();\r\n            this.maskManager = null;\r\n        }\r\n    },\r\n    createRenderableComponents: function(){\r\n        this.maskManager = new MaskElement(this.data, this, this.globalData);\r\n    },\r\n    addEffects: function(){\r\n    },\r\n    setMatte: function(){}\r\n};\r\nHBaseElement.prototype.getBaseElement = SVGBaseElement.prototype.getBaseElement;\r\nHBaseElement.prototype.destroyBaseElement = HBaseElement.prototype.destroy;\r\nHBaseElement.prototype.buildElementParenting = HybridRenderer.prototype.buildElementParenting;\r\nfunction HSolidElement(data,globalData,comp){\r\n    this.initElement(data,globalData,comp);\r\n}\r\nextendPrototype([BaseElement,TransformElement,HBaseElement,HierarchyElement,FrameElement,RenderableDOMElement], HSolidElement);\r\n\r\nHSolidElement.prototype.createContent = function(){\r\n    var rect;\r\n    if(this.data.hasMask){\r\n        rect = createNS('rect');\r\n        rect.setAttribute('width',this.data.sw);\r\n        rect.setAttribute('height',this.data.sh);\r\n        rect.setAttribute('fill',this.data.sc);\r\n        this.svgElement.setAttribute('width',this.data.sw);\r\n        this.svgElement.setAttribute('height',this.data.sh);\r\n    } else {\r\n        rect = createTag('div');\r\n        rect.style.width = this.data.sw + 'px';\r\n        rect.style.height = this.data.sh + 'px';\r\n        rect.style.backgroundColor = this.data.sc;\r\n    }\r\n    this.layerElement.appendChild(rect);\r\n};\r\n\r\nfunction HCompElement(data,globalData,comp){\r\n    this.layers = data.layers;\r\n    this.supports3d = !data.hasMask;\r\n    this.completeLayers = false;\r\n    this.pendingElements = [];\r\n    this.elements = this.layers ? createSizedArray(this.layers.length) : [];\r\n    this.initElement(data,globalData,comp);\r\n    this.tm = data.tm ? PropertyFactory.getProp(this,data.tm,0,globalData.frameRate,this) : {_placeholder:true};\r\n}\r\n\r\nextendPrototype([HybridRenderer, ICompElement, HBaseElement], HCompElement);\r\nHCompElement.prototype._createBaseContainerElements = HCompElement.prototype.createContainerElements;\r\n\r\nHCompElement.prototype.createContainerElements = function(){\r\n    this._createBaseContainerElements();\r\n    //divElement.style.clip = 'rect(0px, '+this.data.w+'px, '+this.data.h+'px, 0px)';\r\n    if(this.data.hasMask){\r\n        this.svgElement.setAttribute('width',this.data.w);\r\n        this.svgElement.setAttribute('height',this.data.h);\r\n        this.transformedElement = this.baseElement;\r\n    } else {\r\n        this.transformedElement = this.layerElement;\r\n    }\r\n};\r\n\r\nHCompElement.prototype.addTo3dContainer = function(elem,pos) {\r\n    var j = 0;\r\n    var nextElement;\r\n    while(j<pos){\r\n        if(this.elements[j] && this.elements[j].getBaseElement){\r\n            nextElement = this.elements[j].getBaseElement();\r\n        }\r\n        j += 1;\r\n    }\r\n    if(nextElement){\r\n        this.layerElement.insertBefore(elem, nextElement);\r\n    } else {\r\n        this.layerElement.appendChild(elem);\r\n    }\r\n}\r\n\r\nfunction HShapeElement(data,globalData,comp){\r\n    //List of drawable elements\r\n    this.shapes = [];\r\n    // Full shape data\r\n    this.shapesData = data.shapes;\r\n    //List of styles that will be applied to shapes\r\n    this.stylesList = [];\r\n    //List of modifiers that will be applied to shapes\r\n    this.shapeModifiers = [];\r\n    //List of items in shape tree\r\n    this.itemsData = [];\r\n    //List of items in previous shape tree\r\n    this.processedElements = [];\r\n    // List of animated components\r\n    this.animatedContents = [];\r\n    this.shapesContainer = createNS('g');\r\n    this.initElement(data,globalData,comp);\r\n    //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\r\n    // List of elements that have been created\r\n    this.prevViewData = [];\r\n    this.currentBBox = {\r\n        x:999999,\r\n        y: -999999,\r\n        h: 0,\r\n        w: 0\r\n    };\r\n}\r\nextendPrototype([BaseElement,TransformElement,HSolidElement,SVGShapeElement,HBaseElement,HierarchyElement,FrameElement,RenderableElement], HShapeElement);\r\nHShapeElement.prototype._renderShapeFrame = HShapeElement.prototype.renderInnerContent;\r\n\r\nHShapeElement.prototype.createContent = function(){\r\n    var cont;\r\n    this.baseElement.style.fontSize = 0;\r\n    if (this.data.hasMask) {\r\n        this.layerElement.appendChild(this.shapesContainer);\r\n        cont = this.svgElement;\r\n    } else {\r\n        cont = createNS('svg');\r\n        var size = this.comp.data ? this.comp.data : this.globalData.compSize;\r\n        cont.setAttribute('width',size.w);\r\n        cont.setAttribute('height',size.h);\r\n        cont.appendChild(this.shapesContainer);\r\n        this.layerElement.appendChild(cont);\r\n    }\r\n\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.shapesContainer,0, [], true);\r\n    this.filterUniqueShapes();\r\n    this.shapeCont = cont;\r\n};\r\n\r\nHShapeElement.prototype.getTransformedPoint = function(transformers, point) {\r\n    var i, len = transformers.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        point = transformers[i].mProps.v.applyToPointArray(point[0], point[1], 0);\r\n    }\r\n    return point;\r\n}\r\n\r\nHShapeElement.prototype.calculateShapeBoundingBox = function(item, boundingBox) {\r\n    var shape = item.sh.v;\r\n    var transformers = item.transformers;\r\n    var i, len = shape._length, vPoint, oPoint, nextIPoint, nextVPoint, bounds;\r\n    if (len <= 1) {\r\n        return;\r\n    }\r\n    for (i = 0; i < len - 1; i += 1) {\r\n        vPoint = this.getTransformedPoint(transformers, shape.v[i]);\r\n        oPoint = this.getTransformedPoint(transformers, shape.o[i]);\r\n        nextIPoint = this.getTransformedPoint(transformers, shape.i[i + 1]);\r\n        nextVPoint = this.getTransformedPoint(transformers, shape.v[i + 1]);\r\n        this.checkBounds(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox);\r\n    }\r\n    if(shape.c) {\r\n        vPoint = this.getTransformedPoint(transformers, shape.v[i]);\r\n        oPoint = this.getTransformedPoint(transformers, shape.o[i]);\r\n        nextIPoint = this.getTransformedPoint(transformers, shape.i[0]);\r\n        nextVPoint = this.getTransformedPoint(transformers, shape.v[0]);\r\n        this.checkBounds(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox);\r\n    }\r\n}\r\n\r\nHShapeElement.prototype.checkBounds = function(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox) {\r\n    this.getBoundsOfCurve(vPoint, oPoint, nextIPoint, nextVPoint);\r\n    var bounds = this.shapeBoundingBox;\r\n    boundingBox.x = bm_min(bounds.left, boundingBox.x);\r\n    boundingBox.xMax = bm_max(bounds.right, boundingBox.xMax);\r\n    boundingBox.y = bm_min(bounds.top, boundingBox.y);\r\n    boundingBox.yMax = bm_max(bounds.bottom, boundingBox.yMax);\r\n}\r\n\r\nHShapeElement.prototype.shapeBoundingBox = {\r\n    left:0,\r\n    right:0,\r\n    top:0,\r\n    bottom:0,\r\n}\r\n\r\nHShapeElement.prototype.tempBoundingBox = {\r\n    x:0,\r\n    xMax:0,\r\n    y:0,\r\n    yMax:0,\r\n    width:0,\r\n    height:0\r\n}\r\n\r\nHShapeElement.prototype.getBoundsOfCurve = function(p0, p1, p2, p3) {\r\n\r\n    var bounds = [[p0[0],p3[0]], [p0[1],p3[1]]];\r\n\r\n    for (var a, b, c, t, b2ac, t1, t2, i = 0; i < 2; ++i) {\r\n\r\n      b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\r\n      a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\r\n      c = 3 * p1[i] - 3 * p0[i];\r\n\r\n      b = b | 0;\r\n      a = a | 0;\r\n      c = c | 0;\r\n\r\n      if (a === 0) {\r\n\r\n        if (b === 0) {\r\n          continue;\r\n        }\r\n\r\n        t = -c / b;\r\n\r\n        if (0 < t && t < 1) {\r\n          bounds[i].push(this.calculateF(t,p0,p1,p2,p3,i));\r\n        }\r\n        continue;\r\n      }\r\n\r\n      b2ac = b * b - 4 * c * a;\r\n\r\n      if (b2ac < 0) {\r\n        continue;\r\n      }\r\n\r\n      t1 = (-b + bm_sqrt(b2ac))/(2 * a);\r\n      if (0 < t1 && t1 < 1) bounds[i].push(this.calculateF(t1,p0,p1,p2,p3,i));\r\n\r\n      t2 = (-b - bm_sqrt(b2ac))/(2 * a);\r\n      if (0 < t2 && t2 < 1) bounds[i].push(this.calculateF(t2,p0,p1,p2,p3,i));\r\n\r\n    }\r\n\r\n    this.shapeBoundingBox.left = bm_min.apply(null, bounds[0]);\r\n    this.shapeBoundingBox.top = bm_min.apply(null, bounds[1]);\r\n    this.shapeBoundingBox.right = bm_max.apply(null, bounds[0]);\r\n    this.shapeBoundingBox.bottom = bm_max.apply(null, bounds[1]);\r\n  };\r\n\r\n  HShapeElement.prototype.calculateF = function(t, p0, p1, p2, p3, i) {\r\n    return bm_pow(1-t, 3) * p0[i]\r\n        + 3 * bm_pow(1-t, 2) * t * p1[i]\r\n        + 3 * (1-t) * bm_pow(t, 2) * p2[i]\r\n        + bm_pow(t, 3) * p3[i];\r\n  }\r\n\r\nHShapeElement.prototype.calculateBoundingBox = function(itemsData, boundingBox) {\r\n    var i, len = itemsData.length, path;\r\n    for(i = 0; i < len; i += 1) {\r\n        if(itemsData[i] && itemsData[i].sh) {\r\n            this.calculateShapeBoundingBox(itemsData[i], boundingBox)\r\n        } else if(itemsData[i] && itemsData[i].it) {\r\n            this.calculateBoundingBox(itemsData[i].it, boundingBox)\r\n        }\r\n    }\r\n}\r\n\r\nHShapeElement.prototype.currentBoxContains = function(box) {\r\n    return this.currentBBox.x <= box.x \r\n    && this.currentBBox.y <= box.y \r\n    && this.currentBBox.width + this.currentBBox.x >= box.x + box.width\r\n    && this.currentBBox.height + this.currentBBox.y >= box.y + box.height\r\n}\r\n\r\nHShapeElement.prototype.renderInnerContent = function() {\r\n    this._renderShapeFrame();\r\n\r\n    if(!this.hidden && (this._isFirstFrame || this._mdf)) {\r\n        var tempBoundingBox = this.tempBoundingBox;\r\n        var max = 999999;\r\n        tempBoundingBox.x = max;\r\n        tempBoundingBox.xMax = -max;\r\n        tempBoundingBox.y = max;\r\n        tempBoundingBox.yMax = -max;\r\n        this.calculateBoundingBox(this.itemsData, tempBoundingBox);\r\n        tempBoundingBox.width = tempBoundingBox.xMax < tempBoundingBox.x ? 0 : tempBoundingBox.xMax - tempBoundingBox.x;\r\n        tempBoundingBox.height = tempBoundingBox.yMax < tempBoundingBox.y ? 0 : tempBoundingBox.yMax - tempBoundingBox.y;\r\n        //var tempBoundingBox = this.shapeCont.getBBox();\r\n        if(this.currentBoxContains(tempBoundingBox)) {\r\n            return;\r\n        }\r\n        var changed = false;\r\n        if(this.currentBBox.w !== tempBoundingBox.width){\r\n            this.currentBBox.w = tempBoundingBox.width;\r\n            this.shapeCont.setAttribute('width',tempBoundingBox.width);\r\n            changed = true;\r\n        }\r\n        if(this.currentBBox.h !== tempBoundingBox.height){\r\n            this.currentBBox.h = tempBoundingBox.height;\r\n            this.shapeCont.setAttribute('height',tempBoundingBox.height);\r\n            changed = true;\r\n        }\r\n        if(changed  || this.currentBBox.x !== tempBoundingBox.x  || this.currentBBox.y !== tempBoundingBox.y){\r\n            this.currentBBox.w = tempBoundingBox.width;\r\n            this.currentBBox.h = tempBoundingBox.height;\r\n            this.currentBBox.x = tempBoundingBox.x;\r\n            this.currentBBox.y = tempBoundingBox.y;\r\n\r\n            this.shapeCont.setAttribute('viewBox',this.currentBBox.x+' '+this.currentBBox.y+' '+this.currentBBox.w+' '+this.currentBBox.h);\r\n            this.shapeCont.style.transform = this.shapeCont.style.webkitTransform = 'translate(' + this.currentBBox.x + 'px,' + this.currentBBox.y + 'px)';\r\n        }\r\n    }\r\n\r\n};\r\nfunction HTextElement(data,globalData,comp){\r\n    this.textSpans = [];\r\n    this.textPaths = [];\r\n    this.currentBBox = {\r\n        x:999999,\r\n        y: -999999,\r\n        h: 0,\r\n        w: 0\r\n    };\r\n    this.renderType = 'svg';\r\n    this.isMasked = false;\r\n    this.initElement(data,globalData,comp);\r\n\r\n}\r\nextendPrototype([BaseElement,TransformElement,HBaseElement,HierarchyElement,FrameElement,RenderableDOMElement,ITextElement], HTextElement);\r\n\r\nHTextElement.prototype.createContent = function(){\r\n    this.isMasked = this.checkMasks();\r\n    if(this.isMasked){\r\n        this.renderType = 'svg';\r\n        this.compW = this.comp.data.w;\r\n        this.compH = this.comp.data.h;\r\n        this.svgElement.setAttribute('width',this.compW);\r\n        this.svgElement.setAttribute('height',this.compH);\r\n        var g = createNS('g');\r\n        this.maskedElement.appendChild(g);\r\n        this.innerElem = g;\r\n    } else {\r\n        this.renderType = 'html';\r\n        this.innerElem = this.layerElement;\r\n    }\r\n\r\n    this.checkParenting();\r\n\r\n};\r\n\r\nHTextElement.prototype.buildNewText = function(){\r\n    var documentData = this.textProperty.currentData;\r\n    this.renderedLetters = createSizedArray(documentData.l ? documentData.l.length : 0);\r\n    var innerElemStyle = this.innerElem.style;\r\n    innerElemStyle.color = innerElemStyle.fill = documentData.fc ? this.buildColor(documentData.fc) : 'rgba(0,0,0,0)';\r\n    if(documentData.sc){\r\n        innerElemStyle.stroke = this.buildColor(documentData.sc);\r\n        innerElemStyle.strokeWidth = documentData.sw+'px';\r\n    }\r\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\r\n    if(!this.globalData.fontManager.chars){\r\n        innerElemStyle.fontSize = documentData.finalSize+'px';\r\n        innerElemStyle.lineHeight = documentData.finalSize+'px';\r\n        if(fontData.fClass){\r\n            this.innerElem.className = fontData.fClass;\r\n        } else {\r\n            innerElemStyle.fontFamily = fontData.fFamily;\r\n            var fWeight = documentData.fWeight, fStyle = documentData.fStyle;\r\n            innerElemStyle.fontStyle = fStyle;\r\n            innerElemStyle.fontWeight = fWeight;\r\n        }\r\n    }\r\n    var i, len;\r\n\r\n    var letters = documentData.l;\r\n    len = letters.length;\r\n    var tSpan,tParent,tCont;\r\n    var matrixHelper = this.mHelper;\r\n    var shapes, shapeStr = '';\r\n    var cnt = 0;\r\n    for (i = 0;i < len ;i += 1) {\r\n        if(this.globalData.fontManager.chars){\r\n            if(!this.textPaths[cnt]){\r\n                tSpan = createNS('path');\r\n                tSpan.setAttribute('stroke-linecap', 'butt');\r\n                tSpan.setAttribute('stroke-linejoin','round');\r\n                tSpan.setAttribute('stroke-miterlimit','4');\r\n            } else {\r\n                tSpan = this.textPaths[cnt];\r\n            }\r\n            if(!this.isMasked){\r\n                if(this.textSpans[cnt]){\r\n                    tParent = this.textSpans[cnt];\r\n                    tCont = tParent.children[0];\r\n                } else {\r\n\r\n                    tParent = createTag('div');\r\n                    tParent.style.lineHeight = 0;\r\n                    tCont = createNS('svg');\r\n                    tCont.appendChild(tSpan);\r\n                    styleDiv(tParent);\r\n                }\r\n            }\r\n        }else{\r\n            if(!this.isMasked){\r\n                if(this.textSpans[cnt]){\r\n                    tParent = this.textSpans[cnt];\r\n                    tSpan = this.textPaths[cnt];\r\n                } else {\r\n                    tParent = createTag('span');\r\n                    styleDiv(tParent);\r\n                    tSpan = createTag('span');\r\n                    styleDiv(tSpan);\r\n                    tParent.appendChild(tSpan);\r\n                }\r\n            } else {\r\n                tSpan = this.textPaths[cnt] ? this.textPaths[cnt] : createNS('text');\r\n            }\r\n        }\r\n        //tSpan.setAttribute('visibility', 'hidden');\r\n        if(this.globalData.fontManager.chars){\r\n            var charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\r\n            var shapeData;\r\n            if(charData){\r\n                shapeData = charData.data;\r\n            } else {\r\n                shapeData = null;\r\n            }\r\n            matrixHelper.reset();\r\n            if(shapeData && shapeData.shapes){\r\n                shapes = shapeData.shapes[0].it;\r\n                matrixHelper.scale(documentData.finalSize/100,documentData.finalSize/100);\r\n                shapeStr = this.createPathShape(matrixHelper,shapes);\r\n                tSpan.setAttribute('d',shapeStr);\r\n            }\r\n            if(!this.isMasked){\r\n                this.innerElem.appendChild(tParent);\r\n                if(shapeData && shapeData.shapes){\r\n\r\n                    //document.body.appendChild is needed to get exact measure of shape\r\n                    document.body.appendChild(tCont);\r\n                    var boundingBox = tCont.getBBox();\r\n                    tCont.setAttribute('width',boundingBox.width + 2);\r\n                    tCont.setAttribute('height',boundingBox.height + 2);\r\n                    tCont.setAttribute('viewBox',(boundingBox.x-1)+' '+ (boundingBox.y-1)+' '+ (boundingBox.width+2)+' '+ (boundingBox.height+2));\r\n                    tCont.style.transform = tCont.style.webkitTransform = 'translate(' + (boundingBox.x-1) + 'px,' + (boundingBox.y-1) + 'px)';\r\n\r\n                    letters[i].yOffset = boundingBox.y-1;\r\n\r\n                } else{\r\n                    tCont.setAttribute('width',1);\r\n                    tCont.setAttribute('height',1);\r\n                }\r\n                    tParent.appendChild(tCont);\r\n            }else{\r\n                this.innerElem.appendChild(tSpan);\r\n            }\r\n        }else{\r\n            tSpan.textContent = letters[i].val;\r\n            tSpan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\",\"preserve\");\r\n            if(!this.isMasked){\r\n                this.innerElem.appendChild(tParent);\r\n                //\r\n                tSpan.style.transform = tSpan.style.webkitTransform = 'translate3d(0,'+ -documentData.finalSize/1.2+'px,0)';\r\n            } else {\r\n                this.innerElem.appendChild(tSpan);\r\n            }\r\n        }\r\n        //\r\n        if(!this.isMasked){\r\n            this.textSpans[cnt] = tParent;\r\n        }else{\r\n            this.textSpans[cnt] = tSpan;\r\n        }\r\n        this.textSpans[cnt].style.display = 'block';\r\n        this.textPaths[cnt] = tSpan;\r\n        cnt += 1;\r\n    }\r\n    while(cnt < this.textSpans.length){\r\n        this.textSpans[cnt].style.display = 'none';\r\n        cnt += 1;\r\n    }\r\n};\r\n\r\nHTextElement.prototype.renderInnerContent = function() {\r\n\r\n    if(this.data.singleShape){\r\n        if(!this._isFirstFrame && !this.lettersChangedFlag){\r\n            return;\r\n        } else {\r\n            // Todo Benchmark if using this is better than getBBox\r\n             if(this.isMasked && this.finalTransform._matMdf){\r\n                 this.svgElement.setAttribute('viewBox',-this.finalTransform.mProp.p.v[0]+' '+ -this.finalTransform.mProp.p.v[1]+' '+this.compW+' '+this.compH);\r\n                this.svgElement.style.transform = this.svgElement.style.webkitTransform = 'translate(' + -this.finalTransform.mProp.p.v[0] + 'px,' + -this.finalTransform.mProp.p.v[1] + 'px)';\r\n             }\r\n        }\r\n    }\r\n\r\n    this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\r\n    if(!this.lettersChangedFlag && !this.textAnimator.lettersChangedFlag){\r\n        return;\r\n    }\r\n    var  i,len, count = 0;\r\n    var renderedLetters = this.textAnimator.renderedLetters;\r\n\r\n    var letters = this.textProperty.currentData.l;\r\n\r\n    len = letters.length;\r\n    var renderedLetter, textSpan, textPath;\r\n    for(i=0;i<len;i+=1){\r\n        if(letters[i].n){\r\n            count += 1;\r\n            continue;\r\n        }\r\n        textSpan = this.textSpans[i];\r\n        textPath = this.textPaths[i];\r\n        renderedLetter = renderedLetters[count];\r\n        count += 1;\r\n        if(renderedLetter._mdf.m) {\r\n            if(!this.isMasked){\r\n                textSpan.style.transform = textSpan.style.webkitTransform = renderedLetter.m;\r\n            }else{\r\n                textSpan.setAttribute('transform',renderedLetter.m);\r\n            }\r\n        }\r\n        ////textSpan.setAttribute('opacity',renderedLetter.o);\r\n        textSpan.style.opacity = renderedLetter.o;\r\n        if(renderedLetter.sw && renderedLetter._mdf.sw){\r\n            textPath.setAttribute('stroke-width',renderedLetter.sw);\r\n        }\r\n        if(renderedLetter.sc && renderedLetter._mdf.sc){\r\n            textPath.setAttribute('stroke',renderedLetter.sc);\r\n        }\r\n        if(renderedLetter.fc && renderedLetter._mdf.fc){\r\n            textPath.setAttribute('fill',renderedLetter.fc);\r\n            textPath.style.color = renderedLetter.fc;\r\n        }\r\n    }\r\n\r\n    if(this.innerElem.getBBox && !this.hidden && (this._isFirstFrame || this._mdf)){\r\n        var boundingBox = this.innerElem.getBBox();\r\n\r\n        if(this.currentBBox.w !== boundingBox.width){\r\n            this.currentBBox.w = boundingBox.width;\r\n            this.svgElement.setAttribute('width',boundingBox.width);\r\n        }\r\n        if(this.currentBBox.h !== boundingBox.height){\r\n            this.currentBBox.h = boundingBox.height;\r\n            this.svgElement.setAttribute('height',boundingBox.height);\r\n        }\r\n\r\n        var margin = 1;\r\n        if(this.currentBBox.w !== (boundingBox.width + margin*2) || this.currentBBox.h !== (boundingBox.height + margin*2)  || this.currentBBox.x !== (boundingBox.x - margin)  || this.currentBBox.y !== (boundingBox.y - margin)){\r\n            this.currentBBox.w = boundingBox.width + margin*2;\r\n            this.currentBBox.h = boundingBox.height + margin*2;\r\n            this.currentBBox.x = boundingBox.x - margin;\r\n            this.currentBBox.y = boundingBox.y - margin;\r\n\r\n            this.svgElement.setAttribute('viewBox',this.currentBBox.x+' '+this.currentBBox.y+' '+this.currentBBox.w+' '+this.currentBBox.h);\r\n            this.svgElement.style.transform = this.svgElement.style.webkitTransform = 'translate(' + this.currentBBox.x + 'px,' + this.currentBBox.y + 'px)';\r\n        }\r\n    }\r\n};\r\nfunction HImageElement(data,globalData,comp){\r\n    this.assetData = globalData.getAssetData(data.refId);\r\n    this.initElement(data,globalData,comp);\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,HBaseElement,HSolidElement,HierarchyElement,FrameElement,RenderableElement], HImageElement);\r\n\r\n\r\nHImageElement.prototype.createContent = function(){\r\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\r\n    var img = new Image();\r\n\r\n    if(this.data.hasMask){\r\n        this.imageElem = createNS('image');\r\n        this.imageElem.setAttribute('width',this.assetData.w+\"px\");\r\n        this.imageElem.setAttribute('height',this.assetData.h+\"px\");\r\n        this.imageElem.setAttributeNS('http://www.w3.org/1999/xlink','href',assetPath);\r\n        this.layerElement.appendChild(this.imageElem);\r\n        this.baseElement.setAttribute('width',this.assetData.w);\r\n        this.baseElement.setAttribute('height',this.assetData.h);\r\n    } else {\r\n        this.layerElement.appendChild(img);\r\n    }\r\n    img.src = assetPath;\r\n    if(this.data.ln){\r\n        this.baseElement.setAttribute('id',this.data.ln);\r\n    }\r\n};\r\nfunction HCameraElement(data,globalData,comp){\r\n    this.initFrame();\r\n    this.initBaseData(data,globalData,comp);\r\n    this.initHierarchy();\r\n    var getProp = PropertyFactory.getProp;\r\n    this.pe = getProp(this,data.pe,0,0,this);\r\n    if(data.ks.p.s){\r\n        this.px = getProp(this,data.ks.p.x,1,0,this);\r\n        this.py = getProp(this,data.ks.p.y,1,0,this);\r\n        this.pz = getProp(this,data.ks.p.z,1,0,this);\r\n    }else{\r\n        this.p = getProp(this,data.ks.p,1,0,this);\r\n    }\r\n    if(data.ks.a){\r\n        this.a = getProp(this,data.ks.a,1,0,this);\r\n    }\r\n    if(data.ks.or.k.length && data.ks.or.k[0].to){\r\n        var i,len = data.ks.or.k.length;\r\n        for(i=0;i<len;i+=1){\r\n            data.ks.or.k[i].to = null;\r\n            data.ks.or.k[i].ti = null;\r\n        }\r\n    }\r\n    this.or = getProp(this,data.ks.or,1,degToRads,this);\r\n    this.or.sh = true;\r\n    this.rx = getProp(this,data.ks.rx,0,degToRads,this);\r\n    this.ry = getProp(this,data.ks.ry,0,degToRads,this);\r\n    this.rz = getProp(this,data.ks.rz,0,degToRads,this);\r\n    this.mat = new Matrix();\r\n    this._prevMat = new Matrix();\r\n    this._isFirstFrame = true;\r\n    \r\n    // TODO: find a better way to make the HCamera element to be compatible with the LayerInterface and TransformInterface.\r\n    this.finalTransform = {\r\n        mProp: this\r\n    };\r\n}\r\nextendPrototype([BaseElement, FrameElement, HierarchyElement], HCameraElement);\r\n\r\nHCameraElement.prototype.setup = function() {\r\n    var i, len = this.comp.threeDElements.length, comp;\r\n    for(i=0;i<len;i+=1){\r\n        //[perspectiveElem,container]\r\n        comp = this.comp.threeDElements[i];\r\n        if(comp.type === '3d') {\r\n            comp.perspectiveElem.style.perspective = comp.perspectiveElem.style.webkitPerspective = this.pe.v+'px';\r\n            comp.container.style.transformOrigin = comp.container.style.mozTransformOrigin = comp.container.style.webkitTransformOrigin = \"0px 0px 0px\";\r\n            comp.perspectiveElem.style.transform = comp.perspectiveElem.style.webkitTransform = 'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';\r\n        }\r\n    }\r\n};\r\n\r\nHCameraElement.prototype.createElements = function(){\r\n};\r\n\r\nHCameraElement.prototype.hide = function(){\r\n};\r\n\r\nHCameraElement.prototype.renderFrame = function(){\r\n    var _mdf = this._isFirstFrame;\r\n    var i, len;\r\n    if(this.hierarchy){\r\n        len = this.hierarchy.length;\r\n        for(i=0;i<len;i+=1){\r\n            _mdf = this.hierarchy[i].finalTransform.mProp._mdf || _mdf;\r\n        }\r\n    }\r\n    if(_mdf || this.pe._mdf || (this.p && this.p._mdf) || (this.px && (this.px._mdf || this.py._mdf || this.pz._mdf)) || this.rx._mdf || this.ry._mdf || this.rz._mdf || this.or._mdf || (this.a && this.a._mdf)) {\r\n        this.mat.reset();\r\n\r\n        if(this.hierarchy){\r\n            var mat;\r\n            len = this.hierarchy.length - 1;\r\n            for (i = len; i >= 0; i -= 1) {\r\n                var mTransf = this.hierarchy[i].finalTransform.mProp;\r\n                this.mat.translate(-mTransf.p.v[0],-mTransf.p.v[1],mTransf.p.v[2]);\r\n                this.mat.rotateX(-mTransf.or.v[0]).rotateY(-mTransf.or.v[1]).rotateZ(mTransf.or.v[2]);\r\n                this.mat.rotateX(-mTransf.rx.v).rotateY(-mTransf.ry.v).rotateZ(mTransf.rz.v);\r\n                this.mat.scale(1/mTransf.s.v[0],1/mTransf.s.v[1],1/mTransf.s.v[2]);\r\n                this.mat.translate(mTransf.a.v[0],mTransf.a.v[1],mTransf.a.v[2]);\r\n            }\r\n        }\r\n        if (this.p) {\r\n            this.mat.translate(-this.p.v[0],-this.p.v[1],this.p.v[2]);\r\n        } else {\r\n            this.mat.translate(-this.px.v,-this.py.v,this.pz.v);\r\n        }\r\n        if (this.a) {\r\n            var diffVector\r\n            if (this.p) {\r\n                diffVector = [this.p.v[0] - this.a.v[0], this.p.v[1] - this.a.v[1], this.p.v[2] - this.a.v[2]];\r\n            } else {\r\n                diffVector = [this.px.v - this.a.v[0], this.py.v - this.a.v[1], this.pz.v - this.a.v[2]];\r\n            }\r\n            var mag = Math.sqrt(Math.pow(diffVector[0],2)+Math.pow(diffVector[1],2)+Math.pow(diffVector[2],2));\r\n            //var lookDir = getNormalizedPoint(getDiffVector(this.a.v,this.p.v));\r\n            var lookDir = [diffVector[0]/mag,diffVector[1]/mag,diffVector[2]/mag];\r\n            var lookLengthOnXZ = Math.sqrt( lookDir[2]*lookDir[2] + lookDir[0]*lookDir[0] );\r\n            var m_rotationX = (Math.atan2( lookDir[1], lookLengthOnXZ ));\r\n            var m_rotationY = (Math.atan2( lookDir[0], -lookDir[2]));\r\n            this.mat.rotateY(m_rotationY).rotateX(-m_rotationX);\r\n\r\n        }\r\n        this.mat.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v);\r\n        this.mat.rotateX(-this.or.v[0]).rotateY(-this.or.v[1]).rotateZ(this.or.v[2]);\r\n        this.mat.translate(this.globalData.compSize.w/2,this.globalData.compSize.h/2,0);\r\n        this.mat.translate(0,0,this.pe.v);\r\n\r\n\r\n        \r\n\r\n        var hasMatrixChanged = !this._prevMat.equals(this.mat);\r\n        if((hasMatrixChanged || this.pe._mdf) && this.comp.threeDElements) {\r\n            len = this.comp.threeDElements.length;\r\n            var comp;\r\n            for(i=0;i<len;i+=1){\r\n                comp = this.comp.threeDElements[i];\r\n                if(comp.type === '3d') {\r\n                    if(hasMatrixChanged) {\r\n                        comp.container.style.transform = comp.container.style.webkitTransform = this.mat.toCSS();\r\n                    }\r\n                    if(this.pe._mdf) {\r\n                        comp.perspectiveElem.style.perspective = comp.perspectiveElem.style.webkitPerspective = this.pe.v+'px';\r\n                    }\r\n                }\r\n            }\r\n            this.mat.clone(this._prevMat);\r\n        }\r\n    }\r\n    this._isFirstFrame = false;\r\n};\r\n\r\nHCameraElement.prototype.prepareFrame = function(num) {\r\n    this.prepareProperties(num, true);\r\n};\r\n\r\nHCameraElement.prototype.destroy = function(){\r\n};\r\nHCameraElement.prototype.getBaseElement = function(){return null;};\r\nfunction HEffects() {\r\n}\r\nHEffects.prototype.renderFrame = function(){};\r\nvar animationManager = (function(){\r\n    var moduleOb = {};\r\n    var registeredAnimations = [];\r\n    var initTime = 0;\r\n    var len = 0;\r\n    var playingAnimationsNum = 0;\r\n    var _stopped = true;\r\n    var _isFrozen = false;\r\n\r\n    function removeElement(ev){\r\n        var i = 0;\r\n        var animItem = ev.target;\r\n        while(i<len) {\r\n            if (registeredAnimations[i].animation === animItem) {\r\n                registeredAnimations.splice(i, 1);\r\n                i -= 1;\r\n                len -= 1;\r\n                if(!animItem.isPaused){\r\n                    subtractPlayingCount();\r\n                }\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    function registerAnimation(element, animationData){\r\n        if(!element){\r\n            return null;\r\n        }\r\n        var i=0;\r\n        while(i<len){\r\n            if(registeredAnimations[i].elem == element && registeredAnimations[i].elem !== null ){\r\n                return registeredAnimations[i].animation;\r\n            }\r\n            i+=1;\r\n        }\r\n        var animItem = new AnimationItem();\r\n        setupAnimation(animItem, element);\r\n        animItem.setData(element, animationData);\r\n        return animItem;\r\n    }\r\n\r\n    function getRegisteredAnimations() {\r\n        var i, len = registeredAnimations.length;\r\n        var animations = [];\r\n        for(i = 0; i < len; i += 1) {\r\n            animations.push(registeredAnimations[i].animation);\r\n        }\r\n        return animations;\r\n    }\r\n\r\n    function addPlayingCount(){\r\n        playingAnimationsNum += 1;\r\n        activate();\r\n    }\r\n\r\n    function subtractPlayingCount(){\r\n        playingAnimationsNum -= 1;\r\n    }\r\n\r\n    function setupAnimation(animItem, element){\r\n        animItem.addEventListener('destroy',removeElement);\r\n        animItem.addEventListener('_active',addPlayingCount);\r\n        animItem.addEventListener('_idle',subtractPlayingCount);\r\n        registeredAnimations.push({elem: element,animation:animItem});\r\n        len += 1;\r\n    }\r\n\r\n    function loadAnimation(params){\r\n        var animItem = new AnimationItem();\r\n        setupAnimation(animItem, null);\r\n        animItem.setParams(params);\r\n        return animItem;\r\n    }\r\n\r\n\r\n    function setSpeed(val,animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.setSpeed(val, animation);\r\n        }\r\n    }\r\n\r\n    function setDirection(val, animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.setDirection(val, animation);\r\n        }\r\n    }\r\n\r\n    function play(animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.play(animation);\r\n        }\r\n    }\r\n    function resume(nowTime) {\r\n        var elapsedTime = nowTime - initTime;\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.advanceTime(elapsedTime);\r\n        }\r\n        initTime = nowTime;\r\n        if(playingAnimationsNum && !_isFrozen) {\r\n            window.requestAnimationFrame(resume);\r\n        } else {\r\n            _stopped = true;\r\n        }\r\n    }\r\n\r\n    function first(nowTime){\r\n        initTime = nowTime;\r\n        window.requestAnimationFrame(resume);\r\n    }\r\n\r\n    function pause(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.pause(animation);\r\n        }\r\n    }\r\n\r\n    function goToAndStop(value,isFrame,animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.goToAndStop(value,isFrame,animation);\r\n        }\r\n    }\r\n\r\n    function stop(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.stop(animation);\r\n        }\r\n    }\r\n\r\n    function togglePause(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.togglePause(animation);\r\n        }\r\n    }\r\n\r\n    function destroy(animation) {\r\n        var i;\r\n        for(i=(len-1);i>=0;i-=1){\r\n            registeredAnimations[i].animation.destroy(animation);\r\n        }\r\n    }\r\n\r\n    function searchAnimations(animationData, standalone, renderer){\r\n        var animElements = [].concat([].slice.call(document.getElementsByClassName('lottie')),\r\n                  [].slice.call(document.getElementsByClassName('bodymovin')));\r\n        var i, len = animElements.length;\r\n        for(i=0;i<len;i+=1){\r\n            if(renderer){\r\n                animElements[i].setAttribute('data-bm-type',renderer);\r\n            }\r\n            registerAnimation(animElements[i], animationData);\r\n        }\r\n        if(standalone && len === 0){\r\n            if(!renderer){\r\n                renderer = 'svg';\r\n            }\r\n            var body = document.getElementsByTagName('body')[0];\r\n            body.innerHTML = '';\r\n            var div = createTag('div');\r\n            div.style.width = '100%';\r\n            div.style.height = '100%';\r\n            div.setAttribute('data-bm-type',renderer);\r\n            body.appendChild(div);\r\n            registerAnimation(div, animationData);\r\n        }\r\n    }\r\n\r\n    function resize(){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.resize();\r\n        }\r\n    }\r\n\r\n    function activate(){\r\n        if(!_isFrozen && playingAnimationsNum){\r\n            if(_stopped) {\r\n                window.requestAnimationFrame(first);\r\n                _stopped = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    function freeze() {\r\n        _isFrozen = true;\r\n    }\r\n\r\n    function unfreeze() {\r\n        _isFrozen = false;\r\n        activate();\r\n    }\r\n\r\n    moduleOb.registerAnimation = registerAnimation;\r\n    moduleOb.loadAnimation = loadAnimation;\r\n    moduleOb.setSpeed = setSpeed;\r\n    moduleOb.setDirection = setDirection;\r\n    moduleOb.play = play;\r\n    moduleOb.pause = pause;\r\n    moduleOb.stop = stop;\r\n    moduleOb.togglePause = togglePause;\r\n    moduleOb.searchAnimations = searchAnimations;\r\n    moduleOb.resize = resize;\r\n    //moduleOb.start = start;\r\n    moduleOb.goToAndStop = goToAndStop;\r\n    moduleOb.destroy = destroy;\r\n    moduleOb.freeze = freeze;\r\n    moduleOb.unfreeze = unfreeze;\r\n    moduleOb.getRegisteredAnimations = getRegisteredAnimations;\r\n    return moduleOb;\r\n}());\r\n\r\nvar AnimationItem = function () {\r\n    this._cbs = [];\r\n    this.name = '';\r\n    this.path = '';\r\n    this.isLoaded = false;\r\n    this.currentFrame = 0;\r\n    this.currentRawFrame = 0;\r\n    this.totalFrames = 0;\r\n    this.frameRate = 0;\r\n    this.frameMult = 0;\r\n    this.playSpeed = 1;\r\n    this.playDirection = 1;\r\n    this.playCount = 0;\r\n    this.animationData = {};\r\n    this.assets = [];\r\n    this.isPaused = true;\r\n    this.autoplay = false;\r\n    this.loop = true;\r\n    this.renderer = null;\r\n    this.animationID = createElementID();\r\n    this.assetsPath = '';\r\n    this.timeCompleted = 0;\r\n    this.segmentPos = 0;\r\n    this.subframeEnabled = subframeEnabled;\r\n    this.segments = [];\r\n    this._idle = true;\r\n    this._completedLoop = false;\r\n    this.projectInterface = ProjectInterface();\r\n    this.imagePreloader = new ImagePreloader();\r\n};\r\n\r\nextendPrototype([BaseEvent], AnimationItem);\r\n\r\nAnimationItem.prototype.setParams = function(params) {\r\n    if(params.context){\r\n        this.context = params.context;\r\n    }\r\n    if(params.wrapper || params.container){\r\n        this.wrapper = params.wrapper || params.container;\r\n    }\r\n    var animType = params.animType ? params.animType : params.renderer ? params.renderer : 'svg';\r\n    switch(animType){\r\n        case 'canvas':\r\n            this.renderer = new CanvasRenderer(this, params.rendererSettings);\r\n            break;\r\n        case 'svg':\r\n            this.renderer = new SVGRenderer(this, params.rendererSettings);\r\n            break;\r\n        default:\r\n            this.renderer = new HybridRenderer(this, params.rendererSettings);\r\n            break;\r\n    }\r\n    this.renderer.setProjectInterface(this.projectInterface);\r\n    this.animType = animType;\r\n\r\n    if(params.loop === '' || params.loop === null){\r\n    }else if(params.loop === false){\r\n        this.loop = false;\r\n    }else if(params.loop === true){\r\n        this.loop = true;\r\n    }else{\r\n        this.loop = parseInt(params.loop);\r\n    }\r\n    this.autoplay = 'autoplay' in params ? params.autoplay : true;\r\n    this.name = params.name ? params.name :  '';\r\n    this.autoloadSegments = params.hasOwnProperty('autoloadSegments') ? params.autoloadSegments :  true;\r\n    this.assetsPath = params.assetsPath;\r\n    if (params.animationData) {\r\n        this.configAnimation(params.animationData);\r\n    } else if(params.path){\r\n\r\n        if( params.path.lastIndexOf('\\\\') !== -1){\r\n            this.path = params.path.substr(0,params.path.lastIndexOf('\\\\')+1);\r\n        } else {\r\n            this.path = params.path.substr(0,params.path.lastIndexOf('/')+1);\r\n        }\r\n        this.fileName = params.path.substr(params.path.lastIndexOf('/')+1);\r\n        this.fileName = this.fileName.substr(0,this.fileName.lastIndexOf('.json'));\r\n\r\n        assetLoader.load(params.path, this.configAnimation.bind(this), function() {\r\n            this.trigger('data_failed');\r\n        }.bind(this));\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.setData = function (wrapper, animationData) {\r\n    var params = {\r\n        wrapper: wrapper,\r\n        animationData: animationData ? (typeof animationData  === \"object\") ? animationData : JSON.parse(animationData) : null\r\n    };\r\n    var wrapperAttributes = wrapper.attributes;\r\n\r\n    params.path = wrapperAttributes.getNamedItem('data-animation-path') ? wrapperAttributes.getNamedItem('data-animation-path').value : wrapperAttributes.getNamedItem('data-bm-path') ? wrapperAttributes.getNamedItem('data-bm-path').value :  wrapperAttributes.getNamedItem('bm-path') ? wrapperAttributes.getNamedItem('bm-path').value : '';\r\n    params.animType = wrapperAttributes.getNamedItem('data-anim-type') ? wrapperAttributes.getNamedItem('data-anim-type').value : wrapperAttributes.getNamedItem('data-bm-type') ? wrapperAttributes.getNamedItem('data-bm-type').value : wrapperAttributes.getNamedItem('bm-type') ? wrapperAttributes.getNamedItem('bm-type').value :  wrapperAttributes.getNamedItem('data-bm-renderer') ? wrapperAttributes.getNamedItem('data-bm-renderer').value : wrapperAttributes.getNamedItem('bm-renderer') ? wrapperAttributes.getNamedItem('bm-renderer').value : 'canvas';\r\n\r\n    var loop = wrapperAttributes.getNamedItem('data-anim-loop') ? wrapperAttributes.getNamedItem('data-anim-loop').value :  wrapperAttributes.getNamedItem('data-bm-loop') ? wrapperAttributes.getNamedItem('data-bm-loop').value :  wrapperAttributes.getNamedItem('bm-loop') ? wrapperAttributes.getNamedItem('bm-loop').value : '';\r\n    if(loop === ''){\r\n    }else if(loop === 'false'){\r\n        params.loop = false;\r\n    }else if(loop === 'true'){\r\n        params.loop = true;\r\n    }else{\r\n        params.loop = parseInt(loop);\r\n    }\r\n    var autoplay = wrapperAttributes.getNamedItem('data-anim-autoplay') ? wrapperAttributes.getNamedItem('data-anim-autoplay').value :  wrapperAttributes.getNamedItem('data-bm-autoplay') ? wrapperAttributes.getNamedItem('data-bm-autoplay').value :  wrapperAttributes.getNamedItem('bm-autoplay') ? wrapperAttributes.getNamedItem('bm-autoplay').value : true;\r\n    params.autoplay = autoplay !== \"false\";\r\n\r\n    params.name = wrapperAttributes.getNamedItem('data-name') ? wrapperAttributes.getNamedItem('data-name').value :  wrapperAttributes.getNamedItem('data-bm-name') ? wrapperAttributes.getNamedItem('data-bm-name').value : wrapperAttributes.getNamedItem('bm-name') ? wrapperAttributes.getNamedItem('bm-name').value :  '';\r\n    var prerender = wrapperAttributes.getNamedItem('data-anim-prerender') ? wrapperAttributes.getNamedItem('data-anim-prerender').value :  wrapperAttributes.getNamedItem('data-bm-prerender') ? wrapperAttributes.getNamedItem('data-bm-prerender').value :  wrapperAttributes.getNamedItem('bm-prerender') ? wrapperAttributes.getNamedItem('bm-prerender').value : '';\r\n\r\n    if(prerender === 'false'){\r\n        params.prerender = false;\r\n    }\r\n    this.setParams(params);\r\n};\r\n\r\nAnimationItem.prototype.includeLayers = function(data) {\r\n    if(data.op > this.animationData.op){\r\n        this.animationData.op = data.op;\r\n        this.totalFrames = Math.floor(data.op - this.animationData.ip);\r\n    }\r\n    var layers = this.animationData.layers;\r\n    var i, len = layers.length;\r\n    var newLayers = data.layers;\r\n    var j, jLen = newLayers.length;\r\n    for(j=0;j<jLen;j+=1){\r\n        i = 0;\r\n        while(i<len){\r\n            if(layers[i].id == newLayers[j].id){\r\n                layers[i] = newLayers[j];\r\n                break;\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n    if(data.chars || data.fonts){\r\n        this.renderer.globalData.fontManager.addChars(data.chars);\r\n        this.renderer.globalData.fontManager.addFonts(data.fonts, this.renderer.globalData.defs);\r\n    }\r\n    if(data.assets){\r\n        len = data.assets.length;\r\n        for(i = 0; i < len; i += 1){\r\n            this.animationData.assets.push(data.assets[i]);\r\n        }\r\n    }\r\n    this.animationData.__complete = false;\r\n    dataManager.completeData(this.animationData,this.renderer.globalData.fontManager);\r\n    this.renderer.includeLayers(data.layers);\r\n    if(expressionsPlugin){\r\n        expressionsPlugin.initExpressions(this);\r\n    }\r\n    this.loadNextSegment();\r\n};\r\n\r\nAnimationItem.prototype.loadNextSegment = function() {\r\n    var segments = this.animationData.segments;\r\n    if(!segments || segments.length === 0 || !this.autoloadSegments){\r\n        this.trigger('data_ready');\r\n        this.timeCompleted = this.totalFrames;\r\n        return;\r\n    }\r\n    var segment = segments.shift();\r\n    this.timeCompleted = segment.time * this.frameRate;\r\n    var segmentPath = this.path+this.fileName+'_' + this.segmentPos + '.json';\r\n    this.segmentPos += 1;\r\n    assetLoader.load(segmentPath, this.includeLayers.bind(this), function() {\r\n        this.trigger('data_failed');\r\n    }.bind(this));\r\n};\r\n\r\nAnimationItem.prototype.loadSegments = function() {\r\n    var segments = this.animationData.segments;\r\n    if(!segments) {\r\n        this.timeCompleted = this.totalFrames;\r\n    }\r\n    this.loadNextSegment();\r\n};\r\n\r\nAnimationItem.prototype.imagesLoaded = function() {\r\n    this.trigger('loaded_images');\r\n    this.checkLoaded()\r\n}\r\n\r\nAnimationItem.prototype.preloadImages = function() {\r\n    this.imagePreloader.setAssetsPath(this.assetsPath);\r\n    this.imagePreloader.setPath(this.path);\r\n    this.imagePreloader.loadAssets(this.animationData.assets, this.imagesLoaded.bind(this));\r\n}\r\n\r\nAnimationItem.prototype.configAnimation = function (animData) {\r\n    if(!this.renderer){\r\n        return;\r\n    }\r\n    try {\r\n        this.animationData = animData;\r\n        this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip);\r\n        this.renderer.configAnimation(animData);\r\n        if(!animData.assets){\r\n            animData.assets = [];\r\n        }\r\n\r\n        this.assets = this.animationData.assets;\r\n        this.frameRate = this.animationData.fr;\r\n        this.firstFrame = Math.round(this.animationData.ip);\r\n        this.frameMult = this.animationData.fr / 1000;\r\n        this.renderer.searchExtraCompositions(animData.assets);\r\n        this.trigger('config_ready');\r\n        this.preloadImages();\r\n        this.loadSegments();\r\n        this.updaFrameModifier();\r\n        this.waitForFontsLoaded();\r\n    } catch(error) {\r\n        this.triggerConfigError(error);\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.waitForFontsLoaded = function(){\r\n    if(!this.renderer) {\r\n        return;\r\n    }\r\n    if(this.renderer.globalData.fontManager.loaded()){\r\n        this.checkLoaded();\r\n    }else{\r\n        setTimeout(this.waitForFontsLoaded.bind(this),20);\r\n    }\r\n}\r\n\r\nAnimationItem.prototype.checkLoaded = function () {\r\n    if (!this.isLoaded && this.renderer.globalData.fontManager.loaded() && (this.imagePreloader.loaded() || this.renderer.rendererType !== 'canvas')) {\r\n        this.isLoaded = true;\r\n        dataManager.completeData(this.animationData, this.renderer.globalData.fontManager);\r\n        if(expressionsPlugin){\r\n            expressionsPlugin.initExpressions(this);\r\n        }\r\n        this.renderer.initItems();\r\n        setTimeout(function() {\r\n            this.trigger('DOMLoaded');\r\n        }.bind(this), 0);\r\n        this.gotoFrame();\r\n        if(this.autoplay){\r\n            this.play();\r\n        }\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.resize = function () {\r\n    this.renderer.updateContainerSize();\r\n};\r\n\r\nAnimationItem.prototype.setSubframe = function(flag){\r\n    this.subframeEnabled = flag ? true : false;\r\n};\r\n\r\nAnimationItem.prototype.gotoFrame = function () {\r\n    this.currentFrame = this.subframeEnabled ? this.currentRawFrame : ~~this.currentRawFrame;\r\n\r\n    if(this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted){\r\n        this.currentFrame = this.timeCompleted;\r\n    }\r\n    this.trigger('enterFrame');\r\n    this.renderFrame();\r\n};\r\n\r\nAnimationItem.prototype.renderFrame = function () {\r\n    if(this.isLoaded === false){\r\n        return;\r\n    }\r\n    try {\r\n        this.renderer.renderFrame(this.currentFrame + this.firstFrame);\r\n    } catch(error) {\r\n        this.triggerRenderFrameError(error);\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.play = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === true){\r\n        this.isPaused = false;\r\n        if(this._idle){\r\n            this._idle = false;\r\n            this.trigger('_active');\r\n        }\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.pause = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === false){\r\n        this.isPaused = true;\r\n        this._idle = true;\r\n        this.trigger('_idle');\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.togglePause = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === true){\r\n        this.play();\r\n    }else{\r\n        this.pause();\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.stop = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    this.pause();\r\n    this.playCount = 0;\r\n    this._completedLoop = false;\r\n    this.setCurrentRawFrameValue(0);\r\n};\r\n\r\nAnimationItem.prototype.goToAndStop = function (value, isFrame, name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(isFrame){\r\n        this.setCurrentRawFrameValue(value);\r\n    }else{\r\n        this.setCurrentRawFrameValue(value * this.frameModifier);\r\n    }\r\n    this.pause();\r\n};\r\n\r\nAnimationItem.prototype.goToAndPlay = function (value, isFrame, name) {\r\n    this.goToAndStop(value, isFrame, name);\r\n    this.play();\r\n};\r\n\r\nAnimationItem.prototype.advanceTime = function (value) {\r\n    if (this.isPaused === true || this.isLoaded === false) {\r\n        return;\r\n    }\r\n    var nextValue = this.currentRawFrame + value * this.frameModifier;\r\n    var _isComplete = false;\r\n    // Checking if nextValue > totalFrames - 1 for addressing non looping and looping animations.\r\n    // If animation won't loop, it should stop at totalFrames - 1. If it will loop it should complete the last frame and then loop.\r\n    if (nextValue >= this.totalFrames - 1 && this.frameModifier > 0) {\r\n        if (!this.loop || this.playCount === this.loop) {\r\n            if (!this.checkSegments(nextValue >  this.totalFrames ? nextValue % this.totalFrames : 0)) {\r\n                _isComplete = true;\r\n                nextValue = this.totalFrames - 1;\r\n            }\r\n        } else if (nextValue >= this.totalFrames) {\r\n            this.playCount += 1;\r\n            if (!this.checkSegments(nextValue % this.totalFrames)) {\r\n                this.setCurrentRawFrameValue(nextValue % this.totalFrames);\r\n                this._completedLoop = true;\r\n                this.trigger('loopComplete');\r\n            }\r\n        } else {\r\n            this.setCurrentRawFrameValue(nextValue);\r\n        }\r\n    } else if(nextValue < 0) {\r\n        if (!this.checkSegments(nextValue % this.totalFrames)) {\r\n            if (this.loop && !(this.playCount-- <= 0 && this.loop !== true)) {\r\n                this.setCurrentRawFrameValue(this.totalFrames + (nextValue % this.totalFrames));\r\n                if(!this._completedLoop) {\r\n                    this._completedLoop = true;\r\n                } else {\r\n                    this.trigger('loopComplete');\r\n                }\r\n            } else {\r\n                _isComplete = true;\r\n                nextValue = 0;\r\n            }\r\n        }\r\n    } else {\r\n        this.setCurrentRawFrameValue(nextValue);\r\n    }\r\n    if (_isComplete) {\r\n        this.setCurrentRawFrameValue(nextValue);\r\n        this.pause();\r\n        this.trigger('complete');\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.adjustSegment = function(arr, offset){\r\n    this.playCount = 0;\r\n    if(arr[1] < arr[0]){\r\n        if(this.frameModifier > 0){\r\n            if(this.playSpeed < 0){\r\n                this.setSpeed(-this.playSpeed);\r\n            } else {\r\n                this.setDirection(-1);\r\n            }\r\n        }\r\n        this.timeCompleted = this.totalFrames = arr[0] - arr[1];\r\n        this.firstFrame = arr[1];\r\n        this.setCurrentRawFrameValue(this.totalFrames - 0.001 - offset);\r\n    } else if(arr[1] > arr[0]){\r\n        if(this.frameModifier < 0){\r\n            if(this.playSpeed < 0){\r\n                this.setSpeed(-this.playSpeed);\r\n            } else {\r\n                this.setDirection(1);\r\n            }\r\n        }\r\n        this.timeCompleted = this.totalFrames = arr[1] - arr[0];\r\n        this.firstFrame = arr[0];\r\n        this.setCurrentRawFrameValue(0.001 + offset);\r\n    }\r\n    this.trigger('segmentStart');\r\n};\r\nAnimationItem.prototype.setSegment = function (init,end) {\r\n    var pendingFrame = -1;\r\n    if(this.isPaused) {\r\n        if (this.currentRawFrame + this.firstFrame < init) {\r\n            pendingFrame = init;\r\n        } else if (this.currentRawFrame + this.firstFrame > end) {\r\n            pendingFrame = end - init;\r\n        }\r\n    }\r\n\r\n    this.firstFrame = init;\r\n    this.timeCompleted = this.totalFrames = end - init;\r\n    if(pendingFrame !== -1) {\r\n        this.goToAndStop(pendingFrame,true);\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.playSegments = function (arr, forceFlag) {\r\n    if (forceFlag) {\r\n        this.segments.length = 0;\r\n    }\r\n    if (typeof arr[0] === 'object') {\r\n        var i, len = arr.length;\r\n        for (i = 0; i < len; i += 1) {\r\n            this.segments.push(arr[i]);\r\n        }\r\n    } else {\r\n        this.segments.push(arr);\r\n    }\r\n    if (this.segments.length && forceFlag) {\r\n        this.adjustSegment(this.segments.shift(), 0);\r\n    }\r\n    if (this.isPaused) {\r\n        this.play();\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.resetSegments = function (forceFlag) {\r\n    this.segments.length = 0;\r\n    this.segments.push([this.animationData.ip,this.animationData.op]);\r\n    //this.segments.push([this.animationData.ip*this.frameRate,Math.floor(this.animationData.op - this.animationData.ip+this.animationData.ip*this.frameRate)]);\r\n    if (forceFlag) {\r\n        this.checkSegments(0);\r\n    }\r\n};\r\nAnimationItem.prototype.checkSegments = function(offset) {\r\n    if (this.segments.length) {\r\n        this.adjustSegment(this.segments.shift(), offset);\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\nAnimationItem.prototype.destroy = function (name) {\r\n    if ((name && this.name != name) || !this.renderer) {\r\n        return;\r\n    }\r\n    this.renderer.destroy();\r\n    this.imagePreloader.destroy();\r\n    this.trigger('destroy');\r\n    this._cbs = null;\r\n    this.onEnterFrame = this.onLoopComplete = this.onComplete = this.onSegmentStart = this.onDestroy = null;\r\n    this.renderer = null;\r\n};\r\n\r\nAnimationItem.prototype.setCurrentRawFrameValue = function(value){\r\n    this.currentRawFrame = value;\r\n    this.gotoFrame();\r\n};\r\n\r\nAnimationItem.prototype.setSpeed = function (val) {\r\n    this.playSpeed = val;\r\n    this.updaFrameModifier();\r\n};\r\n\r\nAnimationItem.prototype.setDirection = function (val) {\r\n    this.playDirection = val < 0 ? -1 : 1;\r\n    this.updaFrameModifier();\r\n};\r\n\r\nAnimationItem.prototype.updaFrameModifier = function () {\r\n    this.frameModifier = this.frameMult * this.playSpeed * this.playDirection;\r\n};\r\n\r\nAnimationItem.prototype.getPath = function () {\r\n    return this.path;\r\n};\r\n\r\nAnimationItem.prototype.getAssetsPath = function (assetData) {\r\n    var path = '';\r\n    if(assetData.e) {\r\n        path = assetData.p;\r\n    } else if(this.assetsPath){\r\n        var imagePath = assetData.p;\r\n        if(imagePath.indexOf('images/') !== -1){\r\n            imagePath = imagePath.split('/')[1];\r\n        }\r\n        path = this.assetsPath + imagePath;\r\n    } else {\r\n        path = this.path;\r\n        path += assetData.u ? assetData.u : '';\r\n        path += assetData.p;\r\n    }\r\n    return path;\r\n};\r\n\r\nAnimationItem.prototype.getAssetData = function (id) {\r\n    var i = 0, len = this.assets.length;\r\n    while (i < len) {\r\n        if(id == this.assets[i].id){\r\n            return this.assets[i];\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.hide = function () {\r\n    this.renderer.hide();\r\n};\r\n\r\nAnimationItem.prototype.show = function () {\r\n    this.renderer.show();\r\n};\r\n\r\nAnimationItem.prototype.getDuration = function (isFrame) {\r\n    return isFrame ? this.totalFrames : this.totalFrames / this.frameRate;\r\n};\r\n\r\nAnimationItem.prototype.trigger = function(name){\r\n    if(this._cbs && this._cbs[name]){\r\n        switch(name){\r\n            case 'enterFrame':\r\n                this.triggerEvent(name,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameModifier));\r\n                break;\r\n            case 'loopComplete':\r\n                this.triggerEvent(name,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));\r\n                break;\r\n            case 'complete':\r\n                this.triggerEvent(name,new BMCompleteEvent(name,this.frameMult));\r\n                break;\r\n            case 'segmentStart':\r\n                this.triggerEvent(name,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));\r\n                break;\r\n            case 'destroy':\r\n                this.triggerEvent(name,new BMDestroyEvent(name,this));\r\n                break;\r\n            default:\r\n                this.triggerEvent(name);\r\n        }\r\n    }\r\n    if(name === 'enterFrame' && this.onEnterFrame){\r\n        this.onEnterFrame.call(this,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameMult));\r\n    }\r\n    if(name === 'loopComplete' && this.onLoopComplete){\r\n        this.onLoopComplete.call(this,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));\r\n    }\r\n    if(name === 'complete' && this.onComplete){\r\n        this.onComplete.call(this,new BMCompleteEvent(name,this.frameMult));\r\n    }\r\n    if(name === 'segmentStart' && this.onSegmentStart){\r\n        this.onSegmentStart.call(this,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));\r\n    }\r\n    if(name === 'destroy' && this.onDestroy){\r\n        this.onDestroy.call(this,new BMDestroyEvent(name,this));\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.triggerRenderFrameError = function(nativeError) {\r\n\r\n    var error = new BMRenderFrameErrorEvent(nativeError, this.currentFrame);\r\n    this.triggerEvent('error', error);\r\n\r\n    if (this.onError) {\r\n        this.onError.call(this, error);\r\n    }\r\n}\r\n\r\nAnimationItem.prototype.triggerConfigError = function(nativeError) {\r\n\r\n    var error = new BMConfigErrorEvent(nativeError, this.currentFrame);\r\n    this.triggerEvent('error', error);\r\n\r\n    if (this.onError) {\r\n        this.onError.call(this, error);\r\n    }\r\n}\r\nvar Expressions = (function(){\r\n    var ob = {};\r\n    ob.initExpressions = initExpressions;\r\n\r\n\r\n    function initExpressions(animation){\r\n\r\n    \tvar stackCount = 0;\r\n    \tvar registers = [];\r\n\r\n    \tfunction pushExpression() {\r\n\t\t\tstackCount += 1;\r\n    \t}\r\n\r\n    \tfunction popExpression() {\r\n\t\t\tstackCount -= 1;\r\n\t\t\tif (stackCount === 0) {\r\n\t\t\t\treleaseInstances();\r\n\t\t\t}\r\n    \t}\r\n\r\n    \tfunction registerExpressionProperty(expression) {\r\n    \t\tif (registers.indexOf(expression) === -1) {\r\n\t\t\t\tregisters.push(expression)\r\n    \t\t}\r\n    \t}\r\n\r\n    \tfunction releaseInstances() {\r\n    \t\tvar i, len = registers.length;\r\n    \t\tfor (i = 0; i < len; i += 1) {\r\n\t\t\t\tregisters[i].release();\r\n    \t\t}\r\n    \t\tregisters.length = 0;\r\n    \t}\r\n\r\n        animation.renderer.compInterface = CompExpressionInterface(animation.renderer);\r\n        animation.renderer.globalData.projectInterface.registerComposition(animation.renderer);\r\n        animation.renderer.globalData.pushExpression = pushExpression;\r\n        animation.renderer.globalData.popExpression = popExpression;\r\n        animation.renderer.globalData.registerExpressionProperty = registerExpressionProperty;\r\n    }\r\n   return ob;\r\n}());\r\n\r\nexpressionsPlugin = Expressions;\r\n\r\nvar ExpressionManager = (function(){\r\n    'use strict';\r\n    var ob = {};\r\n    var Math = BMMath;\r\n    var window = null;\r\n    var document = null;\r\n\r\n    function $bm_isInstanceOfArray(arr) {\r\n        return arr.constructor === Array || arr.constructor === Float32Array;\r\n    }\r\n\r\n    function isNumerable(tOfV, v) {\r\n        return tOfV === 'number' || tOfV === 'boolean' || tOfV === 'string' || v instanceof Number;\r\n    }\r\n\r\n    function $bm_neg(a){\r\n        var tOfA = typeof a;\r\n        if(tOfA === 'number' || tOfA === 'boolean'  || a instanceof Number ){\r\n            return -a;\r\n        }\r\n        if($bm_isInstanceOfArray(a)){\r\n            var i, lenA = a.length;\r\n            var retArr = [];\r\n            for(i=0;i<lenA;i+=1){\r\n                retArr[i] = -a[i];\r\n            }\r\n            return retArr;\r\n        }\r\n        if (a.propType) {\r\n            return a.v;\r\n        }\r\n    }\r\n\r\n    var easeInBez = BezierFactory.getBezierEasing(0.333,0,.833,.833, 'easeIn').get;\r\n    var easeOutBez = BezierFactory.getBezierEasing(0.167,0.167,.667,1, 'easeOut').get;\r\n    var easeInOutBez = BezierFactory.getBezierEasing(.33,0,.667,1, 'easeInOut').get;\r\n\r\n    function sum(a,b) {\r\n        var tOfA = typeof a;\r\n        var tOfB = typeof b;\r\n        if(tOfA === 'string' || tOfB === 'string'){\r\n            return a + b;\r\n        }\r\n        if(isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\r\n            return a + b;\r\n        }\r\n        if($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)){\r\n            a = a.slice(0);\r\n            a[0] = a[0] + b;\r\n            return a;\r\n        }\r\n        if(isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)){\r\n            b = b.slice(0);\r\n            b[0] = a + b[0];\r\n            return b;\r\n        }\r\n        if($bm_isInstanceOfArray(a) && $bm_isInstanceOfArray(b)){\r\n            \r\n            var i = 0, lenA = a.length, lenB = b.length;\r\n            var retArr = [];\r\n            while(i<lenA || i < lenB){\r\n                if((typeof a[i] === 'number' || a[i] instanceof Number) && (typeof b[i] === 'number' || b[i] instanceof Number)){\r\n                    retArr[i] = a[i] + b[i];\r\n                }else{\r\n                    retArr[i] = b[i] === undefined ? a[i] : a[i] || b[i];\r\n                }\r\n                i += 1;\r\n            }\r\n            return retArr;\r\n        }\r\n        return 0;\r\n    }\r\n    var add = sum;\r\n\r\n    function sub(a,b) {\r\n        var tOfA = typeof a;\r\n        var tOfB = typeof b;\r\n        if(isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\r\n            if(tOfA === 'string') {\r\n                a = parseInt(a);\r\n            }\r\n            if(tOfB === 'string') {\r\n                b = parseInt(b);\r\n            }\r\n            return a - b;\r\n        }\r\n        if( $bm_isInstanceOfArray(a) && isNumerable(tOfB, b)){\r\n            a = a.slice(0);\r\n            a[0] = a[0] - b;\r\n            return a;\r\n        }\r\n        if(isNumerable(tOfA, a) &&  $bm_isInstanceOfArray(b)){\r\n            b = b.slice(0);\r\n            b[0] = a - b[0];\r\n            return b;\r\n        }\r\n        if($bm_isInstanceOfArray(a) && $bm_isInstanceOfArray(b)){\r\n            var i = 0, lenA = a.length, lenB = b.length;\r\n            var retArr = [];\r\n            while(i<lenA || i < lenB){\r\n                if((typeof a[i] === 'number' || a[i] instanceof Number) && (typeof b[i] === 'number' || b[i] instanceof Number)){\r\n                    retArr[i] = a[i] - b[i];\r\n                }else{\r\n                    retArr[i] = b[i] === undefined ? a[i] : a[i] || b[i];\r\n                }\r\n                i += 1;\r\n            }\r\n            return retArr;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    function mul(a,b) {\r\n        var tOfA = typeof a;\r\n        var tOfB = typeof b;\r\n        var arr;\r\n        if(isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\r\n            return a * b;\r\n        }\r\n\r\n        var i, len;\r\n        if($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)){\r\n            len = a.length;\r\n            arr = createTypedArray('float32', len);\r\n            for(i=0;i<len;i+=1){\r\n                arr[i] = a[i] * b;\r\n            }\r\n            return arr;\r\n        }\r\n        if(isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)){\r\n            len = b.length;\r\n            arr = createTypedArray('float32', len);\r\n            for(i=0;i<len;i+=1){\r\n                arr[i] = a * b[i];\r\n            }\r\n            return arr;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    function div(a,b) {\r\n        var tOfA = typeof a;\r\n        var tOfB = typeof b;\r\n        var arr;\r\n        if(isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\r\n            return a / b;\r\n        }\r\n        var i, len;\r\n        if($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)){\r\n            len = a.length;\r\n            arr = createTypedArray('float32', len);\r\n            for(i=0;i<len;i+=1){\r\n                arr[i] = a[i] / b;\r\n            }\r\n            return arr;\r\n        }\r\n        if(isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)){\r\n            len = b.length;\r\n            arr = createTypedArray('float32', len);\r\n            for(i=0;i<len;i+=1){\r\n                arr[i] = a / b[i];\r\n            }\r\n            return arr;\r\n        }\r\n        return 0;\r\n    }\r\n    function mod(a,b) {\r\n        if(typeof a === 'string') {\r\n            a = parseInt(a);\r\n        }\r\n        if(typeof b === 'string') {\r\n            b = parseInt(b);\r\n        }\r\n        return a % b;\r\n    }\r\n    var $bm_sum = sum;\r\n    var $bm_sub = sub;\r\n    var $bm_mul = mul;\r\n    var $bm_div = div;\r\n    var $bm_mod = mod;\r\n\r\n    function clamp(num, min, max) {\r\n        if(min > max){\r\n            var mm = max;\r\n            max = min;\r\n            min = mm;\r\n        }\r\n        return Math.min(Math.max(num, min), max);\r\n    }\r\n\r\n    function radiansToDegrees(val) {\r\n        return val/degToRads;\r\n    }\r\n    var radians_to_degrees = radiansToDegrees;\r\n\r\n    function degreesToRadians(val) {\r\n        return val*degToRads;\r\n    }\r\n    var degrees_to_radians = radiansToDegrees;\r\n\r\n    var helperLengthArray = [0,0,0,0,0,0];\r\n\r\n    function length(arr1, arr2) {\r\n        if (typeof arr1 === 'number' || arr1 instanceof Number) {\r\n            arr2 = arr2 || 0;\r\n            return Math.abs(arr1 - arr2);\r\n        }\r\n        if(!arr2) {\r\n            arr2 = helperLengthArray;\r\n        }\r\n        var i, len = Math.min(arr1.length, arr2.length);\r\n        var addedLength = 0;\r\n        for (i = 0; i < len; i += 1) {\r\n            addedLength += Math.pow(arr2[i] - arr1[i], 2);\r\n        }\r\n        return Math.sqrt(addedLength);\r\n    }\r\n\r\n    function normalize(vec) {\r\n        return div(vec, length(vec));\r\n    }\r\n\r\n    function rgbToHsl(val) {\r\n        var r = val[0]; var g = val[1]; var b = val[2];\r\n        var max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n        var h, s, l = (max + min) / 2;\r\n\r\n        if(max == min){\r\n            h = s = 0; // achromatic\r\n        }else{\r\n            var d = max - min;\r\n            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n            switch(max){\r\n                case r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n                case g: h = (b - r) / d + 2; break;\r\n                case b: h = (r - g) / d + 4; break;\r\n            }\r\n            h /= 6;\r\n        }\r\n\r\n        return [h, s, l,val[3]];\r\n    }\r\n\r\n    function hue2rgb(p, q, t){\r\n        if(t < 0) t += 1;\r\n        if(t > 1) t -= 1;\r\n        if(t < 1/6) return p + (q - p) * 6 * t;\r\n        if(t < 1/2) return q;\r\n        if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\r\n        return p;\r\n    }\r\n\r\n    function hslToRgb(val){\r\n        var h = val[0];\r\n        var s = val[1];\r\n        var l = val[2];\r\n\r\n        var r, g, b;\r\n\r\n        if(s === 0){\r\n            r = g = b = l; // achromatic\r\n        }else{\r\n\r\n            var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n            var p = 2 * l - q;\r\n            r = hue2rgb(p, q, h + 1/3);\r\n            g = hue2rgb(p, q, h);\r\n            b = hue2rgb(p, q, h - 1/3);\r\n        }\r\n\r\n        return [r, g , b, val[3]];\r\n    }\r\n\r\n    function linear(t, tMin, tMax, value1, value2){\r\n        if(value1 === undefined || value2 === undefined){\r\n            value1 = tMin;\r\n            value2 = tMax;\r\n            tMin = 0;\r\n            tMax = 1;\r\n        }\r\n        if(tMax < tMin) {\r\n            var _tMin = tMax;\r\n            tMax = tMin;\r\n            tMin = _tMin;\r\n        }\r\n        if(t <= tMin) {\r\n            return value1;\r\n        }else if(t >= tMax){\r\n            return value2;\r\n        }\r\n        var perc = tMax === tMin ? 0 : (t-tMin)/(tMax-tMin);\r\n        if(!value1.length){\r\n            return value1 + (value2-value1)*perc;\r\n        }\r\n        var i, len = value1.length;\r\n        var arr = createTypedArray('float32', len);\r\n        for(i=0;i<len;i+=1){\r\n            arr[i] = value1[i] + (value2[i]-value1[i])*perc;\r\n        }\r\n        return arr;\r\n    }\r\n    function random(min,max){\r\n        if(max === undefined){\r\n            if(min === undefined){\r\n                min = 0;\r\n                max = 1;\r\n            } else {\r\n                max = min;\r\n                min = undefined;\r\n            }\r\n        }\r\n        if(max.length){\r\n            var i, len = max.length;\r\n            if(!min){\r\n                min = createTypedArray('float32', len);\r\n            }\r\n            var arr = createTypedArray('float32', len);\r\n            var rnd = BMMath.random();\r\n            for(i=0;i<len;i+=1){\r\n                arr[i] = min[i] + rnd*(max[i]-min[i]);\r\n            }\r\n            return arr;\r\n        }\r\n        if(min === undefined){\r\n            min = 0;\r\n        }\r\n        var rndm = BMMath.random();\r\n        return min + rndm*(max-min);\r\n    }\r\n\r\n    function createPath(points, inTangents, outTangents, closed) {\r\n        var i, len = points.length;\r\n        var path = shape_pool.newElement();\r\n        path.setPathData(!!closed, len);\r\n        var arrPlaceholder = [0,0], inVertexPoint, outVertexPoint;\r\n        for(i = 0; i < len; i += 1) {\r\n            inVertexPoint = (inTangents && inTangents[i]) ? inTangents[i] : arrPlaceholder;\r\n            outVertexPoint = (outTangents && outTangents[i]) ? outTangents[i] : arrPlaceholder;\r\n            path.setTripleAt(points[i][0],points[i][1],outVertexPoint[0] + points[i][0],outVertexPoint[1] + points[i][1],inVertexPoint[0] + points[i][0],inVertexPoint[1] + points[i][1],i,true);\r\n        }\r\n        return path;\r\n    }\r\n\r\n    function initiateExpression(elem,data,property){\r\n        var val = data.x;\r\n        var needsVelocity = /velocity(?![\\w\\d])/.test(val);\r\n        var _needsRandom = val.indexOf('random') !== -1;\r\n        var elemType = elem.data.ty;\r\n        var transform,$bm_transform,content,effect;\r\n        var thisProperty = property;\r\n        thisProperty.valueAtTime = thisProperty.getValueAtTime;\r\n        Object.defineProperty(thisProperty, 'value', {\r\n            get: function() {\r\n                return thisProperty.v\r\n            }\r\n        })\r\n        elem.comp.frameDuration = 1/elem.comp.globalData.frameRate;\r\n        elem.comp.displayStartTime = 0;\r\n        var inPoint = elem.data.ip/elem.comp.globalData.frameRate;\r\n        var outPoint = elem.data.op/elem.comp.globalData.frameRate;\r\n        var width = elem.data.sw ? elem.data.sw : 0;\r\n        var height = elem.data.sh ? elem.data.sh : 0;\r\n        var name = elem.data.nm;\r\n        var loopIn, loop_in, loopOut, loop_out, smooth;\r\n        var toWorld,fromWorld,fromComp,toComp,fromCompToSurface, position, rotation, anchorPoint, scale, thisLayer, thisComp,mask,valueAtTime,velocityAtTime;\r\n        var __expression_functions = [];\r\n        if(data.xf) {\r\n            var i, len = data.xf.length;\r\n            for(i = 0; i < len; i += 1) {\r\n                __expression_functions[i] = eval('(function(){ return ' + data.xf[i] + '}())');\r\n            }\r\n        }\r\n\r\n        var scoped_bm_rt;\r\n        var expression_function = eval('[function _expression_function(){' + val+';scoped_bm_rt=$bm_rt}' + ']')[0];\r\n        var numKeys = property.kf ? data.k.length : 0;\r\n\r\n        var active = !this.data || this.data.hd !== true;\r\n\r\n        var wiggle = function wiggle(freq,amp){\r\n            var i,j, len = this.pv.length ? this.pv.length : 1;\r\n            var addedAmps = createTypedArray('float32', len);\r\n            freq = 5;\r\n            var iterations = Math.floor(time*freq);\r\n            i = 0;\r\n            j = 0;\r\n            while(i<iterations){\r\n                //var rnd = BMMath.random();\r\n                for(j=0;j<len;j+=1){\r\n                    addedAmps[j] += -amp + amp*2*BMMath.random();\r\n                    //addedAmps[j] += -amp + amp*2*rnd;\r\n                }\r\n                i += 1;\r\n            }\r\n            //var rnd2 = BMMath.random();\r\n            var periods = time*freq;\r\n            var perc = periods - Math.floor(periods);\r\n            var arr = createTypedArray('float32', len);\r\n            if(len>1){\r\n                for(j=0;j<len;j+=1){\r\n                    arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp*2*BMMath.random())*perc;\r\n                    //arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp*2*rnd)*perc;\r\n                    //arr[i] = this.pv[i] + addedAmp + amp1*perc + amp2*(1-perc);\r\n                }\r\n                return arr;\r\n            } else {\r\n                return this.pv + addedAmps[0] + (-amp + amp*2*BMMath.random())*perc;\r\n            }\r\n        }.bind(this);\r\n\r\n        if(thisProperty.loopIn) {\r\n            loopIn = thisProperty.loopIn.bind(thisProperty);\r\n            loop_in = loopIn;\r\n        }\r\n\r\n        if(thisProperty.loopOut) {\r\n            loopOut = thisProperty.loopOut.bind(thisProperty);\r\n            loop_out = loopOut;\r\n        }\r\n\r\n        if(thisProperty.smooth) {\r\n            smooth = thisProperty.smooth.bind(thisProperty);\r\n        }\r\n\r\n        function loopInDuration(type,duration){\r\n            return loopIn(type,duration,true);\r\n        }\r\n\r\n        function loopOutDuration(type,duration){\r\n            return loopOut(type,duration,true);\r\n        }\r\n\r\n        if(this.getValueAtTime) {\r\n            valueAtTime = this.getValueAtTime.bind(this);\r\n        }\r\n\r\n        if(this.getVelocityAtTime) {\r\n            velocityAtTime = this.getVelocityAtTime.bind(this);\r\n        }\r\n\r\n        var comp = elem.comp.globalData.projectInterface.bind(elem.comp.globalData.projectInterface);\r\n\r\n        function lookAt(elem1,elem2){\r\n            var fVec = [elem2[0]-elem1[0],elem2[1]-elem1[1],elem2[2]-elem1[2]];\r\n            var pitch = Math.atan2(fVec[0],Math.sqrt(fVec[1]*fVec[1]+fVec[2]*fVec[2]))/degToRads;\r\n            var yaw = -Math.atan2(fVec[1],fVec[2])/degToRads;\r\n            return [yaw,pitch,0];\r\n        }\r\n\r\n        function easeOut(t, tMin, tMax, val1, val2){\r\n            return applyEase(easeOutBez, t, tMin, tMax, val1, val2);\r\n        }\r\n\r\n        function easeIn(t, tMin, tMax, val1, val2){\r\n            return applyEase(easeInBez, t, tMin, tMax, val1, val2);\r\n        }\r\n\r\n        function ease(t, tMin, tMax, val1, val2){\r\n            return applyEase(easeInOutBez, t, tMin, tMax, val1, val2);\r\n        }\r\n\r\n        function applyEase(fn, t, tMin, tMax, val1, val2) {\r\n            if(val1 === undefined){\r\n                val1 = tMin;\r\n                val2 = tMax;\r\n            } else {\r\n                t = (t - tMin) / (tMax - tMin);\r\n            }\r\n            t = t > 1 ? 1 : t < 0 ? 0 : t;\r\n            var mult = fn(t);\r\n            if($bm_isInstanceOfArray(val1)) {\r\n                var i, len = val1.length;\r\n                var arr = createTypedArray('float32', len);\r\n                for (i = 0; i < len; i += 1) {\r\n                    arr[i] = (val2[i] - val1[i]) * mult + val1[i];\r\n                }\r\n                return arr;\r\n            } else {\r\n                return (val2 - val1) * mult + val1;\r\n            }\r\n        }\r\n\r\n        function nearestKey(time){\r\n            var i, len = data.k.length,index,keyTime;\r\n            if(!data.k.length || typeof(data.k[0]) === 'number'){\r\n                index = 0;\r\n                keyTime = 0;\r\n            } else {\r\n                index = -1;\r\n                time *= elem.comp.globalData.frameRate;\r\n                if (time < data.k[0].t) {\r\n                    index = 1;\r\n                    keyTime = data.k[0].t;\r\n                } else {\r\n                    for(i=0;i<len-1;i+=1){\r\n                        if(time === data.k[i].t){\r\n                            index = i + 1;\r\n                            keyTime = data.k[i].t;\r\n                            break;\r\n                        }else if(time>data.k[i].t && time<data.k[i+1].t){\r\n                            if(time-data.k[i].t > data.k[i+1].t - time){\r\n                                index = i + 2;\r\n                                keyTime = data.k[i+1].t;\r\n                            } else {\r\n                                index = i + 1;\r\n                                keyTime = data.k[i].t;\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                    if(index === -1){\r\n                        index = i + 1;\r\n                        keyTime = data.k[i].t;\r\n                    }\r\n                }\r\n                \r\n            }\r\n            var ob = {};\r\n            ob.index = index;\r\n            ob.time = keyTime/elem.comp.globalData.frameRate;\r\n            return ob;\r\n        }\r\n\r\n        function key(ind){\r\n            var ob, i, len;\r\n            if(!data.k.length || typeof(data.k[0]) === 'number'){\r\n                throw new Error('The property has no keyframe at index ' + ind);\r\n            }\r\n            ind -= 1;\r\n            ob = {\r\n                time: data.k[ind].t/elem.comp.globalData.frameRate,\r\n                value: []\r\n            };\r\n            var arr = data.k[ind].hasOwnProperty('s') ? data.k[ind].s : data.k[ind - 1].e;\r\n\r\n            len = arr.length;\r\n            for(i=0;i<len;i+=1){\r\n                ob[i] = arr[i];\r\n                ob.value[i] = arr[i]\r\n            }\r\n            return ob;\r\n        }\r\n\r\n        function framesToTime(frames, fps) { \r\n            if (!fps) {\r\n                fps = elem.comp.globalData.frameRate;\r\n            }\r\n            return frames / fps;\r\n        }\r\n\r\n        function timeToFrames(t, fps) {\r\n            if (!t && t !== 0) {\r\n                t = time;\r\n            }\r\n            if (!fps) {\r\n                fps = elem.comp.globalData.frameRate;\r\n            }\r\n            return t * fps;\r\n        }\r\n\r\n        function seedRandom(seed){\r\n            BMMath.seedrandom(randSeed + seed);\r\n        }\r\n\r\n        function sourceRectAtTime() {\r\n            return elem.sourceRectAtTime();\r\n        }\r\n\r\n        function substring(init, end) {\r\n            if(typeof value === 'string') {\r\n                if(end === undefined) {\r\n                return value.substring(init)\r\n                }\r\n                return value.substring(init, end)\r\n            }\r\n            return '';\r\n        }\r\n\r\n        function substr(init, end) {\r\n            if(typeof value === 'string') {\r\n                if(end === undefined) {\r\n                return value.substr(init)\r\n                }\r\n                return value.substr(init, end)\r\n            }\r\n            return '';\r\n        }\r\n\r\n        function posterizeTime(framesPerSecond) {\r\n            time = framesPerSecond === 0 ? 0 : Math.floor(time * framesPerSecond) / framesPerSecond\r\n            value = valueAtTime(time)\r\n        }\r\n\r\n        var time, velocity, value, text, textIndex, textTotal, selectorValue;\r\n        var index = elem.data.ind;\r\n        var hasParent = !!(elem.hierarchy && elem.hierarchy.length);\r\n        var parent;\r\n        var randSeed = Math.floor(Math.random()*1000000);\r\n        var globalData = elem.globalData;\r\n        function executeExpression(_value) {\r\n            // globalData.pushExpression();\r\n            value = _value;\r\n            if (_needsRandom) {\r\n                seedRandom(randSeed);\r\n            }\r\n            if (this.frameExpressionId === elem.globalData.frameId && this.propType !== 'textSelector') {\r\n                return value;\r\n            }\r\n            if(this.propType === 'textSelector'){\r\n                textIndex = this.textIndex;\r\n                textTotal = this.textTotal;\r\n                selectorValue = this.selectorValue;\r\n            }\r\n            if (!thisLayer) {\r\n                text = elem.layerInterface.text;\r\n                thisLayer = elem.layerInterface;\r\n                thisComp = elem.comp.compInterface;\r\n                toWorld = thisLayer.toWorld.bind(thisLayer);\r\n                fromWorld = thisLayer.fromWorld.bind(thisLayer);\r\n                fromComp = thisLayer.fromComp.bind(thisLayer);\r\n                toComp = thisLayer.toComp.bind(thisLayer);\r\n                mask = thisLayer.mask ? thisLayer.mask.bind(thisLayer) : null;\r\n                fromCompToSurface = fromComp;\r\n            }\r\n            if (!transform) {\r\n                transform = elem.layerInterface(\"ADBE Transform Group\");\r\n                $bm_transform = transform;\r\n                if(transform) {\r\n                    anchorPoint = transform.anchorPoint;\r\n                    /*position = transform.position;\r\n                    rotation = transform.rotation;\r\n                    scale = transform.scale;*/\r\n                }\r\n            }\r\n            \r\n            if (elemType === 4 && !content) {\r\n                content = thisLayer(\"ADBE Root Vectors Group\");\r\n            }\r\n            if (!effect) {\r\n                effect = thisLayer(4);\r\n            }\r\n            hasParent = !!(elem.hierarchy && elem.hierarchy.length);\r\n            if (hasParent && !parent) {\r\n                parent = elem.hierarchy[0].layerInterface;\r\n            }\r\n            time = this.comp.renderedFrame/this.comp.globalData.frameRate;\r\n            if (needsVelocity) {\r\n                velocity = velocityAtTime(time);\r\n            }\r\n            expression_function();\r\n            this.frameExpressionId = elem.globalData.frameId;\r\n\r\n\r\n            //TODO: Check if it's possible to return on ShapeInterface the .v value\r\n            if (scoped_bm_rt.propType === \"shape\") {\r\n                scoped_bm_rt = scoped_bm_rt.v;\r\n            }\r\n            // globalData.popExpression();\r\n            return scoped_bm_rt;\r\n        }\r\n        return executeExpression;\r\n    }\r\n\r\n    ob.initiateExpression = initiateExpression;\r\n    return ob;\r\n}());\r\nvar expressionHelpers = (function(){\r\n\r\n    function searchExpressions(elem,data,prop){\r\n        if(data.x){\r\n            prop.k = true;\r\n            prop.x = true;\r\n            prop.initiateExpression = ExpressionManager.initiateExpression;\r\n            prop.effectsSequence.push(prop.initiateExpression(elem,data,prop).bind(prop));\r\n        }\r\n    }\r\n\r\n    function getValueAtTime(frameNum) {\r\n        frameNum *= this.elem.globalData.frameRate;\r\n        frameNum -= this.offsetTime;\r\n        if(frameNum !== this._cachingAtTime.lastFrame) {\r\n            this._cachingAtTime.lastIndex = this._cachingAtTime.lastFrame < frameNum ? this._cachingAtTime.lastIndex : 0;\r\n            this._cachingAtTime.value = this.interpolateValue(frameNum, this._cachingAtTime);\r\n            this._cachingAtTime.lastFrame = frameNum;\r\n        }\r\n        return this._cachingAtTime.value;\r\n\r\n    }\r\n\r\n    function getSpeedAtTime(frameNum) {\r\n        var delta = -0.01;\r\n        var v1 = this.getValueAtTime(frameNum);\r\n        var v2 = this.getValueAtTime(frameNum + delta);\r\n        var speed = 0;\r\n        if(v1.length){\r\n            var i;\r\n            for(i=0;i<v1.length;i+=1){\r\n                speed += Math.pow(v2[i] - v1[i], 2);\r\n            }\r\n            speed = Math.sqrt(speed) * 100;\r\n        } else {\r\n            speed = 0;\r\n        }\r\n        return speed;\r\n    }\r\n\r\n    function getVelocityAtTime(frameNum) {\r\n        if(this.vel !== undefined){\r\n            return this.vel;\r\n        }\r\n        var delta = -0.001;\r\n        //frameNum += this.elem.data.st;\r\n        var v1 = this.getValueAtTime(frameNum);\r\n        var v2 = this.getValueAtTime(frameNum + delta);\r\n        var velocity;\r\n        if(v1.length){\r\n            velocity = createTypedArray('float32', v1.length);\r\n            var i;\r\n            for(i=0;i<v1.length;i+=1){\r\n                //removing frameRate\r\n                //if needed, don't add it here\r\n                //velocity[i] = this.elem.globalData.frameRate*((v2[i] - v1[i])/delta);\r\n                velocity[i] = (v2[i] - v1[i])/delta;\r\n            }\r\n        } else {\r\n            velocity = (v2 - v1)/delta;\r\n        }\r\n        return velocity;\r\n    }\r\n\r\n    function getStaticValueAtTime() {\r\n        return this.pv;\r\n    }\r\n\r\n    function setGroupProperty(propertyGroup){\r\n        this.propertyGroup = propertyGroup;\r\n    }\r\n\r\n\treturn {\r\n\t\tsearchExpressions: searchExpressions,\r\n\t\tgetSpeedAtTime: getSpeedAtTime,\r\n\t\tgetVelocityAtTime: getVelocityAtTime,\r\n\t\tgetValueAtTime: getValueAtTime,\r\n\t\tgetStaticValueAtTime: getStaticValueAtTime,\r\n\t\tsetGroupProperty: setGroupProperty,\r\n\t}\r\n}());\r\n(function addPropertyDecorator() {\r\n\r\n    function loopOut(type,duration,durationFlag){\r\n        if(!this.k || !this.keyframes){\r\n            return this.pv;\r\n        }\r\n        type = type ? type.toLowerCase() : '';\r\n        var currentFrame = this.comp.renderedFrame;\r\n        var keyframes = this.keyframes;\r\n        var lastKeyFrame = keyframes[keyframes.length - 1].t;\r\n        if(currentFrame<=lastKeyFrame){\r\n            return this.pv;\r\n        }else{\r\n            var cycleDuration, firstKeyFrame;\r\n            if(!durationFlag){\r\n                if(!duration || duration > keyframes.length - 1){\r\n                    duration = keyframes.length - 1;\r\n                }\r\n                firstKeyFrame = keyframes[keyframes.length - 1 - duration].t;\r\n                cycleDuration = lastKeyFrame - firstKeyFrame;\r\n            } else {\r\n                if(!duration){\r\n                    cycleDuration = Math.max(0,lastKeyFrame - this.elem.data.ip);\r\n                } else {\r\n                    cycleDuration = Math.abs(lastKeyFrame - elem.comp.globalData.frameRate*duration);\r\n                }\r\n                firstKeyFrame = lastKeyFrame - cycleDuration;\r\n            }\r\n            var i, len, ret;\r\n            if(type === 'pingpong') {\r\n                var iterations = Math.floor((currentFrame - firstKeyFrame)/cycleDuration);\r\n                if(iterations % 2 !== 0){\r\n                    return this.getValueAtTime(((cycleDuration - (currentFrame - firstKeyFrame) % cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);\r\n                }\r\n            } else if(type === 'offset'){\r\n                var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var current = this.getValueAtTime(((currentFrame - firstKeyFrame) % cycleDuration +  firstKeyFrame) / this.comp.globalData.frameRate, 0);\r\n                var repeats = Math.floor((currentFrame - firstKeyFrame)/cycleDuration);\r\n                if(this.pv.length){\r\n                    ret = new Array(initV.length);\r\n                    len = ret.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        ret[i] = (endV[i]-initV[i])*repeats + current[i];\r\n                    }\r\n                    return ret;\r\n                }\r\n                return (endV-initV)*repeats + current;\r\n            } else if(type === 'continue'){\r\n                var lastValue = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var nextLastValue = this.getValueAtTime((lastKeyFrame - 0.001) / this.comp.globalData.frameRate, 0);\r\n                if(this.pv.length){\r\n                    ret = new Array(lastValue.length);\r\n                    len = ret.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        ret[i] = lastValue[i] + (lastValue[i]-nextLastValue[i])*((currentFrame - lastKeyFrame)/ this.comp.globalData.frameRate)/0.0005;\r\n                    }\r\n                    return ret;\r\n                }\r\n                return lastValue + (lastValue-nextLastValue)*(((currentFrame - lastKeyFrame))/0.001);\r\n            }\r\n            return this.getValueAtTime((((currentFrame - firstKeyFrame) % cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);\r\n        }\r\n    }\r\n\r\n    function loopIn(type,duration, durationFlag) {\r\n        if(!this.k){\r\n            return this.pv;\r\n        }\r\n        type = type ? type.toLowerCase() : '';\r\n        var currentFrame = this.comp.renderedFrame;\r\n        var keyframes = this.keyframes;\r\n        var firstKeyFrame = keyframes[0].t;\r\n        if(currentFrame>=firstKeyFrame){\r\n            return this.pv;\r\n        }else{\r\n            var cycleDuration, lastKeyFrame;\r\n            if(!durationFlag){\r\n                if(!duration || duration > keyframes.length - 1){\r\n                    duration = keyframes.length - 1;\r\n                }\r\n                lastKeyFrame = keyframes[duration].t;\r\n                cycleDuration = lastKeyFrame - firstKeyFrame;\r\n            } else {\r\n                if(!duration){\r\n                    cycleDuration = Math.max(0,this.elem.data.op - firstKeyFrame);\r\n                } else {\r\n                    cycleDuration = Math.abs(elem.comp.globalData.frameRate*duration);\r\n                }\r\n                lastKeyFrame = firstKeyFrame + cycleDuration;\r\n            }\r\n            var i, len, ret;\r\n            if(type === 'pingpong') {\r\n                var iterations = Math.floor((firstKeyFrame - currentFrame)/cycleDuration);\r\n                if(iterations % 2 === 0){\r\n                    return this.getValueAtTime((((firstKeyFrame - currentFrame)%cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);\r\n                }\r\n            } else if(type === 'offset'){\r\n                var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var current = this.getValueAtTime((cycleDuration - (firstKeyFrame - currentFrame)%cycleDuration +  firstKeyFrame) / this.comp.globalData.frameRate, 0);\r\n                var repeats = Math.floor((firstKeyFrame - currentFrame)/cycleDuration)+1;\r\n                if(this.pv.length){\r\n                    ret = new Array(initV.length);\r\n                    len = ret.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        ret[i] = current[i]-(endV[i]-initV[i])*repeats;\r\n                    }\r\n                    return ret;\r\n                }\r\n                return current-(endV-initV)*repeats;\r\n            } else if(type === 'continue'){\r\n                var firstValue = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var nextFirstValue = this.getValueAtTime((firstKeyFrame + 0.001) / this.comp.globalData.frameRate, 0);\r\n                if(this.pv.length){\r\n                    ret = new Array(firstValue.length);\r\n                    len = ret.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        ret[i] = firstValue[i] + (firstValue[i]-nextFirstValue[i])*(firstKeyFrame - currentFrame)/0.001;\r\n                    }\r\n                    return ret;\r\n                }\r\n                return firstValue + (firstValue-nextFirstValue)*(firstKeyFrame - currentFrame)/0.001;\r\n            }\r\n            return this.getValueAtTime(((cycleDuration - (firstKeyFrame - currentFrame) % cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);\r\n        }\r\n    }\r\n\r\n    function smooth(width, samples) {\r\n        if (!this.k){\r\n            return this.pv;\r\n        }\r\n        width = (width || 0.4) * 0.5;\r\n        samples = Math.floor(samples || 5);\r\n        if (samples <= 1) {\r\n            return this.pv;\r\n        }\r\n        var currentTime = this.comp.renderedFrame / this.comp.globalData.frameRate;\r\n        var initFrame = currentTime - width;\r\n        var endFrame = currentTime + width;\r\n        var sampleFrequency = samples > 1 ? (endFrame - initFrame) / (samples - 1) : 1;\r\n        var i = 0, j = 0;\r\n        var value;\r\n        if (this.pv.length) {\r\n            value = createTypedArray('float32', this.pv.length);\r\n        } else {\r\n            value = 0;\r\n        }\r\n        var sampleValue;\r\n        while (i < samples) {\r\n            sampleValue = this.getValueAtTime(initFrame + i * sampleFrequency);\r\n            if(this.pv.length) {\r\n                for (j = 0; j < this.pv.length; j += 1) {\r\n                    value[j] += sampleValue[j];\r\n                }\r\n            } else {\r\n                value += sampleValue;\r\n            }\r\n            i += 1;\r\n        }\r\n        if(this.pv.length) {\r\n            for (j = 0; j < this.pv.length; j += 1) {\r\n                value[j] /= samples;\r\n            }\r\n        } else {\r\n            value /= samples;\r\n        }\r\n        return value;\r\n    }\r\n\r\n    function getValueAtTime(frameNum) {\r\n        frameNum *= this.elem.globalData.frameRate;\r\n        frameNum -= this.offsetTime;\r\n        if(frameNum !== this._cachingAtTime.lastFrame) {\r\n            this._cachingAtTime.lastIndex = this._cachingAtTime.lastFrame < frameNum ? this._cachingAtTime.lastIndex : 0;\r\n            this._cachingAtTime.value = this.interpolateValue(frameNum, this._cachingAtTime);\r\n            this._cachingAtTime.lastFrame = frameNum;\r\n        }\r\n        return this._cachingAtTime.value;\r\n\r\n    }\r\n\r\n    function getTransformValueAtTime(time) {\r\n        console.warn('Transform at time not supported');\r\n    }\r\n\r\n    function getTransformStaticValueAtTime(time) {\r\n\r\n    }\r\n\r\n    var getTransformProperty = TransformPropertyFactory.getTransformProperty;\r\n    TransformPropertyFactory.getTransformProperty = function(elem, data, container) {\r\n        var prop = getTransformProperty(elem, data, container);\r\n        if(prop.dynamicProperties.length) {\r\n            prop.getValueAtTime = getTransformValueAtTime.bind(prop);\r\n        } else {\r\n            prop.getValueAtTime = getTransformStaticValueAtTime.bind(prop);\r\n        }\r\n        prop.setGroupProperty = expressionHelpers.setGroupProperty;\r\n        return prop;\r\n    };\r\n\r\n    var propertyGetProp = PropertyFactory.getProp;\r\n    PropertyFactory.getProp = function(elem,data,type, mult, container){\r\n        var prop = propertyGetProp(elem,data,type, mult, container);\r\n        //prop.getVelocityAtTime = getVelocityAtTime;\r\n        //prop.loopOut = loopOut;\r\n        //prop.loopIn = loopIn;\r\n        if(prop.kf){\r\n            prop.getValueAtTime = expressionHelpers.getValueAtTime.bind(prop);\r\n        } else {\r\n            prop.getValueAtTime = expressionHelpers.getStaticValueAtTime.bind(prop);\r\n        }\r\n        prop.setGroupProperty = expressionHelpers.setGroupProperty;\r\n        prop.loopOut = loopOut;\r\n        prop.loopIn = loopIn;\r\n        prop.smooth = smooth;\r\n        prop.getVelocityAtTime = expressionHelpers.getVelocityAtTime.bind(prop);\r\n        prop.getSpeedAtTime = expressionHelpers.getSpeedAtTime.bind(prop);\r\n        prop.numKeys = data.a === 1 ? data.k.length : 0;\r\n        prop.propertyIndex = data.ix;\r\n        var value = 0;\r\n        if(type !== 0) {\r\n            value = createTypedArray('float32', data.a === 1 ?  data.k[0].s.length : data.k.length);\r\n        }\r\n        prop._cachingAtTime = {\r\n            lastFrame: initialDefaultFrame,\r\n            lastIndex: 0,\r\n            value: value\r\n        };\r\n        expressionHelpers.searchExpressions(elem,data,prop);\r\n        if(prop.k){\r\n            container.addDynamicProperty(prop);\r\n        }\r\n\r\n        return prop;\r\n    };\r\n\r\n    function getShapeValueAtTime(frameNum) {\r\n        //For now this caching object is created only when needed instead of creating it when the shape is initialized.\r\n        if (!this._cachingAtTime) {\r\n            this._cachingAtTime = {\r\n                shapeValue: shape_pool.clone(this.pv),\r\n                lastIndex: 0,\r\n                lastTime: initialDefaultFrame\r\n            };\r\n        }\r\n        \r\n        frameNum *= this.elem.globalData.frameRate;\r\n        frameNum -= this.offsetTime;\r\n        if(frameNum !== this._cachingAtTime.lastTime) {\r\n            this._cachingAtTime.lastIndex = this._cachingAtTime.lastTime < frameNum ? this._caching.lastIndex : 0;\r\n            this._cachingAtTime.lastTime = frameNum;\r\n            this.interpolateShape(frameNum, this._cachingAtTime.shapeValue, this._cachingAtTime);\r\n        }\r\n        return this._cachingAtTime.shapeValue;\r\n    }\r\n\r\n    var ShapePropertyConstructorFunction = ShapePropertyFactory.getConstructorFunction();\r\n    var KeyframedShapePropertyConstructorFunction = ShapePropertyFactory.getKeyframedConstructorFunction();\r\n\r\n    function ShapeExpressions(){}\r\n    ShapeExpressions.prototype = {\r\n        vertices: function(prop, time){\r\n            if (this.k) {\r\n                this.getValue();\r\n            }\r\n            var shapePath = this.v;\r\n            if(time !== undefined) {\r\n                shapePath = this.getValueAtTime(time, 0);\r\n            }\r\n            var i, len = shapePath._length;\r\n            var vertices = shapePath[prop];\r\n            var points = shapePath.v;\r\n            var arr = createSizedArray(len);\r\n            for(i = 0; i < len; i += 1) {\r\n                if(prop === 'i' || prop === 'o') {\r\n                    arr[i] = [vertices[i][0] - points[i][0], vertices[i][1] - points[i][1]];\r\n                } else {\r\n                    arr[i] = [vertices[i][0], vertices[i][1]];\r\n                }\r\n                \r\n            }\r\n            return arr;\r\n        },\r\n        points: function(time){\r\n            return this.vertices('v', time);\r\n        },\r\n        inTangents: function(time){\r\n            return this.vertices('i', time);\r\n        },\r\n        outTangents: function(time){\r\n            return this.vertices('o', time);\r\n        },\r\n        isClosed: function(){\r\n            return this.v.c;\r\n        },\r\n        pointOnPath: function(perc, time){\r\n            var shapePath = this.v;\r\n            if(time !== undefined) {\r\n                shapePath = this.getValueAtTime(time, 0);\r\n            }\r\n            if(!this._segmentsLength) {\r\n                this._segmentsLength = bez.getSegmentsLength(shapePath);\r\n            }\r\n\r\n            var segmentsLength = this._segmentsLength;\r\n            var lengths = segmentsLength.lengths;\r\n            var lengthPos = segmentsLength.totalLength * perc;\r\n            var i = 0, len = lengths.length;\r\n            var j = 0, jLen;\r\n            var accumulatedLength = 0, pt;\r\n            while(i < len) {\r\n                if(accumulatedLength + lengths[i].addedLength > lengthPos) {\r\n                    var initIndex = i;\r\n                    var endIndex = (shapePath.c && i === len - 1) ? 0 : i + 1;\r\n                    var segmentPerc = (lengthPos - accumulatedLength)/lengths[i].addedLength;\r\n                    pt = bez.getPointInSegment(shapePath.v[initIndex], shapePath.v[endIndex], shapePath.o[initIndex], shapePath.i[endIndex], segmentPerc, lengths[i]);\r\n                    break;\r\n                } else {\r\n                    accumulatedLength += lengths[i].addedLength;\r\n                }\r\n                i += 1;\r\n            }\r\n            if(!pt){\r\n                pt = shapePath.c ? [shapePath.v[0][0],shapePath.v[0][1]]:[shapePath.v[shapePath._length-1][0],shapePath.v[shapePath._length-1][1]];\r\n            }\r\n            return pt;\r\n        },\r\n        vectorOnPath: function(perc, time, vectorType){\r\n            //perc doesn't use triple equality because it can be a Number object as well as a primitive.\r\n            perc = perc == 1 ? this.v.c ? 0 : 0.999 : perc;\r\n            var pt1 = this.pointOnPath(perc, time);\r\n            var pt2 = this.pointOnPath(perc + 0.001, time);\r\n            var xLength = pt2[0] - pt1[0];\r\n            var yLength = pt2[1] - pt1[1];\r\n            var magnitude = Math.sqrt(Math.pow(xLength,2) + Math.pow(yLength,2));\r\n            if (magnitude === 0) {\r\n                return [0,0];\r\n            }\r\n            var unitVector = vectorType === 'tangent' ? [xLength/magnitude, yLength/magnitude] : [-yLength/magnitude, xLength/magnitude];\r\n            return unitVector;\r\n        },\r\n        tangentOnPath: function(perc, time){\r\n            return this.vectorOnPath(perc, time, 'tangent');\r\n        },\r\n        normalOnPath: function(perc, time){\r\n            return this.vectorOnPath(perc, time, 'normal');\r\n        },\r\n        setGroupProperty: expressionHelpers.setGroupProperty,\r\n        getValueAtTime: expressionHelpers.getStaticValueAtTime\r\n    };\r\n    extendPrototype([ShapeExpressions], ShapePropertyConstructorFunction);\r\n    extendPrototype([ShapeExpressions], KeyframedShapePropertyConstructorFunction);\r\n    KeyframedShapePropertyConstructorFunction.prototype.getValueAtTime = getShapeValueAtTime;\r\n    KeyframedShapePropertyConstructorFunction.prototype.initiateExpression = ExpressionManager.initiateExpression;\r\n\r\n    var propertyGetShapeProp = ShapePropertyFactory.getShapeProp;\r\n    ShapePropertyFactory.getShapeProp = function(elem,data,type, arr, trims){\r\n        var prop = propertyGetShapeProp(elem,data,type, arr, trims);\r\n        prop.propertyIndex = data.ix;\r\n        prop.lock = false;\r\n        if(type === 3){\r\n            expressionHelpers.searchExpressions(elem,data.pt,prop);\r\n        } else if(type === 4){\r\n            expressionHelpers.searchExpressions(elem,data.ks,prop);\r\n        }\r\n        if(prop.k){\r\n            elem.addDynamicProperty(prop);\r\n        }\r\n        return prop;\r\n    };\r\n}());\r\n(function addDecorator() {\r\n\r\n    function searchExpressions(){\r\n        if(this.data.d.x){\r\n            this.calculateExpression = ExpressionManager.initiateExpression.bind(this)(this.elem,this.data.d,this);\r\n            this.addEffect(this.getExpressionValue.bind(this));\r\n            return true;\r\n        }\r\n    }\r\n\r\n    TextProperty.prototype.getExpressionValue = function(currentValue, text) {\r\n        var newValue = this.calculateExpression(text);\r\n        if(currentValue.t !== newValue) {\r\n            var newData = {};\r\n            this.copyData(newData, currentValue);\r\n            newData.t = newValue.toString();\r\n            newData.__complete = false;\r\n            return newData;\r\n        }\r\n        return currentValue;\r\n    }\r\n\r\n    TextProperty.prototype.searchProperty = function(){\r\n\r\n        var isKeyframed = this.searchKeyframes();\r\n        var hasExpressions = this.searchExpressions();\r\n        this.kf = isKeyframed || hasExpressions;\r\n        return this.kf;\r\n    };\r\n\r\n    TextProperty.prototype.searchExpressions = searchExpressions;\r\n    \r\n}());\r\nvar ShapeExpressionInterface = (function(){\r\n\r\n    function iterateElements(shapes,view, propertyGroup){\r\n        var arr = [];\r\n        var i, len = shapes ? shapes.length : 0;\r\n        for(i=0;i<len;i+=1){\r\n            if(shapes[i].ty == 'gr'){\r\n                arr.push(groupInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'fl'){\r\n                arr.push(fillInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'st'){\r\n                arr.push(strokeInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'tm'){\r\n                arr.push(trimInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'tr'){\r\n                //arr.push(transformInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'el'){\r\n                arr.push(ellipseInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'sr'){\r\n                arr.push(starInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            } else if(shapes[i].ty == 'sh'){\r\n                arr.push(pathInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            } else if(shapes[i].ty == 'rc'){\r\n                arr.push(rectInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            } else if(shapes[i].ty == 'rd'){\r\n                arr.push(roundedInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            } else if(shapes[i].ty == 'rp'){\r\n                arr.push(repeaterInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function contentsInterfaceFactory(shape,view, propertyGroup){\r\n       var interfaces;\r\n       var interfaceFunction = function _interfaceFunction(value){\r\n           var i = 0, len = interfaces.length;\r\n            while(i<len){\r\n                if(interfaces[i]._name === value || interfaces[i].mn === value || interfaces[i].propertyIndex === value || interfaces[i].ix === value || interfaces[i].ind === value){\r\n                   return interfaces[i];\r\n                }\r\n                i+=1;\r\n            }\r\n            if(typeof value === 'number'){\r\n               return interfaces[value-1];\r\n            }\r\n       };\r\n       interfaceFunction.propertyGroup = function(val){\r\n           if(val === 1){\r\n               return interfaceFunction;\r\n           } else{\r\n               return propertyGroup(val-1);\r\n           }\r\n       };\r\n       interfaces = iterateElements(shape.it, view.it, interfaceFunction.propertyGroup);\r\n       interfaceFunction.numProperties = interfaces.length;\r\n       interfaceFunction.propertyIndex = shape.cix;\r\n       interfaceFunction._name = shape.nm;\r\n\r\n       return interfaceFunction;\r\n   }\r\n\r\n    function groupInterfaceFactory(shape,view, propertyGroup){\r\n        var interfaceFunction = function _interfaceFunction(value){\r\n            switch(value){\r\n                case 'ADBE Vectors Group':\r\n                case 'Contents':\r\n                case 2:\r\n                    return interfaceFunction.content;\r\n                //Not necessary for now. Keeping them here in case a new case appears\r\n                //case 'ADBE Vector Transform Group':\r\n                //case 3:\r\n                default:\r\n                    return interfaceFunction.transform;\r\n            }\r\n        };\r\n        interfaceFunction.propertyGroup = function(val){\r\n            if(val === 1){\r\n                return interfaceFunction;\r\n            } else{\r\n                return propertyGroup(val-1);\r\n            }\r\n        };\r\n        var content = contentsInterfaceFactory(shape,view,interfaceFunction.propertyGroup);\r\n        var transformInterface = transformInterfaceFactory(shape.it[shape.it.length - 1],view.it[view.it.length - 1],interfaceFunction.propertyGroup);\r\n        interfaceFunction.content = content;\r\n        interfaceFunction.transform = transformInterface;\r\n        Object.defineProperty(interfaceFunction, '_name', {\r\n            get: function(){\r\n                return shape.nm;\r\n            }\r\n        });\r\n        //interfaceFunction.content = interfaceFunction;\r\n        interfaceFunction.numProperties = shape.np;\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        interfaceFunction.nm = shape.nm;\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function fillInterfaceFactory(shape,view,propertyGroup){\r\n        function interfaceFunction(val){\r\n            if(val === 'Color' || val === 'color'){\r\n                return interfaceFunction.color;\r\n            } else if(val === 'Opacity' || val === 'opacity'){\r\n                return interfaceFunction.opacity;\r\n            }\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'color': {\r\n                get: ExpressionPropertyInterface(view.c)\r\n            },\r\n            'opacity': {\r\n                get: ExpressionPropertyInterface(view.o)\r\n            },\r\n            '_name': { value: shape.nm },\r\n            'mn': { value: shape.mn }\r\n        });\r\n\r\n        view.c.setGroupProperty(propertyGroup);\r\n        view.o.setGroupProperty(propertyGroup);\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function strokeInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val === 1){\r\n                return ob;\r\n            } else{\r\n                return propertyGroup(val-1);\r\n            }\r\n        }\r\n        function _dashPropertyGroup(val){\r\n            if(val === 1){\r\n                return dashOb;\r\n            } else{\r\n                return _propertyGroup(val-1);\r\n            }\r\n        }\r\n        function addPropertyToDashOb(i) {\r\n            Object.defineProperty(dashOb, shape.d[i].nm, {\r\n                get: ExpressionPropertyInterface(view.d.dataProps[i].p)\r\n            });\r\n        }\r\n        var i, len = shape.d ? shape.d.length : 0;\r\n        var dashOb = {};\r\n        for (i = 0; i < len; i += 1) {\r\n            addPropertyToDashOb(i);\r\n            view.d.dataProps[i].p.setGroupProperty(_dashPropertyGroup);\r\n        }\r\n\r\n        function interfaceFunction(val){\r\n            if(val === 'Color' || val === 'color'){\r\n                return interfaceFunction.color;\r\n            } else if(val === 'Opacity' || val === 'opacity'){\r\n                return interfaceFunction.opacity;\r\n            } else if(val === 'Stroke Width' || val === 'stroke width'){\r\n                return interfaceFunction.strokeWidth;\r\n            }\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'color': {\r\n                get: ExpressionPropertyInterface(view.c)\r\n            },\r\n            'opacity': {\r\n                get: ExpressionPropertyInterface(view.o)\r\n            },\r\n            'strokeWidth': {\r\n                get: ExpressionPropertyInterface(view.w)\r\n            },\r\n            'dash': {\r\n                get: function() {\r\n                    return dashOb;\r\n                }\r\n            },\r\n            '_name': { value: shape.nm },\r\n            'mn': { value: shape.mn }\r\n        });\r\n\r\n        view.c.setGroupProperty(_propertyGroup);\r\n        view.o.setGroupProperty(_propertyGroup);\r\n        view.w.setGroupProperty(_propertyGroup);\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function trimInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n\r\n        view.s.setGroupProperty(_propertyGroup);\r\n        view.e.setGroupProperty(_propertyGroup);\r\n        view.o.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(val){\r\n            if(val === shape.e.ix || val === 'End' || val === 'end'){\r\n                return interfaceFunction.end;\r\n            }\r\n            if(val === shape.s.ix){\r\n                return interfaceFunction.start;\r\n            }\r\n            if(val === shape.o.ix){\r\n                return interfaceFunction.offset;\r\n            }\r\n        }\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        interfaceFunction.propertyGroup = propertyGroup;\r\n\r\n        Object.defineProperties(interfaceFunction, {\r\n            'start': {\r\n                get: ExpressionPropertyInterface(view.s)\r\n            },\r\n            'end': {\r\n                get: ExpressionPropertyInterface(view.e)\r\n            },\r\n            'offset': {\r\n                get: ExpressionPropertyInterface(view.o)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function transformInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        view.transform.mProps.o.setGroupProperty(_propertyGroup);\r\n        view.transform.mProps.p.setGroupProperty(_propertyGroup);\r\n        view.transform.mProps.a.setGroupProperty(_propertyGroup);\r\n        view.transform.mProps.s.setGroupProperty(_propertyGroup);\r\n        view.transform.mProps.r.setGroupProperty(_propertyGroup);\r\n        if(view.transform.mProps.sk){\r\n            view.transform.mProps.sk.setGroupProperty(_propertyGroup);\r\n            view.transform.mProps.sa.setGroupProperty(_propertyGroup);\r\n        }\r\n        view.transform.op.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(value){\r\n            if(shape.a.ix === value || value === 'Anchor Point'){\r\n                return interfaceFunction.anchorPoint;\r\n            }\r\n            if(shape.o.ix === value || value === 'Opacity'){\r\n                return interfaceFunction.opacity;\r\n            }\r\n            if(shape.p.ix === value || value === 'Position'){\r\n                return interfaceFunction.position;\r\n            }\r\n            if(shape.r.ix === value || value === 'Rotation' || value === 'ADBE Vector Rotation'){\r\n                return interfaceFunction.rotation;\r\n            }\r\n            if(shape.s.ix === value || value === 'Scale'){\r\n                return interfaceFunction.scale;\r\n            }\r\n            if(shape.sk && shape.sk.ix === value || value === 'Skew'){\r\n                return interfaceFunction.skew;\r\n            }\r\n            if(shape.sa && shape.sa.ix === value || value === 'Skew Axis'){\r\n                return interfaceFunction.skewAxis;\r\n            }\r\n\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'opacity': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.o)\r\n            },\r\n            'position': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.p)\r\n            },\r\n            'anchorPoint': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.a)\r\n            },\r\n            'scale': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.s)\r\n            },\r\n            'rotation': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.r)\r\n            },\r\n            'skew': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.sk)\r\n            },\r\n            'skewAxis': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.sa)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.ty = 'tr';\r\n        interfaceFunction.mn = shape.mn;\r\n        interfaceFunction.propertyGroup = propertyGroup;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function ellipseInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\r\n        prop.s.setGroupProperty(_propertyGroup);\r\n        prop.p.setGroupProperty(_propertyGroup);\r\n        function interfaceFunction(value){\r\n            if(shape.p.ix === value){\r\n                return interfaceFunction.position;\r\n            }\r\n            if(shape.s.ix === value){\r\n                return interfaceFunction.size;\r\n            }\r\n        }\r\n\r\n        Object.defineProperties(interfaceFunction, {\r\n            'size': {\r\n                get: ExpressionPropertyInterface(prop.s)\r\n            },\r\n            'position': {\r\n                get: ExpressionPropertyInterface(prop.p)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function starInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        prop.or.setGroupProperty(_propertyGroup);\r\n        prop.os.setGroupProperty(_propertyGroup);\r\n        prop.pt.setGroupProperty(_propertyGroup);\r\n        prop.p.setGroupProperty(_propertyGroup);\r\n        prop.r.setGroupProperty(_propertyGroup);\r\n        if(shape.ir){\r\n            prop.ir.setGroupProperty(_propertyGroup);\r\n            prop.is.setGroupProperty(_propertyGroup);\r\n        }\r\n\r\n        function interfaceFunction(value){\r\n            if(shape.p.ix === value){\r\n                return interfaceFunction.position;\r\n            }\r\n            if(shape.r.ix === value){\r\n                return interfaceFunction.rotation;\r\n            }\r\n            if(shape.pt.ix === value){\r\n                return interfaceFunction.points;\r\n            }\r\n            if(shape.or.ix === value || 'ADBE Vector Star Outer Radius' === value){\r\n                return interfaceFunction.outerRadius;\r\n            }\r\n            if(shape.os.ix === value){\r\n                return interfaceFunction.outerRoundness;\r\n            }\r\n            if(shape.ir && (shape.ir.ix === value || 'ADBE Vector Star Inner Radius' === value)){\r\n                return interfaceFunction.innerRadius;\r\n            }\r\n            if(shape.is && shape.is.ix === value){\r\n                return interfaceFunction.innerRoundness;\r\n            }\r\n\r\n        }\r\n\r\n        Object.defineProperties(interfaceFunction, {\r\n            'position': {\r\n                get: ExpressionPropertyInterface(prop.p)\r\n            },\r\n            'rotation': {\r\n                get: ExpressionPropertyInterface(prop.r)\r\n            },\r\n            'points': {\r\n                get: ExpressionPropertyInterface(prop.pt)\r\n            },\r\n            'outerRadius': {\r\n                get: ExpressionPropertyInterface(prop.or)\r\n            },\r\n            'outerRoundness': {\r\n                get: ExpressionPropertyInterface(prop.os)\r\n            },\r\n            'innerRadius': {\r\n                get: ExpressionPropertyInterface(prop.ir)\r\n            },\r\n            'innerRoundness': {\r\n                get: ExpressionPropertyInterface(prop.is)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function rectInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        prop.p.setGroupProperty(_propertyGroup);\r\n        prop.s.setGroupProperty(_propertyGroup);\r\n        prop.r.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(value){\r\n            if(shape.p.ix === value){\r\n                return interfaceFunction.position;\r\n            }\r\n            if(shape.r.ix === value){\r\n                return interfaceFunction.roundness;\r\n            }\r\n            if(shape.s.ix === value || value === 'Size' || value === 'ADBE Vector Rect Size'){\r\n                return interfaceFunction.size;\r\n            }\r\n\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'position': {\r\n                get: ExpressionPropertyInterface(prop.p)\r\n            },\r\n            'roundness': {\r\n                get: ExpressionPropertyInterface(prop.r)\r\n            },\r\n            'size': {\r\n                get: ExpressionPropertyInterface(prop.s)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function roundedInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        var prop = view;\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        prop.rd.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(value){\r\n            if(shape.r.ix === value || 'Round Corners 1' === value){\r\n                return interfaceFunction.radius;\r\n            }\r\n\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'radius': {\r\n                get: ExpressionPropertyInterface(prop.rd)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function repeaterInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        var prop = view;\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        prop.c.setGroupProperty(_propertyGroup);\r\n        prop.o.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(value){\r\n            if(shape.c.ix === value || 'Copies' === value){\r\n                return interfaceFunction.copies;\r\n            } else if(shape.o.ix === value || 'Offset' === value){\r\n                return interfaceFunction.offset;\r\n            }\r\n\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'copies': {\r\n                get: ExpressionPropertyInterface(prop.c)\r\n            },\r\n            'offset': {\r\n                get: ExpressionPropertyInterface(prop.o)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function pathInterfaceFactory(shape,view,propertyGroup){\r\n        var prop = view.sh;\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        prop.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(val){\r\n            if(val === 'Shape' || val === 'shape' || val === 'Path' || val === 'path' || val === 'ADBE Vector Shape' || val === 2){\r\n                return interfaceFunction.path;\r\n            }\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'path': {\r\n                get: function(){\r\n                    if(prop.k){\r\n                        prop.getValue();\r\n                    }\r\n                    return prop;\r\n                }\r\n            },\r\n            'shape': {\r\n                get: function(){\r\n                    if(prop.k){\r\n                        prop.getValue();\r\n                    }\r\n                    return prop;\r\n                }\r\n            },\r\n            '_name': { value: shape.nm },\r\n            'ix': { value: shape.ix },\r\n            'propertyIndex': { value: shape.ix },\r\n            'mn': { value: shape.mn }\r\n        });\r\n        return interfaceFunction;\r\n    }\r\n\r\n    return function(shapes,view,propertyGroup) {\r\n        var interfaces;\r\n        function _interfaceFunction(value){\r\n            if(typeof value === 'number'){\r\n                return interfaces[value-1];\r\n            } else {\r\n                var i = 0, len = interfaces.length;\r\n                while(i<len){\r\n                    if(interfaces[i]._name === value){\r\n                        return interfaces[i];\r\n                    }\r\n                    i+=1;\r\n                }\r\n            }\r\n        }\r\n        _interfaceFunction.propertyGroup = propertyGroup;\r\n        interfaces = iterateElements(shapes, view, _interfaceFunction);\r\n        _interfaceFunction.numProperties = interfaces.length;\r\n        return _interfaceFunction;\r\n    };\r\n}());\r\n\r\nvar TextExpressionInterface = (function(){\r\n\treturn function(elem){\r\n        var _prevValue, _sourceText;\r\n        function _thisLayerFunction(){\r\n        }\r\n        Object.defineProperty(_thisLayerFunction, \"sourceText\", {\r\n            get: function(){\r\n                elem.textProperty.getValue()\r\n                var stringValue = elem.textProperty.currentData.t;\r\n                if(stringValue !== _prevValue) {\r\n                    elem.textProperty.currentData.t = _prevValue;\r\n                    _sourceText = new String(stringValue);\r\n                    //If stringValue is an empty string, eval returns undefined, so it has to be returned as a String primitive\r\n                    _sourceText.value = stringValue ? stringValue : new String(stringValue);\r\n                }\r\n                return _sourceText;\r\n            }\r\n        });\r\n        return _thisLayerFunction;\r\n    };\r\n}());\r\nvar LayerExpressionInterface = (function (){\r\n    function toWorld(arr, time){\r\n        var toWorldMat = new Matrix();\r\n        toWorldMat.reset();\r\n        var transformMat;\r\n        if(time) {\r\n            //Todo implement value at time on transform properties\r\n            //transformMat = this._elem.finalTransform.mProp.getValueAtTime(time);\r\n            transformMat = this._elem.finalTransform.mProp;\r\n        } else {\r\n            transformMat = this._elem.finalTransform.mProp;\r\n        }\r\n        transformMat.applyToMatrix(toWorldMat);\r\n        if(this._elem.hierarchy && this._elem.hierarchy.length){\r\n            var i, len = this._elem.hierarchy.length;\r\n            for(i=0;i<len;i+=1){\r\n                this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);\r\n            }\r\n            return toWorldMat.applyToPointArray(arr[0],arr[1],arr[2]||0);\r\n        }\r\n        return toWorldMat.applyToPointArray(arr[0],arr[1],arr[2]||0);\r\n    }\r\n    function fromWorld(arr, time){\r\n        var toWorldMat = new Matrix();\r\n        toWorldMat.reset();\r\n        var transformMat;\r\n        if(time) {\r\n            //Todo implement value at time on transform properties\r\n            //transformMat = this._elem.finalTransform.mProp.getValueAtTime(time);\r\n            transformMat = this._elem.finalTransform.mProp;\r\n        } else {\r\n            transformMat = this._elem.finalTransform.mProp;\r\n        }\r\n        transformMat.applyToMatrix(toWorldMat);\r\n        if(this._elem.hierarchy && this._elem.hierarchy.length){\r\n            var i, len = this._elem.hierarchy.length;\r\n            for(i=0;i<len;i+=1){\r\n                this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);\r\n            }\r\n            return toWorldMat.inversePoint(arr);\r\n        }\r\n        return toWorldMat.inversePoint(arr);\r\n    }\r\n    function fromComp(arr){\r\n        var toWorldMat = new Matrix();\r\n        toWorldMat.reset();\r\n        this._elem.finalTransform.mProp.applyToMatrix(toWorldMat);\r\n        if(this._elem.hierarchy && this._elem.hierarchy.length){\r\n            var i, len = this._elem.hierarchy.length;\r\n            for(i=0;i<len;i+=1){\r\n                this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);\r\n            }\r\n            return toWorldMat.inversePoint(arr);\r\n        }\r\n        return toWorldMat.inversePoint(arr);\r\n    }\r\n\r\n    function sampleImage() {\r\n        return [1,1,1,1];\r\n    }\r\n\r\n\r\n    return function(elem){\r\n\r\n        var transformInterface;\r\n\r\n        function _registerMaskInterface(maskManager){\r\n            _thisLayerFunction.mask = new MaskManagerInterface(maskManager, elem);\r\n        }\r\n        function _registerEffectsInterface(effects){\r\n            _thisLayerFunction.effect = effects;\r\n        }\r\n\r\n        function _thisLayerFunction(name){\r\n            switch(name){\r\n                case \"ADBE Root Vectors Group\":\r\n                case \"Contents\":\r\n                case 2:\r\n                    return _thisLayerFunction.shapeInterface;\r\n                case 1:\r\n                case 6:\r\n                case \"Transform\":\r\n                case \"transform\":\r\n                case \"ADBE Transform Group\":\r\n                    return transformInterface;\r\n                case 4:\r\n                case \"ADBE Effect Parade\":\r\n                case \"effects\":\r\n                case \"Effects\":\r\n                    return _thisLayerFunction.effect;\r\n            }\r\n        }\r\n        _thisLayerFunction.toWorld = toWorld;\r\n        _thisLayerFunction.fromWorld = fromWorld;\r\n        _thisLayerFunction.toComp = toWorld;\r\n        _thisLayerFunction.fromComp = fromComp;\r\n        _thisLayerFunction.sampleImage = sampleImage;\r\n        _thisLayerFunction.sourceRectAtTime = elem.sourceRectAtTime.bind(elem);\r\n        _thisLayerFunction._elem = elem;\r\n        transformInterface = TransformExpressionInterface(elem.finalTransform.mProp);\r\n        var anchorPointDescriptor = getDescriptor(transformInterface, 'anchorPoint');\r\n        Object.defineProperties(_thisLayerFunction,{\r\n            hasParent: {\r\n                get: function(){\r\n                    return elem.hierarchy.length;\r\n                }\r\n            },\r\n            parent: {\r\n                get: function(){\r\n                    return elem.hierarchy[0].layerInterface;\r\n                }\r\n            },\r\n            rotation: getDescriptor(transformInterface, 'rotation'),\r\n            scale: getDescriptor(transformInterface, 'scale'),\r\n            position: getDescriptor(transformInterface, 'position'),\r\n            opacity: getDescriptor(transformInterface, 'opacity'),\r\n            anchorPoint: anchorPointDescriptor,\r\n            anchor_point: anchorPointDescriptor,\r\n            transform: {\r\n                get: function () {\r\n                    return transformInterface;\r\n                }\r\n            },\r\n            active: {\r\n                get: function(){\r\n                    return elem.isInRange;\r\n                }\r\n            }\r\n        });\r\n\r\n        _thisLayerFunction.startTime = elem.data.st;\r\n        _thisLayerFunction.index = elem.data.ind;\r\n        _thisLayerFunction.source = elem.data.refId;\r\n        _thisLayerFunction.height = elem.data.ty === 0 ? elem.data.h : 100;\r\n        _thisLayerFunction.width = elem.data.ty === 0 ? elem.data.w : 100;\r\n        _thisLayerFunction.inPoint = elem.data.ip/elem.comp.globalData.frameRate;\r\n        _thisLayerFunction.outPoint = elem.data.op/elem.comp.globalData.frameRate;\r\n        _thisLayerFunction._name = elem.data.nm;\r\n\r\n        _thisLayerFunction.registerMaskInterface = _registerMaskInterface;\r\n        _thisLayerFunction.registerEffectsInterface = _registerEffectsInterface;\r\n        return _thisLayerFunction;\r\n    };\r\n}());\r\n\r\nvar CompExpressionInterface = (function () {\r\n    return function(comp) {\r\n        function _thisLayerFunction(name) {\r\n            var i = 0, len = comp.layers.length;\r\n            while ( i < len) {\r\n                if (comp.layers[i].nm === name || comp.layers[i].ind === name) {\r\n                    return comp.elements[i].layerInterface;\r\n                }\r\n                i += 1;\r\n            }\r\n            return null;\r\n            //return {active:false};\r\n        }\r\n        Object.defineProperty(_thisLayerFunction, \"_name\", { value: comp.data.nm });\r\n        _thisLayerFunction.layer = _thisLayerFunction;\r\n        _thisLayerFunction.pixelAspect = 1;\r\n        _thisLayerFunction.height = comp.data.h || comp.globalData.compSize.h;\r\n        _thisLayerFunction.width = comp.data.w || comp.globalData.compSize.w;\r\n        _thisLayerFunction.pixelAspect = 1;\r\n        _thisLayerFunction.frameDuration = 1 / comp.globalData.frameRate;\r\n        _thisLayerFunction.displayStartTime = 0;\r\n        _thisLayerFunction.numLayers = comp.layers.length;\r\n        return _thisLayerFunction;\r\n    };\r\n}());\r\nvar TransformExpressionInterface = (function (){\r\n    return function(transform){\r\n        function _thisFunction(name){\r\n            switch(name){\r\n                case \"scale\":\r\n                case \"Scale\":\r\n                case \"ADBE Scale\":\r\n                case 6:\r\n                    return _thisFunction.scale;\r\n                case \"rotation\":\r\n                case \"Rotation\":\r\n                case \"ADBE Rotation\":\r\n                case \"ADBE Rotate Z\":\r\n                case 10:\r\n                    return _thisFunction.rotation;\r\n                case \"ADBE Rotate X\":\r\n                    return _thisFunction.xRotation;\r\n                case \"ADBE Rotate Y\":\r\n                    return _thisFunction.yRotation;\r\n                case \"position\":\r\n                case \"Position\":\r\n                case \"ADBE Position\":\r\n                case 2:\r\n                    return _thisFunction.position;\r\n                case 'ADBE Position_0':\r\n                    return _thisFunction.xPosition;\r\n                case 'ADBE Position_1':\r\n                    return _thisFunction.yPosition;\r\n                case 'ADBE Position_2':\r\n                    return _thisFunction.zPosition;\r\n                case \"anchorPoint\":\r\n                case \"AnchorPoint\":\r\n                case \"Anchor Point\":\r\n                case \"ADBE AnchorPoint\":\r\n                case 1:\r\n                    return _thisFunction.anchorPoint;\r\n                case \"opacity\":\r\n                case \"Opacity\":\r\n                case 11:\r\n                    return _thisFunction.opacity;\r\n            }\r\n        }\r\n\r\n        Object.defineProperty(_thisFunction, \"rotation\", {\r\n            get: ExpressionPropertyInterface(transform.r || transform.rz)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"zRotation\", {\r\n            get: ExpressionPropertyInterface(transform.rz || transform.r)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"xRotation\", {\r\n            get: ExpressionPropertyInterface(transform.rx)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"yRotation\", {\r\n            get: ExpressionPropertyInterface(transform.ry)\r\n        });\r\n        Object.defineProperty(_thisFunction, \"scale\", {\r\n            get: ExpressionPropertyInterface(transform.s)\r\n        });\r\n\r\n        if(transform.p) {\r\n            var _transformFactory = ExpressionPropertyInterface(transform.p);\r\n        }\r\n        Object.defineProperty(_thisFunction, \"position\", {\r\n            get: function () {\r\n                if(transform.p) {\r\n                    return _transformFactory();\r\n                } else {\r\n                    return [transform.px.v, transform.py.v, transform.pz ? transform.pz.v : 0];\r\n                }\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"xPosition\", {\r\n            get: ExpressionPropertyInterface(transform.px)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"yPosition\", {\r\n            get: ExpressionPropertyInterface(transform.py)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"zPosition\", {\r\n            get: ExpressionPropertyInterface(transform.pz)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"anchorPoint\", {\r\n            get: ExpressionPropertyInterface(transform.a)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"opacity\", {\r\n            get: ExpressionPropertyInterface(transform.o)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"skew\", {\r\n            get: ExpressionPropertyInterface(transform.sk)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"skewAxis\", {\r\n            get: ExpressionPropertyInterface(transform.sa)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"orientation\", {\r\n            get: ExpressionPropertyInterface(transform.or)\r\n        });\r\n\r\n        return _thisFunction;\r\n    };\r\n}());\r\nvar ProjectInterface = (function (){\r\n\r\n    function registerComposition(comp){\r\n        this.compositions.push(comp);\r\n    }\r\n\r\n    return function(){\r\n        function _thisProjectFunction(name){\r\n            var i = 0, len = this.compositions.length;\r\n            while(i<len){\r\n                if(this.compositions[i].data && this.compositions[i].data.nm === name){\r\n                    if(this.compositions[i].prepareFrame && this.compositions[i].data.xt) {\r\n                        this.compositions[i].prepareFrame(this.currentFrame);\r\n                    }\r\n                    return this.compositions[i].compInterface;\r\n                }\r\n                i+=1;\r\n            }\r\n        }\r\n\r\n        _thisProjectFunction.compositions = [];\r\n        _thisProjectFunction.currentFrame = 0;\r\n\r\n        _thisProjectFunction.registerComposition = registerComposition;\r\n\r\n\r\n\r\n        return _thisProjectFunction;\r\n    };\r\n}());\r\nvar EffectsExpressionInterface = (function (){\r\n    var ob = {\r\n        createEffectsInterface: createEffectsInterface\r\n    };\r\n\r\n    function createEffectsInterface(elem, propertyGroup){\r\n        if(elem.effectsManager){\r\n\r\n            var effectElements = [];\r\n            var effectsData = elem.data.ef;\r\n            var i, len = elem.effectsManager.effectElements.length;\r\n            for(i=0;i<len;i+=1){\r\n                effectElements.push(createGroupInterface(effectsData[i],elem.effectsManager.effectElements[i],propertyGroup,elem));\r\n            }\r\n\r\n            return function(name){\r\n                var effects = elem.data.ef || [], i = 0, len = effects.length;\r\n                while(i<len) {\r\n                    if(name === effects[i].nm || name === effects[i].mn || name === effects[i].ix){\r\n                        return effectElements[i];\r\n                    }\r\n                    i += 1;\r\n                }\r\n            };\r\n        }\r\n    }\r\n\r\n    function createGroupInterface(data,elements, propertyGroup, elem){\r\n        var effectElements = [];\r\n        var i, len = data.ef.length;\r\n        for(i=0;i<len;i+=1){\r\n            if(data.ef[i].ty === 5){\r\n                effectElements.push(createGroupInterface(data.ef[i],elements.effectElements[i],elements.effectElements[i].propertyGroup, elem));\r\n            } else {\r\n                effectElements.push(createValueInterface(elements.effectElements[i],data.ef[i].ty, elem, _propertyGroup));\r\n            }\r\n        }\r\n\r\n        function _propertyGroup(val) {\r\n            if(val === 1){\r\n               return groupInterface;\r\n            } else{\r\n               return propertyGroup(val-1);\r\n            }\r\n        }\r\n\r\n        var groupInterface = function(name){\r\n            var effects = data.ef, i = 0, len = effects.length;\r\n            while(i<len) {\r\n                if(name === effects[i].nm || name === effects[i].mn || name === effects[i].ix){\r\n                    if(effects[i].ty === 5){\r\n                        return effectElements[i];\r\n                    } else {\r\n                        return effectElements[i]();\r\n                    }\r\n                }\r\n                i += 1;\r\n            }\r\n            return effectElements[0]();\r\n        };\r\n\r\n        groupInterface.propertyGroup = _propertyGroup;\r\n\r\n        if(data.mn === 'ADBE Color Control'){\r\n            Object.defineProperty(groupInterface, 'color', {\r\n                get: function(){\r\n                    return effectElements[0]();\r\n                }\r\n            });\r\n        }\r\n        Object.defineProperty(groupInterface, 'numProperties', {\r\n            get: function(){\r\n                return data.np;\r\n            }\r\n        });\r\n        groupInterface.active = groupInterface.enabled = data.en !== 0;\r\n        return groupInterface;\r\n    }\r\n\r\n    function createValueInterface(element, type, elem, propertyGroup){\r\n        var expressionProperty = ExpressionPropertyInterface(element.p);\r\n        function interfaceFunction(){\r\n            if(type === 10){\r\n                return elem.comp.compInterface(element.p.v);\r\n            }\r\n            return expressionProperty();\r\n        }\r\n\r\n        if(element.p.setGroupProperty) {\r\n            element.p.setGroupProperty(propertyGroup);\r\n        }\r\n\r\n        return interfaceFunction;\r\n    }\r\n\r\n    return ob;\r\n\r\n}());\r\nvar MaskManagerInterface = (function(){\r\n\r\n\tfunction MaskInterface(mask, data){\r\n\t\tthis._mask = mask;\r\n\t\tthis._data = data;\r\n\t}\r\n\tObject.defineProperty(MaskInterface.prototype, 'maskPath', {\r\n        get: function(){\r\n            if(this._mask.prop.k){\r\n                this._mask.prop.getValue();\r\n            }\r\n            return this._mask.prop;\r\n        }\r\n    });\r\n\tObject.defineProperty(MaskInterface.prototype, 'maskOpacity', {\r\n        get: function(){\r\n            if(this._mask.op.k){\r\n                this._mask.op.getValue();\r\n            }\r\n            return this._mask.op.v * 100;\r\n        }\r\n    });\r\n\r\n\tvar MaskManager = function(maskManager, elem){\r\n\t\tvar _maskManager = maskManager;\r\n\t\tvar _elem = elem;\r\n\t\tvar _masksInterfaces = createSizedArray(maskManager.viewData.length);\r\n\t\tvar i, len = maskManager.viewData.length;\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\t_masksInterfaces[i] = new MaskInterface(maskManager.viewData[i], maskManager.masksProperties[i]);\r\n\t\t}\r\n\r\n\t\tvar maskFunction = function(name){\r\n\t\t\ti = 0;\r\n\t\t    while(i<len){\r\n\t\t        if(maskManager.masksProperties[i].nm === name){\r\n\t\t            return _masksInterfaces[i];\r\n\t\t        }\r\n\t\t        i += 1;\r\n\t\t    }\r\n\t\t};\r\n\t\treturn maskFunction;\r\n\t};\r\n\treturn MaskManager;\r\n}());\r\n\r\nvar ExpressionPropertyInterface = (function() {\r\n\r\n    var defaultUnidimensionalValue = {pv:0, v:0, mult: 1}\r\n    var defaultMultidimensionalValue = {pv:[0,0,0], v:[0,0,0], mult: 1}\r\n\r\n    function completeProperty(expressionValue, property, type) {\r\n        Object.defineProperty(expressionValue, 'velocity', {\r\n            get: function(){\r\n                return property.getVelocityAtTime(property.comp.currentFrame);\r\n            }\r\n        });\r\n        expressionValue.numKeys = property.keyframes ? property.keyframes.length : 0;\r\n        expressionValue.key = function(pos) {\r\n            if (!expressionValue.numKeys) {\r\n                return 0;\r\n            } else {\r\n                var value = '';\r\n                if ('s' in property.keyframes[pos-1]) {\r\n                    value = property.keyframes[pos-1].s;\r\n                } else if ('e' in property.keyframes[pos-2]) {\r\n                    value = property.keyframes[pos-2].e;\r\n                } else {\r\n                    value = property.keyframes[pos-2].s;\r\n                }\r\n                var valueProp = type === 'unidimensional' ? new Number(value) : Object.assign({}, value);\r\n                valueProp.time = property.keyframes[pos-1].t / property.elem.comp.globalData.frameRate;\r\n                return valueProp;\r\n            }\r\n        };\r\n        expressionValue.valueAtTime = property.getValueAtTime;\r\n        expressionValue.speedAtTime = property.getSpeedAtTime;\r\n        expressionValue.velocityAtTime = property.getVelocityAtTime;\r\n        expressionValue.propertyGroup = property.propertyGroup;\r\n    }\r\n\r\n    function UnidimensionalPropertyInterface(property) {\r\n        if(!property || !('pv' in property)) {\r\n            property = defaultUnidimensionalValue;\r\n        }\r\n        var mult = 1 / property.mult;\r\n        var val = property.pv * mult;\r\n        var expressionValue = new Number(val);\r\n        expressionValue.value = val;\r\n        completeProperty(expressionValue, property, 'unidimensional');\r\n\r\n        return function() {\r\n            if (property.k) {\r\n                property.getValue();\r\n            }\r\n            val = property.v * mult;\r\n            if(expressionValue.value !== val) {\r\n                expressionValue = new Number(val);\r\n                expressionValue.value = val;\r\n                completeProperty(expressionValue, property, 'unidimensional');\r\n            }\r\n            return expressionValue;\r\n        }\r\n    }\r\n\r\n    function MultidimensionalPropertyInterface(property) {\r\n        if(!property || !('pv' in property)) {\r\n            property = defaultMultidimensionalValue;\r\n        }\r\n        var mult = 1 / property.mult;\r\n        var len = property.pv.length;\r\n        var expressionValue = createTypedArray('float32', len);\r\n        var arrValue = createTypedArray('float32', len);\r\n        expressionValue.value = arrValue;\r\n        completeProperty(expressionValue, property, 'multidimensional');\r\n\r\n        return function() {\r\n            if (property.k) {\r\n                property.getValue();\r\n            }\r\n            for (var i = 0; i < len; i += 1) {\r\n                expressionValue[i] = arrValue[i] = property.v[i] * mult;\r\n            }\r\n            return expressionValue;\r\n        }\r\n    }\r\n\r\n    //TODO: try to avoid using this getter\r\n    function defaultGetter() {\r\n        return defaultUnidimensionalValue;\r\n    }\r\n    \r\n    return function(property) {\r\n        if(!property) {\r\n            return defaultGetter;\r\n        } else if (property.propType === 'unidimensional') {\r\n            return UnidimensionalPropertyInterface(property);\r\n        } else {\r\n            return MultidimensionalPropertyInterface(property);\r\n        }\r\n    }\r\n}());\r\n\r\n(function(){\r\n\r\n    var TextExpressionSelectorProp = (function(){\r\n\r\n        function getValueProxy(index,total){\r\n            this.textIndex = index+1;\r\n            this.textTotal = total;\r\n            this.v = this.getValue() * this.mult;\r\n            return this.v;\r\n        }\r\n\r\n        return function TextExpressionSelectorProp(elem,data){\r\n            this.pv = 1;\r\n            this.comp = elem.comp;\r\n            this.elem = elem;\r\n            this.mult = 0.01;\r\n            this.propType = 'textSelector';\r\n            this.textTotal = data.totalChars;\r\n            this.selectorValue = 100;\r\n            this.lastValue = [1,1,1];\r\n            this.k = true;\r\n            this.x = true;\r\n            this.getValue = ExpressionManager.initiateExpression.bind(this)(elem,data,this);\r\n            this.getMult = getValueProxy;\r\n            this.getVelocityAtTime = expressionHelpers.getVelocityAtTime;\r\n            if(this.kf){\r\n                this.getValueAtTime = expressionHelpers.getValueAtTime.bind(this);\r\n            } else {\r\n                this.getValueAtTime = expressionHelpers.getStaticValueAtTime.bind(this);\r\n            }\r\n            this.setGroupProperty = expressionHelpers.setGroupProperty;\r\n        };\r\n    }());\r\n\r\n\tvar propertyGetTextProp = TextSelectorProp.getTextSelectorProp;\r\n\tTextSelectorProp.getTextSelectorProp = function(elem, data,arr){\r\n\t    if(data.t === 1){\r\n\t        return new TextExpressionSelectorProp(elem, data,arr);\r\n\t    } else {\r\n\t        return propertyGetTextProp(elem,data,arr);\r\n\t    }\r\n\t};\r\n}());\r\nfunction SliderEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n}\r\nfunction AngleEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n}\r\nfunction ColorEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,1,0,container);\r\n}\r\nfunction PointEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,1,0,container);\r\n}\r\nfunction LayerIndexEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n}\r\nfunction MaskIndexEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n}\r\nfunction CheckboxEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n}\r\nfunction NoValueEffect(){\r\n    this.p = {};\r\n}\r\nfunction EffectsManager(){}\r\nfunction EffectsManager(data,element){\r\n    var effects = data.ef || [];\r\n    this.effectElements = [];\r\n    var i,len = effects.length;\r\n    var effectItem;\r\n    for(i=0;i<len;i++) {\r\n        effectItem = new GroupEffect(effects[i],element);\r\n        this.effectElements.push(effectItem);\r\n    }\r\n}\r\n\r\nfunction GroupEffect(data,element){\r\n    this.init(data,element);\r\n}\r\n\r\nextendPrototype([DynamicPropertyContainer], GroupEffect);\r\n\r\nGroupEffect.prototype.getValue = GroupEffect.prototype.iterateDynamicProperties;\r\n\r\nGroupEffect.prototype.init = function(data,element){\r\n    this.data = data;\r\n    this.effectElements = [];\r\n    this.initDynamicPropertyContainer(element);\r\n    var i, len = this.data.ef.length;\r\n    var eff, effects = this.data.ef;\r\n    for(i=0;i<len;i+=1){\r\n        eff = null;\r\n        switch(effects[i].ty){\r\n            case 0:\r\n                eff = new SliderEffect(effects[i],element,this);\r\n                break;\r\n            case 1:\r\n                eff = new AngleEffect(effects[i],element,this);\r\n                break;\r\n            case 2:\r\n                eff = new ColorEffect(effects[i],element,this);\r\n                break;\r\n            case 3:\r\n                eff = new PointEffect(effects[i],element,this);\r\n                break;\r\n            case 4:\r\n            case 7:\r\n                eff = new CheckboxEffect(effects[i],element,this);\r\n                break;\r\n            case 10:\r\n                eff = new LayerIndexEffect(effects[i],element,this);\r\n                break;\r\n            case 11:\r\n                eff = new MaskIndexEffect(effects[i],element,this);\r\n                break;\r\n            case 5:\r\n                eff = new EffectsManager(effects[i],element,this);\r\n                break;\r\n            //case 6:\r\n            default:\r\n                eff = new NoValueEffect(effects[i],element,this);\r\n                break;\r\n        }\r\n        if(eff) {\r\n            this.effectElements.push(eff);\r\n        }\r\n    }\r\n};\r\n\r\n    var lottiejs = {};\r\n\r\n    var _isFrozen = false;\r\n\r\n    function setLocationHref (href) {\r\n        locationHref = href;\r\n    }\r\n\r\n    function searchAnimations() {\r\n        if (standalone === true) {\r\n            animationManager.searchAnimations(animationData, standalone, renderer);\r\n        } else {\r\n            animationManager.searchAnimations();\r\n        }\r\n    }\r\n\r\n    function setSubframeRendering(flag) {\r\n        subframeEnabled = flag;\r\n    }\r\n\r\n    function loadAnimation(params) {\r\n        if (standalone === true) {\r\n            params.animationData = JSON.parse(animationData);\r\n        }\r\n        return animationManager.loadAnimation(params);\r\n    }\r\n\r\n    function setQuality(value) {\r\n        if (typeof value === 'string') {\r\n            switch (value) {\r\n                case 'high':\r\n                    defaultCurveSegments = 200;\r\n                    break;\r\n                case 'medium':\r\n                    defaultCurveSegments = 50;\r\n                    break;\r\n                case 'low':\r\n                    defaultCurveSegments = 10;\r\n                    break;\r\n            }\r\n        } else if (!isNaN(value) && value > 1) {\r\n            defaultCurveSegments = value;\r\n        }\r\n        if (defaultCurveSegments >= 50) {\r\n            roundValues(false);\r\n        } else {\r\n            roundValues(true);\r\n        }\r\n    }\r\n\r\n    function inBrowser() {\r\n        return typeof navigator !== 'undefined';\r\n    }\r\n\r\n    function installPlugin(type, plugin) {\r\n        if (type === 'expressions') {\r\n            expressionsPlugin = plugin;\r\n        }\r\n    }\r\n\r\n    function getFactory(name) {\r\n        switch (name) {\r\n            case \"propertyFactory\":\r\n                return PropertyFactory;\r\n            case \"shapePropertyFactory\":\r\n                return ShapePropertyFactory;\r\n            case \"matrix\":\r\n                return Matrix;\r\n        }\r\n    }\r\n\r\n    lottiejs.play = animationManager.play;\r\n    lottiejs.pause = animationManager.pause;\r\n    lottiejs.setLocationHref = setLocationHref;\r\n    lottiejs.togglePause = animationManager.togglePause;\r\n    lottiejs.setSpeed = animationManager.setSpeed;\r\n    lottiejs.setDirection = animationManager.setDirection;\r\n    lottiejs.stop = animationManager.stop;\r\n    lottiejs.searchAnimations = searchAnimations;\r\n    lottiejs.registerAnimation = animationManager.registerAnimation;\r\n    lottiejs.loadAnimation = loadAnimation;\r\n    lottiejs.setSubframeRendering = setSubframeRendering;\r\n    lottiejs.resize = animationManager.resize;\r\n    //lottiejs.start = start;\r\n    lottiejs.goToAndStop = animationManager.goToAndStop;\r\n    lottiejs.destroy = animationManager.destroy;\r\n    lottiejs.setQuality = setQuality;\r\n    lottiejs.inBrowser = inBrowser;\r\n    lottiejs.installPlugin = installPlugin;\r\n    lottiejs.freeze = animationManager.freeze;\r\n    lottiejs.unfreeze = animationManager.unfreeze;\r\n    lottiejs.getRegisteredAnimations = animationManager.getRegisteredAnimations;\r\n    lottiejs.__getFactory = getFactory;\r\n    lottiejs.version = '5.5.10';\r\n\r\n    function checkReady() {\r\n        if (document.readyState === \"complete\") {\r\n            clearInterval(readyStateCheckInterval);\r\n            searchAnimations();\r\n        }\r\n    }\r\n\r\n    function getQueryVariable(variable) {\r\n        var vars = queryString.split('&');\r\n        for (var i = 0; i < vars.length; i++) {\r\n            var pair = vars[i].split('=');\r\n            if (decodeURIComponent(pair[0]) == variable) {\r\n                return decodeURIComponent(pair[1]);\r\n            }\r\n        }\r\n    }\r\n    var standalone = '__[STANDALONE]__';\r\n    var animationData = '__[ANIMATIONDATA]__';\r\n    var renderer = '';\r\n    if (standalone) {\r\n        var scripts = document.getElementsByTagName('script');\r\n        var index = scripts.length - 1;\r\n        var myScript = scripts[index] || {\r\n            src: ''\r\n        };\r\n        var queryString = myScript.src.replace(/^[^\\?]+\\??/, '');\r\n        renderer = getQueryVariable('renderer');\r\n    }\r\n    var readyStateCheckInterval = setInterval(checkReady, 100);\r\n    return lottiejs;\r\n}));\r\n","import {\n  html,\n  component,\n  sideEffect,\n  getElement,\n  $attr,\n  $prop,\n} from '../../src';\nimport lottie from 'lottie-web';\n\ncomponent('nth-lottie', () => {\n  const $animationData = $prop('animationData', '');\n  const element = getElement();\n  sideEffect(() => {\n    if ($animationData.value) {\n      lottie.loadAnimation({\n        container: element.shadowRoot.querySelector('.lottie-wrapper'),\n        renderer: 'svg',\n        loop: true,\n        autoplay: true,\n        animationData: $animationData.value,\n        rendererSettings: {\n          preserveAspectRatio: 'xMidYMid slice',\n        },\n      });\n    }\n  });\n  return {\n    render: () => {\n      return html`\n        <div class=\"lottie-wrapper\"></div>\n      `;\n    },\n  };\n});\n","import { component, html, $prop, sub } from '../../src';\nimport { getCss } from '../utils';\n\ncomponent('nth-logo', () => {\n  const css = getCss();\n  const $showAlpha = $prop('showAlpha', false);\n  const $showFullName = $prop('showFullName', false);\n  return {\n    render: () => html`\n      <div\n        ${css`\n          color: #a2a9a9;\n          font-size: inherit;\n          background: #1a505b;\n          padding: 5px;\n          box-shadow: inset 0 0 3px #0000006b;\n          border-radius: 4px;\n          position: relative;\n          white-space: nowrap;\n          line-height: inherit;\n          display: inline-block;\n          > span {\n            color: #ea5353;\n          }\n        `}\n      >\n        ${sub(\n          $showAlpha.value\n            ? html`\n                <div\n                  ${css`\n                    position: absolute;\n                    right: -2.5em;\n                    top: -0.7em;\n                    font-size: 0.5em;\n                    letter-spacing: 0.05em;\n                    color: white;\n                    border: 1px solid #e45b5b;\n                    background: #ea5353;\n                    padding: 2px;\n                    border-radius: 2px;\n                  `}\n                >\n                  alpha\n                </div>\n              `\n            : html``\n        )}\n        ${sub(\n          $showFullName.value\n            ? html`\n                e<span>nth</span>-js\n              `\n            : html`\n                <span>nth</span>\n              `\n        )}\n      </div>\n    `,\n  };\n});\n","import 'core-js/stable';\nimport 'regenerator-runtime/runtime';\nimport 'proxy-polyfill/src/proxy';\nimport { glob } from 'goober';\n\nglob`\n  @import url('https://fonts.googleapis.com/css?family=Muli:500|Rubik&display=swap');\n  html,\n  body {\n    margin: 0;\n    padding: 0;\n  }\n  body {\n    height: 3000px;\n    text-shadow: 0px 1px 2px rgba(0,0,0,0.3);\n    overflow-x: hidden;\n  }\n`;\n\nimport './components/nav_bar.ts';\nimport './components/container.ts';\nimport './components/intro.ts';\nimport './components/hello_world';\nimport './components/router';\nimport './components/lottie';\nimport './components/logo';\n\ndocument.addEventListener('DOMContentLoaded', function() {\n  requestAnimationFrame(() => {\n    document.body.style.opacity = '';\n  });\n});\n"]}