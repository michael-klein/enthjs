{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/st/st.js"],"names":["conf","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","RegExp","end","language","defaultToken","tokenPostfix","ignoreCase","token","keywords","constant","defineKeywords","typeKeywords","operators","builtinVariables","builtinFunctions","symbols","escapes","tokenizer","root","next","cases","include","bracket","params","comment","comment2","whitespace","string_dq","string_sq"],"mappings":"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","file":"st.2d5f1a48.js","sourceRoot":"..","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    comments: {\r\n        lineComment: '//',\r\n        blockComment: ['(*', '*)'],\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')'],\r\n        ['var', 'end_var'],\r\n        ['var_input', 'end_var'],\r\n        ['var_output', 'end_var'],\r\n        ['var_in_out', 'end_var'],\r\n        ['var_temp', 'end_var'],\r\n        ['var_global', 'end_var'],\r\n        ['var_access', 'end_var'],\r\n        ['var_external', 'end_var'],\r\n        ['type', 'end_type'],\r\n        ['struct', 'end_struct'],\r\n        ['program', 'end_program'],\r\n        ['function', 'end_function'],\r\n        ['function_block', 'end_function_block'],\r\n        ['action', 'end_action'],\r\n        ['step', 'end_step'],\r\n        ['initial_step', 'end_step'],\r\n        ['transaction', 'end_transaction'],\r\n        ['configuration', 'end_configuration'],\r\n        ['tcp', 'end_tcp'],\r\n        ['recource', 'end_recource'],\r\n        ['channel', 'end_channel'],\r\n        ['library', 'end_library'],\r\n        ['folder', 'end_folder'],\r\n        ['binaries', 'end_binaries'],\r\n        ['includes', 'end_includes'],\r\n        ['sources', 'end_sources']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '[', close: ']' },\r\n        { open: '{', close: '}' },\r\n        { open: '(', close: ')' },\r\n        { open: '/*', close: '*/' },\r\n        { open: '\\'', close: '\\'', notIn: ['string_sq'] },\r\n        { open: '\"', close: '\"', notIn: ['string_dq'] },\r\n        { open: 'var_input', close: 'end_var' },\r\n        { open: 'var_output', close: 'end_var' },\r\n        { open: 'var_in_out', close: 'end_var' },\r\n        { open: 'var_temp', close: 'end_var' },\r\n        { open: 'var_global', close: 'end_var' },\r\n        { open: 'var_access', close: 'end_var' },\r\n        { open: 'var_external', close: 'end_var' },\r\n        { open: 'type', close: 'end_type' },\r\n        { open: 'struct', close: 'end_struct' },\r\n        { open: 'program', close: 'end_program' },\r\n        { open: 'function', close: 'end_function' },\r\n        { open: 'function_block', close: 'end_function_block' },\r\n        { open: 'action', close: 'end_action' },\r\n        { open: 'step', close: 'end_step' },\r\n        { open: 'initial_step', close: 'end_step' },\r\n        { open: 'transaction', close: 'end_transaction' },\r\n        { open: 'configuration', close: 'end_configuration' },\r\n        { open: 'tcp', close: 'end_tcp' },\r\n        { open: 'recource', close: 'end_recource' },\r\n        { open: 'channel', close: 'end_channel' },\r\n        { open: 'library', close: 'end_library' },\r\n        { open: 'folder', close: 'end_folder' },\r\n        { open: 'binaries', close: 'end_binaries' },\r\n        { open: 'includes', close: 'end_includes' },\r\n        { open: 'sources', close: 'end_sources' }\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' },\r\n        { open: 'var', close: 'end_var' },\r\n        { open: 'var_input', close: 'end_var' },\r\n        { open: 'var_output', close: 'end_var' },\r\n        { open: 'var_in_out', close: 'end_var' },\r\n        { open: 'var_temp', close: 'end_var' },\r\n        { open: 'var_global', close: 'end_var' },\r\n        { open: 'var_access', close: 'end_var' },\r\n        { open: 'var_external', close: 'end_var' },\r\n        { open: 'type', close: 'end_type' },\r\n        { open: 'struct', close: 'end_struct' },\r\n        { open: 'program', close: 'end_program' },\r\n        { open: 'function', close: 'end_function' },\r\n        { open: 'function_block', close: 'end_function_block' },\r\n        { open: 'action', close: 'end_action' },\r\n        { open: 'step', close: 'end_step' },\r\n        { open: 'initial_step', close: 'end_step' },\r\n        { open: 'transaction', close: 'end_transaction' },\r\n        { open: 'configuration', close: 'end_configuration' },\r\n        { open: 'tcp', close: 'end_tcp' },\r\n        { open: 'recource', close: 'end_recource' },\r\n        { open: 'channel', close: 'end_channel' },\r\n        { open: 'library', close: 'end_library' },\r\n        { open: 'folder', close: 'end_folder' },\r\n        { open: 'binaries', close: 'end_binaries' },\r\n        { open: 'includes', close: 'end_includes' },\r\n        { open: 'sources', close: 'end_sources' }\r\n    ],\r\n    folding: {\r\n        markers: {\r\n            start: new RegExp(\"^\\\\s*#pragma\\\\s+region\\\\b\"),\r\n            end: new RegExp(\"^\\\\s*#pragma\\\\s+endregion\\\\b\")\r\n        }\r\n    }\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.st',\r\n    ignoreCase: true,\r\n    brackets: [\r\n        { token: 'delimiter.curly', open: '{', close: '}' },\r\n        { token: 'delimiter.parenthesis', open: '(', close: ')' },\r\n        { token: 'delimiter.square', open: '[', close: ']' }\r\n    ],\r\n    keywords: ['if', 'end_if', 'elsif', 'else', 'case', 'of', 'to', '__try', '__catch', '__finally',\r\n        'do', 'with', 'by', 'while', 'repeat', 'end_while', 'end_repeat', 'end_case',\r\n        'for', 'end_for', 'task', 'retain', 'non_retain', 'constant', 'with', 'at',\r\n        'exit', 'return', 'interval', 'priority', 'address', 'port', 'on_channel',\r\n        'then', 'iec', 'file', 'uses', 'version', 'packagetype', 'displayname',\r\n        'copyright', 'summary', 'vendor', 'common_source', 'from', 'extends'],\r\n    constant: ['false', 'true', 'null'],\r\n    defineKeywords: [\r\n        'var', 'var_input', 'var_output', 'var_in_out', 'var_temp', 'var_global',\r\n        'var_access', 'var_external', 'end_var',\r\n        'type', 'end_type', 'struct', 'end_struct', 'program', 'end_program',\r\n        'function', 'end_function', 'function_block', 'end_function_block',\r\n        'interface', 'end_interface', 'method', 'end_method',\r\n        'property', 'end_property', 'namespace', 'end_namespace',\r\n        'configuration', 'end_configuration', 'tcp', 'end_tcp', 'resource',\r\n        'end_resource', 'channel', 'end_channel', 'library', 'end_library',\r\n        'folder', 'end_folder', 'binaries', 'end_binaries', 'includes',\r\n        'end_includes', 'sources', 'end_sources',\r\n        'action', 'end_action', 'step', 'initial_step', 'end_step', 'transaction', 'end_transaction'\r\n    ],\r\n    typeKeywords: ['int', 'sint', 'dint', 'lint', 'usint', 'uint', 'udint', 'ulint',\r\n        'real', 'lreal', 'time', 'date', 'time_of_day', 'date_and_time', 'string',\r\n        'bool', 'byte', 'word', 'dword', 'array', 'pointer', 'lword'],\r\n    operators: ['=', '>', '<', ':', ':=', '<=', '>=', '<>', '&', '+', '-', '*', '**',\r\n        'MOD', '^', 'or', 'and', 'not', 'xor', 'abs', 'acos', 'asin', 'atan', 'cos',\r\n        'exp', 'expt', 'ln', 'log', 'sin', 'sqrt', 'tan', 'sel', 'max', 'min', 'limit',\r\n        'mux', 'shl', 'shr', 'rol', 'ror', 'indexof', 'sizeof', 'adr', 'adrinst',\r\n        'bitadr', 'is_valid', 'ref', 'ref_to'],\r\n    builtinVariables: [],\r\n    builtinFunctions: ['sr', 'rs', 'tp', 'ton', 'tof', 'eq', 'ge', 'le', 'lt',\r\n        'ne', 'round', 'trunc', 'ctd', 'сtu', 'ctud', 'r_trig', 'f_trig',\r\n        'move', 'concat', 'delete', 'find', 'insert', 'left', 'len', 'replace',\r\n        'right', 'rtc'],\r\n    // we include these common regular expressions\r\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n    // C# style strings\r\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            [/(\\.\\.)/, 'delimiter'],\r\n            [/\\b(16#[0-9A-Fa-f\\_]*)+\\b/, 'number.hex'],\r\n            [/\\b(2#[01\\_]+)+\\b/, 'number.binary'],\r\n            [/\\b(8#[0-9\\_]*)+\\b/, 'number.octal'],\r\n            [/\\b\\d*\\.\\d+([eE][\\-+]?\\d+)?\\b/, 'number.float'],\r\n            [/\\b(L?REAL)#[0-9\\_\\.e]+\\b/, 'number.float'],\r\n            [/\\b(BYTE|(?:D|L)?WORD|U?(?:S|D|L)?INT)#[0-9\\_]+\\b/, 'number'],\r\n            [/\\d+/, 'number'],\r\n            [/\\b(T|DT|TOD)#[0-9:-_shmyd]+\\b/, 'tag'],\r\n            [/\\%(I|Q|M)(X|B|W|D|L)[0-9\\.]+/, 'tag'],\r\n            [/\\%(I|Q|M)[0-9\\.]*/, 'tag'],\r\n            [/\\b[A-Za-z]{1,6}#[0-9]+\\b/, 'tag'],\r\n            [/\\b(TO_|CTU_|CTD_|CTUD_|MUX_|SEL_)[A_Za-z]+\\b/, 'predefined'],\r\n            [/\\b[A_Za-z]+(_TO_)[A_Za-z]+\\b/, 'predefined'],\r\n            [/[;]/, 'delimiter'],\r\n            [/[.]/, { token: 'delimiter', next: '@params' }],\r\n            // identifiers and keywords\r\n            [/[a-zA-Z_]\\w*/, {\r\n                    cases: {\r\n                        '@operators': 'operators',\r\n                        '@keywords': 'keyword',\r\n                        '@typeKeywords': 'type',\r\n                        '@defineKeywords': 'variable',\r\n                        '@constant': 'constant',\r\n                        '@builtinVariables': 'predefined',\r\n                        '@builtinFunctions': 'predefined',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n            { include: '@whitespace' },\r\n            [/[{}()\\[\\]]/, '@brackets'],\r\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\r\n            [/\"/, { token: 'string.quote', bracket: '@open', next: '@string_dq' }],\r\n            [/'/, { token: 'string.quote', bracket: '@open', next: '@string_sq' }],\r\n            [/'[^\\\\']'/, 'string'],\r\n            [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\r\n            [/'/, 'string.invalid']\r\n        ],\r\n        params: [\r\n            [/\\b[A-Za-z0-9_]+\\b(?=\\()/, { token: 'identifier', next: '@pop' }],\r\n            [/\\b[A-Za-z0-9_]+\\b/, 'variable.name', '@pop']\r\n        ],\r\n        comment: [\r\n            [/[^\\/*]+/, 'comment'],\r\n            [/\\/\\*/, 'comment', '@push'],\r\n            [\"\\\\*/\", 'comment', '@pop'],\r\n            [/[\\/*]/, 'comment']\r\n        ],\r\n        comment2: [\r\n            [/[^\\(*]+/, 'comment'],\r\n            [/\\(\\*/, 'comment', '@push'],\r\n            [\"\\\\*\\\\)\", 'comment', '@pop'],\r\n            [/[\\(*]/, 'comment']\r\n        ],\r\n        whitespace: [\r\n            [/[ \\t\\r\\n]+/, 'white'],\r\n            [/\\/\\/.*$/, 'comment'],\r\n            [/\\/\\*/, 'comment', '@comment'],\r\n            [/\\(\\*/, 'comment', '@comment2'],\r\n        ],\r\n        string_dq: [\r\n            [/[^\\\\\"]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/\"/, { token: 'string.quote', bracket: '@close', next: '@pop' }]\r\n        ],\r\n        string_sq: [\r\n            [/[^\\\\']+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/'/, { token: 'string.quote', bracket: '@close', next: '@pop' }]\r\n        ]\r\n    }\r\n};\r\n"]}