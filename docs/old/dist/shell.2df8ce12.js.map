{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/shell/shell.js"],"names":["conf","comments","lineComment","brackets","autoClosingPairs","open","close","surroundingPairs","language","defaultToken","ignoreCase","tokenPostfix","token","keywords","builtins","symbols","tokenizer","root","include","cases","whitespace","numbers","strings","stringBody","dblStringBody","heredoc","parameters","parameterBodyQuote","parameterBodyDoubleQuote","parameterBodyParen","parameterBodyCurlyBrace"],"mappings":"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","file":"shell.2df8ce12.js","sourceRoot":"..","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n*  Copyright (c) Microsoft Corporation. All rights reserved.\r\n*  Licensed under the MIT License. See License.txt in the project root for license information.\r\n*--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    comments: {\r\n        lineComment: '#',\r\n    },\r\n    brackets: [['{', '}'], ['[', ']'], ['(', ')']],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: \"'\", close: \"'\" },\r\n        { open: '`', close: '`' },\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: \"'\", close: \"'\" },\r\n        { open: '`', close: '`' },\r\n    ],\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    ignoreCase: true,\r\n    tokenPostfix: '.shell',\r\n    brackets: [\r\n        { token: 'delimiter.bracket', open: '{', close: '}' },\r\n        { token: 'delimiter.parenthesis', open: '(', close: ')' },\r\n        { token: 'delimiter.square', open: '[', close: ']' },\r\n    ],\r\n    keywords: [\r\n        'if',\r\n        'then',\r\n        'do',\r\n        'else',\r\n        'elif',\r\n        'while',\r\n        'until',\r\n        'for',\r\n        'in',\r\n        'esac',\r\n        'fi',\r\n        'fin',\r\n        'fil',\r\n        'done',\r\n        'exit',\r\n        'set',\r\n        'unset',\r\n        'export',\r\n        'function',\r\n    ],\r\n    builtins: [\r\n        'ab',\r\n        'awk',\r\n        'bash',\r\n        'beep',\r\n        'cat',\r\n        'cc',\r\n        'cd',\r\n        'chown',\r\n        'chmod',\r\n        'chroot',\r\n        'clear',\r\n        'cp',\r\n        'curl',\r\n        'cut',\r\n        'diff',\r\n        'echo',\r\n        'find',\r\n        'gawk',\r\n        'gcc',\r\n        'get',\r\n        'git',\r\n        'grep',\r\n        'hg',\r\n        'kill',\r\n        'killall',\r\n        'ln',\r\n        'ls',\r\n        'make',\r\n        'mkdir',\r\n        'openssl',\r\n        'mv',\r\n        'nc',\r\n        'node',\r\n        'npm',\r\n        'ping',\r\n        'ps',\r\n        'restart',\r\n        'rm',\r\n        'rmdir',\r\n        'sed',\r\n        'service',\r\n        'sh',\r\n        'shopt',\r\n        'shred',\r\n        'source',\r\n        'sort',\r\n        'sleep',\r\n        'ssh',\r\n        'start',\r\n        'stop',\r\n        'su',\r\n        'sudo',\r\n        'svn',\r\n        'tee',\r\n        'telnet',\r\n        'top',\r\n        'touch',\r\n        'vi',\r\n        'vim',\r\n        'wall',\r\n        'wc',\r\n        'wget',\r\n        'who',\r\n        'write',\r\n        'yes',\r\n        'zsh',\r\n    ],\r\n    // we include these common regular expressions\r\n    symbols: /[=><!~?&|+\\-*\\/\\^;\\.,]+/,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            { include: '@whitespace' },\r\n            [\r\n                /[a-zA-Z]\\w*/,\r\n                {\r\n                    cases: {\r\n                        '@keywords': 'keyword',\r\n                        '@builtins': 'type.identifier',\r\n                        '@default': ''\r\n                    },\r\n                },\r\n            ],\r\n            { include: '@strings' },\r\n            { include: '@parameters' },\r\n            { include: '@heredoc' },\r\n            [/[{}\\[\\]()]/, '@brackets'],\r\n            [/-+\\w+/, 'attribute.name'],\r\n            [/@symbols/, 'delimiter'],\r\n            { include: '@numbers' },\r\n            [/[,;]/, 'delimiter'],\r\n        ],\r\n        whitespace: [\r\n            [/\\s+/, 'white'],\r\n            [/(^#!.*$)/, 'metatag'],\r\n            [/(^#.*$)/, 'comment'],\r\n        ],\r\n        numbers: [\r\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\r\n            [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, 'number.hex'],\r\n            [/\\d+/, 'number'],\r\n        ],\r\n        // Recognize strings, including those broken across lines\r\n        strings: [\r\n            [/'/, 'string', '@stringBody'],\r\n            [/\"/, 'string', '@dblStringBody']\r\n        ],\r\n        stringBody: [\r\n            [/'/, 'string', '@popall'],\r\n            [/./, 'string'],\r\n        ],\r\n        dblStringBody: [\r\n            [/\"/, 'string', '@popall'],\r\n            [/./, 'string'],\r\n        ],\r\n        heredoc: [\r\n            [/(<<[-<]?)(\\s*)(['\"`]?)([\\w\\-]+)(['\"`]?)/, ['constants', 'white', 'string.heredoc.delimiter', 'string.heredoc', 'string.heredoc.delimiter']]\r\n        ],\r\n        parameters: [\r\n            [/\\$\\d+/, 'variable.predefined'],\r\n            [/\\$\\w+/, 'variable'],\r\n            [/\\$[*@#?\\-$!0_]/, 'variable'],\r\n            [/\\$'/, 'variable', '@parameterBodyQuote'],\r\n            [/\\$\"/, 'variable', '@parameterBodyDoubleQuote'],\r\n            [/\\$\\(/, 'variable', '@parameterBodyParen'],\r\n            [/\\$\\{/, 'variable', '@parameterBodyCurlyBrace'],\r\n        ],\r\n        parameterBodyQuote: [\r\n            [/[^#:%*@\\-!_']+/, 'variable'],\r\n            [/[#:%*@\\-!_]/, 'delimiter'],\r\n            [/[']/, 'variable', '@pop'],\r\n        ],\r\n        parameterBodyDoubleQuote: [\r\n            [/[^#:%*@\\-!_\"]+/, 'variable'],\r\n            [/[#:%*@\\-!_]/, 'delimiter'],\r\n            [/[\"]/, 'variable', '@pop'],\r\n        ],\r\n        parameterBodyParen: [\r\n            [/[^#:%*@\\-!_)]+/, 'variable'],\r\n            [/[#:%*@\\-!_]/, 'delimiter'],\r\n            [/[)]/, 'variable', '@pop'],\r\n        ],\r\n        parameterBodyCurlyBrace: [\r\n            [/[^#:%*@\\-!_}]+/, 'variable'],\r\n            [/[#:%*@\\-!_]/, 'delimiter'],\r\n            [/[}]/, 'variable', '@pop'],\r\n        ],\r\n    }\r\n};\r\n"]}