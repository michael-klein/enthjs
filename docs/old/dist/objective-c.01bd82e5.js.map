{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/objective-c/objective-c.js"],"names":["conf","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","language","defaultToken","tokenPostfix","keywords","decpart","decimal","tokenizer","root","include","cases","whitespace","comment","numbers","strings","stringBody","dblStringBody"],"mappings":"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","file":"objective-c.01bd82e5.js","sourceRoot":"..","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    comments: {\r\n        lineComment: '//',\r\n        blockComment: ['/*', '*/'],\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' },\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' },\r\n    ]\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.objective-c',\r\n    keywords: [\r\n        '#import',\r\n        '#include',\r\n        '#define',\r\n        '#else',\r\n        '#endif',\r\n        '#if',\r\n        '#ifdef',\r\n        '#ifndef',\r\n        '#ident',\r\n        '#undef',\r\n        '@class',\r\n        '@defs',\r\n        '@dynamic',\r\n        '@encode',\r\n        '@end',\r\n        '@implementation',\r\n        '@interface',\r\n        '@package',\r\n        '@private',\r\n        '@protected',\r\n        '@property',\r\n        '@protocol',\r\n        '@public',\r\n        '@selector',\r\n        '@synthesize',\r\n        '__declspec',\r\n        'assign',\r\n        'auto',\r\n        'BOOL',\r\n        'break',\r\n        'bycopy',\r\n        'byref',\r\n        'case',\r\n        'char',\r\n        'Class',\r\n        'const',\r\n        'copy',\r\n        'continue',\r\n        'default',\r\n        'do',\r\n        'double',\r\n        'else',\r\n        'enum',\r\n        'extern',\r\n        'FALSE',\r\n        'false',\r\n        'float',\r\n        'for',\r\n        'goto',\r\n        'if',\r\n        'in',\r\n        'int',\r\n        'id',\r\n        'inout',\r\n        'IMP',\r\n        'long',\r\n        'nil',\r\n        'nonatomic',\r\n        'NULL',\r\n        'oneway',\r\n        'out',\r\n        'private',\r\n        'public',\r\n        'protected',\r\n        'readwrite',\r\n        'readonly',\r\n        'register',\r\n        'return',\r\n        'SEL',\r\n        'self',\r\n        'short',\r\n        'signed',\r\n        'sizeof',\r\n        'static',\r\n        'struct',\r\n        'super',\r\n        'switch',\r\n        'typedef',\r\n        'TRUE',\r\n        'true',\r\n        'union',\r\n        'unsigned',\r\n        'volatile',\r\n        'void',\r\n        'while',\r\n    ],\r\n    decpart: /\\d(_?\\d)*/,\r\n    decimal: /0|@decpart/,\r\n    tokenizer: {\r\n        root: [\r\n            { include: '@comments' },\r\n            { include: '@whitespace' },\r\n            { include: '@numbers' },\r\n            { include: '@strings' },\r\n            [/[,:;]/, 'delimiter'],\r\n            [/[{}\\[\\]()<>]/, '@brackets'],\r\n            [/[a-zA-Z@#]\\w*/, {\r\n                    cases: {\r\n                        '@keywords': 'keyword',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n            [/[<>=\\\\+\\\\-\\\\*\\\\/\\\\^\\\\|\\\\~,]|and\\\\b|or\\\\b|not\\\\b]/, 'operator'],\r\n        ],\r\n        whitespace: [\r\n            [/\\s+/, 'white'],\r\n        ],\r\n        comments: [\r\n            ['\\\\/\\\\*', 'comment', '@comment'],\r\n            ['\\\\/\\\\/+.*', 'comment'],\r\n        ],\r\n        comment: [\r\n            ['\\\\*\\\\/', 'comment', '@pop'],\r\n            ['.', 'comment',],\r\n        ],\r\n        numbers: [\r\n            [/0[xX][0-9a-fA-F]*(_?[0-9a-fA-F])*/, 'number.hex'],\r\n            [/@decimal((\\.@decpart)?([eE][\\-+]?@decpart)?)[fF]*/, {\r\n                    cases: {\r\n                        '(\\\\d)*': 'number',\r\n                        '$0': 'number.float'\r\n                    }\r\n                }]\r\n        ],\r\n        // Recognize strings, including those broken across lines with \\ (but not without)\r\n        strings: [\r\n            [/'$/, 'string.escape', '@popall'],\r\n            [/'/, 'string.escape', '@stringBody'],\r\n            [/\"$/, 'string.escape', '@popall'],\r\n            [/\"/, 'string.escape', '@dblStringBody']\r\n        ],\r\n        stringBody: [\r\n            [/[^\\\\']+$/, 'string', '@popall'],\r\n            [/[^\\\\']+/, 'string'],\r\n            [/\\\\./, 'string'],\r\n            [/'/, 'string.escape', '@popall'],\r\n            [/\\\\$/, 'string']\r\n        ],\r\n        dblStringBody: [\r\n            [/[^\\\\\"]+$/, 'string', '@popall'],\r\n            [/[^\\\\\"]+/, 'string'],\r\n            [/\\\\./, 'string'],\r\n            [/\"/, 'string.escape', '@popall'],\r\n            [/\\\\$/, 'string']\r\n        ]\r\n    }\r\n};\r\n"]}