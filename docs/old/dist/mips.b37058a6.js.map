{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/mips/mips.js"],"names":["conf","wordPattern","comments","blockComment","lineComment","folding","markers","start","RegExp","end","language","defaultToken","ignoreCase","tokenPostfix","regEx","keywords","symbols","escapes","tokenizer","root","cases","token","next","string","herestring","comment","hereregexp"],"mappings":"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","file":"mips.b37058a6.js","sourceRoot":"..","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#%\\^\\&\\*\\(\\)\\=\\$\\-\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n    comments: {\r\n        blockComment: ['###', '###'],\r\n        lineComment: '#'\r\n    },\r\n    folding: {\r\n        markers: {\r\n            start: new RegExp(\"^\\\\s*#region\\\\b\"),\r\n            end: new RegExp(\"^\\\\s*#endregion\\\\b\")\r\n        }\r\n    }\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    ignoreCase: false,\r\n    tokenPostfix: '.mips',\r\n    regEx: /\\/(?!\\/\\/)(?:[^\\/\\\\]|\\\\.)*\\/[igm]*/,\r\n    keywords: [\r\n        '.data', '.text', 'syscall', 'trap',\r\n        'add', 'addu', 'addi', 'addiu', 'and', 'andi',\r\n        'div', 'divu', 'mult', 'multu', 'nor', 'or', 'ori',\r\n        'sll', 'slv', 'sra', 'srav', 'srl', 'srlv',\r\n        'sub', 'subu', 'xor', 'xori', 'lhi', 'lho',\r\n        'lhi', 'llo', 'slt', 'slti', 'sltu', 'sltiu',\r\n        'beq', 'bgtz', 'blez', 'bne', 'j', 'jal', 'jalr', 'jr',\r\n        'lb', 'lbu', 'lh', 'lhu', 'lw', 'li', 'la',\r\n        'sb', 'sh', 'sw', 'mfhi', 'mflo', 'mthi', 'mtlo', 'move',\r\n    ],\r\n    // we include these common regular expressions\r\n    symbols: /[\\.,\\:]+/,\r\n    escapes: /\\\\(?:[abfnrtv\\\\\"'$]|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            // identifiers and keywords\r\n            [/\\$[a-zA-Z_]\\w*/, 'variable.predefined'],\r\n            [/[.a-zA-Z_]\\w*/, {\r\n                    cases: {\r\n                        'this': 'variable.predefined',\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n            // whitespace\r\n            [/[ \\t\\r\\n]+/, ''],\r\n            // Comments\r\n            [/#.*$/, 'comment'],\r\n            // regular expressions\r\n            ['///', { token: 'regexp', next: '@hereregexp' }],\r\n            [/^(\\s*)(@regEx)/, ['', 'regexp']],\r\n            [/(\\,)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\r\n            [/(\\:)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\r\n            // delimiters\r\n            [/@symbols/, 'delimiter'],\r\n            // numbers\r\n            [/\\d+[eE]([\\-+]?\\d+)?/, 'number.float'],\r\n            [/\\d+\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\r\n            [/0[xX][0-9a-fA-F]+/, 'number.hex'],\r\n            [/0[0-7]+(?!\\d)/, 'number.octal'],\r\n            [/\\d+/, 'number'],\r\n            // delimiter: after number because of .\\d floats\r\n            [/[,.]/, 'delimiter'],\r\n            // strings:\r\n            [/\"\"\"/, 'string', '@herestring.\"\"\"'],\r\n            [/'''/, 'string', '@herestring.\\'\\'\\''],\r\n            [/\"/, {\r\n                    cases: {\r\n                        '@eos': 'string',\r\n                        '@default': { token: 'string', next: '@string.\"' }\r\n                    }\r\n                }],\r\n            [/'/, {\r\n                    cases: {\r\n                        '@eos': 'string',\r\n                        '@default': { token: 'string', next: '@string.\\'' }\r\n                    }\r\n                }],\r\n        ],\r\n        string: [\r\n            [/[^\"'\\#\\\\]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\./, 'string.escape.invalid'],\r\n            [/\\./, 'string.escape.invalid'],\r\n            [/#{/, {\r\n                    cases: {\r\n                        '$S2==\"': { token: 'string', next: 'root.interpolatedstring' },\r\n                        '@default': 'string'\r\n                    }\r\n                }],\r\n            [/[\"']/, {\r\n                    cases: {\r\n                        '$#==$S2': { token: 'string', next: '@pop' },\r\n                        '@default': 'string'\r\n                    }\r\n                }],\r\n            [/#/, 'string']\r\n        ],\r\n        herestring: [\r\n            [/(\"\"\"|''')/, {\r\n                    cases: {\r\n                        '$1==$S2': { token: 'string', next: '@pop' },\r\n                        '@default': 'string'\r\n                    }\r\n                }],\r\n            [/[^#\\\\'\"]+/, 'string'],\r\n            [/['\"]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\./, 'string.escape.invalid'],\r\n            [/#{/, { token: 'string.quote', next: 'root.interpolatedstring' }],\r\n            [/#/, 'string']\r\n        ],\r\n        comment: [\r\n            [/[^#]+/, 'comment',],\r\n            [/#/, 'comment'],\r\n        ],\r\n        hereregexp: [\r\n            [/[^\\\\\\/#]+/, 'regexp'],\r\n            [/\\\\./, 'regexp'],\r\n            [/#.*$/, 'comment'],\r\n            ['///[igm]*', { token: 'regexp', next: '@pop' }],\r\n            [/\\//, 'regexp'],\r\n        ],\r\n    },\r\n};\r\n"]}