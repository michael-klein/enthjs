{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/pug/pug.js"],"names":["conf","comments","lineComment","brackets","autoClosingPairs","open","close","notIn","folding","offSide","language","defaultToken","tokenPostfix","ignoreCase","token","keywords","tags","symbols","escapes","tokenizer","root","cases","next","include","tag","simpleText","attributeList","whitespace","blockText","comment","string","value"],"mappings":"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","file":"pug.7270e70d.js","sourceRoot":"..","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    comments: {\r\n        lineComment: '//'\r\n    },\r\n    brackets: [['{', '}'], ['[', ']'], ['(', ')']],\r\n    autoClosingPairs: [\r\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\r\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\r\n        { open: '{', close: '}', notIn: ['string', 'comment'] },\r\n        { open: '[', close: ']', notIn: ['string', 'comment'] },\r\n        { open: '(', close: ')', notIn: ['string', 'comment'] },\r\n    ],\r\n    folding: {\r\n        offSide: true\r\n    }\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.pug',\r\n    ignoreCase: true,\r\n    brackets: [\r\n        { token: 'delimiter.curly', open: '{', close: '}' },\r\n        { token: 'delimiter.array', open: '[', close: ']' },\r\n        { token: 'delimiter.parenthesis', open: '(', close: ')' }\r\n    ],\r\n    keywords: ['append', 'block', 'case', 'default', 'doctype', 'each', 'else', 'extends',\r\n        'for', 'if', 'in', 'include', 'mixin', 'typeof', 'unless', 'var', 'when'],\r\n    tags: [\r\n        'a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio',\r\n        'b', 'base', 'basefont', 'bdi', 'bdo', 'blockquote', 'body', 'br', 'button',\r\n        'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'command',\r\n        'datalist', 'dd', 'del', 'details', 'dfn', 'div', 'dl', 'dt',\r\n        'em', 'embed',\r\n        'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'frame', 'frameset',\r\n        'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html',\r\n        'i', 'iframe', 'img', 'input', 'ins',\r\n        'keygen', 'kbd',\r\n        'label', 'li', 'link',\r\n        'map', 'mark', 'menu', 'meta', 'meter',\r\n        'nav', 'noframes', 'noscript',\r\n        'object', 'ol', 'optgroup', 'option', 'output',\r\n        'p', 'param', 'pre', 'progress',\r\n        'q',\r\n        'rp', 'rt', 'ruby',\r\n        's', 'samp', 'script', 'section', 'select', 'small', 'source', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup',\r\n        'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'tracks', 'tt',\r\n        'u', 'ul',\r\n        'video',\r\n        'wbr'\r\n    ],\r\n    // we include these common regular expressions\r\n    symbols: /[\\+\\-\\*\\%\\&\\|\\!\\=\\/\\.\\,\\:]+/,\r\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    tokenizer: {\r\n        root: [\r\n            // Tag or a keyword at start\r\n            [/^(\\s*)([a-zA-Z_-][\\w-]*)/,\r\n                {\r\n                    cases: {\r\n                        '$2@tags': {\r\n                            cases: {\r\n                                '@eos': ['', 'tag'],\r\n                                '@default': ['', { token: 'tag', next: '@tag.$1' },]\r\n                            }\r\n                        },\r\n                        '$2@keywords': ['', { token: 'keyword.$2' },],\r\n                        '@default': ['', '',]\r\n                    }\r\n                }\r\n            ],\r\n            // id\r\n            [/^(\\s*)(#[a-zA-Z_-][\\w-]*)/, {\r\n                    cases: {\r\n                        '@eos': ['', 'tag.id'],\r\n                        '@default': ['', { token: 'tag.id', next: '@tag.$1' }]\r\n                    }\r\n                }],\r\n            // class\r\n            [/^(\\s*)(\\.[a-zA-Z_-][\\w-]*)/, {\r\n                    cases: {\r\n                        '@eos': ['', 'tag.class'],\r\n                        '@default': ['', { token: 'tag.class', next: '@tag.$1' }]\r\n                    }\r\n                }],\r\n            // plain text with pipe\r\n            [/^(\\s*)(\\|.*)$/, ''],\r\n            { include: '@whitespace' },\r\n            // keywords\r\n            [/[a-zA-Z_$][\\w$]*/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n            // delimiters and operators\r\n            [/[{}()\\[\\]]/, '@brackets'],\r\n            [/@symbols/, 'delimiter'],\r\n            // numbers\r\n            [/\\d+\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\r\n            [/\\d+/, 'number'],\r\n            // strings:\r\n            [/\"/, 'string', '@string.\"'],\r\n            [/'/, 'string', '@string.\\''],\r\n        ],\r\n        tag: [\r\n            [/(\\.)(\\s*$)/, [{ token: 'delimiter', next: '@blockText.$S2.' }, '']],\r\n            [/\\s+/, { token: '', next: '@simpleText' }],\r\n            // id\r\n            [/#[a-zA-Z_-][\\w-]*/, {\r\n                    cases: {\r\n                        '@eos': { token: 'tag.id', next: '@pop' },\r\n                        '@default': 'tag.id'\r\n                    }\r\n                }],\r\n            // class\r\n            [/\\.[a-zA-Z_-][\\w-]*/, {\r\n                    cases: {\r\n                        '@eos': { token: 'tag.class', next: '@pop' },\r\n                        '@default': 'tag.class'\r\n                    }\r\n                }],\r\n            // attributes\r\n            [/\\(/, { token: 'delimiter.parenthesis', next: '@attributeList' }],\r\n        ],\r\n        simpleText: [\r\n            [/[^#]+$/, { token: '', next: '@popall' }],\r\n            [/[^#]+/, { token: '' }],\r\n            // interpolation\r\n            [/(#{)([^}]*)(})/, {\r\n                    cases: {\r\n                        '@eos': ['interpolation.delimiter', 'interpolation', { token: 'interpolation.delimiter', next: '@popall' }],\r\n                        '@default': ['interpolation.delimiter', 'interpolation', 'interpolation.delimiter']\r\n                    }\r\n                }],\r\n            [/#$/, { token: '', next: '@popall' }],\r\n            [/#/, '']\r\n        ],\r\n        attributeList: [\r\n            [/\\s+/, ''],\r\n            [/(\\w+)(\\s*=\\s*)(\"|')/, ['attribute.name', 'delimiter', { token: 'attribute.value', next: '@value.$3' }]],\r\n            [/\\w+/, 'attribute.name'],\r\n            [/,/, {\r\n                    cases: {\r\n                        '@eos': { token: 'attribute.delimiter', next: '@popall' },\r\n                        '@default': 'attribute.delimiter'\r\n                    }\r\n                }],\r\n            [/\\)$/, { token: 'delimiter.parenthesis', next: '@popall' }],\r\n            [/\\)/, { token: 'delimiter.parenthesis', next: '@pop' }],\r\n        ],\r\n        whitespace: [\r\n            [/^(\\s*)(\\/\\/.*)$/, { token: 'comment', next: '@blockText.$1.comment' }],\r\n            [/[ \\t\\r\\n]+/, ''],\r\n            [/<!--/, { token: 'comment', next: '@comment' }],\r\n        ],\r\n        blockText: [\r\n            [/^\\s+.*$/, {\r\n                    cases: {\r\n                        '($S2\\\\s+.*$)': { token: '$S3' },\r\n                        '@default': { token: '@rematch', next: '@popall' }\r\n                    }\r\n                }],\r\n            [/./, { token: '@rematch', next: '@popall' }]\r\n        ],\r\n        comment: [\r\n            [/[^<\\-]+/, 'comment.content'],\r\n            [/-->/, { token: 'comment', next: '@pop' }],\r\n            [/<!--/, 'comment.content.invalid'],\r\n            [/[<\\-]/, 'comment.content']\r\n        ],\r\n        string: [\r\n            [/[^\\\\\"'#]+/, {\r\n                    cases: {\r\n                        '@eos': { token: 'string', next: '@popall' },\r\n                        '@default': 'string'\r\n                    }\r\n                }],\r\n            [/@escapes/, {\r\n                    cases: {\r\n                        '@eos': { token: 'string.escape', next: '@popall' },\r\n                        '@default': 'string.escape'\r\n                    }\r\n                }],\r\n            [/\\\\./, {\r\n                    cases: {\r\n                        '@eos': { token: 'string.escape.invalid', next: '@popall' },\r\n                        '@default': 'string.escape.invalid'\r\n                    }\r\n                }],\r\n            // interpolation\r\n            [/(#{)([^}]*)(})/, ['interpolation.delimiter', 'interpolation', 'interpolation.delimiter']],\r\n            [/#/, 'string'],\r\n            [/[\"']/, {\r\n                    cases: {\r\n                        '$#==$S2': { token: 'string', next: '@pop' },\r\n                        '@default': { token: 'string' }\r\n                    }\r\n                }],\r\n        ],\r\n        // Almost identical to above, except for escapes and the output token\r\n        value: [\r\n            [/[^\\\\\"']+/, {\r\n                    cases: {\r\n                        '@eos': { token: 'attribute.value', next: '@popall' },\r\n                        '@default': 'attribute.value'\r\n                    }\r\n                }],\r\n            [/\\\\./, {\r\n                    cases: {\r\n                        '@eos': { token: 'attribute.value', next: '@popall' },\r\n                        '@default': 'attribute.value'\r\n                    }\r\n                }],\r\n            [/[\"']/, {\r\n                    cases: {\r\n                        '$#==$S2': { token: 'attribute.value', next: '@pop' },\r\n                        '@default': { token: 'attribute.value' }\r\n                    }\r\n                }],\r\n        ],\r\n    },\r\n};\r\n"]}