{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/r/r.js"],"names":["conf","comments","lineComment","brackets","autoClosingPairs","open","close","surroundingPairs","language","defaultToken","tokenPostfix","roxygen","constants","keywords","special","token","tokenizer","root","include","cases","next","numbers","operators","strings","stringBody","dblStringBody"],"mappings":"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","file":"r.e2c97f65.js","sourceRoot":"..","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    comments: {\r\n        lineComment: '#'\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n    ]\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.r',\r\n    roxygen: [\r\n        '@param',\r\n        '@return',\r\n        '@name',\r\n        '@rdname',\r\n        '@examples',\r\n        '@include',\r\n        '@docType',\r\n        '@S3method',\r\n        '@TODO',\r\n        '@aliases',\r\n        '@alias',\r\n        '@assignee',\r\n        '@author',\r\n        '@callGraphDepth',\r\n        '@callGraph',\r\n        '@callGraphPrimitives',\r\n        '@concept',\r\n        '@exportClass',\r\n        '@exportMethod',\r\n        '@exportPattern',\r\n        '@export',\r\n        '@formals',\r\n        '@format',\r\n        '@importClassesFrom',\r\n        '@importFrom',\r\n        '@importMethodsFrom',\r\n        '@import',\r\n        '@keywords',\r\n        '@method',\r\n        '@nord',\r\n        '@note',\r\n        '@references',\r\n        '@seealso',\r\n        '@setClass',\r\n        '@slot',\r\n        '@source',\r\n        '@title',\r\n        '@usage'\r\n    ],\r\n    constants: [\r\n        'NULL',\r\n        'FALSE',\r\n        'TRUE',\r\n        'NA',\r\n        'Inf',\r\n        'NaN ',\r\n        'NA_integer_',\r\n        'NA_real_',\r\n        'NA_complex_',\r\n        'NA_character_ ',\r\n        'T',\r\n        'F',\r\n        'LETTERS',\r\n        'letters',\r\n        'month.abb',\r\n        'month.name',\r\n        'pi',\r\n        'R.version.string'\r\n    ],\r\n    keywords: [\r\n        'break',\r\n        'next',\r\n        'return',\r\n        'if',\r\n        'else',\r\n        'for',\r\n        'in',\r\n        'repeat',\r\n        'while',\r\n        'array',\r\n        'category',\r\n        'character',\r\n        'complex',\r\n        'double',\r\n        'function',\r\n        'integer',\r\n        'list',\r\n        'logical',\r\n        'matrix',\r\n        'numeric',\r\n        'vector',\r\n        'data.frame',\r\n        'factor',\r\n        'library',\r\n        'require',\r\n        'attach',\r\n        'detach',\r\n        'source'\r\n    ],\r\n    special: [\r\n        '\\\\n',\r\n        '\\\\r',\r\n        '\\\\t',\r\n        '\\\\b',\r\n        '\\\\a',\r\n        '\\\\f',\r\n        '\\\\v',\r\n        '\\\\\\'',\r\n        '\\\\\"',\r\n        '\\\\\\\\'\r\n    ],\r\n    brackets: [\r\n        { open: '{', close: '}', token: 'delimiter.curly' },\r\n        { open: '[', close: ']', token: 'delimiter.bracket' },\r\n        { open: '(', close: ')', token: 'delimiter.parenthesis' }\r\n    ],\r\n    tokenizer: {\r\n        root: [\r\n            { include: '@numbers' },\r\n            { include: '@strings' },\r\n            [/[{}\\[\\]()]/, '@brackets'],\r\n            { include: '@operators' },\r\n            [/#'/, 'comment.doc', '@roxygen'],\r\n            [/(^#.*$)/, 'comment'],\r\n            [/\\s+/, 'white'],\r\n            [/[,:;]/, 'delimiter'],\r\n            [/@[a-zA-Z]\\w*/, 'tag'],\r\n            [/[a-zA-Z]\\w*/, {\r\n                    cases: {\r\n                        '@keywords': 'keyword',\r\n                        '@constants': 'constant',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }]\r\n        ],\r\n        // Recognize Roxygen comments\r\n        roxygen: [\r\n            [/@\\w+/, {\r\n                    cases: {\r\n                        '@roxygen': 'tag',\r\n                        '@eos': { token: 'comment.doc', next: '@pop' },\r\n                        '@default': 'comment.doc'\r\n                    }\r\n                }],\r\n            [/\\s+/, {\r\n                    cases: {\r\n                        '@eos': { token: 'comment.doc', next: '@pop' },\r\n                        '@default': 'comment.doc'\r\n                    }\r\n                }],\r\n            [/.*/, { token: 'comment.doc', next: '@pop' }]\r\n        ],\r\n        // Recognize positives, negatives, decimals, imaginaries, and scientific notation\r\n        numbers: [\r\n            [/0[xX][0-9a-fA-F]+/, 'number.hex'],\r\n            [/-?(\\d*\\.)?\\d+([eE][+\\-]?\\d+)?/, 'number']\r\n        ],\r\n        // Recognize operators\r\n        operators: [\r\n            [/<{1,2}-/, 'operator'],\r\n            [/->{1,2}/, 'operator'],\r\n            [/%[^%\\s]+%/, 'operator'],\r\n            [/\\*\\*/, 'operator'],\r\n            [/%%/, 'operator'],\r\n            [/&&/, 'operator'],\r\n            [/\\|\\|/, 'operator'],\r\n            [/<</, 'operator'],\r\n            [/>>/, 'operator'],\r\n            [/[-+=&|!<>^~*/:$]/, 'operator']\r\n        ],\r\n        // Recognize strings, including those broken across lines\r\n        strings: [\r\n            [/'/, 'string.escape', '@stringBody'],\r\n            [/\"/, 'string.escape', '@dblStringBody']\r\n        ],\r\n        stringBody: [\r\n            [/\\\\./, {\r\n                    cases: {\r\n                        '@special': 'string',\r\n                        '@default': 'error-token'\r\n                    }\r\n                }],\r\n            [/'/, 'string.escape', '@popall'],\r\n            [/./, 'string'],\r\n        ],\r\n        dblStringBody: [\r\n            [/\\\\./, {\r\n                    cases: {\r\n                        '@special': 'string',\r\n                        '@default': 'error-token'\r\n                    }\r\n                }],\r\n            [/\"/, 'string.escape', '@popall'],\r\n            [/./, 'string'],\r\n        ]\r\n    }\r\n};\r\n"]}