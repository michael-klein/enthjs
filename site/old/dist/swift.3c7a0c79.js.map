{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/swift/swift.js"],"names":["conf","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","language","defaultToken","tokenPostfix","identifier","attributes","accessmodifiers","keywords","symbols","operatorstart","operatorend","operators","escapes","tokenizer","root","include","symbol","comment","commentdocbody","commentbody","attribute","cases","literal","token","next","stringlit","interpolatedexpression","keyword","escapedkeyword","invokedmethod"],"mappings":"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","file":"swift.3c7a0c79.js","sourceRoot":"..","sourcesContent":["/*!---------------------------------------------------------------------------------------------\r\n *  Copyright (C) David Owens II, owensd.io. All rights reserved.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    comments: {\r\n        lineComment: '//',\r\n        blockComment: ['/*', '*/'],\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' },\r\n        { open: '`', close: '`' },\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' },\r\n        { open: '`', close: '`' },\r\n    ]\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.swift',\r\n    // TODO(owensd): Support the full range of unicode valid identifiers.\r\n    identifier: /[a-zA-Z_][\\w$]*/,\r\n    // TODO(owensd): Support the @availability macro properly.\r\n    attributes: [\r\n        '@autoclosure', '@noescape', '@noreturn', '@NSApplicationMain', '@NSCopying', '@NSManaged',\r\n        '@objc', '@UIApplicationMain', '@noreturn', '@availability', '@IBAction', '@IBDesignable', '@IBInspectable', '@IBOutlet'\r\n    ],\r\n    accessmodifiers: ['public', 'private', 'internal'],\r\n    keywords: [\r\n        '__COLUMN__', '__FILE__', '__FUNCTION__', '__LINE__', 'as', 'as!', 'as?', 'associativity', 'break', 'case', 'catch',\r\n        'class', 'continue', 'convenience', 'default', 'deinit', 'didSet', 'do', 'dynamic', 'dynamicType',\r\n        'else', 'enum', 'extension', 'fallthrough', 'final', 'for', 'func', 'get', 'guard', 'if', 'import', 'in', 'infix',\r\n        'init', 'inout', 'internal', 'is', 'lazy', 'left', 'let', 'mutating', 'nil', 'none', 'nonmutating', 'operator',\r\n        'optional', 'override', 'postfix', 'precedence', 'prefix', 'private', 'protocol', 'Protocol', 'public',\r\n        'repeat', 'required', 'return', 'right', 'self', 'Self', 'set', 'static', 'struct', 'subscript', 'super', 'switch',\r\n        'throw', 'throws', 'try', 'try!', 'Type', 'typealias', 'unowned', 'var', 'weak', 'where', 'while', 'willSet', 'FALSE', 'TRUE'\r\n    ],\r\n    symbols: /[=(){}\\[\\].,:;@#\\_&\\-<>`?!+*\\\\\\/]/,\r\n    // Moved . to operatorstart so it can be a delimiter\r\n    operatorstart: /[\\/=\\-+!*%<>&|^~?\\u00A1-\\u00A7\\u00A9\\u00AB\\u00AC\\u00AE\\u00B0-\\u00B1\\u00B6\\u00BB\\u00BF\\u00D7\\u00F7\\u2016-\\u2017\\u2020-\\u2027\\u2030-\\u203E\\u2041-\\u2053\\u2055-\\u205E\\u2190-\\u23FF\\u2500-\\u2775\\u2794-\\u2BFF\\u2E00-\\u2E7F\\u3001-\\u3003\\u3008-\\u3030]/,\r\n    operatorend: /[\\u0300-\\u036F\\u1DC0-\\u1DFF\\u20D0-\\u20FF\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uE0100-\\uE01EF]/,\r\n    operators: /(@operatorstart)((@operatorstart)|(@operatorend))*/,\r\n    // TODO(owensd): These are borrowed from C#; need to validate correctness for Swift.\r\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    tokenizer: {\r\n        root: [\r\n            { include: '@comment' },\r\n            { include: '@attribute' },\r\n            { include: '@literal' },\r\n            { include: '@keyword' },\r\n            { include: '@invokedmethod' },\r\n            { include: '@symbol' },\r\n        ],\r\n        symbol: [\r\n            [/[{}()\\[\\]]/, '@brackets'],\r\n            [/[<>](?!@symbols)/, '@brackets'],\r\n            [/[.]/, 'delimiter'],\r\n            [/@operators/, 'operator'],\r\n            [/@symbols/, 'operator']\r\n        ],\r\n        comment: [\r\n            [/\\/\\/\\/.*$/, 'comment.doc'],\r\n            [/\\/\\*\\*/, 'comment.doc', '@commentdocbody'],\r\n            [/\\/\\/.*$/, 'comment'],\r\n            [/\\/\\*/, 'comment', '@commentbody']\r\n        ],\r\n        commentdocbody: [\r\n            [/\\/\\*/, 'comment', '@commentbody'],\r\n            [/\\*\\//, 'comment.doc', '@pop'],\r\n            [/\\:[a-zA-Z]+\\:/, 'comment.doc.param'],\r\n            [/./, 'comment.doc']\r\n        ],\r\n        commentbody: [\r\n            [/\\/\\*/, 'comment', '@commentbody'],\r\n            [/\\*\\//, 'comment', '@pop'],\r\n            [/./, 'comment']\r\n        ],\r\n        attribute: [\r\n            [/\\@@identifier/, {\r\n                    cases: {\r\n                        '@attributes': 'keyword.control',\r\n                        '@default': ''\r\n                    }\r\n                }]\r\n        ],\r\n        literal: [\r\n            [/\"/, { token: 'string.quote', next: '@stringlit' }],\r\n            [/0[b]([01]_?)+/, 'number.binary'],\r\n            [/0[o]([0-7]_?)+/, 'number.octal'],\r\n            [/0[x]([0-9a-fA-F]_?)+([pP][\\-+](\\d_?)+)?/, 'number.hex'],\r\n            [/(\\d_?)*\\.(\\d_?)+([eE][\\-+]?(\\d_?)+)?/, 'number.float'],\r\n            [/(\\d_?)+/, 'number']\r\n        ],\r\n        stringlit: [\r\n            [/\\\\\\(/, { token: 'operator', next: '@interpolatedexpression' }],\r\n            [/@escapes/, 'string'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/\"/, { token: 'string.quote', next: '@pop' }],\r\n            [/./, 'string']\r\n        ],\r\n        interpolatedexpression: [\r\n            [/\\(/, { token: 'operator', next: '@interpolatedexpression' }],\r\n            [/\\)/, { token: 'operator', next: '@pop' }],\r\n            { include: '@literal' },\r\n            { include: '@keyword' },\r\n            { include: '@symbol' }\r\n        ],\r\n        keyword: [\r\n            [/`/, { token: 'operator', next: '@escapedkeyword' }],\r\n            [/@identifier/, {\r\n                    cases: {\r\n                        '@keywords': 'keyword', '[A-Z][\\a-zA-Z0-9$]*': 'type.identifier',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }]\r\n        ],\r\n        escapedkeyword: [\r\n            [/`/, { token: 'operator', next: '@pop' }],\r\n            [/./, 'identifier']\r\n        ],\r\n        //\t\tsymbol: [\r\n        //\t\t\t[ /@symbols/, 'operator' ],\r\n        //\t\t\t[ /@operators/, 'operator' ]\r\n        //\t\t],\r\n        invokedmethod: [\r\n            [/([.])(@identifier)/, {\r\n                    cases: {\r\n                        '$2': ['delimeter', 'type.identifier'],\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n        ]\r\n    }\r\n};\r\n"]}