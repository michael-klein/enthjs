{"version":3,"sources":["../../src/directive.ts","../../src/html.ts","../../src/scheduler.ts","../../src/render.ts","../../../src/directives/sub.ts","../../src/misc.ts","../../src/context.ts","../../src/sideeffects.ts","../../src/component.ts","../../src/reactivity.ts","../../src/properties.ts","../../src/attributes.ts","../../../src/directives/text.ts","../../../src/directives/input.ts","../../../src/directives/on.ts","../../../src/directives/list.ts","../../src/index.ts","index.ts"],"names":[],"mappings":";;;;;;ASAA,APAA,AeAA,IfAY,EOAN,AQAN,URAgB,AQAhB,CfAA,EOAoC,AQApC,IRAwC,GQAxC,CAAA,GRAoC,EAApC,iBQAA,CAAA;AJAA,ACAA,AVAA,AQAA,ADAA,AHCA,ARKA,ACNA,AIAO,AKAP,APAA,AIAA,IPMY,EKNC,WLMb,MKN8B,GAAI,OAAD,IAC/B,GAAG,OAAO,iCADL;AUAP,ATAA,AGCA,AQeA,SRfS,AQeA,ORfT,AQeA,CRfiB,AQeA,CAAjB,ERfA,AQekB,ERfS,QAA3B,EAA+C;AIA/C,ACAA,AVCA,AQAO,ADDP,AHCA,APAA,ASDA,ADCE,ANIF,ADNA,AKCA,AUgBE,CfjBF,KUEa,AXAP,AQAA,AQeA,CAAJ,EAAO,CLfQ,AKef,CfjBU,CeiBA,CLfQ,AKelB,ChBfY,GAAI,AQAD,CRAA,EQAG,ERAoB,ECFxC,COEE,CPFuB,mBUEW,WAAU,IAAV,EAAsB,KAAtB,EAAmC;AGDvE,AHEE,ANDF,ANIA,ACHE,ACFA,CFKF,CELE,IICI,GLCG,CAAC,CWAC,AZGC,ACHD,CKDC,GAA0B,AJDpC,CAAA,KICF,CLCS,EDGT,EAAyB,ECHG,CAAC,ACF3B,CDE4B,ACF5B,WDE0B,ACF1B,CAAA,CDEA,ECFA,CAAA,CAAA,GAAA,WAAA;AWEK,ACAA,AVCA,AQAH,ADFJ,AHCA,ARIE,ACHD,ASDM,ADAL,ANIF,ADLE,AKSF,AUOE,ChBhBF,CDKE,AELA,IWCW,ACAA,AVCA,AMDA,ADAP,AFQA,CUOC,CHfQ,AGeP,CbdQ,CQAN,CCDQ,ACAA,AJAA,AOeP,CbdQ,AacP,CAAC,CJfQ,AHAA,CVInB,AUJuB,ARDvB,CUEc,AZGd,AELA,GUEiB,AFDE,AOeV,CVPS,CGRmB,ADAlB,CQeC,CVJlB,AUIF,CRfsB,CGCC,AKcA,CLbnB,AKaoB,CVJlB,EPPN,AELA,AegB2B,CjBX3B,ASJ2B,APD3B,AegBA,EAA8B,CPfX,AOeY,CVJ7B,CUIF,CjBXA,AOIF,CPJE,AiBWmC,CPfmC,EVItE,CAAA,CAAA,CcJgC,CVCC,CJGjC,AELA,CWCmC,AXDnC,GAAA,EFKA,CELA,CAAA,CYEA,CVCA,CFHA,CWEA,CCDgC,CVCC,CUCjC,CDFmC,ATGnC,ESDA,CCFgC,CDAG,CCGnC,CDD2B,CCFK,EAGG,CVFF,AFFjC,EEIsB;ASCtB,AELF,ADME,AVAA,AQFM,ANFD,ANIL,AUJA,ADAE,APDF,AegBE,EjBXF,AELA,EegBE,CAAC,CbXC,AQFE,ANFK,EOGL,ACCA,AJJA,ADAA,AQeA,EbXE,AQHJ,CRGK,CaWC,CJZC,ACCA,AGWA,EjBXX,AUJa,ARDb,CWIc,ACCA,AdAd,AELA,EICuB,AIAP,AOeV,CbXF,AKJF,AQee,EXfS,AGAP,CHAQ,CWeN,CbXC,AaWA,CbXtB,EAAyB,EEJC,ANI1B,AELA,CFKA,AELA,AegBiB,CXfgC,EAAvB,GWeQ,CAAC,CXfsC,AJDzE,CAAA,CegBsC,CAArB,CfhBjB,AegBM,CAAJ,CjBXF,AUJA,CVIA,CELA,CAAA,CFKA,CAAA,CAAA,AELA,GFKA,KELA,SFKA;AaAE,ACCA,AVAA,AQFI,ADHR,AHAA,AFCE,ANIA,ACHF,ASDE,ADAI,ANIN,ADLE,AKYK,AUIH,EXfF,ANIA,AELA,EWIE,ACCA,AbHQ,AgBcR,CAAC,CLbG,ADHF,AFCA,ANIA,AIOO,EDXL,AIAA,AOeA,CXfC,AWeA,CbXC,AaWA,CLfJ,AKeG,CAAL,CXfF,AIAW,CDAC,CLIC,AJAb,AELA,CICc,ANId,AUJc,ARDd,AKYqB,CNVvB,CGGkB,CGOQ,CAAC,EJPL,CGJpB,EHIqD,CCA7B,AOLA,AJYA,CHPC,CGOoB,CIT3C,AXEF,AGAyD,ADLzD,CFKA,AELA,GSGM,ETHN,CSGE,AREmD,ADLrD,ESAF,ARKA,CDLE,CEKgB,AJAhB,AUJqB,AHWG,CHPe,AJAvC,EIAgB,CAAd,AJAF,AELA,CFKA,AELA,AKY2E,CPP3E,EELA,CFKA,IELA,MFKA;AaFc,AEHV,ADIU,AVEZ,AQFI,ADAR,ALFE,ANIA,AULuB,ADCpB,APDH,AKYA,AUIE,EXfF,ANIA,AELA,CWEA,ACCA,CRFE,AIDqB,AOgBrB,CAAC,CLbG,ADAF,AMaA,CAAD,CbXG,AGOA,AUIJ,CFjBY,ALCc,CEGlB,CFHoB,AOgBrB,CLbG,AKaF,CAAC,CbXC,AaWF,CFjBN,AfMJ,AELA,AKYa,AUIX,CFjBmB,AfMrB,AELA,CEK4B,AOFb,CPGX,AGMY,EIT0C,IAAI,EIJ1D,EAAuC,CfM3C,AELA,CFKA,AELA,CSG0D,EAA5D,GTHE,CUG0B,AVH1B,GAAA,IKYA,CPPA,CAAA,EELA,CFKA,AELA,CFKA,CAAA,CELA,EFKA,IELA,WFKA;AaAA,AELA,ADMA,AVCM,AQPF,AJOC,AFLL,ANIA,AUNqB,ADEpB,ANGI,ADJN,AKYC,AUIE,CftBJ,CWUE,ACCA,ARJA,ANIA,AOOA,CGbc,ADFd,APHU,CQKV,AOiBE,CLlBqB,AKkBpB,CJZC,AELA,ADMA,AVCE,AQRJ,AJQS,ALFA,AcYP,CJZC,ACCA,AGWF,CFjBG,ATEA,AWeJ,CXfK,CFKG,CWPO,AZKD,AcYP,CFjBT,AXOY,AaUV,CXfF,CHGoB,CKEA,ARDpB,CMJc,ANId,AEXuB,AKkBT,CAAC,CCNQ,CAAC,CDMxB,CACE,EMTF,ACCA,ANCuB,ALFJ,CUAG,ACCA,CNCgB,AFLtC,EHG8C,CWC9C,APOA,CPPA,CcA4B,ANCL,ARDvB,AOSE,CMVF,ACC6B,APS1B,EMV4B,CAAC,CCCA,ANCsB,EJA5B,CSFS,AbCnC,CAAA,GAAA,CAAA,CAAA,CEXU,AKoBO,CAAC,CPTlB,EIAI,AGSD,CAAmB,KPTtB,EOSG,CLpBoB,GAAA,CKoBW,CLpBX,CAAzB,AKoBI,EAAoC,MAApC,CAA2C;AMT3C,ACCA,AVCI,AQFJ,ADDJ,AHGE,AFLD,ANIA,ACND,ASAE,APKA,AIUI,AUEH,CXnBI,ANEP,ACAA,COOE,AEPA,CVAU,CYKR,ALUE,CAAC,CHRC,AOHF,ARCA,CIUG,CGfD,CEKC,AFLA,CGKC,ATAJ,CHLM,CWKA,CLSmC,EMThC,CLEC,ARPS,CWIR,AHGA,CKFU,ADAT,CCAU,ADAT,CCAU,ADAX,ADDG,CCCjB,CTAkB,CKEpB,AEPA,APKqB,CKGnB,APRJ,ASAwB,EGKG,AZLF,AEKnB,CUAmD,AFDrC,ARCO,CKEzB,CMDW,CNGT,CGL+C,ADJjD,CGKE,CHL6B,EIMd,CXDb,COLJ,APKA,EOLqC,APKA,CWCf,CAAC,EAAN,CAAS,ANGV,CMHC,AdNP,CcMR,EAA4B,ONG5B,CAAyB,ERTJ,GAAA,EAAA,CAAzB,ScM8C,SAA1C;ADAA,AENF,ADOC,AVCK,AQFL,ADDD,AHUI,APdJ,ASAE,ADCF,ANIE,ADJJ,AKcM,ENfJ,CaIA,CNUI,AEdF,APKA,ADJA,AKcE,CAAC,CHRC,AOHF,CILC,AJKA,ADJA,AHeE,CEdD,CCDC,IKDI,AXQE,AKNF,ELMI,AIOX,APdJ,ASAa,CTAb,AQCc,CPAC,CSGC,AHUZ,CGVa,CDJC,ADCA,ANIA,ADJgB,CQDf,APMd,CYPL,AJKK,ATHP,CSGuB,CRCnB,CMJY,ANKL,CYPe,ALAa,ADEb,GIIb,AZLX,AQCc,CEGT,AVJL,CUIA,AFHoC,EEGL,CRC7B,CUAe,CENiB,AdClC,AEOK,CYR8B,AdCnC,GYKsB,AZLtB,CYKuB,AZLvB,CAAA,CYKiB,AVAf,CUAwB,AVEb,CFPb,EcDA,CZQiB,CUFA,AEN8B,CFM7C,CZLF,CYKkC,AVEb,SAAS,CAAC,WAAV,CAAsB,GUFK,CVE3B,CAFnB,IUAA;AACD,AENC,AXIE,AQEL,ADDG,AHUI,ARaD,AC3BL,ASAE,ADCA,ANMA,ADNJ,AKW+C,AUI7C,CLtBkB,CAAb,AXML,CYEA,ANUE,CGZA,ADCA,ANMA,ADNA,AKSF,CHR4B,CAA1B,AJyBS,CU3BN,ADCA,CMFE,CLCC,ADCD,AQeA,CNZC,AFHA,AQeR,GRfO,CCDA,CTAP,AQCa,CRDb,CcDgB,CAAC,AJKD,AXuBO,AU3BD,CKDf,ANEA,CMFY,AZQD,ADNA,CSGC,AXuBO,AGpBP,EDNW,COAT,CEGE,EXuBS,AGpB9B,CHoB+B,AGpBP,ADN5B,CaFS,AdCP,CAAA,IcDyC,GAAvC,AZQA,EYR4C,Af4Bd,CAA3B,CWvBc,AVJnB,CUIyC,AVJzC,GAAA,CAAA,CAAA,GAAA,KUIwC,IAAoC,EVJ5E;AcAI,ADMJ,AVGE,AOJE,AHGQ,APPZ,ASAI,ADCA,ANMH,ADNH,AKeC,AUAA,CVTM,CNPL,ISAI,ARCA,EEOE,EKNA,CKGG,AHDA,AHGG,AEPH,CKDC,ALCA,CDED,CAAC,CRFV,CAAA,CUIe,ADJX,ARCW,COCN,CAAH,CMHY,AXShB,AMRgB,ARCQ,EAA5B,CaFuB,APQT,ACJN,EECF,ADJA,CFOgC,GGHT,AVJ3B,CAAA,AQGa,CDID,EORmB,ANIf,CMJgB,ANIf,IAAD,CAAV,GMJe,AJKjB,CILqC,CJKC,AFDf,GRH3B,CAAA,EcDqB,CAA4B,AdCjD,CAAA,AQEM,CRFN,GAAA,AQIM,CAAC,OMLc,CACf,ENIW,CAAC,CMJR,ENIH,CAAe,CRJtB,EQIyB,CAAC,IAAD,CAAlB,CAFD,IAGA,IAAI,KAAK,IMLc,ANEvB,EMFI,CAAsB,CNM1B,EMPe,CAAjB,QNEA,EAME;AIFN,AEHI,ADIF,AVGA,AOJI,AHGM,AFPP,ALAN,ASAI,ADOG,ANAP,CFXD,AEIO,EFJK,CaSR,ERLS,EFQL,AKDA,CKFC,CCJC,ADIA,CDDC,ALGG,ACAH,CKFP,AHDQ,AFGA,GKFG,CAAC,AVGZ,AERmB,ALJE,AQWd,CAAH,CMNU,CTDQ,CKIN,AFGA,CKFL,AHDM,CIHC,CAAC,ADIA,CAAR,CAAX,AHDQ,ALJgC,EEO9B,ACAa,CAAC,EEHE,AHGY,CONX,ANMA,CMNC,ANMA,GDAlB,CCAiB,CAAJ,EAAY,GEH/B,EAAoC,CIHtC,AdLM,EcKmC,ANMpB,CAAnB,MMN8C,IdL7B,GAAA,EcKsC,AdLtC,CcKuC,AdLhE,CcKsD,CAAY,IAAZ,CAAiB,CAAjB,CAAP;AFI3C,AEHC,ADIF,AVGC,AOJM,AHII,AFRZ,ANyBI,AU9BiC,ADYhC,APPP,AegBA,GPrBE,CGSE,EPJE,AJAA,EEQE,CSJC,AbqBO,CarBN,AIYV,CTRc,ASQd,CJZI,APJQ,CAAC,EOIE,CAAC,AFAA,AHIF,CFRZ,EEQiC,AFRhB,CFQC,AaQpB,CJZe,ALID,ANRO,AegBX,EJZa,ATIQ,CSJhB,AbqBT,AEzBkB,CWIpB,ATIA,AOJqB,AX6BvB,AEhCA,GSIU,CAAC,CTLW,EFyBlB,AEvBJ,EF+BU,CEjCY,EegBxB,EAA4B,CfbR,Keaa,INXA,CAAC,GAArB,CAAyB,OAAzB,KAAqC,EAAtC,EAA0C,QAAQ,CAAC,aAAnD,KACA,EAFF;AECP,ACCF,AHCS,AHcI,AFpBV,ANoCF,AChCF,ASJE,ARGA,AekBA,CH9BgB,CAAX,IbaD,ACDA,EekBE,CjBeC,AUpCA,CCMC,AX8BC,AiBfD,CTDI,AFpBH,AJGA,EekBE,CPrBX,ARGY,CAAZ,EIHe,ANoCP,CMpCQ,CKMC,CAAC,CX8BK,CMpCrB,CEoBU,ASCD,CAAA,ETDyB,CGd5B,AVFiB,CUEC,EAAE,AVFA,AgBiBjB,CTDC,APfZ,AgBgBkB,GNfc,EAAE,CVFN,CUEpB,CVAR,EAF4B,EAG5B,cAH4B,KAIlB;AYHX,AEJG,AXOA,AODK,AHID,AFVL,ANoCC,AC5BF,ASRD,ADMK,ANDN,AIQA,AUOsB,CJ9BD,AHAd,CGAA,CPQL,CSEE,AEoBkB,EFpBhB,AZKA,AIQA,GDbG,ALQA,CD4BC,CQ1BG,APFF,EGDE,AHCX,AQFW,CQcmB,ChBZjB,CQFC,AQckB,CRdjB,CNDC,AceE,CjBgBD,ES9BH,ANDiD,AIQ5C,CPuBC,AS9BhB,CDIE,CAAkB,ADGD,CJR4C,OH+BtC,AG/BkC,EAAjE,CH+BkC,EOvBV,EPuBF,EAAsB,AOvB2B;AQZpE,AXOG,AODC,AHGqB,AFTxB,ANoCE,AC5BF,AQFC,APJH,AKWA,AUMoC,IAAA,CRzBA,EPQ/B,CMOqB,ADIpB,AUMkC,EbZhC,AEPA,ALQA,AgBWkC,CfjBjC,CMOqB,CR2BnB,CQ3BqB,APDpB,AgBWM,GhBXH,ACNA,GAAG,EEKE,GFLG,CAAC,CEKC,IHCI,CAAC,ACN9B,EAAgC,GEKG,CAAC,AHCrB,CKRW,ALQW,ACNA,EDMtB,CAAb,ACNsC,IEKpC,EAA0C,AFL9C,EAAgD,CIFxC,CAAN,GJEmD,EAArD,EAAyD;AEMnD,AODH,AHEqB,AFRvB,ANoCK,AS9BJ,ANFG,ADFH,AKUM,AUMwC,IRZ9C,AFMM,AUMwC,CNrB7B,AJeb,CIfJ,AROS,CKIL,ACFD,CT8BC,AiBlB8C,CRZ7C,CT8BC,AS9BA,APJA,AegB8C,CAAC,CjBkB7C,AGhCO,AccqC,CRZ/C,CQYmD,CRZ7C,ANFO,AcckC,CdbtD,Cca6D,CAAP,CRZ/C,CQYyD,CRZ7C,AQYmC,CfhBlC,EFiCT,CG/BS,ADFW,COIxB,CNAP,CCCa,CFLsB,CAAC,COIR,EPJG,GEKzB,CDHc,CCGU,AFLc,GAA1C,CCKM,MCAF;AWPN,AXQK,AODH,AHGI,AFTP,ANoCO,AC7BJ,AQDE,ANCJ,ADLE,AKSS,AUMO,CXvBb,EWuBM,CNXT,AJKS,AUMX,EdVI,CCFA,CJ+BE,AC7BA,CcRC,AdQA,CQAD,APLE,COKD,APLE,EEKE,AHAT,ACLM,COKE,ANAV,CQDa,AX4BF,AC3BE,AQAF,APLE,CSIC,GIPG,AJOf,AFCQ,CMRQ,AJOA,AFCX,KAAc,EEDnB,CIPK,AbGC,CaHmB,AJOA,CFCpB,EPLuB,CMOX,CCFW,CAAC,EED7B,AHGI,ANP6B,CaHnC,AbGoC,CMOX,INPU,CAAjC,CMO4B,CCFxB,KACA,IAAI,KAAK,MADT,IAEA,IAAI,KAAK,IAHX,EAIE;AMVP,AXQO,AODL,AHGO,AR2BF,AC7BF,AQGE,AFAA,AUON,MVPiB,EP0BX,AiBnBA,IjBgBK,ASvBD,CQOC,CbVC,AIEE,ESQA,EbVE,CKGC,AFAjB,CCDoB,CJFD,EIEI,CCCb,EQOI,CAAA,CTRc,CJFD,AKGA,CLHC,AIEpB,ESQM,CAAM,IRPV,EQOI,CAAd,CRPuC,CAAC,ULHrB,AKG+B,CAAC,CLH7C,EKGkC,CAAe,GAAG,CAAC,IAAD,CAAlB,CAAlC,EAA6D;ALF7D,AODP,AHGS,AR2BF,AC7BH,AQGK,ANJR,ADLE,AKSF,AUOA,CNzBF,KRcM,AIIA,CJJC,CH8BC,AEnCA,AegBA,ERPE,CPTC,EMQI,CSQD,CRPC,APTA,AKSA,EUOE,CRPC,AFAS,CCDjB,GAAc,ADCtB,CJJqB,CAAC,CMIC,CAAC,CNJnB,AcWU,CbVF,AIEe,ALHF,ADLpB,AegBS,CTRc,ECCN,CLHjB,AFNwB,COSC,AQOhB,CbVW,AaUL,CTRb,ELHH,CAAL,EAAsC,CcWvB,EAAe,CbVxB,AFNoC,CegB3B,CAAf,CfhB6C,COStB,CAAf,SPTN,EAAwD;AaDrD,AXQC,AIEE,ARsBG,ASrBJ,ANJL,ADLE,AeiBJ,EAAA,IFnBW,AbEP,CF8BA,CIxBE,AFNA,EaFS,AZOP,EcYR,CFnBkB,APUL,ASSb,KTTQ,EJFU,ADDA,CCCC,AIEE,ELHsB,AcY3C,CACE,CdbA,EKGyB,CJFrB,AIEsB,CJFD,CaYpB,GTVC,CJFwB,IAAG,OWRD,WAClC,IADkC,EAElC,WAFkC,EAET;AAEzB,AXKQ,AODV,AHGS,AR2BG,AC9BR,AEAA,ADLC,AKQH,AUUI,IdbF,AcaE,CjBUF,AE9BA,CaGE,AJIA,AJGA,CCJE,ADIN,CNHM,CMGC,AUUE,CFjBD,AXKA,AaYE,CFjBD,AbDA,CDKC,GgBaN,CbZU,ADDA,CCCC,AHDA,AEAA,CcaG,CFjBd,CJIc,AVAhB,AEAA,AcakB,CbZZ,ADDW,AcaE,CbZD,AHDA,CUAE,CIJA,CAAtB,EAAyB,GJIJ,ARAnB,CcaE,Cdb0B,EQAgB,QRA5C;AYHA,AXKQ,AODV,AHGK,APHD,AQGE,ANHJ,ADLE,AKQF,AUUE,IdbF,AcaE,ENbA,EFGE,EMPE,AROA,AUUE,CRVD,AQUE,CbZD,AKEA,ANHA,CFCJ,CcLM,AROA,CJHC,CCCC,AKEL,AQUL,CFjBW,AJIA,AFGT,AFAS,CHFC,AODA,AJGA,CUUG,CRVD,AFAhB,CIHE,AMaiB,CNbD,AMaE,GFjBC,ANOjB,ANHiB,CYJC,AZIA,CFCJ,CAAC,CUDjB,CAAJ,EAA8B,AMa1B,ChBZE,CAAqB,AEDd,CFCP,AED2B,EFCH,EAAxB,GEDO,CCCiB,AHAM,AEDK,GFCnC,EcLS,CXIK,AHCsB,CcLxC,EZIW,CAAsC,EFC7C,EEDO,CFCsC,AEDjD,cFC+D,CAAC,KAAf,CAAqB,EAArB,CAD/C;AcHF,AXKQ,AODR,AX6BA,AC3BC,AQCG,ANHJ,ADLC,AekBC,INbF,ARAA,IMGI,EMPE,CfiCC,AiBhBE,CbZD,EDDE,CYJC,AJIA,ARAA,CCCC,AODA,CMaE,CFjBA,AXKA,AaYG,CNbjB,AMaE,CNbc,AX6BhB,GS1BmB,ENHnB,CYJsB,AZIA,CYJC,AJIvB,EAAyB,IRAzB,CAA8B,CAAC,CQA/B,CAAiC,GIJnB,CAAuB,EAAvB,CAAd,AJIA,EAA0C,ERAZ,EAAgB,EAAhB,KAAsB;AYHpD,AXEkB,AOC0B,AHKnC,ARyBV,AC3BA,AQCI,ANHD,ADLH,AKOC,AUWC,GjBMI,AiBXP,CFZE,APQS,CRyBR,AiBfD,CNf4C,CFN1C,CMGE,AROF,CQPG,AROF,EHLG,AagBA,CjBKD,AiBLE,CjBKT,AShBW,AFCP,CJJQ,AIIP,AUUM,CAAC,CNf4C,CFIzC,CEJ2C,AJKjD,EQRP,CAAiB,APQS,ACDT,EFCL,CCAc,ADAvB,CUUG,CFlBN,ANOsB,AQKxB,CdRyB,CAAC,AIKnB,CJLH,CMGO,EAAmB,AFEnB,CAAC,MAAL,KAAgB,CAAC,CAAC,MAAlB,IACC,IAAI,CAAC,SAAL,CAAe,CAAC,GAAD,EAAM,KAAN,KAAgB,CAAC,CAAC,KAAD,CAAD,KAAa,GAA5C,CAFJ,MAE2D,CAAC,CAJ9D,EAKE;AQVF,AXKK,AOHqC,AHMtC,ARyBP,AS1BO,ANHA,AIOF,AUSJ,EAAA,GNlBE,CJSE,EEJE,CLPA,AaoBC,CFpBC,APQE,ASYF,CRbC,CAAC,CNHC,AcgBX,CAAY,CTZG,ADGF,CEJJ,CAAH,CFIU,EEJE,GFId,CUSQ,CRbN,AQaM,CTZF,CORe,GAGnB,APKwB,CAAC,ELJN,CYDf,CEiBE,CTZwB,COL9B,AZCA,AcgBN,EFpBE,SPQI,EAA4C;AOJhD,AXEI,AOHL,AHMO,APHR,AQEK,ANHG,ADNR,AKaG,QQRG,AXEA,CHAC,ACPA,IMUM,CNVD,CaKC,AbLA,CCMC,EYDe,CACzB,CXCc,AFPX,CAAY,EEOE,AHArB,EGAM,AIGE,CNVD,CCMkB,ADNzB,CMU4B,ELJA,EKIpB,MLJ4B,CAAC,aAAT,CAAuB,yBAAc,EAAd,CAAvB,CAApB;AYCF,AXCA,AOHP,AHMS,APHT,AEDS,ADNT,AKaE,AUSD,CNtBF,AVVA,ACLA,KaqBQ,EXCA,EWDI,CEgBD,CFhBG,AXCF,CAAC,AIGE,GLJC,McgBd,CbfM,CAAgB,ADDA,CcgBF,CTZZ,CLJiB,ICCnB,CAAwB,KWDJ,AXCS,CDDC,CAAC,ECCC,QWFlC,AZCI;AYCF,AXCE,AKCJ,ANFI,AcgBN,MFhBI,IAFF,AXGI,ADDA,AcgBA,GRdG,CQcC,GRdR,AQcW,CAAC,EdhBE,CAAC,AcgBA,CbfC,CAAC,ADDH,AcgBG,CdhBb,AcgBc,Gbfd,ADDiB,CCCC,AaeX,CAAb,IbfM,ODD8B,CAAC,CAAd,CAAgB,OAAhB,CACf,QADe,EAEf,GAAG,aAAa,CAAC,CAAd,CAAgB,IAFJ,CAAjB;AYCF,AXCE,AOHV,AHKU,APHH,AQEF,ANCK,ADVV,AKaE,AUUE,IAAA,EFhBI,AJFF,AVEO,ACPP,AeuBA,CAAC,EVVE,CHLC,ADEA,CcaN,CTbU,COHC,CEgBD,CFhBG,CXCD,CAAC,AIEE,CDGjB,CIRiB,AVEO,EGChB,ADEW,AcaA,CbfC,AOHC,AHKb,APHoB,AEGR,AcaA,ETbI,APHG,ECPH,AeuBL,CAAjB,ChBhBgD,CUF9B,ATLO,ISKkB,ERKrC,ADVwB,CCUE,YAA1B,CAAuC,QAAvC,EAAiD,WAAjD;AYNJ,AXKM,AOHV,AHKU,APHV,AQ3BoC,AN8B5B,ADVR,AKaD,AUUE,CVzBH,EElBgB,CAAd,CMsB6B,CAA3B,AJGE,ETLE,CDOC,ECPE,CEQC,EFRU,CMUL,APHF,CGCC,COHC,AVEA,CGCC,AOHA,ATLQ,CDOxB,ACPyB,ESKrB,CAAgB,ATLA,CMUV,CNVV,EMU0B,GGLtB,CAAJ,CHK+B,CGLD,IHKJ,CAAW,GAAX,CAAe,CAAC,CJFZ,GIGlB,CAAC,CAAC,EAAF,CAAK,KJJG,CIIE;AOFpB,AXAQ,AOHR,AHMY,APJf,AQEC,APTA,CDKK,CQIL,APTA,ESKE,IIGI,ANCA,CAAC,GLDG,CKCV,CAAY,CEJC,ATLA,CEQC,AOHA,CHMK,ACFnB,CLDgB,AFRA,CaQC,AJHf,AFIe,CEJC,EIGY,CXFV,CWElB,ENCF,CEJE,AFIuB,EEJE,CHMb,ACFc,GPTG,COSA,APR7B,KSIA,QTJa,CAAC,IAAd,CAAmB,CAAC,CAAD,EAAI,CAAJ,KAAW,CAAC,CAAC,CAAD,CAAD,GAAO,CAAC,CAAC,CAAD,CAAR,GAAc,CAAC,CAAf,GAAmB,CAAjD,CAD6B,EAE7B,GAF6B,CAA/B;AESU,AOHT,AHMY,ACFX,ANAI,AIGD,AUWL,IRdE,EFGS,GEHJ,AQcA,CRdC,CDAI,CJDF,AIAgB,CAAhB,ACCH,ANAI,CMAT,GAAa,ELDE,CKCC,AFGO,CHJN,AKCA,EFGU,CEHX,CAAhB,KFG0B,GJHH,CIG6C,QJHhE;AYDJ,AXHkB,AOCrB,AHOU,ACHR,ANAK,ADPN,AKUA,AUWE,CNtBJ,EFME,CQgBE,EfrBE,EKUE,CUWC,EbnBC,AamBC,CAAC,CFhBC,AZEA,CccF,EAAK,GfrBG,AKUA,CLVC,CeqBT,CVXW,CUWC,GfrBjB,GAAuB,AeqBlB,CfrBT,AeoBO,EfpBuB,CCOL,GIGS,CAAC,GAAf,CAAmB,OJHjC,AIGc,KAA+B,EAAnD;AQJI,AXCG,AIIA,ACHP,ANAQ,ADPN,AeqBA,ERdF,EPPE,AeqBA,KbtBI,CasBE,EFhBE,ANEA,AQcA,CRdC,GAAX,ANAc,CMAC,CQcA,EFhBG,ENElB,ANAoB,CYFW,EZER,ADPA,CAAC,QaKkB,CAAC,GAAZ,CAAgB,MAAM,CbL9B,CAArB,EaKsD,MZEd,EAAnB,CAAf;AYDF,AXCA,AOHR,AHOO,APRA,AQKL,ANAQ,ADPP,AKSD,AUYI,ERdJ,CPTA,GSKI,AVDO,AMOP,EHHE,CFNC,IOOI,AQcA,CFhBC,ENEE,ANAA,CYFC,ARIA,CAAC,EQJE,AXCA,AKClB,ANAkB,EQJE,CPGC,ADCA,AccV,ChBnBkB,AMOzB,AUYO,CNlBY,CIEC,AJDxB,CICyB,AdHQ,AMOR,CAAzB,AUYe,ChBnBiB,CMOJ,CJFC,CAAC,CYFN,AXCO,AOHR,AVDgC,CcGjD,AXC0B,CODhC,IAFuB,EAGvB,CPAM,COHiB,ERIF,CAAuB,EQApC,ERAwC,MAAM,GAAjC,CAAb;ACAF,AOCN,AVLA,AQKA,ANAQ,ADPN,AKSA,ILTA,ESOE,CAAC,CPDC,CHJC,AQKA,CNAC,CIEC,GEFT,ELDc,EGGE,CHHC,AGGA,CNPC,AEKA,ADPA,CCOC,CFLC,AMOX,CHHH,ADCY,ADPG,AKUjB,CNRJ,AEKQ,GQAiB,ARAA,CQAC,ATPxB,GSOG,CAAyB,EJGf,CACR,GADH,CIHC,AJIM,CIJX,ARAsC,CAAC,CQAC,ARAf,CAAgB,OAAhB,CACf,CIGc,GJJC,CIIE,CJFjB,GAAG,aAAa,CAAC,CAAd,CAAgB,IAFJ,CAAjB;AYFF,AXED,AOCH,AHGS,APRZ,AQKA,ANGS,ADVP,AKWO,CNXH,GUOH,AHGS,MLAH,EYNE,AROI,CQPH,CZMC,CAAC,SQHS,AHGS,CGHR,EHGQ,CGH7B,CAAyB,CIHC,AZMpB,AcWoB,CFjBC,AZMA,GYNlB,CAAsB,CJG/B,CRGM,CYNG,AJGyB,CIH9B,CJGJ,AMc0B,CFjBW,AEiBX,IAAA,CAAK,EAAE,CAAC,UAAR,CAAmB;AFhBvC,AJGP,AHGK,ALnBF,ADSL,AKUiB,CLrBlB,OKqBkB,ECAN,KAAK,COND,IAAI,GAAG,IPMf,EAAuB,EONA,CAAC,OEiBO,UAAA,CAAA,IFjBhB,AEiBgB,CAAK,CFjBlC,IEiBuC,CAAC,KAAX,CAAiB;AFhB9C,AXCJ,AIKI,ACAH,ANAF,AIDW,KJpBZ,CCgBE,AKKO,IFDW,EECL,CDAJ,ECAO,CLLN,AKMd,GLNiB,CAAC,GGIV,ECCA,CJLgB,EIKI,ACC5B,EMPe,CNOY,CLNV,CIKT,ACAY,CMNZ,AXCwB,CAAf,AagBgB,CFjBL,AXCxB,EKOQ,IMRJ,GEiByB,CAAA,IAAA,CAAK,MAAM,CAAC,KAAZ,CAAkB;AFhB3C,AXCJ,AOCJ,AFMA,ANFE,ADXG,ICWH,ECLE,AOCA,ATPO,CSON,CFMC,EMRE,EXCE,CKOC,CPbQ,CEMN,CKOC,CLPV,AFNkB,CACtB,ECUkB,ADXI,CCWH,CDTnB,COWqB,CAAC,ANFpB,CAAqB,EYNE,AJEA,CIFC,AJEA,ETL1B,CaGQ,AJEH,CIFyB,AJEA,CTLJ,CCSxB,CYNM,CNQa,ANFa,CYNC,CAAC,ANQA,CEN/B,EAAkC,ARIA,CYNJ,AZMK,EYNE,ANQD,CENpC,CAAL,ARIkC,ADTK,CaGM,AZMA,ADTL,CSKM,IIFI,CAAC,AbL7B,ECW+B,CAAC,CYNT,CAAW,AbFvC,IaE2C,CAAC,GZM3B,CAAhC,MYN2C,CAAV,CAA3B;AACD,AXCJ,AOCD,AHGM,APJV,AQOI,ANFD,ADRD,AKMQ,IIFN,AFMA,EPVE,GaFE,AdKC,CMGK,CAAC,CCCD,CCGD,CAAC,APVA,CaEC,ARII,ECCA,ENPA,CDGnB,CAAqB,AQOjB,CAAkB,CAAC,CENC,CAAC,AHGf,CPJV,COI6B,ACGF,CENvB,AVD2B,AQOH,CENC,CFMzB,AFJ8B,CAAC,CLNH,CAAC,GSI7B,EAAkC,IAAlC,ATJF,EAA0C,AKMV,CAAxB,CIFoC,CJEK,CIF/C;AIDM,AXCP,AOCA,AHGS,APJV,AQOC,APVC,AKMQ,GEEW,CAArB,APRE,EAAE,GDGG,KAAK,COIG,APJF,AMGI,CQJH,CdCP,GcDW,CdCC,EcDE,APKX,CAAc,EPJA,CAAC,EAAN,EOIT,CAAsB,CAAC,CPJD,GOIK,CAAC,EOLA,APK5B,ADDgB,CQJa,GAAlB,CAAsB,CRIZ,EQJV,EAA2B,CAA3B,CAAb,KdCR;AcAQ,AXCT,AIIW,APJX,AQOC,ANFA,ADRC,AKMW,CH/CK,CAAZ,CFuCL,GOYI,ENFE,CDRC,CKMK,CAAC,GUaD,CTZG,ACGF,GAAmB,ANFhB,EMEhB,CNFyC,EKD/B,CSYE,CAAA,CTZc,IOLX,AEiBH,CAAM,EdXmC,CYN7C,AZM8C,CKD5C,COLkB,AEiBL,CdXkB,CAAiB,EcWhC,EFjBlB,KZMiC,CAAzC;AYLO,AJCP,AHIS,ALCT,ADRE,AKMU,AUaA,ENhBZ,ARKA,McWY,EVbA,AUaE,CfnBL,AemBM,CdXL,CAAC,EDRE,MemBD,CNhBQ,ATHX,CSGY,ARKrB,ADRqB,AKMI,CJEH,AIFI,AUaE,CVbhB,CIHZ,CAAyB,CJGK,CUalB,CfnBgB,CCQ5B,CAA8B,EQL9B,ATH+B,ESGG,CJGtB,EJEyB,CQLrC,EAAwC,IAAxC,CAA6C,EAA7C,GRK8B,EAAsB,EAAtB,KAA4B;AQJ3D,AHIQ,APLT,AQOE,ANDE,ADRE,AKMO,AUaA,CN5Bb,CFkBE,ERPE,ECFE,COSC,AQQO,CRRN,AQUM,CVhBK,CEMjB,ANDQ,CIFK,EEGD,ERPC,CEMC,EFN6C,CEM1C,ADRA,CAAC,COSP,CRPoD,ECF3D,COS8C,APT3B,CACjB,GDCqD,AEMhC,CAAC,CFN9B,CEM6B,ADPhB,CCOM,CAAe,EIFL,EJEV,CAAoB,UILpB,CAAP,EJKwC,CAAC,CAAd,CAAgB,IAApC,CAAf;AYNI,APMD,ACEH,APRM,AKKC,IEGP,IPRM,EAAE,GOQC,CAAC,CMRC,GAAP,ANQJ,CAAe,QAAf;AMPG,AJEA,AVFA,AQQH,ANFA,ADNM,MSEG,AVFA,CcXoB,CAA3B,AZiBE,ADNE,EDAO,CUEC,AFMP,ERRS,CUEC,AVDnB,AEKY,CQHZ,ARGa,ADNE,EOQD,EENK,CRIjB,CQFF,CREoB,GFNF,EAElB,GAAG,GUEH,GAAuB,EAFJ,IVFD,CUKG,IVFP;AUGd,AHCY,APHZ,AQKI,ANFA,ADNG,AKIC,ICEI,EPHR,CCPmB,CSSjB,CTJA,GDEI,AQKA,ANFA,AcYA,CfjBA,AKGK,CLHJ,CSIE,AVFY,EOGA,ACEV,APPT,CSIU,EHCS,ACEP,CNFC,CDLA,AKGX,AUcE,CAAA,CdZyB,EFHC,AgBe1B,ChBf2B,AgBgB3B,ERXiB,AQWf,ChBhBa,AQKG,ANFa,ADVlB,AeuBV,ChBhB4B,ACPrC,GeuBM,EdbqC,CME7B,ANF8B,AcclC,CRZsB,IRLX,AEGrB,CFHJ,CUEA,EFGkB,CAAd,AQYU,CAAA,IAAI;AFpBd,AJMJ,AHCM,ALAF,AIFG,EICP,GJXI,EAWG,GQNC,APOE,CAAC,EGDA,AJXP,CIWQ,AJAE,CAAC,CCCC,GDDG,CAXf,CQKe,AJMR,AJZF,CQMW,AJMpB,CJCI,GQPI,CAAiB,ARNhB,CCaH,ADAG,CQPD,CPOsB,CLAjB,GICT,CQR6B,EZOf,IICP,CAAC,CQR6B,CAAC,CRQtC,CACE,EQT2B,CAAc,EAAd,CAA7B,EAAgD,GRSnC,CACR,GADH,CACO,aAAa,IAAG;AQTvB,AJMN,AHCQ,APJR,AQKI,ANDE,ADLF,AKQM,EIJV,IVHI,CAAC,CcHC,AZOA,EMCE,APNA,CAAC,CKQO,CCHH,APJb,EcHa,AdGA,AQKA,ENDE,AcWL,CFlBM,AJMA,AFEA,ANDA,CQDC,AFEb,CQcU,CRdK,IMRI,APOf,ALAF,CYPkB,AJMR,ARCQ,CAAC,ADLrB,CSIsB,AHCE,CNLD,CeoBb,Cdfc,Aced,CFtBE,AJMA,AHCR,CONA,CJKwB,CMgBd,KNhBmB,CILrB,CAAC,OAAT,CAAiB,MAAM,IAAG;AACxB,AJKR,AHCM,APJN,AQKI,ANDE,ADLF,AKOY,QNNZ,AQKA,APNA,AKOY,CAAF,CIHR,KAAK,CILG,CNOD,CEFC,AFEA,ANDA,CAAC,CAAC,EFJE,EcFI,ANOlB,ANDE,CQDe,AVHQ,AQKR,CEFC,CILG,AdEzB,ECDyB,COMrB,APNsB,EOME,CDDb,ACCX,KMPgC,AJKtB,CILuB,AJKF,AHCf,IGDN,CAAd,EILyB,CAAoB,GbCpB,CAArB,EaDqB,CAAjB;APOA,APJR,AQKG,ANDK,ADLJ,AKMe,QLNf,AKMe,ENLb,OEIO,GFJG,GAAoB,CCDhB,CDCpB,ECDuB,GMKR,CNLX,IMKgB,OLAO,GKAnB,CLAA,CKA+B,KAAK,MAAL,EAA/B;AONA,AJKR,AHEO,ACCN,ANDS,ADLP,AKKW,KEJd,GEEI,CHAE,CDEmB,CCAhB,EGFA,CILG,AJKF,AREA,CAAC,CAAC,CcOJ,CASD,CNlBH,CREM,CAAO,CYPG,CROZ,CIFY,CILG,CAAC,CAAhB,EAAmB,AJK3B,EAA2B,CREjB,GAAqB,CKAR,ALAS,CAAC,KAAvB,OKFJ,EAGG,IAHH,CAGQ,YAAY,MAAM,iCAAe,IAAf,CAH1B,EAIG,IAJH,CAIQ,MAAK;AORT,AJKR,AHIQ,APPV,AQMD,ANDW,ADLT,AKKO,GEPV,EPVS,CSeL,ATfF,GDYK,CMKO,CIFL,CILG,AJKF,CVHC,CAAC,COOK,EGJb,AVHW,CAAb,CMKqB,CIFL,AVHA,CAAC,CMKgB,CQPZ,CAAC,AdEF,GUGG,AHIb,CGJc,EILd,APSoB,COTD,IPSnB,CPPsB,CAAC,AMKe,CAAC,CQPvC,CJKM,CILuB,AJKF,CIL3B,CdEV,EUGgB,AVHyB,CUGvC,AVHwC,EAA1C,EAA8C,CMKE,CAAxC;AQNC,AJKR,AVHC,ACAH,YDAS,EgBqBE,ShBrBS,CgBqBT,CAAA,ChBrBY,CgBqBZ,CAAG,OAAH,EAAY,ChBrBY,CAAC,CAAD,CAAhC,EgBqByB;ANjB5B,AHGW,APNR,AQKJ,ANDU,AIAA,AUiBE,GNvBI,CAAhB,IMuBY,CRhBL,CFDO,AUiBA,CVjBJ,AUiBK,ChBrBL,CMIO,CCED,ACDhB,CQgBY,EdjBG,CciBO,CTfD,ASeE,EAAE,ChBrBL,AgBqBM,GhBrBH,CgBqBX,STfA,CPNsB,COMK,APNJ,CAAD,CAA9B,GEIyB,QAAnB;AYNA,AJOV,AHEc,APNV,AQKL,ANDa,ADLZ,AKKY,AUiBD,CRjCN,CEgBL,IVJI,CgBmBQ,CVfA,AUiBA,CNjBL,ATLA,CSKC,IRAI,CAAC,CYPG,AZOF,ADLA,CMOK,ANPJ,EaFI,CdGD,AEIN,CAAO,AIAM,CQPH,AJOtB,AJA0B,CIAL,AJAT,CNJU,ACDf,EAAP,AKK8B,CIA9B,AJA+B,EIAJ,AJAf,CQPI,EZOJ,CKEE,ALFiB,CYPG,AdG9B,AEI4B,CAAC,CKEK,KGFtC,AHEc,CLFF,SYPuC,CAAC,GAAlB,CAAsB,MAAtB,CAAxB;AACA,AJQV,AHCc,ALFF,ADLb,AKKY,CL3BN,OS4BC,KAAK,GAAG,CIRG,APSE,QOTM,CAAC,GAAT,CAAa,APShB,KOTqB,IAAG,CJQjB;AIPT,AJOW,AHEV,APPT,IUKmB,KAAK,CVLpB,CUKsB,AVLrB,OUK4B,CIPlB,AJOmB,GVLlB,CAAC,QUKS,CAAqB,EVL/B,CAAhB,CUK0B,CVLK;AcDrB,AJMO,AHGV,APPL,AEII,AIAA,GIAI,CAAd,IVJM,COHE,CDOM,IQNA,GZMC,CYNG,CRMR,CQNU,CRMK,CNJL,IAAI,WAAlB,KEIuB,GYNK,SZMxB,IYPS;AAEL,AJOd,AHEO,APPD,AEIM,AIAA,OCVN,MAaO,COTC,AZMF,CAAC,AIAM,CJAL,EYNI,EAAE,AZMR,CAAO,IYRA,MJUjB,GRFU,CAAqB,EQE1B,GJFqB,MAAK,CJArB,CAAkC,CAAC,CAAC,OAApC,EAA6C,CAAC,CAAC,IAA/C;AYLE,AJQV,AHCI,APPH,AEIO,AIAE,IIEV,QMgBM,CTfG,COTC,ERMM,CIEH,CAAC,GIRG,CEwBX,CFxBa,ARMI,AUkBjB,ENhBO,CAAb,AJF0B,CAAC,AUkBrB,CAAK,CTfP,ADHM,AUmBJ,GThBsB,ASgBnB,EAAE,CAAC,CThBR,GSgBK,CAAQ,GAAR,CACD,CAAC,IAAI,UAAA,CAAA,IAAI;AF7BF,AJYf,AHCG,IGDH,OAAO,CAAC,CIZA,UE8BS,CNlBjB,CAAqB,IAArB,EAA2B,EMkBV,CAAA,ENlBe,CAAC,AMkBhB,CAAI,CAAC,GNlBtB,AMkByB,EAAR,CAAW,IAAI,UAAA,CAAA,IAAA,CAAK,QAAQ,CAAC,EAAd,CAAiB;AFzB1C,AJQP,AHCC,APRD,AEIM,AIAI,IIGV,MVPI,CcPS,CAAP,AdOA,EMIQ,CNHZ,AgBqBO,CADE,CdjBA,CQGG,AMoBR,CNpBS,EJHL,EAAa,ENHX,CUME,AVND,CUMb,CMoBM,CAAA,ChB1BJ,CAAgB,EgB0BR,SdvBe,aAAnB;AYJD,AJQN,AVNK,AEGI,AIAI,GIFhB,EAME,GVPM,CcfA,AdeC,CchBO,CAAV,AJuBE,AVPG,CUOF,AJJO,EJAJ,CAAC,CAAC,CQIA,CAAC,ERJH,CAAO,EQIX,CANR,CJE6B,CAAC,CAAd,GAAkB,IJAtB,CAAqB,EIAjB,UJAJ,CAAkC,CAAC,CAAC,OAApC,EAA6C,CAAC,CAAC,IAA/C;AYHN,AJUN,AH/D2B,APoDL,AEKV,AIAG,GC3Df,IPsDM,CcCA,CJUC,EVTI,CAHP,CgBqBW,CNTf,AMSU,CFnBG,AE4BH,GF5BM,OAAO,CAAC,MAAR,CACR,WAAW,CAAC,OAAZ,CAAoB,MAAM,IAAG;AAC3B,AJSX,AHFA,APPK,AMGS,CIrBR,AHxCA,QDwDc,CNEX,CMGO,CNHL,GAAG,CcAG,GAAG,CE2BD,EF3BI,OdAK,CcAX,AdAY,AgB2BV,CAAA,EAAA,CF3BgB,AE2Bb,EhB3BR,AMGgB,GNHQ,CAAjC,CgB2Bc,EAAY,MV7BX,AU6BiB,CV7BxB,CQEuC,CAAC,GAAlB,CAAsB,IE2BT,EF3Bb,AE2BhB,CF3BR,AE2BwC;AF1BxC,AdAN,AEEM,AICC,UQHD,AdAF,OEEO,UYFY,CAAC,AdAF,GAAG,GcAnB,CAAyB,CdA/B,KcAM,CZEmB,MAAnB;AYDA,AdAN,AEEQ,OclBR,GhBgBI,IEEI,CAAC,CAAC,CYFG,GZEL,CAAO,EFFE,EcAI,CAAC,AdAF,GcAP,CAAa,CdA1B,GEEQ,CYFuB,AZEF,IYFK,OZE1B,CAAiC,CAAC,CAAC,IAAnC;AYDA,AdAR,AEEQ,AIAF,AUyBP,UhB3BK,GMES,MQFE,GRET,MNFgB,GAAG,KAAzB;AcCU,AdAV,AEdI,AIgBC,AUvBF,GAAP,EVOM,EAiBG,GNHD,GMdF,CQcQ,ARGE,CAAC,GQHC,CRGG,CQHD,ARdd,CADF,CAdK,CN6BY,AM7BnB,GN6BsB,EAApB,iBcA8B,MADf;AAEL,AZEP,AIGN,AUsBF,CA3ED,EViBE,MJe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","file":"example.77de5100.js","sourceRoot":"..","sourcesContent":["export interface DOMUpdate {\n  node: Node;\n  newNode?: Node;\n  type: DOMUpdateType;\n  value?: string;\n}\nexport enum DOMUpdateType {\n  TEXT,\n  REPLACE_NODE,\n  ADD_NODE,\n  INSERT_BEFORE,\n  REMOVE,\n}\n\nexport type DirectiveGenerator<Args extends any[] = any[]> = Generator<\n  DOMUpdate[] | Promise<DOMUpdate[]> | void,\n  void,\n  Args\n>;\n\nexport type DirectiveGeneratorFactory<\n  N extends Node = Node,\n  Args extends any[] = any[]\n> = (node: N, ...initialArgs: Args) => DirectiveGenerator<Args>;\nexport interface DirectiveResult<\n  N extends Node = Node,\n  Args extends any[] = any[]\n> {\n  factory: DirectiveGeneratorFactory<N, Args>;\n  args: Args;\n  directive: Directive;\n}\nexport type Directive<N extends Node = Node, Args extends any[] = any[]> = (\n  ...args: Args\n) => DirectiveResult<N, Args>;\nexport const IS_DIRECTIVE = Symbol('directive');\nexport function createDirective<\n  Args extends any[],\n  N extends Node = any,\n  F extends DirectiveGeneratorFactory<N, Args> = DirectiveGeneratorFactory<\n    N,\n    Args\n  >\n>(\n  factory: F\n): F extends (node: N, ...initialArgs: infer A) => DirectiveGenerator<any>\n  ? Directive<N, A>\n  : never {\n  return ((factory: F) => {\n    const directive = function(...args: Args) {\n      return {\n        is: IS_DIRECTIVE,\n        factory,\n        args,\n        directive,\n      };\n    } as any;\n    return directive;\n  })(factory);\n}\n","import { IS_DIRECTIVE, DirectiveResult } from './directive';\n\nconst isLetter = (c: string): boolean => {\n  return c.toLowerCase() != c.toUpperCase();\n};\n\nexport enum DirectiveType {\n  TEXT,\n  ATTRIBUTE,\n  ATTRIBUTE_VALUE,\n}\nexport interface DirectiveData {\n  d: DirectiveResult;\n  t?: DirectiveType;\n  a?: string;\n}\nconst insertAttributeMarker = (\n  marker: string,\n  si: number,\n  appendedStatic: string\n): string => {\n  while (si++) {\n    const char = appendedStatic.charAt(si);\n    if (!char) {\n      break;\n    }\n    if (char === ' ') {\n      return (\n        appendedStatic.slice(0, si) + ' ' + marker + appendedStatic.slice(si)\n      );\n    }\n  }\n  return appendedStatic;\n};\nexport const getTextMarker = (id: number): string => {\n  return `tm-${id}`;\n};\nexport const getAttributeMarker = (id: number): string => {\n  return `data-am-${id}`;\n};\nexport interface HTMLResult {\n  template: HTMLTemplateElement;\n  directives: DirectiveData[];\n  key?: string;\n}\nexport type HTML = typeof html;\nfunction isDirective(thing: any): boolean {\n  return thing.is && thing.is === IS_DIRECTIVE;\n}\nlet resultCache: WeakMap<TemplateStringsArray, HTMLResult> = new WeakMap();\nexport const html = (\n  staticParts: TemplateStringsArray,\n  ...dynamicParts: any[]\n): HTMLResult => {\n  let result: HTMLResult = resultCache.get(staticParts);\n  if (!result) {\n    let appendedStatic: string = '';\n    const directives: DirectiveData[] = [];\n    for (let i = 0; i < dynamicParts.length; i++) {\n      const dynamicPart = dynamicParts[i];\n      const staticPart = staticParts[i];\n      appendedStatic += staticPart;\n      if (!isDirective(dynamicPart)) {\n        appendedStatic += dynamicPart;\n        continue;\n      }\n      let id =\n        directives.push({\n          d: dynamicPart,\n        }) - 1;\n      let si = appendedStatic.length + 1;\n      let attributeValueMode = false;\n      let attributeMode = false;\n      let attributeNameFound = false;\n      let attributeName = '';\n      while (si--) {\n        const char = appendedStatic.charAt(si);\n        const nextChar = appendedStatic.charAt(si - 1);\n        const nextNextChar = appendedStatic.charAt(si - 2);\n        if (char === '>' || si === 0) {\n          let marker = getTextMarker(id);\n          appendedStatic += `<${marker}>&zwnj;</${marker}>`;\n          directives[id].t = DirectiveType.TEXT;\n          break;\n        }\n        if (\n          char === '\"' &&\n          nextChar === '=' &&\n          isLetter(nextNextChar) &&\n          !attributeMode\n        ) {\n          attributeValueMode = true;\n          continue;\n        }\n        if (char === '\"' && nextNextChar !== '=' && !attributeValueMode) {\n          attributeValueMode = false;\n          attributeMode = true;\n          continue;\n        }\n        if (\n          attributeValueMode &&\n          char !== '\"' &&\n          char !== '=' &&\n          !attributeNameFound\n        ) {\n          if (char !== ' ') {\n            attributeName = char + attributeName;\n          } else {\n            attributeNameFound = true;\n          }\n        }\n        if (char === '<' && attributeValueMode) {\n          appendedStatic = insertAttributeMarker(\n            getAttributeMarker(id),\n            si,\n            appendedStatic\n          );\n          directives[id].t = DirectiveType.ATTRIBUTE_VALUE;\n          directives[id].a = attributeName;\n          if (appendedStatic[appendedStatic.length - 1] === ' ') {\n            appendedStatic = appendedStatic.slice(0, appendedStatic.length - 1);\n          }\n          break;\n        }\n        if (char === '<' && !attributeValueMode) {\n          appendedStatic = insertAttributeMarker(\n            getAttributeMarker(id),\n            si,\n            appendedStatic\n          );\n          directives[id].t = DirectiveType.ATTRIBUTE;\n          break;\n        }\n      }\n    }\n    appendedStatic += staticParts[staticParts.length - 1];\n    const template = document.createElement('template');\n    template.innerHTML = appendedStatic.trim();\n    result = {\n      template,\n      directives,\n    };\n  } else {\n    let directiveIndex: number = 0;\n    result = {\n      ...result,\n      directives: result.directives.map(directive => {\n        const { a, t } = directive;\n        return {\n          a,\n          t,\n          d: undefined,\n        };\n      }),\n    };\n    dynamicParts.forEach((value: any) => {\n      if (isDirective(value)) {\n        result.directives[directiveIndex].d = value;\n        directiveIndex++;\n      }\n    });\n  }\n  resultCache.set(staticParts, result);\n  return result;\n};\n","export enum PriorityLevel {\n  IMMEDIATE = 0, //synchronous\n  USER_BLOCKING = 250, //.25s timeout\n  NORMAL = 5000, // 5s timeout\n  LOW = 10000, // 10s timeout\n  IDLE = 99999999, // no timeout (run only when nothing else is scheduled)\n}\ntype ScheduledJob = [() => void, number];\nlet scheduledJobs: ScheduledJob[] = [];\nlet schedulerRunning: boolean = false;\nconst MAX_ELAPSED: number = 17;\nconst processJobQueue = (\n  queue: ScheduledJob[],\n  now: number\n): ScheduledJob[] => {\n  let index = 0;\n  for (let length = queue.length; index < length; index++) {\n    const totalElapsed: number = Date.now() - now;\n    const [cb, latestEndTime] = queue[index];\n    if (now >= latestEndTime || totalElapsed < MAX_ELAPSED) {\n      cb();\n    } else {\n      break;\n    }\n  }\n  return queue.slice(index);\n};\nconst processScheduledJobs = () => {\n  const now: number = Date.now();\n  scheduledJobs = processJobQueue(\n    scheduledJobs.sort((a, b) => (a[1] < b[1] ? -1 : 1)),\n    now\n  );\n  if (scheduledJobs.length > 0) {\n    requestAnimationFrame(processScheduledJobs);\n  } else {\n    schedulerRunning = false;\n  }\n};\nexport const schedule = (\n  cb: () => void,\n  priority: PriorityLevel = PriorityLevel.NORMAL\n): Promise<void> => {\n  if (priority === PriorityLevel.IMMEDIATE) {\n    cb();\n  } else {\n    return new Promise(resolve => {\n      scheduledJobs.push([\n        () => {\n          cb();\n          resolve();\n        },\n        Date.now() + priority,\n      ]);\n      if (!schedulerRunning) {\n        requestAnimationFrame(processScheduledJobs);\n        schedulerRunning = true;\n      }\n    });\n  }\n  return Promise.resolve();\n};\nexport type Schedule = typeof schedule;\n","import {\n  HTMLResult,\n  DirectiveType,\n  getTextMarker,\n  getAttributeMarker,\n} from './html';\nimport { DirectiveGenerator, DOMUpdate, DOMUpdateType } from './directive';\nimport { schedule } from './scheduler';\n\nconst renderedNodesMap: WeakMap<HTMLElement, Node[]> = new WeakMap();\nexport const clear = (container: HTMLElement) => {\n  if (renderedNodesMap.has(container)) {\n    renderedNodesMap\n      .get(container)\n      .forEach(node => container.removeChild(node));\n    renderedNodesMap.delete(container);\n  }\n};\nconst generatorMap: WeakMap<HTMLElement, DirectiveGenerator[]> = new WeakMap();\nexport const render = (\n  container: HTMLElement,\n  htmlResult: HTMLResult\n): void => {\n  let fragment: DocumentFragment;\n  if (!renderedNodesMap.has(container)) {\n    const generators: DirectiveGenerator[] = [];\n    generatorMap.set(container, generators);\n    fragment = htmlResult.template.content.cloneNode(true) as DocumentFragment;\n    htmlResult.directives.forEach((directiveData, id) => {\n      switch (directiveData.t) {\n        case DirectiveType.TEXT:\n          const placeholder = fragment.querySelector(getTextMarker(id));\n          const textNode = placeholder.firstChild;\n          generators[id] = directiveData.d.factory(\n            textNode,\n            ...directiveData.d.args\n          );\n          placeholder.parentElement.replaceChild(textNode, placeholder);\n          break;\n        case DirectiveType.ATTRIBUTE:\n        case DirectiveType.ATTRIBUTE_VALUE:\n          const marker = getAttributeMarker(id);\n          const node = fragment.querySelector(`[${marker}]`);\n          generators[id] = directiveData.d.factory(\n            node,\n            ...directiveData.d.args\n          );\n          node.removeAttribute(marker);\n      }\n    });\n    renderedNodesMap.set(container, Array.from(fragment.childNodes));\n  }\n\n  const generators: DirectiveGenerator[] = generatorMap.get(container);\n  htmlResult.directives.forEach(async (directiveData, id) => {\n    const result = generators[id].next(directiveData.d.args);\n    if (result.value) {\n      const domUpdate: DOMUpdate[] = await result.value;\n      schedule(() => {\n        domUpdate.forEach(d => {\n          switch (d.type) {\n            case DOMUpdateType.TEXT:\n              d.node.textContent = d.value;\n              break;\n            case DOMUpdateType.ADD_NODE:\n              d.node.appendChild(d.newNode);\n              break;\n            case DOMUpdateType.REPLACE_NODE:\n              d.node.parentElement.replaceChild(d.newNode, d.node);\n              break;\n            case DOMUpdateType.INSERT_BEFORE:\n              d.node.parentElement.insertBefore(d.newNode, d.node);\n              break;\n            case DOMUpdateType.REMOVE:\n              d.node.parentElement.removeChild(d.node);\n              break;\n          }\n        });\n      });\n    }\n  });\n  if (fragment) {\n    container.appendChild(fragment);\n  }\n};\n","import { createDirective, DOMUpdateType, DOMUpdate } from '../directive';\nimport { HTMLResult } from '../html';\nimport { render } from '../render';\n\nexport const sub = createDirective(function*(\n  node: Text,\n  htmlResult: HTMLResult\n) {\n  if (node.nodeType === 3) {\n    const start = document.createComment('');\n    let result: DOMUpdate[] = [\n      {\n        type: DOMUpdateType.REPLACE_NODE,\n        node,\n        newNode: start as any,\n      },\n    ];\n    let prevTemplate: HTMLTemplateElement;\n    let prevFrag: DocumentFragment;\n    let prevChildren: Node[] = [];\n    for (;;) {\n      if (prevTemplate === htmlResult.template) {\n        render(prevFrag as any, htmlResult);\n      } else {\n        const frag = document.createDocumentFragment();\n        render(frag as any, htmlResult);\n        prevChildren.forEach(child => {\n          result.push({\n            type: DOMUpdateType.REMOVE,\n            node: child,\n          });\n        });\n        prevChildren = [];\n        frag.childNodes.forEach(child => {\n          prevChildren.push(child);\n          result.push({\n            type: DOMUpdateType.INSERT_BEFORE,\n            node: start,\n            newNode: child,\n          });\n        });\n        prevTemplate = htmlResult.template;\n        prevFrag = frag;\n      }\n      htmlResult = (yield result)[0];\n      result = [];\n    }\n  }\n});\n","export const getOnlySetupError = (subject: string): string =>\n  `${subject} can only be used during setup!`;\n","import { getOnlySetupError } from './misc';\n\nconst global: { __$c: HTMLElement } = window as any;\n\nexport const setUpContext = (context: HTMLElement, cb: () => void): void => {\n  global.__$c = context;\n  cb();\n  global.__$c = undefined;\n};\n\nexport const getElement = (): HTMLElement => {\n  if (global.__$c) {\n    return global.__$c;\n  } else {\n    throw getOnlySetupError('getElement');\n  }\n};\n","import { getElement } from './context';\nimport { schedule, PriorityLevel } from './scheduler';\n\nexport type CleanUp = () => void;\nexport type SideEffect = () => void | CleanUp;\ninterface SideEffectsMapItem {\n  e: SideEffect;\n  d?: () => any[];\n  p?: any[];\n  c?: CleanUp;\n}\nconst sideEffectsMap: WeakMap<\n  HTMLElement,\n  SideEffectsMapItem[]\n> = new WeakMap();\n\nexport const sideEffect = (effect: () => void, dependencies?: () => any[]) => {\n  const element = getElement();\n  sideEffectsMap.set(\n    element,\n    (sideEffectsMap.get(element) || []).concat({\n      e: effect,\n      d: dependencies,\n    })\n  );\n};\nconst shouldEffectRun = (effectMapItem: SideEffectsMapItem): boolean => {\n  const { d, p } = effectMapItem;\n  let shouldRun: boolean = true;\n  if (d) {\n    const deps = d();\n    if (\n      p &&\n      (deps === p ||\n        (deps.length === p.length &&\n          deps.findIndex((dep, index) => p[index] !== dep))) === -1\n    ) {\n      shouldRun = false;\n    }\n  }\n  return shouldRun;\n};\nexport const runSideEffects = (element: HTMLElement): Promise<void[]> => {\n  const sideEffects = sideEffectsMap.get(element) || [];\n  if (sideEffects.length > 0) {\n    return Promise.all(\n      sideEffects\n        .map(effectMapItem => {\n          const { c } = effectMapItem;\n          if (c && shouldEffectRun(effectMapItem)) {\n            return schedule(() => {\n              c();\n              effectMapItem.c = undefined;\n            }, PriorityLevel.USER_BLOCKING);\n          }\n          return undefined;\n        })\n        .filter(p => p)\n    ).then(() =>\n      Promise.all(\n        sideEffects\n          .map(effectMapItem => {\n            const { e, d } = effectMapItem;\n            let shouldRun: boolean = shouldEffectRun(effectMapItem);\n            if (d) {\n              effectMapItem.p = d();\n            }\n            if (shouldRun) {\n              return schedule(() => {\n                const cleanUp = e();\n                if (cleanUp) {\n                  effectMapItem.c = cleanUp;\n                }\n              }, PriorityLevel.USER_BLOCKING);\n            }\n            return undefined;\n          })\n          .filter(p => p)\n      )\n    );\n  } else {\n    return Promise.resolve([]);\n  }\n};\n","import { HTMLResult } from './html';\nimport { render } from './render';\nimport { schedule, PriorityLevel } from './scheduler';\nimport { setUpContext } from './context';\nimport { runSideEffects } from './sideeffects';\nimport { State } from './reactivity';\n\nexport interface ComponentDefinition {\n  render: () => HTMLResult;\n  watch?: State<{}>[];\n}\nexport type Setup = () => ComponentDefinition;\nexport const component = (name: string, setup: Setup) => {\n  customElements.define(\n    name,\n    class extends HTMLElement {\n      private renderQueued: boolean = false;\n      private nextRenderQueued: boolean = false;\n      private render: () => HTMLResult;\n      private watch: State<{}>[] = [];\n      private watchOff: (() => void)[];\n      constructor() {\n        super();\n        this.attachShadow({ mode: 'open' });\n\n        setUpContext(this, () => {\n          const result = setup();\n          this.render = result.render;\n          this.watch = result.watch;\n        });\n      }\n\n      private wasConnected: boolean = false;\n      public connectedCallback() {\n        if (this.isConnected && !this.wasConnected) {\n          this.wasConnected = true;\n          this.performRender();\n          if (this.watch) {\n            this.watchOff = this.watch.map(s =>\n              s.on(() => {\n                this.performRender();\n              })\n            );\n          }\n        }\n      }\n\n      public disconnectedCallback() {\n        if (this.wasConnected) {\n          this.wasConnected = false;\n          if (this.watchOff) {\n            this.watchOff.forEach(s => s());\n            this.watchOff = undefined;\n          }\n        }\n      }\n\n      private performRender() {\n        if (!this.renderQueued) {\n          this.renderQueued = true;\n          schedule(() => {\n            render(this.shadowRoot as any, this.render());\n          }, PriorityLevel.USER_BLOCKING)\n            .then(async () => await runSideEffects(this))\n            .then(() => {\n              this.renderQueued = false;\n              if (this.nextRenderQueued) {\n                this.nextRenderQueued = false;\n                this.performRender();\n              }\n            });\n        } else {\n          this.nextRenderQueued = true;\n        }\n      }\n    }\n  );\n};\n","const isProxyMap: WeakSet<object> = new WeakSet();\nfunction proxify(obj: any, onChange: () => void): any {\n  let initialized = false;\n  let onChangeWrapped = () => {\n    if (initialized) {\n      onChange();\n    }\n  };\n  const proxy = new Proxy(obj as any, {\n    get: (obj, prop) => {\n      if (\n        obj[prop] &&\n        typeof obj[prop] === 'object' &&\n        !isProxyMap.has(obj[prop]) &&\n        prop !== 'on' &&\n        initialized\n      ) {\n        obj[prop] = proxify(obj[prop], onChange);\n      }\n      return obj[prop];\n    },\n    set: (obj, prop, value) => {\n      if (\n        (obj[prop] !== value || !initialized) &&\n        prop !== '__$p' &&\n        prop !== 'on'\n      ) {\n        if (typeof value === 'object' && !isProxyMap.has(obj[prop])) {\n          value = proxify(value, onChangeWrapped);\n        }\n        obj[prop] = value;\n        onChangeWrapped();\n      } else if (prop === 'on') {\n        obj[prop] = value;\n      }\n      return true;\n    },\n  });\n  Object.keys(obj).forEach(key => {\n    proxy[key] = obj[key];\n  });\n  isProxyMap.add(proxy);\n  initialized = true;\n  return proxy;\n}\nexport type State<S extends {} = {}> = S & {\n  on: (listener: () => void) => () => void;\n};\n\nexport const $state = <S extends {} = {}>(\n  initialState: Partial<S> = {}\n): State<S> => {\n  const proxy = proxify(initialState, () => {\n    listeners.forEach(l => l());\n  });\n  let listeners: (() => void)[] = [];\n  proxy.on = (listener: () => void): (() => void) => {\n    listeners.push(listener);\n    return () => {\n      const index = listeners.indexOf(listener);\n      if (index > 1) {\n        listeners.splice(index, 1);\n      }\n    };\n  };\n  return proxy;\n};\n","import { getElement } from './context';\nimport { $state } from './reactivity';\n\nexport const $prop = <T>(name: string, initialValue: T): { value: T } => {\n  const element = getElement() as any;\n  const state = $state({ value: initialValue });\n  Object.defineProperty(element, name, {\n    get: () => state.value,\n    set: (value: any) => {\n      state.value = value;\n    },\n  });\n  return state;\n};\n","import { $state } from './reactivity';\nimport { getElement } from './context';\nimport { sideEffect } from './sideeffects';\n\nconst attributeCallbackMap: WeakMap<\n  HTMLElement,\n  { [key: string]: (() => void)[] }\n> = new Map();\nconst observerMap: WeakMap<HTMLElement, MutationObserver> = new WeakMap();\n\nconst addObserver = (element: HTMLElement): void => {\n  if (!observerMap.has(element)) {\n    const observer = new MutationObserver((mutationsList: MutationRecord[]) => {\n      for (const mutation of mutationsList) {\n        if (mutation.type === 'attributes') {\n          const callbacks =\n            (attributeCallbackMap.get(element) || {})[mutation.attributeName] ||\n            [];\n          callbacks.forEach(cb => cb());\n        }\n      }\n    });\n    observerMap.set(element, observer);\n  }\n};\n\nconst startObserving = (element: HTMLElement) => {\n  if (observerMap.has(element)) {\n    observerMap.get(element).observe(element, { attributes: true });\n  }\n};\n\nconst stopObserving = (element: HTMLElement) => {\n  if (observerMap.has(element)) {\n    observerMap.get(element).disconnect();\n  }\n};\n\nconst observeAttribute = (\n  element: HTMLElement,\n  name: string,\n  cb: () => void\n): void => {\n  if (!attributeCallbackMap.has(element)) {\n    attributeCallbackMap.set(element, {});\n  }\n  if (!attributeCallbackMap.get(element)[name]) {\n    attributeCallbackMap.get(element)[name] = [];\n  }\n  attributeCallbackMap.get(element)[name].push(cb);\n};\n\nexport const $attr = (\n  name: string,\n  initialValue: string = ''\n): { value: string } => {\n  const element = getElement();\n  addObserver(element);\n  observeAttribute(element, name, () => {\n    const value = element.getAttribute(name);\n    if (state.value !== value) {\n      state.value = element.getAttribute(name);\n    }\n  });\n\n  element.setAttribute(name, initialValue);\n\n  const state = $state({ value: element.getAttribute(name) });\n\n  sideEffect(\n    () => {\n      stopObserving(element);\n      element.setAttribute(name, state.value);\n      startObserving(element);\n    },\n    () => [state.value]\n  );\n\n  return state;\n};\n","import { createDirective, DOMUpdateType } from '../directive';\n\nexport const text = createDirective(function*(node: Text, value: string) {\n  for (;;) {\n    const result = yield [\n      {\n        node,\n        value,\n        type: DOMUpdateType.TEXT,\n      },\n    ];\n    value = result[0];\n  }\n});\n","import { createDirective } from '../directive';\nimport { PriorityLevel, schedule } from '../scheduler';\n\nexport const input = createDirective(function*(\n  node: HTMLElement,\n  cb: (value: string) => void\n) {\n  const cbRef = {\n    cb,\n  };\n  node.addEventListener('input', e => {\n    const value: string = (e.target as HTMLInputElement).value;\n    schedule(() => cbRef.cb(value), PriorityLevel.NORMAL);\n  });\n  for (;;) {\n    cbRef.cb = (yield)[0];\n  }\n});\n","import { createDirective } from '../directive';\nimport { PriorityLevel, schedule } from '../scheduler';\n\nexport const on = createDirective(function*(\n  node: HTMLElement,\n  name: string,\n  cb: <E extends Event>(e: E) => void\n) {\n  const cbRef = {\n    cb,\n  };\n  node.addEventListener(name, e => {\n    schedule(() => cbRef.cb(e), PriorityLevel.IMMEDIATE);\n  });\n  for (;;) {\n    cbRef.cb = (yield)[1];\n  }\n});\n","import { createDirective, DOMUpdateType, DOMUpdate } from '../directive';\nimport { HTMLResult, getAttributeMarker } from '../html';\nimport { render } from '../render';\n\nexport function getKey(htmlResult: HTMLResult): string {\n  let id: number = 0;\n  for (const directive of htmlResult.directives) {\n    if ((directive.d.directive as any) === key) {\n      const listNode = htmlResult.template.content.querySelector(\n        `[${getAttributeMarker(id)}]`\n      );\n      if (listNode && !listNode.parentElement) return directive.d.args[0];\n    }\n    id++;\n  }\n  return htmlResult.template.innerHTML;\n}\n\nexport const list = createDirective(function*(\n  node: Text,\n  htmlResults: HTMLResult[]\n) {\n  if (node.nodeType === 3) {\n    const root = document.createDocumentFragment();\n    const start = document.createComment('');\n    root.appendChild(start);\n    const keyToFragmentsMap: Map<\n      string,\n      (DocumentFragment | Node)[]\n    > = new Map();\n    let results: DOMUpdate[] = [\n      {\n        type: DOMUpdateType.REPLACE_NODE,\n        node,\n        newNode: root,\n      },\n    ];\n    let oldKeyOrder: string[] = [];\n    for (;;) {\n      const keyOrder: string[] = htmlResults.map(result => {\n        const key = getKey(result);\n        if (!keyToFragmentsMap.has(key)) {\n          const frag = document.createDocumentFragment();\n          render(frag as any, result);\n          keyToFragmentsMap.set(key, [frag, ...Array.from(frag.childNodes)]);\n        } else {\n          const frag = keyToFragmentsMap.get(key)[0] as DocumentFragment;\n          render(frag as any, result);\n        }\n        return key;\n      });\n      if (oldKeyOrder.join('') !== keyOrder.join('')) {\n        results = results.concat(\n          keyOrder.flatMap(newKey => {\n            const oldIndex = oldKeyOrder.indexOf(newKey);\n            if (oldIndex > -1) {\n              oldKeyOrder.splice(oldIndex, 1);\n            }\n            const [, ...children] = keyToFragmentsMap.get(newKey);\n            return children.map(child => {\n              return {\n                type: DOMUpdateType.INSERT_BEFORE,\n                node: start,\n                newNode: child,\n              } as DOMUpdate;\n            });\n          })\n        );\n        results = results.concat(\n          oldKeyOrder.flatMap(oldKey => {\n            const [, ...children] = keyToFragmentsMap.get(oldKey);\n            keyToFragmentsMap.delete(oldKey);\n            return children.map(child => {\n              return {\n                type: DOMUpdateType.REMOVE,\n                node: child,\n              } as DOMUpdate;\n            });\n          })\n        );\n        console.log(results);\n      }\n      oldKeyOrder = keyOrder;\n      htmlResults = (yield results)[0];\n      results = [];\n    }\n  }\n});\n\nexport const key = createDirective(function*(_node: Text, _keyName: string) {});\nconsole.log(key);\n","export { html, HTMLResult } from './html';\nexport { render } from './render';\nexport { sub } from './directives/sub';\nexport { component } from './component';\nexport { $prop } from './properties';\nexport { $attr } from './attributes';\nexport { sideEffect } from './sideeffects';\nexport { $state } from './reactivity';\nexport { Directive, createDirective } from './directive';\nexport { text } from './directives/text';\nexport { input } from './directives/input';\nexport { on } from './directives/on';\nexport { list, key } from './directives/list';\nexport { getElement } from './context';\n","import {\n  html,\n  $attr,\n  text,\n  on,\n  input,\n  $state,\n  $prop,\n  getElement,\n  sideEffect,\n  component,\n  list,\n  sub,\n  key,\n} from '../dist/src/index.js';\n\nfunction shuffle(a) {\n  var j, x, i;\n  for (i = a.length - 1; i > 0; i--) {\n    j = Math.floor(Math.random() * (i + 1));\n    x = a[i];\n    a[i] = a[j];\n    a[j] = x;\n  }\n  return a;\n}\n// this is (currently) how you define a component\ncomponent('test-component', () => {\n  // this method is the \"setup\" of the component\n  // it will only run once!\n\n  // $state creates a reactive object\n  // any changes to the object (even nested) will trigger a re-render\n  const $s = $state({ inputValue: '', swap: true, keys: [1, 2, 3, 4] });\n  const $test = $attr('test');\n  const $toast = $prop('toast', '');\n\n  sideEffect(\n    () => {\n      $test.value = $s.inputValue;\n      $toast.value = $s.inputValue;\n      return () => {};\n    },\n    () => [$s.inputValue]\n  ); // only runs when values in array change\n\n  console.log(getElement());\n\n  function shuffleKeys() {\n    const keys = [...$s.keys];\n    $s.keys = shuffle(keys);\n  }\n\n  return {\n    watch: [$s, $test, $toast],\n    render: () => {\n      return html`\n        <div>\n          <div>input value: ${text($s.inputValue)}</div>\n          <div>test attribute value: ${text($test.value)}</div>\n          <div>toast prop value: ${text($toast.value)}</div>\n          <input\n            id=\"in\"\n            type=\"text\"\n            ${input(value => {\n              $s.inputValue = value; // simply re-assign inputValue to re-render\n            })}\n          />\n          <br />\n          ${sub(\n            $s.swap\n              ? html`\n                  <div>this text</div>\n                `\n              : html`\n                  <div>can be changed</div>\n                  <div>just like this</div>\n                `\n          )}\n          <button\n            ${on('click', () => {\n              $s.swap = !$s.swap;\n            })}\n          >\n            swap\n          </button>\n          <br /><br />\n          ${list([\n            ...$s.keys.map(\n              k => html`\n                <div ${key(k + '')}>${text(`key: ${k}`)}</div>\n              `\n            ),\n            html`\n              <div>keyless</div>\n            `,\n          ])}\n          <button ${on('click', () => shuffleKeys())}>shuffle</button>\n        </div>\n      `;\n    },\n  };\n});\n"]}