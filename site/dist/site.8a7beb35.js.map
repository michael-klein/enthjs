{"version":3,"sources":["node_modules/goober/dist/goober.module.js","../../src/directive.ts","../../../src/directives/clss.ts","../../src/html.ts","../../src/scheduler.ts","../../src/render.ts","../../../src/directives/sub.ts","../../src/misc.ts","../../src/context.ts","../../src/sideeffects.ts","../../src/component.ts","../../src/reactivity.ts","../../src/properties.ts","../../src/attributes.ts","../../../src/directives/text.ts","../../../src/directives/input.ts","../../../src/directives/on.ts","../../../src/directives/list.ts","../../src/index.ts","utils.ts","components/nav_bar.ts","components/container.ts","components/intro.ts","index.ts"],"names":["r","data","e","t","querySelector","self","_goober","document","head","appendChild","createElement","innerHTML","id","firstChild","a","n","c","i","test","JSON","stringify","replace","o","u","s","toLowerCase","charCodeAt","f","split","reduce","indexOf","exec","shift","unshift","slice","call","props","className","p","map","arguments","target","g","l","bind","Object","assign","apply"],"mappings":"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","file":"site.8a7beb35.js","sourceRoot":"..","sourcesContent":["var r={data:\"\"},e=function(e){try{var t=e?e.querySelector(\"#_goober\"):self._goober;return t||((t=(e||document.head).appendChild(document.createElement(\"style\"))).innerHTML=\" \",t.id=\"_goober\"),t.firstChild}catch(r){}return r},t=function(r){var t=e(r),a=t.data;return t.data=\"\",a},a=/(?:([a-z0-9-%@]+) *:? *([^{;]+?);|([^;}{]*?) +{)|(})/gi,n=/\\/\\*.*?\\*\\/|\\s{2,}|\\n/gm,c=function(r,e,t){var a=\"\",n=\"\",i=\"\";if(/^@[k|f]/.test(t))return t+JSON.stringify(r).replace(/\",\"/g,\";\").replace(/\"|,\"/g,\"\").replace(/:{/g,\"{\");for(var o in r){var u=r[o];if(\"object\"==typeof u){var s=e+\" \"+o;/&/g.test(o)&&(s=o.replace(/&/g,e)),\"@\"==o[0]&&(s=e),n+=c(u,s,s==e?o:t||\"\")}else/^@i/.test(o)?i=o+\" \"+u+\";\":a+=o.replace(/[A-Z]/g,\"-$&\").toLowerCase()+\":\"+u+\";\"}if(a.charCodeAt(0)){var f=e+\"{\"+a+\"}\";return t?n+t+\"{\"+f+\"}\":i+f+n}return i+n},i={c:0},o=function(r,e,t,o){var u=JSON.stringify(r),s=i[u]||(i[u]=t?\"\":\".go\"+u.split(\"\").reduce(function(r,e){return r+e.charCodeAt(0)|8},4));return function(r,e,t){e.data.indexOf(r)<0&&(e.data=t?r+e.data:e.data+r)}(i[s]||(i[s]=c(r[0]?function(r){for(var e,t=[{}];e=a.exec(r.replace(n,\"\"));)e[4]&&t.shift(),e[3]?t.unshift(t[0][e[3]]={}):e[4]||(t[0][e[1]]=e[2]);return t[0]}(r):r,s)),e,o),s.slice(1)},u=function(r,e,t){return r.reduce(function(r,a,n){var c=e[n];if(c&&c.call){var i=c(t),o=i&&i.props&&i.props.className||/^go/.test(i)&&i;c=o?\".\"+o:i&&i.props?\"\":i}return r+a+(c||\"\")},\"\")};function s(r){var t=this||{},a=r.call?r(t.p):r;return o(a.map?u(a,[].slice.call(arguments,1),t.p):a,e(t.target),t.g,t.o)}var f,l=s.bind({g:1}),p=function(r){return f=r};function g(r){var e=this||{};return function(){var t=arguments;return function(a){var n=e.p=Object.assign({},a),c=n.className;return e.o=/\\s*go[0-9]+/g.test(c),n.className=s.apply(e,t)+(c?\" \"+c:\"\"),f(r,n)}}}export{g as styled,p as setPragma,t as extractCss,s as css,l as glob};\n","export interface DOMUpdate {\n  node: Node;\n  newNode?: Node;\n  type: DOMUpdateType;\n  value?: string;\n  name?: string;\n}\nexport enum DOMUpdateType {\n  TEXT,\n  REPLACE_NODE,\n  ADD_NODE,\n  INSERT_BEFORE,\n  REMOVE,\n  ADD_CLASS,\n  REMOVE_CLASS,\n}\n\nexport type DirectiveGenerator<Args extends any[] = any[]> = Generator<\n  DOMUpdate[] | Promise<DOMUpdate[]> | void,\n  void,\n  Args\n>;\n\nexport type DirectiveGeneratorFactory<\n  N extends Node = Node,\n  Args extends any[] = any[]\n> = (node: N, ...initialArgs: Args) => DirectiveGenerator<Args>;\nexport interface DirectiveResult<\n  N extends Node = Node,\n  Args extends any[] = any[]\n> {\n  factory: DirectiveGeneratorFactory<N, Args>;\n  args: Args;\n  directive: Directive;\n}\nexport type Directive<N extends Node = Node, Args extends any[] = any[]> = (\n  ...args: Args\n) => DirectiveResult<N, Args>;\nexport const IS_DIRECTIVE = Symbol('directive');\nexport function createDirective<\n  Args extends any[],\n  N extends Node = any,\n  F extends DirectiveGeneratorFactory<N, Args> = DirectiveGeneratorFactory<\n    N,\n    Args\n  >\n>(\n  factory: F\n): F extends (node: N, ...initialArgs: infer A) => DirectiveGenerator<any>\n  ? Directive<N, A>\n  : never {\n  return ((factory: F) => {\n    const directive = function(...args: Args) {\n      return {\n        is: IS_DIRECTIVE,\n        factory,\n        args,\n        directive,\n      };\n    } as any;\n    return directive;\n  })(factory);\n}\n","import { createDirective, DOMUpdate, DOMUpdateType } from '../directive';\n\nexport const clss = createDirective(function*(node: Node, classes: string) {\n  if (node instanceof HTMLElement) {\n    let oldClasses: string[] = [];\n    for (;;) {\n      const result: DOMUpdate[] = [];\n      oldClasses.forEach(oldCls =>\n        result.push({\n          type: DOMUpdateType.REMOVE_CLASS,\n          node,\n          value: oldCls,\n        })\n      );\n      oldClasses = classes.trim().split(' ');\n      oldClasses.forEach(cls =>\n        result.push({\n          type: DOMUpdateType.ADD_CLASS,\n          node,\n          value: cls,\n        })\n      );\n      classes = (yield result)[0];\n    }\n  }\n});\n","import { IS_DIRECTIVE, DirectiveResult } from './directive';\n\nconst isLetter = (c: string): boolean => {\n  return c.toLowerCase() != c.toUpperCase();\n};\n\nexport enum DirectiveType {\n  TEXT,\n  ATTRIBUTE,\n  ATTRIBUTE_VALUE,\n}\nexport interface DirectiveData {\n  d: DirectiveResult;\n  t?: DirectiveType;\n  a?: string;\n}\nconst insertAttributeMarker = (\n  marker: string,\n  si: number,\n  appendedStatic: string\n): string => {\n  while (si++) {\n    const char = appendedStatic.charAt(si);\n    if (!char) {\n      break;\n    }\n    if (char === ' ') {\n      return (\n        appendedStatic.slice(0, si) + ' ' + marker + appendedStatic.slice(si)\n      );\n    }\n  }\n  return appendedStatic;\n};\nexport const getTextMarker = (id: number): string => {\n  return `tm-${id}`;\n};\nexport const getAttributeMarker = (id: number): string => {\n  return `data-am-${id}`;\n};\nexport interface HTMLResult {\n  template: HTMLTemplateElement;\n  directives: DirectiveData[];\n  key?: string;\n}\nexport type HTML = typeof html;\nfunction isDirective(thing: any): boolean {\n  return thing.is && thing.is === IS_DIRECTIVE;\n}\nlet resultCache: WeakMap<TemplateStringsArray, HTMLResult> = new WeakMap();\nexport const html = (\n  staticParts: TemplateStringsArray,\n  ...dynamicParts: any[]\n): HTMLResult => {\n  let result: HTMLResult = resultCache.get(staticParts);\n  if (!result) {\n    let appendedStatic: string = '';\n    const directives: DirectiveData[] = [];\n    for (let i = 0; i < dynamicParts.length; i++) {\n      const dynamicPart = dynamicParts[i];\n      const staticPart = staticParts[i];\n      appendedStatic += staticPart;\n      if (!isDirective(dynamicPart)) {\n        appendedStatic += dynamicPart;\n        continue;\n      }\n      let id =\n        directives.push({\n          d: dynamicPart,\n        }) - 1;\n      let si = appendedStatic.length + 1;\n      let attributeValueMode = false;\n      let attributeMode = false;\n      let attributeNameFound = false;\n      let attributeName = '';\n      while (si--) {\n        const char = appendedStatic.charAt(si);\n        const nextChar = appendedStatic.charAt(si - 1);\n        const nextNextChar = appendedStatic.charAt(si - 2);\n        if (char === '>' || si === 0) {\n          let marker = getTextMarker(id);\n          appendedStatic += `<${marker}>&zwnj;</${marker}>`;\n          directives[id].t = DirectiveType.TEXT;\n          break;\n        }\n        if (\n          char === '\"' &&\n          nextChar === '=' &&\n          isLetter(nextNextChar) &&\n          !attributeMode\n        ) {\n          attributeValueMode = true;\n          continue;\n        }\n        if (char === '\"' && nextNextChar !== '=' && !attributeValueMode) {\n          attributeValueMode = false;\n          attributeMode = true;\n          continue;\n        }\n        if (\n          attributeValueMode &&\n          char !== '\"' &&\n          char !== '=' &&\n          !attributeNameFound\n        ) {\n          if (char !== ' ') {\n            attributeName = char + attributeName;\n          } else {\n            attributeNameFound = true;\n          }\n        }\n        if (char === '<' && attributeValueMode) {\n          appendedStatic = insertAttributeMarker(\n            getAttributeMarker(id),\n            si,\n            appendedStatic\n          );\n          directives[id].t = DirectiveType.ATTRIBUTE_VALUE;\n          directives[id].a = attributeName;\n          if (appendedStatic[appendedStatic.length - 1] === ' ') {\n            appendedStatic = appendedStatic.slice(0, appendedStatic.length - 1);\n          }\n          break;\n        }\n        if (char === '<' && !attributeValueMode) {\n          appendedStatic = insertAttributeMarker(\n            getAttributeMarker(id),\n            si,\n            appendedStatic\n          );\n          directives[id].t = DirectiveType.ATTRIBUTE;\n          break;\n        }\n      }\n    }\n    appendedStatic += staticParts[staticParts.length - 1];\n    const template = document.createElement('template');\n    template.innerHTML = appendedStatic.trim();\n    result = {\n      template,\n      directives,\n    };\n  } else {\n    let directiveIndex: number = 0;\n    result = {\n      ...result,\n      directives: result.directives.map(directive => {\n        const { a, t } = directive;\n        return {\n          a,\n          t,\n          d: undefined,\n        };\n      }),\n    };\n    dynamicParts.forEach((value: any) => {\n      if (isDirective(value)) {\n        result.directives[directiveIndex].d = value;\n        directiveIndex++;\n      }\n    });\n  }\n  resultCache.set(staticParts, result);\n  return result;\n};\n","export enum PriorityLevel {\n  IMMEDIATE = 0, //synchronous\n  USER_BLOCKING = 250, //.25s timeout\n  NORMAL = 5000, // 5s timeout\n  LOW = 10000, // 10s timeout\n  IDLE = 99999999, // no timeout (run only when nothing else is scheduled)\n}\ntype ScheduledJob = [() => void, number];\nlet scheduledJobs: ScheduledJob[] = [];\nlet schedulerRunning: boolean = false;\nconst MAX_ELAPSED: number = 17;\nconst processJobQueue = (\n  queue: ScheduledJob[],\n  now: number\n): ScheduledJob[] => {\n  let index = 0;\n  for (let length = queue.length; index < length; index++) {\n    const totalElapsed: number = Date.now() - now;\n    const [cb, latestEndTime] = queue[index];\n    if (now >= latestEndTime || totalElapsed < MAX_ELAPSED) {\n      cb();\n    } else {\n      break;\n    }\n  }\n  return queue.slice(index);\n};\nconst processScheduledJobs = () => {\n  const now: number = Date.now();\n  scheduledJobs = processJobQueue(\n    scheduledJobs.sort((a, b) => (a[1] < b[1] ? -1 : 1)),\n    now\n  );\n  if (scheduledJobs.length > 0) {\n    requestAnimationFrame(processScheduledJobs);\n  } else {\n    schedulerRunning = false;\n  }\n};\nexport const schedule = (\n  cb: () => void,\n  priority: PriorityLevel = PriorityLevel.NORMAL\n): Promise<void> => {\n  if (priority === PriorityLevel.IMMEDIATE) {\n    cb();\n  } else {\n    return new Promise(resolve => {\n      scheduledJobs.push([\n        () => {\n          cb();\n          resolve();\n        },\n        Date.now() + priority,\n      ]);\n      if (!schedulerRunning) {\n        requestAnimationFrame(processScheduledJobs);\n        schedulerRunning = true;\n      }\n    });\n  }\n  return Promise.resolve();\n};\nexport type Schedule = typeof schedule;\n","import {\n  HTMLResult,\n  DirectiveType,\n  getTextMarker,\n  getAttributeMarker,\n} from './html';\nimport { DirectiveGenerator, DOMUpdate, DOMUpdateType } from './directive';\nimport { schedule } from './scheduler';\n\nconst renderedNodesMap: WeakMap<HTMLElement, Node[]> = new WeakMap();\nexport const clear = (container: HTMLElement) => {\n  if (renderedNodesMap.has(container)) {\n    renderedNodesMap\n      .get(container)\n      .forEach(node => container.removeChild(node));\n    renderedNodesMap.delete(container);\n  }\n};\nconst generatorMap: WeakMap<HTMLElement, DirectiveGenerator[]> = new WeakMap();\nexport const render = (\n  container: HTMLElement,\n  htmlResult: HTMLResult\n): void => {\n  let fragment: DocumentFragment;\n  if (!renderedNodesMap.has(container)) {\n    const generators: DirectiveGenerator[] = [];\n    generatorMap.set(container, generators);\n    fragment = htmlResult.template.content.cloneNode(true) as DocumentFragment;\n    htmlResult.directives.forEach((directiveData, id) => {\n      switch (directiveData.t) {\n        case DirectiveType.TEXT:\n          const placeholder = fragment.querySelector(getTextMarker(id));\n          const textNode = placeholder.firstChild;\n          generators[id] = directiveData.d.factory(\n            textNode,\n            ...directiveData.d.args\n          );\n          placeholder.parentElement.replaceChild(textNode, placeholder);\n          break;\n        case DirectiveType.ATTRIBUTE:\n        case DirectiveType.ATTRIBUTE_VALUE:\n          const marker = getAttributeMarker(id);\n          const node = fragment.querySelector(`[${marker}]`);\n          generators[id] = directiveData.d.factory(\n            node,\n            ...directiveData.d.args\n          );\n          node.removeAttribute(marker);\n      }\n    });\n    renderedNodesMap.set(container, Array.from(fragment.childNodes));\n  }\n\n  const generators: DirectiveGenerator[] = generatorMap.get(container);\n  htmlResult.directives.forEach(async (directiveData, id) => {\n    const result = generators[id].next(directiveData.d.args);\n    if (result.value) {\n      const domUpdate: DOMUpdate[] = await result.value;\n      schedule(() => {\n        domUpdate.forEach(d => {\n          switch (d.type) {\n            case DOMUpdateType.TEXT:\n              d.node.textContent = d.value;\n              break;\n            case DOMUpdateType.ADD_NODE:\n              d.node.appendChild(d.newNode);\n              break;\n            case DOMUpdateType.REPLACE_NODE:\n              d.node.parentElement.replaceChild(d.newNode, d.node);\n              break;\n            case DOMUpdateType.INSERT_BEFORE:\n              d.node.parentElement.insertBefore(d.newNode, d.node);\n              break;\n            case DOMUpdateType.REMOVE:\n              d.node.parentElement.removeChild(d.node);\n              break;\n            case DOMUpdateType.ADD_CLASS:\n              (d.node as HTMLElement).classList.add(d.value);\n              break;\n            case DOMUpdateType.REMOVE_CLASS:\n              (d.node as HTMLElement).classList.remove(d.value);\n              break;\n          }\n        });\n      });\n    }\n  });\n  if (fragment) {\n    container.appendChild(fragment);\n  }\n};\n","import { createDirective, DOMUpdateType, DOMUpdate } from '../directive';\nimport { HTMLResult } from '../html';\nimport { render } from '../render';\n\nexport const sub = createDirective(function*(\n  node: Text,\n  htmlResult: HTMLResult\n) {\n  if (node.nodeType === 3) {\n    const start = document.createComment('');\n    let result: DOMUpdate[] = [\n      {\n        type: DOMUpdateType.REPLACE_NODE,\n        node,\n        newNode: start as any,\n      },\n    ];\n    let prevTemplate: HTMLTemplateElement;\n    let prevFrag: DocumentFragment;\n    let prevChildren: Node[] = [];\n    for (;;) {\n      if (prevTemplate === htmlResult.template) {\n        render(prevFrag as any, htmlResult);\n      } else {\n        const frag = document.createDocumentFragment();\n        render(frag as any, htmlResult);\n        prevChildren.forEach(child => {\n          result.push({\n            type: DOMUpdateType.REMOVE,\n            node: child,\n          });\n        });\n        prevChildren = [];\n        frag.childNodes.forEach(child => {\n          prevChildren.push(child);\n          result.push({\n            type: DOMUpdateType.INSERT_BEFORE,\n            node: start,\n            newNode: child,\n          });\n        });\n        prevTemplate = htmlResult.template;\n        prevFrag = frag;\n      }\n      htmlResult = (yield result)[0];\n      result = [];\n    }\n  }\n});\n","export const getOnlySetupError = (subject: string): string =>\n  `${subject} can only be used during setup!`;\n","import { getOnlySetupError } from './misc';\n\nconst global: { __$c: HTMLElement } = window as any;\n\nexport const setUpContext = (context: HTMLElement, cb: () => void): void => {\n  global.__$c = context;\n  cb();\n  global.__$c = undefined;\n};\n\nexport const getElement = (): HTMLElement => {\n  if (global.__$c) {\n    return global.__$c;\n  } else {\n    throw getOnlySetupError('getElement');\n  }\n};\n","import { getElement } from './context';\nimport { schedule, PriorityLevel } from './scheduler';\n\nexport type CleanUp = () => void;\nexport type SideEffect = () => void | CleanUp;\ninterface SideEffectsMapItem {\n  e: SideEffect;\n  d?: () => any[];\n  p?: any[];\n  c?: CleanUp;\n}\nconst sideEffectsMap: WeakMap<\n  HTMLElement,\n  SideEffectsMapItem[]\n> = new WeakMap();\n\nexport const sideEffect = (effect: () => void, dependencies?: () => any[]) => {\n  const element = getElement();\n  sideEffectsMap.set(\n    element,\n    (sideEffectsMap.get(element) || []).concat({\n      e: effect,\n      d: dependencies,\n    })\n  );\n};\nconst shouldEffectRun = (effectMapItem: SideEffectsMapItem): boolean => {\n  const { d, p } = effectMapItem;\n  let shouldRun: boolean = true;\n  if (d) {\n    const deps = d();\n    if (\n      p &&\n      (deps === p ||\n        (deps.length === p.length &&\n          deps.findIndex((dep, index) => p[index] !== dep))) === -1\n    ) {\n      shouldRun = false;\n    }\n  }\n  return shouldRun;\n};\nexport const runSideEffects = (element: HTMLElement): Promise<void[]> => {\n  const sideEffects = sideEffectsMap.get(element) || [];\n  if (sideEffects.length > 0) {\n    return Promise.all(\n      sideEffects\n        .map(effectMapItem => {\n          const { c } = effectMapItem;\n          if (c && shouldEffectRun(effectMapItem)) {\n            return schedule(() => {\n              c();\n              effectMapItem.c = undefined;\n            }, PriorityLevel.USER_BLOCKING);\n          }\n          return undefined;\n        })\n        .filter(p => p)\n    ).then(() =>\n      Promise.all(\n        sideEffects\n          .map(effectMapItem => {\n            const { e, d } = effectMapItem;\n            let shouldRun: boolean = shouldEffectRun(effectMapItem);\n            if (d) {\n              effectMapItem.p = d();\n            }\n            if (shouldRun) {\n              return schedule(() => {\n                const cleanUp = e();\n                if (cleanUp) {\n                  effectMapItem.c = cleanUp;\n                }\n              }, PriorityLevel.USER_BLOCKING);\n            }\n            return undefined;\n          })\n          .filter(p => p)\n      )\n    );\n  } else {\n    return Promise.resolve([]);\n  }\n};\n","import { HTMLResult } from './html';\nimport { render } from './render';\nimport { schedule, PriorityLevel } from './scheduler';\nimport { setUpContext } from './context';\nimport { runSideEffects } from './sideeffects';\nimport { State } from './reactivity';\n\nexport interface ComponentDefinition {\n  render: () => HTMLResult;\n  watch?: State<{}>[];\n}\nexport type Setup = () => ComponentDefinition;\nexport const component = (name: string, setup: Setup) => {\n  customElements.define(\n    name,\n    class extends HTMLElement {\n      private renderQueued: boolean = false;\n      private nextRenderQueued: boolean = false;\n      private render: () => HTMLResult;\n      private watch: State<{}>[] = [];\n      private watchOff: (() => void)[];\n      constructor() {\n        super();\n        this.attachShadow({ mode: 'open' });\n        setUpContext(this, () => {\n          const result = setup();\n          this.render = result.render;\n          this.watch = result.watch;\n        });\n      }\n\n      private wasConnected: boolean = false;\n      public connectedCallback() {\n        if (this.isConnected && !this.wasConnected) {\n          this.wasConnected = true;\n          this.performRender();\n          if (this.watch) {\n            this.watchOff = this.watch.map(s =>\n              s.on(() => {\n                this.performRender();\n              })\n            );\n          }\n        }\n      }\n\n      public disconnectedCallback() {\n        if (this.wasConnected) {\n          this.wasConnected = false;\n          if (this.watchOff) {\n            this.watchOff.forEach(s => s());\n            this.watchOff = undefined;\n          }\n        }\n      }\n\n      private performRender() {\n        if (!this.renderQueued) {\n          this.renderQueued = true;\n          schedule(() => {\n            render(this.shadowRoot as any, this.render());\n          }, PriorityLevel.USER_BLOCKING)\n            .then(async () => await runSideEffects(this))\n            .then(() => {\n              this.renderQueued = false;\n              if (this.nextRenderQueued) {\n                this.nextRenderQueued = false;\n                this.performRender();\n              }\n            });\n        } else {\n          this.nextRenderQueued = true;\n        }\n      }\n    }\n  );\n};\n","const isProxyMap: WeakSet<object> = new WeakSet();\nfunction proxify(obj: any, onChange: () => void): any {\n  let initialized = false;\n  let onChangeWrapped = () => {\n    if (initialized) {\n      onChange();\n    }\n  };\n  const proxy = new Proxy(obj as any, {\n    get: (obj, prop) => {\n      if (\n        obj[prop] &&\n        typeof obj[prop] === 'object' &&\n        !isProxyMap.has(obj[prop]) &&\n        prop !== 'on' &&\n        initialized\n      ) {\n        obj[prop] = proxify(obj[prop], onChange);\n      }\n      return obj[prop];\n    },\n    set: (obj, prop, value) => {\n      if (\n        (obj[prop] !== value || !initialized) &&\n        prop !== '__$p' &&\n        prop !== 'on'\n      ) {\n        if (typeof value === 'object' && !isProxyMap.has(obj[prop])) {\n          value = proxify(value, onChangeWrapped);\n        }\n        obj[prop] = value;\n        onChangeWrapped();\n      } else if (prop === 'on') {\n        obj[prop] = value;\n      }\n      return true;\n    },\n  });\n  Object.keys(obj).forEach(key => {\n    proxy[key] = obj[key];\n  });\n  isProxyMap.add(proxy);\n  initialized = true;\n  return proxy;\n}\nexport type State<S extends {} = {}> = S & {\n  on: (listener: () => void) => () => void;\n};\n\nexport const $state = <S extends {} = {}>(\n  initialState: Partial<S> = {}\n): State<S> => {\n  const proxy = proxify(initialState, () => {\n    listeners.forEach(l => l());\n  });\n  let listeners: (() => void)[] = [];\n  proxy.on = (listener: () => void): (() => void) => {\n    listeners.push(listener);\n    return () => {\n      const index = listeners.indexOf(listener);\n      if (index > 1) {\n        listeners.splice(index, 1);\n      }\n    };\n  };\n  return proxy;\n};\n","import { getElement } from './context';\nimport { $state } from './reactivity';\n\nexport const $prop = <T>(name: string, initialValue: T): { value: T } => {\n  const element = getElement() as any;\n  const state = $state({ value: initialValue });\n  Object.defineProperty(element, name, {\n    get: () => state.value,\n    set: (value: any) => {\n      state.value = value;\n    },\n  });\n  return state;\n};\n","import { $state } from './reactivity';\nimport { getElement } from './context';\nimport { sideEffect } from './sideeffects';\n\nconst attributeCallbackMap: WeakMap<\n  HTMLElement,\n  { [key: string]: (() => void)[] }\n> = new Map();\nconst observerMap: WeakMap<HTMLElement, MutationObserver> = new WeakMap();\n\nconst addObserver = (element: HTMLElement): void => {\n  if (!observerMap.has(element)) {\n    const observer = new MutationObserver((mutationsList: MutationRecord[]) => {\n      for (const mutation of mutationsList) {\n        if (mutation.type === 'attributes') {\n          const callbacks =\n            (attributeCallbackMap.get(element) || {})[mutation.attributeName] ||\n            [];\n          callbacks.forEach(cb => cb());\n        }\n      }\n    });\n    observerMap.set(element, observer);\n  }\n};\n\nconst startObserving = (element: HTMLElement) => {\n  if (observerMap.has(element)) {\n    observerMap.get(element).observe(element, { attributes: true });\n  }\n};\n\nconst stopObserving = (element: HTMLElement) => {\n  if (observerMap.has(element)) {\n    observerMap.get(element).disconnect();\n  }\n};\n\nconst observeAttribute = (\n  element: HTMLElement,\n  name: string,\n  cb: () => void\n): void => {\n  if (!attributeCallbackMap.has(element)) {\n    attributeCallbackMap.set(element, {});\n  }\n  if (!attributeCallbackMap.get(element)[name]) {\n    attributeCallbackMap.get(element)[name] = [];\n  }\n  attributeCallbackMap.get(element)[name].push(cb);\n};\n\nexport const $attr = (\n  name: string,\n  initialValue: string = ''\n): { value: string } => {\n  const element = getElement();\n  addObserver(element);\n  observeAttribute(element, name, () => {\n    const value = element.getAttribute(name);\n    if (state.value !== value) {\n      state.value = element.getAttribute(name);\n    }\n  });\n\n  element.setAttribute(name, initialValue);\n\n  const state = $state({ value: element.getAttribute(name) });\n\n  sideEffect(\n    () => {\n      stopObserving(element);\n      element.setAttribute(name, state.value);\n      startObserving(element);\n    },\n    () => [state.value]\n  );\n\n  return state;\n};\n","import { createDirective, DOMUpdateType } from '../directive';\n\nexport const text = createDirective(function*(node: Text, value: string) {\n  for (;;) {\n    const result = yield [\n      {\n        node,\n        value,\n        type: DOMUpdateType.TEXT,\n      },\n    ];\n    value = result[0];\n  }\n});\n","import { createDirective } from '../directive';\nimport { PriorityLevel, schedule } from '../scheduler';\n\nexport const input = createDirective(function*(\n  node: HTMLElement,\n  cb: (value: string) => void\n) {\n  const cbRef = {\n    cb,\n  };\n  node.addEventListener('input', e => {\n    const value: string = (e.target as HTMLInputElement).value;\n    schedule(() => cbRef.cb(value), PriorityLevel.NORMAL);\n  });\n  for (;;) {\n    cbRef.cb = (yield)[0];\n  }\n});\n","import { createDirective } from '../directive';\nimport { PriorityLevel, schedule } from '../scheduler';\n\nexport const on = createDirective(function*(\n  node: HTMLElement,\n  name: string,\n  cb: <E extends Event>(e: E) => void\n) {\n  const cbRef = {\n    cb,\n  };\n  node.addEventListener(name, e => {\n    schedule(() => cbRef.cb(e), PriorityLevel.IMMEDIATE);\n  });\n  for (;;) {\n    cbRef.cb = (yield)[1];\n  }\n});\n","import { createDirective, DOMUpdateType, DOMUpdate } from '../directive';\nimport { HTMLResult, getAttributeMarker } from '../html';\nimport { render } from '../render';\n\nexport function getKey(htmlResult: HTMLResult): string {\n  let id: number = 0;\n  for (const directive of htmlResult.directives) {\n    if ((directive.d.directive as any) === key) {\n      const listNode = htmlResult.template.content.querySelector(\n        `[${getAttributeMarker(id)}]`\n      );\n      if (listNode && !listNode.parentElement) return directive.d.args[0];\n    }\n    id++;\n  }\n  return htmlResult.template.innerHTML;\n}\n\nexport const list = createDirective(function*(\n  node: Text,\n  htmlResults: HTMLResult[]\n) {\n  if (node.nodeType === 3) {\n    const root = document.createDocumentFragment();\n    const start = document.createComment('');\n    root.appendChild(start);\n    const keyToFragmentsMap: Map<\n      string,\n      (DocumentFragment | Node)[]\n    > = new Map();\n    let results: DOMUpdate[] = [\n      {\n        type: DOMUpdateType.REPLACE_NODE,\n        node,\n        newNode: root,\n      },\n    ];\n    let oldKeyOrder: string[] = [];\n    for (;;) {\n      const keyOrder: string[] = htmlResults.map(result => {\n        const key = getKey(result);\n        if (!keyToFragmentsMap.has(key)) {\n          const frag = document.createDocumentFragment();\n          render(frag as any, result);\n          keyToFragmentsMap.set(key, [frag, ...Array.from(frag.childNodes)]);\n        } else {\n          const frag = keyToFragmentsMap.get(key)[0] as DocumentFragment;\n          render(frag as any, result);\n        }\n        return key;\n      });\n      if (oldKeyOrder.join('') !== keyOrder.join('')) {\n        results = results.concat(\n          keyOrder.flatMap(newKey => {\n            const oldIndex = oldKeyOrder.indexOf(newKey);\n            if (oldIndex > -1) {\n              oldKeyOrder.splice(oldIndex, 1);\n            }\n            const [, ...children] = keyToFragmentsMap.get(newKey);\n            return children.map(child => {\n              return {\n                type: DOMUpdateType.INSERT_BEFORE,\n                node: start,\n                newNode: child,\n              } as DOMUpdate;\n            });\n          })\n        );\n        results = results.concat(\n          oldKeyOrder.flatMap(oldKey => {\n            const [, ...children] = keyToFragmentsMap.get(oldKey);\n            keyToFragmentsMap.delete(oldKey);\n            return children.map(child => {\n              return {\n                type: DOMUpdateType.REMOVE,\n                node: child,\n              } as DOMUpdate;\n            });\n          })\n        );\n        console.log(results);\n      }\n      oldKeyOrder = keyOrder;\n      htmlResults = (yield results)[0];\n      results = [];\n    }\n  }\n});\n\nexport const key = createDirective(function*(_node: Text, _keyName: string) {});\n","export { clss } from './directives/clss';\nexport { html, HTMLResult } from './html';\nexport { render } from './render';\nexport { sub } from './directives/sub';\nexport { component } from './component';\nexport { $prop } from './properties';\nexport { $attr } from './attributes';\nexport { sideEffect } from './sideeffects';\nexport { $state } from './reactivity';\nexport { Directive, createDirective } from './directive';\nexport { text } from './directives/text';\nexport { input } from './directives/input';\nexport { on } from './directives/on';\nexport { list, key } from './directives/list';\nexport { getElement } from './context';\n","import * as goober from 'goober';\nimport { getElement, clss } from '../dist/src';\n\nexport const getCss = () => {\n  const css = goober.css.bind({ target: getElement().shadowRoot });\n  return (...args) => clss(css.apply(css, args));\n};\n","import {\n  html,\n  $attr,\n  text,\n  on,\n  input,\n  $state,\n  $prop,\n  getElement,\n  sideEffect,\n  component,\n  list,\n  sub,\n  key,\n  clss,\n} from '../../dist/src/index.js';\nimport { getCss } from '../utils.ts';\n\ncomponent('nth-navbar', () => {\n  const css = getCss();\n  return {\n    render: () => {\n      return html`\n        <nav\n          ${css`\n            background: black;\n            color: #f1f2f2;\n            padding-top: 20px;\n            padding-bottom: 20px;\n            font-family: 'Rubik', sans-serif;\n          `}\n        >\n          <nth-container>\n            <div\n              ${css`\n                display: flex;\n              `}\n            >\n              <div\n                ${css`\n                  color: #a2a9a9;\n                  > span {\n                    color: #ea5353;\n                  }\n                `}\n              >\n                e<span>nth</span>-js\n              </div>\n              <div\n                ${css`\n                  display: flex;\n                  flex: auto;\n                  justify-content: flex-end;\n                  letter-spacing: 0.045em;\n                  & > div {\n                    flex: none;\n                    margin-left: 20px;\n                  }\n                `}\n              >\n                <div>Intro</div>\n                <div>Getting started</div>\n                <div>Docs</div>\n                <div>Github</div>\n              </div>\n            </div>\n          </nth-container>\n        </nav>\n      `;\n    },\n  };\n});\n","import {\n  html,\n  $attr,\n  text,\n  on,\n  input,\n  $state,\n  $prop,\n  getElement,\n  sideEffect,\n  component,\n  list,\n  sub,\n  key,\n  clss,\n} from '../../dist/src/index.js';\nimport { getCss } from '../utils.ts';\n\ncomponent('nth-container', () => {\n  const css = getCss();\n  return {\n    render: () => {\n      return html`\n        <div\n          ${css`\n            max-width: 1000px;\n            margin: 0 auto;\n            padding-left: 20px;\n            padding-right: 20px;\n          `}\n        >\n          <slot></slot>\n        </div>\n      `;\n    },\n  };\n});\n","import {\n  html,\n  $attr,\n  text,\n  on,\n  input,\n  $state,\n  $prop,\n  getElement,\n  sideEffect,\n  component,\n  list,\n  sub,\n  key,\n  clss,\n} from '../../dist/src/index.js';\nimport { getCss } from '../utils.ts';\nimport web_window from '../images/web_window2.svg';\ncomponent('nth-intro', () => {\n  const css = getCss();\n  return {\n    render: () => {\n      return html`\n        <div ${css`\n          background: black;\n          padding-top: 50px;\n        `}>\n          <nth-container>\n            <div ${css`\n              display: flex;\n            `}>\n              <div ${css`\n                flex: 1;\n                color: white;\n                font-size: 2.5em;\n                font-family: 'Rubik', sans-serif;\n                display: flex;\n                align-items: center;\n                padding-bottom: 50px;\n              `}> \n                <div ${css`\n                  max-width: 90%;\n                `}>\n                Not just the <span ${css`\n                  color: #ea5353;\n                `}>nth</span> JavaScript framework you found today!\n              </div>\n            </div>\n              <div ${css`\n                flex: 1;\n                overflow: hidden;\n              `}>\n                <img src=\"${web_window}\" ${css`\n        width: 140%;\n        margin-left: -16%;\n      `} />\n              </div>\n            </div>\n          </nth-container>\n        </nav>\n      `;\n    },\n  };\n});\n","import { glob } from 'goober';\n\nglob`\n  @import url('https://fonts.googleapis.com/css?family=Muli:500|Rubik&display=swap');\n  html,\n  body {\n    margin: 0;\n    padding: 0;\n  }\n`;\n\nimport './components/nav_bar.ts';\nimport './components/container.ts';\nimport './components/intro.ts';\n"]}