{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/cpp/cpp.js"],"names":["conf","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","RegExp","end","language","defaultToken","tokenPostfix","token","keywords","operators","symbols","escapes","integersuffix","floatsuffix","encoding","tokenizer","root","next","cases","include","whitespace","comment","doccomment","string","raw"],"mappings":"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","file":"cpp.99ec3fc4.js","sourceRoot":"..","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    comments: {\r\n        lineComment: '//',\r\n        blockComment: ['/*', '*/'],\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '[', close: ']' },\r\n        { open: '{', close: '}' },\r\n        { open: '(', close: ')' },\r\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\r\n        { open: '\"', close: '\"', notIn: ['string'] },\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' },\r\n    ],\r\n    folding: {\r\n        markers: {\r\n            start: new RegExp(\"^\\\\s*#pragma\\\\s+region\\\\b\"),\r\n            end: new RegExp(\"^\\\\s*#pragma\\\\s+endregion\\\\b\")\r\n        }\r\n    }\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.cpp',\r\n    brackets: [\r\n        { token: 'delimiter.curly', open: '{', close: '}' },\r\n        { token: 'delimiter.parenthesis', open: '(', close: ')' },\r\n        { token: 'delimiter.square', open: '[', close: ']' },\r\n        { token: 'delimiter.angle', open: '<', close: '>' }\r\n    ],\r\n    keywords: [\r\n        'abstract',\r\n        'amp',\r\n        'array',\r\n        'auto',\r\n        'bool',\r\n        'break',\r\n        'case',\r\n        'catch',\r\n        'char',\r\n        'class',\r\n        'const',\r\n        'constexpr',\r\n        'const_cast',\r\n        'continue',\r\n        'cpu',\r\n        'decltype',\r\n        'default',\r\n        'delegate',\r\n        'delete',\r\n        'do',\r\n        'double',\r\n        'dynamic_cast',\r\n        'each',\r\n        'else',\r\n        'enum',\r\n        'event',\r\n        'explicit',\r\n        'export',\r\n        'extern',\r\n        'false',\r\n        'final',\r\n        'finally',\r\n        'float',\r\n        'for',\r\n        'friend',\r\n        'gcnew',\r\n        'generic',\r\n        'goto',\r\n        'if',\r\n        'in',\r\n        'initonly',\r\n        'inline',\r\n        'int',\r\n        'interface',\r\n        'interior_ptr',\r\n        'internal',\r\n        'literal',\r\n        'long',\r\n        'mutable',\r\n        'namespace',\r\n        'new',\r\n        'noexcept',\r\n        'nullptr',\r\n        '__nullptr',\r\n        'operator',\r\n        'override',\r\n        'partial',\r\n        'pascal',\r\n        'pin_ptr',\r\n        'private',\r\n        'property',\r\n        'protected',\r\n        'public',\r\n        'ref',\r\n        'register',\r\n        'reinterpret_cast',\r\n        'restrict',\r\n        'return',\r\n        'safe_cast',\r\n        'sealed',\r\n        'short',\r\n        'signed',\r\n        'sizeof',\r\n        'static',\r\n        'static_assert',\r\n        'static_cast',\r\n        'struct',\r\n        'switch',\r\n        'template',\r\n        'this',\r\n        'thread_local',\r\n        'throw',\r\n        'tile_static',\r\n        'true',\r\n        'try',\r\n        'typedef',\r\n        'typeid',\r\n        'typename',\r\n        'union',\r\n        'unsigned',\r\n        'using',\r\n        'virtual',\r\n        'void',\r\n        'volatile',\r\n        'wchar_t',\r\n        'where',\r\n        'while',\r\n        '_asm',\r\n        '_based',\r\n        '_cdecl',\r\n        '_declspec',\r\n        '_fastcall',\r\n        '_if_exists',\r\n        '_if_not_exists',\r\n        '_inline',\r\n        '_multiple_inheritance',\r\n        '_pascal',\r\n        '_single_inheritance',\r\n        '_stdcall',\r\n        '_virtual_inheritance',\r\n        '_w64',\r\n        '__abstract',\r\n        '__alignof',\r\n        '__asm',\r\n        '__assume',\r\n        '__based',\r\n        '__box',\r\n        '__builtin_alignof',\r\n        '__cdecl',\r\n        '__clrcall',\r\n        '__declspec',\r\n        '__delegate',\r\n        '__event',\r\n        '__except',\r\n        '__fastcall',\r\n        '__finally',\r\n        '__forceinline',\r\n        '__gc',\r\n        '__hook',\r\n        '__identifier',\r\n        '__if_exists',\r\n        '__if_not_exists',\r\n        '__inline',\r\n        '__int128',\r\n        '__int16',\r\n        '__int32',\r\n        '__int64',\r\n        '__int8',\r\n        '__interface',\r\n        '__leave',\r\n        '__m128',\r\n        '__m128d',\r\n        '__m128i',\r\n        '__m256',\r\n        '__m256d',\r\n        '__m256i',\r\n        '__m64',\r\n        '__multiple_inheritance',\r\n        '__newslot',\r\n        '__nogc',\r\n        '__noop',\r\n        '__nounwind',\r\n        '__novtordisp',\r\n        '__pascal',\r\n        '__pin',\r\n        '__pragma',\r\n        '__property',\r\n        '__ptr32',\r\n        '__ptr64',\r\n        '__raise',\r\n        '__restrict',\r\n        '__resume',\r\n        '__sealed',\r\n        '__single_inheritance',\r\n        '__stdcall',\r\n        '__super',\r\n        '__thiscall',\r\n        '__try',\r\n        '__try_cast',\r\n        '__typeof',\r\n        '__unaligned',\r\n        '__unhook',\r\n        '__uuidof',\r\n        '__value',\r\n        '__virtual_inheritance',\r\n        '__w64',\r\n        '__wchar_t'\r\n    ],\r\n    operators: [\r\n        '=', '>', '<', '!', '~', '?', ':',\r\n        '==', '<=', '>=', '!=', '&&', '||', '++', '--',\r\n        '+', '-', '*', '/', '&', '|', '^', '%', '<<',\r\n        '>>', '>>>', '+=', '-=', '*=', '/=', '&=', '|=',\r\n        '^=', '%=', '<<=', '>>=', '>>>='\r\n    ],\r\n    // we include these common regular expressions\r\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    integersuffix: /(ll|LL|u|U|l|L)?(ll|LL|u|U|l|L)?/,\r\n    floatsuffix: /[fFlL]?/,\r\n    encoding: /u|u8|U|L/,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            // C++ 11 Raw String\r\n            [/@encoding?R\\\"(?:([^ ()\\\\\\t]*))\\(/, { token: 'string.raw.begin', next: '@raw.$1' }],\r\n            // identifiers and keywords\r\n            [/[a-zA-Z_]\\w*/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n            // whitespace\r\n            { include: '@whitespace' },\r\n            // [[ attributes ]].\r\n            [/\\[\\[.*\\]\\]/, 'annotation'],\r\n            [/^\\s*#include/, { token: 'keyword.directive.include', next: '@include' }],\r\n            // Preprocessor directive\r\n            [/^\\s*#\\s*\\w+/, 'keyword'],\r\n            // delimiters and operators\r\n            [/[{}()\\[\\]]/, '@brackets'],\r\n            [/[<>](?!@symbols)/, '@brackets'],\r\n            [/@symbols/, {\r\n                    cases: {\r\n                        '@operators': 'delimiter',\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n            // numbers\r\n            [/\\d*\\d+[eE]([\\-+]?\\d+)?(@floatsuffix)/, 'number.float'],\r\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?(@floatsuffix)/, 'number.float'],\r\n            [/0[xX][0-9a-fA-F']*[0-9a-fA-F](@integersuffix)/, 'number.hex'],\r\n            [/0[0-7']*[0-7](@integersuffix)/, 'number.octal'],\r\n            [/0[bB][0-1']*[0-1](@integersuffix)/, 'number.binary'],\r\n            [/\\d[\\d']*\\d(@integersuffix)/, 'number'],\r\n            [/\\d(@integersuffix)/, 'number'],\r\n            // delimiter: after number because of .\\d floats\r\n            [/[;,.]/, 'delimiter'],\r\n            // strings\r\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\r\n            [/\"/, 'string', '@string'],\r\n            // characters\r\n            [/'[^\\\\']'/, 'string'],\r\n            [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\r\n            [/'/, 'string.invalid']\r\n        ],\r\n        whitespace: [\r\n            [/[ \\t\\r\\n]+/, ''],\r\n            [/\\/\\*\\*(?!\\/)/, 'comment.doc', '@doccomment'],\r\n            [/\\/\\*/, 'comment', '@comment'],\r\n            [/\\/\\/.*$/, 'comment'],\r\n        ],\r\n        comment: [\r\n            [/[^\\/*]+/, 'comment'],\r\n            [/\\*\\//, 'comment', '@pop'],\r\n            [/[\\/*]/, 'comment']\r\n        ],\r\n        //Identical copy of comment above, except for the addition of .doc\r\n        doccomment: [\r\n            [/[^\\/*]+/, 'comment.doc'],\r\n            [/\\*\\//, 'comment.doc', '@pop'],\r\n            [/[\\/*]/, 'comment.doc']\r\n        ],\r\n        string: [\r\n            [/[^\\\\\"]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/\"/, 'string', '@pop']\r\n        ],\r\n        raw: [\r\n            [/(.*)(\\))(?:([^ ()\\\\\\t]*))(\\\")/, {\r\n                    cases: {\r\n                        '$3==$S2': ['string.raw', 'string.raw.end', 'string.raw.end', { token: 'string.raw.end', next: '@pop' }],\r\n                        '@default': ['string.raw', 'string.raw', 'string.raw', 'string.raw']\r\n                    }\r\n                }\r\n            ],\r\n            [/.*/, 'string.raw']\r\n        ],\r\n        include: [\r\n            [/(\\s*)(<)([^<>]*)(>)/, ['', 'keyword.directive.include.begin', 'string.include.identifier', { token: 'keyword.directive.include.end', next: '@pop' }]],\r\n            [/(\\s*)(\")([^\"]*)(\")/, ['', 'keyword.directive.include.begin', 'string.include.identifier', { token: 'keyword.directive.include.end', next: '@pop' }]]\r\n        ]\r\n    },\r\n};\r\n"]}