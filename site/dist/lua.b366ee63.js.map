{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/lua/lua.js"],"names":["conf","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","language","defaultToken","tokenPostfix","keywords","token","operators","symbols","escapes","tokenizer","root","cases","include","whitespace","comment","next","string"],"mappings":"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","file":"lua.b366ee63.js","sourceRoot":"..","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    comments: {\r\n        lineComment: '--',\r\n        blockComment: ['--[[', ']]'],\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' },\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' },\r\n    ]\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.lua',\r\n    keywords: [\r\n        'and', 'break', 'do', 'else', 'elseif',\r\n        'end', 'false', 'for', 'function', 'goto', 'if',\r\n        'in', 'local', 'nil', 'not', 'or',\r\n        'repeat', 'return', 'then', 'true', 'until',\r\n        'while'\r\n    ],\r\n    brackets: [\r\n        { token: 'delimiter.bracket', open: '{', close: '}' },\r\n        { token: 'delimiter.array', open: '[', close: ']' },\r\n        { token: 'delimiter.parenthesis', open: '(', close: ')' }\r\n    ],\r\n    operators: [\r\n        '+', '-', '*', '/', '%', '^', '#', '==', '~=', '<=', '>=', '<', '>', '=',\r\n        ';', ':', ',', '.', '..', '...'\r\n    ],\r\n    // we include these common regular expressions\r\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            // identifiers and keywords\r\n            [/[a-zA-Z_]\\w*/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n            // whitespace\r\n            { include: '@whitespace' },\r\n            // keys\r\n            [/(,)(\\s*)([a-zA-Z_]\\w*)(\\s*)(:)(?!:)/, ['delimiter', '', 'key', '', 'delimiter']],\r\n            [/({)(\\s*)([a-zA-Z_]\\w*)(\\s*)(:)(?!:)/, ['@brackets', '', 'key', '', 'delimiter']],\r\n            // delimiters and operators\r\n            [/[{}()\\[\\]]/, '@brackets'],\r\n            [/@symbols/, {\r\n                    cases: {\r\n                        '@operators': 'delimiter',\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n            // numbers\r\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\r\n            [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, 'number.hex'],\r\n            [/\\d+?/, 'number'],\r\n            // delimiter: after number because of .\\d floats\r\n            [/[;,.]/, 'delimiter'],\r\n            // strings: recover on non-terminated strings\r\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\r\n            [/'([^'\\\\]|\\\\.)*$/, 'string.invalid'],\r\n            [/\"/, 'string', '@string.\"'],\r\n            [/'/, 'string', '@string.\\''],\r\n        ],\r\n        whitespace: [\r\n            [/[ \\t\\r\\n]+/, ''],\r\n            [/--\\[([=]*)\\[/, 'comment', '@comment.$1'],\r\n            [/--.*$/, 'comment'],\r\n        ],\r\n        comment: [\r\n            [/[^\\]]+/, 'comment'],\r\n            [/\\]([=]*)\\]/, {\r\n                    cases: {\r\n                        '$1==$S2': { token: 'comment', next: '@pop' },\r\n                        '@default': 'comment'\r\n                    }\r\n                }],\r\n            [/./, 'comment']\r\n        ],\r\n        string: [\r\n            [/[^\\\\\"']+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/[\"']/, {\r\n                    cases: {\r\n                        '$#==$S2': { token: 'string', next: '@pop' },\r\n                        '@default': 'string'\r\n                    }\r\n                }]\r\n        ],\r\n    },\r\n};\r\n"]}